

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Wed Mar 19 17:24:04 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    80  0000                     
    81                           	psect	idataBANK0
    82  0021BC                     __pidataBANK0:
    83                           	opt stack 0
    84                           
    85                           ;initializer for i2c_slave_int_handler@F5128
    86  0021BC  01                 	db	1
    87  0021BD  01                 	db	1
    88  0021BE  02                 	db	2
    89  0021BF  03                 	db	3
    90  0021C0  06                 	db	6
    91                           
    92                           ;initializer for i2c_slave_int_handler@F5130
    93  0021C1  03                 	db	3
    94  0021C2  04                 	db	4
    95  0021C3  04                 	db	4
    96  0021C4  00                 	db	0
    97  0021C5  00                 	db	0
    98                           
    99                           ;initializer for i2c_slave_int_handler@F5132
   100  0021C6  9F                 	db	159
   101  0021C7  1F                 	db	31
   102                           
   103                           	psect	idataBANK1
   104  0021E8                     __pidataBANK1:
   105                           	opt stack 0
   106                           
   107                           ;initializer for main@F5212
   108  0021E8  01                 	db	1
   109  0021E9  02                 	db	2
   110                           
   111                           ;initializer for main@F5214
   112  0021EA  9F                 	db	159
   113  0021EB  1F                 	db	31
   114  0000                     _ADCON0	set	4034
   115  0000                     _ADCON0bits	set	4034
   116  0000                     _ADCON1	set	4033
   117  0000                     _ADCON2	set	4032
   118  0000                     _ADRESH	set	4036
   119  0000                     _INTCON2bits	set	4081
   120  0000                     _INTCONbits	set	4082
   121  0000                     _IPR1bits	set	3999
   122  0000                     _LATA	set	3977
   123  0000                     _LATB	set	3978
   124  0000                     _LATBbits	set	3978
   125  0000                     _OSCCON	set	4051
   126  0000                     _OSCCONbits	set	4051
   127  0000                     _OSCTUNEbits	set	3995
   128  0000                     _PIE1bits	set	3997
   129  0000                     _PIR1bits	set	3998
   130  0000                     _PORTA	set	3968
   131  0000                     _PORTAbits	set	3968
   132  0000                     _RCONbits	set	4048
   133  0000                     _RCREG	set	4014
   134  0000                     _RCSTA	set	4011
   135  0000                     _RCSTAbits	set	4011
   136  0000                     _SPBRG	set	4015
   137  0000                     _SPBRGH	set	4016
   138  0000                     _SSPADD	set	4040
   139  0000                     _SSPBUF	set	4041
   140  0000                     _SSPCON1	set	4038
   141  0000                     _SSPCON1bits	set	4038
   142  0000                     _SSPCON2	set	4037
   143  0000                     _SSPCON2bits	set	4037
   144  0000                     _SSPSTAT	set	4039
   145  0000                     _SSPSTATbits	set	4039
   146  0000                     _T0CON	set	4053
   147  0000                     _T0CONbits	set	4053
   148  0000                     _T1CON	set	4045
   149  0000                     _T1CONbits	set	4045
   150  0000                     _TMR0H	set	4055
   151  0000                     _TMR0L	set	4054
   152  0000                     _TMR1H	set	4047
   153  0000                     _TMR1L	set	4046
   154  0000                     _TRISA	set	3986
   155  0000                     _TRISB	set	3987
   156  0000                     _TRISC	set	3988
   157  0000                     _TRISCbits	set	3988
   158  0000                     _TXREG	set	4013
   159  0000                     _TXSTA	set	4012
   160  0000                     _TXSTAbits	set	4012
   161                           
   162                           	psect	nvCOMRAM
   163  000052                     __pnvCOMRAM:
   164                           	opt stack 0
   165  000052                     _uc_ptr:
   166                           	opt stack 0
   167  000052                     	ds	2
   168                           
   169                           	psect	nvBANK0
   170  0000CD                     __pnvBANK0:
   171                           	opt stack 0
   172  0000CD                     _ic_ptr:
   173                           	opt stack 0
   174  0000CD                     	ds	2
   175                           
   176                           ; #config settings
   177  0000                     
   178                           	psect	cinit
   179  001AD2                     __pcinit:
   180                           	opt stack 0
   181  001AD2                     start_initialization:
   182                           	opt stack 0
   183  001AD2                     __initialization:
   184                           	opt stack 0
   185                           
   186                           ; Clear objects allocated to BANK2 (134 bytes)
   187  001AD2  EE02  F000         	lfsr	0,__pbssBANK2
   188  001AD6  0E86               	movlw	134
   189  001AD8                     clear_0:
   190  001AD8  6AEE               	clrf	postinc0,c
   191  001ADA  06E8               	decf	wreg,f,c
   192  001ADC  E1FD               	bnz	clear_0
   193                           
   194                           ; Clear objects allocated to BANK1 (134 bytes)
   195  001ADE  EE01  F000         	lfsr	0,__pbssBANK1
   196  001AE2  0E86               	movlw	134
   197  001AE4                     clear_1:
   198  001AE4  6AEE               	clrf	postinc0,c
   199  001AE6  06E8               	decf	wreg,f,c
   200  001AE8  E1FD               	bnz	clear_1
   201                           
   202                           ; Clear objects allocated to COMRAM (34 bytes)
   203  001AEA  EE00  F030         	lfsr	0,__pbssCOMRAM
   204  001AEE  0E22               	movlw	34
   205  001AF0                     clear_2:
   206  001AF0  6AEE               	clrf	postinc0,c
   207  001AF2  06E8               	decf	wreg,f,c
   208  001AF4  E1FD               	bnz	clear_2
   209                           
   210                           ; Initialize objects allocated to BANK1 (4 bytes)
   211                           ; load TBLPTR registers with __pidataBANK1
   212  001AF6  0EE8               	movlw	low __pidataBANK1
   213  001AF8  6EF6               	movwf	tblptrl,c
   214  001AFA  0E21               	movlw	high __pidataBANK1
   215  001AFC  6EF7               	movwf	tblptrh,c
   216  001AFE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   217  001B00  6EF8               	movwf	tblptru,c
   218  001B02  EE01  F0EC         	lfsr	0,__pdataBANK1
   219  001B06  EE10 F004          	lfsr	1,4
   220  001B0A                     copy_data0:
   221  001B0A  0009               	tblrd		*+
   222  001B0C  CFF5 FFEE          	movff	tablat,postinc0
   223  001B10  50E5               	movf	postdec1,w,c
   224  001B12  50E1               	movf	fsr1l,w,c
   225  001B14  E1FA               	bnz	copy_data0
   226                           
   227                           ; Initialize objects allocated to BANK0 (12 bytes)
   228                           ; load TBLPTR registers with __pidataBANK0
   229  001B16  0EBC               	movlw	low __pidataBANK0
   230  001B18  6EF6               	movwf	tblptrl,c
   231  001B1A  0E21               	movlw	high __pidataBANK0
   232  001B1C  6EF7               	movwf	tblptrh,c
   233  001B1E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   234  001B20  6EF8               	movwf	tblptru,c
   235  001B22  EE00  F0C1         	lfsr	0,__pdataBANK0
   236  001B26  EE10 F00C          	lfsr	1,12
   237  001B2A                     copy_data1:
   238  001B2A  0009               	tblrd		*+
   239  001B2C  CFF5 FFEE          	movff	tablat,postinc0
   240  001B30  50E5               	movf	postdec1,w,c
   241  001B32  50E1               	movf	fsr1l,w,c
   242  001B34  E1FA               	bnz	copy_data1
   243  001B36                     end_of_initialization:
   244                           	opt stack 0
   245  001B36                     __end_of__initialization:
   246                           	opt stack 0
   247  001B36  0E00               	movlw	low (__Lmediumconst shr (0+16))
   248  001B38  6EF8               	movwf	tblptru,c
   249  001B3A  0100               	movlb	0
   250  001B3C  EF02  F004         	goto	_main	;jump to C main() function
   251                           tblptru	equ	0xFF8
   252                           tblptrh	equ	0xFF7
   253                           tblptrl	equ	0xFF6
   254                           tablat	equ	0xFF5
   255                           postinc0	equ	0xFEE
   256                           wreg	equ	0xFE8
   257                           postdec1	equ	0xFE5
   258                           fsr1l	equ	0xFE1
   259                           
   260                           	psect	bssCOMRAM
   261  000030                     __pbssCOMRAM:
   262                           	opt stack 0
   263  000030                     _adcbuffer:
   264                           	opt stack 0
   265  000030                     	ds	28
   266  00004C                     _UART_timeout:
   267                           	opt stack 0
   268  00004C                     	ds	2
   269  00004E                     timer0_int_handler@F5107:
   270                           	opt stack 0
   271  00004E                     	ds	2
   272  000050                     _MQ_Main_Willing_to_block:
   273                           	opt stack 0
   274  000050                     	ds	1
   275  000051                     _USART_Status:
   276                           	opt stack 0
   277  000051                     	ds	1
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           postdec1	equ	0xFE5
   285                           fsr1l	equ	0xFE1
   286                           
   287                           	psect	dataBANK0
   288  0000C1                     __pdataBANK0:
   289                           	opt stack 0
   290  0000C1                     i2c_slave_int_handler@F5128:
   291                           	opt stack 0
   292  0000C1                     	ds	5
   293  0000C6                     i2c_slave_int_handler@F5130:
   294                           	opt stack 0
   295  0000C6                     	ds	5
   296  0000CB                     i2c_slave_int_handler@F5132:
   297                           	opt stack 0
   298  0000CB                     	ds	2
   299                           tblptru	equ	0xFF8
   300                           tblptrh	equ	0xFF7
   301                           tblptrl	equ	0xFF6
   302                           tablat	equ	0xFF5
   303                           postinc0	equ	0xFEE
   304                           wreg	equ	0xFE8
   305                           postdec1	equ	0xFE5
   306                           fsr1l	equ	0xFE1
   307                           
   308                           	psect	bssBANK1
   309  000100                     __pbssBANK1:
   310                           	opt stack 0
   311  000100                     _ToMainHigh_MQ:
   312                           	opt stack 0
   313  000100                     	ds	67
   314  000143                     _ToMainLow_MQ:
   315                           	opt stack 0
   316  000143                     	ds	67
   317                           tblptru	equ	0xFF8
   318                           tblptrh	equ	0xFF7
   319                           tblptrl	equ	0xFF6
   320                           tablat	equ	0xFF5
   321                           postinc0	equ	0xFEE
   322                           wreg	equ	0xFE8
   323                           postdec1	equ	0xFE5
   324                           fsr1l	equ	0xFE1
   325                           
   326                           	psect	dataBANK1
   327  0001EC                     __pdataBANK1:
   328                           	opt stack 0
   329  0001EC                     main@F5212:
   330                           	opt stack 0
   331  0001EC                     	ds	2
   332  0001EE                     main@F5214:
   333                           	opt stack 0
   334  0001EE                     	ds	2
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           postdec1	equ	0xFE5
   342                           fsr1l	equ	0xFE1
   343                           
   344                           	psect	bssBANK2
   345  000200                     __pbssBANK2:
   346                           	opt stack 0
   347  000200                     _FromMainHigh_MQ:
   348                           	opt stack 0
   349  000200                     	ds	67
   350  000243                     _FromMainLow_MQ:
   351                           	opt stack 0
   352  000243                     	ds	67
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           postdec1	equ	0xFE5
   360                           fsr1l	equ	0xFE1
   361                           
   362                           	psect	cstackBANK1
   363  000186                     __pcstackBANK1:
   364                           	opt stack 0
   365  000186                     ??_SetChanADC:
   366  000186                     ?_in_high_int:
   367                           	opt stack 0
   368  000186                     ?___awmod:
   369                           	opt stack 0
   370  000186                     ?___lwmod:
   371                           	opt stack 0
   372  000186                     i2c_master_send@recvlength:
   373                           	opt stack 0
   374  000186                     i2c_configure_slave@addr:
   375                           	opt stack 0
   376  000186                     OpenADC@config2:
   377                           	opt stack 0
   378  000186                     OpenTimer0@config:
   379                           	opt stack 0
   380  000186                     OpenTimer1@config:
   381                           	opt stack 0
   382  000186                     Delay1KTCYx@unit:
   383                           	opt stack 0
   384  000186                     init_queue@qptr:
   385                           	opt stack 0
   386  000186                     check_msg@qptr:
   387                           	opt stack 0
   388  000186                     init_i2c@ic:
   389                           	opt stack 0
   390  000186                     init_uart_recv@uc:
   391                           	opt stack 0
   392  000186                     uart_trans@data:
   393                           	opt stack 0
   394  000186                     timer0_lthread@tptr:
   395                           	opt stack 0
   396  000186                     init_timer1_lthread@tptr:
   397                           	opt stack 0
   398  000186                     OpenUSART@spbrg:
   399                           	opt stack 0
   400  000186                     ___awmod@dividend:
   401                           	opt stack 0
   402  000186                     ___lwmod@dividend:
   403                           	opt stack 0
   404  000186                     memcpy@d1:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x0
   408  000186                     	ds	1
   409  000187                     OpenADC@portconfig:
   410                           	opt stack 0
   411  000187                     SetChanADC@channel:
   412                           	opt stack 0
   413  000187                     i2c_master_send@msg:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x1
   417  000187                     	ds	1
   418  000188                     ??_OpenUSART:
   419  000188                     ??_OpenADC:
   420  000188                     ??_uart_trans:
   421  000188                     ??_init_queue:
   422  000188                     ??_check_msg:
   423  000188                     ?_in_low_int:
   424                           	opt stack 0
   425  000188                     timer0_lthread@msgtype:
   426                           	opt stack 0
   427  000188                     ___awmod@divisor:
   428                           	opt stack 0
   429  000188                     ___lwmod@divisor:
   430                           	opt stack 0
   431  000188                     memcpy@s1:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x2
   435  000188                     	ds	1
   436  000189                     init_queue@i:
   437                           	opt stack 0
   438  000189                     i2c_master_send@slave_addr:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x3
   442  000189                     	ds	1
   443  00018A                     ??_init_queues:
   444  00018A                     ??_i2c_master_send:
   445  00018A                     ??___awmod:
   446  00018A                     ??___lwmod:
   447  00018A                     ?_in_main:
   448                           	opt stack 0
   449  00018A                     uart_trans@length:
   450                           	opt stack 0
   451  00018A                     OpenADC@config:
   452                           	opt stack 0
   453  00018A                     timer0_lthread@length:
   454                           	opt stack 0
   455  00018A                     memcpy@n:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x4
   459  00018A                     	ds	1
   460  00018B                     OpenUSART@config:
   461                           	opt stack 0
   462  00018B                     ___awmod@counter:
   463                           	opt stack 0
   464  00018B                     ___lwmod@counter:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x5
   468  00018B                     	ds	1
   469  00018C                     ??_block_on_To_msgqueues:
   470  00018C                     i2c_master_send@sendlength:
   471                           	opt stack 0
   472  00018C                     ___awmod@sign:
   473                           	opt stack 0
   474  00018C                     timer0_lthread@msgbuffer:
   475                           	opt stack 0
   476  00018C                     memcpy@d:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x6
   480  00018C                     	ds	2
   481  00018E                     timer0_lthread@msgval:
   482                           	opt stack 0
   483  00018E                     memcpy@s:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x8
   487  00018E                     	ds	2
   488  000190                     send_msg@qptr:
   489                           	opt stack 0
   490  000190                     recv_msg@qptr:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0xA
   494  000190                     	ds	2
   495  000192                     send_msg@length:
   496                           	opt stack 0
   497  000192                     recv_msg@maxlength:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0xC
   501  000192                     	ds	1
   502  000193                     send_msg@msgtype:
   503                           	opt stack 0
   504  000193                     recv_msg@msgtype:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0xD
   508  000193                     	ds	1
   509  000194                     send_msg@data:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0xE
   513  000194                     	ds	1
   514  000195                     recv_msg@data:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0xF
   518  000195                     	ds	1
   519  000196                     ??_send_msg:
   520                           
   521                           ; 0 bytes @ 0x10
   522  000196                     	ds	1
   523  000197                     ??_recv_msg:
   524  000197                     send_msg@tlength:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x11
   528  000197                     	ds	2
   529  000199                     send_msg@slot:
   530                           	opt stack 0
   531  000199                     recv_msg@slot:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x13
   535  000199                     	ds	1
   536  00019A                     send_msg@qmsg:
   537                           	opt stack 0
   538  00019A                     recv_msg@tlength:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x14
   542  00019A                     	ds	2
   543  00019C                     FromMainHigh_sendmsg@msgtype:
   544                           	opt stack 0
   545  00019C                     recv_msg@qmsg:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x16
   549  00019C                     	ds	1
   550  00019D                     FromMainHigh_sendmsg@data:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0x17
   554  00019D                     	ds	1
   555  00019E                     ToMainLow_recvmsg@msgtype:
   556                           	opt stack 0
   557  00019E                     ToMainHigh_recvmsg@msgtype:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x18
   561  00019E                     	ds	1
   562  00019F                     FromMainHigh_sendmsg@length:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x19
   566  00019F                     	ds	1
   567  0001A0                     ToMainLow_recvmsg@data:
   568                           	opt stack 0
   569  0001A0                     ToMainHigh_recvmsg@data:
   570                           	opt stack 0
   571  0001A0                     timer1_lthread@tptr:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x1A
   575  0001A0                     	ds	2
   576  0001A2                     ToMainLow_recvmsg@maxlength:
   577                           	opt stack 0
   578  0001A2                     ToMainHigh_recvmsg@maxlength:
   579                           	opt stack 0
   580  0001A2                     timer1_lthread@msgtype:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x1C
   584  0001A2                     	ds	2
   585  0001A4                     timer1_lthread@length:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x1E
   589  0001A4                     	ds	2
   590  0001A6                     timer1_lthread@msgbuffer:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x20
   594  0001A6                     	ds	2
   595  0001A8                     ??_timer1_lthread:
   596                           
   597                           ; 0 bytes @ 0x22
   598  0001A8                     	ds	1
   599  0001A9                     timer1_lthread@retval:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x23
   603  0001A9                     	ds	1
   604  0001AA                     ??_main:
   605                           
   606                           ; 0 bytes @ 0x24
   607  0001AA                     	ds	2
   608  0001AC                     main@msg:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x26
   612  0001AC                     	ds	2
   613  0001AE                     main@last_reg_recvd:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x28
   617  0001AE                     	ds	1
   618  0001AF                     main@msgbuffer:
   619                           	opt stack 0
   620                           
   621                           ; 11 bytes @ 0x29
   622  0001AF                     	ds	11
   623  0001BA                     main@t0thread_data:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x34
   627  0001BA                     	ds	2
   628  0001BC                     main@motorcomm:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x36
   632  0001BC                     	ds	2
   633  0001BE                     main@t1thread_data:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x38
   637  0001BE                     	ds	2
   638  0001C0                     main@msgtype:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x3A
   642  0001C0                     	ds	1
   643  0001C1                     main@length:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x3B
   647  0001C1                     	ds	1
   648  0001C2                     main@uc:
   649                           	opt stack 0
   650                           
   651                           ; 13 bytes @ 0x3C
   652  0001C2                     	ds	13
   653  0001CF                     main@ic:
   654                           	opt stack 0
   655                           
   656                           ; 29 bytes @ 0x49
   657  0001CF                     	ds	29
   658                           tblptru	equ	0xFF8
   659                           tblptrh	equ	0xFF7
   660                           tblptrl	equ	0xFF6
   661                           tablat	equ	0xFF5
   662                           postinc0	equ	0xFEE
   663                           wreg	equ	0xFE8
   664                           postdec1	equ	0xFE5
   665                           fsr1l	equ	0xFE1
   666                           
   667                           	psect	cstackBANK0
   668  000080                     __pcstackBANK0:
   669                           	opt stack 0
   670  000080                     ??_start_i2c_slave_reply:
   671  000080                     ??i2_uart_trans:
   672  000080                     ?i2_in_low_int:
   673                           	opt stack 0
   674  000080                     ?i2___awmod:
   675                           	opt stack 0
   676  000080                     WriteTimer0@timer:
   677                           	opt stack 0
   678  000080                     i2memcpy@d1:
   679                           	opt stack 0
   680  000080                     i2___awmod@dividend:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x0
   684  000080                     	ds	2
   685  000082                     timer0_int_handler@motorcomm:
   686                           	opt stack 0
   687  000082                     i2memcpy@s1:
   688                           	opt stack 0
   689  000082                     i2___awmod@divisor:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x2
   693  000082                     	ds	2
   694  000084                     i2memcpy@n:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x4
   698  000084                     	ds	2
   699  000086                     i2memcpy@d:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x6
   703  000086                     	ds	2
   704  000088                     i2memcpy@s:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x8
   708  000088                     	ds	2
   709  00008A                     i2send_msg@qptr:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0xA
   713  00008A                     	ds	2
   714  00008C                     i2send_msg@length:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0xC
   718  00008C                     	ds	1
   719  00008D                     i2send_msg@msgtype:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0xD
   723  00008D                     	ds	1
   724  00008E                     i2send_msg@data:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0xE
   728  00008E                     	ds	2
   729  000090                     ??i2_send_msg:
   730                           
   731                           ; 0 bytes @ 0x10
   732  000090                     	ds	1
   733  000091                     i2send_msg@tlength:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x11
   737  000091                     	ds	2
   738  000093                     i2send_msg@slot:
   739                           	opt stack 0
   740                           
   741                           ; 1 bytes @ 0x13
   742  000093                     	ds	1
   743  000094                     i2send_msg@qmsg:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0x14
   747  000094                     	ds	2
   748  000096                     ToMainHigh_sendmsg@msgtype:
   749                           	opt stack 0
   750                           
   751                           ; 1 bytes @ 0x16
   752  000096                     	ds	1
   753  000097                     ToMainHigh_sendmsg@data:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x17
   757  000097                     	ds	2
   758  000099                     ToMainHigh_sendmsg@length:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x19
   762  000099                     	ds	1
   763  00009A                     ??_i2c_slave_int_handler:
   764                           
   765                           ; 0 bytes @ 0x1A
   766  00009A                     	ds	2
   767  00009C                     i2c_slave_int_handler@sensormsg:
   768                           	opt stack 0
   769                           
   770                           ; 5 bytes @ 0x1C
   771  00009C                     	ds	5
   772  0000A1                     i2c_slave_int_handler@motormsg:
   773                           	opt stack 0
   774                           
   775                           ; 5 bytes @ 0x21
   776  0000A1                     	ds	5
   777  0000A6                     i2c_slave_int_handler@motorcomm:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0x26
   781  0000A6                     	ds	2
   782  0000A8                     i2c_slave_int_handler@error_buf:
   783                           	opt stack 0
   784                           
   785                           ; 3 bytes @ 0x28
   786  0000A8                     	ds	3
   787  0000AB                     i2c_slave_int_handler@data_written:
   788                           	opt stack 0
   789                           
   790                           ; 1 bytes @ 0x2B
   791  0000AB                     	ds	1
   792  0000AC                     i2c_slave_int_handler@overrun_error:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x2C
   796  0000AC                     	ds	1
   797  0000AD                     i2c_slave_int_handler@i2c_data:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x2D
   801  0000AD                     	ds	1
   802  0000AE                     i2c_slave_int_handler@msg_to_send:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0x2E
   806  0000AE                     	ds	1
   807  0000AF                     i2c_slave_int_handler@length:
   808                           	opt stack 0
   809                           
   810                           ; 2 bytes @ 0x2F
   811  0000AF                     	ds	2
   812  0000B1                     i2c_slave_int_handler@msg_ready:
   813                           	opt stack 0
   814                           
   815                           ; 1 bytes @ 0x31
   816  0000B1                     	ds	1
   817  0000B2                     i2c_slave_int_handler@data_read:
   818                           	opt stack 0
   819                           
   820                           ; 1 bytes @ 0x32
   821  0000B2                     	ds	1
   822  0000B3                     ??_InterruptHandlerHigh:
   823                           
   824                           ; 0 bytes @ 0x33
   825  0000B3                     	ds	14
   826                           tblptru	equ	0xFF8
   827                           tblptrh	equ	0xFF7
   828                           tblptrl	equ	0xFF6
   829                           tablat	equ	0xFF5
   830                           postinc0	equ	0xFEE
   831                           wreg	equ	0xFE8
   832                           postdec1	equ	0xFE5
   833                           fsr1l	equ	0xFE1
   834                           
   835                           	psect	cstackCOMRAM
   836  000001                     __pcstackCOMRAM:
   837                           	opt stack 0
   838  000001                     ??_uart_trans_int_handler:
   839  000001                     ?i1___awmod:
   840                           	opt stack 0
   841  000001                     ReadUSART@data:
   842                           	opt stack 0
   843  000001                     WriteTimer1@timer1:
   844                           	opt stack 0
   845  000001                     i1memcpy@d1:
   846                           	opt stack 0
   847  000001                     i1___awmod@dividend:
   848                           	opt stack 0
   849                           
   850                           ; 2 bytes @ 0x0
   851  000001                     	ds	2
   852  000003                     WriteTimer1@timer:
   853                           	opt stack 0
   854  000003                     i1memcpy@s1:
   855                           	opt stack 0
   856  000003                     i1___awmod@divisor:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0x2
   860  000003                     	ds	2
   861  000005                     ??i1___awmod:
   862  000005                     i1memcpy@n:
   863                           	opt stack 0
   864                           
   865                           ; 2 bytes @ 0x4
   866  000005                     	ds	1
   867  000006                     i1___awmod@counter:
   868                           	opt stack 0
   869                           
   870                           ; 1 bytes @ 0x5
   871  000006                     	ds	1
   872  000007                     i1___awmod@sign:
   873                           	opt stack 0
   874  000007                     i1memcpy@d:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x6
   878  000007                     	ds	2
   879  000009                     i1memcpy@s:
   880                           	opt stack 0
   881                           
   882                           ; 2 bytes @ 0x8
   883  000009                     	ds	2
   884  00000B                     i1send_msg@qptr:
   885                           	opt stack 0
   886                           
   887                           ; 2 bytes @ 0xA
   888  00000B                     	ds	2
   889  00000D                     i1send_msg@length:
   890                           	opt stack 0
   891                           
   892                           ; 1 bytes @ 0xC
   893  00000D                     	ds	1
   894  00000E                     i1send_msg@msgtype:
   895                           	opt stack 0
   896                           
   897                           ; 1 bytes @ 0xD
   898  00000E                     	ds	1
   899  00000F                     i1send_msg@data:
   900                           	opt stack 0
   901                           
   902                           ; 2 bytes @ 0xE
   903  00000F                     	ds	2
   904  000011                     ??i1_send_msg:
   905                           
   906                           ; 0 bytes @ 0x10
   907  000011                     	ds	1
   908  000012                     i1send_msg@tlength:
   909                           	opt stack 0
   910                           
   911                           ; 2 bytes @ 0x11
   912  000012                     	ds	2
   913  000014                     i1send_msg@slot:
   914                           	opt stack 0
   915                           
   916                           ; 1 bytes @ 0x13
   917  000014                     	ds	1
   918  000015                     i1send_msg@qmsg:
   919                           	opt stack 0
   920                           
   921                           ; 2 bytes @ 0x14
   922  000015                     	ds	2
   923  000017                     ToMainLow_sendmsg@msgtype:
   924                           	opt stack 0
   925                           
   926                           ; 1 bytes @ 0x16
   927  000017                     	ds	1
   928  000018                     ToMainLow_sendmsg@data:
   929                           	opt stack 0
   930                           
   931                           ; 2 bytes @ 0x17
   932  000018                     	ds	2
   933  00001A                     ToMainLow_sendmsg@length:
   934                           	opt stack 0
   935                           
   936                           ; 1 bytes @ 0x19
   937  00001A                     	ds	1
   938  00001B                     ??_uart_recv_int_handler:
   939                           
   940                           ; 0 bytes @ 0x1A
   941  00001B                     	ds	1
   942  00001C                     ??_InterruptHandlerLow:
   943                           
   944                           ; 0 bytes @ 0x1B
   945  00001C                     	ds	17
   946  00002D                     ??i2___awmod:
   947  00002D                     ?i2_in_high_int:
   948                           	opt stack 0
   949  00002D                     handle_start@data_read:
   950                           	opt stack 0
   951  00002D                     start_i2c_slave_reply@msg:
   952                           	opt stack 0
   953  00002D                     WriteTimer0@timer0:
   954                           	opt stack 0
   955  00002D                     i2check_msg@qptr:
   956                           	opt stack 0
   957  00002D                     i2uart_trans@data:
   958                           	opt stack 0
   959                           
   960                           ; 2 bytes @ 0x2C
   961  00002D                     	ds	1
   962  00002E                     i2___awmod@counter:
   963                           	opt stack 0
   964                           
   965                           ; 1 bytes @ 0x2D
   966  00002E                     	ds	1
   967  00002F                     ??i2_check_msg:
   968  00002F                     start_i2c_slave_reply@length:
   969                           	opt stack 0
   970  00002F                     i2uart_trans@length:
   971                           	opt stack 0
   972  00002F                     i2___awmod@sign:
   973                           	opt stack 0
   974                           
   975                           ; 1 bytes @ 0x2E
   976  00002F                     	ds	1
   977  000030                     tblptru	equ	0xFF8
   978                           tblptrh	equ	0xFF7
   979                           tblptrl	equ	0xFF6
   980                           tablat	equ	0xFF5
   981                           postinc0	equ	0xFEE
   982                           wreg	equ	0xFE8
   983                           postdec1	equ	0xFE5
   984                           fsr1l	equ	0xFE1
   985                           
   986                           ; 0 bytes @ 0x2F
   987 ;;
   988 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   989 ;;
   990 ;; *************** function _main *****************
   991 ;; Defined at:
   992 ;;		line 186 in file "../src/main.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  ic             29   73[BANK1 ] struct __i2c_comm
   997 ;;  uc             13   60[BANK1 ] struct __uart_comm
   998 ;;  msgbuffer      11   41[BANK1 ] unsigned char [11]
   999 ;;  t1thread_dat    2   56[BANK1 ] struct __timer1_thread_s
  1000 ;;  motorcomm       2   54[BANK1 ] unsigned char [2]
  1001 ;;  t0thread_dat    2   52[BANK1 ] struct __timer0_thread_s
  1002 ;;  msg             2   38[BANK1 ] unsigned char [2]
  1003 ;;  uthread_data    2    0        struct __uart_thread_str
  1004 ;;  length          1   59[BANK1 ] char 
  1005 ;;  msgtype         1   58[BANK1 ] unsigned char 
  1006 ;;  last_reg_rec    1   40[BANK1 ] unsigned char 
  1007 ;;  i               1    0        unsigned char 
  1008 ;;  c               1    0        unsigned char 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;		None               void
  1011 ;; Registers used:
  1012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1018 ;;      Params:         0       0       0       0       0
  1019 ;;      Locals:         0       0      64       0       0
  1020 ;;      Temps:          0       0       2       0       0
  1021 ;;      Totals:         0       0      66       0       0
  1022 ;;Total ram usage:       66 bytes
  1023 ;; Hardware stack levels required when called:   15
  1024 ;; This function calls:
  1025 ;;		_OpenADC
  1026 ;;		_OpenTimer0
  1027 ;;		_OpenTimer1
  1028 ;;		_OpenUSART
  1029 ;;		_SetChanADC
  1030 ;;		_ToMainHigh_recvmsg
  1031 ;;		_ToMainLow_recvmsg
  1032 ;;		_block_on_To_msgqueues
  1033 ;;		_enable_interrupts
  1034 ;;		_i2c_configure_slave
  1035 ;;		_i2c_master_send
  1036 ;;		_init_i2c
  1037 ;;		_init_queues
  1038 ;;		_init_timer1_lthread
  1039 ;;		_init_uart_recv
  1040 ;;		_timer0_lthread
  1041 ;;		_timer1_lthread
  1042 ;;		_uart_trans
  1043 ;; This function is called by:
  1044 ;;		Startup code after reset
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text0
  1049  000804                     __ptext0:
  1050                           	opt stack 0
  1051  000804                     _main:
  1052                           	opt stack 16
  1053                           
  1054                           ;main.c: 187: char c;
  1055                           ;main.c: 188: signed char length;
  1056                           ;main.c: 189: unsigned char msgtype;
  1057                           ;main.c: 190: unsigned char last_reg_recvd;
  1058                           ;main.c: 191: uart_comm uc;
  1059                           ;main.c: 192: i2c_comm ic;
  1060                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
  1061                           ;main.c: 194: unsigned char i;
  1062                           ;main.c: 195: uart_thread_struct uthread_data;
  1063                           ;main.c: 196: timer1_thread_struct t1thread_data;
  1064                           ;main.c: 197: timer0_thread_struct t0thread_data;
  1065                           ;main.c: 205: OSCCON = 0x82;
  1066                           
  1067                           ;incstack = 0
  1068  000804  0E82               	movlw	130
  1069  000806  6ED3               	movwf	4051,c	;volatile
  1070                           
  1071                           ;main.c: 206: OSCTUNEbits.PLLEN = 0;
  1072  000808  9C9B               	bcf	3995,6,c	;volatile
  1073                           
  1074                           ;main.c: 224: init_uart_recv(&uc);
  1075  00080A  0101               	movlb	1	; () banked
  1076  00080C  0E01               	movlw	high main@uc
  1077  00080E  0101               	movlb	1	; () banked
  1078  000810  0101               	movlb	1	; () banked
  1079  000812  6F87               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1080  000814  0101               	movlb	1	; () banked
  1081  000816  0EC2               	movlw	low main@uc
  1082  000818  0101               	movlb	1	; () banked
  1083  00081A  0101               	movlb	1	; () banked
  1084  00081C  6F86               	movwf	init_uart_recv@uc& (0+255),b
  1085  00081E  EC81  F010         	call	_init_uart_recv	;wreg free
  1086                           
  1087                           ;main.c: 227: init_i2c(&ic);
  1088  000822  0101               	movlb	1	; () banked
  1089  000824  0E01               	movlw	high main@ic
  1090  000826  0101               	movlb	1	; () banked
  1091  000828  0101               	movlb	1	; () banked
  1092  00082A  6F87               	movwf	(init_i2c@ic+1)& (0+255),b
  1093  00082C  0101               	movlb	1	; () banked
  1094  00082E  0ECF               	movlw	low main@ic
  1095  000830  0101               	movlb	1	; () banked
  1096  000832  0101               	movlb	1	; () banked
  1097  000834  6F86               	movwf	init_i2c@ic& (0+255),b
  1098  000836  ECD7  F00D         	call	_init_i2c	;wreg free
  1099                           
  1100                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1101  00083A  0101               	movlb	1	; () banked
  1102  00083C  0E01               	movlw	high main@t1thread_data
  1103  00083E  0101               	movlb	1	; () banked
  1104  000840  0101               	movlb	1	; () banked
  1105  000842  6F87               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1106  000844  0101               	movlb	1	; () banked
  1107  000846  0EBE               	movlw	low main@t1thread_data
  1108  000848  0101               	movlb	1	; () banked
  1109  00084A  0101               	movlb	1	; () banked
  1110  00084C  6F86               	movwf	init_timer1_lthread@tptr& (0+255),b
  1111  00084E  ECB3  F010         	call	_init_timer1_lthread	;wreg free
  1112                           
  1113                           ;main.c: 233: init_queues();
  1114  000852  ECA0  F00D         	call	_init_queues	;wreg free
  1115                           
  1116                           ;main.c: 237: TRISB = 0xFF;
  1117  000856  6893               	setf	3987,c	;volatile
  1118                           
  1119                           ;main.c: 238: LATB = 0x0;
  1120  000858  0E00               	movlw	0
  1121  00085A  6E8A               	movwf	3978,c	;volatile
  1122                           
  1123                           ;main.c: 240: PORTA = 0x0;
  1124  00085C  0E00               	movlw	0
  1125  00085E  6E80               	movwf	3968,c	;volatile
  1126                           
  1127                           ;main.c: 241: LATA = 0x0;
  1128  000860  0E00               	movlw	0
  1129  000862  6E89               	movwf	3977,c	;volatile
  1130                           
  1131                           ;main.c: 242: TRISA = 0x0F;
  1132  000864  0E0F               	movlw	15
  1133  000866  6E92               	movwf	3986,c	;volatile
  1134                           
  1135                           ;main.c: 257: PORTAbits.AN0 = 1;
  1136  000868  8080               	bsf	3968,0,c	;volatile
  1137                           
  1138                           ;main.c: 258: OpenTimer0(0b11111111 & 0b11111111 & 0b11111111 & 0b11101111 & 0b11111111);
  1139  00086A  0EEF               	movlw	239
  1140  00086C  EC12  F010         	call	_OpenTimer0
  1141                           
  1142                           ;main.c: 259: PORTAbits.AN0 = 0;
  1143  000870  9080               	bcf	3968,0,c	;volatile
  1144                           
  1145                           ;main.c: 271: OpenTimer1(0b11111111 & 0b10111111 & 0b11001111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1146  000872  0E85               	movlw	133
  1147  000874  EC8F  F00F         	call	_OpenTimer1
  1148                           
  1149                           ;main.c: 279: IPR1bits.ADIP = 0;
  1150  000878  9C9F               	bcf	3999,6,c	;volatile
  1151                           
  1152                           ;main.c: 280: PIE1bits.ADIE = 1;
  1153  00087A  8C9D               	bsf	3997,6,c	;volatile
  1154                           
  1155                           ;main.c: 282: IPR1bits.TMR1IP = 0;
  1156  00087C  909F               	bcf	3999,0,c	;volatile
  1157                           
  1158                           ;main.c: 284: INTCON2bits.TMR0IP = 1;
  1159  00087E  84F1               	bsf	intcon2,2,c	;volatile
  1160                           
  1161                           ;main.c: 286: IPR1bits.RCIP = 0;
  1162  000880  9A9F               	bcf	3999,5,c	;volatile
  1163                           
  1164                           ;main.c: 288: IPR1bits.TXIP = 0;
  1165  000882  989F               	bcf	3999,4,c	;volatile
  1166                           
  1167                           ;main.c: 290: IPR1bits.SSPIP = 1;
  1168  000884  869F               	bsf	3999,3,c	;volatile
  1169                           
  1170                           ;main.c: 307: i2c_configure_slave(0xBE);
  1171  000886  0EBE               	movlw	190
  1172  000888  EC27  F010         	call	_i2c_configure_slave
  1173                           
  1174                           ;main.c: 326: PIE1bits.SSPIE = 1;
  1175  00088C  869D               	bsf	3997,3,c	;volatile
  1176                           
  1177                           ;main.c: 337: OpenUSART(0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1178                           ;main.c: 338: 0b11111111 & 0b11111111, 38);
  1179  00088E  0E00               	movlw	0
  1180  000890  0101               	movlb	1	; () banked
  1181  000892  0101               	movlb	1	; () banked
  1182  000894  6F87               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1183  000896  0E26               	movlw	38
  1184  000898  0101               	movlb	1	; () banked
  1185  00089A  6F86               	movwf	OpenUSART@spbrg& (0+255),b
  1186  00089C  0EFC               	movlw	252
  1187  00089E  ECA1  F00B         	call	_OpenUSART
  1188                           
  1189                           ;main.c: 339: RCSTAbits.SPEN = 1;
  1190  0008A2  8EAB               	bsf	4011,7,c	;volatile
  1191                           
  1192                           ;main.c: 340: TRISC = 0xFF;
  1193  0008A4  6894               	setf	3988,c	;volatile
  1194                           
  1195                           ;main.c: 347: enable_interrupts();
  1196  0008A6  ECEA  F010         	call	_enable_interrupts	;wreg free
  1197                           
  1198                           ;main.c: 361: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1199                           ;main.c: 362: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1200                           ;main.c: 363: 0b1011);
  1201  0008AA  0101               	movlb	1	; () banked
  1202  0008AC  6FAA               	movwf	??_main& (0+255),b
  1203  0008AE  0E0C               	movlw	12
  1204  0008B0  0101               	movlb	1	; () banked
  1205  0008B2  0101               	movlb	1	; () banked
  1206  0008B4  6F86               	movwf	OpenADC@config2& (0+255),b
  1207  0008B6  0101               	movlb	1	; () banked
  1208  0008B8  51AA               	movf	??_main& (0+255),w,b
  1209  0008BA  0101               	movlb	1	; () banked
  1210  0008BC  6FAB               	movwf	(??_main+1)& (0+255),b
  1211  0008BE  0E0B               	movlw	11
  1212  0008C0  0101               	movlb	1	; () banked
  1213  0008C2  0101               	movlb	1	; () banked
  1214  0008C4  6F87               	movwf	OpenADC@portconfig& (0+255),b
  1215  0008C6  0101               	movlb	1	; () banked
  1216  0008C8  51AB               	movf	(??_main+1)& (0+255),w,b
  1217  0008CA  0E53               	movlw	83
  1218  0008CC  EC72  F00C         	call	_OpenADC
  1219                           
  1220                           ;main.c: 364: SetChanADC(0b10001111);
  1221  0008D0  0E8F               	movlw	143
  1222  0008D2  EC71  F010         	call	_SetChanADC
  1223                           
  1224                           ;main.c: 375: unsigned char msg[2] = {0x01, 0x02};
  1225  0008D6  C1EC  F1AC         	movff	main@F5212,main@msg
  1226  0008DA  C1ED  F1AD         	movff	main@F5212+1,main@msg+1
  1227                           
  1228                           ;main.c: 382: unsigned char motorcomm[2] = {0x9F, 0x1F};
  1229  0008DE  C1EE  F1BC         	movff	main@F5214,main@motorcomm
  1230  0008E2  C1EF  F1BD         	movff	main@F5214+1,main@motorcomm+1
  1231                           
  1232                           ;main.c: 383: uart_trans(2, motorcomm);
  1233  0008E6  0101               	movlb	1	; () banked
  1234  0008E8  0E01               	movlw	high main@motorcomm
  1235  0008EA  0101               	movlb	1	; () banked
  1236  0008EC  0101               	movlb	1	; () banked
  1237  0008EE  6F87               	movwf	(uart_trans@data+1)& (0+255),b
  1238  0008F0  0101               	movlb	1	; () banked
  1239  0008F2  0EBC               	movlw	low main@motorcomm
  1240  0008F4  0101               	movlb	1	; () banked
  1241  0008F6  0101               	movlb	1	; () banked
  1242  0008F8  6F86               	movwf	uart_trans@data& (0+255),b
  1243  0008FA  0E02               	movlw	2
  1244  0008FC  ECA5  F00A         	call	_uart_trans
  1245  000900                     l3804:
  1246                           
  1247                           ;main.c: 389: block_on_To_msgqueues();
  1248  000900  ECB4  F00C         	call	_block_on_To_msgqueues	;wreg free
  1249                           
  1250                           ;main.c: 396: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1251  000904  0101               	movlb	1	; () banked
  1252  000906  0E01               	movlw	high main@msgtype
  1253  000908  0101               	movlb	1	; () banked
  1254  00090A  0101               	movlb	1	; () banked
  1255  00090C  6F9F               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1256  00090E  0101               	movlb	1	; () banked
  1257  000910  0EC0               	movlw	low main@msgtype
  1258  000912  0101               	movlb	1	; () banked
  1259  000914  0101               	movlb	1	; () banked
  1260  000916  6F9E               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1261  000918  0101               	movlb	1	; () banked
  1262  00091A  0E01               	movlw	high main@msgbuffer
  1263  00091C  0101               	movlb	1	; () banked
  1264  00091E  0101               	movlb	1	; () banked
  1265  000920  6FA1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1266  000922  0101               	movlb	1	; () banked
  1267  000924  0EAF               	movlw	low main@msgbuffer
  1268  000926  0101               	movlb	1	; () banked
  1269  000928  0101               	movlb	1	; () banked
  1270  00092A  6FA0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1271  00092C  0E0A               	movlw	10
  1272  00092E  EC2E  F00F         	call	_ToMainHigh_recvmsg
  1273  000932  0101               	movlb	1	; () banked
  1274  000934  0101               	movlb	1	; () banked
  1275  000936  6FC1               	movwf	main@length& (0+255),b
  1276                           
  1277                           ; BSR set to: 1
  1278                           ;main.c: 397: if (length < 0) {
  1279  000938  0101               	movlb	1	; () banked
  1280  00093A  0101               	movlb	1	; () banked
  1281  00093C  BFC1               	btfsc	main@length& (0+255),7,b
  1282  00093E  D04D               	goto	l3820
  1283  000940  D03C               	goto	l3818
  1284  000942                     l3812:
  1285                           
  1286                           ; BSR set to: 1
  1287                           ;main.c: 405: {
  1288                           ;main.c: 406: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1289  000942  0101               	movlb	1	; () banked
  1290  000944  0E01               	movlw	high main@t0thread_data
  1291  000946  0101               	movlb	1	; () banked
  1292  000948  0101               	movlb	1	; () banked
  1293  00094A  6F87               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1294  00094C  0101               	movlb	1	; () banked
  1295  00094E  0EBA               	movlw	low main@t0thread_data
  1296  000950  0101               	movlb	1	; () banked
  1297  000952  0101               	movlb	1	; () banked
  1298  000954  6F86               	movwf	timer0_lthread@tptr& (0+255),b
  1299  000956  0101               	movlb	1	; () banked
  1300  000958  0101               	movlb	1	; () banked
  1301  00095A  C1C0  F188         	movff	main@msgtype,timer0_lthread@msgtype
  1302  00095E  0101               	movlb	1	; () banked
  1303  000960  0101               	movlb	1	; () banked
  1304  000962  6B89               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1305  000964  0101               	movlb	1	; () banked
  1306  000966  0101               	movlb	1	; () banked
  1307  000968  51C1               	movf	main@length& (0+255),w,b
  1308  00096A  0101               	movlb	1	; () banked
  1309  00096C  0101               	movlb	1	; () banked
  1310  00096E  6F8A               	movwf	timer0_lthread@length& (0+255),b
  1311  000970  0101               	movlb	1	; () banked
  1312  000972  6B8B               	clrf	(timer0_lthread@length+1)& (0+255),b
  1313  000974  0101               	movlb	1	; () banked
  1314  000976  BF8A               	btfsc	timer0_lthread@length& (0+255),7,b
  1315  000978  078B               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1316  00097A  0101               	movlb	1	; () banked
  1317  00097C  0E01               	movlw	high main@msgbuffer
  1318  00097E  0101               	movlb	1	; () banked
  1319  000980  0101               	movlb	1	; () banked
  1320  000982  6F8D               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1321  000984  0101               	movlb	1	; () banked
  1322  000986  0EAF               	movlw	low main@msgbuffer
  1323  000988  0101               	movlb	1	; () banked
  1324  00098A  0101               	movlb	1	; () banked
  1325  00098C  6F8C               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1326  00098E  ECAA  F010         	call	_timer0_lthread	;wreg free
  1327                           
  1328                           ;main.c: 407: break;
  1329  000992  D023               	goto	l3820
  1330  000994                     l140:
  1331                           
  1332                           ;main.c: 410: case 41:
  1333                           ;main.c: 411: {
  1334                           ;main.c: 414: last_reg_recvd = msgbuffer[0];
  1335  000994  C1AF  F1AE         	movff	main@msgbuffer,main@last_reg_recvd
  1336                           
  1337                           ;main.c: 415: break;
  1338  000998  D020               	goto	l3820
  1339  00099A                     l3814:
  1340                           
  1341                           ;main.c: 418: {
  1342                           ;main.c: 421: uart_trans(length, msgbuffer);
  1343  00099A  0101               	movlb	1	; () banked
  1344  00099C  0E01               	movlw	high main@msgbuffer
  1345  00099E  0101               	movlb	1	; () banked
  1346  0009A0  0101               	movlb	1	; () banked
  1347  0009A2  6F87               	movwf	(uart_trans@data+1)& (0+255),b
  1348  0009A4  0101               	movlb	1	; () banked
  1349  0009A6  0EAF               	movlw	low main@msgbuffer
  1350  0009A8  0101               	movlb	1	; () banked
  1351  0009AA  0101               	movlb	1	; () banked
  1352  0009AC  6F86               	movwf	uart_trans@data& (0+255),b
  1353  0009AE  0101               	movlb	1	; () banked
  1354  0009B0  0101               	movlb	1	; () banked
  1355  0009B2  51C1               	movf	main@length& (0+255),w,b
  1356  0009B4  ECA5  F00A         	call	_uart_trans
  1357                           
  1358                           ;main.c: 424: break;
  1359  0009B8  D010               	goto	l3820
  1360  0009BA                     l3818:
  1361  0009BA  0101               	movlb	1	; () banked
  1362  0009BC  0101               	movlb	1	; () banked
  1363  0009BE  51C0               	movf	main@msgtype& (0+255),w,b
  1364                           
  1365                           ; Switch size 1, requested type "space"
  1366                           ; Number of cases is 5, Range of values is 10 to 46
  1367                           ; switch strategies available:
  1368                           ; Name         Instructions Cycles
  1369                           ; simple_byte           16     9 (average)
  1370                           ;	Chosen strategy is simple_byte
  1371  0009C0  0A0A               	xorlw	10	; case 10
  1372  0009C2  B4D8               	btfsc	status,2,c
  1373  0009C4  D7BE               	goto	l3812
  1374  0009C6  0A22               	xorlw	34	; case 40
  1375  0009C8  B4D8               	btfsc	status,2,c
  1376  0009CA  D7E4               	goto	l140
  1377  0009CC  0A01               	xorlw	1	; case 41
  1378  0009CE  B4D8               	btfsc	status,2,c
  1379  0009D0  D7E1               	goto	l140
  1380  0009D2  0A04               	xorlw	4	; case 45
  1381  0009D4  B4D8               	btfsc	status,2,c
  1382  0009D6  D7E1               	goto	l3814
  1383  0009D8  0A03               	xorlw	3	; case 46
  1384  0009DA                     l3820:
  1385                           
  1386                           ;main.c: 439: }
  1387                           ;main.c: 442: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1388  0009DA  0101               	movlb	1	; () banked
  1389  0009DC  0E01               	movlw	high main@msgtype
  1390  0009DE  0101               	movlb	1	; () banked
  1391  0009E0  0101               	movlb	1	; () banked
  1392  0009E2  6F9F               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1393  0009E4  0101               	movlb	1	; () banked
  1394  0009E6  0EC0               	movlw	low main@msgtype
  1395  0009E8  0101               	movlb	1	; () banked
  1396  0009EA  0101               	movlb	1	; () banked
  1397  0009EC  6F9E               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1398  0009EE  0101               	movlb	1	; () banked
  1399  0009F0  0E01               	movlw	high main@msgbuffer
  1400  0009F2  0101               	movlb	1	; () banked
  1401  0009F4  0101               	movlb	1	; () banked
  1402  0009F6  6FA1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1403  0009F8  0101               	movlb	1	; () banked
  1404  0009FA  0EAF               	movlw	low main@msgbuffer
  1405  0009FC  0101               	movlb	1	; () banked
  1406  0009FE  0101               	movlb	1	; () banked
  1407  000A00  6FA0               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1408  000A02  0E0A               	movlw	10
  1409  000A04  EC0D  F00F         	call	_ToMainLow_recvmsg
  1410  000A08  0101               	movlb	1	; () banked
  1411  000A0A  0101               	movlb	1	; () banked
  1412  000A0C  6FC1               	movwf	main@length& (0+255),b
  1413                           
  1414                           ; BSR set to: 1
  1415                           ;main.c: 443: if (length < 0) {
  1416  000A0E  0101               	movlb	1	; () banked
  1417  000A10  0101               	movlb	1	; () banked
  1418  000A12  BFC1               	btfsc	main@length& (0+255),7,b
  1419  000A14  D775               	goto	l3804
  1420  000A16  D072               	goto	l3840
  1421  000A18                     l3826:
  1422                           
  1423                           ; BSR set to: 1
  1424                           ;main.c: 451: {
  1425                           ;main.c: 452: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1426  000A18  0101               	movlb	1	; () banked
  1427  000A1A  0E01               	movlw	high main@t1thread_data
  1428  000A1C  0101               	movlb	1	; () banked
  1429  000A1E  0101               	movlb	1	; () banked
  1430  000A20  6FA1               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1431  000A22  0101               	movlb	1	; () banked
  1432  000A24  0EBE               	movlw	low main@t1thread_data
  1433  000A26  0101               	movlb	1	; () banked
  1434  000A28  0101               	movlb	1	; () banked
  1435  000A2A  6FA0               	movwf	timer1_lthread@tptr& (0+255),b
  1436  000A2C  0101               	movlb	1	; () banked
  1437  000A2E  0101               	movlb	1	; () banked
  1438  000A30  C1C0  F1A2         	movff	main@msgtype,timer1_lthread@msgtype
  1439  000A34  0101               	movlb	1	; () banked
  1440  000A36  0101               	movlb	1	; () banked
  1441  000A38  6BA3               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1442  000A3A  0101               	movlb	1	; () banked
  1443  000A3C  0101               	movlb	1	; () banked
  1444  000A3E  51C1               	movf	main@length& (0+255),w,b
  1445  000A40  0101               	movlb	1	; () banked
  1446  000A42  0101               	movlb	1	; () banked
  1447  000A44  6FA4               	movwf	timer1_lthread@length& (0+255),b
  1448  000A46  0101               	movlb	1	; () banked
  1449  000A48  6BA5               	clrf	(timer1_lthread@length+1)& (0+255),b
  1450  000A4A  0101               	movlb	1	; () banked
  1451  000A4C  BFA4               	btfsc	timer1_lthread@length& (0+255),7,b
  1452  000A4E  07A5               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1453  000A50  0101               	movlb	1	; () banked
  1454  000A52  0E01               	movlw	high main@msgbuffer
  1455  000A54  0101               	movlb	1	; () banked
  1456  000A56  0101               	movlb	1	; () banked
  1457  000A58  6FA7               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1458  000A5A  0101               	movlb	1	; () banked
  1459  000A5C  0EAF               	movlw	low main@msgbuffer
  1460  000A5E  0101               	movlb	1	; () banked
  1461  000A60  0101               	movlb	1	; () banked
  1462  000A62  6FA6               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1463  000A64  EC30  F00D         	call	_timer1_lthread	;wreg free
  1464                           
  1465                           ;main.c: 453: break;
  1466  000A68  D74B               	goto	l3804
  1467  000A6A                     l3828:
  1468                           
  1469                           ;main.c: 456: case 31:
  1470                           ;main.c: 457: {
  1471                           ;main.c: 460: if(msgbuffer[0] == 0xBA){
  1472  000A6A  0101               	movlb	1	; () banked
  1473  000A6C  0101               	movlb	1	; () banked
  1474  000A6E  51AF               	movf	main@msgbuffer& (0+255),w,b
  1475  000A70  0ABA               	xorlw	186
  1476  000A72  A4D8               	btfss	status,2,c
  1477  000A74  D01E               	goto	l3832
  1478                           
  1479                           ; BSR set to: 1
  1480                           ;main.c: 462: i2c_master_send(5, 5, msgbuffer, 0xBE);
  1481  000A76  0101               	movlb	1	; () banked
  1482  000A78  6FAA               	movwf	??_main& (0+255),b
  1483  000A7A  0E05               	movlw	5
  1484  000A7C  0101               	movlb	1	; () banked
  1485  000A7E  0101               	movlb	1	; () banked
  1486  000A80  6F86               	movwf	i2c_master_send@recvlength& (0+255),b
  1487  000A82  0101               	movlb	1	; () banked
  1488  000A84  51AA               	movf	??_main& (0+255),w,b
  1489  000A86  0101               	movlb	1	; () banked
  1490  000A88  0E01               	movlw	high main@msgbuffer
  1491  000A8A  0101               	movlb	1	; () banked
  1492  000A8C  0101               	movlb	1	; () banked
  1493  000A8E  6F88               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1494  000A90  0101               	movlb	1	; () banked
  1495  000A92  0EAF               	movlw	low main@msgbuffer
  1496  000A94  0101               	movlb	1	; () banked
  1497  000A96  0101               	movlb	1	; () banked
  1498  000A98  6F87               	movwf	i2c_master_send@msg& (0+255),b
  1499  000A9A  0101               	movlb	1	; () banked
  1500  000A9C  6FAB               	movwf	(??_main+1)& (0+255),b
  1501  000A9E  0EBE               	movlw	190
  1502  000AA0  0101               	movlb	1	; () banked
  1503  000AA2  0101               	movlb	1	; () banked
  1504  000AA4  6F89               	movwf	i2c_master_send@slave_addr& (0+255),b
  1505  000AA6  0101               	movlb	1	; () banked
  1506  000AA8  51AB               	movf	(??_main+1)& (0+255),w,b
  1507  000AAA  0E05               	movlw	5
  1508  000AAC  EC3A  F006         	call	_i2c_master_send
  1509                           
  1510                           ;main.c: 463: } else if(msgbuffer[0] == 0xAA){
  1511  000AB0  D023               	goto	l3836
  1512  000AB2                     l3832:
  1513  000AB2  0101               	movlb	1	; () banked
  1514  000AB4  0101               	movlb	1	; () banked
  1515  000AB6  51AF               	movf	main@msgbuffer& (0+255),w,b
  1516  000AB8  0AAA               	xorlw	170
  1517  000ABA  A4D8               	btfss	status,2,c
  1518  000ABC  D01D               	goto	l3836
  1519                           
  1520                           ; BSR set to: 1
  1521                           ;main.c: 465: i2c_master_send(1, 5, msgbuffer, 0x9E);
  1522  000ABE  0101               	movlb	1	; () banked
  1523  000AC0  6FAA               	movwf	??_main& (0+255),b
  1524  000AC2  0E05               	movlw	5
  1525  000AC4  0101               	movlb	1	; () banked
  1526  000AC6  0101               	movlb	1	; () banked
  1527  000AC8  6F86               	movwf	i2c_master_send@recvlength& (0+255),b
  1528  000ACA  0101               	movlb	1	; () banked
  1529  000ACC  51AA               	movf	??_main& (0+255),w,b
  1530  000ACE  0101               	movlb	1	; () banked
  1531  000AD0  0E01               	movlw	high main@msgbuffer
  1532  000AD2  0101               	movlb	1	; () banked
  1533  000AD4  0101               	movlb	1	; () banked
  1534  000AD6  6F88               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1535  000AD8  0101               	movlb	1	; () banked
  1536  000ADA  0EAF               	movlw	low main@msgbuffer
  1537  000ADC  0101               	movlb	1	; () banked
  1538  000ADE  0101               	movlb	1	; () banked
  1539  000AE0  6F87               	movwf	i2c_master_send@msg& (0+255),b
  1540  000AE2  0101               	movlb	1	; () banked
  1541  000AE4  6FAB               	movwf	(??_main+1)& (0+255),b
  1542  000AE6  0E9E               	movlw	158
  1543  000AE8  0101               	movlb	1	; () banked
  1544  000AEA  0101               	movlb	1	; () banked
  1545  000AEC  6F89               	movwf	i2c_master_send@slave_addr& (0+255),b
  1546  000AEE  0101               	movlb	1	; () banked
  1547  000AF0  51AB               	movf	(??_main+1)& (0+255),w,b
  1548  000AF2  0E01               	movlw	1
  1549  000AF4  EC3A  F006         	call	_i2c_master_send
  1550  000AF8                     l3836:
  1551                           
  1552                           ;main.c: 466: }
  1553                           ;main.c: 468: LATBbits.LATB2 = 0;
  1554  000AF8  948A               	bcf	3978,2,c	;volatile
  1555                           
  1556                           ;main.c: 470: break;
  1557  000AFA  D702               	goto	l3804
  1558  000AFC                     l3840:
  1559  000AFC  0101               	movlb	1	; () banked
  1560  000AFE  0101               	movlb	1	; () banked
  1561  000B00  51C0               	movf	main@msgtype& (0+255),w,b
  1562                           
  1563                           ; Switch size 1, requested type "space"
  1564                           ; Number of cases is 3, Range of values is 11 to 31
  1565                           ; switch strategies available:
  1566                           ; Name         Instructions Cycles
  1567                           ; simple_byte           10     6 (average)
  1568                           ;	Chosen strategy is simple_byte
  1569  000B02  0A0B               	xorlw	11	; case 11
  1570  000B04  B4D8               	btfsc	status,2,c
  1571  000B06  D788               	goto	l3826
  1572  000B08  0A15               	xorlw	21	; case 30
  1573  000B0A  B4D8               	btfsc	status,2,c
  1574  000B0C  D7AE               	goto	l3828
  1575  000B0E  0A01               	xorlw	1	; case 31
  1576  000B10  B4D8               	btfsc	status,2,c
  1577  000B12  D7AB               	goto	l3828
  1578  000B14  D6F5               	goto	l3804
  1579  000B16                     __end_of_main:
  1580                           	opt stack 0
  1581                           tblptru	equ	0xFF8
  1582                           tblptrh	equ	0xFF7
  1583                           tblptrl	equ	0xFF6
  1584                           tablat	equ	0xFF5
  1585                           intcon2	equ	0xFF1
  1586                           postinc0	equ	0xFEE
  1587                           wreg	equ	0xFE8
  1588                           postdec1	equ	0xFE5
  1589                           fsr1l	equ	0xFE1
  1590                           status	equ	0xFD8
  1591                           
  1592 ;; *************** function _uart_trans *****************
  1593 ;; Defined at:
  1594 ;;		line 61 in file "../src/my_uart.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  length          1    wreg     unsigned char 
  1597 ;;  data            2    0[BANK1 ] PTR unsigned char 
  1598 ;;		 -> timer0_int_handler@motorcomm(2), i2c_slave_int_handler@motorcomm(2), main@msgbuffer(11), main@motorcomm(2), 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  length          1    4[BANK1 ] unsigned char 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;		None               void
  1603 ;; Registers used:
  1604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1610 ;;      Params:         0       0       2       0       0
  1611 ;;      Locals:         0       0       1       0       0
  1612 ;;      Temps:          0       0       2       0       0
  1613 ;;      Totals:         0       0       5       0       0
  1614 ;;Total ram usage:        5 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:   11
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text1
  1625  00154A                     __ptext1:
  1626                           	opt stack 0
  1627  00154A                     _uart_trans:
  1628                           	opt stack 19
  1629                           
  1630                           ; BSR set to: 1
  1631                           ;incstack = 0
  1632                           ;uart_trans@length stored from wreg
  1633  00154A  CFE8 F18A          	movff	wreg,uart_trans@length
  1634                           
  1635                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  1636  00154E  EE20 F00B          	lfsr	2,11
  1637  001552  5052               	movf	_uc_ptr,w,c
  1638  001554  26D9               	addwf	fsr2l,f,c
  1639  001556  5053               	movf	_uc_ptr+1,w,c
  1640  001558  22DA               	addwfc	fsr2h,f,c
  1641  00155A  0E00               	movlw	0
  1642  00155C  6EDF               	movwf	indf2,c
  1643  00155E  D035               	goto	l3986
  1644  001560                     l3982:
  1645                           
  1646                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  1647  001560  EE20 F00B          	lfsr	2,11
  1648  001564  5052               	movf	_uc_ptr,w,c
  1649  001566  26D9               	addwf	fsr2l,f,c
  1650  001568  5053               	movf	_uc_ptr+1,w,c
  1651  00156A  22DA               	addwfc	fsr2h,f,c
  1652  00156C  50DF               	movf	indf2,w,c
  1653  00156E  0101               	movlb	1	; () banked
  1654  001570  6F88               	movwf	??_uart_trans& (0+255),b
  1655  001572  0101               	movlb	1	; () banked
  1656  001574  5188               	movf	??_uart_trans& (0+255),w,b
  1657  001576  0D01               	mullw	1
  1658  001578  50F3               	movf	prodl,w,c
  1659  00157A  0101               	movlb	1	; () banked
  1660  00157C  0101               	movlb	1	; () banked
  1661  00157E  2586               	addwf	uart_trans@data& (0+255),w,b
  1662  001580  6ED9               	movwf	fsr2l,c
  1663  001582  50F4               	movf	prodh,w,c
  1664  001584  0101               	movlb	1	; () banked
  1665  001586  0101               	movlb	1	; () banked
  1666  001588  2187               	addwfc	(uart_trans@data+1)& (0+255),w,b
  1667  00158A  6EDA               	movwf	fsr2h,c
  1668  00158C  EE10 F00B          	lfsr	1,11
  1669  001590  5052               	movf	_uc_ptr,w,c
  1670  001592  26E1               	addwf	fsr1l,f,c
  1671  001594  5053               	movf	_uc_ptr+1,w,c
  1672  001596  22E2               	addwfc	fsr1h,f,c
  1673  001598  50E7               	movf	indf1,w,c
  1674  00159A  0101               	movlb	1	; () banked
  1675  00159C  6F89               	movwf	(??_uart_trans+1)& (0+255),b
  1676  00159E  0101               	movlb	1	; () banked
  1677  0015A0  5189               	movf	(??_uart_trans+1)& (0+255),w,b
  1678  0015A2  0D01               	mullw	1
  1679  0015A4  0E06               	movlw	6
  1680  0015A6  26F3               	addwf	prodl,f,c
  1681  0015A8  0E00               	movlw	0
  1682  0015AA  22F4               	addwfc	prodh,f,c
  1683  0015AC  50F3               	movf	prodl,w,c
  1684  0015AE  2452               	addwf	_uc_ptr,w,c
  1685  0015B0  6EE1               	movwf	fsr1l,c
  1686  0015B2  50F4               	movf	prodh,w,c
  1687  0015B4  2053               	addwfc	_uc_ptr+1,w,c
  1688  0015B6  6EE2               	movwf	fsr1h,c
  1689  0015B8  CFDF FFE7          	movff	indf2,indf1
  1690                           
  1691                           ; BSR set to: 1
  1692  0015BC  EE20 F00B          	lfsr	2,11
  1693  0015C0  5052               	movf	_uc_ptr,w,c
  1694  0015C2  26D9               	addwf	fsr2l,f,c
  1695  0015C4  5053               	movf	_uc_ptr+1,w,c
  1696  0015C6  22DA               	addwfc	fsr2h,f,c
  1697  0015C8  2ADF               	incf	indf2,f,c
  1698  0015CA                     l3986:
  1699  0015CA  EE20 F00B          	lfsr	2,11
  1700  0015CE  5052               	movf	_uc_ptr,w,c
  1701  0015D0  26D9               	addwf	fsr2l,f,c
  1702  0015D2  5053               	movf	_uc_ptr+1,w,c
  1703  0015D4  22DA               	addwfc	fsr2h,f,c
  1704  0015D6  50DF               	movf	indf2,w,c
  1705  0015D8  0101               	movlb	1	; () banked
  1706  0015DA  6F88               	movwf	??_uart_trans& (0+255),b
  1707  0015DC  0101               	movlb	1	; () banked
  1708  0015DE  0101               	movlb	1	; () banked
  1709  0015E0  518A               	movf	uart_trans@length& (0+255),w,b
  1710  0015E2  0101               	movlb	1	; () banked
  1711  0015E4  5D88               	subwf	??_uart_trans& (0+255),w,b
  1712  0015E6  A0D8               	btfss	status,0,c
  1713  0015E8  D7BB               	goto	l3982
  1714                           
  1715                           ; BSR set to: 1
  1716                           ;my_uart.c: 67: }
  1717                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  1718                           
  1719                           ; BSR set to: 1
  1720  0015EA  EE20 F00C          	lfsr	2,12
  1721  0015EE  5052               	movf	_uc_ptr,w,c
  1722  0015F0  26D9               	addwf	fsr2l,f,c
  1723  0015F2  5053               	movf	_uc_ptr+1,w,c
  1724  0015F4  22DA               	addwfc	fsr2h,f,c
  1725  0015F6  0E00               	movlw	0
  1726  0015F8  6EDF               	movwf	indf2,c
  1727                           
  1728                           ; BSR set to: 1
  1729                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  1730  0015FA  889D               	bsf	3997,4,c	;volatile
  1731                           
  1732                           ; BSR set to: 1
  1733  0015FC  0012               	return	
  1734  0015FE                     __end_of_uart_trans:
  1735                           	opt stack 0
  1736                           tblptru	equ	0xFF8
  1737                           tblptrh	equ	0xFF7
  1738                           tblptrl	equ	0xFF6
  1739                           tablat	equ	0xFF5
  1740                           prodh	equ	0xFF4
  1741                           prodl	equ	0xFF3
  1742                           intcon2	equ	0xFF1
  1743                           postinc0	equ	0xFEE
  1744                           wreg	equ	0xFE8
  1745                           indf1	equ	0xFE7
  1746                           postdec1	equ	0xFE5
  1747                           fsr1h	equ	0xFE2
  1748                           fsr1l	equ	0xFE1
  1749                           indf2	equ	0xFDF
  1750                           fsr2h	equ	0xFDA
  1751                           fsr2l	equ	0xFD9
  1752                           status	equ	0xFD8
  1753                           
  1754 ;; *************** function _timer1_lthread *****************
  1755 ;; Defined at:
  1756 ;;		line 14 in file "../src/timer1_thread.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  1759 ;;		 -> main@t1thread_data(2), 
  1760 ;;  msgtype         2   28[BANK1 ] int 
  1761 ;;  length          2   30[BANK1 ] int 
  1762 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1763 ;;		 -> main@msgbuffer(11), 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  retval          1   35[BANK1 ] char 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  2   26[BANK1 ] int 
  1768 ;; Registers used:
  1769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1775 ;;      Params:         0       0       8       0       0
  1776 ;;      Locals:         0       0       1       0       0
  1777 ;;      Temps:          0       0       1       0       0
  1778 ;;      Totals:         0       0      10       0       0
  1779 ;;Total ram usage:       10 bytes
  1780 ;; Hardware stack levels used:    1
  1781 ;; Hardware stack levels required when called:   14
  1782 ;; This function calls:
  1783 ;;		_FromMainHigh_sendmsg
  1784 ;;		___lwmod
  1785 ;; This function is called by:
  1786 ;;		_main
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text2
  1791  001A60                     __ptext2:
  1792                           	opt stack 0
  1793  001A60                     _timer1_lthread:
  1794                           	opt stack 16
  1795                           
  1796                           ;timer1_thread.c: 15: signed char retval;
  1797                           ;timer1_thread.c: 17: tptr->msgcount++;
  1798                           
  1799                           ; BSR set to: 1
  1800                           ;incstack = 0
  1801  001A60  C1A0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1802  001A64  C1A1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1803  001A68  2ADE               	incf	postinc2,f,c
  1804  001A6A  0E00               	movlw	0
  1805  001A6C  22DD               	addwfc	postdec2,f,c
  1806                           
  1807                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1808  001A6E  C1A0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1809  001A72  C1A1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1810  001A76  0101               	movlb	1	; () banked
  1811  001A78  CFDE F186          	movff	postinc2,___lwmod@dividend
  1812  001A7C  0101               	movlb	1	; () banked
  1813  001A7E  CFDD F187          	movff	postdec2,___lwmod@dividend+1
  1814  001A82  0E00               	movlw	0
  1815  001A84  0101               	movlb	1	; () banked
  1816  001A86  0101               	movlb	1	; () banked
  1817  001A88  6F89               	movwf	(___lwmod@divisor+1)& (0+255),b
  1818  001A8A  0E0A               	movlw	10
  1819  001A8C  0101               	movlb	1	; () banked
  1820  001A8E  6F88               	movwf	___lwmod@divisor& (0+255),b
  1821  001A90  ECEA  F00B         	call	___lwmod	;wreg free
  1822  001A94  0101               	movlb	1	; () banked
  1823  001A96  0101               	movlb	1	; () banked
  1824  001A98  5186               	movf	?___lwmod& (0+255),w,b
  1825  001A9A  0A09               	xorlw	9
  1826  001A9C  0101               	movlb	1	; () banked
  1827  001A9E  1187               	iorwf	(?___lwmod+1)& (0+255),w,b
  1828  001AA0  A4D8               	btfss	status,2,c
  1829  001AA2  0012               	return	
  1830                           
  1831                           ; BSR set to: 1
  1832                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1833  001AA4  0101               	movlb	1	; () banked
  1834  001AA6  6FA8               	movwf	??_timer1_lthread& (0+255),b
  1835  001AA8  0E14               	movlw	20
  1836  001AAA  0101               	movlb	1	; () banked
  1837  001AAC  0101               	movlb	1	; () banked
  1838  001AAE  6F9C               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1839  001AB0  0101               	movlb	1	; () banked
  1840  001AB2  51A8               	movf	??_timer1_lthread& (0+255),w,b
  1841  001AB4  0101               	movlb	1	; () banked
  1842  001AB6  0101               	movlb	1	; () banked
  1843  001AB8  C1A1  F19E         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1844  001ABC  0101               	movlb	1	; () banked
  1845  001ABE  0101               	movlb	1	; () banked
  1846  001AC0  C1A0  F19D         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1847  001AC4  0E02               	movlw	2
  1848  001AC6  ECAB  F00F         	call	_FromMainHigh_sendmsg
  1849  001ACA  0101               	movlb	1	; () banked
  1850  001ACC  0101               	movlb	1	; () banked
  1851  001ACE  6FA9               	movwf	timer1_lthread@retval& (0+255),b
  1852  001AD0  0012               	return	
  1853  001AD2                     __end_of_timer1_lthread:
  1854                           	opt stack 0
  1855                           tblptru	equ	0xFF8
  1856                           tblptrh	equ	0xFF7
  1857                           tblptrl	equ	0xFF6
  1858                           tablat	equ	0xFF5
  1859                           prodh	equ	0xFF4
  1860                           prodl	equ	0xFF3
  1861                           intcon2	equ	0xFF1
  1862                           postinc0	equ	0xFEE
  1863                           wreg	equ	0xFE8
  1864                           indf1	equ	0xFE7
  1865                           postdec1	equ	0xFE5
  1866                           fsr1h	equ	0xFE2
  1867                           fsr1l	equ	0xFE1
  1868                           indf2	equ	0xFDF
  1869                           postinc2	equ	0xFDE
  1870                           postdec2	equ	0xFDD
  1871                           fsr2h	equ	0xFDA
  1872                           fsr2l	equ	0xFD9
  1873                           status	equ	0xFD8
  1874                           
  1875 ;; *************** function ___lwmod *****************
  1876 ;; Defined at:
  1877 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  dividend        2    0[BANK1 ] unsigned int 
  1880 ;;  divisor         2    2[BANK1 ] unsigned int 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  counter         1    5[BANK1 ] unsigned char 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  2    0[BANK1 ] unsigned int 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1892 ;;      Params:         0       0       4       0       0
  1893 ;;      Locals:         0       0       1       0       0
  1894 ;;      Temps:          0       0       1       0       0
  1895 ;;      Totals:         0       0       6       0       0
  1896 ;;Total ram usage:        6 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:   11
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_timer1_lthread
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text3
  1907  0017D4                     __ptext3:
  1908                           	opt stack 0
  1909  0017D4                     ___lwmod:
  1910                           	opt stack 18
  1911                           
  1912                           ; BSR set to: 1
  1913                           ;incstack = 0
  1914  0017D4  0101               	movlb	1	; () banked
  1915  0017D6  0101               	movlb	1	; () banked
  1916  0017D8  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1917  0017DA  1188               	iorwf	___lwmod@divisor& (0+255),w,b
  1918  0017DC  B4D8               	btfsc	status,2,c
  1919  0017DE  D03A               	goto	l1128
  1920                           
  1921                           ; BSR set to: 1
  1922  0017E0  0101               	movlb	1	; () banked
  1923  0017E2  6F8A               	movwf	??___lwmod& (0+255),b
  1924  0017E4  0E01               	movlw	1
  1925  0017E6  0101               	movlb	1	; () banked
  1926  0017E8  0101               	movlb	1	; () banked
  1927  0017EA  6F8B               	movwf	___lwmod@counter& (0+255),b
  1928  0017EC  0101               	movlb	1	; () banked
  1929  0017EE  518A               	movf	??___lwmod& (0+255),w,b
  1930  0017F0  D009               	goto	l4442
  1931  0017F2                     l4440:
  1932                           
  1933                           ; BSR set to: 1
  1934  0017F2  0101               	movlb	1	; () banked
  1935  0017F4  0101               	movlb	1	; () banked
  1936  0017F6  0101               	movlb	1	; () banked
  1937  0017F8  90D8               	bcf	status,0,c
  1938  0017FA  3788               	rlcf	___lwmod@divisor& (0+255),f,b
  1939  0017FC  3789               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1940  0017FE  0101               	movlb	1	; () banked
  1941  001800  0101               	movlb	1	; () banked
  1942  001802  2B8B               	incf	___lwmod@counter& (0+255),f,b
  1943  001804                     l4442:
  1944                           
  1945                           ; BSR set to: 1
  1946  001804  0101               	movlb	1	; () banked
  1947  001806  0101               	movlb	1	; () banked
  1948  001808  AF89               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1949  00180A  D7F3               	goto	l4440
  1950  00180C                     l4444:
  1951                           
  1952                           ; BSR set to: 1
  1953  00180C  0101               	movlb	1	; () banked
  1954  00180E  0101               	movlb	1	; () banked
  1955  001810  5188               	movf	___lwmod@divisor& (0+255),w,b
  1956  001812  0101               	movlb	1	; () banked
  1957  001814  0101               	movlb	1	; () banked
  1958  001816  5D86               	subwf	___lwmod@dividend& (0+255),w,b
  1959  001818  0101               	movlb	1	; () banked
  1960  00181A  0101               	movlb	1	; () banked
  1961  00181C  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1962  00181E  0101               	movlb	1	; () banked
  1963  001820  0101               	movlb	1	; () banked
  1964  001822  5987               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1965  001824  A0D8               	btfss	status,0,c
  1966  001826  D00C               	goto	l4448
  1967                           
  1968                           ; BSR set to: 1
  1969  001828  0101               	movlb	1	; () banked
  1970  00182A  0101               	movlb	1	; () banked
  1971  00182C  5188               	movf	___lwmod@divisor& (0+255),w,b
  1972  00182E  0101               	movlb	1	; () banked
  1973  001830  0101               	movlb	1	; () banked
  1974  001832  5F86               	subwf	___lwmod@dividend& (0+255),f,b
  1975  001834  0101               	movlb	1	; () banked
  1976  001836  0101               	movlb	1	; () banked
  1977  001838  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1978  00183A  0101               	movlb	1	; () banked
  1979  00183C  0101               	movlb	1	; () banked
  1980  00183E  5B87               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1981  001840                     l4448:
  1982                           
  1983                           ; BSR set to: 1
  1984  001840  0101               	movlb	1	; () banked
  1985  001842  0101               	movlb	1	; () banked
  1986  001844  0101               	movlb	1	; () banked
  1987  001846  90D8               	bcf	status,0,c
  1988  001848  3389               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1989  00184A  3388               	rrcf	___lwmod@divisor& (0+255),f,b
  1990                           
  1991                           ; BSR set to: 1
  1992  00184C  0101               	movlb	1	; () banked
  1993  00184E  0101               	movlb	1	; () banked
  1994  001850  2F8B               	decfsz	___lwmod@counter& (0+255),f,b
  1995  001852  D7DC               	goto	l4444
  1996  001854                     l1128:
  1997                           
  1998                           ; BSR set to: 1
  1999  001854  C186  F186         	movff	___lwmod@dividend,?___lwmod
  2000  001858  C187  F187         	movff	___lwmod@dividend+1,?___lwmod+1
  2001                           
  2002                           ; BSR set to: 1
  2003  00185C  0012               	return	
  2004  00185E                     __end_of___lwmod:
  2005                           	opt stack 0
  2006                           tblptru	equ	0xFF8
  2007                           tblptrh	equ	0xFF7
  2008                           tblptrl	equ	0xFF6
  2009                           tablat	equ	0xFF5
  2010                           prodh	equ	0xFF4
  2011                           prodl	equ	0xFF3
  2012                           intcon2	equ	0xFF1
  2013                           postinc0	equ	0xFEE
  2014                           wreg	equ	0xFE8
  2015                           indf1	equ	0xFE7
  2016                           postdec1	equ	0xFE5
  2017                           fsr1h	equ	0xFE2
  2018                           fsr1l	equ	0xFE1
  2019                           indf2	equ	0xFDF
  2020                           postinc2	equ	0xFDE
  2021                           postdec2	equ	0xFDD
  2022                           fsr2h	equ	0xFDA
  2023                           fsr2l	equ	0xFD9
  2024                           status	equ	0xFD8
  2025                           
  2026 ;; *************** function _FromMainHigh_sendmsg *****************
  2027 ;; Defined at:
  2028 ;;		line 174 in file "../src/messages.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;  length          1    wreg     unsigned char 
  2031 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2032 ;;  data            2   23[BANK1 ] PTR void 
  2033 ;;		 -> main@t1thread_data(2), 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  length          1   25[BANK1 ] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  1    wreg      char 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2045 ;;      Params:         0       0       3       0       0
  2046 ;;      Locals:         0       0       1       0       0
  2047 ;;      Temps:          0       0       0       0       0
  2048 ;;      Totals:         0       0       4       0       0
  2049 ;;Total ram usage:        4 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:   13
  2052 ;; This function calls:
  2053 ;;		_send_msg
  2054 ;; This function is called by:
  2055 ;;		_timer1_lthread
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text4
  2060  001F56                     __ptext4:
  2061                           	opt stack 0
  2062  001F56                     _FromMainHigh_sendmsg:
  2063                           	opt stack 16
  2064                           
  2065                           ; BSR set to: 1
  2066                           ;incstack = 0
  2067                           ;FromMainHigh_sendmsg@length stored from wreg
  2068  001F56  CFE8 F19F          	movff	wreg,FromMainHigh_sendmsg@length
  2069                           
  2070                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2071  001F5A  0102               	movlb	2	; () banked
  2072  001F5C  0E02               	movlw	high _FromMainHigh_MQ
  2073  001F5E  0101               	movlb	1	; () banked
  2074  001F60  0101               	movlb	1	; () banked
  2075  001F62  6F91               	movwf	(send_msg@qptr+1)& (0+255),b
  2076  001F64  0102               	movlb	2	; () banked
  2077  001F66  0E00               	movlw	low _FromMainHigh_MQ
  2078  001F68  0101               	movlb	1	; () banked
  2079  001F6A  0101               	movlb	1	; () banked
  2080  001F6C  6F90               	movwf	send_msg@qptr& (0+255),b
  2081  001F6E  C19F  F192         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2082  001F72  C19C  F193         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2083  001F76  0101               	movlb	1	; () banked
  2084  001F78  0101               	movlb	1	; () banked
  2085  001F7A  C19E  F195         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2086  001F7E  0101               	movlb	1	; () banked
  2087  001F80  0101               	movlb	1	; () banked
  2088  001F82  C19D  F194         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2089  001F86  ECD9  F006         	call	_send_msg	;wreg free
  2090  001F8A  0012               	return	
  2091  001F8C                     __end_of_FromMainHigh_sendmsg:
  2092                           	opt stack 0
  2093                           tblptru	equ	0xFF8
  2094                           tblptrh	equ	0xFF7
  2095                           tblptrl	equ	0xFF6
  2096                           tablat	equ	0xFF5
  2097                           prodh	equ	0xFF4
  2098                           prodl	equ	0xFF3
  2099                           intcon2	equ	0xFF1
  2100                           postinc0	equ	0xFEE
  2101                           wreg	equ	0xFE8
  2102                           indf1	equ	0xFE7
  2103                           postdec1	equ	0xFE5
  2104                           fsr1h	equ	0xFE2
  2105                           fsr1l	equ	0xFE1
  2106                           indf2	equ	0xFDF
  2107                           postinc2	equ	0xFDE
  2108                           postdec2	equ	0xFDD
  2109                           fsr2h	equ	0xFDA
  2110                           fsr2l	equ	0xFD9
  2111                           status	equ	0xFD8
  2112                           
  2113 ;; *************** function _send_msg *****************
  2114 ;; Defined at:
  2115 ;;		line 24 in file "../src/messages.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2118 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2119 ;;  length          1   12[BANK1 ] unsigned char 
  2120 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2121 ;;  data            2   14[BANK1 ] PTR void 
  2122 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  2123 ;;		 -> main@uc(13), 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  2126 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  2127 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2128 ;;  tlength         2   17[BANK1 ] unsigned int 
  2129 ;;  slot            1   19[BANK1 ] unsigned char 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      char 
  2132 ;; Registers used:
  2133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2139 ;;      Params:         0       0       6       0       0
  2140 ;;      Locals:         0       0       5       0       0
  2141 ;;      Temps:          0       0       1       0       0
  2142 ;;      Totals:         0       0      12       0       0
  2143 ;;Total ram usage:       12 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:   12
  2146 ;; This function calls:
  2147 ;;		___awmod
  2148 ;;		_memcpy
  2149 ;; This function is called by:
  2150 ;;		_FromMainHigh_sendmsg
  2151 ;;		_FromMainLow_sendmsg
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text5
  2156  000DB2                     __ptext5:
  2157                           	opt stack 0
  2158  000DB2                     _send_msg:
  2159                           	opt stack 16
  2160                           
  2161                           ;messages.c: 25: unsigned char slot;
  2162                           ;messages.c: 27: msg *qmsg;
  2163                           ;messages.c: 28: size_t tlength = length;
  2164                           
  2165                           ;incstack = 0
  2166  000DB2  0101               	movlb	1	; () banked
  2167  000DB4  0101               	movlb	1	; () banked
  2168  000DB6  C192  F197         	movff	send_msg@length,send_msg@tlength
  2169  000DBA  0101               	movlb	1	; () banked
  2170  000DBC  0101               	movlb	1	; () banked
  2171  000DBE  6B98               	clrf	(send_msg@tlength+1)& (0+255),b
  2172                           
  2173                           ; BSR set to: 1
  2174                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2175  000DC0  0101               	movlb	1	; () banked
  2176  000DC2  EE20 F041          	lfsr	2,65
  2177  000DC6  0101               	movlb	1	; () banked
  2178  000DC8  5190               	movf	send_msg@qptr& (0+255),w,b
  2179  000DCA  26D9               	addwf	fsr2l,f,c
  2180  000DCC  0101               	movlb	1	; () banked
  2181  000DCE  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  2182  000DD0  22DA               	addwfc	fsr2h,f,c
  2183  000DD2  50DF               	movf	indf2,w,c
  2184  000DD4  0101               	movlb	1	; () banked
  2185  000DD6  0101               	movlb	1	; () banked
  2186  000DD8  6F99               	movwf	send_msg@slot& (0+255),b
  2187                           
  2188                           ; BSR set to: 1
  2189                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2190  000DDA  0101               	movlb	1	; () banked
  2191  000DDC  0101               	movlb	1	; () banked
  2192  000DDE  5199               	movf	send_msg@slot& (0+255),w,b
  2193  000DE0  0D0D               	mullw	13
  2194  000DE2  50F3               	movf	prodl,w,c
  2195  000DE4  0101               	movlb	1	; () banked
  2196  000DE6  0101               	movlb	1	; () banked
  2197  000DE8  2590               	addwf	send_msg@qptr& (0+255),w,b
  2198  000DEA  0101               	movlb	1	; () banked
  2199  000DEC  0101               	movlb	1	; () banked
  2200  000DEE  6F9A               	movwf	send_msg@qmsg& (0+255),b
  2201  000DF0  50F4               	movf	prodh,w,c
  2202  000DF2  0101               	movlb	1	; () banked
  2203  000DF4  0101               	movlb	1	; () banked
  2204  000DF6  2191               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2205  000DF8  0101               	movlb	1	; () banked
  2206  000DFA  6F9B               	movwf	(send_msg@qmsg+1)& (0+255),b
  2207                           
  2208                           ; BSR set to: 1
  2209                           ;messages.c: 41: if (qmsg->full != 0) {
  2210  000DFC  C19A  FFD9         	movff	send_msg@qmsg,fsr2l
  2211  000E00  C19B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2212  000E04  50DF               	movf	indf2,w,c
  2213  000E06  B4D8               	btfsc	status,2,c
  2214  000E08  D002               	goto	l4070
  2215                           
  2216                           ; BSR set to: 1
  2217                           ;messages.c: 42: return (-1);
  2218  000E0A  0EFF               	movlw	255
  2219  000E0C  0012               	return	
  2220  000E0E                     l4070:
  2221                           
  2222                           ; BSR set to: 1
  2223                           ;messages.c: 43: }
  2224                           ;messages.c: 46: qmsg->length = length;
  2225  000E0E  0101               	movlb	1	; () banked
  2226  000E10  EE20 F001          	lfsr	2,1
  2227  000E14  0101               	movlb	1	; () banked
  2228  000E16  519A               	movf	send_msg@qmsg& (0+255),w,b
  2229  000E18  26D9               	addwf	fsr2l,f,c
  2230  000E1A  0101               	movlb	1	; () banked
  2231  000E1C  519B               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2232  000E1E  22DA               	addwfc	fsr2h,f,c
  2233  000E20  0101               	movlb	1	; () banked
  2234  000E22  C192  FFDF         	movff	send_msg@length,indf2
  2235                           
  2236                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2237  000E26  0101               	movlb	1	; () banked
  2238  000E28  EE20 F002          	lfsr	2,2
  2239  000E2C  0101               	movlb	1	; () banked
  2240  000E2E  519A               	movf	send_msg@qmsg& (0+255),w,b
  2241  000E30  26D9               	addwf	fsr2l,f,c
  2242  000E32  0101               	movlb	1	; () banked
  2243  000E34  519B               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2244  000E36  22DA               	addwfc	fsr2h,f,c
  2245  000E38  0101               	movlb	1	; () banked
  2246  000E3A  C193  FFDF         	movff	send_msg@msgtype,indf2
  2247                           
  2248                           ; BSR set to: 1
  2249                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2250  000E3E  0E03               	movlw	3
  2251  000E40  0101               	movlb	1	; () banked
  2252  000E42  0101               	movlb	1	; () banked
  2253  000E44  259A               	addwf	send_msg@qmsg& (0+255),w,b
  2254  000E46  0101               	movlb	1	; () banked
  2255  000E48  0101               	movlb	1	; () banked
  2256  000E4A  6F86               	movwf	memcpy@d1& (0+255),b
  2257  000E4C  0E00               	movlw	0
  2258  000E4E  0101               	movlb	1	; () banked
  2259  000E50  0101               	movlb	1	; () banked
  2260  000E52  219B               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2261  000E54  0101               	movlb	1	; () banked
  2262  000E56  6F87               	movwf	(memcpy@d1+1)& (0+255),b
  2263  000E58  0101               	movlb	1	; () banked
  2264  000E5A  0101               	movlb	1	; () banked
  2265  000E5C  C195  F189         	movff	send_msg@data+1,memcpy@s1+1
  2266  000E60  0101               	movlb	1	; () banked
  2267  000E62  0101               	movlb	1	; () banked
  2268  000E64  C194  F188         	movff	send_msg@data,memcpy@s1
  2269  000E68  C197  F18A         	movff	send_msg@tlength,memcpy@n
  2270  000E6C  C198  F18B         	movff	send_msg@tlength+1,memcpy@n+1
  2271  000E70  EC40  F00E         	call	_memcpy	;wreg free
  2272                           
  2273                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  2274  000E74  0101               	movlb	1	; () banked
  2275  000E76  EE20 F041          	lfsr	2,65
  2276  000E7A  0101               	movlb	1	; () banked
  2277  000E7C  5190               	movf	send_msg@qptr& (0+255),w,b
  2278  000E7E  26D9               	addwf	fsr2l,f,c
  2279  000E80  0101               	movlb	1	; () banked
  2280  000E82  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  2281  000E84  22DA               	addwfc	fsr2h,f,c
  2282  000E86  0101               	movlb	1	; () banked
  2283  000E88  EE10 F041          	lfsr	1,65
  2284  000E8C  0101               	movlb	1	; () banked
  2285  000E8E  5190               	movf	send_msg@qptr& (0+255),w,b
  2286  000E90  26E1               	addwf	fsr1l,f,c
  2287  000E92  0101               	movlb	1	; () banked
  2288  000E94  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  2289  000E96  22E2               	addwfc	fsr1h,f,c
  2290  000E98  50E7               	movf	indf1,w,c
  2291  000E9A  0101               	movlb	1	; () banked
  2292  000E9C  6F96               	movwf	??_send_msg& (0+255),b
  2293  000E9E  0E01               	movlw	1
  2294  000EA0  0101               	movlb	1	; () banked
  2295  000EA2  2596               	addwf	??_send_msg& (0+255),w,b
  2296  000EA4  0101               	movlb	1	; () banked
  2297  000EA6  0101               	movlb	1	; () banked
  2298  000EA8  6F86               	movwf	___awmod@dividend& (0+255),b
  2299  000EAA  0101               	movlb	1	; () banked
  2300  000EAC  0101               	movlb	1	; () banked
  2301  000EAE  6B87               	clrf	(___awmod@dividend+1)& (0+255),b
  2302  000EB0  0E00               	movlw	0
  2303  000EB2  2387               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  2304  000EB4  0E00               	movlw	0
  2305  000EB6  0101               	movlb	1	; () banked
  2306  000EB8  0101               	movlb	1	; () banked
  2307  000EBA  6F89               	movwf	(___awmod@divisor+1)& (0+255),b
  2308  000EBC  0E05               	movlw	5
  2309  000EBE  0101               	movlb	1	; () banked
  2310  000EC0  6F88               	movwf	___awmod@divisor& (0+255),b
  2311  000EC2  EC05  F008         	call	___awmod	;wreg free
  2312  000EC6  0101               	movlb	1	; () banked
  2313  000EC8  0101               	movlb	1	; () banked
  2314  000ECA  5186               	movf	?___awmod& (0+255),w,b
  2315  000ECC  6EDF               	movwf	indf2,c
  2316                           
  2317                           ; BSR set to: 1
  2318                           ;messages.c: 59: qmsg->full = 1;
  2319  000ECE  C19A  FFD9         	movff	send_msg@qmsg,fsr2l
  2320  000ED2  C19B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2321  000ED6  0E01               	movlw	1
  2322  000ED8  6EDF               	movwf	indf2,c
  2323                           
  2324                           ; BSR set to: 1
  2325                           ;messages.c: 60: return (1);
  2326  000EDA  0E01               	movlw	1
  2327  000EDC  0012               	return	
  2328  000EDE                     __end_of_send_msg:
  2329                           	opt stack 0
  2330                           tblptru	equ	0xFF8
  2331                           tblptrh	equ	0xFF7
  2332                           tblptrl	equ	0xFF6
  2333                           tablat	equ	0xFF5
  2334                           prodh	equ	0xFF4
  2335                           prodl	equ	0xFF3
  2336                           intcon2	equ	0xFF1
  2337                           postinc0	equ	0xFEE
  2338                           wreg	equ	0xFE8
  2339                           indf1	equ	0xFE7
  2340                           postdec1	equ	0xFE5
  2341                           fsr1h	equ	0xFE2
  2342                           fsr1l	equ	0xFE1
  2343                           indf2	equ	0xFDF
  2344                           postinc2	equ	0xFDE
  2345                           postdec2	equ	0xFDD
  2346                           fsr2h	equ	0xFDA
  2347                           fsr2l	equ	0xFD9
  2348                           status	equ	0xFD8
  2349                           
  2350 ;; *************** function _timer0_lthread *****************
  2351 ;; Defined at:
  2352 ;;		line 9 in file "../src/timer0_thread.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2355 ;;		 -> main@t0thread_data(2), 
  2356 ;;  msgtype         2    2[BANK1 ] int 
  2357 ;;  length          2    4[BANK1 ] int 
  2358 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2359 ;;		 -> main@msgbuffer(11), 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2362 ;;		 -> main@msgbuffer(11), 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  2    0[BANK1 ] int 
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, status,0
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2372 ;;      Params:         0       0       8       0       0
  2373 ;;      Locals:         0       0       2       0       0
  2374 ;;      Temps:          0       0       0       0       0
  2375 ;;      Totals:         0       0      10       0       0
  2376 ;;Total ram usage:       10 bytes
  2377 ;; Hardware stack levels used:    1
  2378 ;; Hardware stack levels required when called:   11
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_main
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text6
  2387  002154                     __ptext6:
  2388                           	opt stack 0
  2389  002154                     _timer0_lthread:
  2390                           	opt stack 19
  2391                           
  2392                           ;timer0_thread.c: 10: unsigned int *msgval;
  2393                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2394                           
  2395                           ; BSR set to: 1
  2396                           ;incstack = 0
  2397  002154  0101               	movlb	1	; () banked
  2398  002156  0101               	movlb	1	; () banked
  2399  002158  C18D  F18F         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2400  00215C  0101               	movlb	1	; () banked
  2401  00215E  0101               	movlb	1	; () banked
  2402  002160  C18C  F18E         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2403                           
  2404                           ; BSR set to: 1
  2405  002164  0012               	return	
  2406  002166                     __end_of_timer0_lthread:
  2407                           	opt stack 0
  2408                           tblptru	equ	0xFF8
  2409                           tblptrh	equ	0xFF7
  2410                           tblptrl	equ	0xFF6
  2411                           tablat	equ	0xFF5
  2412                           prodh	equ	0xFF4
  2413                           prodl	equ	0xFF3
  2414                           intcon2	equ	0xFF1
  2415                           postinc0	equ	0xFEE
  2416                           wreg	equ	0xFE8
  2417                           indf1	equ	0xFE7
  2418                           postdec1	equ	0xFE5
  2419                           fsr1h	equ	0xFE2
  2420                           fsr1l	equ	0xFE1
  2421                           indf2	equ	0xFDF
  2422                           postinc2	equ	0xFDE
  2423                           postdec2	equ	0xFDD
  2424                           fsr2h	equ	0xFDA
  2425                           fsr2l	equ	0xFD9
  2426                           status	equ	0xFD8
  2427                           
  2428 ;; *************** function _init_uart_recv *****************
  2429 ;; Defined at:
  2430 ;;		line 54 in file "../src/my_uart.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2433 ;;		 -> main@uc(13), 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;		None               void
  2438 ;; Registers used:
  2439 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2445 ;;      Params:         0       0       2       0       0
  2446 ;;      Locals:         0       0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0
  2448 ;;      Totals:         0       0       2       0       0
  2449 ;;Total ram usage:        2 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:   11
  2452 ;; This function calls:
  2453 ;;		Nothing
  2454 ;; This function is called by:
  2455 ;;		_main
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text7
  2460  002102                     __ptext7:
  2461                           	opt stack 0
  2462  002102                     _init_uart_recv:
  2463                           	opt stack 19
  2464                           
  2465                           ;my_uart.c: 57: uc_ptr = uc;
  2466                           
  2467                           ; BSR set to: 1
  2468                           ;incstack = 0
  2469  002102  0101               	movlb	1	; () banked
  2470  002104  C187  F053         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2471  002108  0101               	movlb	1	; () banked
  2472  00210A  C186  F052         	movff	init_uart_recv@uc,_uc_ptr
  2473                           
  2474                           ; BSR set to: 1
  2475                           ;my_uart.c: 58: uc_ptr->buflen = 0;
  2476  00210E  EE20 F005          	lfsr	2,5
  2477  002112  5052               	movf	_uc_ptr,w,c
  2478  002114  26D9               	addwf	fsr2l,f,c
  2479  002116  5053               	movf	_uc_ptr+1,w,c
  2480  002118  22DA               	addwfc	fsr2h,f,c
  2481  00211A  0E00               	movlw	0
  2482  00211C  6EDF               	movwf	indf2,c
  2483                           
  2484                           ; BSR set to: 1
  2485  00211E  0012               	return	
  2486  002120                     __end_of_init_uart_recv:
  2487                           	opt stack 0
  2488                           tblptru	equ	0xFF8
  2489                           tblptrh	equ	0xFF7
  2490                           tblptrl	equ	0xFF6
  2491                           tablat	equ	0xFF5
  2492                           prodh	equ	0xFF4
  2493                           prodl	equ	0xFF3
  2494                           intcon2	equ	0xFF1
  2495                           postinc0	equ	0xFEE
  2496                           wreg	equ	0xFE8
  2497                           indf1	equ	0xFE7
  2498                           postdec1	equ	0xFE5
  2499                           fsr1h	equ	0xFE2
  2500                           fsr1l	equ	0xFE1
  2501                           indf2	equ	0xFDF
  2502                           postinc2	equ	0xFDE
  2503                           postdec2	equ	0xFDD
  2504                           fsr2h	equ	0xFDA
  2505                           fsr2l	equ	0xFD9
  2506                           status	equ	0xFD8
  2507                           
  2508 ;; *************** function _init_timer1_lthread *****************
  2509 ;; Defined at:
  2510 ;;		line 6 in file "../src/timer1_thread.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2513 ;;		 -> main@t1thread_data(2), 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;		None               void
  2518 ;; Registers used:
  2519 ;;		wreg, fsr2l, fsr2h
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2525 ;;      Params:         0       0       2       0       0
  2526 ;;      Locals:         0       0       0       0       0
  2527 ;;      Temps:          0       0       0       0       0
  2528 ;;      Totals:         0       0       2       0       0
  2529 ;;Total ram usage:        2 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:   11
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		_main
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           	psect	text8
  2540  002166                     __ptext8:
  2541                           	opt stack 0
  2542  002166                     _init_timer1_lthread:
  2543                           	opt stack 19
  2544                           
  2545                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2546                           
  2547                           ; BSR set to: 1
  2548                           ;incstack = 0
  2549  002166  C186  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2550  00216A  C187  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2551  00216E  0E00               	movlw	0
  2552  002170  6EDE               	movwf	postinc2,c
  2553  002172  0E00               	movlw	0
  2554  002174  6EDD               	movwf	postdec2,c
  2555  002176  0012               	return	
  2556  002178                     __end_of_init_timer1_lthread:
  2557                           	opt stack 0
  2558                           tblptru	equ	0xFF8
  2559                           tblptrh	equ	0xFF7
  2560                           tblptrl	equ	0xFF6
  2561                           tablat	equ	0xFF5
  2562                           prodh	equ	0xFF4
  2563                           prodl	equ	0xFF3
  2564                           intcon2	equ	0xFF1
  2565                           postinc0	equ	0xFEE
  2566                           wreg	equ	0xFE8
  2567                           indf1	equ	0xFE7
  2568                           postdec1	equ	0xFE5
  2569                           fsr1h	equ	0xFE2
  2570                           fsr1l	equ	0xFE1
  2571                           indf2	equ	0xFDF
  2572                           postinc2	equ	0xFDE
  2573                           postdec2	equ	0xFDD
  2574                           fsr2h	equ	0xFDA
  2575                           fsr2l	equ	0xFD9
  2576                           status	equ	0xFD8
  2577                           
  2578 ;; *************** function _init_queues *****************
  2579 ;; Defined at:
  2580 ;;		line 194 in file "../src/messages.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;		None
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;		None
  2585 ;; Return value:  Size  Location     Type
  2586 ;;		None               void
  2587 ;; Registers used:
  2588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2594 ;;      Params:         0       0       0       0       0
  2595 ;;      Locals:         0       0       0       0       0
  2596 ;;      Temps:          0       0       1       0       0
  2597 ;;      Totals:         0       0       1       0       0
  2598 ;;Total ram usage:        1 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; Hardware stack levels required when called:   12
  2601 ;; This function calls:
  2602 ;;		_init_queue
  2603 ;; This function is called by:
  2604 ;;		_main
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           	psect	text9
  2609  001B40                     __ptext9:
  2610                           	opt stack 0
  2611  001B40                     _init_queues:
  2612                           	opt stack 18
  2613                           
  2614                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2615                           
  2616                           ;incstack = 0
  2617  001B40  0101               	movlb	1	; () banked
  2618  001B42  6F8A               	movwf	??_init_queues& (0+255),b
  2619  001B44  0E00               	movlw	0
  2620  001B46  6E50               	movwf	_MQ_Main_Willing_to_block,c
  2621  001B48  0101               	movlb	1	; () banked
  2622  001B4A  518A               	movf	??_init_queues& (0+255),w,b
  2623                           
  2624                           ; BSR set to: 1
  2625                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2626  001B4C  0101               	movlb	1	; () banked
  2627  001B4E  0E01               	movlw	high _ToMainLow_MQ
  2628  001B50  0101               	movlb	1	; () banked
  2629  001B52  0101               	movlb	1	; () banked
  2630  001B54  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2631  001B56  0101               	movlb	1	; () banked
  2632  001B58  0E43               	movlw	low _ToMainLow_MQ
  2633  001B5A  0101               	movlb	1	; () banked
  2634  001B5C  0101               	movlb	1	; () banked
  2635  001B5E  6F86               	movwf	init_queue@qptr& (0+255),b
  2636  001B60  ECF3  F00C         	call	_init_queue	;wreg free
  2637                           
  2638                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2639  001B64  0101               	movlb	1	; () banked
  2640  001B66  0E01               	movlw	high _ToMainHigh_MQ
  2641  001B68  0101               	movlb	1	; () banked
  2642  001B6A  0101               	movlb	1	; () banked
  2643  001B6C  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2644  001B6E  0101               	movlb	1	; () banked
  2645  001B70  0E00               	movlw	low _ToMainHigh_MQ
  2646  001B72  0101               	movlb	1	; () banked
  2647  001B74  0101               	movlb	1	; () banked
  2648  001B76  6F86               	movwf	init_queue@qptr& (0+255),b
  2649  001B78  ECF3  F00C         	call	_init_queue	;wreg free
  2650                           
  2651                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2652  001B7C  0102               	movlb	2	; () banked
  2653  001B7E  0E02               	movlw	high _FromMainLow_MQ
  2654  001B80  0101               	movlb	1	; () banked
  2655  001B82  0101               	movlb	1	; () banked
  2656  001B84  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2657  001B86  0102               	movlb	2	; () banked
  2658  001B88  0E43               	movlw	low _FromMainLow_MQ
  2659  001B8A  0101               	movlb	1	; () banked
  2660  001B8C  0101               	movlb	1	; () banked
  2661  001B8E  6F86               	movwf	init_queue@qptr& (0+255),b
  2662  001B90  ECF3  F00C         	call	_init_queue	;wreg free
  2663                           
  2664                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2665  001B94  0102               	movlb	2	; () banked
  2666  001B96  0E02               	movlw	high _FromMainHigh_MQ
  2667  001B98  0101               	movlb	1	; () banked
  2668  001B9A  0101               	movlb	1	; () banked
  2669  001B9C  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2670  001B9E  0102               	movlb	2	; () banked
  2671  001BA0  0E00               	movlw	low _FromMainHigh_MQ
  2672  001BA2  0101               	movlb	1	; () banked
  2673  001BA4  0101               	movlb	1	; () banked
  2674  001BA6  6F86               	movwf	init_queue@qptr& (0+255),b
  2675  001BA8  ECF3  F00C         	call	_init_queue	;wreg free
  2676  001BAC  0012               	return	
  2677  001BAE                     __end_of_init_queues:
  2678                           	opt stack 0
  2679                           tblptru	equ	0xFF8
  2680                           tblptrh	equ	0xFF7
  2681                           tblptrl	equ	0xFF6
  2682                           tablat	equ	0xFF5
  2683                           prodh	equ	0xFF4
  2684                           prodl	equ	0xFF3
  2685                           intcon2	equ	0xFF1
  2686                           postinc0	equ	0xFEE
  2687                           wreg	equ	0xFE8
  2688                           indf1	equ	0xFE7
  2689                           postdec1	equ	0xFE5
  2690                           fsr1h	equ	0xFE2
  2691                           fsr1l	equ	0xFE1
  2692                           indf2	equ	0xFDF
  2693                           postinc2	equ	0xFDE
  2694                           postdec2	equ	0xFDD
  2695                           fsr2h	equ	0xFDA
  2696                           fsr2l	equ	0xFD9
  2697                           status	equ	0xFD8
  2698                           
  2699 ;; *************** function _init_queue *****************
  2700 ;; Defined at:
  2701 ;;		line 14 in file "../src/messages.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2704 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  i               1    3[BANK1 ] unsigned char 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;		None               void
  2709 ;; Registers used:
  2710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2716 ;;      Params:         0       0       2       0       0
  2717 ;;      Locals:         0       0       1       0       0
  2718 ;;      Temps:          0       0       1       0       0
  2719 ;;      Totals:         0       0       4       0       0
  2720 ;;Total ram usage:        4 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:   11
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_init_queues
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text10
  2731  0019E6                     __ptext10:
  2732                           	opt stack 0
  2733  0019E6                     _init_queue:
  2734                           	opt stack 18
  2735                           
  2736                           ;messages.c: 15: unsigned char i;
  2737                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2738                           
  2739                           ;incstack = 0
  2740  0019E6  0101               	movlb	1	; () banked
  2741  0019E8  EE20 F041          	lfsr	2,65
  2742  0019EC  0101               	movlb	1	; () banked
  2743  0019EE  5186               	movf	init_queue@qptr& (0+255),w,b
  2744  0019F0  26D9               	addwf	fsr2l,f,c
  2745  0019F2  0101               	movlb	1	; () banked
  2746  0019F4  5187               	movf	(init_queue@qptr+1)& (0+255),w,b
  2747  0019F6  22DA               	addwfc	fsr2h,f,c
  2748  0019F8  0E00               	movlw	0
  2749  0019FA  6EDF               	movwf	indf2,c
  2750                           
  2751                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2752  0019FC  0101               	movlb	1	; () banked
  2753  0019FE  EE20 F042          	lfsr	2,66
  2754  001A02  0101               	movlb	1	; () banked
  2755  001A04  5186               	movf	init_queue@qptr& (0+255),w,b
  2756  001A06  26D9               	addwf	fsr2l,f,c
  2757  001A08  0101               	movlb	1	; () banked
  2758  001A0A  5187               	movf	(init_queue@qptr+1)& (0+255),w,b
  2759  001A0C  22DA               	addwfc	fsr2h,f,c
  2760  001A0E  0E00               	movlw	0
  2761  001A10  6EDF               	movwf	indf2,c
  2762                           
  2763                           ; BSR set to: 1
  2764                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2765  001A12  0101               	movlb	1	; () banked
  2766  001A14  6F88               	movwf	??_init_queue& (0+255),b
  2767  001A16  0E00               	movlw	0
  2768  001A18  0101               	movlb	1	; () banked
  2769  001A1A  0101               	movlb	1	; () banked
  2770  001A1C  6F89               	movwf	init_queue@i& (0+255),b
  2771  001A1E  0101               	movlb	1	; () banked
  2772  001A20  5188               	movf	??_init_queue& (0+255),w,b
  2773                           
  2774                           ; BSR set to: 1
  2775  001A22  0E04               	movlw	4
  2776  001A24  0101               	movlb	1	; () banked
  2777  001A26  0101               	movlb	1	; () banked
  2778  001A28  6589               	cpfsgt	init_queue@i& (0+255),b
  2779  001A2A  D001               	goto	l4052
  2780  001A2C  0012               	return	
  2781  001A2E                     l4052:
  2782                           
  2783                           ; BSR set to: 1
  2784                           ;messages.c: 20: qptr->queue[i].full = 0;
  2785  001A2E  0101               	movlb	1	; () banked
  2786  001A30  0101               	movlb	1	; () banked
  2787  001A32  5189               	movf	init_queue@i& (0+255),w,b
  2788  001A34  0D0D               	mullw	13
  2789  001A36  50F3               	movf	prodl,w,c
  2790  001A38  0101               	movlb	1	; () banked
  2791  001A3A  0101               	movlb	1	; () banked
  2792  001A3C  2586               	addwf	init_queue@qptr& (0+255),w,b
  2793  001A3E  6ED9               	movwf	fsr2l,c
  2794  001A40  50F4               	movf	prodh,w,c
  2795  001A42  0101               	movlb	1	; () banked
  2796  001A44  0101               	movlb	1	; () banked
  2797  001A46  2187               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2798  001A48  6EDA               	movwf	fsr2h,c
  2799  001A4A  0E00               	movlw	0
  2800  001A4C  6EDF               	movwf	indf2,c
  2801                           
  2802                           ; BSR set to: 1
  2803  001A4E  0101               	movlb	1	; () banked
  2804  001A50  0101               	movlb	1	; () banked
  2805  001A52  2B89               	incf	init_queue@i& (0+255),f,b
  2806                           
  2807                           ; BSR set to: 1
  2808  001A54  0E04               	movlw	4
  2809  001A56  0101               	movlb	1	; () banked
  2810  001A58  0101               	movlb	1	; () banked
  2811  001A5A  6589               	cpfsgt	init_queue@i& (0+255),b
  2812  001A5C  D7E8               	goto	l4052
  2813  001A5E  0012               	return	
  2814  001A60                     __end_of_init_queue:
  2815                           	opt stack 0
  2816                           tblptru	equ	0xFF8
  2817                           tblptrh	equ	0xFF7
  2818                           tblptrl	equ	0xFF6
  2819                           tablat	equ	0xFF5
  2820                           prodh	equ	0xFF4
  2821                           prodl	equ	0xFF3
  2822                           intcon2	equ	0xFF1
  2823                           postinc0	equ	0xFEE
  2824                           wreg	equ	0xFE8
  2825                           indf1	equ	0xFE7
  2826                           postdec1	equ	0xFE5
  2827                           fsr1h	equ	0xFE2
  2828                           fsr1l	equ	0xFE1
  2829                           indf2	equ	0xFDF
  2830                           postinc2	equ	0xFDE
  2831                           postdec2	equ	0xFDD
  2832                           fsr2h	equ	0xFDA
  2833                           fsr2l	equ	0xFD9
  2834                           status	equ	0xFD8
  2835                           
  2836 ;; *************** function _init_i2c *****************
  2837 ;; Defined at:
  2838 ;;		line 441 in file "../src/my_i2c.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  2841 ;;		 -> main@ic(29), 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;		None
  2844 ;; Return value:  Size  Location     Type
  2845 ;;		None               void
  2846 ;; Registers used:
  2847 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2853 ;;      Params:         0       0       2       0       0
  2854 ;;      Locals:         0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0
  2856 ;;      Totals:         0       0       2       0       0
  2857 ;;Total ram usage:        2 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:   11
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_main
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text11
  2868  001BAE                     __ptext11:
  2869                           	opt stack 0
  2870  001BAE                     _init_i2c:
  2871                           	opt stack 19
  2872                           
  2873                           ;my_i2c.c: 442: ic_ptr = ic;
  2874                           
  2875                           ; BSR set to: 1
  2876                           ;incstack = 0
  2877  001BAE  0101               	movlb	1	; () banked
  2878  001BB0  0100               	movlb	0	; () banked
  2879  001BB2  C187  F0CE         	movff	init_i2c@ic+1,_ic_ptr+1
  2880  001BB6  0101               	movlb	1	; () banked
  2881  001BB8  0100               	movlb	0	; () banked
  2882  001BBA  C186  F0CD         	movff	init_i2c@ic,_ic_ptr
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;my_i2c.c: 443: ic_ptr->buflen = 0;
  2886  001BBE  0100               	movlb	0	; () banked
  2887  001BC0  EE20 F00A          	lfsr	2,10
  2888  001BC4  0100               	movlb	0	; () banked
  2889  001BC6  51CD               	movf	_ic_ptr& (0+255),w,b
  2890  001BC8  26D9               	addwf	fsr2l,f,c
  2891  001BCA  0100               	movlb	0	; () banked
  2892  001BCC  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2893  001BCE  22DA               	addwfc	fsr2h,f,c
  2894  001BD0  0E00               	movlw	0
  2895  001BD2  6EDF               	movwf	indf2,c
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;my_i2c.c: 444: ic_ptr->event_count = 0;
  2899  001BD4  0100               	movlb	0	; () banked
  2900  001BD6  EE20 F00C          	lfsr	2,12
  2901  001BDA  0100               	movlb	0	; () banked
  2902  001BDC  51CD               	movf	_ic_ptr& (0+255),w,b
  2903  001BDE  26D9               	addwf	fsr2l,f,c
  2904  001BE0  0100               	movlb	0	; () banked
  2905  001BE2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2906  001BE4  22DA               	addwfc	fsr2h,f,c
  2907  001BE6  0E00               	movlw	0
  2908  001BE8  6EDF               	movwf	indf2,c
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;my_i2c.c: 445: ic_ptr->status = 0x5;
  2912  001BEA  0100               	movlb	0	; () banked
  2913  001BEC  EE20 F00D          	lfsr	2,13
  2914  001BF0  0100               	movlb	0	; () banked
  2915  001BF2  51CD               	movf	_ic_ptr& (0+255),w,b
  2916  001BF4  26D9               	addwf	fsr2l,f,c
  2917  001BF6  0100               	movlb	0	; () banked
  2918  001BF8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2919  001BFA  22DA               	addwfc	fsr2h,f,c
  2920  001BFC  0E05               	movlw	5
  2921  001BFE  6EDF               	movwf	indf2,c
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;my_i2c.c: 446: ic_ptr->error_count = 0;
  2925  001C00  0100               	movlb	0	; () banked
  2926  001C02  EE20 F00F          	lfsr	2,15
  2927  001C06  0100               	movlb	0	; () banked
  2928  001C08  51CD               	movf	_ic_ptr& (0+255),w,b
  2929  001C0A  26D9               	addwf	fsr2l,f,c
  2930  001C0C  0100               	movlb	0	; () banked
  2931  001C0E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2932  001C10  22DA               	addwfc	fsr2h,f,c
  2933  001C12  0E00               	movlw	0
  2934  001C14  6EDF               	movwf	indf2,c
  2935                           
  2936                           ; BSR set to: 0
  2937  001C16  0012               	return	
  2938  001C18                     __end_of_init_i2c:
  2939                           	opt stack 0
  2940                           tblptru	equ	0xFF8
  2941                           tblptrh	equ	0xFF7
  2942                           tblptrl	equ	0xFF6
  2943                           tablat	equ	0xFF5
  2944                           prodh	equ	0xFF4
  2945                           prodl	equ	0xFF3
  2946                           intcon2	equ	0xFF1
  2947                           postinc0	equ	0xFEE
  2948                           wreg	equ	0xFE8
  2949                           indf1	equ	0xFE7
  2950                           postdec1	equ	0xFE5
  2951                           fsr1h	equ	0xFE2
  2952                           fsr1l	equ	0xFE1
  2953                           indf2	equ	0xFDF
  2954                           postinc2	equ	0xFDE
  2955                           postdec2	equ	0xFDD
  2956                           fsr2h	equ	0xFDA
  2957                           fsr2l	equ	0xFD9
  2958                           status	equ	0xFD8
  2959                           
  2960 ;; *************** function _i2c_master_send *****************
  2961 ;; Defined at:
  2962 ;;		line 44 in file "../src/my_i2c.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  sendlength      1    wreg     unsigned char 
  2965 ;;  recvlength      1    0[BANK1 ] unsigned char 
  2966 ;;  msg             2    1[BANK1 ] PTR unsigned char 
  2967 ;;		 -> main@msgbuffer(11), 
  2968 ;;  slave_addr      1    3[BANK1 ] unsigned char 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  sendlength      1    6[BANK1 ] unsigned char 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      unsigned char 
  2973 ;; Registers used:
  2974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2980 ;;      Params:         0       0       4       0       0
  2981 ;;      Locals:         0       0       1       0       0
  2982 ;;      Temps:          0       0       2       0       0
  2983 ;;      Totals:         0       0       7       0       0
  2984 ;;Total ram usage:        7 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:   11
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_main
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text12
  2995  000C74                     __ptext12:
  2996                           	opt stack 0
  2997  000C74                     _i2c_master_send:
  2998                           	opt stack 19
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;incstack = 0
  3002                           ;i2c_master_send@sendlength stored from wreg
  3003  000C74  CFE8 F18C          	movff	wreg,i2c_master_send@sendlength
  3004                           
  3005                           ;my_i2c.c: 46: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < sendlength; ic_ptr->outbu
      +                          flen++) {
  3006  000C78  0100               	movlb	0	; () banked
  3007  000C7A  EE20 F01A          	lfsr	2,26
  3008  000C7E  0100               	movlb	0	; () banked
  3009  000C80  51CD               	movf	_ic_ptr& (0+255),w,b
  3010  000C82  26D9               	addwf	fsr2l,f,c
  3011  000C84  0100               	movlb	0	; () banked
  3012  000C86  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  3013  000C88  22DA               	addwfc	fsr2h,f,c
  3014  000C8A  0E00               	movlw	0
  3015  000C8C  6EDF               	movwf	indf2,c
  3016  000C8E  D042               	goto	l4036
  3017  000C90                     l4032:
  3018                           
  3019                           ;my_i2c.c: 47: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  3020  000C90  0100               	movlb	0	; () banked
  3021  000C92  EE20 F01A          	lfsr	2,26
  3022  000C96  0100               	movlb	0	; () banked
  3023  000C98  51CD               	movf	_ic_ptr& (0+255),w,b
  3024  000C9A  26D9               	addwf	fsr2l,f,c
  3025  000C9C  0100               	movlb	0	; () banked
  3026  000C9E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  3027  000CA0  22DA               	addwfc	fsr2h,f,c
  3028  000CA2  50DF               	movf	indf2,w,c
  3029  000CA4  0101               	movlb	1	; () banked
  3030  000CA6  6F8A               	movwf	??_i2c_master_send& (0+255),b
  3031  000CA8  0101               	movlb	1	; () banked
  3032  000CAA  518A               	movf	??_i2c_master_send& (0+255),w,b
  3033  000CAC  0D01               	mullw	1
  3034  000CAE  50F3               	movf	prodl,w,c
  3035  000CB0  0101               	movlb	1	; () banked
  3036  000CB2  0101               	movlb	1	; () banked
  3037  000CB4  2587               	addwf	i2c_master_send@msg& (0+255),w,b
  3038  000CB6  6ED9               	movwf	fsr2l,c
  3039  000CB8  50F4               	movf	prodh,w,c
  3040  000CBA  0101               	movlb	1	; () banked
  3041  000CBC  0101               	movlb	1	; () banked
  3042  000CBE  2188               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  3043  000CC0  6EDA               	movwf	fsr2h,c
  3044  000CC2  0100               	movlb	0	; () banked
  3045  000CC4  EE10 F01A          	lfsr	1,26
  3046  000CC8  0100               	movlb	0	; () banked
  3047  000CCA  51CD               	movf	_ic_ptr& (0+255),w,b
  3048  000CCC  26E1               	addwf	fsr1l,f,c
  3049  000CCE  0100               	movlb	0	; () banked
  3050  000CD0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  3051  000CD2  22E2               	addwfc	fsr1h,f,c
  3052  000CD4  50E7               	movf	indf1,w,c
  3053  000CD6  0101               	movlb	1	; () banked
  3054  000CD8  6F8B               	movwf	(??_i2c_master_send+1)& (0+255),b
  3055  000CDA  0101               	movlb	1	; () banked
  3056  000CDC  518B               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3057  000CDE  0D01               	mullw	1
  3058  000CE0  0E10               	movlw	16
  3059  000CE2  26F3               	addwf	prodl,f,c
  3060  000CE4  0E00               	movlw	0
  3061  000CE6  22F4               	addwfc	prodh,f,c
  3062  000CE8  50F3               	movf	prodl,w,c
  3063  000CEA  0100               	movlb	0	; () banked
  3064  000CEC  0100               	movlb	0	; () banked
  3065  000CEE  25CD               	addwf	_ic_ptr& (0+255),w,b
  3066  000CF0  6EE1               	movwf	fsr1l,c
  3067  000CF2  50F4               	movf	prodh,w,c
  3068  000CF4  0100               	movlb	0	; () banked
  3069  000CF6  0100               	movlb	0	; () banked
  3070  000CF8  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3071  000CFA  6EE2               	movwf	fsr1h,c
  3072  000CFC  CFDF FFE7          	movff	indf2,indf1
  3073                           
  3074                           ; BSR set to: 0
  3075  000D00  0100               	movlb	0	; () banked
  3076  000D02  EE20 F01A          	lfsr	2,26
  3077  000D06  0100               	movlb	0	; () banked
  3078  000D08  51CD               	movf	_ic_ptr& (0+255),w,b
  3079  000D0A  26D9               	addwf	fsr2l,f,c
  3080  000D0C  0100               	movlb	0	; () banked
  3081  000D0E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  3082  000D10  22DA               	addwfc	fsr2h,f,c
  3083  000D12  2ADF               	incf	indf2,f,c
  3084  000D14                     l4036:
  3085                           
  3086                           ; BSR set to: 0
  3087  000D14  0100               	movlb	0	; () banked
  3088  000D16  EE20 F01A          	lfsr	2,26
  3089  000D1A  0100               	movlb	0	; () banked
  3090  000D1C  51CD               	movf	_ic_ptr& (0+255),w,b
  3091  000D1E  26D9               	addwf	fsr2l,f,c
  3092  000D20  0100               	movlb	0	; () banked
  3093  000D22  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  3094  000D24  22DA               	addwfc	fsr2h,f,c
  3095  000D26  50DF               	movf	indf2,w,c
  3096  000D28  0101               	movlb	1	; () banked
  3097  000D2A  6F8A               	movwf	??_i2c_master_send& (0+255),b
  3098  000D2C  0101               	movlb	1	; () banked
  3099  000D2E  0101               	movlb	1	; () banked
  3100  000D30  518C               	movf	i2c_master_send@sendlength& (0+255),w,b
  3101  000D32  0101               	movlb	1	; () banked
  3102  000D34  5D8A               	subwf	??_i2c_master_send& (0+255),w,b
  3103  000D36  A0D8               	btfss	status,0,c
  3104  000D38  D7AB               	goto	l4032
  3105                           
  3106                           ; BSR set to: 1
  3107                           ;my_i2c.c: 48: }
  3108                           ;my_i2c.c: 50: ic_ptr->slave_addr = slave_addr;
  3109                           
  3110                           ; BSR set to: 1
  3111  000D3A  0100               	movlb	0	; () banked
  3112  000D3C  EE20 F01C          	lfsr	2,28
  3113  000D40  0100               	movlb	0	; () banked
  3114  000D42  51CD               	movf	_ic_ptr& (0+255),w,b
  3115  000D44  26D9               	addwf	fsr2l,f,c
  3116  000D46  0100               	movlb	0	; () banked
  3117  000D48  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  3118  000D4A  22DA               	addwfc	fsr2h,f,c
  3119  000D4C  0101               	movlb	1	; () banked
  3120  000D4E  C189  FFDF         	movff	i2c_master_send@slave_addr,indf2
  3121                           
  3122                           ;my_i2c.c: 51: ic_ptr->outbuflen = sendlength;
  3123  000D52  0100               	movlb	0	; () banked
  3124  000D54  EE20 F01A          	lfsr	2,26
  3125  000D58  0100               	movlb	0	; () banked
  3126  000D5A  51CD               	movf	_ic_ptr& (0+255),w,b
  3127  000D5C  26D9               	addwf	fsr2l,f,c
  3128  000D5E  0100               	movlb	0	; () banked
  3129  000D60  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  3130  000D62  22DA               	addwfc	fsr2h,f,c
  3131  000D64  0101               	movlb	1	; () banked
  3132  000D66  C18C  FFDF         	movff	i2c_master_send@sendlength,indf2
  3133                           
  3134                           ;my_i2c.c: 52: ic_ptr->buflen = recvlength;
  3135  000D6A  0100               	movlb	0	; () banked
  3136  000D6C  EE20 F00A          	lfsr	2,10
  3137  000D70  0100               	movlb	0	; () banked
  3138  000D72  51CD               	movf	_ic_ptr& (0+255),w,b
  3139  000D74  26D9               	addwf	fsr2l,f,c
  3140  000D76  0100               	movlb	0	; () banked
  3141  000D78  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  3142  000D7A  22DA               	addwfc	fsr2h,f,c
  3143  000D7C  0101               	movlb	1	; () banked
  3144  000D7E  C186  FFDF         	movff	i2c_master_send@recvlength,indf2
  3145                           
  3146                           ;my_i2c.c: 53: ic_ptr->status = 0xA;
  3147  000D82  0100               	movlb	0	; () banked
  3148  000D84  EE20 F00D          	lfsr	2,13
  3149  000D88  0100               	movlb	0	; () banked
  3150  000D8A  51CD               	movf	_ic_ptr& (0+255),w,b
  3151  000D8C  26D9               	addwf	fsr2l,f,c
  3152  000D8E  0100               	movlb	0	; () banked
  3153  000D90  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  3154  000D92  22DA               	addwfc	fsr2h,f,c
  3155  000D94  0E0A               	movlw	10
  3156  000D96  6EDF               	movwf	indf2,c
  3157                           
  3158                           ;my_i2c.c: 54: ic_ptr->outbufind = 0;
  3159  000D98  0100               	movlb	0	; () banked
  3160  000D9A  EE20 F01B          	lfsr	2,27
  3161  000D9E  0100               	movlb	0	; () banked
  3162  000DA0  51CD               	movf	_ic_ptr& (0+255),w,b
  3163  000DA2  26D9               	addwf	fsr2l,f,c
  3164  000DA4  0100               	movlb	0	; () banked
  3165  000DA6  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  3166  000DA8  22DA               	addwfc	fsr2h,f,c
  3167  000DAA  0E00               	movlw	0
  3168  000DAC  6EDF               	movwf	indf2,c
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;my_i2c.c: 56: SSPCON2bits.SEN = 1;
  3172  000DAE  80C5               	bsf	4037,0,c	;volatile
  3173  000DB0  0012               	return	
  3174  000DB2                     __end_of_i2c_master_send:
  3175                           	opt stack 0
  3176                           tblptru	equ	0xFF8
  3177                           tblptrh	equ	0xFF7
  3178                           tblptrl	equ	0xFF6
  3179                           tablat	equ	0xFF5
  3180                           prodh	equ	0xFF4
  3181                           prodl	equ	0xFF3
  3182                           intcon2	equ	0xFF1
  3183                           postinc0	equ	0xFEE
  3184                           wreg	equ	0xFE8
  3185                           indf1	equ	0xFE7
  3186                           postdec1	equ	0xFE5
  3187                           fsr1h	equ	0xFE2
  3188                           fsr1l	equ	0xFE1
  3189                           indf2	equ	0xFDF
  3190                           postinc2	equ	0xFDE
  3191                           postdec2	equ	0xFDD
  3192                           fsr2h	equ	0xFDA
  3193                           fsr2l	equ	0xFD9
  3194                           status	equ	0xFD8
  3195                           
  3196 ;; *************** function _i2c_configure_slave *****************
  3197 ;; Defined at:
  3198 ;;		line 452 in file "../src/my_i2c.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  addr            1    wreg     unsigned char 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;  addr            1    0[BANK1 ] unsigned char 
  3203 ;; Return value:  Size  Location     Type
  3204 ;;		None               void
  3205 ;; Registers used:
  3206 ;;		wreg, status,2, status,0
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3212 ;;      Params:         0       0       0       0       0
  3213 ;;      Locals:         0       0       1       0       0
  3214 ;;      Temps:          0       0       0       0       0
  3215 ;;      Totals:         0       0       1       0       0
  3216 ;;Total ram usage:        1 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; Hardware stack levels required when called:   11
  3219 ;; This function calls:
  3220 ;;		Nothing
  3221 ;; This function is called by:
  3222 ;;		_main
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text13
  3227  00204E                     __ptext13:
  3228                           	opt stack 0
  3229  00204E                     _i2c_configure_slave:
  3230                           	opt stack 19
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;incstack = 0
  3234                           ;i2c_configure_slave@addr stored from wreg
  3235  00204E  CFE8 F186          	movff	wreg,i2c_configure_slave@addr
  3236                           
  3237                           ;my_i2c.c: 464: TRISCbits.TRISC3 = 1;
  3238  002052  8694               	bsf	3988,3,c	;volatile
  3239                           
  3240                           ;my_i2c.c: 465: TRISCbits.TRISC4 = 1;
  3241  002054  8894               	bsf	3988,4,c	;volatile
  3242                           
  3243                           ;my_i2c.c: 470: SSPADD = addr;
  3244  002056  C186  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3245                           
  3246                           ;my_i2c.c: 472: SSPSTAT = 0x0;
  3247  00205A  0E00               	movlw	0
  3248  00205C  6EC7               	movwf	4039,c	;volatile
  3249                           
  3250                           ;my_i2c.c: 473: SSPCON1 = 0x0;
  3251  00205E  0E00               	movlw	0
  3252  002060  6EC6               	movwf	4038,c	;volatile
  3253                           
  3254                           ;my_i2c.c: 474: SSPCON2 = 0x0;
  3255  002062  0E00               	movlw	0
  3256  002064  6EC5               	movwf	4037,c	;volatile
  3257                           
  3258                           ;my_i2c.c: 475: SSPCON1 |= 0x0E;
  3259  002066  0E0E               	movlw	14
  3260  002068  12C6               	iorwf	4038,f,c	;volatile
  3261                           
  3262                           ;my_i2c.c: 476: SSPSTAT |= 0b10000000;
  3263  00206A  8EC7               	bsf	4039,7,c	;volatile
  3264                           
  3265                           ;my_i2c.c: 479: TRISCbits.TRISC3 = 1;
  3266  00206C  8694               	bsf	3988,3,c	;volatile
  3267                           
  3268                           ;my_i2c.c: 480: TRISCbits.TRISC4 = 1;
  3269  00206E  8894               	bsf	3988,4,c	;volatile
  3270                           
  3271                           ;my_i2c.c: 501: SSPCON2bits.SEN = 1;
  3272  002070  80C5               	bsf	4037,0,c	;volatile
  3273                           
  3274                           ;my_i2c.c: 502: SSPCON1 |= 0b00100000;
  3275  002072  8AC6               	bsf	4038,5,c	;volatile
  3276  002074  0012               	return	
  3277  002076                     __end_of_i2c_configure_slave:
  3278                           	opt stack 0
  3279                           tblptru	equ	0xFF8
  3280                           tblptrh	equ	0xFF7
  3281                           tblptrl	equ	0xFF6
  3282                           tablat	equ	0xFF5
  3283                           prodh	equ	0xFF4
  3284                           prodl	equ	0xFF3
  3285                           intcon2	equ	0xFF1
  3286                           postinc0	equ	0xFEE
  3287                           wreg	equ	0xFE8
  3288                           indf1	equ	0xFE7
  3289                           postdec1	equ	0xFE5
  3290                           fsr1h	equ	0xFE2
  3291                           fsr1l	equ	0xFE1
  3292                           indf2	equ	0xFDF
  3293                           postinc2	equ	0xFDE
  3294                           postdec2	equ	0xFDD
  3295                           fsr2h	equ	0xFDA
  3296                           fsr2l	equ	0xFD9
  3297                           status	equ	0xFD8
  3298                           
  3299 ;; *************** function _enable_interrupts *****************
  3300 ;; Defined at:
  3301 ;;		line 15 in file "../src/interrupts.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;		None               void
  3308 ;; Registers used:
  3309 ;;		None
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3315 ;;      Params:         0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0
  3318 ;;      Totals:         0       0       0       0       0
  3319 ;;Total ram usage:        0 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:   11
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_main
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text14
  3330  0021D4                     __ptext14:
  3331                           	opt stack 0
  3332  0021D4                     _enable_interrupts:
  3333                           	opt stack 19
  3334                           
  3335                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3336                           
  3337                           ;incstack = 0
  3338  0021D4  8ED0               	bsf	4048,7,c	;volatile
  3339                           
  3340                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3341  0021D6  8EF2               	bsf	intcon,7,c	;volatile
  3342                           
  3343                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3344  0021D8  8CF2               	bsf	intcon,6,c	;volatile
  3345  0021DA  0012               	return	
  3346  0021DC                     __end_of_enable_interrupts:
  3347                           	opt stack 0
  3348                           tblptru	equ	0xFF8
  3349                           tblptrh	equ	0xFF7
  3350                           tblptrl	equ	0xFF6
  3351                           tablat	equ	0xFF5
  3352                           prodh	equ	0xFF4
  3353                           prodl	equ	0xFF3
  3354                           intcon	equ	0xFF2
  3355                           intcon2	equ	0xFF1
  3356                           postinc0	equ	0xFEE
  3357                           wreg	equ	0xFE8
  3358                           indf1	equ	0xFE7
  3359                           postdec1	equ	0xFE5
  3360                           fsr1h	equ	0xFE2
  3361                           fsr1l	equ	0xFE1
  3362                           indf2	equ	0xFDF
  3363                           postinc2	equ	0xFDE
  3364                           postdec2	equ	0xFDD
  3365                           fsr2h	equ	0xFDA
  3366                           fsr2l	equ	0xFD9
  3367                           status	equ	0xFD8
  3368                           
  3369 ;; *************** function _block_on_To_msgqueues *****************
  3370 ;; Defined at:
  3371 ;;		line 258 in file "../src/messages.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;		None
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;		None
  3376 ;; Return value:  Size  Location     Type
  3377 ;;		None               void
  3378 ;; Registers used:
  3379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3385 ;;      Params:         0       0       0       0       0
  3386 ;;      Locals:         0       0       0       0       0
  3387 ;;      Temps:          0       0       1       0       0
  3388 ;;      Totals:         0       0       1       0       0
  3389 ;;Total ram usage:        1 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:   14
  3392 ;; This function calls:
  3393 ;;		_Delay1KTCYx
  3394 ;;		_check_msg
  3395 ;;		_in_main
  3396 ;; This function is called by:
  3397 ;;		_main
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text15
  3402  001968                     __ptext15:
  3403                           	opt stack 0
  3404  001968                     _block_on_To_msgqueues:
  3405                           	opt stack 16
  3406                           
  3407                           ;messages.c: 259: if (!in_main()) {
  3408                           
  3409                           ;incstack = 0
  3410  001968  ECEB  F00E         	call	_in_main	;wreg free
  3411  00196C  0101               	movlb	1	; () banked
  3412  00196E  0101               	movlb	1	; () banked
  3413  001970  518B               	movf	(?_in_main+1)& (0+255),w,b
  3414  001972  0101               	movlb	1	; () banked
  3415  001974  118A               	iorwf	?_in_main& (0+255),w,b
  3416  001976  B4D8               	btfsc	status,2,c
  3417  001978  0012               	return	
  3418                           
  3419                           ; BSR set to: 1
  3420                           ;messages.c: 261: }
  3421                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3422                           
  3423                           ; BSR set to: 1
  3424                           
  3425                           ; BSR set to: 1
  3426                           ;messages.c: 260: return;
  3427  00197A  0101               	movlb	1	; () banked
  3428  00197C  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  3429  00197E  0E01               	movlw	1
  3430  001980  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3431  001982  0101               	movlb	1	; () banked
  3432  001984  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3433  001986                     l3998:
  3434                           
  3435                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3436  001986  0101               	movlb	1	; () banked
  3437  001988  0E01               	movlw	high _ToMainHigh_MQ
  3438  00198A  0101               	movlb	1	; () banked
  3439  00198C  0101               	movlb	1	; () banked
  3440  00198E  6F87               	movwf	(check_msg@qptr+1)& (0+255),b
  3441  001990  0101               	movlb	1	; () banked
  3442  001992  0E00               	movlw	low _ToMainHigh_MQ
  3443  001994  0101               	movlb	1	; () banked
  3444  001996  0101               	movlb	1	; () banked
  3445  001998  6F86               	movwf	check_msg@qptr& (0+255),b
  3446  00199A  ECC6  F00F         	call	_check_msg	;wreg free
  3447  00199E  0900               	iorlw	0
  3448  0019A0  B4D8               	btfsc	status,2,c
  3449  0019A2  D007               	goto	l4004
  3450                           
  3451                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3452  0019A4  0101               	movlb	1	; () banked
  3453  0019A6  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  3454  0019A8  0E00               	movlw	0
  3455  0019AA  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3456  0019AC  0101               	movlb	1	; () banked
  3457  0019AE  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3458  0019B0  0012               	return	
  3459  0019B2                     l4004:
  3460                           
  3461                           ;messages.c: 271: }
  3462                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3463  0019B2  0101               	movlb	1	; () banked
  3464  0019B4  0E01               	movlw	high _ToMainLow_MQ
  3465  0019B6  0101               	movlb	1	; () banked
  3466  0019B8  0101               	movlb	1	; () banked
  3467  0019BA  6F87               	movwf	(check_msg@qptr+1)& (0+255),b
  3468  0019BC  0101               	movlb	1	; () banked
  3469  0019BE  0E43               	movlw	low _ToMainLow_MQ
  3470  0019C0  0101               	movlb	1	; () banked
  3471  0019C2  0101               	movlb	1	; () banked
  3472  0019C4  6F86               	movwf	check_msg@qptr& (0+255),b
  3473  0019C6  ECC6  F00F         	call	_check_msg	;wreg free
  3474  0019CA  0900               	iorlw	0
  3475  0019CC  B4D8               	btfsc	status,2,c
  3476  0019CE  D007               	goto	l4010
  3477                           
  3478                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3479  0019D0  0101               	movlb	1	; () banked
  3480  0019D2  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  3481  0019D4  0E00               	movlw	0
  3482  0019D6  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3483  0019D8  0101               	movlb	1	; () banked
  3484  0019DA  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3485  0019DC  0012               	return	
  3486  0019DE                     l4010:
  3487                           
  3488                           ;messages.c: 278: }
  3489                           ;messages.c: 279: Delay1KTCYx(10);
  3490  0019DE  0E0A               	movlw	10
  3491  0019E0  EC9F  F010         	call	_Delay1KTCYx
  3492  0019E4  D7D0               	goto	l3998
  3493  0019E6                     __end_of_block_on_To_msgqueues:
  3494                           	opt stack 0
  3495                           tblptru	equ	0xFF8
  3496                           tblptrh	equ	0xFF7
  3497                           tblptrl	equ	0xFF6
  3498                           tablat	equ	0xFF5
  3499                           prodh	equ	0xFF4
  3500                           prodl	equ	0xFF3
  3501                           intcon	equ	0xFF2
  3502                           intcon2	equ	0xFF1
  3503                           postinc0	equ	0xFEE
  3504                           wreg	equ	0xFE8
  3505                           indf1	equ	0xFE7
  3506                           postdec1	equ	0xFE5
  3507                           fsr1h	equ	0xFE2
  3508                           fsr1l	equ	0xFE1
  3509                           indf2	equ	0xFDF
  3510                           postinc2	equ	0xFDE
  3511                           postdec2	equ	0xFDD
  3512                           fsr2h	equ	0xFDA
  3513                           fsr2l	equ	0xFD9
  3514                           status	equ	0xFD8
  3515                           
  3516 ;; *************** function _in_main *****************
  3517 ;; Defined at:
  3518 ;;		line 41 in file "../src/interrupts.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  2    4[BANK1 ] int 
  3525 ;; Registers used:
  3526 ;;		wreg, status,2, status,0, cstack
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3532 ;;      Params:         0       0       2       0       0
  3533 ;;      Locals:         0       0       0       0       0
  3534 ;;      Temps:          0       0       0       0       0
  3535 ;;      Totals:         0       0       2       0       0
  3536 ;;Total ram usage:        2 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:   13
  3539 ;; This function calls:
  3540 ;;		_in_high_int
  3541 ;;		_in_low_int
  3542 ;; This function is called by:
  3543 ;;		_block_on_To_msgqueues
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           	psect	text16
  3548  001DD6                     __ptext16:
  3549                           	opt stack 0
  3550  001DD6                     _in_main:
  3551                           	opt stack 16
  3552                           
  3553                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3554                           
  3555                           ;incstack = 0
  3556  001DD6  ECC8  F00E         	call	_in_low_int	;wreg free
  3557  001DDA  0101               	movlb	1	; () banked
  3558  001DDC  0101               	movlb	1	; () banked
  3559  001DDE  5189               	movf	(?_in_low_int+1)& (0+255),w,b
  3560  001DE0  0101               	movlb	1	; () banked
  3561  001DE2  1188               	iorwf	?_in_low_int& (0+255),w,b
  3562  001DE4  A4D8               	btfss	status,2,c
  3563  001DE6  D011               	goto	l3686
  3564                           
  3565                           ; BSR set to: 1
  3566  001DE8  ECBC  F010         	call	_in_high_int	;wreg free
  3567  001DEC  0101               	movlb	1	; () banked
  3568  001DEE  0101               	movlb	1	; () banked
  3569  001DF0  5187               	movf	(?_in_high_int+1)& (0+255),w,b
  3570  001DF2  0101               	movlb	1	; () banked
  3571  001DF4  1186               	iorwf	?_in_high_int& (0+255),w,b
  3572  001DF6  A4D8               	btfss	status,2,c
  3573  001DF8  D008               	goto	l3686
  3574                           
  3575                           ; BSR set to: 1
  3576                           ;interrupts.c: 43: return (1);
  3577  001DFA  0E00               	movlw	0
  3578  001DFC  0101               	movlb	1	; () banked
  3579  001DFE  0101               	movlb	1	; () banked
  3580  001E00  6F8B               	movwf	(?_in_main+1)& (0+255),b
  3581  001E02  0E01               	movlw	1
  3582  001E04  0101               	movlb	1	; () banked
  3583  001E06  6F8A               	movwf	?_in_main& (0+255),b
  3584  001E08  0012               	return	
  3585  001E0A                     l3686:
  3586                           
  3587                           ; BSR set to: 1
  3588                           ;interrupts.c: 45: return (0);
  3589  001E0A  0E00               	movlw	0
  3590  001E0C  0101               	movlb	1	; () banked
  3591  001E0E  0101               	movlb	1	; () banked
  3592  001E10  6F8B               	movwf	(?_in_main+1)& (0+255),b
  3593  001E12  0E00               	movlw	0
  3594  001E14  0101               	movlb	1	; () banked
  3595  001E16  6F8A               	movwf	?_in_main& (0+255),b
  3596  001E18  0012               	return	
  3597  001E1A                     __end_of_in_main:
  3598                           	opt stack 0
  3599                           tblptru	equ	0xFF8
  3600                           tblptrh	equ	0xFF7
  3601                           tblptrl	equ	0xFF6
  3602                           tablat	equ	0xFF5
  3603                           prodh	equ	0xFF4
  3604                           prodl	equ	0xFF3
  3605                           intcon	equ	0xFF2
  3606                           intcon2	equ	0xFF1
  3607                           postinc0	equ	0xFEE
  3608                           wreg	equ	0xFE8
  3609                           indf1	equ	0xFE7
  3610                           postdec1	equ	0xFE5
  3611                           fsr1h	equ	0xFE2
  3612                           fsr1l	equ	0xFE1
  3613                           indf2	equ	0xFDF
  3614                           postinc2	equ	0xFDE
  3615                           postdec2	equ	0xFDD
  3616                           fsr2h	equ	0xFDA
  3617                           fsr2l	equ	0xFD9
  3618                           status	equ	0xFD8
  3619                           
  3620 ;; *************** function _in_low_int *****************
  3621 ;; Defined at:
  3622 ;;		line 31 in file "../src/interrupts.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  2    2[BANK1 ] int 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3636 ;;      Params:         0       0       2       0       0
  3637 ;;      Locals:         0       0       0       0       0
  3638 ;;      Temps:          0       0       0       0       0
  3639 ;;      Totals:         0       0       2       0       0
  3640 ;;Total ram usage:        2 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; Hardware stack levels required when called:   12
  3643 ;; This function calls:
  3644 ;;		_in_high_int
  3645 ;; This function is called by:
  3646 ;;		_in_main
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text17
  3651  001D90                     __ptext17:
  3652                           	opt stack 0
  3653  001D90                     _in_low_int:
  3654                           	opt stack 16
  3655                           
  3656                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3657                           
  3658                           ; BSR set to: 1
  3659                           ;incstack = 0
  3660  001D90  ACF2               	btfss	intcon,6,c	;volatile
  3661  001D92  D008               	goto	l3664
  3662                           
  3663                           ;interrupts.c: 33: return (0);
  3664  001D94  0E00               	movlw	0
  3665  001D96  0101               	movlb	1	; () banked
  3666  001D98  0101               	movlb	1	; () banked
  3667  001D9A  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3668  001D9C  0E00               	movlw	0
  3669  001D9E  0101               	movlb	1	; () banked
  3670  001DA0  6F88               	movwf	?_in_low_int& (0+255),b
  3671  001DA2  0012               	return	
  3672  001DA4                     l3664:
  3673  001DA4  ECBC  F010         	call	_in_high_int	;wreg free
  3674  001DA8  0101               	movlb	1	; () banked
  3675  001DAA  0101               	movlb	1	; () banked
  3676  001DAC  5187               	movf	(?_in_high_int+1)& (0+255),w,b
  3677  001DAE  0101               	movlb	1	; () banked
  3678  001DB0  1186               	iorwf	?_in_high_int& (0+255),w,b
  3679  001DB2  B4D8               	btfsc	status,2,c
  3680  001DB4  D008               	goto	l3672
  3681                           
  3682                           ; BSR set to: 1
  3683                           ;interrupts.c: 35: return (0);
  3684  001DB6  0E00               	movlw	0
  3685  001DB8  0101               	movlb	1	; () banked
  3686  001DBA  0101               	movlb	1	; () banked
  3687  001DBC  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3688  001DBE  0E00               	movlw	0
  3689  001DC0  0101               	movlb	1	; () banked
  3690  001DC2  6F88               	movwf	?_in_low_int& (0+255),b
  3691  001DC4  0012               	return	
  3692  001DC6                     l3672:
  3693                           
  3694                           ; BSR set to: 1
  3695                           ;interrupts.c: 37: return (1);
  3696  001DC6  0E00               	movlw	0
  3697  001DC8  0101               	movlb	1	; () banked
  3698  001DCA  0101               	movlb	1	; () banked
  3699  001DCC  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3700  001DCE  0E01               	movlw	1
  3701  001DD0  0101               	movlb	1	; () banked
  3702  001DD2  6F88               	movwf	?_in_low_int& (0+255),b
  3703  001DD4  0012               	return	
  3704  001DD6                     __end_of_in_low_int:
  3705                           	opt stack 0
  3706                           tblptru	equ	0xFF8
  3707                           tblptrh	equ	0xFF7
  3708                           tblptrl	equ	0xFF6
  3709                           tablat	equ	0xFF5
  3710                           prodh	equ	0xFF4
  3711                           prodl	equ	0xFF3
  3712                           intcon	equ	0xFF2
  3713                           intcon2	equ	0xFF1
  3714                           postinc0	equ	0xFEE
  3715                           wreg	equ	0xFE8
  3716                           indf1	equ	0xFE7
  3717                           postdec1	equ	0xFE5
  3718                           fsr1h	equ	0xFE2
  3719                           fsr1l	equ	0xFE1
  3720                           indf2	equ	0xFDF
  3721                           postinc2	equ	0xFDE
  3722                           postdec2	equ	0xFDD
  3723                           fsr2h	equ	0xFDA
  3724                           fsr2l	equ	0xFD9
  3725                           status	equ	0xFD8
  3726                           
  3727 ;; *************** function _in_high_int *****************
  3728 ;; Defined at:
  3729 ;;		line 23 in file "../src/interrupts.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;		None
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;		None
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  2    0[BANK1 ] int 
  3736 ;; Registers used:
  3737 ;;		wreg, status,2
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3743 ;;      Params:         0       0       2       0       0
  3744 ;;      Locals:         0       0       0       0       0
  3745 ;;      Temps:          0       0       0       0       0
  3746 ;;      Totals:         0       0       2       0       0
  3747 ;;Total ram usage:        2 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; Hardware stack levels required when called:   11
  3750 ;; This function calls:
  3751 ;;		Nothing
  3752 ;; This function is called by:
  3753 ;;		_in_low_int
  3754 ;;		_in_main
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text18
  3759  002178                     __ptext18:
  3760                           	opt stack 0
  3761  002178                     _in_high_int:
  3762                           	opt stack 16
  3763                           
  3764                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  3765                           
  3766                           ; BSR set to: 1
  3767                           ;incstack = 0
  3768  002178  0E00               	movlw	0
  3769  00217A  AEF2               	btfss	intcon,7,c	;volatile
  3770  00217C  0E01               	movlw	1
  3771  00217E  0101               	movlb	1	; () banked
  3772  002180  0101               	movlb	1	; () banked
  3773  002182  6F86               	movwf	?_in_high_int& (0+255),b
  3774  002184  0101               	movlb	1	; () banked
  3775  002186  6B87               	clrf	(?_in_high_int+1)& (0+255),b
  3776  002188  0012               	return	
  3777  00218A                     __end_of_in_high_int:
  3778                           	opt stack 0
  3779                           tblptru	equ	0xFF8
  3780                           tblptrh	equ	0xFF7
  3781                           tblptrl	equ	0xFF6
  3782                           tablat	equ	0xFF5
  3783                           prodh	equ	0xFF4
  3784                           prodl	equ	0xFF3
  3785                           intcon	equ	0xFF2
  3786                           intcon2	equ	0xFF1
  3787                           postinc0	equ	0xFEE
  3788                           wreg	equ	0xFE8
  3789                           indf1	equ	0xFE7
  3790                           postdec1	equ	0xFE5
  3791                           fsr1h	equ	0xFE2
  3792                           fsr1l	equ	0xFE1
  3793                           indf2	equ	0xFDF
  3794                           postinc2	equ	0xFDE
  3795                           postdec2	equ	0xFDD
  3796                           fsr2h	equ	0xFDA
  3797                           fsr2l	equ	0xFD9
  3798                           status	equ	0xFD8
  3799                           
  3800 ;; *************** function _check_msg *****************
  3801 ;; Defined at:
  3802 ;;		line 222 in file "../src/messages.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3805 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      unsigned char 
  3810 ;; Registers used:
  3811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3817 ;;      Params:         0       0       2       0       0
  3818 ;;      Locals:         0       0       0       0       0
  3819 ;;      Temps:          0       0       1       0       0
  3820 ;;      Totals:         0       0       3       0       0
  3821 ;;Total ram usage:        3 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:   11
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_block_on_To_msgqueues
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           	psect	text19
  3832  001F8C                     __ptext19:
  3833                           	opt stack 0
  3834  001F8C                     _check_msg:
  3835                           	opt stack 18
  3836                           
  3837                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3838                           
  3839                           ; BSR set to: 1
  3840                           ;incstack = 0
  3841  001F8C  0101               	movlb	1	; () banked
  3842  001F8E  EE20 F042          	lfsr	2,66
  3843  001F92  0101               	movlb	1	; () banked
  3844  001F94  5186               	movf	check_msg@qptr& (0+255),w,b
  3845  001F96  26D9               	addwf	fsr2l,f,c
  3846  001F98  0101               	movlb	1	; () banked
  3847  001F9A  5187               	movf	(check_msg@qptr+1)& (0+255),w,b
  3848  001F9C  22DA               	addwfc	fsr2h,f,c
  3849  001F9E  50DF               	movf	indf2,w,c
  3850  001FA0  0101               	movlb	1	; () banked
  3851  001FA2  6F88               	movwf	??_check_msg& (0+255),b
  3852  001FA4  0101               	movlb	1	; () banked
  3853  001FA6  5188               	movf	??_check_msg& (0+255),w,b
  3854  001FA8  0D0D               	mullw	13
  3855  001FAA  50F3               	movf	prodl,w,c
  3856  001FAC  0101               	movlb	1	; () banked
  3857  001FAE  0101               	movlb	1	; () banked
  3858  001FB0  2586               	addwf	check_msg@qptr& (0+255),w,b
  3859  001FB2  6ED9               	movwf	fsr2l,c
  3860  001FB4  50F4               	movf	prodh,w,c
  3861  001FB6  0101               	movlb	1	; () banked
  3862  001FB8  0101               	movlb	1	; () banked
  3863  001FBA  2187               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3864  001FBC  6EDA               	movwf	fsr2h,c
  3865  001FBE  50DF               	movf	indf2,w,c
  3866  001FC0  0012               	return	
  3867  001FC2                     __end_of_check_msg:
  3868                           	opt stack 0
  3869                           tblptru	equ	0xFF8
  3870                           tblptrh	equ	0xFF7
  3871                           tblptrl	equ	0xFF6
  3872                           tablat	equ	0xFF5
  3873                           prodh	equ	0xFF4
  3874                           prodl	equ	0xFF3
  3875                           intcon	equ	0xFF2
  3876                           intcon2	equ	0xFF1
  3877                           postinc0	equ	0xFEE
  3878                           wreg	equ	0xFE8
  3879                           indf1	equ	0xFE7
  3880                           postdec1	equ	0xFE5
  3881                           fsr1h	equ	0xFE2
  3882                           fsr1l	equ	0xFE1
  3883                           indf2	equ	0xFDF
  3884                           postinc2	equ	0xFDE
  3885                           postdec2	equ	0xFDD
  3886                           fsr2h	equ	0xFDA
  3887                           fsr2l	equ	0xFD9
  3888                           status	equ	0xFD8
  3889                           
  3890 ;; *************** function _Delay1KTCYx *****************
  3891 ;; Defined at:
  3892 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  unit            1    wreg     unsigned char 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  unit            1    0[BANK1 ] unsigned char 
  3897 ;; Return value:  Size  Location     Type
  3898 ;;		None               void
  3899 ;; Registers used:
  3900 ;;		wreg
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3906 ;;      Params:         0       0       0       0       0
  3907 ;;      Locals:         0       0       1       0       0
  3908 ;;      Temps:          0       0       0       0       0
  3909 ;;      Totals:         0       0       1       0       0
  3910 ;;Total ram usage:        1 bytes
  3911 ;; Hardware stack levels used:    1
  3912 ;; Hardware stack levels required when called:   11
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_block_on_To_msgqueues
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text20
  3921  00213E                     __ptext20:
  3922                           	opt stack 0
  3923  00213E                     _Delay1KTCYx:
  3924                           	opt stack 18
  3925                           
  3926                           ; BSR set to: 1
  3927                           ;incstack = 0
  3928                           ;Delay1KTCYx@unit stored from wreg
  3929  00213E  CFE8 F186          	movff	wreg,Delay1KTCYx@unit
  3930  002142                     l816:
  3931  002142  0EFA               	movlw	250
  3932  002144                     u3887:
  3933  002144  F000               	nop	
  3934  002146  2EE8               	decfsz	wreg,f,c
  3935  002148  D7FD               	goto	u3887
  3936  00214A  0101               	movlb	1	; () banked
  3937  00214C  0101               	movlb	1	; () banked
  3938  00214E  2F86               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3939  002150  D7F8               	goto	l816
  3940  002152  0012               	return	
  3941  002154                     __end_of_Delay1KTCYx:
  3942                           	opt stack 0
  3943                           tblptru	equ	0xFF8
  3944                           tblptrh	equ	0xFF7
  3945                           tblptrl	equ	0xFF6
  3946                           tablat	equ	0xFF5
  3947                           prodh	equ	0xFF4
  3948                           prodl	equ	0xFF3
  3949                           intcon	equ	0xFF2
  3950                           intcon2	equ	0xFF1
  3951                           postinc0	equ	0xFEE
  3952                           wreg	equ	0xFE8
  3953                           indf1	equ	0xFE7
  3954                           postdec1	equ	0xFE5
  3955                           fsr1h	equ	0xFE2
  3956                           fsr1l	equ	0xFE1
  3957                           indf2	equ	0xFDF
  3958                           postinc2	equ	0xFDE
  3959                           postdec2	equ	0xFDD
  3960                           fsr2h	equ	0xFDA
  3961                           fsr2l	equ	0xFD9
  3962                           status	equ	0xFD8
  3963                           
  3964 ;; *************** function _ToMainLow_recvmsg *****************
  3965 ;; Defined at:
  3966 ;;		line 112 in file "../src/messages.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;  maxlength       1    wreg     unsigned char 
  3969 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3970 ;;		 -> main@msgtype(1), 
  3971 ;;  data            2   26[BANK1 ] PTR void 
  3972 ;;		 -> main@msgbuffer(11), 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      char 
  3977 ;; Registers used:
  3978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3984 ;;      Params:         0       0       4       0       0
  3985 ;;      Locals:         0       0       1       0       0
  3986 ;;      Temps:          0       0       0       0       0
  3987 ;;      Totals:         0       0       5       0       0
  3988 ;;Total ram usage:        5 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:   13
  3991 ;; This function calls:
  3992 ;;		_recv_msg
  3993 ;; This function is called by:
  3994 ;;		_main
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text21
  3999  001E1A                     __ptext21:
  4000                           	opt stack 0
  4001  001E1A                     _ToMainLow_recvmsg:
  4002                           	opt stack 17
  4003                           
  4004                           ; BSR set to: 1
  4005                           ;incstack = 0
  4006                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4007  001E1A  CFE8 F1A2          	movff	wreg,ToMainLow_recvmsg@maxlength
  4008                           
  4009                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4010  001E1E  0101               	movlb	1	; () banked
  4011  001E20  0E01               	movlw	high _ToMainLow_MQ
  4012  001E22  0101               	movlb	1	; () banked
  4013  001E24  0101               	movlb	1	; () banked
  4014  001E26  6F91               	movwf	(recv_msg@qptr+1)& (0+255),b
  4015  001E28  0101               	movlb	1	; () banked
  4016  001E2A  0E43               	movlw	low _ToMainLow_MQ
  4017  001E2C  0101               	movlb	1	; () banked
  4018  001E2E  0101               	movlb	1	; () banked
  4019  001E30  6F90               	movwf	recv_msg@qptr& (0+255),b
  4020  001E32  C1A2  F192         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4021  001E36  0101               	movlb	1	; () banked
  4022  001E38  0101               	movlb	1	; () banked
  4023  001E3A  C19F  F194         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4024  001E3E  0101               	movlb	1	; () banked
  4025  001E40  0101               	movlb	1	; () banked
  4026  001E42  C19E  F193         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4027  001E46  0101               	movlb	1	; () banked
  4028  001E48  0101               	movlb	1	; () banked
  4029  001E4A  C1A1  F196         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4030  001E4E  0101               	movlb	1	; () banked
  4031  001E50  0101               	movlb	1	; () banked
  4032  001E52  C1A0  F195         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4033  001E56  EC8B  F005         	call	_recv_msg	;wreg free
  4034  001E5A  0012               	return	
  4035  001E5C                     __end_of_ToMainLow_recvmsg:
  4036                           	opt stack 0
  4037                           tblptru	equ	0xFF8
  4038                           tblptrh	equ	0xFF7
  4039                           tblptrl	equ	0xFF6
  4040                           tablat	equ	0xFF5
  4041                           prodh	equ	0xFF4
  4042                           prodl	equ	0xFF3
  4043                           intcon	equ	0xFF2
  4044                           intcon2	equ	0xFF1
  4045                           postinc0	equ	0xFEE
  4046                           wreg	equ	0xFE8
  4047                           indf1	equ	0xFE7
  4048                           postdec1	equ	0xFE5
  4049                           fsr1h	equ	0xFE2
  4050                           fsr1l	equ	0xFE1
  4051                           indf2	equ	0xFDF
  4052                           postinc2	equ	0xFDE
  4053                           postdec2	equ	0xFDD
  4054                           fsr2h	equ	0xFDA
  4055                           fsr2l	equ	0xFD9
  4056                           status	equ	0xFD8
  4057                           
  4058 ;; *************** function _ToMainHigh_recvmsg *****************
  4059 ;; Defined at:
  4060 ;;		line 135 in file "../src/messages.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;  maxlength       1    wreg     unsigned char 
  4063 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4064 ;;		 -> main@msgtype(1), 
  4065 ;;  data            2   26[BANK1 ] PTR void 
  4066 ;;		 -> main@msgbuffer(11), 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      char 
  4071 ;; Registers used:
  4072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4078 ;;      Params:         0       0       4       0       0
  4079 ;;      Locals:         0       0       1       0       0
  4080 ;;      Temps:          0       0       0       0       0
  4081 ;;      Totals:         0       0       5       0       0
  4082 ;;Total ram usage:        5 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:   13
  4085 ;; This function calls:
  4086 ;;		_recv_msg
  4087 ;; This function is called by:
  4088 ;;		_main
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text22
  4093  001E5C                     __ptext22:
  4094                           	opt stack 0
  4095  001E5C                     _ToMainHigh_recvmsg:
  4096                           	opt stack 17
  4097                           
  4098                           ;incstack = 0
  4099                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4100  001E5C  CFE8 F1A2          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4101                           
  4102                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4103  001E60  0101               	movlb	1	; () banked
  4104  001E62  0E01               	movlw	high _ToMainHigh_MQ
  4105  001E64  0101               	movlb	1	; () banked
  4106  001E66  0101               	movlb	1	; () banked
  4107  001E68  6F91               	movwf	(recv_msg@qptr+1)& (0+255),b
  4108  001E6A  0101               	movlb	1	; () banked
  4109  001E6C  0E00               	movlw	low _ToMainHigh_MQ
  4110  001E6E  0101               	movlb	1	; () banked
  4111  001E70  0101               	movlb	1	; () banked
  4112  001E72  6F90               	movwf	recv_msg@qptr& (0+255),b
  4113  001E74  C1A2  F192         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4114  001E78  0101               	movlb	1	; () banked
  4115  001E7A  0101               	movlb	1	; () banked
  4116  001E7C  C19F  F194         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4117  001E80  0101               	movlb	1	; () banked
  4118  001E82  0101               	movlb	1	; () banked
  4119  001E84  C19E  F193         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4120  001E88  0101               	movlb	1	; () banked
  4121  001E8A  0101               	movlb	1	; () banked
  4122  001E8C  C1A1  F196         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4123  001E90  0101               	movlb	1	; () banked
  4124  001E92  0101               	movlb	1	; () banked
  4125  001E94  C1A0  F195         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4126  001E98  EC8B  F005         	call	_recv_msg	;wreg free
  4127  001E9C  0012               	return	
  4128  001E9E                     __end_of_ToMainHigh_recvmsg:
  4129                           	opt stack 0
  4130                           tblptru	equ	0xFF8
  4131                           tblptrh	equ	0xFF7
  4132                           tblptrl	equ	0xFF6
  4133                           tablat	equ	0xFF5
  4134                           prodh	equ	0xFF4
  4135                           prodl	equ	0xFF3
  4136                           intcon	equ	0xFF2
  4137                           intcon2	equ	0xFF1
  4138                           postinc0	equ	0xFEE
  4139                           wreg	equ	0xFE8
  4140                           indf1	equ	0xFE7
  4141                           postdec1	equ	0xFE5
  4142                           fsr1h	equ	0xFE2
  4143                           fsr1l	equ	0xFE1
  4144                           indf2	equ	0xFDF
  4145                           postinc2	equ	0xFDE
  4146                           postdec2	equ	0xFDD
  4147                           fsr2h	equ	0xFDA
  4148                           fsr2l	equ	0xFD9
  4149                           status	equ	0xFD8
  4150                           
  4151 ;; *************** function _recv_msg *****************
  4152 ;; Defined at:
  4153 ;;		line 63 in file "../src/messages.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4156 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4157 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4158 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  4159 ;;		 -> main@msgtype(1), 
  4160 ;;  data            2   15[BANK1 ] PTR void 
  4161 ;;		 -> main@msgbuffer(11), 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  4164 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4165 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4166 ;;  tlength         2   20[BANK1 ] unsigned int 
  4167 ;;  slot            1   19[BANK1 ] unsigned char 
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      char 
  4170 ;; Registers used:
  4171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4177 ;;      Params:         0       0       7       0       0
  4178 ;;      Locals:         0       0       5       0       0
  4179 ;;      Temps:          0       0       2       0       0
  4180 ;;      Totals:         0       0      14       0       0
  4181 ;;Total ram usage:       14 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:   12
  4184 ;; This function calls:
  4185 ;;		___awmod
  4186 ;;		_memcpy
  4187 ;; This function is called by:
  4188 ;;		_ToMainLow_recvmsg
  4189 ;;		_ToMainHigh_recvmsg
  4190 ;;		_FromMainLow_recvmsg
  4191 ;;		_FromMainHigh_recvmsg
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text23
  4196  000B16                     __ptext23:
  4197                           	opt stack 0
  4198  000B16                     _recv_msg:
  4199                           	opt stack 17
  4200                           
  4201                           ;messages.c: 64: unsigned char slot;
  4202                           ;messages.c: 68: msg *qmsg;
  4203                           ;messages.c: 69: size_t tlength;
  4204                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4205                           
  4206                           ;incstack = 0
  4207  000B16  0101               	movlb	1	; () banked
  4208  000B18  EE20 F042          	lfsr	2,66
  4209  000B1C  0101               	movlb	1	; () banked
  4210  000B1E  5190               	movf	recv_msg@qptr& (0+255),w,b
  4211  000B20  26D9               	addwf	fsr2l,f,c
  4212  000B22  0101               	movlb	1	; () banked
  4213  000B24  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4214  000B26  22DA               	addwfc	fsr2h,f,c
  4215  000B28  50DF               	movf	indf2,w,c
  4216  000B2A  0101               	movlb	1	; () banked
  4217  000B2C  0101               	movlb	1	; () banked
  4218  000B2E  6F99               	movwf	recv_msg@slot& (0+255),b
  4219                           
  4220                           ; BSR set to: 1
  4221                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4222  000B30  0101               	movlb	1	; () banked
  4223  000B32  0101               	movlb	1	; () banked
  4224  000B34  5199               	movf	recv_msg@slot& (0+255),w,b
  4225  000B36  0D0D               	mullw	13
  4226  000B38  50F3               	movf	prodl,w,c
  4227  000B3A  0101               	movlb	1	; () banked
  4228  000B3C  0101               	movlb	1	; () banked
  4229  000B3E  2590               	addwf	recv_msg@qptr& (0+255),w,b
  4230  000B40  0101               	movlb	1	; () banked
  4231  000B42  0101               	movlb	1	; () banked
  4232  000B44  6F9C               	movwf	recv_msg@qmsg& (0+255),b
  4233  000B46  50F4               	movf	prodh,w,c
  4234  000B48  0101               	movlb	1	; () banked
  4235  000B4A  0101               	movlb	1	; () banked
  4236  000B4C  2191               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4237  000B4E  0101               	movlb	1	; () banked
  4238  000B50  6F9D               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4239                           
  4240                           ; BSR set to: 1
  4241                           ;messages.c: 74: if (qmsg->full == 1) {
  4242  000B52  0E01               	movlw	1
  4243  000B54  C19C  FFD9         	movff	recv_msg@qmsg,fsr2l
  4244  000B58  C19D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4245  000B5C  62DF               	cpfseq	indf2,c
  4246  000B5E  D088               	goto	l4120
  4247                           
  4248                           ; BSR set to: 1
  4249                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4250  000B60  0101               	movlb	1	; () banked
  4251  000B62  EE20 F001          	lfsr	2,1
  4252  000B66  0101               	movlb	1	; () banked
  4253  000B68  519C               	movf	recv_msg@qmsg& (0+255),w,b
  4254  000B6A  26D9               	addwf	fsr2l,f,c
  4255  000B6C  0101               	movlb	1	; () banked
  4256  000B6E  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4257  000B70  22DA               	addwfc	fsr2h,f,c
  4258  000B72  50DF               	movf	indf2,w,c
  4259  000B74  0101               	movlb	1	; () banked
  4260  000B76  0101               	movlb	1	; () banked
  4261  000B78  5D92               	subwf	recv_msg@maxlength& (0+255),w,b
  4262  000B7A  B0D8               	btfsc	status,0,c
  4263  000B7C  D002               	goto	l4104
  4264                           
  4265                           ; BSR set to: 1
  4266                           ;messages.c: 77: return (-3);
  4267  000B7E  0EFD               	movlw	253
  4268  000B80  0012               	return	
  4269  000B82                     l4104:
  4270                           
  4271                           ; BSR set to: 1
  4272                           ;messages.c: 78: }
  4273                           ;messages.c: 80: tlength = qmsg->length;
  4274  000B82  0101               	movlb	1	; () banked
  4275  000B84  EE20 F001          	lfsr	2,1
  4276  000B88  0101               	movlb	1	; () banked
  4277  000B8A  519C               	movf	recv_msg@qmsg& (0+255),w,b
  4278  000B8C  26D9               	addwf	fsr2l,f,c
  4279  000B8E  0101               	movlb	1	; () banked
  4280  000B90  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4281  000B92  22DA               	addwfc	fsr2h,f,c
  4282  000B94  50DF               	movf	indf2,w,c
  4283  000B96  0101               	movlb	1	; () banked
  4284  000B98  6F97               	movwf	??_recv_msg& (0+255),b
  4285  000B9A  0101               	movlb	1	; () banked
  4286  000B9C  5197               	movf	??_recv_msg& (0+255),w,b
  4287  000B9E  0101               	movlb	1	; () banked
  4288  000BA0  0101               	movlb	1	; () banked
  4289  000BA2  6F9A               	movwf	recv_msg@tlength& (0+255),b
  4290  000BA4  0101               	movlb	1	; () banked
  4291  000BA6  6B9B               	clrf	(recv_msg@tlength+1)& (0+255),b
  4292                           
  4293                           ; BSR set to: 1
  4294                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4295  000BA8  0101               	movlb	1	; () banked
  4296  000BAA  0101               	movlb	1	; () banked
  4297  000BAC  C196  F187         	movff	recv_msg@data+1,memcpy@d1+1
  4298  000BB0  0101               	movlb	1	; () banked
  4299  000BB2  0101               	movlb	1	; () banked
  4300  000BB4  C195  F186         	movff	recv_msg@data,memcpy@d1
  4301  000BB8  0E03               	movlw	3
  4302  000BBA  0101               	movlb	1	; () banked
  4303  000BBC  0101               	movlb	1	; () banked
  4304  000BBE  259C               	addwf	recv_msg@qmsg& (0+255),w,b
  4305  000BC0  0101               	movlb	1	; () banked
  4306  000BC2  6F97               	movwf	??_recv_msg& (0+255),b
  4307  000BC4  0E00               	movlw	0
  4308  000BC6  0101               	movlb	1	; () banked
  4309  000BC8  0101               	movlb	1	; () banked
  4310  000BCA  219D               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4311  000BCC  0101               	movlb	1	; () banked
  4312  000BCE  6F98               	movwf	(??_recv_msg+1)& (0+255),b
  4313  000BD0  C197  F188         	movff	??_recv_msg,memcpy@s1
  4314  000BD4  C198  F189         	movff	??_recv_msg+1,memcpy@s1+1
  4315  000BD8  C19A  F18A         	movff	recv_msg@tlength,memcpy@n
  4316  000BDC  C19B  F18B         	movff	recv_msg@tlength+1,memcpy@n+1
  4317  000BE0  EC40  F00E         	call	_memcpy	;wreg free
  4318                           
  4319                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  4320  000BE4  0101               	movlb	1	; () banked
  4321  000BE6  EE20 F042          	lfsr	2,66
  4322  000BEA  0101               	movlb	1	; () banked
  4323  000BEC  5190               	movf	recv_msg@qptr& (0+255),w,b
  4324  000BEE  26D9               	addwf	fsr2l,f,c
  4325  000BF0  0101               	movlb	1	; () banked
  4326  000BF2  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4327  000BF4  22DA               	addwfc	fsr2h,f,c
  4328  000BF6  0101               	movlb	1	; () banked
  4329  000BF8  EE10 F042          	lfsr	1,66
  4330  000BFC  0101               	movlb	1	; () banked
  4331  000BFE  5190               	movf	recv_msg@qptr& (0+255),w,b
  4332  000C00  26E1               	addwf	fsr1l,f,c
  4333  000C02  0101               	movlb	1	; () banked
  4334  000C04  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4335  000C06  22E2               	addwfc	fsr1h,f,c
  4336  000C08  50E7               	movf	indf1,w,c
  4337  000C0A  0101               	movlb	1	; () banked
  4338  000C0C  6F97               	movwf	??_recv_msg& (0+255),b
  4339  000C0E  0E01               	movlw	1
  4340  000C10  0101               	movlb	1	; () banked
  4341  000C12  2597               	addwf	??_recv_msg& (0+255),w,b
  4342  000C14  0101               	movlb	1	; () banked
  4343  000C16  0101               	movlb	1	; () banked
  4344  000C18  6F86               	movwf	___awmod@dividend& (0+255),b
  4345  000C1A  0101               	movlb	1	; () banked
  4346  000C1C  0101               	movlb	1	; () banked
  4347  000C1E  6B87               	clrf	(___awmod@dividend+1)& (0+255),b
  4348  000C20  0E00               	movlw	0
  4349  000C22  2387               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4350  000C24  0E00               	movlw	0
  4351  000C26  0101               	movlb	1	; () banked
  4352  000C28  0101               	movlb	1	; () banked
  4353  000C2A  6F89               	movwf	(___awmod@divisor+1)& (0+255),b
  4354  000C2C  0E05               	movlw	5
  4355  000C2E  0101               	movlb	1	; () banked
  4356  000C30  6F88               	movwf	___awmod@divisor& (0+255),b
  4357  000C32  EC05  F008         	call	___awmod	;wreg free
  4358  000C36  0101               	movlb	1	; () banked
  4359  000C38  0101               	movlb	1	; () banked
  4360  000C3A  5186               	movf	?___awmod& (0+255),w,b
  4361  000C3C  6EDF               	movwf	indf2,c
  4362                           
  4363                           ; BSR set to: 1
  4364                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4365  000C3E  0101               	movlb	1	; () banked
  4366  000C40  EE20 F002          	lfsr	2,2
  4367  000C44  0101               	movlb	1	; () banked
  4368  000C46  519C               	movf	recv_msg@qmsg& (0+255),w,b
  4369  000C48  26D9               	addwf	fsr2l,f,c
  4370  000C4A  0101               	movlb	1	; () banked
  4371  000C4C  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4372  000C4E  22DA               	addwfc	fsr2h,f,c
  4373  000C50  C193  FFE1         	movff	recv_msg@msgtype,fsr1l
  4374  000C54  C194  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4375  000C58  CFDF FFE7          	movff	indf2,indf1
  4376                           
  4377                           ; BSR set to: 1
  4378                           ;messages.c: 91: qmsg->full = 0;
  4379  000C5C  C19C  FFD9         	movff	recv_msg@qmsg,fsr2l
  4380  000C60  C19D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4381  000C64  0E00               	movlw	0
  4382  000C66  6EDF               	movwf	indf2,c
  4383                           
  4384                           ; BSR set to: 1
  4385                           ;messages.c: 92: return (tlength);
  4386  000C68  0101               	movlb	1	; () banked
  4387  000C6A  0101               	movlb	1	; () banked
  4388  000C6C  519A               	movf	recv_msg@tlength& (0+255),w,b
  4389  000C6E  0012               	return	
  4390  000C70                     l4120:
  4391                           
  4392                           ; BSR set to: 1
  4393                           ;messages.c: 94: return (-4);
  4394  000C70  0EFC               	movlw	252
  4395  000C72  0012               	return	
  4396  000C74                     __end_of_recv_msg:
  4397                           	opt stack 0
  4398                           tblptru	equ	0xFF8
  4399                           tblptrh	equ	0xFF7
  4400                           tblptrl	equ	0xFF6
  4401                           tablat	equ	0xFF5
  4402                           prodh	equ	0xFF4
  4403                           prodl	equ	0xFF3
  4404                           intcon	equ	0xFF2
  4405                           intcon2	equ	0xFF1
  4406                           postinc0	equ	0xFEE
  4407                           wreg	equ	0xFE8
  4408                           indf1	equ	0xFE7
  4409                           postdec1	equ	0xFE5
  4410                           fsr1h	equ	0xFE2
  4411                           fsr1l	equ	0xFE1
  4412                           indf2	equ	0xFDF
  4413                           postinc2	equ	0xFDE
  4414                           postdec2	equ	0xFDD
  4415                           fsr2h	equ	0xFDA
  4416                           fsr2l	equ	0xFD9
  4417                           status	equ	0xFD8
  4418                           
  4419 ;; *************** function _memcpy *****************
  4420 ;; Defined at:
  4421 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  d1              2    0[BANK1 ] PTR void 
  4424 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4425 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4426 ;;		 -> main@msgbuffer(11), 
  4427 ;;  s1              2    2[BANK1 ] PTR const void 
  4428 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4429 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4430 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4431 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4432 ;;		 -> main@uc(13), 
  4433 ;;  n               2    4[BANK1 ] unsigned int 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4436 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4437 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4438 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4439 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4440 ;;		 -> main@uc(13), 
  4441 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4442 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4443 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4444 ;;		 -> main@msgbuffer(11), 
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  2    0[BANK1 ] PTR void 
  4447 ;; Registers used:
  4448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4454 ;;      Params:         0       0       6       0       0
  4455 ;;      Locals:         0       0       4       0       0
  4456 ;;      Temps:          0       0       0       0       0
  4457 ;;      Totals:         0       0      10       0       0
  4458 ;;Total ram usage:       10 bytes
  4459 ;; Hardware stack levels used:    1
  4460 ;; Hardware stack levels required when called:   11
  4461 ;; This function calls:
  4462 ;;		Nothing
  4463 ;; This function is called by:
  4464 ;;		_send_msg
  4465 ;;		_recv_msg
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           	psect	text24
  4470  001C80                     __ptext24:
  4471                           	opt stack 0
  4472  001C80                     _memcpy:
  4473                           	opt stack 16
  4474                           
  4475                           ; BSR set to: 1
  4476                           ;incstack = 0
  4477  001C80  0101               	movlb	1	; () banked
  4478  001C82  0101               	movlb	1	; () banked
  4479  001C84  C189  F18F         	movff	memcpy@s1+1,memcpy@s+1
  4480  001C88  0101               	movlb	1	; () banked
  4481  001C8A  0101               	movlb	1	; () banked
  4482  001C8C  C188  F18E         	movff	memcpy@s1,memcpy@s
  4483  001C90  0101               	movlb	1	; () banked
  4484  001C92  0101               	movlb	1	; () banked
  4485  001C94  C187  F18D         	movff	memcpy@d1+1,memcpy@d+1
  4486  001C98  0101               	movlb	1	; () banked
  4487  001C9A  0101               	movlb	1	; () banked
  4488  001C9C  C186  F18C         	movff	memcpy@d1,memcpy@d
  4489  001CA0  D012               	goto	l4090
  4490  001CA2                     l4084:
  4491                           
  4492                           ; BSR set to: 1
  4493  001CA2  C18E  FFD9         	movff	memcpy@s,fsr2l
  4494  001CA6  C18F  FFDA         	movff	memcpy@s+1,fsr2h
  4495  001CAA  C18C  FFE1         	movff	memcpy@d,fsr1l
  4496  001CAE  C18D  FFE2         	movff	memcpy@d+1,fsr1h
  4497  001CB2  CFDF FFE7          	movff	indf2,indf1
  4498                           
  4499                           ; BSR set to: 1
  4500  001CB6  0101               	movlb	1	; () banked
  4501  001CB8  0101               	movlb	1	; () banked
  4502  001CBA  4B8E               	infsnz	memcpy@s& (0+255),f,b
  4503  001CBC  2B8F               	incf	(memcpy@s+1)& (0+255),f,b
  4504                           
  4505                           ; BSR set to: 1
  4506  001CBE  0101               	movlb	1	; () banked
  4507  001CC0  0101               	movlb	1	; () banked
  4508  001CC2  4B8C               	infsnz	memcpy@d& (0+255),f,b
  4509  001CC4  2B8D               	incf	(memcpy@d+1)& (0+255),f,b
  4510  001CC6                     l4090:
  4511                           
  4512                           ; BSR set to: 1
  4513  001CC6  0101               	movlb	1	; () banked
  4514  001CC8  0101               	movlb	1	; () banked
  4515  001CCA  078A               	decf	memcpy@n& (0+255),f,b
  4516  001CCC  A0D8               	btfss	status,0,c
  4517  001CCE  078B               	decf	(memcpy@n+1)& (0+255),f,b
  4518  001CD0  0101               	movlb	1	; () banked
  4519  001CD2  298A               	incf	memcpy@n& (0+255),w,b
  4520  001CD4  B4D8               	btfsc	status,2,c
  4521  001CD6  298B               	incf	(memcpy@n+1)& (0+255),w,b
  4522  001CD8  B4D8               	btfsc	status,2,c
  4523                           
  4524                           ; BSR set to: 1
  4525                           
  4526                           ; BSR set to: 1
  4527                           ;	Return value of _memcpy is never used
  4528  001CDA  0012               	return	
  4529  001CDC  D7E2               	goto	l4084
  4530  001CDE                     __end_of_memcpy:
  4531                           	opt stack 0
  4532                           tblptru	equ	0xFF8
  4533                           tblptrh	equ	0xFF7
  4534                           tblptrl	equ	0xFF6
  4535                           tablat	equ	0xFF5
  4536                           prodh	equ	0xFF4
  4537                           prodl	equ	0xFF3
  4538                           intcon	equ	0xFF2
  4539                           intcon2	equ	0xFF1
  4540                           postinc0	equ	0xFEE
  4541                           wreg	equ	0xFE8
  4542                           indf1	equ	0xFE7
  4543                           postdec1	equ	0xFE5
  4544                           fsr1h	equ	0xFE2
  4545                           fsr1l	equ	0xFE1
  4546                           indf2	equ	0xFDF
  4547                           postinc2	equ	0xFDE
  4548                           postdec2	equ	0xFDD
  4549                           fsr2h	equ	0xFDA
  4550                           fsr2l	equ	0xFD9
  4551                           status	equ	0xFD8
  4552                           
  4553 ;; *************** function ___awmod *****************
  4554 ;; Defined at:
  4555 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  dividend        2    0[BANK1 ] int 
  4558 ;;  divisor         2    2[BANK1 ] int 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  sign            1    6[BANK1 ] unsigned char 
  4561 ;;  counter         1    5[BANK1 ] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  2    0[BANK1 ] int 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0, prodl
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4571 ;;      Params:         0       0       4       0       0
  4572 ;;      Locals:         0       0       2       0       0
  4573 ;;      Temps:          0       0       1       0       0
  4574 ;;      Totals:         0       0       7       0       0
  4575 ;;Total ram usage:        7 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:   11
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_send_msg
  4582 ;;		_recv_msg
  4583 ;;		i1_send_msg
  4584 ;;		i2_send_msg
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text25
  4589  00100A                     __ptext25:
  4590                           	opt stack 0
  4591  00100A                     ___awmod:
  4592                           	opt stack 16
  4593                           
  4594                           ; BSR set to: 1
  4595                           ;incstack = 0
  4596  00100A  0101               	movlb	1	; () banked
  4597  00100C  6F8A               	movwf	??___awmod& (0+255),b
  4598  00100E  0E00               	movlw	0
  4599  001010  0101               	movlb	1	; () banked
  4600  001012  0101               	movlb	1	; () banked
  4601  001014  6F8C               	movwf	___awmod@sign& (0+255),b
  4602  001016  0101               	movlb	1	; () banked
  4603  001018  518A               	movf	??___awmod& (0+255),w,b
  4604                           
  4605                           ; BSR set to: 1
  4606  00101A  0101               	movlb	1	; () banked
  4607  00101C  0101               	movlb	1	; () banked
  4608  00101E  5187               	movf	(___awmod@dividend+1)& (0+255),w,b
  4609  001020  0A80               	xorlw	128
  4610  001022  6EF3               	movwf	prodl,c
  4611  001024  0E80               	movlw	128
  4612  001026  5CF3               	subwf	prodl,w,c
  4613  001028  0E00               	movlw	0
  4614  00102A  B4D8               	btfsc	status,2,c
  4615  00102C  5D86               	subwf	___awmod@dividend& (0+255),w,b
  4616  00102E  B0D8               	btfsc	status,0,c
  4617  001030  D00F               	goto	l4408
  4618                           
  4619                           ; BSR set to: 1
  4620  001032  0101               	movlb	1	; () banked
  4621  001034  0101               	movlb	1	; () banked
  4622  001036  6D86               	negf	___awmod@dividend& (0+255),b
  4623  001038  0101               	movlb	1	; () banked
  4624  00103A  1F87               	comf	(___awmod@dividend+1)& (0+255),f,b
  4625  00103C  B0D8               	btfsc	status,0,c
  4626  00103E  2B87               	incf	(___awmod@dividend+1)& (0+255),f,b
  4627                           
  4628                           ; BSR set to: 1
  4629  001040  0101               	movlb	1	; () banked
  4630  001042  6F8A               	movwf	??___awmod& (0+255),b
  4631  001044  0E01               	movlw	1
  4632  001046  0101               	movlb	1	; () banked
  4633  001048  0101               	movlb	1	; () banked
  4634  00104A  6F8C               	movwf	___awmod@sign& (0+255),b
  4635  00104C  0101               	movlb	1	; () banked
  4636  00104E  518A               	movf	??___awmod& (0+255),w,b
  4637  001050                     l4408:
  4638                           
  4639                           ; BSR set to: 1
  4640  001050  0101               	movlb	1	; () banked
  4641  001052  0101               	movlb	1	; () banked
  4642  001054  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4643  001056  0A80               	xorlw	128
  4644  001058  6EF3               	movwf	prodl,c
  4645  00105A  0E80               	movlw	128
  4646  00105C  5CF3               	subwf	prodl,w,c
  4647  00105E  0E00               	movlw	0
  4648  001060  B4D8               	btfsc	status,2,c
  4649  001062  5D88               	subwf	___awmod@divisor& (0+255),w,b
  4650  001064  B0D8               	btfsc	status,0,c
  4651  001066  D007               	goto	l4412
  4652                           
  4653                           ; BSR set to: 1
  4654  001068  0101               	movlb	1	; () banked
  4655  00106A  0101               	movlb	1	; () banked
  4656  00106C  6D88               	negf	___awmod@divisor& (0+255),b
  4657  00106E  0101               	movlb	1	; () banked
  4658  001070  1F89               	comf	(___awmod@divisor+1)& (0+255),f,b
  4659  001072  B0D8               	btfsc	status,0,c
  4660  001074  2B89               	incf	(___awmod@divisor+1)& (0+255),f,b
  4661  001076                     l4412:
  4662                           
  4663                           ; BSR set to: 1
  4664  001076  0101               	movlb	1	; () banked
  4665  001078  0101               	movlb	1	; () banked
  4666  00107A  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4667  00107C  1188               	iorwf	___awmod@divisor& (0+255),w,b
  4668  00107E  B4D8               	btfsc	status,2,c
  4669  001080  D03A               	goto	l4428
  4670                           
  4671                           ; BSR set to: 1
  4672  001082  0101               	movlb	1	; () banked
  4673  001084  6F8A               	movwf	??___awmod& (0+255),b
  4674  001086  0E01               	movlw	1
  4675  001088  0101               	movlb	1	; () banked
  4676  00108A  0101               	movlb	1	; () banked
  4677  00108C  6F8B               	movwf	___awmod@counter& (0+255),b
  4678  00108E  0101               	movlb	1	; () banked
  4679  001090  518A               	movf	??___awmod& (0+255),w,b
  4680  001092  D009               	goto	l4418
  4681  001094                     l4416:
  4682                           
  4683                           ; BSR set to: 1
  4684  001094  0101               	movlb	1	; () banked
  4685  001096  0101               	movlb	1	; () banked
  4686  001098  0101               	movlb	1	; () banked
  4687  00109A  90D8               	bcf	status,0,c
  4688  00109C  3788               	rlcf	___awmod@divisor& (0+255),f,b
  4689  00109E  3789               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4690  0010A0  0101               	movlb	1	; () banked
  4691  0010A2  0101               	movlb	1	; () banked
  4692  0010A4  2B8B               	incf	___awmod@counter& (0+255),f,b
  4693  0010A6                     l4418:
  4694                           
  4695                           ; BSR set to: 1
  4696  0010A6  0101               	movlb	1	; () banked
  4697  0010A8  0101               	movlb	1	; () banked
  4698  0010AA  AF89               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4699  0010AC  D7F3               	goto	l4416
  4700  0010AE                     l4420:
  4701                           
  4702                           ; BSR set to: 1
  4703  0010AE  0101               	movlb	1	; () banked
  4704  0010B0  0101               	movlb	1	; () banked
  4705  0010B2  5188               	movf	___awmod@divisor& (0+255),w,b
  4706  0010B4  0101               	movlb	1	; () banked
  4707  0010B6  0101               	movlb	1	; () banked
  4708  0010B8  5D86               	subwf	___awmod@dividend& (0+255),w,b
  4709  0010BA  0101               	movlb	1	; () banked
  4710  0010BC  0101               	movlb	1	; () banked
  4711  0010BE  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4712  0010C0  0101               	movlb	1	; () banked
  4713  0010C2  0101               	movlb	1	; () banked
  4714  0010C4  5987               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4715  0010C6  A0D8               	btfss	status,0,c
  4716  0010C8  D00C               	goto	l4424
  4717                           
  4718                           ; BSR set to: 1
  4719  0010CA  0101               	movlb	1	; () banked
  4720  0010CC  0101               	movlb	1	; () banked
  4721  0010CE  5188               	movf	___awmod@divisor& (0+255),w,b
  4722  0010D0  0101               	movlb	1	; () banked
  4723  0010D2  0101               	movlb	1	; () banked
  4724  0010D4  5F86               	subwf	___awmod@dividend& (0+255),f,b
  4725  0010D6  0101               	movlb	1	; () banked
  4726  0010D8  0101               	movlb	1	; () banked
  4727  0010DA  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4728  0010DC  0101               	movlb	1	; () banked
  4729  0010DE  0101               	movlb	1	; () banked
  4730  0010E0  5B87               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4731  0010E2                     l4424:
  4732                           
  4733                           ; BSR set to: 1
  4734  0010E2  0101               	movlb	1	; () banked
  4735  0010E4  0101               	movlb	1	; () banked
  4736  0010E6  0101               	movlb	1	; () banked
  4737  0010E8  90D8               	bcf	status,0,c
  4738  0010EA  3389               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4739  0010EC  3388               	rrcf	___awmod@divisor& (0+255),f,b
  4740                           
  4741                           ; BSR set to: 1
  4742  0010EE  0101               	movlb	1	; () banked
  4743  0010F0  0101               	movlb	1	; () banked
  4744  0010F2  2F8B               	decfsz	___awmod@counter& (0+255),f,b
  4745  0010F4  D7DC               	goto	l4420
  4746  0010F6                     l4428:
  4747                           
  4748                           ; BSR set to: 1
  4749  0010F6  0101               	movlb	1	; () banked
  4750  0010F8  0101               	movlb	1	; () banked
  4751  0010FA  518C               	movf	___awmod@sign& (0+255),w,b
  4752  0010FC  B4D8               	btfsc	status,2,c
  4753  0010FE  D007               	goto	l4432
  4754                           
  4755                           ; BSR set to: 1
  4756  001100  0101               	movlb	1	; () banked
  4757  001102  0101               	movlb	1	; () banked
  4758  001104  6D86               	negf	___awmod@dividend& (0+255),b
  4759  001106  0101               	movlb	1	; () banked
  4760  001108  1F87               	comf	(___awmod@dividend+1)& (0+255),f,b
  4761  00110A  B0D8               	btfsc	status,0,c
  4762  00110C  2B87               	incf	(___awmod@dividend+1)& (0+255),f,b
  4763  00110E                     l4432:
  4764                           
  4765                           ; BSR set to: 1
  4766  00110E  C186  F186         	movff	___awmod@dividend,?___awmod
  4767  001112  C187  F187         	movff	___awmod@dividend+1,?___awmod+1
  4768  001116  0012               	return	
  4769  001118                     __end_of___awmod:
  4770                           	opt stack 0
  4771                           tblptru	equ	0xFF8
  4772                           tblptrh	equ	0xFF7
  4773                           tblptrl	equ	0xFF6
  4774                           tablat	equ	0xFF5
  4775                           prodh	equ	0xFF4
  4776                           prodl	equ	0xFF3
  4777                           intcon	equ	0xFF2
  4778                           intcon2	equ	0xFF1
  4779                           postinc0	equ	0xFEE
  4780                           wreg	equ	0xFE8
  4781                           indf1	equ	0xFE7
  4782                           postdec1	equ	0xFE5
  4783                           fsr1h	equ	0xFE2
  4784                           fsr1l	equ	0xFE1
  4785                           indf2	equ	0xFDF
  4786                           postinc2	equ	0xFDE
  4787                           postdec2	equ	0xFDD
  4788                           fsr2h	equ	0xFDA
  4789                           fsr2l	equ	0xFD9
  4790                           status	equ	0xFD8
  4791                           
  4792 ;; *************** function _SetChanADC *****************
  4793 ;; Defined at:
  4794 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  channel         1    wreg     unsigned char 
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;  channel         1    1[BANK1 ] unsigned char 
  4799 ;; Return value:  Size  Location     Type
  4800 ;;		None               void
  4801 ;; Registers used:
  4802 ;;		wreg, status,2, status,0
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4808 ;;      Params:         0       0       0       0       0
  4809 ;;      Locals:         0       0       1       0       0
  4810 ;;      Temps:          0       0       1       0       0
  4811 ;;      Totals:         0       0       2       0       0
  4812 ;;Total ram usage:        2 bytes
  4813 ;; Hardware stack levels used:    1
  4814 ;; Hardware stack levels required when called:   11
  4815 ;; This function calls:
  4816 ;;		Nothing
  4817 ;; This function is called by:
  4818 ;;		_main
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822                           	psect	text26
  4823  0020E2                     __ptext26:
  4824                           	opt stack 0
  4825  0020E2                     _SetChanADC:
  4826                           	opt stack 19
  4827                           
  4828                           ; BSR set to: 1
  4829                           ;incstack = 0
  4830                           ;SetChanADC@channel stored from wreg
  4831  0020E2  CFE8 F187          	movff	wreg,SetChanADC@channel
  4832  0020E6  CFC2 F186          	movff	4034,??_SetChanADC	;volatile
  4833  0020EA  0EC3               	movlw	195
  4834  0020EC  0101               	movlb	1	; () banked
  4835  0020EE  1786               	andwf	??_SetChanADC& (0+255),f,b
  4836  0020F0  0101               	movlb	1	; () banked
  4837  0020F2  0101               	movlb	1	; () banked
  4838  0020F4  90D8               	bcf	status,0,c
  4839  0020F6  3187               	rrcf	SetChanADC@channel& (0+255),w,b
  4840  0020F8  0B3C               	andlw	60
  4841  0020FA  0101               	movlb	1	; () banked
  4842  0020FC  1186               	iorwf	??_SetChanADC& (0+255),w,b
  4843  0020FE  6EC2               	movwf	4034,c	;volatile
  4844                           
  4845                           ; BSR set to: 1
  4846  002100  0012               	return	
  4847  002102                     __end_of_SetChanADC:
  4848                           	opt stack 0
  4849                           tblptru	equ	0xFF8
  4850                           tblptrh	equ	0xFF7
  4851                           tblptrl	equ	0xFF6
  4852                           tablat	equ	0xFF5
  4853                           prodh	equ	0xFF4
  4854                           prodl	equ	0xFF3
  4855                           intcon	equ	0xFF2
  4856                           intcon2	equ	0xFF1
  4857                           postinc0	equ	0xFEE
  4858                           wreg	equ	0xFE8
  4859                           indf1	equ	0xFE7
  4860                           postdec1	equ	0xFE5
  4861                           fsr1h	equ	0xFE2
  4862                           fsr1l	equ	0xFE1
  4863                           indf2	equ	0xFDF
  4864                           postinc2	equ	0xFDE
  4865                           postdec2	equ	0xFDD
  4866                           fsr2h	equ	0xFDA
  4867                           fsr2l	equ	0xFD9
  4868                           status	equ	0xFD8
  4869                           
  4870 ;; *************** function _OpenUSART *****************
  4871 ;; Defined at:
  4872 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  config          1    wreg     unsigned char 
  4875 ;;  spbrg           2    0[BANK1 ] unsigned int 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  config          1    5[BANK1 ] unsigned char 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;		None               void
  4880 ;; Registers used:
  4881 ;;		wreg, status,2
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4887 ;;      Params:         0       0       2       0       0
  4888 ;;      Locals:         0       0       1       0       0
  4889 ;;      Temps:          0       0       3       0       0
  4890 ;;      Totals:         0       0       6       0       0
  4891 ;;Total ram usage:        6 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:   11
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		_main
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           	psect	text27
  4902  001742                     __ptext27:
  4903                           	opt stack 0
  4904  001742                     _OpenUSART:
  4905                           	opt stack 19
  4906                           
  4907                           ; BSR set to: 1
  4908                           ;incstack = 0
  4909                           ;OpenUSART@config stored from wreg
  4910  001742  CFE8 F18B          	movff	wreg,OpenUSART@config
  4911  001746  0E00               	movlw	0
  4912  001748  6EAC               	movwf	4012,c	;volatile
  4913  00174A  0E00               	movlw	0
  4914  00174C  6EAB               	movwf	4011,c	;volatile
  4915  00174E  0101               	movlb	1	; () banked
  4916  001750  0101               	movlb	1	; () banked
  4917  001752  B18B               	btfsc	OpenUSART@config& (0+255),0,b
  4918                           
  4919                           ; BSR set to: 1
  4920  001754  88AC               	bsf	4012,4,c	;volatile
  4921                           
  4922                           ; BSR set to: 1
  4923                           
  4924                           ; BSR set to: 1
  4925  001756  0101               	movlb	1	; () banked
  4926  001758  0101               	movlb	1	; () banked
  4927  00175A  A38B               	btfss	OpenUSART@config& (0+255),1,b
  4928  00175C  D002               	goto	l3926
  4929                           
  4930                           ; BSR set to: 1
  4931  00175E  8CAC               	bsf	4012,6,c	;volatile
  4932  001760  8CAB               	bsf	4011,6,c	;volatile
  4933  001762                     l3926:
  4934                           
  4935                           ; BSR set to: 1
  4936  001762  0101               	movlb	1	; () banked
  4937  001764  0101               	movlb	1	; () banked
  4938  001766  B58B               	btfsc	OpenUSART@config& (0+255),2,b
  4939                           
  4940                           ; BSR set to: 1
  4941  001768  8EAC               	bsf	4012,7,c	;volatile
  4942                           
  4943                           ; BSR set to: 1
  4944                           
  4945                           ; BSR set to: 1
  4946  00176A  0101               	movlb	1	; () banked
  4947  00176C  0101               	movlb	1	; () banked
  4948  00176E  A78B               	btfss	OpenUSART@config& (0+255),3,b
  4949  001770  D002               	goto	l583
  4950                           
  4951                           ; BSR set to: 1
  4952  001772  88AB               	bsf	4011,4,c	;volatile
  4953  001774  D001               	goto	l3934
  4954  001776                     l583:
  4955                           
  4956                           ; BSR set to: 1
  4957  001776  8AAB               	bsf	4011,5,c	;volatile
  4958  001778                     l3934:
  4959                           
  4960                           ; BSR set to: 1
  4961  001778  0101               	movlb	1	; () banked
  4962  00177A  0101               	movlb	1	; () banked
  4963  00177C  B98B               	btfsc	OpenUSART@config& (0+255),4,b
  4964                           
  4965                           ; BSR set to: 1
  4966  00177E  84AC               	bsf	4012,2,c	;volatile
  4967                           
  4968                           ; BSR set to: 1
  4969  001780  989E               	bcf	3998,4,c	;volatile
  4970                           
  4971                           ; BSR set to: 1
  4972  001782  0101               	movlb	1	; () banked
  4973  001784  0101               	movlb	1	; () banked
  4974  001786  BB8B               	btfsc	OpenUSART@config& (0+255),5,b
  4975                           
  4976                           ; BSR set to: 1
  4977  001788  86AB               	bsf	4011,3,c	;volatile
  4978                           
  4979                           ; BSR set to: 1
  4980                           
  4981                           ; BSR set to: 1
  4982  00178A  0101               	movlb	1	; () banked
  4983  00178C  0101               	movlb	1	; () banked
  4984  00178E  AD8B               	btfss	OpenUSART@config& (0+255),6,b
  4985  001790  D002               	goto	l587
  4986                           
  4987                           ; BSR set to: 1
  4988  001792  8A9D               	bsf	3997,5,c	;volatile
  4989  001794  D001               	goto	l588
  4990  001796                     l587:
  4991                           
  4992                           ; BSR set to: 1
  4993  001796  9A9D               	bcf	3997,5,c	;volatile
  4994  001798                     l588:
  4995                           
  4996                           ; BSR set to: 1
  4997  001798  9A9E               	bcf	3998,5,c	;volatile
  4998                           
  4999                           ; BSR set to: 1
  5000  00179A  0101               	movlb	1	; () banked
  5001  00179C  0101               	movlb	1	; () banked
  5002  00179E  AF8B               	btfss	OpenUSART@config& (0+255),7,b
  5003  0017A0  D002               	goto	l589
  5004                           
  5005                           ; BSR set to: 1
  5006  0017A2  889D               	bsf	3997,4,c	;volatile
  5007  0017A4  D001               	goto	l590
  5008  0017A6                     l589:
  5009                           
  5010                           ; BSR set to: 1
  5011  0017A6  989D               	bcf	3997,4,c	;volatile
  5012  0017A8                     l590:
  5013                           
  5014                           ; BSR set to: 1
  5015  0017A8  C186  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5016                           
  5017                           ; BSR set to: 1
  5018  0017AC  0101               	movlb	1	; () banked
  5019  0017AE  C187  F188         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5020  0017B2  C188  F189         	movff	??_OpenUSART,??_OpenUSART+1
  5021  0017B6  0101               	movlb	1	; () banked
  5022  0017B8  6B8A               	clrf	(??_OpenUSART+2)& (0+255),b
  5023  0017BA  0101               	movlb	1	; () banked
  5024  0017BC  5189               	movf	(??_OpenUSART+1)& (0+255),w,b
  5025  0017BE  6EB0               	movwf	4016,c	;volatile
  5026                           
  5027                           ; BSR set to: 1
  5028  0017C0  8AAC               	bsf	4012,5,c	;volatile
  5029                           
  5030                           ; BSR set to: 1
  5031  0017C2  8EAB               	bsf	4011,7,c	;volatile
  5032                           
  5033                           ; BSR set to: 1
  5034  0017C4  9C94               	bcf	3988,6,c	;volatile
  5035                           
  5036                           ; BSR set to: 1
  5037  0017C6  8E94               	bsf	3988,7,c	;volatile
  5038                           
  5039                           ; BSR set to: 1
  5040  0017C8  A8AC               	btfss	4012,4,c	;volatile
  5041  0017CA  0012               	return	
  5042                           
  5043                           ; BSR set to: 1
  5044  0017CC  BEAC               	btfsc	4012,7,c	;volatile
  5045  0017CE  0012               	return	
  5046                           
  5047                           ; BSR set to: 1
  5048  0017D0  8C94               	bsf	3988,6,c	;volatile
  5049  0017D2  0012               	return	
  5050  0017D4                     __end_of_OpenUSART:
  5051                           	opt stack 0
  5052                           tblptru	equ	0xFF8
  5053                           tblptrh	equ	0xFF7
  5054                           tblptrl	equ	0xFF6
  5055                           tablat	equ	0xFF5
  5056                           prodh	equ	0xFF4
  5057                           prodl	equ	0xFF3
  5058                           intcon	equ	0xFF2
  5059                           intcon2	equ	0xFF1
  5060                           postinc0	equ	0xFEE
  5061                           wreg	equ	0xFE8
  5062                           indf1	equ	0xFE7
  5063                           postdec1	equ	0xFE5
  5064                           fsr1h	equ	0xFE2
  5065                           fsr1l	equ	0xFE1
  5066                           indf2	equ	0xFDF
  5067                           postinc2	equ	0xFDE
  5068                           postdec2	equ	0xFDD
  5069                           fsr2h	equ	0xFDA
  5070                           fsr2l	equ	0xFD9
  5071                           status	equ	0xFD8
  5072                           
  5073 ;; *************** function _OpenTimer1 *****************
  5074 ;; Defined at:
  5075 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;  config          1    wreg     unsigned char 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  config          1    0[BANK1 ] unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;		None               void
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5089 ;;      Params:         0       0       0       0       0
  5090 ;;      Locals:         0       0       1       0       0
  5091 ;;      Temps:          0       0       0       0       0
  5092 ;;      Totals:         0       0       1       0       0
  5093 ;;Total ram usage:        1 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:   11
  5096 ;; This function calls:
  5097 ;;		Nothing
  5098 ;; This function is called by:
  5099 ;;		_main
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text28
  5104  001F1E                     __ptext28:
  5105                           	opt stack 0
  5106  001F1E                     _OpenTimer1:
  5107                           	opt stack 19
  5108                           
  5109                           ; BSR set to: 1
  5110                           ;incstack = 0
  5111                           ;OpenTimer1@config stored from wreg
  5112  001F1E  CFE8 F186          	movff	wreg,OpenTimer1@config
  5113  001F22  0101               	movlb	1	; () banked
  5114  001F24  0101               	movlb	1	; () banked
  5115  001F26  5186               	movf	OpenTimer1@config& (0+255),w,b
  5116  001F28  0B7E               	andlw	126
  5117  001F2A  6ECD               	movwf	4045,c	;volatile
  5118                           
  5119                           ; BSR set to: 1
  5120  001F2C  0101               	movlb	1	; () banked
  5121  001F2E  0101               	movlb	1	; () banked
  5122  001F30  AD86               	btfss	OpenTimer1@config& (0+255),6,b
  5123  001F32  D002               	goto	l546
  5124                           
  5125                           ; BSR set to: 1
  5126  001F34  8ECD               	bsf	4045,7,c	;volatile
  5127  001F36  D001               	goto	l3886
  5128  001F38                     l546:
  5129                           
  5130                           ; BSR set to: 1
  5131  001F38  9ECD               	bcf	4045,7,c	;volatile
  5132  001F3A                     l3886:
  5133                           
  5134                           ; BSR set to: 1
  5135  001F3A  0E00               	movlw	0
  5136  001F3C  6ECF               	movwf	4047,c	;volatile
  5137  001F3E  0E00               	movlw	0
  5138  001F40  6ECE               	movwf	4046,c	;volatile
  5139                           
  5140                           ; BSR set to: 1
  5141  001F42  909E               	bcf	3998,0,c	;volatile
  5142                           
  5143                           ; BSR set to: 1
  5144  001F44  0101               	movlb	1	; () banked
  5145  001F46  0101               	movlb	1	; () banked
  5146  001F48  AF86               	btfss	OpenTimer1@config& (0+255),7,b
  5147  001F4A  D002               	goto	l548
  5148                           
  5149                           ; BSR set to: 1
  5150  001F4C  809D               	bsf	3997,0,c	;volatile
  5151  001F4E  D001               	goto	l549
  5152  001F50                     l548:
  5153                           
  5154                           ; BSR set to: 1
  5155  001F50  909D               	bcf	3997,0,c	;volatile
  5156  001F52                     l549:
  5157                           
  5158                           ; BSR set to: 1
  5159  001F52  80CD               	bsf	4045,0,c	;volatile
  5160                           
  5161                           ; BSR set to: 1
  5162  001F54  0012               	return	
  5163  001F56                     __end_of_OpenTimer1:
  5164                           	opt stack 0
  5165                           tblptru	equ	0xFF8
  5166                           tblptrh	equ	0xFF7
  5167                           tblptrl	equ	0xFF6
  5168                           tablat	equ	0xFF5
  5169                           prodh	equ	0xFF4
  5170                           prodl	equ	0xFF3
  5171                           intcon	equ	0xFF2
  5172                           intcon2	equ	0xFF1
  5173                           postinc0	equ	0xFEE
  5174                           wreg	equ	0xFE8
  5175                           indf1	equ	0xFE7
  5176                           postdec1	equ	0xFE5
  5177                           fsr1h	equ	0xFE2
  5178                           fsr1l	equ	0xFE1
  5179                           indf2	equ	0xFDF
  5180                           postinc2	equ	0xFDE
  5181                           postdec2	equ	0xFDD
  5182                           fsr2h	equ	0xFDA
  5183                           fsr2l	equ	0xFD9
  5184                           status	equ	0xFD8
  5185                           
  5186 ;; *************** function _OpenTimer0 *****************
  5187 ;; Defined at:
  5188 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  config          1    wreg     unsigned char 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  config          1    0[BANK1 ] unsigned char 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;		None               void
  5195 ;; Registers used:
  5196 ;;		wreg, status,2, status,0
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5202 ;;      Params:         0       0       0       0       0
  5203 ;;      Locals:         0       0       1       0       0
  5204 ;;      Temps:          0       0       0       0       0
  5205 ;;      Totals:         0       0       1       0       0
  5206 ;;Total ram usage:        1 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; Hardware stack levels required when called:   11
  5209 ;; This function calls:
  5210 ;;		Nothing
  5211 ;; This function is called by:
  5212 ;;		_main
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text29
  5217  002024                     __ptext29:
  5218                           	opt stack 0
  5219  002024                     _OpenTimer0:
  5220                           	opt stack 19
  5221                           
  5222                           ; BSR set to: 1
  5223                           ;incstack = 0
  5224                           ;OpenTimer0@config stored from wreg
  5225  002024  CFE8 F186          	movff	wreg,OpenTimer0@config
  5226  002028  0101               	movlb	1	; () banked
  5227  00202A  0101               	movlb	1	; () banked
  5228  00202C  5186               	movf	OpenTimer0@config& (0+255),w,b
  5229  00202E  0B7F               	andlw	127
  5230  002030  6ED5               	movwf	4053,c	;volatile
  5231                           
  5232                           ; BSR set to: 1
  5233  002032  0E00               	movlw	0
  5234  002034  6ED7               	movwf	4055,c	;volatile
  5235                           
  5236                           ; BSR set to: 1
  5237  002036  0E00               	movlw	0
  5238  002038  6ED6               	movwf	4054,c	;volatile
  5239                           
  5240                           ; BSR set to: 1
  5241  00203A  94F2               	bcf	intcon,2,c	;volatile
  5242                           
  5243                           ; BSR set to: 1
  5244  00203C  0101               	movlb	1	; () banked
  5245  00203E  0101               	movlb	1	; () banked
  5246  002040  AF86               	btfss	OpenTimer0@config& (0+255),7,b
  5247  002042  D002               	goto	l522
  5248                           
  5249                           ; BSR set to: 1
  5250  002044  8AF2               	bsf	intcon,5,c	;volatile
  5251  002046  D001               	goto	l523
  5252  002048                     l522:
  5253                           
  5254                           ; BSR set to: 1
  5255  002048  9AF2               	bcf	intcon,5,c	;volatile
  5256  00204A                     l523:
  5257                           
  5258                           ; BSR set to: 1
  5259  00204A  8ED5               	bsf	4053,7,c	;volatile
  5260                           
  5261                           ; BSR set to: 1
  5262  00204C  0012               	return	
  5263  00204E                     __end_of_OpenTimer0:
  5264                           	opt stack 0
  5265                           tblptru	equ	0xFF8
  5266                           tblptrh	equ	0xFF7
  5267                           tblptrl	equ	0xFF6
  5268                           tablat	equ	0xFF5
  5269                           prodh	equ	0xFF4
  5270                           prodl	equ	0xFF3
  5271                           intcon	equ	0xFF2
  5272                           intcon2	equ	0xFF1
  5273                           postinc0	equ	0xFEE
  5274                           wreg	equ	0xFE8
  5275                           indf1	equ	0xFE7
  5276                           postdec1	equ	0xFE5
  5277                           fsr1h	equ	0xFE2
  5278                           fsr1l	equ	0xFE1
  5279                           indf2	equ	0xFDF
  5280                           postinc2	equ	0xFDE
  5281                           postdec2	equ	0xFDD
  5282                           fsr2h	equ	0xFDA
  5283                           fsr2l	equ	0xFD9
  5284                           status	equ	0xFD8
  5285                           
  5286 ;; *************** function _OpenADC *****************
  5287 ;; Defined at:
  5288 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  5289 ;; Parameters:    Size  Location     Type
  5290 ;;  config          1    wreg     unsigned char 
  5291 ;;  config2         1    0[BANK1 ] unsigned char 
  5292 ;;  portconfig      1    1[BANK1 ] unsigned char 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  config          1    4[BANK1 ] unsigned char 
  5295 ;; Return value:  Size  Location     Type
  5296 ;;		None               void
  5297 ;; Registers used:
  5298 ;;		wreg, status,2, status,0
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5304 ;;      Params:         0       0       2       0       0
  5305 ;;      Locals:         0       0       1       0       0
  5306 ;;      Temps:          0       0       2       0       0
  5307 ;;      Totals:         0       0       5       0       0
  5308 ;;Total ram usage:        5 bytes
  5309 ;; Hardware stack levels used:    1
  5310 ;; Hardware stack levels required when called:   11
  5311 ;; This function calls:
  5312 ;;		Nothing
  5313 ;; This function is called by:
  5314 ;;		_main
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           	psect	text30
  5319  0018E4                     __ptext30:
  5320                           	opt stack 0
  5321  0018E4                     _OpenADC:
  5322                           	opt stack 19
  5323                           
  5324                           ; BSR set to: 1
  5325                           ;incstack = 0
  5326                           ;OpenADC@config stored from wreg
  5327  0018E4  CFE8 F18A          	movff	wreg,OpenADC@config
  5328  0018E8  0E00               	movlw	0
  5329  0018EA  6EC2               	movwf	4034,c	;volatile
  5330  0018EC  0E00               	movlw	0
  5331  0018EE  6EC0               	movwf	4032,c	;volatile
  5332  0018F0  0101               	movlb	1	; () banked
  5333  0018F2  0101               	movlb	1	; () banked
  5334  0018F4  90D8               	bcf	status,0,c
  5335  0018F6  3186               	rrcf	OpenADC@config2& (0+255),w,b
  5336  0018F8  0B3C               	andlw	60
  5337  0018FA  6EC2               	movwf	4034,c	;volatile
  5338                           
  5339                           ; BSR set to: 1
  5340  0018FC  C186  F188         	movff	OpenADC@config2,??_OpenADC
  5341  001900  0101               	movlb	1	; () banked
  5342  001902  3B88               	swapf	??_OpenADC& (0+255),f,b
  5343  001904  0EF0               	movlw	240
  5344  001906  1788               	andwf	??_OpenADC& (0+255),f,b
  5345  001908  0E30               	movlw	48
  5346  00190A  0101               	movlb	1	; () banked
  5347  00190C  1788               	andwf	??_OpenADC& (0+255),f,b
  5348  00190E  0101               	movlb	1	; () banked
  5349  001910  0101               	movlb	1	; () banked
  5350  001912  5187               	movf	OpenADC@portconfig& (0+255),w,b
  5351  001914  0B0F               	andlw	15
  5352  001916  0101               	movlb	1	; () banked
  5353  001918  1188               	iorwf	??_OpenADC& (0+255),w,b
  5354  00191A  6EC1               	movwf	4033,c	;volatile
  5355                           
  5356                           ; BSR set to: 1
  5357  00191C  C18A  F188         	movff	OpenADC@config,??_OpenADC
  5358  001920  0101               	movlb	1	; () banked
  5359  001922  90D8               	bcf	status,0,c
  5360  001924  3788               	rlcf	??_OpenADC& (0+255),f,b
  5361  001926  0101               	movlb	1	; () banked
  5362  001928  90D8               	bcf	status,0,c
  5363  00192A  3788               	rlcf	??_OpenADC& (0+255),f,b
  5364  00192C  0E38               	movlw	56
  5365  00192E  0101               	movlb	1	; () banked
  5366  001930  1788               	andwf	??_OpenADC& (0+255),f,b
  5367  001932  C18A  F189         	movff	OpenADC@config,??_OpenADC+1
  5368  001936  0101               	movlb	1	; () banked
  5369  001938  3B89               	swapf	(??_OpenADC+1)& (0+255),f,b
  5370  00193A  0E0F               	movlw	15
  5371  00193C  1789               	andwf	(??_OpenADC+1)& (0+255),f,b
  5372  00193E  0E07               	movlw	7
  5373  001940  0101               	movlb	1	; () banked
  5374  001942  1789               	andwf	(??_OpenADC+1)& (0+255),f,b
  5375  001944  0101               	movlb	1	; () banked
  5376  001946  0101               	movlb	1	; () banked
  5377  001948  518A               	movf	OpenADC@config& (0+255),w,b
  5378  00194A  0B80               	andlw	128
  5379  00194C  0101               	movlb	1	; () banked
  5380  00194E  1189               	iorwf	(??_OpenADC+1)& (0+255),w,b
  5381  001950  0101               	movlb	1	; () banked
  5382  001952  1188               	iorwf	??_OpenADC& (0+255),w,b
  5383  001954  6EC0               	movwf	4032,c	;volatile
  5384                           
  5385                           ; BSR set to: 1
  5386  001956  0101               	movlb	1	; () banked
  5387  001958  0101               	movlb	1	; () banked
  5388  00195A  AF86               	btfss	OpenADC@config2& (0+255),7,b
  5389  00195C  D003               	goto	l503
  5390                           
  5391                           ; BSR set to: 1
  5392  00195E  9C9E               	bcf	3998,6,c	;volatile
  5393  001960  8C9D               	bsf	3997,6,c	;volatile
  5394  001962  8CF2               	bsf	intcon,6,c	;volatile
  5395  001964                     l503:
  5396                           
  5397                           ; BSR set to: 1
  5398  001964  80C2               	bsf	4034,0,c	;volatile
  5399                           
  5400                           ; BSR set to: 1
  5401  001966  0012               	return	
  5402  001968                     __end_of_OpenADC:
  5403                           	opt stack 0
  5404                           tblptru	equ	0xFF8
  5405                           tblptrh	equ	0xFF7
  5406                           tblptrl	equ	0xFF6
  5407                           tablat	equ	0xFF5
  5408                           prodh	equ	0xFF4
  5409                           prodl	equ	0xFF3
  5410                           intcon	equ	0xFF2
  5411                           intcon2	equ	0xFF1
  5412                           postinc0	equ	0xFEE
  5413                           wreg	equ	0xFE8
  5414                           indf1	equ	0xFE7
  5415                           postdec1	equ	0xFE5
  5416                           fsr1h	equ	0xFE2
  5417                           fsr1l	equ	0xFE1
  5418                           indf2	equ	0xFDF
  5419                           postinc2	equ	0xFDE
  5420                           postdec2	equ	0xFDD
  5421                           fsr2h	equ	0xFDA
  5422                           fsr2l	equ	0xFD9
  5423                           status	equ	0xFD8
  5424                           
  5425 ;; *************** function _InterruptHandlerLow *****************
  5426 ;; Defined at:
  5427 ;;		line 128 in file "../src/interrupts.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;		None
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;		None
  5432 ;; Return value:  Size  Location     Type
  5433 ;;		None               void
  5434 ;; Registers used:
  5435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5441 ;;      Params:         0       0       0       0       0
  5442 ;;      Locals:         0       0       0       0       0
  5443 ;;      Temps:         17       0       0       0       0
  5444 ;;      Totals:        17       0       0       0       0
  5445 ;;Total ram usage:       17 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:   10
  5448 ;; This function calls:
  5449 ;;		_adc_int_handler
  5450 ;;		_timer1_int_handler
  5451 ;;		_uart_recv_int_handler
  5452 ;;		_uart_trans_int_handler
  5453 ;; This function is called by:
  5454 ;;		Interrupt level 1
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           	psect	intcodelo
  5459  000018                     __pintcodelo:
  5460                           	opt stack 0
  5461  000018                     _InterruptHandlerLow:
  5462                           	opt stack 16
  5463                           
  5464                           ; BSR set to: 1
  5465                           ;incstack = 0
  5466  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  5467  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  5468  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  5469  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  5470  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  5471  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  5472  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  5473  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  5474  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  5475  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  5476  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  5477  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  5478  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  5479  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  5480  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  5481  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  5482  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  5483                           
  5484                           ;interrupts.c: 130: if(PIR1bits.ADIF){
  5485  00005C  AC9E               	btfss	3998,6,c	;volatile
  5486  00005E  D003               	goto	i1l4612
  5487                           
  5488                           ;interrupts.c: 132: PIR1bits.ADIF = 0;
  5489  000060  9C9E               	bcf	3998,6,c	;volatile
  5490                           
  5491                           ;interrupts.c: 133: adc_int_handler();
  5492  000062  EC60  F010         	call	_adc_int_handler	;wreg free
  5493  000066                     i1l4612:
  5494                           
  5495                           ;interrupts.c: 134: }
  5496                           ;interrupts.c: 137: if (PIR1bits.TMR1IF) {
  5497  000066  A09E               	btfss	3998,0,c	;volatile
  5498  000068  D003               	goto	i1l4618
  5499                           
  5500                           ;interrupts.c: 138: PIR1bits.TMR1IF = 0;
  5501  00006A  909E               	bcf	3998,0,c	;volatile
  5502                           
  5503                           ;interrupts.c: 139: timer1_int_handler();
  5504  00006C  ECD7  F010         	call	_timer1_int_handler	;wreg free
  5505  000070                     i1l4618:
  5506                           
  5507                           ;interrupts.c: 141: }
  5508                           ;interrupts.c: 143: if (PIR1bits.TXIF) {
  5509  000070  B89E               	btfsc	3998,4,c	;volatile
  5510                           
  5511                           ;interrupts.c: 145: uart_trans_int_handler();
  5512  000072  EC0C  F00E         	call	_uart_trans_int_handler	;wreg free
  5513                           
  5514                           ;interrupts.c: 146: }
  5515                           ;interrupts.c: 148: if (PIR1bits.RCIF) {
  5516  000076  AA9E               	btfss	3998,5,c	;volatile
  5517  000078  D003               	goto	i1l59
  5518                           
  5519                           ;interrupts.c: 149: PIR1bits.RCIF = 0;
  5520  00007A  9A9E               	bcf	3998,5,c	;volatile
  5521                           
  5522                           ;interrupts.c: 151: uart_recv_int_handler();
  5523  00007C  ECE5  F009         	call	_uart_recv_int_handler	;wreg free
  5524  000080                     i1l59:
  5525  000080  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5526  000084  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5527  000088  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5528  00008C  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5529  000090  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5530  000094  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5531  000098  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5532  00009C  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5533  0000A0  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5534  0000A4  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5535  0000A8  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5536  0000AC  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5537  0000B0  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5538  0000B4  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5539  0000B8  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5540  0000BC  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5541  0000C0  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5542  0000C4  0010               	retfie	
  5543  0000C6                     __end_of_InterruptHandlerLow:
  5544                           	opt stack 0
  5545                           pclatu	equ	0xFFB
  5546                           pclath	equ	0xFFA
  5547                           tblptru	equ	0xFF8
  5548                           tblptrh	equ	0xFF7
  5549                           tblptrl	equ	0xFF6
  5550                           tablat	equ	0xFF5
  5551                           prodh	equ	0xFF4
  5552                           prodl	equ	0xFF3
  5553                           intcon	equ	0xFF2
  5554                           intcon2	equ	0xFF1
  5555                           postinc0	equ	0xFEE
  5556                           fsr0h	equ	0xFEA
  5557                           fsr0l	equ	0xFE9
  5558                           wreg	equ	0xFE8
  5559                           indf1	equ	0xFE7
  5560                           postdec1	equ	0xFE5
  5561                           fsr1h	equ	0xFE2
  5562                           fsr1l	equ	0xFE1
  5563                           bsr	equ	0xFE0
  5564                           indf2	equ	0xFDF
  5565                           postinc2	equ	0xFDE
  5566                           postdec2	equ	0xFDD
  5567                           fsr2h	equ	0xFDA
  5568                           fsr2l	equ	0xFD9
  5569                           status	equ	0xFD8
  5570                           
  5571 ;; *************** function _uart_trans_int_handler *****************
  5572 ;; Defined at:
  5573 ;;		line 73 in file "../src/my_uart.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;		None
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;		None
  5578 ;; Return value:  Size  Location     Type
  5579 ;;		None               void
  5580 ;; Registers used:
  5581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5587 ;;      Params:         0       0       0       0       0
  5588 ;;      Locals:         0       0       0       0       0
  5589 ;;      Temps:          1       0       0       0       0
  5590 ;;      Totals:         1       0       0       0       0
  5591 ;;Total ram usage:        1 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; Hardware stack levels required when called:    6
  5594 ;; This function calls:
  5595 ;;		Nothing
  5596 ;; This function is called by:
  5597 ;;		_InterruptHandlerLow
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           	psect	text32
  5602  001C18                     __ptext32:
  5603                           	opt stack 0
  5604  001C18                     _uart_trans_int_handler:
  5605                           	opt stack 19
  5606                           
  5607                           ;my_uart.c: 75: if(TXSTAbits.TRMT){
  5608                           
  5609                           ;incstack = 0
  5610  001C18  A2AC               	btfss	4012,1,c	;volatile
  5611  001C1A  0012               	return	
  5612                           
  5613                           ;my_uart.c: 76: if(uc_ptr->txBufind < uc_ptr->txBuflen){
  5614  001C1C  EE20 F00C          	lfsr	2,12
  5615  001C20  5052               	movf	_uc_ptr,w,c
  5616  001C22  26D9               	addwf	fsr2l,f,c
  5617  001C24  5053               	movf	_uc_ptr+1,w,c
  5618  001C26  22DA               	addwfc	fsr2h,f,c
  5619  001C28  50DF               	movf	indf2,w,c
  5620  001C2A  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5621  001C2C  EE20 F00B          	lfsr	2,11
  5622  001C30  5052               	movf	_uc_ptr,w,c
  5623  001C32  26D9               	addwf	fsr2l,f,c
  5624  001C34  5053               	movf	_uc_ptr+1,w,c
  5625  001C36  22DA               	addwfc	fsr2h,f,c
  5626  001C38  50DF               	movf	indf2,w,c
  5627  001C3A  5C01               	subwf	??_uart_trans_int_handler,w,c
  5628  001C3C  B0D8               	btfsc	status,0,c
  5629  001C3E  D01E               	goto	i1l439
  5630                           
  5631                           ;my_uart.c: 77: TXREG = uc_ptr->txBuff[uc_ptr->txBufind];
  5632  001C40  EE20 F00C          	lfsr	2,12
  5633  001C44  5052               	movf	_uc_ptr,w,c
  5634  001C46  26D9               	addwf	fsr2l,f,c
  5635  001C48  5053               	movf	_uc_ptr+1,w,c
  5636  001C4A  22DA               	addwfc	fsr2h,f,c
  5637  001C4C  50DF               	movf	indf2,w,c
  5638  001C4E  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5639  001C50  5001               	movf	??_uart_trans_int_handler,w,c
  5640  001C52  0D01               	mullw	1
  5641  001C54  0E06               	movlw	6
  5642  001C56  26F3               	addwf	prodl,f,c
  5643  001C58  0E00               	movlw	0
  5644  001C5A  22F4               	addwfc	prodh,f,c
  5645  001C5C  50F3               	movf	prodl,w,c
  5646  001C5E  2452               	addwf	_uc_ptr,w,c
  5647  001C60  6ED9               	movwf	fsr2l,c
  5648  001C62  50F4               	movf	prodh,w,c
  5649  001C64  2053               	addwfc	_uc_ptr+1,w,c
  5650  001C66  6EDA               	movwf	fsr2h,c
  5651  001C68  50DF               	movf	indf2,w,c
  5652  001C6A  6EAD               	movwf	4013,c	;volatile
  5653                           
  5654                           ;my_uart.c: 79: uc_ptr->txBufind++;
  5655  001C6C  EE20 F00C          	lfsr	2,12
  5656  001C70  5052               	movf	_uc_ptr,w,c
  5657  001C72  26D9               	addwf	fsr2l,f,c
  5658  001C74  5053               	movf	_uc_ptr+1,w,c
  5659  001C76  22DA               	addwfc	fsr2h,f,c
  5660  001C78  2ADF               	incf	indf2,f,c
  5661                           
  5662                           ;my_uart.c: 80: } else
  5663  001C7A  0012               	return	
  5664  001C7C                     i1l439:
  5665                           
  5666                           ;my_uart.c: 81: PIE1bits.TX1IE = 0;
  5667  001C7C  989D               	bcf	3997,4,c	;volatile
  5668  001C7E  0012               	return	
  5669  001C80                     __end_of_uart_trans_int_handler:
  5670                           	opt stack 0
  5671                           pclatu	equ	0xFFB
  5672                           pclath	equ	0xFFA
  5673                           tblptru	equ	0xFF8
  5674                           tblptrh	equ	0xFF7
  5675                           tblptrl	equ	0xFF6
  5676                           tablat	equ	0xFF5
  5677                           prodh	equ	0xFF4
  5678                           prodl	equ	0xFF3
  5679                           intcon	equ	0xFF2
  5680                           intcon2	equ	0xFF1
  5681                           postinc0	equ	0xFEE
  5682                           fsr0h	equ	0xFEA
  5683                           fsr0l	equ	0xFE9
  5684                           wreg	equ	0xFE8
  5685                           indf1	equ	0xFE7
  5686                           postdec1	equ	0xFE5
  5687                           fsr1h	equ	0xFE2
  5688                           fsr1l	equ	0xFE1
  5689                           bsr	equ	0xFE0
  5690                           indf2	equ	0xFDF
  5691                           postinc2	equ	0xFDE
  5692                           postdec2	equ	0xFDD
  5693                           fsr2h	equ	0xFDA
  5694                           fsr2l	equ	0xFD9
  5695                           status	equ	0xFD8
  5696                           
  5697 ;; *************** function _uart_recv_int_handler *****************
  5698 ;; Defined at:
  5699 ;;		line 11 in file "../src/my_uart.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;		None
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;		None
  5704 ;; Return value:  Size  Location     Type
  5705 ;;		None               void
  5706 ;; Registers used:
  5707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5713 ;;      Params:         0       0       0       0       0
  5714 ;;      Locals:         0       0       0       0       0
  5715 ;;      Temps:          1       0       0       0       0
  5716 ;;      Totals:         1       0       0       0       0
  5717 ;;Total ram usage:        1 bytes
  5718 ;; Hardware stack levels used:    1
  5719 ;; Hardware stack levels required when called:    9
  5720 ;; This function calls:
  5721 ;;		_ReadUSART
  5722 ;;		_ToMainLow_sendmsg
  5723 ;; This function is called by:
  5724 ;;		_InterruptHandlerLow
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text33
  5729  0013CA                     __ptext33:
  5730                           	opt stack 0
  5731  0013CA                     _uart_recv_int_handler:
  5732                           	opt stack 16
  5733                           
  5734                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  5735                           
  5736                           ;incstack = 0
  5737  0013CA  AA9E               	btfss	3998,5,c	;volatile
  5738  0013CC  D04E               	goto	i1l4600
  5739                           
  5740                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5741  0013CE  EE20 F005          	lfsr	2,5
  5742  0013D2  5052               	movf	_uc_ptr,w,c
  5743  0013D4  26D9               	addwf	fsr2l,f,c
  5744  0013D6  5053               	movf	_uc_ptr+1,w,c
  5745  0013D8  22DA               	addwfc	fsr2h,f,c
  5746  0013DA  50DF               	movf	indf2,w,c
  5747  0013DC  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5748  0013DE  501B               	movf	??_uart_recv_int_handler,w,c
  5749  0013E0  0D01               	mullw	1
  5750  0013E2  50F3               	movf	prodl,w,c
  5751  0013E4  2452               	addwf	_uc_ptr,w,c
  5752  0013E6  6ED9               	movwf	fsr2l,c
  5753  0013E8  50F4               	movf	prodh,w,c
  5754  0013EA  2053               	addwfc	_uc_ptr+1,w,c
  5755  0013EC  6EDA               	movwf	fsr2h,c
  5756  0013EE  EC90  F010         	call	_ReadUSART	;wreg free
  5757  0013F2  6EDF               	movwf	indf2,c
  5758                           
  5759                           ;my_uart.c: 25: uc_ptr->buflen++;
  5760  0013F4  EE20 F005          	lfsr	2,5
  5761  0013F8  5052               	movf	_uc_ptr,w,c
  5762  0013FA  26D9               	addwf	fsr2l,f,c
  5763  0013FC  5053               	movf	_uc_ptr+1,w,c
  5764  0013FE  22DA               	addwfc	fsr2h,f,c
  5765  001400  2ADF               	incf	indf2,f,c
  5766                           
  5767                           ;my_uart.c: 26: if(UART_timeout > 200){
  5768  001402  0EC9               	movlw	201
  5769  001404  5C4C               	subwf	_UART_timeout,w,c
  5770  001406  0E00               	movlw	0
  5771  001408  584D               	subwfb	_UART_timeout+1,w,c
  5772  00140A  A0D8               	btfss	status,0,c
  5773  00140C  D00C               	goto	i1l4594
  5774                           
  5775                           ;my_uart.c: 27: uc_ptr->buflen = 1;
  5776  00140E  EE20 F005          	lfsr	2,5
  5777  001412  5052               	movf	_uc_ptr,w,c
  5778  001414  26D9               	addwf	fsr2l,f,c
  5779  001416  5053               	movf	_uc_ptr+1,w,c
  5780  001418  22DA               	addwfc	fsr2h,f,c
  5781  00141A  0E01               	movlw	1
  5782  00141C  6EDF               	movwf	indf2,c
  5783                           
  5784                           ;my_uart.c: 28: UART_timeout = 0;
  5785  00141E  0E00               	movlw	0
  5786  001420  6E4D               	movwf	_UART_timeout+1,c
  5787  001422  0E00               	movlw	0
  5788  001424  6E4C               	movwf	_UART_timeout,c
  5789  001426                     i1l4594:
  5790                           
  5791                           ;my_uart.c: 29: }
  5792                           ;my_uart.c: 32: if (uc_ptr->buflen == 5) {
  5793  001426  EE20 F005          	lfsr	2,5
  5794  00142A  5052               	movf	_uc_ptr,w,c
  5795  00142C  26D9               	addwf	fsr2l,f,c
  5796  00142E  5053               	movf	_uc_ptr+1,w,c
  5797  001430  22DA               	addwfc	fsr2h,f,c
  5798  001432  0E05               	movlw	5
  5799  001434  62DF               	cpfseq	indf2,c
  5800  001436  D019               	goto	i1l4600
  5801                           
  5802                           ;my_uart.c: 33: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5803  001438  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5804  00143A  0E1F               	movlw	31
  5805  00143C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5806  00143E  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5807  001440  C053  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5808  001444  C052  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5809  001448  EE20 F005          	lfsr	2,5
  5810  00144C  5052               	movf	_uc_ptr,w,c
  5811  00144E  26D9               	addwf	fsr2l,f,c
  5812  001450  5053               	movf	_uc_ptr+1,w,c
  5813  001452  22DA               	addwfc	fsr2h,f,c
  5814  001454  50DF               	movf	indf2,w,c
  5815  001456  EC3B  F010         	call	_ToMainLow_sendmsg
  5816                           
  5817                           ;my_uart.c: 34: uc_ptr->buflen = 0;
  5818  00145A  EE20 F005          	lfsr	2,5
  5819  00145E  5052               	movf	_uc_ptr,w,c
  5820  001460  26D9               	addwf	fsr2l,f,c
  5821  001462  5053               	movf	_uc_ptr+1,w,c
  5822  001464  22DA               	addwfc	fsr2h,f,c
  5823  001466  0E00               	movlw	0
  5824  001468  6EDF               	movwf	indf2,c
  5825  00146A                     i1l4600:
  5826                           
  5827                           ;my_uart.c: 35: }
  5828                           ;my_uart.c: 36: }
  5829                           ;my_uart.c: 43: if (USART_Status.OVERRUN_ERROR == 1) {
  5830  00146A  A651               	btfss	_USART_Status,3,c
  5831  00146C  0012               	return	
  5832                           
  5833                           ;my_uart.c: 48: RCSTAbits.CREN = 0;
  5834  00146E  98AB               	bcf	4011,4,c	;volatile
  5835                           
  5836                           ;my_uart.c: 49: RCSTAbits.CREN = 1;
  5837  001470  88AB               	bsf	4011,4,c	;volatile
  5838                           
  5839                           ;my_uart.c: 50: ToMainLow_sendmsg(0, 30, (void *) 0);
  5840  001472  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5841  001474  0E1E               	movlw	30
  5842  001476  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5843  001478  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5844  00147A  0E00               	movlw	0
  5845  00147C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5846  00147E  0E00               	movlw	0
  5847  001480  6E18               	movwf	ToMainLow_sendmsg@data,c
  5848  001482  0E00               	movlw	0
  5849  001484  EC3B  F010         	call	_ToMainLow_sendmsg
  5850  001488  0012               	return	
  5851  00148A                     __end_of_uart_recv_int_handler:
  5852                           	opt stack 0
  5853                           pclatu	equ	0xFFB
  5854                           pclath	equ	0xFFA
  5855                           tblptru	equ	0xFF8
  5856                           tblptrh	equ	0xFF7
  5857                           tblptrl	equ	0xFF6
  5858                           tablat	equ	0xFF5
  5859                           prodh	equ	0xFF4
  5860                           prodl	equ	0xFF3
  5861                           intcon	equ	0xFF2
  5862                           intcon2	equ	0xFF1
  5863                           postinc0	equ	0xFEE
  5864                           fsr0h	equ	0xFEA
  5865                           fsr0l	equ	0xFE9
  5866                           wreg	equ	0xFE8
  5867                           indf1	equ	0xFE7
  5868                           postdec1	equ	0xFE5
  5869                           fsr1h	equ	0xFE2
  5870                           fsr1l	equ	0xFE1
  5871                           bsr	equ	0xFE0
  5872                           indf2	equ	0xFDF
  5873                           postinc2	equ	0xFDE
  5874                           postdec2	equ	0xFDD
  5875                           fsr2h	equ	0xFDA
  5876                           fsr2l	equ	0xFD9
  5877                           status	equ	0xFD8
  5878                           
  5879 ;; *************** function _ToMainLow_sendmsg *****************
  5880 ;; Defined at:
  5881 ;;		line 103 in file "../src/messages.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;  length          1    wreg     unsigned char 
  5884 ;;  msgtype         1   22[COMRAM] unsigned char 
  5885 ;;  data            2   23[COMRAM] PTR void 
  5886 ;;		 -> NULL(0), main@uc(13), 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;  length          1   25[COMRAM] unsigned char 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  1    wreg      char 
  5891 ;; Registers used:
  5892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5898 ;;      Params:         3       0       0       0       0
  5899 ;;      Locals:         1       0       0       0       0
  5900 ;;      Temps:          0       0       0       0       0
  5901 ;;      Totals:         4       0       0       0       0
  5902 ;;Total ram usage:        4 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    8
  5905 ;; This function calls:
  5906 ;;		i1_send_msg
  5907 ;; This function is called by:
  5908 ;;		_uart_recv_int_handler
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           	psect	text34
  5913  002076                     __ptext34:
  5914                           	opt stack 0
  5915  002076                     _ToMainLow_sendmsg:
  5916                           	opt stack 16
  5917                           
  5918                           ;incstack = 0
  5919                           ;ToMainLow_sendmsg@length stored from wreg
  5920  002076  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5921                           
  5922                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5923                           ;	Return value of _ToMainLow_sendmsg is never used
  5924  00207A  0101               	movlb	1	; () banked
  5925  00207C  0E01               	movlw	high _ToMainLow_MQ
  5926  00207E  6E0C               	movwf	i1send_msg@qptr+1,c
  5927  002080  0101               	movlb	1	; () banked
  5928  002082  0E43               	movlw	low _ToMainLow_MQ
  5929  002084  6E0B               	movwf	i1send_msg@qptr,c
  5930  002086  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5931  00208A  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5932  00208E  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5933  002092  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5934  002096  EC45  F00A         	call	i1_send_msg	;wreg free
  5935  00209A  0012               	return	
  5936  00209C                     __end_of_ToMainLow_sendmsg:
  5937                           	opt stack 0
  5938                           pclatu	equ	0xFFB
  5939                           pclath	equ	0xFFA
  5940                           tblptru	equ	0xFF8
  5941                           tblptrh	equ	0xFF7
  5942                           tblptrl	equ	0xFF6
  5943                           tablat	equ	0xFF5
  5944                           prodh	equ	0xFF4
  5945                           prodl	equ	0xFF3
  5946                           intcon	equ	0xFF2
  5947                           intcon2	equ	0xFF1
  5948                           postinc0	equ	0xFEE
  5949                           fsr0h	equ	0xFEA
  5950                           fsr0l	equ	0xFE9
  5951                           wreg	equ	0xFE8
  5952                           indf1	equ	0xFE7
  5953                           postdec1	equ	0xFE5
  5954                           fsr1h	equ	0xFE2
  5955                           fsr1l	equ	0xFE1
  5956                           bsr	equ	0xFE0
  5957                           indf2	equ	0xFDF
  5958                           postinc2	equ	0xFDE
  5959                           postdec2	equ	0xFDD
  5960                           fsr2h	equ	0xFDA
  5961                           fsr2l	equ	0xFD9
  5962                           status	equ	0xFD8
  5963                           
  5964 ;; *************** function i1_send_msg *****************
  5965 ;; Defined at:
  5966 ;;		line 24 in file "../src/messages.c"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5969 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5970 ;;  length          1   12[COMRAM] unsigned char 
  5971 ;;  msgtype         1   13[COMRAM] unsigned char 
  5972 ;;  data            2   14[COMRAM] PTR void 
  5973 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  5974 ;;		 -> main@uc(13), 
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5977 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  5978 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5979 ;;  send_msg        2   17[COMRAM] unsigned int 
  5980 ;;  send_msg        1   19[COMRAM] unsigned char 
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  1    wreg      char 
  5983 ;; Registers used:
  5984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5990 ;;      Params:         6       0       0       0       0
  5991 ;;      Locals:         5       0       0       0       0
  5992 ;;      Temps:          1       0       0       0       0
  5993 ;;      Totals:        12       0       0       0       0
  5994 ;;Total ram usage:       12 bytes
  5995 ;; Hardware stack levels used:    1
  5996 ;; Hardware stack levels required when called:    7
  5997 ;; This function calls:
  5998 ;;		i1___awmod
  5999 ;;		i1_memcpy
  6000 ;; This function is called by:
  6001 ;;		_ToMainLow_sendmsg
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text35
  6006  00148A                     __ptext35:
  6007                           	opt stack 0
  6008  00148A                     i1_send_msg:
  6009                           	opt stack 16
  6010                           
  6011                           ;messages.c: 25: unsigned char slot;
  6012                           ;messages.c: 27: msg *qmsg;
  6013                           ;messages.c: 28: size_t tlength = length;
  6014                           
  6015                           ;incstack = 0
  6016  00148A  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6017  00148E  6A13               	clrf	i1send_msg@tlength+1,c
  6018                           
  6019                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6020  001490  EE20 F041          	lfsr	2,65
  6021  001494  500B               	movf	i1send_msg@qptr,w,c
  6022  001496  26D9               	addwf	fsr2l,f,c
  6023  001498  500C               	movf	i1send_msg@qptr+1,w,c
  6024  00149A  22DA               	addwfc	fsr2h,f,c
  6025  00149C  50DF               	movf	indf2,w,c
  6026  00149E  6E14               	movwf	i1send_msg@slot,c
  6027                           
  6028                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6029  0014A0  5014               	movf	i1send_msg@slot,w,c
  6030  0014A2  0D0D               	mullw	13
  6031  0014A4  50F3               	movf	prodl,w,c
  6032  0014A6  240B               	addwf	i1send_msg@qptr,w,c
  6033  0014A8  6E15               	movwf	i1send_msg@qmsg,c
  6034  0014AA  50F4               	movf	prodh,w,c
  6035  0014AC  200C               	addwfc	i1send_msg@qptr+1,w,c
  6036  0014AE  6E16               	movwf	i1send_msg@qmsg+1,c
  6037                           
  6038                           ;messages.c: 41: if (qmsg->full != 0) {
  6039  0014B0  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6040  0014B4  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6041  0014B8  50DF               	movf	indf2,w,c
  6042  0014BA  B4D8               	btfsc	status,2,c
  6043  0014BC  D002               	goto	i1l4566
  6044                           
  6045                           ;messages.c: 42: return (-1);
  6046  0014BE  0EFF               	movlw	255
  6047  0014C0  0012               	return	
  6048  0014C2                     i1l4566:
  6049                           
  6050                           ;messages.c: 43: }
  6051                           ;messages.c: 46: qmsg->length = length;
  6052  0014C2  EE20 F001          	lfsr	2,1
  6053  0014C6  5015               	movf	i1send_msg@qmsg,w,c
  6054  0014C8  26D9               	addwf	fsr2l,f,c
  6055  0014CA  5016               	movf	i1send_msg@qmsg+1,w,c
  6056  0014CC  22DA               	addwfc	fsr2h,f,c
  6057  0014CE  C00D  FFDF         	movff	i1send_msg@length,indf2
  6058                           
  6059                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6060  0014D2  EE20 F002          	lfsr	2,2
  6061  0014D6  5015               	movf	i1send_msg@qmsg,w,c
  6062  0014D8  26D9               	addwf	fsr2l,f,c
  6063  0014DA  5016               	movf	i1send_msg@qmsg+1,w,c
  6064  0014DC  22DA               	addwfc	fsr2h,f,c
  6065  0014DE  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6066                           
  6067                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6068  0014E2  0E03               	movlw	3
  6069  0014E4  2415               	addwf	i1send_msg@qmsg,w,c
  6070  0014E6  6E01               	movwf	i1memcpy@d1,c
  6071  0014E8  0E00               	movlw	0
  6072  0014EA  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6073  0014EC  6E02               	movwf	i1memcpy@d1+1,c
  6074  0014EE  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6075  0014F2  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6076  0014F6  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6077  0014FA  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6078  0014FE  EC4F  F00F         	call	i1_memcpy	;wreg free
  6079                           
  6080                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  6081  001502  EE20 F041          	lfsr	2,65
  6082  001506  500B               	movf	i1send_msg@qptr,w,c
  6083  001508  26D9               	addwf	fsr2l,f,c
  6084  00150A  500C               	movf	i1send_msg@qptr+1,w,c
  6085  00150C  22DA               	addwfc	fsr2h,f,c
  6086  00150E  EE10 F041          	lfsr	1,65
  6087  001512  500B               	movf	i1send_msg@qptr,w,c
  6088  001514  26E1               	addwf	fsr1l,f,c
  6089  001516  500C               	movf	i1send_msg@qptr+1,w,c
  6090  001518  22E2               	addwfc	fsr1h,f,c
  6091  00151A  50E7               	movf	indf1,w,c
  6092  00151C  6E11               	movwf	??i1_send_msg& (0+255),c
  6093  00151E  0E01               	movlw	1
  6094  001520  2411               	addwf	??i1_send_msg,w,c
  6095  001522  6E01               	movwf	i1___awmod@dividend,c
  6096  001524  6A02               	clrf	i1___awmod@dividend+1,c
  6097  001526  0E00               	movlw	0
  6098  001528  2202               	addwfc	i1___awmod@dividend+1,f,c
  6099  00152A  0E00               	movlw	0
  6100  00152C  6E04               	movwf	i1___awmod@divisor+1,c
  6101  00152E  0E05               	movlw	5
  6102  001530  6E03               	movwf	i1___awmod@divisor,c
  6103  001532  EC53  F00B         	call	i1___awmod	;wreg free
  6104  001536  5001               	movf	?i1___awmod,w,c
  6105  001538  6EDF               	movwf	indf2,c
  6106                           
  6107                           ;messages.c: 59: qmsg->full = 1;
  6108  00153A  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6109  00153E  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6110  001542  0E01               	movlw	1
  6111  001544  6EDF               	movwf	indf2,c
  6112                           
  6113                           ;messages.c: 60: return (1);
  6114  001546  0E01               	movlw	1
  6115  001548  0012               	return	
  6116  00154A                     __end_ofi1_send_msg:
  6117                           	opt stack 0
  6118                           pclatu	equ	0xFFB
  6119                           pclath	equ	0xFFA
  6120                           tblptru	equ	0xFF8
  6121                           tblptrh	equ	0xFF7
  6122                           tblptrl	equ	0xFF6
  6123                           tablat	equ	0xFF5
  6124                           prodh	equ	0xFF4
  6125                           prodl	equ	0xFF3
  6126                           intcon	equ	0xFF2
  6127                           intcon2	equ	0xFF1
  6128                           postinc0	equ	0xFEE
  6129                           fsr0h	equ	0xFEA
  6130                           fsr0l	equ	0xFE9
  6131                           wreg	equ	0xFE8
  6132                           indf1	equ	0xFE7
  6133                           postdec1	equ	0xFE5
  6134                           fsr1h	equ	0xFE2
  6135                           fsr1l	equ	0xFE1
  6136                           bsr	equ	0xFE0
  6137                           indf2	equ	0xFDF
  6138                           postinc2	equ	0xFDE
  6139                           postdec2	equ	0xFDD
  6140                           fsr2h	equ	0xFDA
  6141                           fsr2l	equ	0xFD9
  6142                           status	equ	0xFD8
  6143                           
  6144 ;; *************** function i1_memcpy *****************
  6145 ;; Defined at:
  6146 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  d1              2    0[COMRAM] PTR void 
  6149 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6150 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6151 ;;		 -> main@msgbuffer(11), 
  6152 ;;  s1              2    2[COMRAM] PTR const void 
  6153 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6154 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6155 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6156 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6157 ;;		 -> main@uc(13), 
  6158 ;;  n               2    4[COMRAM] unsigned int 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6161 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6162 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6163 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6164 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6165 ;;		 -> main@uc(13), 
  6166 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6167 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6168 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6169 ;;		 -> main@msgbuffer(11), 
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  2    0[COMRAM] PTR void 
  6172 ;; Registers used:
  6173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6179 ;;      Params:         6       0       0       0       0
  6180 ;;      Locals:         4       0       0       0       0
  6181 ;;      Temps:          0       0       0       0       0
  6182 ;;      Totals:        10       0       0       0       0
  6183 ;;Total ram usage:       10 bytes
  6184 ;; Hardware stack levels used:    1
  6185 ;; Hardware stack levels required when called:    6
  6186 ;; This function calls:
  6187 ;;		Nothing
  6188 ;; This function is called by:
  6189 ;;		i1_send_msg
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text36
  6194  001E9E                     __ptext36:
  6195                           	opt stack 0
  6196  001E9E                     i1_memcpy:
  6197                           	opt stack 16
  6198                           
  6199                           ;incstack = 0
  6200  001E9E  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6201  001EA2  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6202  001EA6  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6203  001EAA  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6204  001EAE  D00E               	goto	i1l3482
  6205  001EB0                     i1l3476:
  6206  001EB0  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6207  001EB4  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6208  001EB8  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6209  001EBC  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6210  001EC0  CFDF FFE7          	movff	indf2,indf1
  6211  001EC4  4A09               	infsnz	i1memcpy@s,f,c
  6212  001EC6  2A0A               	incf	i1memcpy@s+1,f,c
  6213  001EC8  4A07               	infsnz	i1memcpy@d,f,c
  6214  001ECA  2A08               	incf	i1memcpy@d+1,f,c
  6215  001ECC                     i1l3482:
  6216  001ECC  0605               	decf	i1memcpy@n,f,c
  6217  001ECE  A0D8               	btfss	status,0,c
  6218  001ED0  0606               	decf	i1memcpy@n+1,f,c
  6219  001ED2  2805               	incf	i1memcpy@n& (0+255),w,c
  6220  001ED4  B4D8               	btfsc	status,2,c
  6221  001ED6  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6222  001ED8  B4D8               	btfsc	status,2,c
  6223                           
  6224                           ;	Return value of i1_memcpy is never used
  6225  001EDA  0012               	return	
  6226  001EDC  D7E9               	goto	i1l3476
  6227  001EDE                     __end_ofi1_memcpy:
  6228                           	opt stack 0
  6229                           pclatu	equ	0xFFB
  6230                           pclath	equ	0xFFA
  6231                           tblptru	equ	0xFF8
  6232                           tblptrh	equ	0xFF7
  6233                           tblptrl	equ	0xFF6
  6234                           tablat	equ	0xFF5
  6235                           prodh	equ	0xFF4
  6236                           prodl	equ	0xFF3
  6237                           intcon	equ	0xFF2
  6238                           intcon2	equ	0xFF1
  6239                           postinc0	equ	0xFEE
  6240                           fsr0h	equ	0xFEA
  6241                           fsr0l	equ	0xFE9
  6242                           wreg	equ	0xFE8
  6243                           indf1	equ	0xFE7
  6244                           postdec1	equ	0xFE5
  6245                           fsr1h	equ	0xFE2
  6246                           fsr1l	equ	0xFE1
  6247                           bsr	equ	0xFE0
  6248                           indf2	equ	0xFDF
  6249                           postinc2	equ	0xFDE
  6250                           postdec2	equ	0xFDD
  6251                           fsr2h	equ	0xFDA
  6252                           fsr2l	equ	0xFD9
  6253                           status	equ	0xFD8
  6254                           
  6255 ;; *************** function i1___awmod *****************
  6256 ;; Defined at:
  6257 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;  dividend        2    0[COMRAM] int 
  6260 ;;  divisor         2    2[COMRAM] int 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  __awmod         1    6[COMRAM] unsigned char 
  6263 ;;  __awmod         1    5[COMRAM] unsigned char 
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  2    0[COMRAM] int 
  6266 ;; Registers used:
  6267 ;;		wreg, status,2, status,0, prodl
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6273 ;;      Params:         4       0       0       0       0
  6274 ;;      Locals:         2       0       0       0       0
  6275 ;;      Temps:          1       0       0       0       0
  6276 ;;      Totals:         7       0       0       0       0
  6277 ;;Total ram usage:        7 bytes
  6278 ;; Hardware stack levels used:    1
  6279 ;; Hardware stack levels required when called:    6
  6280 ;; This function calls:
  6281 ;;		Nothing
  6282 ;; This function is called by:
  6283 ;;		i1_send_msg
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           	psect	text37
  6288  0016A6                     __ptext37:
  6289                           	opt stack 0
  6290  0016A6                     i1___awmod:
  6291                           	opt stack 16
  6292                           
  6293                           ;incstack = 0
  6294  0016A6  6E05               	movwf	??i1___awmod& (0+255),c
  6295  0016A8  0E00               	movlw	0
  6296  0016AA  6E07               	movwf	i1___awmod@sign,c
  6297  0016AC  5005               	movf	??i1___awmod& (0+255),w,c
  6298  0016AE  5002               	movf	i1___awmod@dividend+1,w,c
  6299  0016B0  0A80               	xorlw	128
  6300  0016B2  6EF3               	movwf	prodl,c
  6301  0016B4  0E80               	movlw	128
  6302  0016B6  5CF3               	subwf	prodl,w,c
  6303  0016B8  0E00               	movlw	0
  6304  0016BA  B4D8               	btfsc	status,2,c
  6305  0016BC  5C01               	subwf	i1___awmod@dividend,w,c
  6306  0016BE  B0D8               	btfsc	status,0,c
  6307  0016C0  D008               	goto	i1l3502
  6308  0016C2  6C01               	negf	i1___awmod@dividend,c
  6309  0016C4  1E02               	comf	i1___awmod@dividend+1,f,c
  6310  0016C6  B0D8               	btfsc	status,0,c
  6311  0016C8  2A02               	incf	i1___awmod@dividend+1,f,c
  6312  0016CA  6E05               	movwf	??i1___awmod& (0+255),c
  6313  0016CC  0E01               	movlw	1
  6314  0016CE  6E07               	movwf	i1___awmod@sign,c
  6315  0016D0  5005               	movf	??i1___awmod& (0+255),w,c
  6316  0016D2                     i1l3502:
  6317  0016D2  5004               	movf	i1___awmod@divisor+1,w,c
  6318  0016D4  0A80               	xorlw	128
  6319  0016D6  6EF3               	movwf	prodl,c
  6320  0016D8  0E80               	movlw	128
  6321  0016DA  5CF3               	subwf	prodl,w,c
  6322  0016DC  0E00               	movlw	0
  6323  0016DE  B4D8               	btfsc	status,2,c
  6324  0016E0  5C03               	subwf	i1___awmod@divisor,w,c
  6325  0016E2  B0D8               	btfsc	status,0,c
  6326  0016E4  D004               	goto	i1l3506
  6327  0016E6  6C03               	negf	i1___awmod@divisor,c
  6328  0016E8  1E04               	comf	i1___awmod@divisor+1,f,c
  6329  0016EA  B0D8               	btfsc	status,0,c
  6330  0016EC  2A04               	incf	i1___awmod@divisor+1,f,c
  6331  0016EE                     i1l3506:
  6332  0016EE  5004               	movf	i1___awmod@divisor+1,w,c
  6333  0016F0  1003               	iorwf	i1___awmod@divisor,w,c
  6334  0016F2  B4D8               	btfsc	status,2,c
  6335  0016F4  D01A               	goto	i1l3522
  6336  0016F6  6E05               	movwf	??i1___awmod& (0+255),c
  6337  0016F8  0E01               	movlw	1
  6338  0016FA  6E06               	movwf	i1___awmod@counter,c
  6339  0016FC  5005               	movf	??i1___awmod& (0+255),w,c
  6340  0016FE  D004               	goto	i1l3512
  6341  001700                     i1l3510:
  6342  001700  90D8               	bcf	status,0,c
  6343  001702  3603               	rlcf	i1___awmod@divisor,f,c
  6344  001704  3604               	rlcf	i1___awmod@divisor+1,f,c
  6345  001706  2A06               	incf	i1___awmod@counter,f,c
  6346  001708                     i1l3512:
  6347  001708  AE04               	btfss	i1___awmod@divisor+1,7,c
  6348  00170A  D7FA               	goto	i1l3510
  6349  00170C                     i1l3514:
  6350  00170C  5003               	movf	i1___awmod@divisor,w,c
  6351  00170E  5C01               	subwf	i1___awmod@dividend,w,c
  6352  001710  5004               	movf	i1___awmod@divisor+1,w,c
  6353  001712  5802               	subwfb	i1___awmod@dividend+1,w,c
  6354  001714  A0D8               	btfss	status,0,c
  6355  001716  D004               	goto	i1l3518
  6356  001718  5003               	movf	i1___awmod@divisor,w,c
  6357  00171A  5E01               	subwf	i1___awmod@dividend,f,c
  6358  00171C  5004               	movf	i1___awmod@divisor+1,w,c
  6359  00171E  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6360  001720                     i1l3518:
  6361  001720  90D8               	bcf	status,0,c
  6362  001722  3204               	rrcf	i1___awmod@divisor+1,f,c
  6363  001724  3203               	rrcf	i1___awmod@divisor,f,c
  6364  001726  2E06               	decfsz	i1___awmod@counter,f,c
  6365  001728  D7F1               	goto	i1l3514
  6366  00172A                     i1l3522:
  6367  00172A  5007               	movf	i1___awmod@sign,w,c
  6368  00172C  B4D8               	btfsc	status,2,c
  6369  00172E  D004               	goto	i1l3526
  6370  001730  6C01               	negf	i1___awmod@dividend,c
  6371  001732  1E02               	comf	i1___awmod@dividend+1,f,c
  6372  001734  B0D8               	btfsc	status,0,c
  6373  001736  2A02               	incf	i1___awmod@dividend+1,f,c
  6374  001738                     i1l3526:
  6375  001738  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6376  00173C  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6377  001740  0012               	return	
  6378  001742                     __end_ofi1___awmod:
  6379                           	opt stack 0
  6380                           pclatu	equ	0xFFB
  6381                           pclath	equ	0xFFA
  6382                           tblptru	equ	0xFF8
  6383                           tblptrh	equ	0xFF7
  6384                           tblptrl	equ	0xFF6
  6385                           tablat	equ	0xFF5
  6386                           prodh	equ	0xFF4
  6387                           prodl	equ	0xFF3
  6388                           intcon	equ	0xFF2
  6389                           intcon2	equ	0xFF1
  6390                           postinc0	equ	0xFEE
  6391                           fsr0h	equ	0xFEA
  6392                           fsr0l	equ	0xFE9
  6393                           wreg	equ	0xFE8
  6394                           indf1	equ	0xFE7
  6395                           postdec1	equ	0xFE5
  6396                           fsr1h	equ	0xFE2
  6397                           fsr1l	equ	0xFE1
  6398                           bsr	equ	0xFE0
  6399                           indf2	equ	0xFDF
  6400                           postinc2	equ	0xFDE
  6401                           postdec2	equ	0xFDD
  6402                           fsr2h	equ	0xFDA
  6403                           fsr2l	equ	0xFD9
  6404                           status	equ	0xFD8
  6405                           
  6406 ;; *************** function _ReadUSART *****************
  6407 ;; Defined at:
  6408 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;		None
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;  data            1    0[COMRAM] unsigned char 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      unsigned char 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2, status,0
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6422 ;;      Params:         0       0       0       0       0
  6423 ;;      Locals:         1       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0
  6425 ;;      Totals:         1       0       0       0       0
  6426 ;;Total ram usage:        1 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:    6
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_uart_recv_int_handler
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text38
  6437  002120                     __ptext38:
  6438                           	opt stack 0
  6439  002120                     _ReadUSART:
  6440                           	opt stack 18
  6441                           
  6442                           ;incstack = 0
  6443  002120  0EF2               	movlw	242
  6444  002122  1651               	andwf	_USART_Status,f,c
  6445  002124  ACAB               	btfss	4011,6,c	;volatile
  6446  002126  D003               	goto	i1l601
  6447  002128  9051               	bcf	_USART_Status,0,c
  6448  00212A  B0AB               	btfsc	4011,0,c	;volatile
  6449  00212C  8051               	bsf	_USART_Status,0,c
  6450  00212E                     i1l601:
  6451  00212E  B4AB               	btfsc	4011,2,c	;volatile
  6452  002130  8451               	bsf	_USART_Status,2,c
  6453  002132  B2AB               	btfsc	4011,1,c	;volatile
  6454  002134  8651               	bsf	_USART_Status,3,c
  6455  002136  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6456  00213A  5001               	movf	ReadUSART@data,w,c
  6457  00213C  0012               	return	
  6458  00213E                     __end_of_ReadUSART:
  6459                           	opt stack 0
  6460                           pclatu	equ	0xFFB
  6461                           pclath	equ	0xFFA
  6462                           tblptru	equ	0xFF8
  6463                           tblptrh	equ	0xFF7
  6464                           tblptrl	equ	0xFF6
  6465                           tablat	equ	0xFF5
  6466                           prodh	equ	0xFF4
  6467                           prodl	equ	0xFF3
  6468                           intcon	equ	0xFF2
  6469                           intcon2	equ	0xFF1
  6470                           postinc0	equ	0xFEE
  6471                           fsr0h	equ	0xFEA
  6472                           fsr0l	equ	0xFE9
  6473                           wreg	equ	0xFE8
  6474                           indf1	equ	0xFE7
  6475                           postdec1	equ	0xFE5
  6476                           fsr1h	equ	0xFE2
  6477                           fsr1l	equ	0xFE1
  6478                           bsr	equ	0xFE0
  6479                           indf2	equ	0xFDF
  6480                           postinc2	equ	0xFDE
  6481                           postdec2	equ	0xFDD
  6482                           fsr2h	equ	0xFDA
  6483                           fsr2l	equ	0xFD9
  6484                           status	equ	0xFD8
  6485                           
  6486 ;; *************** function _timer1_int_handler *****************
  6487 ;; Defined at:
  6488 ;;		line 50 in file "../src/user_interrupts.c"
  6489 ;; Parameters:    Size  Location     Type
  6490 ;;		None
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;		None
  6493 ;; Return value:  Size  Location     Type
  6494 ;;		None               void
  6495 ;; Registers used:
  6496 ;;		wreg, status,2, cstack
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6502 ;;      Params:         0       0       0       0       0
  6503 ;;      Locals:         0       0       0       0       0
  6504 ;;      Temps:          0       0       0       0       0
  6505 ;;      Totals:         0       0       0       0       0
  6506 ;;Total ram usage:        0 bytes
  6507 ;; Hardware stack levels used:    1
  6508 ;; Hardware stack levels required when called:    7
  6509 ;; This function calls:
  6510 ;;		_WriteTimer1
  6511 ;; This function is called by:
  6512 ;;		_InterruptHandlerLow
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           	psect	text39
  6517  0021AE                     __ptext39:
  6518                           	opt stack 0
  6519  0021AE                     _timer1_int_handler:
  6520                           	opt stack 18
  6521                           
  6522                           ;user_interrupts.c: 62: WriteTimer1(0);
  6523                           
  6524                           ;incstack = 0
  6525  0021AE  0E00               	movlw	0
  6526  0021B0  6E02               	movwf	WriteTimer1@timer1+1,c
  6527  0021B2  0E00               	movlw	0
  6528  0021B4  6E01               	movwf	WriteTimer1@timer1,c
  6529  0021B6  ECC5  F010         	call	_WriteTimer1	;wreg free
  6530  0021BA  0012               	return	
  6531  0021BC                     __end_of_timer1_int_handler:
  6532                           	opt stack 0
  6533                           pclatu	equ	0xFFB
  6534                           pclath	equ	0xFFA
  6535                           tblptru	equ	0xFF8
  6536                           tblptrh	equ	0xFF7
  6537                           tblptrl	equ	0xFF6
  6538                           tablat	equ	0xFF5
  6539                           prodh	equ	0xFF4
  6540                           prodl	equ	0xFF3
  6541                           intcon	equ	0xFF2
  6542                           intcon2	equ	0xFF1
  6543                           postinc0	equ	0xFEE
  6544                           fsr0h	equ	0xFEA
  6545                           fsr0l	equ	0xFE9
  6546                           wreg	equ	0xFE8
  6547                           indf1	equ	0xFE7
  6548                           postdec1	equ	0xFE5
  6549                           fsr1h	equ	0xFE2
  6550                           fsr1l	equ	0xFE1
  6551                           bsr	equ	0xFE0
  6552                           indf2	equ	0xFDF
  6553                           postinc2	equ	0xFDE
  6554                           postdec2	equ	0xFDD
  6555                           fsr2h	equ	0xFDA
  6556                           fsr2l	equ	0xFD9
  6557                           status	equ	0xFD8
  6558                           
  6559 ;; *************** function _WriteTimer1 *****************
  6560 ;; Defined at:
  6561 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  timer1          2    0[COMRAM] unsigned int 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  timer           2    2[COMRAM] struct Timers
  6566 ;; Return value:  Size  Location     Type
  6567 ;;		None               void
  6568 ;; Registers used:
  6569 ;;		None
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6575 ;;      Params:         2       0       0       0       0
  6576 ;;      Locals:         2       0       0       0       0
  6577 ;;      Temps:          0       0       0       0       0
  6578 ;;      Totals:         4       0       0       0       0
  6579 ;;Total ram usage:        4 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:    6
  6582 ;; This function calls:
  6583 ;;		Nothing
  6584 ;; This function is called by:
  6585 ;;		_timer1_int_handler
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           	psect	text40
  6590  00218A                     __ptext40:
  6591                           	opt stack 0
  6592  00218A                     _WriteTimer1:
  6593                           	opt stack 18
  6594                           
  6595                           ;incstack = 0
  6596  00218A  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6597  00218E  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6598  002192  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6599  002196  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6600  00219A  0012               	return	
  6601  00219C                     __end_of_WriteTimer1:
  6602                           	opt stack 0
  6603                           pclatu	equ	0xFFB
  6604                           pclath	equ	0xFFA
  6605                           tblptru	equ	0xFF8
  6606                           tblptrh	equ	0xFF7
  6607                           tblptrl	equ	0xFF6
  6608                           tablat	equ	0xFF5
  6609                           prodh	equ	0xFF4
  6610                           prodl	equ	0xFF3
  6611                           intcon	equ	0xFF2
  6612                           intcon2	equ	0xFF1
  6613                           postinc0	equ	0xFEE
  6614                           fsr0h	equ	0xFEA
  6615                           fsr0l	equ	0xFE9
  6616                           wreg	equ	0xFE8
  6617                           indf1	equ	0xFE7
  6618                           postdec1	equ	0xFE5
  6619                           fsr1h	equ	0xFE2
  6620                           fsr1l	equ	0xFE1
  6621                           bsr	equ	0xFE0
  6622                           indf2	equ	0xFDF
  6623                           postinc2	equ	0xFDE
  6624                           postdec2	equ	0xFDD
  6625                           fsr2h	equ	0xFDA
  6626                           fsr2l	equ	0xFD9
  6627                           status	equ	0xFD8
  6628                           
  6629 ;; *************** function _adc_int_handler *****************
  6630 ;; Defined at:
  6631 ;;		line 65 in file "../src/user_interrupts.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;		None
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;		None               void
  6638 ;; Registers used:
  6639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6645 ;;      Params:         0       0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0
  6648 ;;      Totals:         0       0       0       0       0
  6649 ;;Total ram usage:        0 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:    6
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_InterruptHandlerLow
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text41
  6660  0020C0                     __ptext41:
  6661                           	opt stack 0
  6662  0020C0                     _adc_int_handler:
  6663                           	opt stack 19
  6664                           
  6665                           ;user_interrupts.c: 67: if(adcbuffer[0] < 27)
  6666                           
  6667                           ;incstack = 0
  6668  0020C0  0E1B               	movlw	27
  6669  0020C2  5C30               	subwf	_adcbuffer,w,c
  6670  0020C4  B0D8               	btfsc	status,0,c
  6671  0020C6  D002               	goto	i1l1366
  6672                           
  6673                           ;user_interrupts.c: 68: adcbuffer[0] = adcbuffer[0] + 1;
  6674  0020C8  2830               	incf	_adcbuffer,w,c
  6675  0020CA  6E30               	movwf	_adcbuffer,c
  6676  0020CC                     i1l1366:
  6677                           
  6678                           ;user_interrupts.c: 75: adcbuffer[adcbuffer[0]] = ADRESH;
  6679  0020CC  5030               	movf	_adcbuffer,w,c
  6680  0020CE  0D01               	mullw	1
  6681  0020D0  0E30               	movlw	low _adcbuffer
  6682  0020D2  24F3               	addwf	prodl,w,c
  6683  0020D4  6ED9               	movwf	fsr2l,c
  6684  0020D6  0E00               	movlw	high _adcbuffer
  6685  0020D8  20F4               	addwfc	prodh,w,c
  6686  0020DA  6EDA               	movwf	fsr2h,c
  6687  0020DC  CFC4 FFDF          	movff	4036,indf2	;volatile
  6688  0020E0  0012               	return	
  6689  0020E2                     __end_of_adc_int_handler:
  6690                           	opt stack 0
  6691                           pclatu	equ	0xFFB
  6692                           pclath	equ	0xFFA
  6693                           tblptru	equ	0xFF8
  6694                           tblptrh	equ	0xFF7
  6695                           tblptrl	equ	0xFF6
  6696                           tablat	equ	0xFF5
  6697                           prodh	equ	0xFF4
  6698                           prodl	equ	0xFF3
  6699                           intcon	equ	0xFF2
  6700                           intcon2	equ	0xFF1
  6701                           postinc0	equ	0xFEE
  6702                           fsr0h	equ	0xFEA
  6703                           fsr0l	equ	0xFE9
  6704                           wreg	equ	0xFE8
  6705                           indf1	equ	0xFE7
  6706                           postdec1	equ	0xFE5
  6707                           fsr1h	equ	0xFE2
  6708                           fsr1l	equ	0xFE1
  6709                           bsr	equ	0xFE0
  6710                           indf2	equ	0xFDF
  6711                           postinc2	equ	0xFDE
  6712                           postdec2	equ	0xFDD
  6713                           fsr2h	equ	0xFDA
  6714                           fsr2l	equ	0xFD9
  6715                           status	equ	0xFD8
  6716                           
  6717 ;; *************** function _InterruptHandlerHigh *****************
  6718 ;; Defined at:
  6719 ;;		line 84 in file "../src/interrupts.c"
  6720 ;; Parameters:    Size  Location     Type
  6721 ;;		None
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;		None
  6724 ;; Return value:  Size  Location     Type
  6725 ;;		None               void
  6726 ;; Registers used:
  6727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6733 ;;      Params:         0       0       0       0       0
  6734 ;;      Locals:         0       0       0       0       0
  6735 ;;      Temps:          0      14       0       0       0
  6736 ;;      Totals:         0      14       0       0       0
  6737 ;;Total ram usage:       14 bytes
  6738 ;; Hardware stack levels used:    1
  6739 ;; Hardware stack levels required when called:    5
  6740 ;; This function calls:
  6741 ;;		_SleepIfOkay
  6742 ;;		_i2c_int_handler
  6743 ;;		_timer0_int_handler
  6744 ;; This function is called by:
  6745 ;;		Interrupt level 2
  6746 ;; This function uses a non-reentrant model
  6747 ;;
  6748                           
  6749                           	psect	intcode
  6750  000008                     __pintcode:
  6751                           	opt stack 0
  6752  000008                     _InterruptHandlerHigh:
  6753                           	opt stack 16
  6754                           
  6755                           ;incstack = 0
  6756  000008  CFFA F0B3          	movff	pclath,??_InterruptHandlerHigh
  6757  00000C  CFFB F0B4          	movff	pclatu,??_InterruptHandlerHigh+1
  6758  000010  EF2F  F00C         	goto	int_func
  6759                           pclatu	equ	0xFFB
  6760                           pclath	equ	0xFFA
  6761                           tblptru	equ	0xFF8
  6762                           tblptrh	equ	0xFF7
  6763                           tblptrl	equ	0xFF6
  6764                           tablat	equ	0xFF5
  6765                           prodh	equ	0xFF4
  6766                           prodl	equ	0xFF3
  6767                           intcon	equ	0xFF2
  6768                           intcon2	equ	0xFF1
  6769                           postinc0	equ	0xFEE
  6770                           fsr0h	equ	0xFEA
  6771                           fsr0l	equ	0xFE9
  6772                           wreg	equ	0xFE8
  6773                           indf1	equ	0xFE7
  6774                           postdec1	equ	0xFE5
  6775                           fsr1h	equ	0xFE2
  6776                           fsr1l	equ	0xFE1
  6777                           bsr	equ	0xFE0
  6778                           indf2	equ	0xFDF
  6779                           postinc2	equ	0xFDE
  6780                           postdec2	equ	0xFDD
  6781                           fsr2h	equ	0xFDA
  6782                           fsr2l	equ	0xFD9
  6783                           status	equ	0xFD8
  6784                           
  6785                           	psect	intcode_body
  6786  00185E                     __pintcode_body:
  6787                           	opt stack 16
  6788  00185E                     int_func:
  6789                           	opt stack 16
  6790  00185E  CFE9 F0B5          	movff	fsr0l,??_InterruptHandlerHigh+2
  6791  001862  CFEA F0B6          	movff	fsr0h,??_InterruptHandlerHigh+3
  6792  001866  CFE1 F0B7          	movff	fsr1l,??_InterruptHandlerHigh+4
  6793  00186A  CFE2 F0B8          	movff	fsr1h,??_InterruptHandlerHigh+5
  6794  00186E  CFD9 F0B9          	movff	fsr2l,??_InterruptHandlerHigh+6
  6795  001872  CFDA F0BA          	movff	fsr2h,??_InterruptHandlerHigh+7
  6796  001876  CFF3 F0BB          	movff	prodl,??_InterruptHandlerHigh+8
  6797  00187A  CFF4 F0BC          	movff	prodh,??_InterruptHandlerHigh+9
  6798  00187E  CFF6 F0BD          	movff	tblptrl,??_InterruptHandlerHigh+10
  6799  001882  CFF7 F0BE          	movff	tblptrh,??_InterruptHandlerHigh+11
  6800  001886  CFF8 F0BF          	movff	tblptru,??_InterruptHandlerHigh+12
  6801  00188A  CFF5 F0C0          	movff	tablat,??_InterruptHandlerHigh+13
  6802                           
  6803                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  6804  00188E  A69E               	btfss	3998,3,c	;volatile
  6805  001890  D003               	goto	i2l3696
  6806                           
  6807                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  6808  001892  969E               	bcf	3998,3,c	;volatile
  6809                           
  6810                           ;interrupts.c: 94: i2c_int_handler();
  6811  001894  ECEE  F010         	call	_i2c_int_handler	;wreg free
  6812  001898                     i2l3696:
  6813                           
  6814                           ;interrupts.c: 96: }
  6815                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  6816  001898  A4F2               	btfss	intcon,2,c	;volatile
  6817  00189A  D005               	goto	i2l3704
  6818                           
  6819                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  6820  00189C  94F2               	bcf	intcon,2,c	;volatile
  6821                           
  6822                           ;interrupts.c: 103: PORTAbits.AN0 = 1;
  6823  00189E  8080               	bsf	3968,0,c	;volatile
  6824                           
  6825                           ;interrupts.c: 104: timer0_int_handler();
  6826  0018A0  ECFC  F00F         	call	_timer0_int_handler	;wreg free
  6827                           
  6828                           ;interrupts.c: 105: PORTAbits.AN0 = 0;
  6829  0018A4  9080               	bcf	3968,0,c	;volatile
  6830  0018A6                     i2l3704:
  6831                           
  6832                           ;interrupts.c: 106: }
  6833                           ;interrupts.c: 115: SleepIfOkay();
  6834  0018A6  EC9E  F00E         	call	_SleepIfOkay	;wreg free
  6835  0018AA  C0C0  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6836  0018AE  C0BF  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6837  0018B2  C0BE  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6838  0018B6  C0BD  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6839  0018BA  C0BC  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6840  0018BE  C0BB  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6841  0018C2  C0BA  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6842  0018C6  C0B9  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6843  0018CA  C0B8  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6844  0018CE  C0B7  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6845  0018D2  C0B6  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6846  0018D6  C0B5  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6847  0018DA  C0B4  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6848  0018DE  C0B3  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6849  0018E2  0011               	retfie		f
  6850  0018E4                     __end_of_InterruptHandlerHigh:
  6851                           	opt stack 0
  6852                           pclatu	equ	0xFFB
  6853                           pclath	equ	0xFFA
  6854                           tblptru	equ	0xFF8
  6855                           tblptrh	equ	0xFF7
  6856                           tblptrl	equ	0xFF6
  6857                           tablat	equ	0xFF5
  6858                           prodh	equ	0xFF4
  6859                           prodl	equ	0xFF3
  6860                           intcon	equ	0xFF2
  6861                           intcon2	equ	0xFF1
  6862                           postinc0	equ	0xFEE
  6863                           fsr0h	equ	0xFEA
  6864                           fsr0l	equ	0xFE9
  6865                           wreg	equ	0xFE8
  6866                           indf1	equ	0xFE7
  6867                           postdec1	equ	0xFE5
  6868                           fsr1h	equ	0xFE2
  6869                           fsr1l	equ	0xFE1
  6870                           bsr	equ	0xFE0
  6871                           indf2	equ	0xFDF
  6872                           postinc2	equ	0xFDE
  6873                           postdec2	equ	0xFDD
  6874                           fsr2h	equ	0xFDA
  6875                           fsr2l	equ	0xFD9
  6876                           status	equ	0xFD8
  6877                           
  6878 ;; *************** function _timer0_int_handler *****************
  6879 ;; Defined at:
  6880 ;;		line 16 in file "../src/user_interrupts.c"
  6881 ;; Parameters:    Size  Location     Type
  6882 ;;		None
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;  motorcomm       2    2[BANK0 ] unsigned char [2]
  6885 ;; Return value:  Size  Location     Type
  6886 ;;		None               void
  6887 ;; Registers used:
  6888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6894 ;;      Params:         0       0       0       0       0
  6895 ;;      Locals:         0       2       0       0       0
  6896 ;;      Temps:          0       0       0       0       0
  6897 ;;      Totals:         0       2       0       0       0
  6898 ;;Total ram usage:        2 bytes
  6899 ;; Hardware stack levels used:    1
  6900 ;; Hardware stack levels required when called:    1
  6901 ;; This function calls:
  6902 ;;		_WriteTimer0
  6903 ;;		i2_uart_trans
  6904 ;; This function is called by:
  6905 ;;		_InterruptHandlerHigh
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909                           	psect	text43
  6910  001FF8                     __ptext43:
  6911                           	opt stack 0
  6912  001FF8                     _timer0_int_handler:
  6913                           	opt stack 19
  6914                           
  6915                           ;user_interrupts.c: 17: WriteTimer0(0);
  6916                           
  6917                           ;incstack = 0
  6918  001FF8  0E00               	movlw	0
  6919  001FFA  6E2E               	movwf	WriteTimer0@timer0+1,c
  6920  001FFC  0E00               	movlw	0
  6921  001FFE  6E2D               	movwf	WriteTimer0@timer0,c
  6922  002000  ECCE  F010         	call	_WriteTimer0	;wreg free
  6923                           
  6924                           ;user_interrupts.c: 33: UART_timeout++;
  6925  002004  4A4C               	infsnz	_UART_timeout,f,c
  6926  002006  2A4D               	incf	_UART_timeout+1,f,c
  6927                           
  6928                           ;user_interrupts.c: 36: unsigned char motorcomm[2] = {0x00, 0x00};
  6929  002008  C04E  F082         	movff	timer0_int_handler@F5107,timer0_int_handler@motorcomm
  6930  00200C  C04F  F083         	movff	timer0_int_handler@F5107+1,timer0_int_handler@motorcomm+1
  6931                           
  6932                           ;user_interrupts.c: 37: uart_trans(2, motorcomm);
  6933  002010  0100               	movlb	0	; () banked
  6934  002012  0E00               	movlw	high timer0_int_handler@motorcomm
  6935  002014  6E2E               	movwf	i2uart_trans@data+1,c
  6936  002016  0100               	movlb	0	; () banked
  6937  002018  0E82               	movlw	low timer0_int_handler@motorcomm
  6938  00201A  6E2D               	movwf	i2uart_trans@data,c
  6939  00201C  0E02               	movlw	2
  6940  00201E  ECFF  F00A         	call	i2_uart_trans
  6941  002022  0012               	return	
  6942  002024                     __end_of_timer0_int_handler:
  6943                           	opt stack 0
  6944                           pclatu	equ	0xFFB
  6945                           pclath	equ	0xFFA
  6946                           tblptru	equ	0xFF8
  6947                           tblptrh	equ	0xFF7
  6948                           tblptrl	equ	0xFF6
  6949                           tablat	equ	0xFF5
  6950                           prodh	equ	0xFF4
  6951                           prodl	equ	0xFF3
  6952                           intcon	equ	0xFF2
  6953                           intcon2	equ	0xFF1
  6954                           postinc0	equ	0xFEE
  6955                           fsr0h	equ	0xFEA
  6956                           fsr0l	equ	0xFE9
  6957                           wreg	equ	0xFE8
  6958                           indf1	equ	0xFE7
  6959                           postdec1	equ	0xFE5
  6960                           fsr1h	equ	0xFE2
  6961                           fsr1l	equ	0xFE1
  6962                           bsr	equ	0xFE0
  6963                           indf2	equ	0xFDF
  6964                           postinc2	equ	0xFDE
  6965                           postdec2	equ	0xFDD
  6966                           fsr2h	equ	0xFDA
  6967                           fsr2l	equ	0xFD9
  6968                           status	equ	0xFD8
  6969                           
  6970 ;; *************** function _WriteTimer0 *****************
  6971 ;; Defined at:
  6972 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  timer0          2   44[COMRAM] unsigned int 
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;  timer           2    0[BANK0 ] struct Timers
  6977 ;; Return value:  Size  Location     Type
  6978 ;;		None               void
  6979 ;; Registers used:
  6980 ;;		None
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6986 ;;      Params:         2       0       0       0       0
  6987 ;;      Locals:         0       2       0       0       0
  6988 ;;      Temps:          0       0       0       0       0
  6989 ;;      Totals:         2       2       0       0       0
  6990 ;;Total ram usage:        4 bytes
  6991 ;; Hardware stack levels used:    1
  6992 ;; This function calls:
  6993 ;;		Nothing
  6994 ;; This function is called by:
  6995 ;;		_timer0_int_handler
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           	psect	text44
  7000  00219C                     __ptext44:
  7001                           	opt stack 0
  7002  00219C                     _WriteTimer0:
  7003                           	opt stack 19
  7004                           
  7005                           ;incstack = 0
  7006  00219C  C02D  F080         	movff	WriteTimer0@timer0,WriteTimer0@timer
  7007  0021A0  C02E  F081         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  7008  0021A4  C081  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  7009  0021A8  C080  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  7010  0021AC  0012               	return	
  7011  0021AE                     __end_of_WriteTimer0:
  7012                           	opt stack 0
  7013                           pclatu	equ	0xFFB
  7014                           pclath	equ	0xFFA
  7015                           tblptru	equ	0xFF8
  7016                           tblptrh	equ	0xFF7
  7017                           tblptrl	equ	0xFF6
  7018                           tablat	equ	0xFF5
  7019                           prodh	equ	0xFF4
  7020                           prodl	equ	0xFF3
  7021                           intcon	equ	0xFF2
  7022                           intcon2	equ	0xFF1
  7023                           postinc0	equ	0xFEE
  7024                           fsr0h	equ	0xFEA
  7025                           fsr0l	equ	0xFE9
  7026                           wreg	equ	0xFE8
  7027                           indf1	equ	0xFE7
  7028                           postdec1	equ	0xFE5
  7029                           fsr1h	equ	0xFE2
  7030                           fsr1l	equ	0xFE1
  7031                           bsr	equ	0xFE0
  7032                           indf2	equ	0xFDF
  7033                           postinc2	equ	0xFDE
  7034                           postdec2	equ	0xFDD
  7035                           fsr2h	equ	0xFDA
  7036                           fsr2l	equ	0xFD9
  7037                           status	equ	0xFD8
  7038                           
  7039 ;; *************** function _i2c_int_handler *****************
  7040 ;; Defined at:
  7041 ;;		line 139 in file "../src/my_i2c.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;		None
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;		None
  7046 ;; Return value:  Size  Location     Type
  7047 ;;		None               void
  7048 ;; Registers used:
  7049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7055 ;;      Params:         0       0       0       0       0
  7056 ;;      Locals:         0       0       0       0       0
  7057 ;;      Temps:          0       0       0       0       0
  7058 ;;      Totals:         0       0       0       0       0
  7059 ;;Total ram usage:        0 bytes
  7060 ;; Hardware stack levels used:    1
  7061 ;; Hardware stack levels required when called:    4
  7062 ;; This function calls:
  7063 ;;		_i2c_slave_int_handler
  7064 ;; This function is called by:
  7065 ;;		_InterruptHandlerHigh
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           	psect	text45
  7070  0021DC                     __ptext45:
  7071                           	opt stack 0
  7072  0021DC                     _i2c_int_handler:
  7073                           	opt stack 16
  7074                           
  7075                           ;my_i2c.c: 143: i2c_slave_int_handler();
  7076                           
  7077                           ;incstack = 0
  7078  0021DC  EC65  F000         	call	_i2c_slave_int_handler	;wreg free
  7079  0021E0  0012               	return	
  7080  0021E2                     __end_of_i2c_int_handler:
  7081                           	opt stack 0
  7082                           pclatu	equ	0xFFB
  7083                           pclath	equ	0xFFA
  7084                           tblptru	equ	0xFF8
  7085                           tblptrh	equ	0xFF7
  7086                           tblptrl	equ	0xFF6
  7087                           tablat	equ	0xFF5
  7088                           prodh	equ	0xFF4
  7089                           prodl	equ	0xFF3
  7090                           intcon	equ	0xFF2
  7091                           intcon2	equ	0xFF1
  7092                           postinc0	equ	0xFEE
  7093                           fsr0h	equ	0xFEA
  7094                           fsr0l	equ	0xFE9
  7095                           wreg	equ	0xFE8
  7096                           indf1	equ	0xFE7
  7097                           postdec1	equ	0xFE5
  7098                           fsr1h	equ	0xFE2
  7099                           fsr1l	equ	0xFE1
  7100                           bsr	equ	0xFE0
  7101                           indf2	equ	0xFDF
  7102                           postinc2	equ	0xFDE
  7103                           postdec2	equ	0xFDD
  7104                           fsr2h	equ	0xFDA
  7105                           fsr2l	equ	0xFD9
  7106                           status	equ	0xFD8
  7107                           
  7108 ;; *************** function _i2c_slave_int_handler *****************
  7109 ;; Defined at:
  7110 ;;		line 248 in file "../src/my_i2c.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;		None
  7113 ;; Auto vars:     Size  Location     Type
  7114 ;;  motormsg        5   33[BANK0 ] unsigned char [5]
  7115 ;;  motorcomm       2   38[BANK0 ] unsigned char [2]
  7116 ;;  sensormsg       5   28[BANK0 ] unsigned char [5]
  7117 ;;  length          2   47[BANK0 ] int 
  7118 ;;  error_buf       3   40[BANK0 ] unsigned char [3]
  7119 ;;  data_read       1   50[BANK0 ] unsigned char 
  7120 ;;  msg_ready       1   49[BANK0 ] unsigned char 
  7121 ;;  msg_to_send     1   46[BANK0 ] unsigned char 
  7122 ;;  i2c_data        1   45[BANK0 ] unsigned char 
  7123 ;;  overrun_erro    1   44[BANK0 ] unsigned char 
  7124 ;;  data_written    1   43[BANK0 ] unsigned char 
  7125 ;; Return value:  Size  Location     Type
  7126 ;;		None               void
  7127 ;; Registers used:
  7128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7134 ;;      Params:         0       0       0       0       0
  7135 ;;      Locals:         0      23       0       0       0
  7136 ;;      Temps:          0       2       0       0       0
  7137 ;;      Totals:         0      25       0       0       0
  7138 ;;Total ram usage:       25 bytes
  7139 ;; Hardware stack levels used:    1
  7140 ;; Hardware stack levels required when called:    3
  7141 ;; This function calls:
  7142 ;;		_ToMainHigh_sendmsg
  7143 ;;		_handle_start
  7144 ;;		_start_i2c_slave_reply
  7145 ;;		i2_uart_trans
  7146 ;; This function is called by:
  7147 ;;		_i2c_int_handler
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           	psect	text46
  7152  0000CA                     __ptext46:
  7153                           	opt stack 0
  7154  0000CA                     _i2c_slave_int_handler:
  7155                           	opt stack 16
  7156                           
  7157                           ;my_i2c.c: 249: unsigned char i2c_data;
  7158                           ;my_i2c.c: 250: unsigned char data_read = 0;
  7159                           
  7160                           ;incstack = 0
  7161  0000CA  0100               	movlb	0	; () banked
  7162  0000CC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7163  0000CE  0E00               	movlw	0
  7164  0000D0  0100               	movlb	0	; () banked
  7165  0000D2  0100               	movlb	0	; () banked
  7166  0000D4  6FB2               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7167  0000D6  0100               	movlb	0	; () banked
  7168  0000D8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7169                           
  7170                           ;my_i2c.c: 251: unsigned char data_written = 0;
  7171  0000DA  0100               	movlb	0	; () banked
  7172  0000DC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7173  0000DE  0E00               	movlw	0
  7174  0000E0  0100               	movlb	0	; () banked
  7175  0000E2  0100               	movlb	0	; () banked
  7176  0000E4  6FAB               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7177  0000E6  0100               	movlb	0	; () banked
  7178  0000E8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7179                           
  7180                           ;my_i2c.c: 252: unsigned char msg_ready = 0;
  7181  0000EA  0100               	movlb	0	; () banked
  7182  0000EC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7183  0000EE  0E00               	movlw	0
  7184  0000F0  0100               	movlb	0	; () banked
  7185  0000F2  0100               	movlb	0	; () banked
  7186  0000F4  6FB1               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7187  0000F6  0100               	movlb	0	; () banked
  7188  0000F8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7189                           
  7190                           ;my_i2c.c: 253: unsigned char msg_to_send = 0;
  7191  0000FA  0100               	movlb	0	; () banked
  7192  0000FC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7193  0000FE  0E00               	movlw	0
  7194  000100  0100               	movlb	0	; () banked
  7195  000102  0100               	movlb	0	; () banked
  7196  000104  6FAE               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7197  000106  0100               	movlb	0	; () banked
  7198  000108  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7199                           
  7200                           ;my_i2c.c: 254: unsigned char overrun_error = 0;
  7201  00010A  0100               	movlb	0	; () banked
  7202  00010C  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7203  00010E  0E00               	movlw	0
  7204  000110  0100               	movlb	0	; () banked
  7205  000112  0100               	movlb	0	; () banked
  7206  000114  6FAC               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7207  000116  0100               	movlb	0	; () banked
  7208  000118  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;my_i2c.c: 255: unsigned char error_buf[3];
  7212                           ;my_i2c.c: 258: if (SSPCON1bits.SSPOV == 1) {
  7213  00011A  ACC6               	btfss	4038,6,c	;volatile
  7214  00011C  D029               	goto	i2l4178
  7215                           
  7216                           ; BSR set to: 0
  7217                           ;my_i2c.c: 259: SSPCON1bits.SSPOV = 0;
  7218  00011E  9CC6               	bcf	4038,6,c	;volatile
  7219                           
  7220                           ; BSR set to: 0
  7221                           ;my_i2c.c: 263: ic_ptr->status = 0x5;
  7222  000120  0100               	movlb	0	; () banked
  7223  000122  EE20 F00D          	lfsr	2,13
  7224  000126  0100               	movlb	0	; () banked
  7225  000128  51CD               	movf	_ic_ptr& (0+255),w,b
  7226  00012A  26D9               	addwf	fsr2l,f,c
  7227  00012C  0100               	movlb	0	; () banked
  7228  00012E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7229  000130  22DA               	addwfc	fsr2h,f,c
  7230  000132  0E05               	movlw	5
  7231  000134  6EDF               	movwf	indf2,c
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;my_i2c.c: 264: overrun_error = 1;
  7235  000136  0100               	movlb	0	; () banked
  7236  000138  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7237  00013A  0E01               	movlw	1
  7238  00013C  0100               	movlb	0	; () banked
  7239  00013E  0100               	movlb	0	; () banked
  7240  000140  6FAC               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7241  000142  0100               	movlb	0	; () banked
  7242  000144  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;my_i2c.c: 265: ic_ptr->error_count++;
  7246  000146  0100               	movlb	0	; () banked
  7247  000148  EE20 F00F          	lfsr	2,15
  7248  00014C  0100               	movlb	0	; () banked
  7249  00014E  51CD               	movf	_ic_ptr& (0+255),w,b
  7250  000150  26D9               	addwf	fsr2l,f,c
  7251  000152  0100               	movlb	0	; () banked
  7252  000154  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7253  000156  22DA               	addwfc	fsr2h,f,c
  7254  000158  2ADF               	incf	indf2,f,c
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;my_i2c.c: 266: ic_ptr->error_code = 0x4;
  7258  00015A  0100               	movlb	0	; () banked
  7259  00015C  EE20 F00E          	lfsr	2,14
  7260  000160  0100               	movlb	0	; () banked
  7261  000162  51CD               	movf	_ic_ptr& (0+255),w,b
  7262  000164  26D9               	addwf	fsr2l,f,c
  7263  000166  0100               	movlb	0	; () banked
  7264  000168  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7265  00016A  22DA               	addwfc	fsr2h,f,c
  7266  00016C  0E04               	movlw	4
  7267  00016E  6EDF               	movwf	indf2,c
  7268  000170                     i2l4178:
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;my_i2c.c: 267: }
  7272                           ;my_i2c.c: 269: if (SSPSTATbits.BF == 1) {
  7273  000170  A0C7               	btfss	4039,0,c	;volatile
  7274  000172  D00A               	goto	i2l4184
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;my_i2c.c: 270: i2c_data = SSPBUF;
  7278  000174  CFC9 F0AD          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  7279                           
  7280                           ; BSR set to: 0
  7281                           ;my_i2c.c: 271: data_read = 1;
  7282  000178  0100               	movlb	0	; () banked
  7283  00017A  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7284  00017C  0E01               	movlw	1
  7285  00017E  0100               	movlb	0	; () banked
  7286  000180  0100               	movlb	0	; () banked
  7287  000182  6FB2               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7288  000184  0100               	movlb	0	; () banked
  7289  000186  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7290  000188                     i2l4184:
  7291                           
  7292                           ; BSR set to: 0
  7293                           ;my_i2c.c: 272: }
  7294                           ;my_i2c.c: 274: if (!overrun_error) {
  7295  000188  0100               	movlb	0	; () banked
  7296  00018A  0100               	movlb	0	; () banked
  7297  00018C  67AC               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  7298  00018E  D1CE               	goto	i2l340
  7299  000190  D1B7               	goto	i2l4272
  7300  000192                     i2l342:
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;my_i2c.c: 277: {
  7304                           ;my_i2c.c: 279: if (SSPSTATbits.S == 1) {
  7305  000192  A6C7               	btfss	4039,3,c	;volatile
  7306  000194  D1CB               	goto	i2l340
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;my_i2c.c: 280: handle_start(data_read);
  7310  000196  0100               	movlb	0	; () banked
  7311  000198  0100               	movlb	0	; () banked
  7312  00019A  51B2               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7313  00019C  EC81  F009         	call	_handle_start
  7314                           
  7315                           ;my_i2c.c: 282: if (ic_ptr->status == 0x8) {
  7316  0001A0  0100               	movlb	0	; () banked
  7317  0001A2  EE20 F00D          	lfsr	2,13
  7318  0001A6  0100               	movlb	0	; () banked
  7319  0001A8  51CD               	movf	_ic_ptr& (0+255),w,b
  7320  0001AA  26D9               	addwf	fsr2l,f,c
  7321  0001AC  0100               	movlb	0	; () banked
  7322  0001AE  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7323  0001B0  22DA               	addwfc	fsr2h,f,c
  7324  0001B2  0E08               	movlw	8
  7325  0001B4  62DF               	cpfseq	indf2,c
  7326  0001B6  D1BA               	goto	i2l340
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;my_i2c.c: 283: data_read = 0;
  7330  0001B8  0100               	movlb	0	; () banked
  7331  0001BA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7332  0001BC  0E00               	movlw	0
  7333  0001BE  0100               	movlb	0	; () banked
  7334  0001C0  0100               	movlb	0	; () banked
  7335  0001C2  6FB2               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7336  0001C4  0100               	movlb	0	; () banked
  7337  0001C6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7338                           
  7339                           ;my_i2c.c: 284: msg_to_send = 1;
  7340  0001C8  0100               	movlb	0	; () banked
  7341  0001CA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7342  0001CC  0E01               	movlw	1
  7343  0001CE  0100               	movlb	0	; () banked
  7344  0001D0  0100               	movlb	0	; () banked
  7345  0001D2  6FAE               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7346  0001D4  D187               	goto	L6
  7347  0001D6                     i2l346:
  7348                           
  7349                           ; BSR set to: 0
  7350                           ;my_i2c.c: 290: {
  7351                           ;my_i2c.c: 292: if (SSPSTATbits.P == 1) {
  7352  0001D6  A8C7               	btfss	4039,4,c	;volatile
  7353  0001D8  D030               	goto	i2l4204
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;my_i2c.c: 295: ic_ptr->event_count++;
  7357  0001DA  0100               	movlb	0	; () banked
  7358  0001DC  EE20 F00C          	lfsr	2,12
  7359  0001E0  0100               	movlb	0	; () banked
  7360  0001E2  51CD               	movf	_ic_ptr& (0+255),w,b
  7361  0001E4  26D9               	addwf	fsr2l,f,c
  7362  0001E6  0100               	movlb	0	; () banked
  7363  0001E8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7364  0001EA  22DA               	addwfc	fsr2h,f,c
  7365  0001EC  2ADF               	incf	indf2,f,c
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;my_i2c.c: 296: if (data_read) {
  7369  0001EE  0100               	movlb	0	; () banked
  7370  0001F0  0100               	movlb	0	; () banked
  7371  0001F2  51B2               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7372  0001F4  B4D8               	btfsc	status,2,c
  7373  0001F6  D179               	goto	L8
  7374                           
  7375                           ; BSR set to: 0
  7376                           ;my_i2c.c: 297: if (SSPSTATbits.D_A == 0) {
  7377  0001F8  BAC7               	btfsc	4039,5,c	;volatile
  7378  0001FA  D009               	goto	i2l4202
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;my_i2c.c: 298: msg_ready = 1;
  7382  0001FC  0100               	movlb	0	; () banked
  7383  0001FE  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7384  000200  0E01               	movlw	1
  7385  000202  0100               	movlb	0	; () banked
  7386  000204  0100               	movlb	0	; () banked
  7387  000206  6FB1               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7388  000208  0100               	movlb	0	; () banked
  7389  00020A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7390                           
  7391                           ;my_i2c.c: 299: } else {
  7392  00020C  D16E               	goto	L8
  7393  00020E                     i2l4202:
  7394                           
  7395                           ; BSR set to: 0
  7396                           ;my_i2c.c: 300: ic_ptr->error_count++;
  7397  00020E  0100               	movlb	0	; () banked
  7398  000210  EE20 F00F          	lfsr	2,15
  7399  000214  0100               	movlb	0	; () banked
  7400  000216  51CD               	movf	_ic_ptr& (0+255),w,b
  7401  000218  26D9               	addwf	fsr2l,f,c
  7402  00021A  0100               	movlb	0	; () banked
  7403  00021C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7404  00021E  22DA               	addwfc	fsr2h,f,c
  7405  000220  2ADF               	incf	indf2,f,c
  7406                           
  7407                           ;my_i2c.c: 301: ic_ptr->error_code = 0x6;
  7408  000222  0100               	movlb	0	; () banked
  7409  000224  EE20 F00E          	lfsr	2,14
  7410  000228  0100               	movlb	0	; () banked
  7411  00022A  51CD               	movf	_ic_ptr& (0+255),w,b
  7412  00022C  26D9               	addwf	fsr2l,f,c
  7413  00022E  0100               	movlb	0	; () banked
  7414  000230  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7415  000232  22DA               	addwfc	fsr2h,f,c
  7416  000234  0E06               	movlw	6
  7417  000236  6EDF               	movwf	indf2,c
  7418                           
  7419                           ; BSR set to: 0
  7420  000238  D158               	goto	L8
  7421  00023A                     i2l4204:
  7422                           
  7423                           ; BSR set to: 0
  7424  00023A  0100               	movlb	0	; () banked
  7425  00023C  0100               	movlb	0	; () banked
  7426  00023E  51B2               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7427  000240  B4D8               	btfsc	status,2,c
  7428  000242  D174               	goto	i2l340
  7429                           
  7430                           ; BSR set to: 0
  7431                           ;my_i2c.c: 306: ic_ptr->event_count++;
  7432  000244  0100               	movlb	0	; () banked
  7433  000246  EE20 F00C          	lfsr	2,12
  7434  00024A  0100               	movlb	0	; () banked
  7435  00024C  51CD               	movf	_ic_ptr& (0+255),w,b
  7436  00024E  26D9               	addwf	fsr2l,f,c
  7437  000250  0100               	movlb	0	; () banked
  7438  000252  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7439  000254  22DA               	addwfc	fsr2h,f,c
  7440  000256  2ADF               	incf	indf2,f,c
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;my_i2c.c: 307: if (SSPSTATbits.D_A == 0) {
  7444  000258  BAC7               	btfsc	4039,5,c	;volatile
  7445  00025A  D019               	goto	i2l4220
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;my_i2c.c: 308: if (SSPSTATbits.R_W == 0) {
  7449  00025C  B4C7               	btfsc	4039,2,c	;volatile
  7450  00025E  D00B               	goto	i2l4214
  7451                           
  7452                           ; BSR set to: 0
  7453                           ;my_i2c.c: 309: ic_ptr->status = 0x7;
  7454  000260  0100               	movlb	0	; () banked
  7455  000262  EE20 F00D          	lfsr	2,13
  7456  000266  0100               	movlb	0	; () banked
  7457  000268  51CD               	movf	_ic_ptr& (0+255),w,b
  7458  00026A  26D9               	addwf	fsr2l,f,c
  7459  00026C  0100               	movlb	0	; () banked
  7460  00026E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7461  000270  22DA               	addwfc	fsr2h,f,c
  7462  000272  0E07               	movlw	7
  7463  000274  D076               	goto	L5
  7464  000276                     i2l4214:
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;my_i2c.c: 311: ic_ptr->status = 0x8;
  7468  000276  0100               	movlb	0	; () banked
  7469  000278  EE20 F00D          	lfsr	2,13
  7470  00027C  0100               	movlb	0	; () banked
  7471  00027E  51CD               	movf	_ic_ptr& (0+255),w,b
  7472  000280  26D9               	addwf	fsr2l,f,c
  7473  000282  0100               	movlb	0	; () banked
  7474  000284  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7475  000286  22DA               	addwfc	fsr2h,f,c
  7476  000288  0E08               	movlw	8
  7477  00028A  6EDF               	movwf	indf2,c
  7478  00028C  D11D               	goto	L9
  7479  00028E                     i2l4220:
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;my_i2c.c: 317: ic_ptr->error_count++;
  7483  00028E  0100               	movlb	0	; () banked
  7484  000290  EE20 F00F          	lfsr	2,15
  7485  000294  0100               	movlb	0	; () banked
  7486  000296  51CD               	movf	_ic_ptr& (0+255),w,b
  7487  000298  26D9               	addwf	fsr2l,f,c
  7488  00029A  0100               	movlb	0	; () banked
  7489  00029C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7490  00029E  22DA               	addwfc	fsr2h,f,c
  7491  0002A0  2ADF               	incf	indf2,f,c
  7492                           
  7493                           ;my_i2c.c: 318: ic_ptr->status = 0x5;
  7494  0002A2  0100               	movlb	0	; () banked
  7495  0002A4  EE20 F00D          	lfsr	2,13
  7496  0002A8  0100               	movlb	0	; () banked
  7497  0002AA  51CD               	movf	_ic_ptr& (0+255),w,b
  7498  0002AC  26D9               	addwf	fsr2l,f,c
  7499  0002AE  0100               	movlb	0	; () banked
  7500  0002B0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7501  0002B2  22DA               	addwfc	fsr2h,f,c
  7502  0002B4  0E05               	movlw	5
  7503  0002B6  6EDF               	movwf	indf2,c
  7504                           
  7505                           ;my_i2c.c: 319: ic_ptr->error_code = 0x6;
  7506  0002B8  0100               	movlb	0	; () banked
  7507  0002BA  EE20 F00E          	lfsr	2,14
  7508  0002BE  0100               	movlb	0	; () banked
  7509  0002C0  51CD               	movf	_ic_ptr& (0+255),w,b
  7510  0002C2  26D9               	addwf	fsr2l,f,c
  7511  0002C4  0100               	movlb	0	; () banked
  7512  0002C6  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7513  0002C8  22DA               	addwfc	fsr2h,f,c
  7514  0002CA  0E06               	movlw	6
  7515  0002CC  D04A               	goto	L5
  7516  0002CE                     i2l4222:
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;my_i2c.c: 325: {
  7520                           ;my_i2c.c: 326: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7521  0002CE  0100               	movlb	0	; () banked
  7522  0002D0  EE20 F01B          	lfsr	2,27
  7523  0002D4  0100               	movlb	0	; () banked
  7524  0002D6  51CD               	movf	_ic_ptr& (0+255),w,b
  7525  0002D8  26D9               	addwf	fsr2l,f,c
  7526  0002DA  0100               	movlb	0	; () banked
  7527  0002DC  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7528  0002DE  22DA               	addwfc	fsr2h,f,c
  7529  0002E0  50DF               	movf	indf2,w,c
  7530  0002E2  0100               	movlb	0	; () banked
  7531  0002E4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7532  0002E6  0100               	movlb	0	; () banked
  7533  0002E8  EE20 F01A          	lfsr	2,26
  7534  0002EC  0100               	movlb	0	; () banked
  7535  0002EE  51CD               	movf	_ic_ptr& (0+255),w,b
  7536  0002F0  26D9               	addwf	fsr2l,f,c
  7537  0002F2  0100               	movlb	0	; () banked
  7538  0002F4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7539  0002F6  22DA               	addwfc	fsr2h,f,c
  7540  0002F8  50DF               	movf	indf2,w,c
  7541  0002FA  0100               	movlb	0	; () banked
  7542  0002FC  5D9A               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  7543  0002FE  B0D8               	btfsc	status,0,c
  7544  000300  D0F4               	goto	L8
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;my_i2c.c: 327: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7548  000302  0100               	movlb	0	; () banked
  7549  000304  EE20 F01B          	lfsr	2,27
  7550  000308  0100               	movlb	0	; () banked
  7551  00030A  51CD               	movf	_ic_ptr& (0+255),w,b
  7552  00030C  26D9               	addwf	fsr2l,f,c
  7553  00030E  0100               	movlb	0	; () banked
  7554  000310  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7555  000312  22DA               	addwfc	fsr2h,f,c
  7556  000314  50DF               	movf	indf2,w,c
  7557  000316  0100               	movlb	0	; () banked
  7558  000318  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7559  00031A  0100               	movlb	0	; () banked
  7560  00031C  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7561  00031E  0D01               	mullw	1
  7562  000320  0E10               	movlw	16
  7563  000322  26F3               	addwf	prodl,f,c
  7564  000324  0E00               	movlw	0
  7565  000326  22F4               	addwfc	prodh,f,c
  7566  000328  50F3               	movf	prodl,w,c
  7567  00032A  0100               	movlb	0	; () banked
  7568  00032C  0100               	movlb	0	; () banked
  7569  00032E  25CD               	addwf	_ic_ptr& (0+255),w,b
  7570  000330  6ED9               	movwf	fsr2l,c
  7571  000332  50F4               	movf	prodh,w,c
  7572  000334  0100               	movlb	0	; () banked
  7573  000336  0100               	movlb	0	; () banked
  7574  000338  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7575  00033A  6EDA               	movwf	fsr2h,c
  7576  00033C  50DF               	movf	indf2,w,c
  7577  00033E  6EC9               	movwf	4041,c	;volatile
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;my_i2c.c: 328: ic_ptr->outbufind++;
  7581  000340  0100               	movlb	0	; () banked
  7582  000342  EE20 F01B          	lfsr	2,27
  7583  000346  0100               	movlb	0	; () banked
  7584  000348  51CD               	movf	_ic_ptr& (0+255),w,b
  7585  00034A  26D9               	addwf	fsr2l,f,c
  7586  00034C  0100               	movlb	0	; () banked
  7587  00034E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7588  000350  22DA               	addwfc	fsr2h,f,c
  7589  000352  2ADF               	incf	indf2,f,c
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;my_i2c.c: 329: data_written = 1;
  7593  000354  0100               	movlb	0	; () banked
  7594  000356  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7595  000358  0E01               	movlw	1
  7596  00035A  0100               	movlb	0	; () banked
  7597  00035C  0100               	movlb	0	; () banked
  7598  00035E  6FAB               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7599  000360  D0C1               	goto	L6
  7600  000362                     L5:
  7601  000362  6EDF               	movwf	indf2,c
  7602  000364  D0E3               	goto	i2l340
  7603  000366                     i2l360:
  7604                           
  7605                           ; BSR set to: 0
  7606                           ;my_i2c.c: 337: {
  7607                           ;my_i2c.c: 339: if (SSPSTATbits.P == 1) {
  7608  000366  A8C7               	btfss	4039,4,c	;volatile
  7609  000368  D062               	goto	i2l4250
  7610                           
  7611                           ; BSR set to: 0
  7612                           ;my_i2c.c: 341: ic_ptr->event_count++;
  7613  00036A  0100               	movlb	0	; () banked
  7614  00036C  EE20 F00C          	lfsr	2,12
  7615  000370  0100               	movlb	0	; () banked
  7616  000372  51CD               	movf	_ic_ptr& (0+255),w,b
  7617  000374  26D9               	addwf	fsr2l,f,c
  7618  000376  0100               	movlb	0	; () banked
  7619  000378  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7620  00037A  22DA               	addwfc	fsr2h,f,c
  7621  00037C  2ADF               	incf	indf2,f,c
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;my_i2c.c: 342: if (data_read) {
  7625  00037E  0100               	movlb	0	; () banked
  7626  000380  0100               	movlb	0	; () banked
  7627  000382  51B2               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7628  000384  B4D8               	btfsc	status,2,c
  7629  000386  D04A               	goto	i2l4246
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;my_i2c.c: 343: if (SSPSTATbits.D_A == 1) {
  7633  000388  AAC7               	btfss	4039,5,c	;volatile
  7634  00038A  D027               	goto	i2l4244
  7635                           
  7636                           ; BSR set to: 0
  7637                           ;my_i2c.c: 344: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7638  00038C  0100               	movlb	0	; () banked
  7639  00038E  EE20 F00A          	lfsr	2,10
  7640  000392  0100               	movlb	0	; () banked
  7641  000394  51CD               	movf	_ic_ptr& (0+255),w,b
  7642  000396  26D9               	addwf	fsr2l,f,c
  7643  000398  0100               	movlb	0	; () banked
  7644  00039A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7645  00039C  22DA               	addwfc	fsr2h,f,c
  7646  00039E  50DF               	movf	indf2,w,c
  7647  0003A0  0100               	movlb	0	; () banked
  7648  0003A2  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7649  0003A4  0100               	movlb	0	; () banked
  7650  0003A6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7651  0003A8  0D01               	mullw	1
  7652  0003AA  50F3               	movf	prodl,w,c
  7653  0003AC  0100               	movlb	0	; () banked
  7654  0003AE  0100               	movlb	0	; () banked
  7655  0003B0  25CD               	addwf	_ic_ptr& (0+255),w,b
  7656  0003B2  6ED9               	movwf	fsr2l,c
  7657  0003B4  50F4               	movf	prodh,w,c
  7658  0003B6  0100               	movlb	0	; () banked
  7659  0003B8  0100               	movlb	0	; () banked
  7660  0003BA  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7661  0003BC  6EDA               	movwf	fsr2h,c
  7662  0003BE  0100               	movlb	0	; () banked
  7663  0003C0  C0AD  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7664                           
  7665                           ; BSR set to: 0
  7666                           ;my_i2c.c: 345: ic_ptr->buflen++;
  7667  0003C4  0100               	movlb	0	; () banked
  7668  0003C6  EE20 F00A          	lfsr	2,10
  7669  0003CA  0100               	movlb	0	; () banked
  7670  0003CC  51CD               	movf	_ic_ptr& (0+255),w,b
  7671  0003CE  26D9               	addwf	fsr2l,f,c
  7672  0003D0  0100               	movlb	0	; () banked
  7673  0003D2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7674  0003D4  22DA               	addwfc	fsr2h,f,c
  7675  0003D6  2ADF               	incf	indf2,f,c
  7676  0003D8  D021               	goto	i2l4246
  7677  0003DA                     i2l4244:
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;my_i2c.c: 348: ic_ptr->error_count++;
  7681  0003DA  0100               	movlb	0	; () banked
  7682  0003DC  EE20 F00F          	lfsr	2,15
  7683  0003E0  0100               	movlb	0	; () banked
  7684  0003E2  51CD               	movf	_ic_ptr& (0+255),w,b
  7685  0003E4  26D9               	addwf	fsr2l,f,c
  7686  0003E6  0100               	movlb	0	; () banked
  7687  0003E8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7688  0003EA  22DA               	addwfc	fsr2h,f,c
  7689  0003EC  2ADF               	incf	indf2,f,c
  7690                           
  7691                           ;my_i2c.c: 349: ic_ptr->error_code = 0x6;
  7692  0003EE  0100               	movlb	0	; () banked
  7693  0003F0  EE20 F00E          	lfsr	2,14
  7694  0003F4  0100               	movlb	0	; () banked
  7695  0003F6  51CD               	movf	_ic_ptr& (0+255),w,b
  7696  0003F8  26D9               	addwf	fsr2l,f,c
  7697  0003FA  0100               	movlb	0	; () banked
  7698  0003FC  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7699  0003FE  22DA               	addwfc	fsr2h,f,c
  7700  000400  0E06               	movlw	6
  7701  000402  6EDF               	movwf	indf2,c
  7702                           
  7703                           ;my_i2c.c: 350: ic_ptr->status = 0x5;
  7704  000404  0100               	movlb	0	; () banked
  7705  000406  EE20 F00D          	lfsr	2,13
  7706  00040A  0100               	movlb	0	; () banked
  7707  00040C  51CD               	movf	_ic_ptr& (0+255),w,b
  7708  00040E  26D9               	addwf	fsr2l,f,c
  7709  000410  0100               	movlb	0	; () banked
  7710  000412  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7711  000414  22DA               	addwfc	fsr2h,f,c
  7712  000416  0E05               	movlw	5
  7713  000418  6EDF               	movwf	indf2,c
  7714  00041A  D067               	goto	L8
  7715  00041C                     i2l4246:
  7716                           
  7717                           ; BSR set to: 0
  7718                           ;my_i2c.c: 353: msg_ready = 1;
  7719  00041C  0100               	movlb	0	; () banked
  7720  00041E  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7721  000420  0E01               	movlw	1
  7722  000422  0100               	movlb	0	; () banked
  7723  000424  0100               	movlb	0	; () banked
  7724  000426  6FB1               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7725  000428  0100               	movlb	0	; () banked
  7726  00042A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7727                           
  7728                           ; BSR set to: 0
  7729  00042C  D05E               	goto	L8
  7730  00042E                     i2l4250:
  7731                           
  7732                           ; BSR set to: 0
  7733  00042E  0100               	movlb	0	; () banked
  7734  000430  0100               	movlb	0	; () banked
  7735  000432  51B2               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7736  000434  B4D8               	btfsc	status,2,c
  7737  000436  D07A               	goto	i2l340
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;my_i2c.c: 357: ic_ptr->event_count++;
  7741  000438  0100               	movlb	0	; () banked
  7742  00043A  EE20 F00C          	lfsr	2,12
  7743  00043E  0100               	movlb	0	; () banked
  7744  000440  51CD               	movf	_ic_ptr& (0+255),w,b
  7745  000442  26D9               	addwf	fsr2l,f,c
  7746  000444  0100               	movlb	0	; () banked
  7747  000446  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7748  000448  22DA               	addwfc	fsr2h,f,c
  7749  00044A  2ADF               	incf	indf2,f,c
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;my_i2c.c: 358: if (SSPSTATbits.D_A == 1) {
  7753  00044C  AAC7               	btfss	4039,5,c	;volatile
  7754  00044E  D027               	goto	i2l368
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;my_i2c.c: 359: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7758  000450  0100               	movlb	0	; () banked
  7759  000452  EE20 F00A          	lfsr	2,10
  7760  000456  0100               	movlb	0	; () banked
  7761  000458  51CD               	movf	_ic_ptr& (0+255),w,b
  7762  00045A  26D9               	addwf	fsr2l,f,c
  7763  00045C  0100               	movlb	0	; () banked
  7764  00045E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7765  000460  22DA               	addwfc	fsr2h,f,c
  7766  000462  50DF               	movf	indf2,w,c
  7767  000464  0100               	movlb	0	; () banked
  7768  000466  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7769  000468  0100               	movlb	0	; () banked
  7770  00046A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7771  00046C  0D01               	mullw	1
  7772  00046E  50F3               	movf	prodl,w,c
  7773  000470  0100               	movlb	0	; () banked
  7774  000472  0100               	movlb	0	; () banked
  7775  000474  25CD               	addwf	_ic_ptr& (0+255),w,b
  7776  000476  6ED9               	movwf	fsr2l,c
  7777  000478  50F4               	movf	prodh,w,c
  7778  00047A  0100               	movlb	0	; () banked
  7779  00047C  0100               	movlb	0	; () banked
  7780  00047E  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7781  000480  6EDA               	movwf	fsr2h,c
  7782  000482  0100               	movlb	0	; () banked
  7783  000484  C0AD  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;my_i2c.c: 360: ic_ptr->buflen++;
  7787  000488  0100               	movlb	0	; () banked
  7788  00048A  EE20 F00A          	lfsr	2,10
  7789  00048E  0100               	movlb	0	; () banked
  7790  000490  51CD               	movf	_ic_ptr& (0+255),w,b
  7791  000492  26D9               	addwf	fsr2l,f,c
  7792  000494  0100               	movlb	0	; () banked
  7793  000496  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7794  000498  22DA               	addwfc	fsr2h,f,c
  7795  00049A  2ADF               	incf	indf2,f,c
  7796                           
  7797                           ;my_i2c.c: 361: } else {
  7798  00049C  D047               	goto	i2l340
  7799  00049E                     i2l368:
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;my_i2c.c: 362: if (SSPSTATbits.R_W == 1) {
  7803  00049E  A4C7               	btfss	4039,2,c	;volatile
  7804  0004A0  D6B6               	goto	i2l4202
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;my_i2c.c: 363: ic_ptr->status = 0x8;
  7808  0004A2  0100               	movlb	0	; () banked
  7809  0004A4  EE20 F00D          	lfsr	2,13
  7810  0004A8  0100               	movlb	0	; () banked
  7811  0004AA  51CD               	movf	_ic_ptr& (0+255),w,b
  7812  0004AC  26D9               	addwf	fsr2l,f,c
  7813  0004AE  0100               	movlb	0	; () banked
  7814  0004B0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7815  0004B2  22DA               	addwfc	fsr2h,f,c
  7816  0004B4  0E08               	movlw	8
  7817  0004B6  6EDF               	movwf	indf2,c
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;my_i2c.c: 364: msg_ready = 1;
  7821  0004B8  0100               	movlb	0	; () banked
  7822  0004BA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7823  0004BC  0E01               	movlw	1
  7824  0004BE  0100               	movlb	0	; () banked
  7825  0004C0  0100               	movlb	0	; () banked
  7826  0004C2  6FB1               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7827  0004C4  0100               	movlb	0	; () banked
  7828  0004C6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7829  0004C8                     L9:
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;my_i2c.c: 365: msg_to_send = 1;
  7833  0004C8  0100               	movlb	0	; () banked
  7834  0004CA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7835  0004CC  0E01               	movlw	1
  7836  0004CE  0100               	movlb	0	; () banked
  7837  0004D0  0100               	movlb	0	; () banked
  7838  0004D2  6FAE               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7839  0004D4  0100               	movlb	0	; () banked
  7840  0004D6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;my_i2c.c: 367: data_read = 0;
  7844  0004D8  0100               	movlb	0	; () banked
  7845  0004DA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7846  0004DC  0E00               	movlw	0
  7847  0004DE  0100               	movlb	0	; () banked
  7848  0004E0  0100               	movlb	0	; () banked
  7849  0004E2  6FB2               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7850  0004E4                     L6:
  7851  0004E4  0100               	movlb	0	; () banked
  7852  0004E6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7853                           
  7854                           ;my_i2c.c: 368: } else {
  7855  0004E8  D021               	goto	i2l340
  7856  0004EA                     L8:
  7857                           
  7858                           ;my_i2c.c: 371: ic_ptr->status = 0x5;
  7859  0004EA  0100               	movlb	0	; () banked
  7860  0004EC  EE20 F00D          	lfsr	2,13
  7861  0004F0  0100               	movlb	0	; () banked
  7862  0004F2  51CD               	movf	_ic_ptr& (0+255),w,b
  7863  0004F4  26D9               	addwf	fsr2l,f,c
  7864  0004F6  0100               	movlb	0	; () banked
  7865  0004F8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7866  0004FA  22DA               	addwfc	fsr2h,f,c
  7867  0004FC  0E05               	movlw	5
  7868  0004FE  D731               	goto	L5
  7869  000500                     i2l4272:
  7870                           
  7871                           ; BSR set to: 0
  7872  000500  0100               	movlb	0	; () banked
  7873  000502  EE20 F00D          	lfsr	2,13
  7874  000506  0100               	movlb	0	; () banked
  7875  000508  51CD               	movf	_ic_ptr& (0+255),w,b
  7876  00050A  26D9               	addwf	fsr2l,f,c
  7877  00050C  0100               	movlb	0	; () banked
  7878  00050E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7879  000510  22DA               	addwfc	fsr2h,f,c
  7880  000512  50DF               	movf	indf2,w,c
  7881                           
  7882                           ; Switch size 1, requested type "space"
  7883                           ; Number of cases is 4, Range of values is 5 to 8
  7884                           ; switch strategies available:
  7885                           ; Name         Instructions Cycles
  7886                           ; simple_byte           13     7 (average)
  7887                           ;	Chosen strategy is simple_byte
  7888  000514  0A05               	xorlw	5	; case 5
  7889  000516  B4D8               	btfsc	status,2,c
  7890  000518  D63C               	goto	i2l342
  7891  00051A  0A03               	xorlw	3	; case 6
  7892  00051C  B4D8               	btfsc	status,2,c
  7893  00051E  D65B               	goto	i2l346
  7894  000520  0A01               	xorlw	1	; case 7
  7895  000522  B4D8               	btfsc	status,2,c
  7896  000524  D720               	goto	i2l360
  7897  000526  0A0F               	xorlw	15	; case 8
  7898  000528  B4D8               	btfsc	status,2,c
  7899  00052A  D6D1               	goto	i2l4222
  7900  00052C                     i2l340:
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;my_i2c.c: 378: }
  7904                           ;my_i2c.c: 381: if (data_read || data_written) {
  7905  00052C  0100               	movlb	0	; () banked
  7906  00052E  0100               	movlb	0	; () banked
  7907  000530  67B2               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  7908  000532  D005               	goto	i2l374
  7909                           
  7910                           ; BSR set to: 0
  7911  000534  0100               	movlb	0	; () banked
  7912  000536  0100               	movlb	0	; () banked
  7913  000538  51AB               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  7914  00053A  B4D8               	btfsc	status,2,c
  7915  00053C  D002               	goto	i2l4278
  7916  00053E                     i2l374:
  7917                           
  7918                           ; BSR set to: 0
  7919                           ;my_i2c.c: 383: if (SSPCON1bits.CKP == 0) {
  7920  00053E  A8C6               	btfss	4038,4,c	;volatile
  7921                           
  7922                           ; BSR set to: 0
  7923                           ;my_i2c.c: 384: SSPCON1bits.CKP = 1;
  7924  000540  88C6               	bsf	4038,4,c	;volatile
  7925  000542                     i2l4278:
  7926                           
  7927                           ; BSR set to: 0
  7928                           ;my_i2c.c: 385: }
  7929                           ;my_i2c.c: 386: }
  7930                           ;my_i2c.c: 389: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7931  000542  0100               	movlb	0	; () banked
  7932  000544  EE20 F00A          	lfsr	2,10
  7933  000548  0100               	movlb	0	; () banked
  7934  00054A  51CD               	movf	_ic_ptr& (0+255),w,b
  7935  00054C  26D9               	addwf	fsr2l,f,c
  7936  00054E  0100               	movlb	0	; () banked
  7937  000550  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7938  000552  22DA               	addwfc	fsr2h,f,c
  7939  000554  0E08               	movlw	8
  7940  000556  64DF               	cpfsgt	indf2,c
  7941  000558  D024               	goto	i2l4284
  7942                           
  7943                           ; BSR set to: 0
  7944  00055A  0100               	movlb	0	; () banked
  7945  00055C  0100               	movlb	0	; () banked
  7946  00055E  67B1               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  7947  000560  D020               	goto	i2l4284
  7948                           
  7949                           ; BSR set to: 0
  7950                           ;my_i2c.c: 390: ic_ptr->status = 0x5;
  7951  000562  0100               	movlb	0	; () banked
  7952  000564  EE20 F00D          	lfsr	2,13
  7953  000568  0100               	movlb	0	; () banked
  7954  00056A  51CD               	movf	_ic_ptr& (0+255),w,b
  7955  00056C  26D9               	addwf	fsr2l,f,c
  7956  00056E  0100               	movlb	0	; () banked
  7957  000570  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7958  000572  22DA               	addwfc	fsr2h,f,c
  7959  000574  0E05               	movlw	5
  7960  000576  6EDF               	movwf	indf2,c
  7961                           
  7962                           ;my_i2c.c: 391: ic_ptr->error_count++;
  7963  000578  0100               	movlb	0	; () banked
  7964  00057A  EE20 F00F          	lfsr	2,15
  7965  00057E  0100               	movlb	0	; () banked
  7966  000580  51CD               	movf	_ic_ptr& (0+255),w,b
  7967  000582  26D9               	addwf	fsr2l,f,c
  7968  000584  0100               	movlb	0	; () banked
  7969  000586  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7970  000588  22DA               	addwfc	fsr2h,f,c
  7971  00058A  2ADF               	incf	indf2,f,c
  7972                           
  7973                           ;my_i2c.c: 392: ic_ptr->error_code = 0x7;
  7974  00058C  0100               	movlb	0	; () banked
  7975  00058E  EE20 F00E          	lfsr	2,14
  7976  000592  0100               	movlb	0	; () banked
  7977  000594  51CD               	movf	_ic_ptr& (0+255),w,b
  7978  000596  26D9               	addwf	fsr2l,f,c
  7979  000598  0100               	movlb	0	; () banked
  7980  00059A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7981  00059C  22DA               	addwfc	fsr2h,f,c
  7982  00059E  0E07               	movlw	7
  7983  0005A0  6EDF               	movwf	indf2,c
  7984  0005A2                     i2l4284:
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;my_i2c.c: 393: }
  7988                           ;my_i2c.c: 395: if (msg_ready) {
  7989  0005A2  0100               	movlb	0	; () banked
  7990  0005A4  0100               	movlb	0	; () banked
  7991  0005A6  51B1               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  7992  0005A8  B4D8               	btfsc	status,2,c
  7993  0005AA  D048               	goto	i2l4292
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;my_i2c.c: 396: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7997  0005AC  0100               	movlb	0	; () banked
  7998  0005AE  EE20 F00C          	lfsr	2,12
  7999  0005B2  0100               	movlb	0	; () banked
  8000  0005B4  51CD               	movf	_ic_ptr& (0+255),w,b
  8001  0005B6  26D9               	addwf	fsr2l,f,c
  8002  0005B8  0100               	movlb	0	; () banked
  8003  0005BA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8004  0005BC  22DA               	addwfc	fsr2h,f,c
  8005  0005BE  0100               	movlb	0	; () banked
  8006  0005C0  EE10 F00A          	lfsr	1,10
  8007  0005C4  0100               	movlb	0	; () banked
  8008  0005C6  51CD               	movf	_ic_ptr& (0+255),w,b
  8009  0005C8  26E1               	addwf	fsr1l,f,c
  8010  0005CA  0100               	movlb	0	; () banked
  8011  0005CC  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8012  0005CE  22E2               	addwfc	fsr1h,f,c
  8013  0005D0  50E7               	movf	indf1,w,c
  8014  0005D2  0100               	movlb	0	; () banked
  8015  0005D4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8016  0005D6  0100               	movlb	0	; () banked
  8017  0005D8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8018  0005DA  0D01               	mullw	1
  8019  0005DC  50F3               	movf	prodl,w,c
  8020  0005DE  0100               	movlb	0	; () banked
  8021  0005E0  0100               	movlb	0	; () banked
  8022  0005E2  25CD               	addwf	_ic_ptr& (0+255),w,b
  8023  0005E4  6EE1               	movwf	fsr1l,c
  8024  0005E6  50F4               	movf	prodh,w,c
  8025  0005E8  0100               	movlb	0	; () banked
  8026  0005EA  0100               	movlb	0	; () banked
  8027  0005EC  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8028  0005EE  6EE2               	movwf	fsr1h,c
  8029  0005F0  CFDF FFE7          	movff	indf2,indf1
  8030                           
  8031                           ; BSR set to: 0
  8032                           ;my_i2c.c: 397: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  8033  0005F4  0100               	movlb	0	; () banked
  8034  0005F6  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8035  0005F8  0E28               	movlw	40
  8036  0005FA  0100               	movlb	0	; () banked
  8037  0005FC  0100               	movlb	0	; () banked
  8038  0005FE  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8039  000600  0100               	movlb	0	; () banked
  8040  000602  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8041  000604  0100               	movlb	0	; () banked
  8042  000606  0100               	movlb	0	; () banked
  8043  000608  C0CE  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8044  00060C  0100               	movlb	0	; () banked
  8045  00060E  0100               	movlb	0	; () banked
  8046  000610  C0CD  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8047  000614  0100               	movlb	0	; () banked
  8048  000616  EE20 F00A          	lfsr	2,10
  8049  00061A  0100               	movlb	0	; () banked
  8050  00061C  51CD               	movf	_ic_ptr& (0+255),w,b
  8051  00061E  26D9               	addwf	fsr2l,f,c
  8052  000620  0100               	movlb	0	; () banked
  8053  000622  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8054  000624  22DA               	addwfc	fsr2h,f,c
  8055  000626  50DF               	movf	indf2,w,c
  8056  000628  0100               	movlb	0	; () banked
  8057  00062A  6F9B               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  8058  00062C  0100               	movlb	0	; () banked
  8059  00062E  299B               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  8060  000630  ECE1  F00F         	call	_ToMainHigh_sendmsg
  8061                           
  8062                           ;my_i2c.c: 398: ic_ptr->buflen = 0;
  8063  000634  0100               	movlb	0	; () banked
  8064  000636  EE20 F00A          	lfsr	2,10
  8065  00063A  D04B               	goto	L7
  8066  00063C                     i2l4292:
  8067                           
  8068                           ; BSR set to: 0
  8069  00063C  0100               	movlb	0	; () banked
  8070  00063E  EE20 F00F          	lfsr	2,15
  8071  000642  0100               	movlb	0	; () banked
  8072  000644  51CD               	movf	_ic_ptr& (0+255),w,b
  8073  000646  26D9               	addwf	fsr2l,f,c
  8074  000648  0100               	movlb	0	; () banked
  8075  00064A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8076  00064C  22DA               	addwfc	fsr2h,f,c
  8077  00064E  50DF               	movf	indf2,w,c
  8078  000650  B4D8               	btfsc	status,2,c
  8079  000652  D047               	goto	i2l4300
  8080                           
  8081                           ; BSR set to: 0
  8082                           ;my_i2c.c: 400: error_buf[0] = ic_ptr->error_count;
  8083  000654  0100               	movlb	0	; () banked
  8084  000656  EE20 F00F          	lfsr	2,15
  8085  00065A  0100               	movlb	0	; () banked
  8086  00065C  51CD               	movf	_ic_ptr& (0+255),w,b
  8087  00065E  26D9               	addwf	fsr2l,f,c
  8088  000660  0100               	movlb	0	; () banked
  8089  000662  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8090  000664  22DA               	addwfc	fsr2h,f,c
  8091  000666  50DF               	movf	indf2,w,c
  8092  000668  0100               	movlb	0	; () banked
  8093  00066A  0100               	movlb	0	; () banked
  8094  00066C  6FA8               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  8095                           
  8096                           ;my_i2c.c: 401: error_buf[1] = ic_ptr->error_code;
  8097  00066E  0100               	movlb	0	; () banked
  8098  000670  EE20 F00E          	lfsr	2,14
  8099  000674  0100               	movlb	0	; () banked
  8100  000676  51CD               	movf	_ic_ptr& (0+255),w,b
  8101  000678  26D9               	addwf	fsr2l,f,c
  8102  00067A  0100               	movlb	0	; () banked
  8103  00067C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8104  00067E  22DA               	addwfc	fsr2h,f,c
  8105  000680  50DF               	movf	indf2,w,c
  8106  000682  0100               	movlb	0	; () banked
  8107  000684  0100               	movlb	0	; () banked
  8108  000686  6FA9               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  8109                           
  8110                           ;my_i2c.c: 402: error_buf[2] = ic_ptr->event_count;
  8111  000688  0100               	movlb	0	; () banked
  8112  00068A  EE20 F00C          	lfsr	2,12
  8113  00068E  0100               	movlb	0	; () banked
  8114  000690  51CD               	movf	_ic_ptr& (0+255),w,b
  8115  000692  26D9               	addwf	fsr2l,f,c
  8116  000694  0100               	movlb	0	; () banked
  8117  000696  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8118  000698  22DA               	addwfc	fsr2h,f,c
  8119  00069A  50DF               	movf	indf2,w,c
  8120  00069C  0100               	movlb	0	; () banked
  8121  00069E  0100               	movlb	0	; () banked
  8122  0006A0  6FAA               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  8123                           
  8124                           ; BSR set to: 0
  8125                           ;my_i2c.c: 403: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8126  0006A2  0100               	movlb	0	; () banked
  8127  0006A4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8128  0006A6  0E29               	movlw	41
  8129  0006A8  0100               	movlb	0	; () banked
  8130  0006AA  0100               	movlb	0	; () banked
  8131  0006AC  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8132  0006AE  0100               	movlb	0	; () banked
  8133  0006B0  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8134  0006B2  0100               	movlb	0	; () banked
  8135  0006B4  0E00               	movlw	high i2c_slave_int_handler@error_buf
  8136  0006B6  0100               	movlb	0	; () banked
  8137  0006B8  0100               	movlb	0	; () banked
  8138  0006BA  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8139  0006BC  0100               	movlb	0	; () banked
  8140  0006BE  0EA8               	movlw	low i2c_slave_int_handler@error_buf
  8141  0006C0  0100               	movlb	0	; () banked
  8142  0006C2  0100               	movlb	0	; () banked
  8143  0006C4  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8144  0006C6  0E03               	movlw	3
  8145  0006C8  ECE1  F00F         	call	_ToMainHigh_sendmsg
  8146                           
  8147                           ;my_i2c.c: 404: ic_ptr->error_count = 0;
  8148  0006CC  0100               	movlb	0	; () banked
  8149  0006CE  EE20 F00F          	lfsr	2,15
  8150  0006D2                     L7:
  8151  0006D2  0100               	movlb	0	; () banked
  8152  0006D4  51CD               	movf	_ic_ptr& (0+255),w,b
  8153  0006D6  26D9               	addwf	fsr2l,f,c
  8154  0006D8  0100               	movlb	0	; () banked
  8155  0006DA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8156  0006DC  22DA               	addwfc	fsr2h,f,c
  8157  0006DE  0E00               	movlw	0
  8158  0006E0  6EDF               	movwf	indf2,c
  8159  0006E2                     i2l4300:
  8160                           
  8161                           ; BSR set to: 0
  8162                           ;my_i2c.c: 405: }
  8163                           ;my_i2c.c: 406: if (msg_to_send) {
  8164  0006E2  0100               	movlb	0	; () banked
  8165  0006E4  0100               	movlb	0	; () banked
  8166  0006E6  51AE               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  8167  0006E8  B4D8               	btfsc	status,2,c
  8168  0006EA  0012               	return	
  8169                           
  8170                           ; BSR set to: 0
  8171                           ;my_i2c.c: 407: int length = 0;
  8172  0006EC  0E00               	movlw	0
  8173  0006EE  0100               	movlb	0	; () banked
  8174  0006F0  0100               	movlb	0	; () banked
  8175  0006F2  6FB0               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  8176  0006F4  0E00               	movlw	0
  8177  0006F6  0100               	movlb	0	; () banked
  8178  0006F8  6FAF               	movwf	i2c_slave_int_handler@length& (0+255),b
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;my_i2c.c: 411: if(ic_ptr->buffer[0] == 0xAA){
  8182  0006FA  0EAA               	movlw	170
  8183  0006FC  C0CD  FFD9         	movff	_ic_ptr,fsr2l
  8184  000700  C0CE  FFDA         	movff	_ic_ptr+1,fsr2h
  8185  000704  62DF               	cpfseq	indf2,c
  8186  000706  D01C               	goto	i2l4312
  8187                           
  8188                           ; BSR set to: 0
  8189                           ;my_i2c.c: 412: length = 5;
  8190  000708  0E00               	movlw	0
  8191  00070A  0100               	movlb	0	; () banked
  8192  00070C  0100               	movlb	0	; () banked
  8193  00070E  6FB0               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  8194  000710  0E05               	movlw	5
  8195  000712  0100               	movlb	0	; () banked
  8196  000714  6FAF               	movwf	i2c_slave_int_handler@length& (0+255),b
  8197                           
  8198                           ; BSR set to: 0
  8199                           ;my_i2c.c: 414: unsigned char sensormsg[5] = {0x01, 0x01, 0x02, 0x03, ((0x01 + 0x02 + 0x
      +                          03) & 0x17)};
  8200  000716  EE20  F0C1         	lfsr	2,i2c_slave_int_handler@F5128
  8201  00071A  EE10  F09C         	lfsr	1,i2c_slave_int_handler@sensormsg
  8202  00071E  0E05               	movlw	5
  8203  000720                     i2u346_41:
  8204  000720  CFDE FFE6          	movff	postinc2,postinc1
  8205  000724  2EE8               	decfsz	wreg,f,c
  8206  000726  D7FC               	goto	i2u346_41
  8207                           
  8208                           ; BSR set to: 0
  8209                           ;my_i2c.c: 415: start_i2c_slave_reply(length, sensormsg);
  8210  000728  0100               	movlb	0	; () banked
  8211  00072A  0E00               	movlw	high i2c_slave_int_handler@sensormsg
  8212  00072C  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  8213  00072E  0100               	movlb	0	; () banked
  8214  000730  0E9C               	movlw	low i2c_slave_int_handler@sensormsg
  8215  000732  6E2D               	movwf	start_i2c_slave_reply@msg,c
  8216  000734  0100               	movlb	0	; () banked
  8217  000736  0100               	movlb	0	; () banked
  8218  000738  51AF               	movf	i2c_slave_int_handler@length& (0+255),w,b
  8219  00073A  EC8C  F008         	call	_start_i2c_slave_reply
  8220                           
  8221                           ;my_i2c.c: 417: } else if(ic_ptr->buffer[0] == 0xBA){
  8222  00073E  D059               	goto	i2l4332
  8223  000740                     i2l4312:
  8224  000740  0EBA               	movlw	186
  8225  000742  C0CD  FFD9         	movff	_ic_ptr,fsr2l
  8226  000746  C0CE  FFDA         	movff	_ic_ptr+1,fsr2h
  8227  00074A  62DF               	cpfseq	indf2,c
  8228  00074C  D052               	goto	i2l4332
  8229                           
  8230                           ;my_i2c.c: 419: length = 5;
  8231  00074E  0E00               	movlw	0
  8232  000750  0100               	movlb	0	; () banked
  8233  000752  0100               	movlb	0	; () banked
  8234  000754  6FB0               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  8235  000756  0E05               	movlw	5
  8236  000758  0100               	movlb	0	; () banked
  8237  00075A  6FAF               	movwf	i2c_slave_int_handler@length& (0+255),b
  8238                           
  8239                           ; BSR set to: 0
  8240                           ;my_i2c.c: 421: unsigned char motormsg[5] = {0x03, 0x04, ((0x04) & 0x17), 0x00, 0x00};
  8241  00075C  EE20  F0C6         	lfsr	2,i2c_slave_int_handler@F5130
  8242  000760  EE10  F0A1         	lfsr	1,i2c_slave_int_handler@motormsg
  8243  000764  0E05               	movlw	5
  8244  000766                     i2u348_41:
  8245  000766  CFDE FFE6          	movff	postinc2,postinc1
  8246  00076A  2EE8               	decfsz	wreg,f,c
  8247  00076C  D7FC               	goto	i2u348_41
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;my_i2c.c: 422: start_i2c_slave_reply(length, motormsg);
  8251  00076E  0100               	movlb	0	; () banked
  8252  000770  0E00               	movlw	high i2c_slave_int_handler@motormsg
  8253  000772  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  8254  000774  0100               	movlb	0	; () banked
  8255  000776  0EA1               	movlw	low i2c_slave_int_handler@motormsg
  8256  000778  6E2D               	movwf	start_i2c_slave_reply@msg,c
  8257  00077A  0100               	movlb	0	; () banked
  8258  00077C  0100               	movlb	0	; () banked
  8259  00077E  51AF               	movf	i2c_slave_int_handler@length& (0+255),w,b
  8260  000780  EC8C  F008         	call	_start_i2c_slave_reply
  8261                           
  8262                           ;my_i2c.c: 424: unsigned char motorcomm[2] = {0x9F, 0x1F};
  8263  000784  C0CB  F0A6         	movff	i2c_slave_int_handler@F5132,i2c_slave_int_handler@motorcomm
  8264  000788  C0CC  F0A7         	movff	i2c_slave_int_handler@F5132+1,i2c_slave_int_handler@motorcomm+1
  8265                           
  8266                           ;my_i2c.c: 425: if(ic_ptr->buffer[1] == 0xFF){
  8267  00078C  0100               	movlb	0	; () banked
  8268  00078E  EE20 F001          	lfsr	2,1
  8269  000792  0100               	movlb	0	; () banked
  8270  000794  51CD               	movf	_ic_ptr& (0+255),w,b
  8271  000796  26D9               	addwf	fsr2l,f,c
  8272  000798  0100               	movlb	0	; () banked
  8273  00079A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8274  00079C  22DA               	addwfc	fsr2h,f,c
  8275  00079E  0EFF               	movlw	255
  8276  0007A0  62DF               	cpfseq	indf2,c
  8277  0007A2  D00A               	goto	i2l4326
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;my_i2c.c: 427: uart_trans(2, motorcomm);
  8281  0007A4  0100               	movlb	0	; () banked
  8282  0007A6  0E00               	movlw	high i2c_slave_int_handler@motorcomm
  8283  0007A8  6E2E               	movwf	i2uart_trans@data+1,c
  8284  0007AA  0100               	movlb	0	; () banked
  8285  0007AC  0EA6               	movlw	low i2c_slave_int_handler@motorcomm
  8286  0007AE  6E2D               	movwf	i2uart_trans@data,c
  8287  0007B0  0E02               	movlw	2
  8288  0007B2  ECFF  F00A         	call	i2_uart_trans
  8289                           
  8290                           ;my_i2c.c: 428: } else if(ic_ptr->buffer[1] == 0x00){
  8291  0007B6  D01D               	goto	i2l4332
  8292  0007B8                     i2l4326:
  8293  0007B8  0100               	movlb	0	; () banked
  8294  0007BA  EE20 F001          	lfsr	2,1
  8295  0007BE  0100               	movlb	0	; () banked
  8296  0007C0  51CD               	movf	_ic_ptr& (0+255),w,b
  8297  0007C2  26D9               	addwf	fsr2l,f,c
  8298  0007C4  0100               	movlb	0	; () banked
  8299  0007C6  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8300  0007C8  22DA               	addwfc	fsr2h,f,c
  8301  0007CA  50DF               	movf	indf2,w,c
  8302  0007CC  A4D8               	btfss	status,2,c
  8303  0007CE  D011               	goto	i2l4332
  8304                           
  8305                           ; BSR set to: 0
  8306                           ;my_i2c.c: 429: motorcomm[0] = 0x00;
  8307  0007D0  0100               	movlb	0	; () banked
  8308  0007D2  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8309  0007D4  0E00               	movlw	0
  8310  0007D6  0100               	movlb	0	; () banked
  8311  0007D8  0100               	movlb	0	; () banked
  8312  0007DA  6FA6               	movwf	i2c_slave_int_handler@motorcomm& (0+255),b
  8313  0007DC  0100               	movlb	0	; () banked
  8314  0007DE  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8315                           
  8316                           ; BSR set to: 0
  8317                           ;my_i2c.c: 430: uart_trans(1, motorcomm);
  8318  0007E0  0100               	movlb	0	; () banked
  8319  0007E2  0E00               	movlw	high i2c_slave_int_handler@motorcomm
  8320  0007E4  6E2E               	movwf	i2uart_trans@data+1,c
  8321  0007E6  0100               	movlb	0	; () banked
  8322  0007E8  0EA6               	movlw	low i2c_slave_int_handler@motorcomm
  8323  0007EA  6E2D               	movwf	i2uart_trans@data,c
  8324  0007EC  0E01               	movlw	1
  8325  0007EE  ECFF  F00A         	call	i2_uart_trans
  8326  0007F2                     i2l4332:
  8327                           
  8328                           ;my_i2c.c: 431: }
  8329                           ;my_i2c.c: 433: }
  8330                           ;my_i2c.c: 434: msg_to_send = 0;
  8331  0007F2  0100               	movlb	0	; () banked
  8332  0007F4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8333  0007F6  0E00               	movlw	0
  8334  0007F8  0100               	movlb	0	; () banked
  8335  0007FA  0100               	movlb	0	; () banked
  8336  0007FC  6FAE               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  8337  0007FE  0100               	movlb	0	; () banked
  8338  000800  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8339  000802  0012               	return	
  8340  000804                     __end_of_i2c_slave_int_handler:
  8341                           	opt stack 0
  8342                           pclatu	equ	0xFFB
  8343                           pclath	equ	0xFFA
  8344                           tblptru	equ	0xFF8
  8345                           tblptrh	equ	0xFF7
  8346                           tblptrl	equ	0xFF6
  8347                           tablat	equ	0xFF5
  8348                           prodh	equ	0xFF4
  8349                           prodl	equ	0xFF3
  8350                           intcon	equ	0xFF2
  8351                           intcon2	equ	0xFF1
  8352                           postinc0	equ	0xFEE
  8353                           fsr0h	equ	0xFEA
  8354                           fsr0l	equ	0xFE9
  8355                           wreg	equ	0xFE8
  8356                           indf1	equ	0xFE7
  8357                           postinc1	equ	0xFE6
  8358                           postdec1	equ	0xFE5
  8359                           fsr1h	equ	0xFE2
  8360                           fsr1l	equ	0xFE1
  8361                           bsr	equ	0xFE0
  8362                           indf2	equ	0xFDF
  8363                           postinc2	equ	0xFDE
  8364                           postdec2	equ	0xFDD
  8365                           fsr2h	equ	0xFDA
  8366                           fsr2l	equ	0xFD9
  8367                           status	equ	0xFD8
  8368                           
  8369 ;; *************** function i2_uart_trans *****************
  8370 ;; Defined at:
  8371 ;;		line 61 in file "../src/my_uart.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;  length          1    wreg     unsigned char 
  8374 ;;  data            2   44[COMRAM] PTR unsigned char 
  8375 ;;		 -> timer0_int_handler@motorcomm(2), i2c_slave_int_handler@motorcomm(2), main@msgbuffer(11), main@motorcomm(2), 
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;  length          1   46[COMRAM] unsigned char 
  8378 ;; Return value:  Size  Location     Type
  8379 ;;		None               void
  8380 ;; Registers used:
  8381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8387 ;;      Params:         2       0       0       0       0
  8388 ;;      Locals:         1       0       0       0       0
  8389 ;;      Temps:          0       2       0       0       0
  8390 ;;      Totals:         3       2       0       0       0
  8391 ;;Total ram usage:        5 bytes
  8392 ;; Hardware stack levels used:    1
  8393 ;; This function calls:
  8394 ;;		Nothing
  8395 ;; This function is called by:
  8396 ;;		_i2c_slave_int_handler
  8397 ;;		_timer0_int_handler
  8398 ;; This function uses a non-reentrant model
  8399 ;;
  8400                           
  8401                           	psect	text47
  8402  0015FE                     __ptext47:
  8403                           	opt stack 0
  8404  0015FE                     i2_uart_trans:
  8405                           	opt stack 19
  8406                           
  8407                           ; BSR set to: 0
  8408                           ;incstack = 0
  8409                           ;i2uart_trans@length stored from wreg
  8410  0015FE  CFE8 F02F          	movff	wreg,i2uart_trans@length
  8411                           
  8412                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  8413  001602  EE20 F00B          	lfsr	2,11
  8414  001606  5052               	movf	_uc_ptr,w,c
  8415  001608  26D9               	addwf	fsr2l,f,c
  8416  00160A  5053               	movf	_uc_ptr+1,w,c
  8417  00160C  22DA               	addwfc	fsr2h,f,c
  8418  00160E  0E00               	movlw	0
  8419  001610  6EDF               	movwf	indf2,c
  8420  001612  D031               	goto	i2l4502
  8421  001614                     i2l4498:
  8422                           
  8423                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  8424  001614  EE20 F00B          	lfsr	2,11
  8425  001618  5052               	movf	_uc_ptr,w,c
  8426  00161A  26D9               	addwf	fsr2l,f,c
  8427  00161C  5053               	movf	_uc_ptr+1,w,c
  8428  00161E  22DA               	addwfc	fsr2h,f,c
  8429  001620  50DF               	movf	indf2,w,c
  8430  001622  0100               	movlb	0	; () banked
  8431  001624  6F80               	movwf	??i2_uart_trans& (0+255),b
  8432  001626  0100               	movlb	0	; () banked
  8433  001628  5180               	movf	??i2_uart_trans& (0+255),w,b
  8434  00162A  0D01               	mullw	1
  8435  00162C  50F3               	movf	prodl,w,c
  8436  00162E  242D               	addwf	i2uart_trans@data,w,c
  8437  001630  6ED9               	movwf	fsr2l,c
  8438  001632  50F4               	movf	prodh,w,c
  8439  001634  202E               	addwfc	i2uart_trans@data+1,w,c
  8440  001636  6EDA               	movwf	fsr2h,c
  8441  001638  EE10 F00B          	lfsr	1,11
  8442  00163C  5052               	movf	_uc_ptr,w,c
  8443  00163E  26E1               	addwf	fsr1l,f,c
  8444  001640  5053               	movf	_uc_ptr+1,w,c
  8445  001642  22E2               	addwfc	fsr1h,f,c
  8446  001644  50E7               	movf	indf1,w,c
  8447  001646  0100               	movlb	0	; () banked
  8448  001648  6F81               	movwf	(??i2_uart_trans+1)& (0+255),b
  8449  00164A  0100               	movlb	0	; () banked
  8450  00164C  5181               	movf	(??i2_uart_trans+1)& (0+255),w,b
  8451  00164E  0D01               	mullw	1
  8452  001650  0E06               	movlw	6
  8453  001652  26F3               	addwf	prodl,f,c
  8454  001654  0E00               	movlw	0
  8455  001656  22F4               	addwfc	prodh,f,c
  8456  001658  50F3               	movf	prodl,w,c
  8457  00165A  2452               	addwf	_uc_ptr,w,c
  8458  00165C  6EE1               	movwf	fsr1l,c
  8459  00165E  50F4               	movf	prodh,w,c
  8460  001660  2053               	addwfc	_uc_ptr+1,w,c
  8461  001662  6EE2               	movwf	fsr1h,c
  8462  001664  CFDF FFE7          	movff	indf2,indf1
  8463                           
  8464                           ; BSR set to: 0
  8465  001668  EE20 F00B          	lfsr	2,11
  8466  00166C  5052               	movf	_uc_ptr,w,c
  8467  00166E  26D9               	addwf	fsr2l,f,c
  8468  001670  5053               	movf	_uc_ptr+1,w,c
  8469  001672  22DA               	addwfc	fsr2h,f,c
  8470  001674  2ADF               	incf	indf2,f,c
  8471  001676                     i2l4502:
  8472  001676  EE20 F00B          	lfsr	2,11
  8473  00167A  5052               	movf	_uc_ptr,w,c
  8474  00167C  26D9               	addwf	fsr2l,f,c
  8475  00167E  5053               	movf	_uc_ptr+1,w,c
  8476  001680  22DA               	addwfc	fsr2h,f,c
  8477  001682  50DF               	movf	indf2,w,c
  8478  001684  0100               	movlb	0	; () banked
  8479  001686  6F80               	movwf	??i2_uart_trans& (0+255),b
  8480  001688  502F               	movf	i2uart_trans@length,w,c
  8481  00168A  0100               	movlb	0	; () banked
  8482  00168C  5D80               	subwf	??i2_uart_trans& (0+255),w,b
  8483  00168E  A0D8               	btfss	status,0,c
  8484  001690  D7C1               	goto	i2l4498
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;my_uart.c: 67: }
  8488                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  8489                           
  8490                           ; BSR set to: 0
  8491  001692  EE20 F00C          	lfsr	2,12
  8492  001696  5052               	movf	_uc_ptr,w,c
  8493  001698  26D9               	addwf	fsr2l,f,c
  8494  00169A  5053               	movf	_uc_ptr+1,w,c
  8495  00169C  22DA               	addwfc	fsr2h,f,c
  8496  00169E  0E00               	movlw	0
  8497  0016A0  6EDF               	movwf	indf2,c
  8498                           
  8499                           ; BSR set to: 0
  8500                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  8501  0016A2  889D               	bsf	3997,4,c	;volatile
  8502                           
  8503                           ; BSR set to: 0
  8504  0016A4  0012               	return	
  8505  0016A6                     __end_ofi2_uart_trans:
  8506                           	opt stack 0
  8507                           pclatu	equ	0xFFB
  8508                           pclath	equ	0xFFA
  8509                           tblptru	equ	0xFF8
  8510                           tblptrh	equ	0xFF7
  8511                           tblptrl	equ	0xFF6
  8512                           tablat	equ	0xFF5
  8513                           prodh	equ	0xFF4
  8514                           prodl	equ	0xFF3
  8515                           intcon	equ	0xFF2
  8516                           intcon2	equ	0xFF1
  8517                           postinc0	equ	0xFEE
  8518                           fsr0h	equ	0xFEA
  8519                           fsr0l	equ	0xFE9
  8520                           wreg	equ	0xFE8
  8521                           indf1	equ	0xFE7
  8522                           postinc1	equ	0xFE6
  8523                           postdec1	equ	0xFE5
  8524                           fsr1h	equ	0xFE2
  8525                           fsr1l	equ	0xFE1
  8526                           bsr	equ	0xFE0
  8527                           indf2	equ	0xFDF
  8528                           postinc2	equ	0xFDE
  8529                           postdec2	equ	0xFDD
  8530                           fsr2h	equ	0xFDA
  8531                           fsr2l	equ	0xFD9
  8532                           status	equ	0xFD8
  8533                           
  8534 ;; *************** function _start_i2c_slave_reply *****************
  8535 ;; Defined at:
  8536 ;;		line 92 in file "../src/my_i2c.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  length          1    wreg     unsigned char 
  8539 ;;  msg             2   44[COMRAM] PTR unsigned char 
  8540 ;;		 -> i2c_slave_int_handler@motormsg(5), i2c_slave_int_handler@sensormsg(5), 
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;  length          1   46[COMRAM] unsigned char 
  8543 ;; Return value:  Size  Location     Type
  8544 ;;		None               void
  8545 ;; Registers used:
  8546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/0
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8552 ;;      Params:         2       0       0       0       0
  8553 ;;      Locals:         1       0       0       0       0
  8554 ;;      Temps:          0       2       0       0       0
  8555 ;;      Totals:         3       2       0       0       0
  8556 ;;Total ram usage:        5 bytes
  8557 ;; Hardware stack levels used:    1
  8558 ;; This function calls:
  8559 ;;		Nothing
  8560 ;; This function is called by:
  8561 ;;		_i2c_slave_int_handler
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           	psect	text48
  8566  001118                     __ptext48:
  8567                           	opt stack 0
  8568  001118                     _start_i2c_slave_reply:
  8569                           	opt stack 18
  8570                           
  8571                           ; BSR set to: 0
  8572                           ;incstack = 0
  8573                           ;start_i2c_slave_reply@length stored from wreg
  8574  001118  CFE8 F02F          	movff	wreg,start_i2c_slave_reply@length
  8575                           
  8576                           ;my_i2c.c: 94: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  8577  00111C  0100               	movlb	0	; () banked
  8578  00111E  EE20 F01A          	lfsr	2,26
  8579  001122  0100               	movlb	0	; () banked
  8580  001124  51CD               	movf	_ic_ptr& (0+255),w,b
  8581  001126  26D9               	addwf	fsr2l,f,c
  8582  001128  0100               	movlb	0	; () banked
  8583  00112A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8584  00112C  22DA               	addwfc	fsr2h,f,c
  8585  00112E  0E00               	movlw	0
  8586  001130  6EDF               	movwf	indf2,c
  8587  001132  D03E               	goto	i2l4158
  8588  001134                     i2l4154:
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;my_i2c.c: 95: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  8592  001134  0100               	movlb	0	; () banked
  8593  001136  EE20 F01A          	lfsr	2,26
  8594  00113A  0100               	movlb	0	; () banked
  8595  00113C  51CD               	movf	_ic_ptr& (0+255),w,b
  8596  00113E  26D9               	addwf	fsr2l,f,c
  8597  001140  0100               	movlb	0	; () banked
  8598  001142  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8599  001144  22DA               	addwfc	fsr2h,f,c
  8600  001146  50DF               	movf	indf2,w,c
  8601  001148  0100               	movlb	0	; () banked
  8602  00114A  6F80               	movwf	??_start_i2c_slave_reply& (0+255),b
  8603  00114C  0100               	movlb	0	; () banked
  8604  00114E  5180               	movf	??_start_i2c_slave_reply& (0+255),w,b
  8605  001150  0D01               	mullw	1
  8606  001152  50F3               	movf	prodl,w,c
  8607  001154  242D               	addwf	start_i2c_slave_reply@msg,w,c
  8608  001156  6ED9               	movwf	fsr2l,c
  8609  001158  50F4               	movf	prodh,w,c
  8610  00115A  202E               	addwfc	start_i2c_slave_reply@msg+1,w,c
  8611  00115C  6EDA               	movwf	fsr2h,c
  8612  00115E  0100               	movlb	0	; () banked
  8613  001160  EE10 F01A          	lfsr	1,26
  8614  001164  0100               	movlb	0	; () banked
  8615  001166  51CD               	movf	_ic_ptr& (0+255),w,b
  8616  001168  26E1               	addwf	fsr1l,f,c
  8617  00116A  0100               	movlb	0	; () banked
  8618  00116C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8619  00116E  22E2               	addwfc	fsr1h,f,c
  8620  001170  50E7               	movf	indf1,w,c
  8621  001172  0100               	movlb	0	; () banked
  8622  001174  6F81               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  8623  001176  0100               	movlb	0	; () banked
  8624  001178  5181               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  8625  00117A  0D01               	mullw	1
  8626  00117C  0E10               	movlw	16
  8627  00117E  26F3               	addwf	prodl,f,c
  8628  001180  0E00               	movlw	0
  8629  001182  22F4               	addwfc	prodh,f,c
  8630  001184  50F3               	movf	prodl,w,c
  8631  001186  0100               	movlb	0	; () banked
  8632  001188  0100               	movlb	0	; () banked
  8633  00118A  25CD               	addwf	_ic_ptr& (0+255),w,b
  8634  00118C  6EE1               	movwf	fsr1l,c
  8635  00118E  50F4               	movf	prodh,w,c
  8636  001190  0100               	movlb	0	; () banked
  8637  001192  0100               	movlb	0	; () banked
  8638  001194  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8639  001196  6EE2               	movwf	fsr1h,c
  8640  001198  CFDF FFE7          	movff	indf2,indf1
  8641                           
  8642                           ; BSR set to: 0
  8643  00119C  0100               	movlb	0	; () banked
  8644  00119E  EE20 F01A          	lfsr	2,26
  8645  0011A2  0100               	movlb	0	; () banked
  8646  0011A4  51CD               	movf	_ic_ptr& (0+255),w,b
  8647  0011A6  26D9               	addwf	fsr2l,f,c
  8648  0011A8  0100               	movlb	0	; () banked
  8649  0011AA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8650  0011AC  22DA               	addwfc	fsr2h,f,c
  8651  0011AE  2ADF               	incf	indf2,f,c
  8652  0011B0                     i2l4158:
  8653                           
  8654                           ; BSR set to: 0
  8655  0011B0  0100               	movlb	0	; () banked
  8656  0011B2  EE20 F01A          	lfsr	2,26
  8657  0011B6  0100               	movlb	0	; () banked
  8658  0011B8  51CD               	movf	_ic_ptr& (0+255),w,b
  8659  0011BA  26D9               	addwf	fsr2l,f,c
  8660  0011BC  0100               	movlb	0	; () banked
  8661  0011BE  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8662  0011C0  22DA               	addwfc	fsr2h,f,c
  8663  0011C2  50DF               	movf	indf2,w,c
  8664  0011C4  0100               	movlb	0	; () banked
  8665  0011C6  6F80               	movwf	??_start_i2c_slave_reply& (0+255),b
  8666  0011C8  502F               	movf	start_i2c_slave_reply@length,w,c
  8667  0011CA  0100               	movlb	0	; () banked
  8668  0011CC  5D80               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  8669  0011CE  A0D8               	btfss	status,0,c
  8670  0011D0  D7B1               	goto	i2l4154
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;my_i2c.c: 96: }
  8674                           ;my_i2c.c: 97: ic_ptr->outbuflen = length;
  8675                           
  8676                           ; BSR set to: 0
  8677  0011D2  0100               	movlb	0	; () banked
  8678  0011D4  EE20 F01A          	lfsr	2,26
  8679  0011D8  0100               	movlb	0	; () banked
  8680  0011DA  51CD               	movf	_ic_ptr& (0+255),w,b
  8681  0011DC  26D9               	addwf	fsr2l,f,c
  8682  0011DE  0100               	movlb	0	; () banked
  8683  0011E0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8684  0011E2  22DA               	addwfc	fsr2h,f,c
  8685  0011E4  C02F  FFDF         	movff	start_i2c_slave_reply@length,indf2
  8686                           
  8687                           ;my_i2c.c: 98: ic_ptr->outbufind = 1;
  8688  0011E8  0100               	movlb	0	; () banked
  8689  0011EA  EE20 F01B          	lfsr	2,27
  8690  0011EE  0100               	movlb	0	; () banked
  8691  0011F0  51CD               	movf	_ic_ptr& (0+255),w,b
  8692  0011F2  26D9               	addwf	fsr2l,f,c
  8693  0011F4  0100               	movlb	0	; () banked
  8694  0011F6  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8695  0011F8  22DA               	addwfc	fsr2h,f,c
  8696  0011FA  0E01               	movlw	1
  8697  0011FC  6EDF               	movwf	indf2,c
  8698                           
  8699                           ;my_i2c.c: 101: SSPBUF = ic_ptr->outbuffer[0];
  8700  0011FE  0100               	movlb	0	; () banked
  8701  001200  EE20 F010          	lfsr	2,16
  8702  001204  0100               	movlb	0	; () banked
  8703  001206  51CD               	movf	_ic_ptr& (0+255),w,b
  8704  001208  26D9               	addwf	fsr2l,f,c
  8705  00120A  0100               	movlb	0	; () banked
  8706  00120C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8707  00120E  22DA               	addwfc	fsr2h,f,c
  8708  001210  50DF               	movf	indf2,w,c
  8709  001212  6EC9               	movwf	4041,c	;volatile
  8710                           
  8711                           ; BSR set to: 0
  8712                           ;my_i2c.c: 104: SSPCON1bits.CKP = 1;
  8713  001214  88C6               	bsf	4038,4,c	;volatile
  8714                           
  8715                           ; BSR set to: 0
  8716  001216  0012               	return	
  8717  001218                     __end_of_start_i2c_slave_reply:
  8718                           	opt stack 0
  8719                           pclatu	equ	0xFFB
  8720                           pclath	equ	0xFFA
  8721                           tblptru	equ	0xFF8
  8722                           tblptrh	equ	0xFF7
  8723                           tblptrl	equ	0xFF6
  8724                           tablat	equ	0xFF5
  8725                           prodh	equ	0xFF4
  8726                           prodl	equ	0xFF3
  8727                           intcon	equ	0xFF2
  8728                           intcon2	equ	0xFF1
  8729                           postinc0	equ	0xFEE
  8730                           fsr0h	equ	0xFEA
  8731                           fsr0l	equ	0xFE9
  8732                           wreg	equ	0xFE8
  8733                           indf1	equ	0xFE7
  8734                           postinc1	equ	0xFE6
  8735                           postdec1	equ	0xFE5
  8736                           fsr1h	equ	0xFE2
  8737                           fsr1l	equ	0xFE1
  8738                           bsr	equ	0xFE0
  8739                           indf2	equ	0xFDF
  8740                           postinc2	equ	0xFDE
  8741                           postdec2	equ	0xFDD
  8742                           fsr2h	equ	0xFDA
  8743                           fsr2l	equ	0xFD9
  8744                           status	equ	0xFD8
  8745                           
  8746 ;; *************** function _handle_start *****************
  8747 ;; Defined at:
  8748 ;;		line 110 in file "../src/my_i2c.c"
  8749 ;; Parameters:    Size  Location     Type
  8750 ;;  data_read       1    wreg     unsigned char 
  8751 ;; Auto vars:     Size  Location     Type
  8752 ;;  data_read       1   44[COMRAM] unsigned char 
  8753 ;; Return value:  Size  Location     Type
  8754 ;;		None               void
  8755 ;; Registers used:
  8756 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8757 ;; Tracked objects:
  8758 ;;		On entry : 0/0
  8759 ;;		On exit  : 0/0
  8760 ;;		Unchanged: 0/0
  8761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8762 ;;      Params:         0       0       0       0       0
  8763 ;;      Locals:         1       0       0       0       0
  8764 ;;      Temps:          0       0       0       0       0
  8765 ;;      Totals:         1       0       0       0       0
  8766 ;;Total ram usage:        1 bytes
  8767 ;; Hardware stack levels used:    1
  8768 ;; This function calls:
  8769 ;;		Nothing
  8770 ;; This function is called by:
  8771 ;;		_i2c_slave_int_handler
  8772 ;; This function uses a non-reentrant model
  8773 ;;
  8774                           
  8775                           	psect	text49
  8776  001302                     __ptext49:
  8777                           	opt stack 0
  8778  001302                     _handle_start:
  8779                           	opt stack 18
  8780                           
  8781                           ; BSR set to: 0
  8782                           ;incstack = 0
  8783                           ;handle_start@data_read stored from wreg
  8784  001302  CFE8 F02D          	movff	wreg,handle_start@data_read
  8785                           
  8786                           ;my_i2c.c: 111: ic_ptr->event_count = 1;
  8787  001306  0100               	movlb	0	; () banked
  8788  001308  EE20 F00C          	lfsr	2,12
  8789  00130C  0100               	movlb	0	; () banked
  8790  00130E  51CD               	movf	_ic_ptr& (0+255),w,b
  8791  001310  26D9               	addwf	fsr2l,f,c
  8792  001312  0100               	movlb	0	; () banked
  8793  001314  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8794  001316  22DA               	addwfc	fsr2h,f,c
  8795  001318  0E01               	movlw	1
  8796  00131A  6EDF               	movwf	indf2,c
  8797                           
  8798                           ;my_i2c.c: 112: ic_ptr->buflen = 0;
  8799  00131C  0100               	movlb	0	; () banked
  8800  00131E  EE20 F00A          	lfsr	2,10
  8801  001322  0100               	movlb	0	; () banked
  8802  001324  51CD               	movf	_ic_ptr& (0+255),w,b
  8803  001326  26D9               	addwf	fsr2l,f,c
  8804  001328  0100               	movlb	0	; () banked
  8805  00132A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8806  00132C  22DA               	addwfc	fsr2h,f,c
  8807  00132E  0E00               	movlw	0
  8808  001330  6EDF               	movwf	indf2,c
  8809                           
  8810                           ; BSR set to: 0
  8811                           ;my_i2c.c: 114: if (data_read) {
  8812  001332  502D               	movf	handle_start@data_read,w,c
  8813  001334  B4D8               	btfsc	status,2,c
  8814  001336  D03D               	goto	i2l3106
  8815                           
  8816                           ; BSR set to: 0
  8817                           ;my_i2c.c: 115: if (SSPSTATbits.D_A == 1) {
  8818  001338  AAC7               	btfss	4039,5,c	;volatile
  8819  00133A  D021               	goto	i2l303
  8820                           
  8821                           ; BSR set to: 0
  8822                           ;my_i2c.c: 118: ic_ptr->status = 0x5;
  8823  00133C  0100               	movlb	0	; () banked
  8824  00133E  EE20 F00D          	lfsr	2,13
  8825  001342  0100               	movlb	0	; () banked
  8826  001344  51CD               	movf	_ic_ptr& (0+255),w,b
  8827  001346  26D9               	addwf	fsr2l,f,c
  8828  001348  0100               	movlb	0	; () banked
  8829  00134A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8830  00134C  22DA               	addwfc	fsr2h,f,c
  8831  00134E  0E05               	movlw	5
  8832  001350  6EDF               	movwf	indf2,c
  8833                           
  8834                           ;my_i2c.c: 119: ic_ptr->error_count++;
  8835  001352  0100               	movlb	0	; () banked
  8836  001354  EE20 F00F          	lfsr	2,15
  8837  001358  0100               	movlb	0	; () banked
  8838  00135A  51CD               	movf	_ic_ptr& (0+255),w,b
  8839  00135C  26D9               	addwf	fsr2l,f,c
  8840  00135E  0100               	movlb	0	; () banked
  8841  001360  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8842  001362  22DA               	addwfc	fsr2h,f,c
  8843  001364  2ADF               	incf	indf2,f,c
  8844                           
  8845                           ;my_i2c.c: 120: ic_ptr->error_code = 0x5;
  8846  001366  0100               	movlb	0	; () banked
  8847  001368  EE20 F00E          	lfsr	2,14
  8848  00136C  0100               	movlb	0	; () banked
  8849  00136E  51CD               	movf	_ic_ptr& (0+255),w,b
  8850  001370  26D9               	addwf	fsr2l,f,c
  8851  001372  0100               	movlb	0	; () banked
  8852  001374  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8853  001376  22DA               	addwfc	fsr2h,f,c
  8854  001378  0E05               	movlw	5
  8855  00137A  6EDF               	movwf	indf2,c
  8856                           
  8857                           ;my_i2c.c: 121: } else {
  8858  00137C  0012               	return	
  8859  00137E                     i2l303:
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;my_i2c.c: 122: if (SSPSTATbits.R_W == 1) {
  8863  00137E  A4C7               	btfss	4039,2,c	;volatile
  8864  001380  D00C               	goto	i2l3104
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;my_i2c.c: 123: ic_ptr->status = 0x8;
  8868  001382  0100               	movlb	0	; () banked
  8869  001384  EE20 F00D          	lfsr	2,13
  8870  001388  0100               	movlb	0	; () banked
  8871  00138A  51CD               	movf	_ic_ptr& (0+255),w,b
  8872  00138C  26D9               	addwf	fsr2l,f,c
  8873  00138E  0100               	movlb	0	; () banked
  8874  001390  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8875  001392  22DA               	addwfc	fsr2h,f,c
  8876  001394  0E08               	movlw	8
  8877  001396  6EDF               	movwf	indf2,c
  8878                           
  8879                           ;my_i2c.c: 124: } else {
  8880  001398  0012               	return	
  8881  00139A                     i2l3104:
  8882                           
  8883                           ; BSR set to: 0
  8884                           ;my_i2c.c: 125: ic_ptr->status = 0x7;
  8885  00139A  0100               	movlb	0	; () banked
  8886  00139C  EE20 F00D          	lfsr	2,13
  8887  0013A0  0100               	movlb	0	; () banked
  8888  0013A2  51CD               	movf	_ic_ptr& (0+255),w,b
  8889  0013A4  26D9               	addwf	fsr2l,f,c
  8890  0013A6  0100               	movlb	0	; () banked
  8891  0013A8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8892  0013AA  22DA               	addwfc	fsr2h,f,c
  8893  0013AC  0E07               	movlw	7
  8894  0013AE  6EDF               	movwf	indf2,c
  8895  0013B0  0012               	return	
  8896  0013B2                     i2l3106:
  8897                           
  8898                           ; BSR set to: 0
  8899                           ;my_i2c.c: 129: ic_ptr->status = 0x6;
  8900  0013B2  0100               	movlb	0	; () banked
  8901  0013B4  EE20 F00D          	lfsr	2,13
  8902  0013B8  0100               	movlb	0	; () banked
  8903  0013BA  51CD               	movf	_ic_ptr& (0+255),w,b
  8904  0013BC  26D9               	addwf	fsr2l,f,c
  8905  0013BE  0100               	movlb	0	; () banked
  8906  0013C0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  8907  0013C2  22DA               	addwfc	fsr2h,f,c
  8908  0013C4  0E06               	movlw	6
  8909  0013C6  6EDF               	movwf	indf2,c
  8910  0013C8  0012               	return	
  8911  0013CA                     __end_of_handle_start:
  8912                           	opt stack 0
  8913                           pclatu	equ	0xFFB
  8914                           pclath	equ	0xFFA
  8915                           tblptru	equ	0xFF8
  8916                           tblptrh	equ	0xFF7
  8917                           tblptrl	equ	0xFF6
  8918                           tablat	equ	0xFF5
  8919                           prodh	equ	0xFF4
  8920                           prodl	equ	0xFF3
  8921                           intcon	equ	0xFF2
  8922                           intcon2	equ	0xFF1
  8923                           postinc0	equ	0xFEE
  8924                           fsr0h	equ	0xFEA
  8925                           fsr0l	equ	0xFE9
  8926                           wreg	equ	0xFE8
  8927                           indf1	equ	0xFE7
  8928                           postinc1	equ	0xFE6
  8929                           postdec1	equ	0xFE5
  8930                           fsr1h	equ	0xFE2
  8931                           fsr1l	equ	0xFE1
  8932                           bsr	equ	0xFE0
  8933                           indf2	equ	0xFDF
  8934                           postinc2	equ	0xFDE
  8935                           postdec2	equ	0xFDD
  8936                           fsr2h	equ	0xFDA
  8937                           fsr2l	equ	0xFD9
  8938                           status	equ	0xFD8
  8939                           
  8940 ;; *************** function _ToMainHigh_sendmsg *****************
  8941 ;; Defined at:
  8942 ;;		line 126 in file "../src/messages.c"
  8943 ;; Parameters:    Size  Location     Type
  8944 ;;  length          1    wreg     unsigned char 
  8945 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8946 ;;  data            2   23[BANK0 ] PTR void 
  8947 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), 
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;  length          1   25[BANK0 ] unsigned char 
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  1    wreg      char 
  8952 ;; Registers used:
  8953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8959 ;;      Params:         0       3       0       0       0
  8960 ;;      Locals:         0       1       0       0       0
  8961 ;;      Temps:          0       0       0       0       0
  8962 ;;      Totals:         0       4       0       0       0
  8963 ;;Total ram usage:        4 bytes
  8964 ;; Hardware stack levels used:    1
  8965 ;; Hardware stack levels required when called:    2
  8966 ;; This function calls:
  8967 ;;		i2_send_msg
  8968 ;; This function is called by:
  8969 ;;		_i2c_slave_int_handler
  8970 ;;		_i2c_master_int_handler
  8971 ;; This function uses a non-reentrant model
  8972 ;;
  8973                           
  8974                           	psect	text50
  8975  001FC2                     __ptext50:
  8976                           	opt stack 0
  8977  001FC2                     _ToMainHigh_sendmsg:
  8978                           	opt stack 16
  8979                           
  8980                           ; BSR set to: 0
  8981                           ;incstack = 0
  8982                           ;ToMainHigh_sendmsg@length stored from wreg
  8983  001FC2  CFE8 F099          	movff	wreg,ToMainHigh_sendmsg@length
  8984                           
  8985                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8986                           ;	Return value of _ToMainHigh_sendmsg is never used
  8987  001FC6  0101               	movlb	1	; () banked
  8988  001FC8  0E01               	movlw	high _ToMainHigh_MQ
  8989  001FCA  0100               	movlb	0	; () banked
  8990  001FCC  0100               	movlb	0	; () banked
  8991  001FCE  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8992  001FD0  0101               	movlb	1	; () banked
  8993  001FD2  0E00               	movlw	low _ToMainHigh_MQ
  8994  001FD4  0100               	movlb	0	; () banked
  8995  001FD6  0100               	movlb	0	; () banked
  8996  001FD8  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  8997  001FDA  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8998  001FDE  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8999  001FE2  0100               	movlb	0	; () banked
  9000  001FE4  0100               	movlb	0	; () banked
  9001  001FE6  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  9002  001FEA  0100               	movlb	0	; () banked
  9003  001FEC  0100               	movlb	0	; () banked
  9004  001FEE  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  9005  001FF2  EC6F  F007         	call	i2_send_msg	;wreg free
  9006  001FF6  0012               	return	
  9007  001FF8                     __end_of_ToMainHigh_sendmsg:
  9008                           	opt stack 0
  9009                           pclatu	equ	0xFFB
  9010                           pclath	equ	0xFFA
  9011                           tblptru	equ	0xFF8
  9012                           tblptrh	equ	0xFF7
  9013                           tblptrl	equ	0xFF6
  9014                           tablat	equ	0xFF5
  9015                           prodh	equ	0xFF4
  9016                           prodl	equ	0xFF3
  9017                           intcon	equ	0xFF2
  9018                           intcon2	equ	0xFF1
  9019                           postinc0	equ	0xFEE
  9020                           fsr0h	equ	0xFEA
  9021                           fsr0l	equ	0xFE9
  9022                           wreg	equ	0xFE8
  9023                           indf1	equ	0xFE7
  9024                           postinc1	equ	0xFE6
  9025                           postdec1	equ	0xFE5
  9026                           fsr1h	equ	0xFE2
  9027                           fsr1l	equ	0xFE1
  9028                           bsr	equ	0xFE0
  9029                           indf2	equ	0xFDF
  9030                           postinc2	equ	0xFDE
  9031                           postdec2	equ	0xFDD
  9032                           fsr2h	equ	0xFDA
  9033                           fsr2l	equ	0xFD9
  9034                           status	equ	0xFD8
  9035                           
  9036 ;; *************** function i2_send_msg *****************
  9037 ;; Defined at:
  9038 ;;		line 24 in file "../src/messages.c"
  9039 ;; Parameters:    Size  Location     Type
  9040 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  9041 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9042 ;;  length          1   12[BANK0 ] unsigned char 
  9043 ;;  msgtype         1   13[BANK0 ] unsigned char 
  9044 ;;  data            2   14[BANK0 ] PTR void 
  9045 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  9046 ;;		 -> main@uc(13), 
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  9049 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  9050 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9051 ;;  send_msg        2   17[BANK0 ] unsigned int 
  9052 ;;  send_msg        1   19[BANK0 ] unsigned char 
  9053 ;; Return value:  Size  Location     Type
  9054 ;;                  1    wreg      char 
  9055 ;; Registers used:
  9056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9057 ;; Tracked objects:
  9058 ;;		On entry : 0/0
  9059 ;;		On exit  : 0/0
  9060 ;;		Unchanged: 0/0
  9061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9062 ;;      Params:         0       6       0       0       0
  9063 ;;      Locals:         0       5       0       0       0
  9064 ;;      Temps:          0       1       0       0       0
  9065 ;;      Totals:         0      12       0       0       0
  9066 ;;Total ram usage:       12 bytes
  9067 ;; Hardware stack levels used:    1
  9068 ;; Hardware stack levels required when called:    1
  9069 ;; This function calls:
  9070 ;;		i2___awmod
  9071 ;;		i2_memcpy
  9072 ;; This function is called by:
  9073 ;;		_ToMainHigh_sendmsg
  9074 ;; This function uses a non-reentrant model
  9075 ;;
  9076                           
  9077                           	psect	text51
  9078  000EDE                     __ptext51:
  9079                           	opt stack 0
  9080  000EDE                     i2_send_msg:
  9081                           	opt stack 16
  9082                           
  9083                           ;messages.c: 25: unsigned char slot;
  9084                           ;messages.c: 27: msg *qmsg;
  9085                           ;messages.c: 28: size_t tlength = length;
  9086                           
  9087                           ;incstack = 0
  9088  000EDE  0100               	movlb	0	; () banked
  9089  000EE0  0100               	movlb	0	; () banked
  9090  000EE2  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  9091  000EE6  0100               	movlb	0	; () banked
  9092  000EE8  0100               	movlb	0	; () banked
  9093  000EEA  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  9094                           
  9095                           ; BSR set to: 0
  9096                           ;messages.c: 38: slot = qptr->cur_write_ind;
  9097  000EEC  0100               	movlb	0	; () banked
  9098  000EEE  EE20 F041          	lfsr	2,65
  9099  000EF2  0100               	movlb	0	; () banked
  9100  000EF4  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9101  000EF6  26D9               	addwf	fsr2l,f,c
  9102  000EF8  0100               	movlb	0	; () banked
  9103  000EFA  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9104  000EFC  22DA               	addwfc	fsr2h,f,c
  9105  000EFE  50DF               	movf	indf2,w,c
  9106  000F00  0100               	movlb	0	; () banked
  9107  000F02  0100               	movlb	0	; () banked
  9108  000F04  6F93               	movwf	i2send_msg@slot& (0+255),b
  9109                           
  9110                           ; BSR set to: 0
  9111                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  9112  000F06  0100               	movlb	0	; () banked
  9113  000F08  0100               	movlb	0	; () banked
  9114  000F0A  5193               	movf	i2send_msg@slot& (0+255),w,b
  9115  000F0C  0D0D               	mullw	13
  9116  000F0E  50F3               	movf	prodl,w,c
  9117  000F10  0100               	movlb	0	; () banked
  9118  000F12  0100               	movlb	0	; () banked
  9119  000F14  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  9120  000F16  0100               	movlb	0	; () banked
  9121  000F18  0100               	movlb	0	; () banked
  9122  000F1A  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  9123  000F1C  50F4               	movf	prodh,w,c
  9124  000F1E  0100               	movlb	0	; () banked
  9125  000F20  0100               	movlb	0	; () banked
  9126  000F22  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  9127  000F24  0100               	movlb	0	; () banked
  9128  000F26  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;messages.c: 41: if (qmsg->full != 0) {
  9132  000F28  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9133  000F2C  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9134  000F30  50DF               	movf	indf2,w,c
  9135  000F32  B4D8               	btfsc	status,2,c
  9136  000F34  D002               	goto	i2l4484
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;messages.c: 42: return (-1);
  9140  000F36  0EFF               	movlw	255
  9141  000F38  0012               	return	
  9142  000F3A                     i2l4484:
  9143                           
  9144                           ; BSR set to: 0
  9145                           ;messages.c: 43: }
  9146                           ;messages.c: 46: qmsg->length = length;
  9147  000F3A  0100               	movlb	0	; () banked
  9148  000F3C  EE20 F001          	lfsr	2,1
  9149  000F40  0100               	movlb	0	; () banked
  9150  000F42  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  9151  000F44  26D9               	addwf	fsr2l,f,c
  9152  000F46  0100               	movlb	0	; () banked
  9153  000F48  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9154  000F4A  22DA               	addwfc	fsr2h,f,c
  9155  000F4C  0100               	movlb	0	; () banked
  9156  000F4E  C08C  FFDF         	movff	i2send_msg@length,indf2
  9157                           
  9158                           ;messages.c: 47: qmsg->msgtype = msgtype;
  9159  000F52  0100               	movlb	0	; () banked
  9160  000F54  EE20 F002          	lfsr	2,2
  9161  000F58  0100               	movlb	0	; () banked
  9162  000F5A  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  9163  000F5C  26D9               	addwf	fsr2l,f,c
  9164  000F5E  0100               	movlb	0	; () banked
  9165  000F60  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9166  000F62  22DA               	addwfc	fsr2h,f,c
  9167  000F64  0100               	movlb	0	; () banked
  9168  000F66  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  9169                           
  9170                           ; BSR set to: 0
  9171                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9172  000F6A  0E03               	movlw	3
  9173  000F6C  0100               	movlb	0	; () banked
  9174  000F6E  0100               	movlb	0	; () banked
  9175  000F70  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  9176  000F72  0100               	movlb	0	; () banked
  9177  000F74  0100               	movlb	0	; () banked
  9178  000F76  6F80               	movwf	i2memcpy@d1& (0+255),b
  9179  000F78  0E00               	movlw	0
  9180  000F7A  0100               	movlb	0	; () banked
  9181  000F7C  0100               	movlb	0	; () banked
  9182  000F7E  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  9183  000F80  0100               	movlb	0	; () banked
  9184  000F82  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  9185  000F84  0100               	movlb	0	; () banked
  9186  000F86  0100               	movlb	0	; () banked
  9187  000F88  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9188  000F8C  0100               	movlb	0	; () banked
  9189  000F8E  0100               	movlb	0	; () banked
  9190  000F90  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  9191  000F94  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  9192  000F98  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9193  000F9C  EC6F  F00E         	call	i2_memcpy	;wreg free
  9194                           
  9195                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  9196  000FA0  0100               	movlb	0	; () banked
  9197  000FA2  EE20 F041          	lfsr	2,65
  9198  000FA6  0100               	movlb	0	; () banked
  9199  000FA8  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9200  000FAA  26D9               	addwf	fsr2l,f,c
  9201  000FAC  0100               	movlb	0	; () banked
  9202  000FAE  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9203  000FB0  22DA               	addwfc	fsr2h,f,c
  9204  000FB2  0100               	movlb	0	; () banked
  9205  000FB4  EE10 F041          	lfsr	1,65
  9206  000FB8  0100               	movlb	0	; () banked
  9207  000FBA  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9208  000FBC  26E1               	addwf	fsr1l,f,c
  9209  000FBE  0100               	movlb	0	; () banked
  9210  000FC0  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9211  000FC2  22E2               	addwfc	fsr1h,f,c
  9212  000FC4  50E7               	movf	indf1,w,c
  9213  000FC6  0100               	movlb	0	; () banked
  9214  000FC8  6F90               	movwf	??i2_send_msg& (0+255),b
  9215  000FCA  0E01               	movlw	1
  9216  000FCC  0100               	movlb	0	; () banked
  9217  000FCE  2590               	addwf	??i2_send_msg& (0+255),w,b
  9218  000FD0  0100               	movlb	0	; () banked
  9219  000FD2  0100               	movlb	0	; () banked
  9220  000FD4  6F80               	movwf	i2___awmod@dividend& (0+255),b
  9221  000FD6  0100               	movlb	0	; () banked
  9222  000FD8  0100               	movlb	0	; () banked
  9223  000FDA  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  9224  000FDC  0E00               	movlw	0
  9225  000FDE  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  9226  000FE0  0E00               	movlw	0
  9227  000FE2  0100               	movlb	0	; () banked
  9228  000FE4  0100               	movlb	0	; () banked
  9229  000FE6  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  9230  000FE8  0E05               	movlw	5
  9231  000FEA  0100               	movlb	0	; () banked
  9232  000FEC  6F82               	movwf	i2___awmod@divisor& (0+255),b
  9233  000FEE  EC0C  F009         	call	i2___awmod	;wreg free
  9234  000FF2  0100               	movlb	0	; () banked
  9235  000FF4  0100               	movlb	0	; () banked
  9236  000FF6  5180               	movf	?i2___awmod& (0+255),w,b
  9237  000FF8  6EDF               	movwf	indf2,c
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;messages.c: 59: qmsg->full = 1;
  9241  000FFA  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9242  000FFE  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9243  001002  0E01               	movlw	1
  9244  001004  6EDF               	movwf	indf2,c
  9245                           
  9246                           ; BSR set to: 0
  9247                           ;messages.c: 60: return (1);
  9248  001006  0E01               	movlw	1
  9249  001008  0012               	return	
  9250  00100A                     __end_ofi2_send_msg:
  9251                           	opt stack 0
  9252                           pclatu	equ	0xFFB
  9253                           pclath	equ	0xFFA
  9254                           tblptru	equ	0xFF8
  9255                           tblptrh	equ	0xFF7
  9256                           tblptrl	equ	0xFF6
  9257                           tablat	equ	0xFF5
  9258                           prodh	equ	0xFF4
  9259                           prodl	equ	0xFF3
  9260                           intcon	equ	0xFF2
  9261                           intcon2	equ	0xFF1
  9262                           postinc0	equ	0xFEE
  9263                           fsr0h	equ	0xFEA
  9264                           fsr0l	equ	0xFE9
  9265                           wreg	equ	0xFE8
  9266                           indf1	equ	0xFE7
  9267                           postinc1	equ	0xFE6
  9268                           postdec1	equ	0xFE5
  9269                           fsr1h	equ	0xFE2
  9270                           fsr1l	equ	0xFE1
  9271                           bsr	equ	0xFE0
  9272                           indf2	equ	0xFDF
  9273                           postinc2	equ	0xFDE
  9274                           postdec2	equ	0xFDD
  9275                           fsr2h	equ	0xFDA
  9276                           fsr2l	equ	0xFD9
  9277                           status	equ	0xFD8
  9278                           
  9279 ;; *************** function i2_memcpy *****************
  9280 ;; Defined at:
  9281 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  9282 ;; Parameters:    Size  Location     Type
  9283 ;;  d1              2    0[BANK0 ] PTR void 
  9284 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  9285 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9286 ;;		 -> main@msgbuffer(11), 
  9287 ;;  s1              2    2[BANK0 ] PTR const void 
  9288 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9289 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9290 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  9291 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  9292 ;;		 -> main@uc(13), 
  9293 ;;  n               2    4[BANK0 ] unsigned int 
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9296 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9297 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9298 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  9299 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  9300 ;;		 -> main@uc(13), 
  9301 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9302 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  9303 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9304 ;;		 -> main@msgbuffer(11), 
  9305 ;; Return value:  Size  Location     Type
  9306 ;;                  2    0[BANK0 ] PTR void 
  9307 ;; Registers used:
  9308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9309 ;; Tracked objects:
  9310 ;;		On entry : 0/0
  9311 ;;		On exit  : 0/0
  9312 ;;		Unchanged: 0/0
  9313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9314 ;;      Params:         0       6       0       0       0
  9315 ;;      Locals:         0       4       0       0       0
  9316 ;;      Temps:          0       0       0       0       0
  9317 ;;      Totals:         0      10       0       0       0
  9318 ;;Total ram usage:       10 bytes
  9319 ;; Hardware stack levels used:    1
  9320 ;; This function calls:
  9321 ;;		Nothing
  9322 ;; This function is called by:
  9323 ;;		i2_send_msg
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327                           	psect	text52
  9328  001CDE                     __ptext52:
  9329                           	opt stack 0
  9330  001CDE                     i2_memcpy:
  9331                           	opt stack 16
  9332                           
  9333                           ; BSR set to: 0
  9334                           ;incstack = 0
  9335  001CDE  0100               	movlb	0	; () banked
  9336  001CE0  0100               	movlb	0	; () banked
  9337  001CE2  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9338  001CE6  0100               	movlb	0	; () banked
  9339  001CE8  0100               	movlb	0	; () banked
  9340  001CEA  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  9341  001CEE  0100               	movlb	0	; () banked
  9342  001CF0  0100               	movlb	0	; () banked
  9343  001CF2  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9344  001CF6  0100               	movlb	0	; () banked
  9345  001CF8  0100               	movlb	0	; () banked
  9346  001CFA  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  9347  001CFE  D012               	goto	i2l4516
  9348  001D00                     i2l4510:
  9349                           
  9350                           ; BSR set to: 0
  9351  001D00  C088  FFD9         	movff	i2memcpy@s,fsr2l
  9352  001D04  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  9353  001D08  C086  FFE1         	movff	i2memcpy@d,fsr1l
  9354  001D0C  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  9355  001D10  CFDF FFE7          	movff	indf2,indf1
  9356                           
  9357                           ; BSR set to: 0
  9358  001D14  0100               	movlb	0	; () banked
  9359  001D16  0100               	movlb	0	; () banked
  9360  001D18  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  9361  001D1A  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  9362                           
  9363                           ; BSR set to: 0
  9364  001D1C  0100               	movlb	0	; () banked
  9365  001D1E  0100               	movlb	0	; () banked
  9366  001D20  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  9367  001D22  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  9368  001D24                     i2l4516:
  9369                           
  9370                           ; BSR set to: 0
  9371  001D24  0100               	movlb	0	; () banked
  9372  001D26  0100               	movlb	0	; () banked
  9373  001D28  0784               	decf	i2memcpy@n& (0+255),f,b
  9374  001D2A  A0D8               	btfss	status,0,c
  9375  001D2C  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  9376  001D2E  0100               	movlb	0	; () banked
  9377  001D30  2984               	incf	i2memcpy@n& (0+255),w,b
  9378  001D32  B4D8               	btfsc	status,2,c
  9379  001D34  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  9380  001D36  B4D8               	btfsc	status,2,c
  9381                           
  9382                           ; BSR set to: 0
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;	Return value of i2_memcpy is never used
  9386  001D38  0012               	return	
  9387  001D3A  D7E2               	goto	i2l4510
  9388  001D3C                     __end_ofi2_memcpy:
  9389                           	opt stack 0
  9390                           pclatu	equ	0xFFB
  9391                           pclath	equ	0xFFA
  9392                           tblptru	equ	0xFF8
  9393                           tblptrh	equ	0xFF7
  9394                           tblptrl	equ	0xFF6
  9395                           tablat	equ	0xFF5
  9396                           prodh	equ	0xFF4
  9397                           prodl	equ	0xFF3
  9398                           intcon	equ	0xFF2
  9399                           intcon2	equ	0xFF1
  9400                           postinc0	equ	0xFEE
  9401                           fsr0h	equ	0xFEA
  9402                           fsr0l	equ	0xFE9
  9403                           wreg	equ	0xFE8
  9404                           indf1	equ	0xFE7
  9405                           postinc1	equ	0xFE6
  9406                           postdec1	equ	0xFE5
  9407                           fsr1h	equ	0xFE2
  9408                           fsr1l	equ	0xFE1
  9409                           bsr	equ	0xFE0
  9410                           indf2	equ	0xFDF
  9411                           postinc2	equ	0xFDE
  9412                           postdec2	equ	0xFDD
  9413                           fsr2h	equ	0xFDA
  9414                           fsr2l	equ	0xFD9
  9415                           status	equ	0xFD8
  9416                           
  9417 ;; *************** function i2___awmod *****************
  9418 ;; Defined at:
  9419 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;  dividend        2    0[BANK0 ] int 
  9422 ;;  divisor         2    2[BANK0 ] int 
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;  __awmod         1   46[COMRAM] unsigned char 
  9425 ;;  __awmod         1   45[COMRAM] unsigned char 
  9426 ;; Return value:  Size  Location     Type
  9427 ;;                  2    0[BANK0 ] int 
  9428 ;; Registers used:
  9429 ;;		wreg, status,2, status,0, prodl
  9430 ;; Tracked objects:
  9431 ;;		On entry : 0/0
  9432 ;;		On exit  : 0/0
  9433 ;;		Unchanged: 0/0
  9434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9435 ;;      Params:         0       4       0       0       0
  9436 ;;      Locals:         2       0       0       0       0
  9437 ;;      Temps:          1       0       0       0       0
  9438 ;;      Totals:         3       4       0       0       0
  9439 ;;Total ram usage:        7 bytes
  9440 ;; Hardware stack levels used:    1
  9441 ;; This function calls:
  9442 ;;		Nothing
  9443 ;; This function is called by:
  9444 ;;		i2_send_msg
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           	psect	text53
  9449  001218                     __ptext53:
  9450                           	opt stack 0
  9451  001218                     i2___awmod:
  9452                           	opt stack 16
  9453                           
  9454                           ; BSR set to: 0
  9455                           ;incstack = 0
  9456  001218  6E2D               	movwf	??i2___awmod& (0+255),c
  9457  00121A  0E00               	movlw	0
  9458  00121C  6E2F               	movwf	i2___awmod@sign,c
  9459  00121E  502D               	movf	??i2___awmod& (0+255),w,c
  9460  001220  0100               	movlb	0	; () banked
  9461  001222  0100               	movlb	0	; () banked
  9462  001224  5181               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  9463  001226  0A80               	xorlw	128
  9464  001228  6EF3               	movwf	prodl,c
  9465  00122A  0E80               	movlw	128
  9466  00122C  5CF3               	subwf	prodl,w,c
  9467  00122E  0E00               	movlw	0
  9468  001230  B4D8               	btfsc	status,2,c
  9469  001232  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9470  001234  B0D8               	btfsc	status,0,c
  9471  001236  D00B               	goto	i2l4526
  9472                           
  9473                           ; BSR set to: 0
  9474  001238  0100               	movlb	0	; () banked
  9475  00123A  0100               	movlb	0	; () banked
  9476  00123C  6D80               	negf	i2___awmod@dividend& (0+255),b
  9477  00123E  0100               	movlb	0	; () banked
  9478  001240  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9479  001242  B0D8               	btfsc	status,0,c
  9480  001244  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9481                           
  9482                           ; BSR set to: 0
  9483  001246  6E2D               	movwf	??i2___awmod& (0+255),c
  9484  001248  0E01               	movlw	1
  9485  00124A  6E2F               	movwf	i2___awmod@sign,c
  9486  00124C  502D               	movf	??i2___awmod& (0+255),w,c
  9487  00124E                     i2l4526:
  9488                           
  9489                           ; BSR set to: 0
  9490  00124E  0100               	movlb	0	; () banked
  9491  001250  0100               	movlb	0	; () banked
  9492  001252  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9493  001254  0A80               	xorlw	128
  9494  001256  6EF3               	movwf	prodl,c
  9495  001258  0E80               	movlw	128
  9496  00125A  5CF3               	subwf	prodl,w,c
  9497  00125C  0E00               	movlw	0
  9498  00125E  B4D8               	btfsc	status,2,c
  9499  001260  5D82               	subwf	i2___awmod@divisor& (0+255),w,b
  9500  001262  B0D8               	btfsc	status,0,c
  9501  001264  D007               	goto	i2l4530
  9502                           
  9503                           ; BSR set to: 0
  9504  001266  0100               	movlb	0	; () banked
  9505  001268  0100               	movlb	0	; () banked
  9506  00126A  6D82               	negf	i2___awmod@divisor& (0+255),b
  9507  00126C  0100               	movlb	0	; () banked
  9508  00126E  1F83               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  9509  001270  B0D8               	btfsc	status,0,c
  9510  001272  2B83               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  9511  001274                     i2l4530:
  9512                           
  9513                           ; BSR set to: 0
  9514  001274  0100               	movlb	0	; () banked
  9515  001276  0100               	movlb	0	; () banked
  9516  001278  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9517  00127A  1182               	iorwf	i2___awmod@divisor& (0+255),w,b
  9518  00127C  B4D8               	btfsc	status,2,c
  9519  00127E  D032               	goto	i2l4546
  9520                           
  9521                           ; BSR set to: 0
  9522  001280  6E2D               	movwf	??i2___awmod& (0+255),c
  9523  001282  0E01               	movlw	1
  9524  001284  6E2E               	movwf	i2___awmod@counter,c
  9525  001286  502D               	movf	??i2___awmod& (0+255),w,c
  9526  001288  D007               	goto	i2l4536
  9527  00128A                     i2l4534:
  9528                           
  9529                           ; BSR set to: 0
  9530  00128A  0100               	movlb	0	; () banked
  9531  00128C  0100               	movlb	0	; () banked
  9532  00128E  0100               	movlb	0	; () banked
  9533  001290  90D8               	bcf	status,0,c
  9534  001292  3782               	rlcf	i2___awmod@divisor& (0+255),f,b
  9535  001294  3783               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  9536  001296  2A2E               	incf	i2___awmod@counter,f,c
  9537  001298                     i2l4536:
  9538                           
  9539                           ; BSR set to: 0
  9540  001298  0100               	movlb	0	; () banked
  9541  00129A  0100               	movlb	0	; () banked
  9542  00129C  AF83               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  9543  00129E  D7F5               	goto	i2l4534
  9544  0012A0                     i2l4538:
  9545                           
  9546                           ; BSR set to: 0
  9547  0012A0  0100               	movlb	0	; () banked
  9548  0012A2  0100               	movlb	0	; () banked
  9549  0012A4  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9550  0012A6  0100               	movlb	0	; () banked
  9551  0012A8  0100               	movlb	0	; () banked
  9552  0012AA  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9553  0012AC  0100               	movlb	0	; () banked
  9554  0012AE  0100               	movlb	0	; () banked
  9555  0012B0  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9556  0012B2  0100               	movlb	0	; () banked
  9557  0012B4  0100               	movlb	0	; () banked
  9558  0012B6  5981               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  9559  0012B8  A0D8               	btfss	status,0,c
  9560  0012BA  D00C               	goto	i2l4542
  9561                           
  9562                           ; BSR set to: 0
  9563  0012BC  0100               	movlb	0	; () banked
  9564  0012BE  0100               	movlb	0	; () banked
  9565  0012C0  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9566  0012C2  0100               	movlb	0	; () banked
  9567  0012C4  0100               	movlb	0	; () banked
  9568  0012C6  5F80               	subwf	i2___awmod@dividend& (0+255),f,b
  9569  0012C8  0100               	movlb	0	; () banked
  9570  0012CA  0100               	movlb	0	; () banked
  9571  0012CC  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9572  0012CE  0100               	movlb	0	; () banked
  9573  0012D0  0100               	movlb	0	; () banked
  9574  0012D2  5B81               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  9575  0012D4                     i2l4542:
  9576                           
  9577                           ; BSR set to: 0
  9578  0012D4  0100               	movlb	0	; () banked
  9579  0012D6  0100               	movlb	0	; () banked
  9580  0012D8  0100               	movlb	0	; () banked
  9581  0012DA  90D8               	bcf	status,0,c
  9582  0012DC  3383               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  9583  0012DE  3382               	rrcf	i2___awmod@divisor& (0+255),f,b
  9584                           
  9585                           ; BSR set to: 0
  9586  0012E0  2E2E               	decfsz	i2___awmod@counter,f,c
  9587  0012E2  D7DE               	goto	i2l4538
  9588  0012E4                     i2l4546:
  9589                           
  9590                           ; BSR set to: 0
  9591  0012E4  502F               	movf	i2___awmod@sign,w,c
  9592  0012E6  B4D8               	btfsc	status,2,c
  9593  0012E8  D007               	goto	i2l4550
  9594                           
  9595                           ; BSR set to: 0
  9596  0012EA  0100               	movlb	0	; () banked
  9597  0012EC  0100               	movlb	0	; () banked
  9598  0012EE  6D80               	negf	i2___awmod@dividend& (0+255),b
  9599  0012F0  0100               	movlb	0	; () banked
  9600  0012F2  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9601  0012F4  B0D8               	btfsc	status,0,c
  9602  0012F6  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9603  0012F8                     i2l4550:
  9604                           
  9605                           ; BSR set to: 0
  9606  0012F8  C080  F080         	movff	i2___awmod@dividend,?i2___awmod
  9607  0012FC  C081  F081         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9608  001300  0012               	return	
  9609  001302                     __end_ofi2___awmod:
  9610                           	opt stack 0
  9611                           pclatu	equ	0xFFB
  9612                           pclath	equ	0xFFA
  9613                           tblptru	equ	0xFF8
  9614                           tblptrh	equ	0xFF7
  9615                           tblptrl	equ	0xFF6
  9616                           tablat	equ	0xFF5
  9617                           prodh	equ	0xFF4
  9618                           prodl	equ	0xFF3
  9619                           intcon	equ	0xFF2
  9620                           intcon2	equ	0xFF1
  9621                           postinc0	equ	0xFEE
  9622                           fsr0h	equ	0xFEA
  9623                           fsr0l	equ	0xFE9
  9624                           wreg	equ	0xFE8
  9625                           indf1	equ	0xFE7
  9626                           postinc1	equ	0xFE6
  9627                           postdec1	equ	0xFE5
  9628                           fsr1h	equ	0xFE2
  9629                           fsr1l	equ	0xFE1
  9630                           bsr	equ	0xFE0
  9631                           indf2	equ	0xFDF
  9632                           postinc2	equ	0xFDE
  9633                           postdec2	equ	0xFDD
  9634                           fsr2h	equ	0xFDA
  9635                           fsr2l	equ	0xFD9
  9636                           status	equ	0xFD8
  9637                           
  9638 ;; *************** function _SleepIfOkay *****************
  9639 ;; Defined at:
  9640 ;;		line 228 in file "../src/messages.c"
  9641 ;; Parameters:    Size  Location     Type
  9642 ;;		None
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;		None
  9645 ;; Return value:  Size  Location     Type
  9646 ;;		None               void
  9647 ;; Registers used:
  9648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9654 ;;      Params:         0       0       0       0       0
  9655 ;;      Locals:         0       0       0       0       0
  9656 ;;      Temps:          0       0       0       0       0
  9657 ;;      Totals:         0       0       0       0       0
  9658 ;;Total ram usage:        0 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; Hardware stack levels required when called:    2
  9661 ;; This function calls:
  9662 ;;		_enter_sleep_mode
  9663 ;;		i2_check_msg
  9664 ;;		i2_in_high_int
  9665 ;;		i2_in_low_int
  9666 ;; This function is called by:
  9667 ;;		_InterruptHandlerHigh
  9668 ;; This function uses a non-reentrant model
  9669 ;;
  9670                           
  9671                           	psect	text54
  9672  001D3C                     __ptext54:
  9673                           	opt stack 0
  9674  001D3C                     _SleepIfOkay:
  9675                           	opt stack 18
  9676                           
  9677                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;incstack = 0
  9681  001D3C  6650               	tstfsz	_MQ_Main_Willing_to_block,c
  9682  001D3E  D001               	goto	i2l3720
  9683  001D40  0012               	return	
  9684  001D42                     i2l3720:
  9685                           
  9686                           ;messages.c: 232: }
  9687                           ;messages.c: 235: if (in_low_int()) {
  9688  001D42  EC6F  F00F         	call	i2_in_low_int	;wreg free
  9689  001D46  0100               	movlb	0	; () banked
  9690  001D48  0100               	movlb	0	; () banked
  9691  001D4A  5181               	movf	(?i2_in_low_int+1)& (0+255),w,b
  9692  001D4C  0100               	movlb	0	; () banked
  9693  001D4E  1180               	iorwf	?i2_in_low_int& (0+255),w,b
  9694  001D50  A4D8               	btfss	status,2,c
  9695  001D52  0012               	return	
  9696                           
  9697                           ; BSR set to: 0
  9698                           ;messages.c: 237: }
  9699                           ;messages.c: 240: if (!in_high_int()) {
  9700                           
  9701                           ; BSR set to: 0
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;messages.c: 236: return;
  9705  001D54  ECE4  F010         	call	i2_in_high_int	;wreg free
  9706  001D58  502E               	movf	?i2_in_high_int+1,w,c
  9707  001D5A  102D               	iorwf	?i2_in_high_int,w,c
  9708  001D5C  B4D8               	btfsc	status,2,c
  9709  001D5E  0012               	return	
  9710                           
  9711                           ;messages.c: 242: }
  9712                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  9713                           
  9714                           ;messages.c: 241: return;
  9715  001D60  0101               	movlb	1	; () banked
  9716  001D62  0E01               	movlw	high _ToMainHigh_MQ
  9717  001D64  6E2E               	movwf	i2check_msg@qptr+1,c
  9718  001D66  0101               	movlb	1	; () banked
  9719  001D68  0E00               	movlw	low _ToMainHigh_MQ
  9720  001D6A  6E2D               	movwf	i2check_msg@qptr,c
  9721  001D6C  EC4E  F010         	call	i2_check_msg	;wreg free
  9722  001D70  0900               	iorlw	0
  9723  001D72  A4D8               	btfss	status,2,c
  9724  001D74  0012               	return	
  9725                           
  9726                           ;messages.c: 249: }
  9727                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  9728                           
  9729                           ;messages.c: 248: return;
  9730  001D76  0101               	movlb	1	; () banked
  9731  001D78  0E01               	movlw	high _ToMainLow_MQ
  9732  001D7A  6E2E               	movwf	i2check_msg@qptr+1,c
  9733  001D7C  0101               	movlb	1	; () banked
  9734  001D7E  0E43               	movlw	low _ToMainLow_MQ
  9735  001D80  6E2D               	movwf	i2check_msg@qptr,c
  9736  001D82  EC4E  F010         	call	i2_check_msg	;wreg free
  9737  001D86  0900               	iorlw	0
  9738  001D88  B4D8               	btfsc	status,2,c
  9739                           
  9740                           ;messages.c: 252: }
  9741                           ;messages.c: 253: enter_sleep_mode();
  9742                           
  9743                           ;messages.c: 251: return;
  9744  001D8A  ECF1  F010         	call	_enter_sleep_mode	;wreg free
  9745  001D8E  0012               	return	
  9746  001D90                     __end_of_SleepIfOkay:
  9747                           	opt stack 0
  9748                           pclatu	equ	0xFFB
  9749                           pclath	equ	0xFFA
  9750                           tblptru	equ	0xFF8
  9751                           tblptrh	equ	0xFF7
  9752                           tblptrl	equ	0xFF6
  9753                           tablat	equ	0xFF5
  9754                           prodh	equ	0xFF4
  9755                           prodl	equ	0xFF3
  9756                           intcon	equ	0xFF2
  9757                           intcon2	equ	0xFF1
  9758                           postinc0	equ	0xFEE
  9759                           fsr0h	equ	0xFEA
  9760                           fsr0l	equ	0xFE9
  9761                           wreg	equ	0xFE8
  9762                           indf1	equ	0xFE7
  9763                           postinc1	equ	0xFE6
  9764                           postdec1	equ	0xFE5
  9765                           fsr1h	equ	0xFE2
  9766                           fsr1l	equ	0xFE1
  9767                           bsr	equ	0xFE0
  9768                           indf2	equ	0xFDF
  9769                           postinc2	equ	0xFDE
  9770                           postdec2	equ	0xFDD
  9771                           fsr2h	equ	0xFDA
  9772                           fsr2l	equ	0xFD9
  9773                           status	equ	0xFD8
  9774                           
  9775 ;; *************** function i2_in_low_int *****************
  9776 ;; Defined at:
  9777 ;;		line 31 in file "../src/interrupts.c"
  9778 ;; Parameters:    Size  Location     Type
  9779 ;;		None
  9780 ;; Auto vars:     Size  Location     Type
  9781 ;;		None
  9782 ;; Return value:  Size  Location     Type
  9783 ;;                  2    0[BANK0 ] int 
  9784 ;; Registers used:
  9785 ;;		wreg, status,2, status,0, cstack
  9786 ;; Tracked objects:
  9787 ;;		On entry : 0/0
  9788 ;;		On exit  : 0/0
  9789 ;;		Unchanged: 0/0
  9790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9791 ;;      Params:         0       2       0       0       0
  9792 ;;      Locals:         0       0       0       0       0
  9793 ;;      Temps:          0       0       0       0       0
  9794 ;;      Totals:         0       2       0       0       0
  9795 ;;Total ram usage:        2 bytes
  9796 ;; Hardware stack levels used:    1
  9797 ;; Hardware stack levels required when called:    1
  9798 ;; This function calls:
  9799 ;;		i2_in_high_int
  9800 ;; This function is called by:
  9801 ;;		_SleepIfOkay
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805                           	psect	text55
  9806  001EDE                     __ptext55:
  9807                           	opt stack 0
  9808  001EDE                     i2_in_low_int:
  9809                           	opt stack 18
  9810                           
  9811                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  9812                           
  9813                           ;incstack = 0
  9814  001EDE  ACF2               	btfss	intcon,6,c	;volatile
  9815  001EE0  D008               	goto	i2l4460
  9816                           
  9817                           ;interrupts.c: 33: return (0);
  9818  001EE2  0E00               	movlw	0
  9819  001EE4  0100               	movlb	0	; () banked
  9820  001EE6  0100               	movlb	0	; () banked
  9821  001EE8  6F81               	movwf	(?i2_in_low_int+1)& (0+255),b
  9822  001EEA  0E00               	movlw	0
  9823  001EEC  0100               	movlb	0	; () banked
  9824  001EEE  6F80               	movwf	?i2_in_low_int& (0+255),b
  9825  001EF0  0012               	return	
  9826  001EF2                     i2l4460:
  9827  001EF2  ECE4  F010         	call	i2_in_high_int	;wreg free
  9828  001EF6  502E               	movf	?i2_in_high_int+1,w,c
  9829  001EF8  102D               	iorwf	?i2_in_high_int,w,c
  9830  001EFA  B4D8               	btfsc	status,2,c
  9831  001EFC  D008               	goto	i2l4468
  9832                           
  9833                           ;interrupts.c: 35: return (0);
  9834  001EFE  0E00               	movlw	0
  9835  001F00  0100               	movlb	0	; () banked
  9836  001F02  0100               	movlb	0	; () banked
  9837  001F04  6F81               	movwf	(?i2_in_low_int+1)& (0+255),b
  9838  001F06  0E00               	movlw	0
  9839  001F08  0100               	movlb	0	; () banked
  9840  001F0A  6F80               	movwf	?i2_in_low_int& (0+255),b
  9841  001F0C  0012               	return	
  9842  001F0E                     i2l4468:
  9843                           
  9844                           ;interrupts.c: 37: return (1);
  9845  001F0E  0E00               	movlw	0
  9846  001F10  0100               	movlb	0	; () banked
  9847  001F12  0100               	movlb	0	; () banked
  9848  001F14  6F81               	movwf	(?i2_in_low_int+1)& (0+255),b
  9849  001F16  0E01               	movlw	1
  9850  001F18  0100               	movlb	0	; () banked
  9851  001F1A  6F80               	movwf	?i2_in_low_int& (0+255),b
  9852  001F1C  0012               	return	
  9853  001F1E                     __end_ofi2_in_low_int:
  9854                           	opt stack 0
  9855                           pclatu	equ	0xFFB
  9856                           pclath	equ	0xFFA
  9857                           tblptru	equ	0xFF8
  9858                           tblptrh	equ	0xFF7
  9859                           tblptrl	equ	0xFF6
  9860                           tablat	equ	0xFF5
  9861                           prodh	equ	0xFF4
  9862                           prodl	equ	0xFF3
  9863                           intcon	equ	0xFF2
  9864                           intcon2	equ	0xFF1
  9865                           postinc0	equ	0xFEE
  9866                           fsr0h	equ	0xFEA
  9867                           fsr0l	equ	0xFE9
  9868                           wreg	equ	0xFE8
  9869                           indf1	equ	0xFE7
  9870                           postinc1	equ	0xFE6
  9871                           postdec1	equ	0xFE5
  9872                           fsr1h	equ	0xFE2
  9873                           fsr1l	equ	0xFE1
  9874                           bsr	equ	0xFE0
  9875                           indf2	equ	0xFDF
  9876                           postinc2	equ	0xFDE
  9877                           postdec2	equ	0xFDD
  9878                           fsr2h	equ	0xFDA
  9879                           fsr2l	equ	0xFD9
  9880                           status	equ	0xFD8
  9881                           
  9882 ;; *************** function i2_in_high_int *****************
  9883 ;; Defined at:
  9884 ;;		line 23 in file "../src/interrupts.c"
  9885 ;; Parameters:    Size  Location     Type
  9886 ;;		None
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;		None
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  2   44[COMRAM] int 
  9891 ;; Registers used:
  9892 ;;		wreg, status,2
  9893 ;; Tracked objects:
  9894 ;;		On entry : 0/0
  9895 ;;		On exit  : 0/0
  9896 ;;		Unchanged: 0/0
  9897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9898 ;;      Params:         2       0       0       0       0
  9899 ;;      Locals:         0       0       0       0       0
  9900 ;;      Temps:          0       0       0       0       0
  9901 ;;      Totals:         2       0       0       0       0
  9902 ;;Total ram usage:        2 bytes
  9903 ;; Hardware stack levels used:    1
  9904 ;; This function calls:
  9905 ;;		Nothing
  9906 ;; This function is called by:
  9907 ;;		_SleepIfOkay
  9908 ;;		i2_in_low_int
  9909 ;; This function uses a non-reentrant model
  9910 ;;
  9911                           
  9912                           	psect	text56
  9913  0021C8                     __ptext56:
  9914                           	opt stack 0
  9915  0021C8                     i2_in_high_int:
  9916                           	opt stack 18
  9917                           
  9918                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  9919                           
  9920                           ; BSR set to: 0
  9921                           ;incstack = 0
  9922  0021C8  0E00               	movlw	0
  9923  0021CA  AEF2               	btfss	intcon,7,c	;volatile
  9924  0021CC  0E01               	movlw	1
  9925  0021CE  6E2D               	movwf	?i2_in_high_int,c
  9926  0021D0  6A2E               	clrf	?i2_in_high_int+1,c
  9927  0021D2  0012               	return	
  9928  0021D4                     __end_ofi2_in_high_int:
  9929                           	opt stack 0
  9930                           pclatu	equ	0xFFB
  9931                           pclath	equ	0xFFA
  9932                           tblptru	equ	0xFF8
  9933                           tblptrh	equ	0xFF7
  9934                           tblptrl	equ	0xFF6
  9935                           tablat	equ	0xFF5
  9936                           prodh	equ	0xFF4
  9937                           prodl	equ	0xFF3
  9938                           intcon	equ	0xFF2
  9939                           intcon2	equ	0xFF1
  9940                           postinc0	equ	0xFEE
  9941                           fsr0h	equ	0xFEA
  9942                           fsr0l	equ	0xFE9
  9943                           wreg	equ	0xFE8
  9944                           indf1	equ	0xFE7
  9945                           postinc1	equ	0xFE6
  9946                           postdec1	equ	0xFE5
  9947                           fsr1h	equ	0xFE2
  9948                           fsr1l	equ	0xFE1
  9949                           bsr	equ	0xFE0
  9950                           indf2	equ	0xFDF
  9951                           postinc2	equ	0xFDE
  9952                           postdec2	equ	0xFDD
  9953                           fsr2h	equ	0xFDA
  9954                           fsr2l	equ	0xFD9
  9955                           status	equ	0xFD8
  9956                           
  9957 ;; *************** function i2_check_msg *****************
  9958 ;; Defined at:
  9959 ;;		line 222 in file "../src/messages.c"
  9960 ;; Parameters:    Size  Location     Type
  9961 ;;  qptr            2   44[COMRAM] PTR struct __msg_queue
  9962 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9963 ;; Auto vars:     Size  Location     Type
  9964 ;;		None
  9965 ;; Return value:  Size  Location     Type
  9966 ;;                  1    wreg      unsigned char 
  9967 ;; Registers used:
  9968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9969 ;; Tracked objects:
  9970 ;;		On entry : 0/0
  9971 ;;		On exit  : 0/0
  9972 ;;		Unchanged: 0/0
  9973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9974 ;;      Params:         2       0       0       0       0
  9975 ;;      Locals:         0       0       0       0       0
  9976 ;;      Temps:          1       0       0       0       0
  9977 ;;      Totals:         3       0       0       0       0
  9978 ;;Total ram usage:        3 bytes
  9979 ;; Hardware stack levels used:    1
  9980 ;; This function calls:
  9981 ;;		Nothing
  9982 ;; This function is called by:
  9983 ;;		_SleepIfOkay
  9984 ;; This function uses a non-reentrant model
  9985 ;;
  9986                           
  9987                           	psect	text57
  9988  00209C                     __ptext57:
  9989                           	opt stack 0
  9990  00209C                     i2_check_msg:
  9991                           	opt stack 19
  9992                           
  9993                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9994                           
  9995                           ;incstack = 0
  9996  00209C  EE20 F042          	lfsr	2,66
  9997  0020A0  502D               	movf	i2check_msg@qptr,w,c
  9998  0020A2  26D9               	addwf	fsr2l,f,c
  9999  0020A4  502E               	movf	i2check_msg@qptr+1,w,c
 10000  0020A6  22DA               	addwfc	fsr2h,f,c
 10001  0020A8  50DF               	movf	indf2,w,c
 10002  0020AA  6E2F               	movwf	??i2_check_msg& (0+255),c
 10003  0020AC  502F               	movf	??i2_check_msg,w,c
 10004  0020AE  0D0D               	mullw	13
 10005  0020B0  50F3               	movf	prodl,w,c
 10006  0020B2  242D               	addwf	i2check_msg@qptr,w,c
 10007  0020B4  6ED9               	movwf	fsr2l,c
 10008  0020B6  50F4               	movf	prodh,w,c
 10009  0020B8  202E               	addwfc	i2check_msg@qptr+1,w,c
 10010  0020BA  6EDA               	movwf	fsr2h,c
 10011  0020BC  50DF               	movf	indf2,w,c
 10012  0020BE  0012               	return	
 10013  0020C0                     __end_ofi2_check_msg:
 10014                           	opt stack 0
 10015                           pclatu	equ	0xFFB
 10016                           pclath	equ	0xFFA
 10017                           tblptru	equ	0xFF8
 10018                           tblptrh	equ	0xFF7
 10019                           tblptrl	equ	0xFF6
 10020                           tablat	equ	0xFF5
 10021                           prodh	equ	0xFF4
 10022                           prodl	equ	0xFF3
 10023                           intcon	equ	0xFF2
 10024                           intcon2	equ	0xFF1
 10025                           postinc0	equ	0xFEE
 10026                           fsr0h	equ	0xFEA
 10027                           fsr0l	equ	0xFE9
 10028                           wreg	equ	0xFE8
 10029                           indf1	equ	0xFE7
 10030                           postinc1	equ	0xFE6
 10031                           postdec1	equ	0xFE5
 10032                           fsr1h	equ	0xFE2
 10033                           fsr1l	equ	0xFE1
 10034                           bsr	equ	0xFE0
 10035                           indf2	equ	0xFDF
 10036                           postinc2	equ	0xFDE
 10037                           postdec2	equ	0xFDD
 10038                           fsr2h	equ	0xFDA
 10039                           fsr2l	equ	0xFD9
 10040                           status	equ	0xFD8
 10041                           
 10042 ;; *************** function _enter_sleep_mode *****************
 10043 ;; Defined at:
 10044 ;;		line 202 in file "../src/messages.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;		None
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;		None
 10049 ;; Return value:  Size  Location     Type
 10050 ;;		None               void
 10051 ;; Registers used:
 10052 ;;		None
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/0
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10058 ;;      Params:         0       0       0       0       0
 10059 ;;      Locals:         0       0       0       0       0
 10060 ;;      Temps:          0       0       0       0       0
 10061 ;;      Totals:         0       0       0       0       0
 10062 ;;Total ram usage:        0 bytes
 10063 ;; Hardware stack levels used:    1
 10064 ;; This function calls:
 10065 ;;		Nothing
 10066 ;; This function is called by:
 10067 ;;		_SleepIfOkay
 10068 ;; This function uses a non-reentrant model
 10069 ;;
 10070                           
 10071                           	psect	text58
 10072  0021E2                     __ptext58:
 10073                           	opt stack 0
 10074  0021E2                     _enter_sleep_mode:
 10075                           	opt stack 19
 10076                           
 10077                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 10078                           
 10079                           ;incstack = 0
 10080  0021E2  8ED3               	bsf	4051,7,c	;volatile
 10081  0021E4  0003               	sleep		;# 
 10082  0021E6  0012               	return	
 10083  0021E8                     __end_of_enter_sleep_mode:
 10084                           	opt stack 0
 10085  0000                     pclatu	equ	0xFFB
 10086                           pclath	equ	0xFFA
 10087                           tblptru	equ	0xFF8
 10088                           tblptrh	equ	0xFF7
 10089                           tblptrl	equ	0xFF6
 10090                           tablat	equ	0xFF5
 10091                           prodh	equ	0xFF4
 10092                           prodl	equ	0xFF3
 10093                           intcon	equ	0xFF2
 10094                           intcon2	equ	0xFF1
 10095                           postinc0	equ	0xFEE
 10096                           fsr0h	equ	0xFEA
 10097                           fsr0l	equ	0xFE9
 10098                           wreg	equ	0xFE8
 10099                           indf1	equ	0xFE7
 10100                           postinc1	equ	0xFE6
 10101                           postdec1	equ	0xFE5
 10102                           fsr1h	equ	0xFE2
 10103                           fsr1l	equ	0xFE1
 10104                           bsr	equ	0xFE0
 10105                           indf2	equ	0xFDF
 10106                           postinc2	equ	0xFDE
 10107                           postdec2	equ	0xFDD
 10108                           fsr2h	equ	0xFDA
 10109                           fsr2l	equ	0xFD9
 10110                           status	equ	0xFD8
 10111                           pclatu	equ	0xFFB
 10112                           pclath	equ	0xFFA
 10113                           tblptru	equ	0xFF8
 10114                           tblptrh	equ	0xFF7
 10115                           tblptrl	equ	0xFF6
 10116                           tablat	equ	0xFF5
 10117                           prodh	equ	0xFF4
 10118                           prodl	equ	0xFF3
 10119                           intcon	equ	0xFF2
 10120                           intcon2	equ	0xFF1
 10121                           postinc0	equ	0xFEE
 10122                           fsr0h	equ	0xFEA
 10123                           fsr0l	equ	0xFE9
 10124                           wreg	equ	0xFE8
 10125                           indf1	equ	0xFE7
 10126                           postinc1	equ	0xFE6
 10127                           postdec1	equ	0xFE5
 10128                           fsr1h	equ	0xFE2
 10129                           fsr1l	equ	0xFE1
 10130                           bsr	equ	0xFE0
 10131                           indf2	equ	0xFDF
 10132                           postinc2	equ	0xFDE
 10133                           postdec2	equ	0xFDD
 10134                           fsr2h	equ	0xFDA
 10135                           fsr2l	equ	0xFD9
 10136                           status	equ	0xFD8
 10137                           
 10138                           	psect	rparam
 10139  0000                     pclatu	equ	0xFFB
 10140                           pclath	equ	0xFFA
 10141                           tblptru	equ	0xFF8
 10142                           tblptrh	equ	0xFF7
 10143                           tblptrl	equ	0xFF6
 10144                           tablat	equ	0xFF5
 10145                           prodh	equ	0xFF4
 10146                           prodl	equ	0xFF3
 10147                           intcon	equ	0xFF2
 10148                           intcon2	equ	0xFF1
 10149                           postinc0	equ	0xFEE
 10150                           fsr0h	equ	0xFEA
 10151                           fsr0l	equ	0xFE9
 10152                           wreg	equ	0xFE8
 10153                           indf1	equ	0xFE7
 10154                           postinc1	equ	0xFE6
 10155                           postdec1	equ	0xFE5
 10156                           fsr1h	equ	0xFE2
 10157                           fsr1l	equ	0xFE1
 10158                           bsr	equ	0xFE0
 10159                           indf2	equ	0xFDF
 10160                           postinc2	equ	0xFDE
 10161                           postdec2	equ	0xFDD
 10162                           fsr2h	equ	0xFDA
 10163                           fsr2l	equ	0xFD9
 10164                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         302
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     47      83
    BANK0           128     65      79
    BANK1           256    102     240
    BANK2           256      0     134
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_trans@data	PTR unsigned char  size(2) Largest target is 11
		 -> timer0_int_handler@motorcomm(BANK0[2]), i2c_slave_int_handler@motorcomm(BANK0[2]), main@msgbuffer(BANK1[11]), main@motorcomm(BANK1[2]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 13
		 -> main@uc(BANK1[13]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK1[29]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 5
		 -> i2c_slave_int_handler@motormsg(BANK0[5]), i2c_slave_int_handler@sensormsg(BANK0[5]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK1[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@ic(BANK1[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->i2_uart_trans
    _i2c_slave_int_handler->_start_i2c_slave_reply
    _i2c_slave_int_handler->i2_uart_trans
    i2_send_msg->i2___awmod
    _SleepIfOkay->i2_check_msg
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _timer0_int_handler->_WriteTimer0
    _timer0_int_handler->i2_uart_trans
    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                70    70      0   14129
                                             36 BANK1     66    66      0
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                         _uart_trans
 ---------------------------------------------------------------------------------
 (1) _uart_trans                                           5     3      2     282
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3347
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2658
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2435
                                             10 BANK1     12     6      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      7     3      4     545
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2969
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2969
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2746
                                             10 BANK1     14     7      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     637
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     347
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    3486
                                             27 COMRAM    17    17      0
                    _adc_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3398
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    3375
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    3022
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     809
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   0     0      0      88
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    6121
                                             51 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  2     2      0     503
                                              2 BANK0      2     2      0
                        _WriteTimer0
                       i2_uart_trans
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     123
                                             44 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    5382
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_slave_int_handler                              25    25      0    5382
                                             26 BANK0     25    25      0
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
                       i2_uart_trans
 ---------------------------------------------------------------------------------
 (12) i2_uart_trans                                        5     3      2     338
                                             44 COMRAM     3     1      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     3      2     223
                                             44 COMRAM     3     1      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    3994
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    3381
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           7     3      4    1034
                                             44 COMRAM     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              0 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             44 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
   _uart_trans

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
   _timer1_int_handler
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_trans_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_slave_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2___awmod
           i2_memcpy
       _handle_start
       _start_i2c_slave_reply
       i2_uart_trans
   _timer0_int_handler
     _WriteTimer0
     i2_uart_trans

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      86       8       52.3%
BITBANK1           100      0       0       5        0.0%
BANK1              100     66      F0       6       93.8%
BITBANK0            80      0       0       3        0.0%
BANK0               80     41      4F       4       61.7%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2F      53       1       65.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     218      11        0.0%
DATA                 0      0     218      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Mar 19 17:24:04 2014

          _MQ_Main_Willing_to_block 0050                         _SSPSTATbits 000FC7  
         __end_of_ToMainLow_recvmsg 1E5C                                  bsr 000FE0  
         __end_of_ToMainLow_sendmsg 209C                        __CFG_CP0$OFF 000000  
                               l140 0994                                 l503 1964  
                               l522 2048                                 l523 204A  
                               l546 1F38                                 l548 1F50  
                               l549 1F52                                 l590 17A8  
                               l583 1776                                 l816 2142  
                               l587 1796                                 l588 1798  
                               l589 17A6     __size_of_uart_trans_int_handler 0068  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                      ___awmod@sign 018C                      _FromMainLow_MQ 0243  
                               prod 000FF3                                 wreg 000FE8  
                      __CFG_IESO$ON 000000                        ?_in_high_int 0186  
                  ??_init_uart_recv 0188          i2c_slave_int_handler@F5130 00C6  
        i2c_slave_int_handler@F5132 00CB          i2c_slave_int_handler@F5128 00C1  
                              l1128 1854                                l4010 19DE  
                              l4004 19B2                                l4104 0B82  
                              l4120 0C70                                l4032 0C90  
                              l4036 0D14                                l4052 1A2E  
                              l4070 0E0E                                l4090 1CC6  
                              l4420 10AE                                l4412 1076  
                              l4084 1CA2                                l4432 110E  
                              l4424 10E2                                l4416 1094  
                              l4408 1050                                l4440 17F2  
                              l4418 10A6                                l4442 1804  
                              l4428 10F6                                l4444 180C  
                              l3812 0942                                l3820 09DA  
                              l3804 0900                                l3814 099A  
                              l3672 1DC6                                l3664 1DA4  
                              l4448 1840                                l3832 0AB2  
                              l3840 0AFC                                l3826 0A18  
                              l3818 09BA                                l3836 0AF8  
                              l3828 0A6A                                l3934 1778  
                              l3926 1762                                l3686 1E0A  
                              l3886 1F3A                                l3982 1560  
                              l3986 15CA                                l3998 1986  
                              _LATA 000F89                                _LATB 000F8A  
                              i1l59 0080                                u3887 2144  
                   _FromMainHigh_MQ 0200                __end_ofi2_uart_trans 16A6  
                     __CFG_FCMEN$ON 000000              ?_block_on_To_msgqueues 0001  
                              _main 0804                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr0l 000FE9  
                              fsr2h 000FDA                                indf1 000FE7  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                         main@msgtype 01C0  
                        i1_send_msg 148A                                pclat 000FFA  
                       i2_check_msg 209C                                prodh 000FF4  
                              prodl 000FF3               handle_start@data_read 002D  
                              start 00C6                       __CFG_FOSC2$ON 000000  
                  ?_adc_int_handler 0001                          i2_send_msg 0EDE  
         ToMainHigh_recvmsg@msgtype 019E       i2c_slave_int_handler@motormsg 00A1  
                    send_msg@length 0192                     __end_of_OpenADC 1968  
       __size_of_timer0_int_handler 002C             ??_i2c_slave_int_handler 009A  
                       _Delay1KTCYx 213E                               ?_main 0001  
                   __end_of___awmod 1118                               _T0CON 000FD5  
                             _T1CON 000FCD                               i1l601 212E  
                   __end_of___lwmod 185E                          i1memcpy@d1 0001  
                             i2l303 137E                               i1l439 1C7C  
                             i2l340 052C                               i2l342 0192  
                             i2l360 0366                               i2l346 01D6  
                             i2l374 053E                               i2l368 049E  
                        i1memcpy@s1 0003                               _RCREG 000FAE  
                             _RCSTA 000FAB                               _TMR0H 000FD7  
                             _TMR1H 000FCF                               _TMR0L 000FD6  
                             _TMR1L 000FCE                               _SPBRG 000FAF  
                             _PORTA 000F80                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                        i2memcpy@d1 0080                          i2memcpy@s1 0082  
                      ?_init_queues 0001           __size_of_enter_sleep_mode 0006  
                    i1___awmod@sign 0007                     __end_of_in_main 1E1A  
        ToMainLow_recvmsg@maxlength 01A2             timer0_lthread@msgbuffer 018C  
           i2c_configure_slave@addr 0186                               tablat 000FF5  
                             status 000FD8              _uart_trans_int_handler 1C18  
                  __end_ofi1_memcpy 1EDE                  __size_ofi1___awmod 009C  
                  __end_ofi2_memcpy 1D3C                  __size_ofi2___awmod 00EA  
                   __initialization 1AD2                        __end_of_main 0B16  
       __size_of_timer1_int_handler 000E          __size_of_ToMainLow_recvmsg 0042  
        __size_of_ToMainLow_sendmsg 0026               __size_ofi2_in_low_int 0040  
     __size_of_FromMainHigh_sendmsg 0036                              ??_main 01AA  
                   send_msg@msgtype 0193                       __activetblptr 000002  
                   send_msg@tlength 0197                          _SetChanADC 20E2  
              __end_of_handle_start 13CA                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADCON2 000FC0  
                            _ADRESH 000FC4             ??_uart_recv_int_handler 001B  
                            i1l1366 20CC                              i1l3510 1700  
                            i1l3502 16D2                              i1l3512 1708  
                            i1l3514 170C                              i1l3522 172A  
                            i1l3506 16EE                              i1l3526 1738  
                            i1l3518 1720                              i1l4600 146A  
                            i1l3482 1ECC                              i1l3476 1EB0  
                            i1l4612 0066                              i2l3104 139A  
                            i2l3106 13B2                              i1l4618 0070  
                            i1l4566 14C2                          _OpenTimer0 2024  
                            i2l4202 020E                              i1l4594 1426  
                        _OpenTimer1 1F1E                              i2l4300 06E2  
                            i2l4220 028E                              i2l4204 023A  
                            i2l4222 02CE                              i2l4214 0276  
                    __CFG_WDTEN$OFF 000000                              i2l4312 0740  
                            i2l4154 1134                              i2l4250 042E  
                            i2l4332 07F2                              i2l4244 03DA  
                            i2l4510 1D00                              i2l4158 11B0  
                            i2l4502 1676                              i2l4326 07B8  
                            i2l4246 041C                              i2l3720 1D42  
                            i2l4272 0500                              i2l4184 0188  
                            i2l3704 18A6                              i2l4530 1274  
                            i2l4178 0170                              i2l4460 1EF2  
                            i2l4516 1D24                              i2l4292 063C  
                            i2l4284 05A2                              i2l4550 12F8  
                            i2l4542 12D4                              i2l4534 128A  
                            i2l4526 124E                              i2l4278 0542  
                            i2l4536 1298                              i2l4538 12A0  
                            i2l4546 12E4                              i2l4468 1F0E  
                            i2l4484 0F3A                              i2l3696 1898  
                            i2l4498 1614         __end_of_i2c_configure_slave 2076  
                     ??_SleepIfOkay 0030                  __size_of_ReadUSART 001E  
                            _OSCCON 000FD3                              _SPBRGH 000FB0  
                            _SSPADD 000FC8                              _SSPBUF 000FC9  
    __size_of_start_i2c_slave_reply 0100                         ?i1_send_msg 000B  
     __end_of_start_i2c_slave_reply 1218                  timer0_lthread@tptr 0186  
                         ??_OpenADC 0188                        i2_in_low_int 1EDE  
                       ?i2_send_msg 008A                      __CFG_XINST$OFF 000000  
                __size_of_OpenUSART 0092                     _i2c_int_handler 21DC  
                         ??___awmod 018A   i2c_slave_int_handler@data_written 00AB  
                   _i2c_master_send 0C74                    OpenTimer0@config 0186  
                            _ic_ptr 00CD                           ??___lwmod 018A  
                     main@msgbuffer 01AF                    __end_of_init_i2c 1C18  
                  OpenTimer1@config 0186                              _memcpy 1C80  
                            clear_0 1AD8                              clear_1 1AE4  
                            clear_2 1AF0                     ___awmod@divisor 0188  
                            _uc_ptr 0052                     ___awmod@counter 018B  
                            main@ic 01CF                              main@uc 01C2  
                  __end_of_recv_msg 0C74         start_i2c_slave_reply@length 002F  
                     main@motorcomm 01BC                           ??_in_main 018C  
                 __end_ofi1___awmod 1742                    __end_of_send_msg 0EDE  
                 __end_ofi2___awmod 1302                  i2uart_trans@length 002F  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 0189  
             __size_ofi2_uart_trans 00A8                      i2___awmod@sign 002F  
          ToMainLow_recvmsg@msgtype 019E                __size_of_in_high_int 0012  
                   __CFG_FOSC$HSPLL 000000                          __accesstop 0080  
           __end_of__initialization 1B36          __end_of_ToMainHigh_recvmsg 1E9E  
        __end_of_ToMainHigh_sendmsg 1FF8         __end_of_init_timer1_lthread 2178  
               __end_of_SleepIfOkay 1D90                      __pcstackCOMRAM 0001  
                      __pidataBANK0 21BC                        __pidataBANK1 21E8  
            __size_ofi2_in_high_int 000C                  __size_of_check_msg 0036  
                 __end_of_ReadUSART 213E                        i2_uart_trans 15FE  
                       ?_SetChanADC 0001                 __size_ofi1_send_msg 00C0  
                         ?i1_memcpy 0001       __size_of_InterruptHandlerHigh 18DC  
       __end_of_InterruptHandlerLow 00C6                           ?i2_memcpy 0080  
                     _ToMainHigh_MQ 0100                    _enter_sleep_mode 21E2  
               __size_ofi2_send_msg 012C                timer1_lthread@length 01A4  
                     ReadUSART@data 0001                   __end_of_OpenUSART 17D4  
                     check_msg@qptr 0186                timer1_lthread@retval 01A9  
           ??_block_on_To_msgqueues 018C                __size_of_init_queues 006E  
                        __pbssBANK1 0100                          __pbssBANK2 0200  
                       ?_OpenTimer0 0001                         ?_OpenTimer1 0001  
                        __pnvCOMRAM 0052             __end_of_i2c_int_handler 21E2  
                      ?i2_check_msg 002D             __end_of_i2c_master_send 0DB2  
                timer1_lthread@tptr 01A0         timer0_int_handler@motorcomm 0082  
                 recv_msg@maxlength 0192                     recv_msg@msgtype 0193  
                   recv_msg@tlength 019A               __size_of_handle_start 00C8  
                      ?_Delay1KTCYx 0001                    WriteTimer0@timer 0080  
                           ?_memcpy 0186                    WriteTimer1@timer 0003  
                     ??_WriteTimer0 002F                       ??_WriteTimer1 0003  
    __size_of_i2c_slave_int_handler 073A             __size_of_timer0_lthread 0012  
     __end_of_i2c_slave_int_handler 0804             __size_of_timer1_lthread 0072  
                        ??i1_memcpy 0007                          ??i2_memcpy 002D  
                  i1send_msg@length 000D                       i2_in_high_int 21C8  
                           _SSPCON1 000FC6                             _SSPCON2 000FC5  
                           _SSPSTAT 000FC7             ?_uart_trans_int_handler 0001  
                 __end_of_check_msg 1FC2                           ?_init_i2c 0186  
                       _SleepIfOkay 1D3C                           ?_recv_msg 0190  
                           _OpenADC 18E4                          _in_low_int 1D90  
                      _handle_start 1302                             __Hparam 0000  
               __size_of_SetChanADC 0020                           ?_send_msg 0190  
                           __Lparam 0000          __end_of_timer0_int_handler 2024  
                  init_uart_recv@uc 0186                             ___awmod 100A  
                           ___lwmod 17D4                     __CFG_STVREN$OFF 000000  
i2c_slave_int_handler@overrun_error 00AC                             __pcinit 1AD2  
                   __size_of_memcpy 005E            __size_of_adc_int_handler 0022  
                        _init_queue 19E6                             __ramtop 0400  
               __size_of_OpenTimer0 002A                 __size_of_OpenTimer1 0038  
                           __ptext0 0804                             __ptext1 154A  
                           __ptext2 1A60                             __ptext3 17D4  
                           __ptext4 1F56                             __ptext5 0DB2  
                           __ptext6 2154                             __ptext7 2102  
                           __ptext8 2166                             __ptext9 1B40  
                         _T0CONbits 000FD5                             _in_main 1DD6  
                         _T1CONbits 000FCD                    ___awmod@dividend 0186  
               __end_of_WriteTimer0 21AE                 __end_of_WriteTimer1 219C  
                    ?i2_in_high_int 002D      __end_of_uart_trans_int_handler 1C80  
                    OpenADC@config2 0186                             main@msg 01AC  
                    __pintcode_body 185E                end_of_initialization 1B36  
           timer1_lthread@msgbuffer 01A6        __end_of_FromMainHigh_sendmsg 1F8C  
    __size_of_uart_recv_int_handler 00C0          FromMainHigh_sendmsg@length 019F  
                           memcpy@d 018C                             memcpy@n 018A  
                           memcpy@s 018E       __end_of_uart_recv_int_handler 148A  
                        ??_init_i2c 0188                       __Lmediumconst 0000  
                           int_func 185E                        ??i1_send_msg 0011  
           __size_of_init_uart_recv 001E                    ?_i2c_int_handler 0001  
                  ?_i2c_master_send 0186                          ??_recv_msg 0197  
                      ??i2_send_msg 0090                          ??_send_msg 0196  
        __end_of_timer1_int_handler 21BC                           _RCSTAbits 000FAB  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 0096  
                        _uart_trans 154A                           _PORTAbits 000F80  
                __end_ofi1_send_msg 154A         FromMainHigh_sendmsg@msgtype 019C  
                         _TRISCbits 000F94                           i1___awmod 16A6  
                __end_ofi2_send_msg 100A                           i2___awmod 1218  
                         _TXSTAbits 000FAC                          main@length 01C1  
                       ?_in_low_int 0188               timer0_lthread@msgtype 0188  
             _start_i2c_slave_reply 1118        __size_of_i2c_configure_slave 0028  
              __size_ofi2_check_msg 0024            __end_of_enter_sleep_mode 21E8  
                _ToMainHigh_recvmsg 1E5C                           i1memcpy@d 0007  
                _ToMainHigh_sendmsg 1FC2                           i1memcpy@n 0005  
                         i1memcpy@s 0009           i2c_master_send@recvlength 0186  
                    _timer0_lthread 2154                         ?_init_queue 0186  
                         i2memcpy@d 0086                         _WriteTimer0 219C  
                       _WriteTimer1 218A                           i2memcpy@n 0084  
                         i2memcpy@s 0088                      _timer1_lthread 1A60  
                    __end_of_memcpy 1CDE                   _enable_interrupts 21D4  
              __size_of_Delay1KTCYx 0016                        ??_SetChanADC 0186  
         i2c_master_send@sendlength 018C                 ?_ToMainHigh_recvmsg 019E  
                   ??i2_in_high_int 002F                 ?_ToMainHigh_sendmsg 0096  
                ?_enable_interrupts 0001                 start_initialization 1AD2  
                     ??_in_high_int 0188                           _ReadUSART 2120  
                 ??_adc_int_handler 0001                          ?i1___awmod 0001  
                 __size_ofi1_memcpy 0040                   __size_ofi2_memcpy 005E  
         i2c_master_send@slave_addr 0189                          ?i2___awmod 0080  
               ??_enable_interrupts 0186                        ??_OpenTimer0 0186  
                      ??_OpenTimer1 0186      __size_of_block_on_To_msgqueues 007E  
     __end_of_block_on_To_msgqueues 19E6                           _OpenUSART 1742  
      __end_of_InterruptHandlerHigh 18E4                          init_i2c@ic 0186  
              ??_ToMainHigh_recvmsg 01A2                ??_ToMainHigh_sendmsg 0030  
                __end_of_SetChanADC 2102              __end_of_timer0_lthread 2166  
                       __pdataBANK0 00C1                         __pdataBANK1 01EC  
            __end_of_timer1_lthread 1AD2                  i1___awmod@dividend 0001  
         __end_of_enable_interrupts 21DC                            ??_memcpy 018C  
             timer1_lthread@msgtype 01A2                         ?_uart_trans 0186  
              _FromMainHigh_sendmsg 1F56        __size_of_init_timer1_lthread 0012  
                __end_of_OpenTimer0 204E                  __end_of_OpenTimer1 1F56  
                       __pbssCOMRAM 0030                          ?_ReadUSART 0001  
                     ??_init_queues 018A                       __pcstackBANK0 0080  
                     __pcstackBANK1 0186                 __size_of_in_low_int 0046  
          start_i2c_slave_reply@msg 002D                           _adcbuffer 0030  
               __CFG_CCP2MX$DEFAULT 000000                     Delay1KTCYx@unit 0186  
          ToMainLow_sendmsg@msgtype 0017        __size_of_InterruptHandlerLow 00AE  
    i2c_slave_int_handler@data_read 00B2                 __end_of_in_high_int 218A  
                        ?_OpenUSART 0186                        ?_SleepIfOkay 0001  
             ToMainLow_recvmsg@data 01A0                        _ToMainLow_MQ 0143  
               __size_of_init_queue 007A                      _init_uart_recv 2102  
                         _check_msg 1F8C                           __pnvBANK0 00CD  
            ?_start_i2c_slave_reply 002D                   __size_of_init_i2c 006A  
                 OpenADC@portconfig 0187                            ?_OpenADC 0186  
                      recv_msg@data 0195                        recv_msg@qmsg 019C  
                      recv_msg@slot 0199                        recv_msg@qptr 0190  
                 __size_of_recv_msg 015E                           __pintcode 0008  
                 __size_of_send_msg 012C                            ?___awmod 0186  
                   ?_timer0_lthread 0186                            ?___lwmod 0186  
                   ?_timer1_lthread 01A0               ?_FromMainHigh_sendmsg 019C  
                       __pintcodelo 0018              ToMainHigh_recvmsg@data 01A0  
                          ?_in_main 018A                   WriteTimer0@timer0 002D  
                _timer0_int_handler 1FF8                   WriteTimer1@timer1 0001  
             _i2c_slave_int_handler 00CA      i2c_slave_int_handler@error_buf 00A8  
                       ??i1___awmod 0005               ToMainLow_sendmsg@data 0018  
                       ??i2___awmod 002D                 ?_timer0_int_handler 0001  
    i2c_slave_int_handler@msg_ready 00B1              __end_of_init_uart_recv 2120  
               __end_of_init_queues 1BAE         i2c_slave_int_handler@length 00AF  
               __size_of_uart_trans 00B4                       OpenADC@config 018A  
                          _LATBbits 000F8A                     i2check_msg@qptr 002D  
                        ?_check_msg 0186                            _IPR1bits 000F9F  
                          _PIE1bits 000F9D      i2c_slave_int_handler@motorcomm 00A6  
                     ?i2_in_low_int 0080      i2c_slave_int_handler@sensormsg 009C  
                          _PIR1bits 000F9E                            i2u346_41 0720  
                          i2u348_41 0766              ToMainHigh_sendmsg@data 0097  
                          _RCONbits 000FD0                    __CFG_WDTPS$32768 000000  
                         main@F5212 01EC                           main@F5214 01EE  
              ??_timer0_int_handler 0030          __size_of_enable_interrupts 0008  
                 i1send_msg@msgtype 000E                   i1send_msg@tlength 0012  
                        _ADCON0bits 000FC2                timer0_lthread@length 018A  
                _timer1_int_handler 21AE                            i1_memcpy 1E9E  
              _InterruptHandlerHigh 0008                         ??_ReadUSART 0001  
                          i2_memcpy 1CDE                timer0_lthread@msgval 018E  
                       _in_high_int 2178                        send_msg@data 0194  
               _i2c_configure_slave 204E                        send_msg@qmsg 019A  
                      send_msg@slot 0199                        send_msg@qptr 0190  
                       _INTCON2bits 000FF1                           copy_data0 1B0A  
                         copy_data1 1B2A                 ?_timer1_int_handler 0001  
                i2___awmod@dividend 0080                     ?_init_uart_recv 0186  
                       ??_OpenUSART 0188                     OpenUSART@config 018B  
                    ??i2_in_low_int 002F               _uart_recv_int_handler 13CA  
                      ??_in_low_int 018A                            __Hrparam 0000  
                  __size_of_OpenADC 0084                ?_i2c_configure_slave 0001  
                          __Lrparam 0000                   ?_enter_sleep_mode 0001  
                  i2uart_trans@data 002D              ??_FromMainHigh_sendmsg 019F  
                 i1___awmod@divisor 0003                ??_timer1_int_handler 0005  
                 i1___awmod@counter 0006                     _adc_int_handler 20C0  
          __size_of_i2c_int_handler 0006                    __size_of___awmod 010E  
                ??_enter_sleep_mode 002D            __size_of_i2c_master_send 013E  
                  __size_of___lwmod 008A                        ??_init_queue 0188  
                      ?_WriteTimer0 002D                        ?_WriteTimer1 0001  
          FromMainHigh_sendmsg@data 019D                       ?i2_uart_trans 002D  
           ToMainLow_sendmsg@length 001A              ?_i2c_slave_int_handler 0001  
                 main@t0thread_data 01BA               ?_InterruptHandlerHigh 0001  
                  __size_of_in_main 0044                   i2send_msg@msgtype 008D  
       ToMainHigh_recvmsg@maxlength 01A2                   i2send_msg@tlength 0091  
           init_timer1_lthread@tptr 0186                         _init_queues 1B40  
                __end_of_in_low_int 1DD6                            __ptext10 19E6  
                          __ptext11 1BAE                            __ptext20 213E  
                          __ptext12 0C74                            __ptext21 1E1A  
                          __ptext13 204E                            __ptext30 18E4  
                          __ptext22 1E5C                            __ptext14 21D4  
                          __ptext23 0B16                            __ptext15 1968  
                          __ptext40 218A                            __ptext32 1C18  
                          __ptext24 1C80                            __ptext16 1DD6  
                          __ptext41 20C0                            __ptext33 13CA  
                          __ptext25 100A                            __ptext17 1D90  
                          __ptext50 1FC2                            __ptext34 2076  
                          __ptext26 20E2                            __ptext18 2178  
                          __ptext51 0EDE                            __ptext43 1FF8  
                          __ptext35 148A                            __ptext27 1742  
                          __ptext19 1F8C                            __ptext52 1CDE  
                          __ptext44 219C                            __ptext36 1E9E  
                          __ptext28 1F1E                            __ptext53 1218  
                          __ptext45 21DC                            __ptext37 16A6  
                          __ptext29 2024                            __ptext54 1D3C  
                          __ptext46 00CA                            __ptext38 2120  
                          __ptext55 1EDE                            __ptext47 15FE  
                          __ptext39 21AE                            __ptext56 21C8  
                          __ptext48 1118                            __ptext57 209C  
                          __ptext49 1302                            __ptext58 21E2  
                    i1send_msg@data 000F                      i1send_msg@qmsg 0015  
                    i1send_msg@slot 0014                      i1send_msg@qptr 000B  
                          _init_i2c 1BAE                 _init_timer1_lthread 2166  
                     __size_of_main 0312                       ??i2_check_msg 002F  
                 main@t1thread_data 01BE                         ??_check_msg 0188  
                __end_of_init_queue 1A60                __size_of_SleepIfOkay 0054  
                          _recv_msg 0B16    i2c_slave_int_handler@msg_to_send 00AE  
             ??_i2c_configure_slave 0186                            _send_msg 0DB2  
                    init_queue@qptr 0186                       ??_Delay1KTCYx 0186  
                    ??i2_uart_trans 0080                    uart_trans@length 018A  
                      ??_uart_trans 0188                 _InterruptHandlerLow 0018  
              ?_init_timer1_lthread 0186            ??_uart_trans_int_handler 0001  
                 i2___awmod@divisor 0082                   i2___awmod@counter 002E  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
                      _UART_timeout 004C                      OpenUSART@spbrg 0186  
                          memcpy@d1 0186                            memcpy@s1 0188  
           timer0_int_handler@F5107 004E               __end_ofi2_in_high_int 21D4  
                  i2send_msg@length 008C                            intlevel1 0000  
                          intlevel2 0000                ?_InterruptHandlerLow 0001  
           ??_start_i2c_slave_reply 0080                    ___lwmod@dividend 0186  
            ?_uart_recv_int_handler 0001                  __end_of_uart_trans 15FE  
                 SetChanADC@channel 0187               _block_on_To_msgqueues 1968  
                     ?_handle_start 0001                    ??_timer0_lthread 018E  
       __size_of_ToMainHigh_recvmsg 0042             __end_of_adc_int_handler 20E2  
       __size_of_ToMainHigh_sendmsg 0036                          _OSCCONbits 000FD3  
                  ??_timer1_lthread 01A8            ToMainHigh_sendmsg@length 0099  
               __end_ofi2_check_msg 20C0               ??_init_timer1_lthread 0188  
            ??_InterruptHandlerHigh 00B3                   _ToMainLow_recvmsg 1E1A  
                 _ToMainLow_sendmsg 2076                  main@last_reg_recvd 01AE  
                   ___lwmod@divisor 0188                __end_ofi2_in_low_int 1F1E  
                ?_ToMainLow_recvmsg 019E                 __end_of_Delay1KTCYx 2154  
                 ??_i2c_int_handler 0030                     ___lwmod@counter 018B  
                ?_ToMainLow_sendmsg 0017                   ??_i2c_master_send 018A  
                i2c_master_send@msg 0187                      uart_trans@data 0186  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
                    i2send_msg@data 008E               ??_InterruptHandlerLow 001C  
               ??_ToMainLow_recvmsg 01A2                      i2send_msg@qmsg 0094  
                    i2send_msg@slot 0093                      i2send_msg@qptr 008A  
               ??_ToMainLow_sendmsg 001A       i2c_slave_int_handler@i2c_data 00AD  
                    ??_handle_start 002D                        _USART_Status 0051  
