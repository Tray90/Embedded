

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Wed Mar 19 19:01:51 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    78                           	psect	param0,global,class=BANK0,space=1,delta=1
    79  0000                     
    80                           	psect	idataCOMRAM
    81  001CB4                     __pidataCOMRAM:
    82                           	opt stack 0
    83                           
    84                           ;initializer for i2c_slave_int_handler@F9158
    85  001CB4  01                 	db	1
    86  001CB5  01                 	db	1
    87  001CB6  02                 	db	2
    88  001CB7  03                 	db	3
    89  001CB8  06                 	db	6
    90                           
    91                           ;initializer for i2c_slave_int_handler@F9160
    92  001CB9  03                 	db	3
    93  001CBA  04                 	db	4
    94  001CBB  04                 	db	4
    95  001CBC  00                 	db	0
    96  001CBD  00                 	db	0
    97                           
    98                           ;initializer for i2c_slave_int_handler@F9162
    99  001CBE  9F                 	db	159
   100  001CBF  1F                 	db	31
   101                           
   102                           	psect	idataBANK1
   103  001CD4                     __pidataBANK1:
   104                           	opt stack 0
   105                           
   106                           ;initializer for main@F9242
   107  001CD4  01                 	db	1
   108  001CD5  02                 	db	2
   109                           
   110                           ;initializer for main@F9244
   111  001CD6  9F                 	db	159
   112  001CD7  1F                 	db	31
   113  0000                     _ADCON0	set	4034
   114  0000                     _ADCON0bits	set	4034
   115  0000                     _ADCON1	set	4033
   116  0000                     _ADRESH	set	4036
   117  0000                     _ANCON0	set	3912
   118  0000                     _ANCON1	set	3913
   119  0000                     _INTCON2bits	set	4081
   120  0000                     _INTCONbits	set	4082
   121  0000                     _IPR1bits	set	3999
   122  0000                     _LATA	set	3977
   123  0000                     _LATB	set	3978
   124  0000                     _LATBbits	set	3978
   125  0000                     _OSCCON	set	4051
   126  0000                     _OSCCONbits	set	4051
   127  0000                     _OSCTUNEbits	set	3995
   128  0000                     _PIE1bits	set	3997
   129  0000                     _PIR1bits	set	3998
   130  0000                     _PORTA	set	3968
   131  0000                     _PORTAbits	set	3968
   132  0000                     _PORTBbits	set	3969
   133  0000                     _RCONbits	set	4048
   134  0000                     _RCREG1	set	4015
   135  0000                     _RCSTA1	set	4012
   136  0000                     _RCSTA1bits	set	4012
   137  0000                     _RCSTAbits	set	4012
   138  0000                     _SPBRG1	set	4016
   139  0000                     _SPBRGH1	set	3967
   140  0000                     _SSPADD	set	4040
   141  0000                     _SSPBUF	set	4041
   142  0000                     _SSPCON1	set	4038
   143  0000                     _SSPCON1bits	set	4038
   144  0000                     _SSPCON2	set	4037
   145  0000                     _SSPCON2bits	set	4037
   146  0000                     _SSPSTAT	set	4039
   147  0000                     _SSPSTATbits	set	4039
   148  0000                     _T0CON	set	4053
   149  0000                     _T0CONbits	set	4053
   150  0000                     _T1CON	set	4045
   151  0000                     _T1CONbits	set	4045
   152  0000                     _T1GCON	set	3994
   153  0000                     _T1GCONbits	set	3994
   154  0000                     _TMR0H	set	4055
   155  0000                     _TMR0L	set	4054
   156  0000                     _TMR1H	set	4047
   157  0000                     _TMR1L	set	4046
   158  0000                     _TRISA	set	3986
   159  0000                     _TRISB	set	3987
   160  0000                     _TRISBbits	set	3987
   161  0000                     _TRISC	set	3988
   162  0000                     _TRISCbits	set	3988
   163  0000                     _TXREG	set	4014
   164  0000                     _TXSTA1	set	4013
   165  0000                     _TXSTA1bits	set	4013
   166  0000                     _TXSTAbits	set	4013
   167                           
   168                           	psect	nvCOMRAM
   169  00003D                     __pnvCOMRAM:
   170                           	opt stack 0
   171  00003D                     _uc_ptr:
   172                           	opt stack 0
   173  00003D                     	ds	2
   174                           
   175                           	psect	nvBANK0
   176  0000CF                     __pnvBANK0:
   177                           	opt stack 0
   178  0000CF                     _ic_ptr:
   179                           	opt stack 0
   180  0000CF                     	ds	2
   181                           
   182                           ; #config settings
   183  0000                     
   184                           	psect	cinit
   185  0014AC                     __pcinit:
   186                           	opt stack 0
   187  0014AC                     start_initialization:
   188                           	opt stack 0
   189  0014AC                     __initialization:
   190                           	opt stack 0
   191                           
   192                           ; Clear objects allocated to BANK2 (134 bytes)
   193  0014AC  EE02  F000         	lfsr	0,__pbssBANK2
   194  0014B0  0E86               	movlw	134
   195  0014B2                     clear_0:
   196  0014B2  6AEE               	clrf	postinc0,c
   197  0014B4  06E8               	decf	wreg,f,c
   198  0014B6  E1FD               	bnz	clear_0
   199                           
   200                           ; Clear objects allocated to BANK1 (134 bytes)
   201  0014B8  EE01  F000         	lfsr	0,__pbssBANK1
   202  0014BC  0E86               	movlw	134
   203  0014BE                     clear_1:
   204  0014BE  6AEE               	clrf	postinc0,c
   205  0014C0  06E8               	decf	wreg,f,c
   206  0014C2  E1FD               	bnz	clear_1
   207                           
   208                           ; Clear objects allocated to BANK0 (28 bytes)
   209  0014C4  EE00  F0B3         	lfsr	0,__pbssBANK0
   210  0014C8  0E1C               	movlw	28
   211  0014CA                     clear_2:
   212  0014CA  6AEE               	clrf	postinc0,c
   213  0014CC  06E8               	decf	wreg,f,c
   214  0014CE  E1FD               	bnz	clear_2
   215                           
   216                           ; Clear objects allocated to COMRAM (4 bytes)
   217  0014D0  6A3C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   218  0014D2  6A3B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   219  0014D4  6A3A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   220  0014D6  6A39               	clrf	__pbssCOMRAM& (0+255),c
   221                           
   222                           ; Initialize objects allocated to BANK1 (4 bytes)
   223                           ; load TBLPTR registers with __pidataBANK1
   224  0014D8  0ED4               	movlw	low __pidataBANK1
   225  0014DA  6EF6               	movwf	tblptrl,c
   226  0014DC  0E1C               	movlw	high __pidataBANK1
   227  0014DE  6EF7               	movwf	tblptrh,c
   228  0014E0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   229  0014E2  6EF8               	movwf	tblptru,c
   230  0014E4  EE01  F0C6         	lfsr	0,__pdataBANK1
   231  0014E8  EE10 F004          	lfsr	1,4
   232  0014EC                     copy_data0:
   233  0014EC  0009               	tblrd		*+
   234  0014EE  CFF5 FFEE          	movff	tablat,postinc0
   235  0014F2  50E5               	movf	postdec1,w,c
   236  0014F4  50E1               	movf	fsr1l,w,c
   237  0014F6  E1FA               	bnz	copy_data0
   238                           
   239                           ; Initialize objects allocated to COMRAM (12 bytes)
   240                           ; load TBLPTR registers with __pidataCOMRAM
   241  0014F8  0EB4               	movlw	low __pidataCOMRAM
   242  0014FA  6EF6               	movwf	tblptrl,c
   243  0014FC  0E1C               	movlw	high __pidataCOMRAM
   244  0014FE  6EF7               	movwf	tblptrh,c
   245  001500  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   246  001502  6EF8               	movwf	tblptru,c
   247  001504  EE00  F02D         	lfsr	0,__pdataCOMRAM
   248  001508  EE10 F00C          	lfsr	1,12
   249  00150C                     copy_data1:
   250  00150C  0009               	tblrd		*+
   251  00150E  CFF5 FFEE          	movff	tablat,postinc0
   252  001512  50E5               	movf	postdec1,w,c
   253  001514  50E1               	movf	fsr1l,w,c
   254  001516  E1FA               	bnz	copy_data1
   255  001518                     end_of_initialization:
   256                           	opt stack 0
   257  001518                     __end_of__initialization:
   258                           	opt stack 0
   259  001518  0E00               	movlw	low (__Lmediumconst shr (0+16))
   260  00151A  6EF8               	movwf	tblptru,c
   261  00151C  0100               	movlb	0
   262  00151E  EF45  F002         	goto	_main	;jump to C main() function
   263                           tblptru	equ	0xFF8
   264                           tblptrh	equ	0xFF7
   265                           tblptrl	equ	0xFF6
   266                           tablat	equ	0xFF5
   267                           postinc0	equ	0xFEE
   268                           wreg	equ	0xFE8
   269                           postdec1	equ	0xFE5
   270                           fsr1l	equ	0xFE1
   271                           
   272                           	psect	bssCOMRAM
   273  000039                     __pbssCOMRAM:
   274                           	opt stack 0
   275  000039                     _UART_timeout:
   276                           	opt stack 0
   277  000039                     	ds	2
   278  00003B                     _MQ_Main_Willing_to_block:
   279                           	opt stack 0
   280  00003B                     	ds	1
   281  00003C                     _USART1_Status:
   282                           	opt stack 0
   283  00003C                     	ds	1
   284                           tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           postdec1	equ	0xFE5
   291                           fsr1l	equ	0xFE1
   292                           
   293                           	psect	dataCOMRAM
   294  00002D                     __pdataCOMRAM:
   295                           	opt stack 0
   296  00002D                     i2c_slave_int_handler@F9158:
   297                           	opt stack 0
   298  00002D                     	ds	5
   299  000032                     i2c_slave_int_handler@F9160:
   300                           	opt stack 0
   301  000032                     	ds	5
   302  000037                     i2c_slave_int_handler@F9162:
   303                           	opt stack 0
   304  000037                     	ds	2
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           postdec1	equ	0xFE5
   312                           fsr1l	equ	0xFE1
   313                           
   314                           	psect	bssBANK0
   315  0000B3                     __pbssBANK0:
   316                           	opt stack 0
   317  0000B3                     _adcbuffer:
   318                           	opt stack 0
   319  0000B3                     	ds	28
   320                           tblptru	equ	0xFF8
   321                           tblptrh	equ	0xFF7
   322                           tblptrl	equ	0xFF6
   323                           tablat	equ	0xFF5
   324                           postinc0	equ	0xFEE
   325                           wreg	equ	0xFE8
   326                           postdec1	equ	0xFE5
   327                           fsr1l	equ	0xFE1
   328                           
   329                           	psect	bssBANK1
   330  000100                     __pbssBANK1:
   331                           	opt stack 0
   332  000100                     _ToMainHigh_MQ:
   333                           	opt stack 0
   334  000100                     	ds	67
   335  000143                     _ToMainLow_MQ:
   336                           	opt stack 0
   337  000143                     	ds	67
   338                           tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           postdec1	equ	0xFE5
   345                           fsr1l	equ	0xFE1
   346                           
   347                           	psect	dataBANK1
   348  0001C6                     __pdataBANK1:
   349                           	opt stack 0
   350  0001C6                     main@F9242:
   351                           	opt stack 0
   352  0001C6                     	ds	2
   353  0001C8                     main@F9244:
   354                           	opt stack 0
   355  0001C8                     	ds	2
   356                           tblptru	equ	0xFF8
   357                           tblptrh	equ	0xFF7
   358                           tblptrl	equ	0xFF6
   359                           tablat	equ	0xFF5
   360                           postinc0	equ	0xFEE
   361                           wreg	equ	0xFE8
   362                           postdec1	equ	0xFE5
   363                           fsr1l	equ	0xFE1
   364                           
   365                           	psect	bssBANK2
   366  000200                     __pbssBANK2:
   367                           	opt stack 0
   368  000200                     _FromMainHigh_MQ:
   369                           	opt stack 0
   370  000200                     	ds	67
   371  000243                     _FromMainLow_MQ:
   372                           	opt stack 0
   373  000243                     	ds	67
   374                           tblptru	equ	0xFF8
   375                           tblptrh	equ	0xFF7
   376                           tblptrl	equ	0xFF6
   377                           tablat	equ	0xFF5
   378                           postinc0	equ	0xFEE
   379                           wreg	equ	0xFE8
   380                           postdec1	equ	0xFE5
   381                           fsr1l	equ	0xFE1
   382                           
   383                           	psect	cstackBANK1
   384  000186                     __pcstackBANK1:
   385                           	opt stack 0
   386  000186                     main@msg:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x0
   390  000186                     	ds	2
   391  000188                     main@last_reg_recvd:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x2
   395  000188                     	ds	1
   396  000189                     main@motorcomm:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x3
   400  000189                     	ds	2
   401  00018B                     main@msgbuffer:
   402                           	opt stack 0
   403                           
   404                           ; 11 bytes @ 0x5
   405  00018B                     	ds	11
   406  000196                     main@t0thread_data:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0x10
   410  000196                     	ds	2
   411  000198                     main@t1thread_data:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x12
   415  000198                     	ds	2
   416  00019A                     main@msgtype:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x14
   420  00019A                     	ds	1
   421  00019B                     main@length:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x15
   425  00019B                     	ds	1
   426  00019C                     main@uc:
   427                           	opt stack 0
   428                           
   429                           ; 13 bytes @ 0x16
   430  00019C                     	ds	13
   431  0001A9                     main@ic:
   432                           	opt stack 0
   433                           
   434                           ; 29 bytes @ 0x23
   435  0001A9                     	ds	29
   436                           tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           postinc0	equ	0xFEE
   441                           wreg	equ	0xFE8
   442                           postdec1	equ	0xFE5
   443                           fsr1l	equ	0xFE1
   444                           
   445                           	psect	cstackBANK0
   446  000060                     __pcstackBANK0:
   447                           	opt stack 0
   448  000060                     ?i2_in_high_int:
   449                           	opt stack 0
   450  000060                     ?i2___awmod:
   451                           	opt stack 0
   452  000060                     i2c_master_recv@length:
   453                           	opt stack 0
   454  000060                     WriteTimer0@timer0:
   455                           	opt stack 0
   456  000060                     i2check_msg@qptr:
   457                           	opt stack 0
   458  000060                     i2memcpy@d1:
   459                           	opt stack 0
   460  000060                     i2___awmod@dividend:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x0
   464  000060                     	ds	2
   465  000062                     ??i2_check_msg:
   466  000062                     ?i2_in_low_int:
   467                           	opt stack 0
   468  000062                     WriteTimer0@timer:
   469                           	opt stack 0
   470  000062                     i2memcpy@s1:
   471                           	opt stack 0
   472  000062                     i2___awmod@divisor:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x2
   476  000062                     	ds	2
   477  000064                     ??i2___awmod:
   478  000064                     i2memcpy@n:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x4
   482  000064                     	ds	1
   483  000065                     i2___awmod@counter:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x5
   487  000065                     	ds	1
   488  000066                     i2___awmod@sign:
   489                           	opt stack 0
   490  000066                     i2memcpy@d:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x6
   494  000066                     	ds	2
   495  000068                     i2memcpy@s:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x8
   499  000068                     	ds	2
   500  00006A                     i2send_msg@qptr:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0xA
   504  00006A                     	ds	2
   505  00006C                     i2send_msg@length:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0xC
   509  00006C                     	ds	1
   510  00006D                     i2send_msg@msgtype:
   511                           	opt stack 0
   512                           
   513                           ; 1 bytes @ 0xD
   514  00006D                     	ds	1
   515  00006E                     i2send_msg@data:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0xE
   519  00006E                     	ds	2
   520  000070                     ??i2_send_msg:
   521                           
   522                           ; 0 bytes @ 0x10
   523  000070                     	ds	1
   524  000071                     i2send_msg@tlength:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x11
   528  000071                     	ds	2
   529  000073                     i2send_msg@slot:
   530                           	opt stack 0
   531                           
   532                           ; 1 bytes @ 0x13
   533  000073                     	ds	1
   534  000074                     i2send_msg@qmsg:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x14
   538  000074                     	ds	2
   539  000076                     ToMainHigh_sendmsg@msgtype:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x16
   543  000076                     	ds	1
   544  000077                     ToMainHigh_sendmsg@data:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x17
   548  000077                     	ds	2
   549  000079                     ToMainHigh_sendmsg@length:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0x19
   553  000079                     	ds	1
   554  00007A                     ??_i2c_master_int_handler:
   555                           
   556                           ; 0 bytes @ 0x1A
   557  00007A                     	ds	5
   558  00007F                     ??_InterruptHandlerHigh:
   559                           
   560                           ; 0 bytes @ 0x1F
   561  00007F                     	ds	14
   562  00008D                     ??_SetChanADC:
   563  00008D                     ?_in_high_int:
   564                           	opt stack 0
   565  00008D                     ?___awmod:
   566                           	opt stack 0
   567  00008D                     ?___lwmod:
   568                           	opt stack 0
   569  00008D                     i2c_master_send@recvlength:
   570                           	opt stack 0
   571  00008D                     OpenADC@config2:
   572                           	opt stack 0
   573  00008D                     OpenTimer0@config:
   574                           	opt stack 0
   575  00008D                     OpenTimer1@config1:
   576                           	opt stack 0
   577  00008D                     Delay1KTCYx@unit:
   578                           	opt stack 0
   579  00008D                     init_queue@qptr:
   580                           	opt stack 0
   581  00008D                     check_msg@qptr:
   582                           	opt stack 0
   583  00008D                     init_i2c@ic:
   584                           	opt stack 0
   585  00008D                     init_uart_recv@uc:
   586                           	opt stack 0
   587  00008D                     uart_trans@data:
   588                           	opt stack 0
   589  00008D                     timer0_lthread@tptr:
   590                           	opt stack 0
   591  00008D                     init_timer1_lthread@tptr:
   592                           	opt stack 0
   593  00008D                     Open1USART@spbrg:
   594                           	opt stack 0
   595  00008D                     ___awmod@dividend:
   596                           	opt stack 0
   597  00008D                     ___lwmod@dividend:
   598                           	opt stack 0
   599  00008D                     memcpy@d1:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x2D
   603  00008D                     	ds	1
   604  00008E                     ??_OpenTimer1:
   605  00008E                     SetChanADC@channel:
   606                           	opt stack 0
   607  00008E                     i2c_master_send@msg:
   608                           	opt stack 0
   609  00008E                     OpenADC@config3:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x2E
   613  00008E                     	ds	1
   614  00008F                     ??_Open1USART:
   615  00008F                     ??_uart_trans:
   616  00008F                     ??_init_queue:
   617  00008F                     ??_check_msg:
   618  00008F                     ?_in_low_int:
   619                           	opt stack 0
   620  00008F                     OpenTimer1@config:
   621                           	opt stack 0
   622  00008F                     timer0_lthread@msgtype:
   623                           	opt stack 0
   624  00008F                     ___awmod@divisor:
   625                           	opt stack 0
   626  00008F                     ___lwmod@divisor:
   627                           	opt stack 0
   628  00008F                     memcpy@s1:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x2F
   632  00008F                     	ds	1
   633  000090                     ??_OpenADC:
   634  000090                     init_queue@i:
   635                           	opt stack 0
   636  000090                     i2c_master_send@slave_addr:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x30
   640  000090                     	ds	1
   641  000091                     ??_init_queues:
   642  000091                     ??_i2c_master_send:
   643  000091                     ??___awmod:
   644  000091                     ??___lwmod:
   645  000091                     ?_in_main:
   646                           	opt stack 0
   647  000091                     uart_trans@length:
   648                           	opt stack 0
   649  000091                     timer0_lthread@length:
   650                           	opt stack 0
   651  000091                     memcpy@n:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x31
   655  000091                     	ds	1
   656  000092                     Open1USART@config:
   657                           	opt stack 0
   658  000092                     ___awmod@counter:
   659                           	opt stack 0
   660  000092                     ___lwmod@counter:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x32
   664  000092                     	ds	1
   665  000093                     ??_block_on_To_msgqueues:
   666  000093                     i2c_master_send@sendlength:
   667                           	opt stack 0
   668  000093                     OpenADC@config:
   669                           	opt stack 0
   670  000093                     ___awmod@sign:
   671                           	opt stack 0
   672  000093                     timer0_lthread@msgbuffer:
   673                           	opt stack 0
   674  000093                     memcpy@d:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x33
   678  000093                     	ds	2
   679  000095                     timer0_lthread@msgval:
   680                           	opt stack 0
   681  000095                     memcpy@s:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x35
   685  000095                     	ds	2
   686  000097                     send_msg@qptr:
   687                           	opt stack 0
   688  000097                     recv_msg@qptr:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x37
   692  000097                     	ds	2
   693  000099                     send_msg@length:
   694                           	opt stack 0
   695  000099                     recv_msg@maxlength:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x39
   699  000099                     	ds	1
   700  00009A                     send_msg@msgtype:
   701                           	opt stack 0
   702  00009A                     recv_msg@msgtype:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x3A
   706  00009A                     	ds	1
   707  00009B                     send_msg@data:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x3B
   711  00009B                     	ds	1
   712  00009C                     recv_msg@data:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x3C
   716  00009C                     	ds	1
   717  00009D                     ??_send_msg:
   718                           
   719                           ; 0 bytes @ 0x3D
   720  00009D                     	ds	1
   721  00009E                     ??_recv_msg:
   722  00009E                     send_msg@tlength:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x3E
   726  00009E                     	ds	2
   727  0000A0                     send_msg@slot:
   728                           	opt stack 0
   729  0000A0                     recv_msg@slot:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x40
   733  0000A0                     	ds	1
   734  0000A1                     send_msg@qmsg:
   735                           	opt stack 0
   736  0000A1                     recv_msg@tlength:
   737                           	opt stack 0
   738                           
   739                           ; 2 bytes @ 0x41
   740  0000A1                     	ds	2
   741  0000A3                     FromMainHigh_sendmsg@msgtype:
   742                           	opt stack 0
   743  0000A3                     recv_msg@qmsg:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0x43
   747  0000A3                     	ds	1
   748  0000A4                     FromMainHigh_sendmsg@data:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x44
   752  0000A4                     	ds	1
   753  0000A5                     ToMainLow_recvmsg@msgtype:
   754                           	opt stack 0
   755  0000A5                     ToMainHigh_recvmsg@msgtype:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x45
   759  0000A5                     	ds	1
   760  0000A6                     FromMainHigh_sendmsg@length:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x46
   764  0000A6                     	ds	1
   765  0000A7                     ToMainLow_recvmsg@data:
   766                           	opt stack 0
   767  0000A7                     ToMainHigh_recvmsg@data:
   768                           	opt stack 0
   769  0000A7                     timer1_lthread@tptr:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x47
   773  0000A7                     	ds	2
   774  0000A9                     ToMainLow_recvmsg@maxlength:
   775                           	opt stack 0
   776  0000A9                     ToMainHigh_recvmsg@maxlength:
   777                           	opt stack 0
   778  0000A9                     timer1_lthread@msgtype:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x49
   782  0000A9                     	ds	2
   783  0000AB                     timer1_lthread@length:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0x4B
   787  0000AB                     	ds	2
   788  0000AD                     timer1_lthread@msgbuffer:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x4D
   792  0000AD                     	ds	2
   793  0000AF                     ??_timer1_lthread:
   794                           
   795                           ; 0 bytes @ 0x4F
   796  0000AF                     	ds	1
   797  0000B0                     timer1_lthread@retval:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x50
   801  0000B0                     	ds	1
   802  0000B1                     ??_main:
   803                           
   804                           ; 0 bytes @ 0x51
   805  0000B1                     	ds	2
   806                           tblptru	equ	0xFF8
   807                           tblptrh	equ	0xFF7
   808                           tblptrl	equ	0xFF6
   809                           tablat	equ	0xFF5
   810                           postinc0	equ	0xFEE
   811                           wreg	equ	0xFE8
   812                           postdec1	equ	0xFE5
   813                           fsr1l	equ	0xFE1
   814                           
   815                           	psect	cstackCOMRAM
   816  000001                     __pcstackCOMRAM:
   817                           	opt stack 0
   818  000001                     ??_uart_trans_int_handler:
   819  000001                     ?i1___awmod:
   820                           	opt stack 0
   821  000001                     Read1USART@data:
   822                           	opt stack 0
   823  000001                     WriteTimer1@timer1:
   824                           	opt stack 0
   825  000001                     i1memcpy@d1:
   826                           	opt stack 0
   827  000001                     i1___awmod@dividend:
   828                           	opt stack 0
   829                           
   830                           ; 2 bytes @ 0x0
   831  000001                     	ds	2
   832  000003                     WriteTimer1@timer:
   833                           	opt stack 0
   834  000003                     i1memcpy@s1:
   835                           	opt stack 0
   836  000003                     i1___awmod@divisor:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x2
   840  000003                     	ds	2
   841  000005                     ??i1___awmod:
   842  000005                     i1memcpy@n:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x4
   846  000005                     	ds	1
   847  000006                     i1___awmod@counter:
   848                           	opt stack 0
   849                           
   850                           ; 1 bytes @ 0x5
   851  000006                     	ds	1
   852  000007                     i1___awmod@sign:
   853                           	opt stack 0
   854  000007                     i1memcpy@d:
   855                           	opt stack 0
   856                           
   857                           ; 2 bytes @ 0x6
   858  000007                     	ds	2
   859  000009                     i1memcpy@s:
   860                           	opt stack 0
   861                           
   862                           ; 2 bytes @ 0x8
   863  000009                     	ds	2
   864  00000B                     i1send_msg@qptr:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0xA
   868  00000B                     	ds	2
   869  00000D                     i1send_msg@length:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0xC
   873  00000D                     	ds	1
   874  00000E                     i1send_msg@msgtype:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0xD
   878  00000E                     	ds	1
   879  00000F                     i1send_msg@data:
   880                           	opt stack 0
   881                           
   882                           ; 2 bytes @ 0xE
   883  00000F                     	ds	2
   884  000011                     ??i1_send_msg:
   885                           
   886                           ; 0 bytes @ 0x10
   887  000011                     	ds	1
   888  000012                     i1send_msg@tlength:
   889                           	opt stack 0
   890                           
   891                           ; 2 bytes @ 0x11
   892  000012                     	ds	2
   893  000014                     i1send_msg@slot:
   894                           	opt stack 0
   895                           
   896                           ; 1 bytes @ 0x13
   897  000014                     	ds	1
   898  000015                     i1send_msg@qmsg:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x14
   902  000015                     	ds	2
   903  000017                     ToMainLow_sendmsg@msgtype:
   904                           	opt stack 0
   905                           
   906                           ; 1 bytes @ 0x16
   907  000017                     	ds	1
   908  000018                     ToMainLow_sendmsg@data:
   909                           	opt stack 0
   910                           
   911                           ; 2 bytes @ 0x17
   912  000018                     	ds	2
   913  00001A                     ToMainLow_sendmsg@length:
   914                           	opt stack 0
   915                           
   916                           ; 1 bytes @ 0x19
   917  00001A                     	ds	1
   918  00001B                     ??_uart_recv_int_handler:
   919                           
   920                           ; 0 bytes @ 0x1A
   921  00001B                     	ds	1
   922  00001C                     ??_InterruptHandlerLow:
   923                           
   924                           ; 0 bytes @ 0x1B
   925  00001C                     	ds	17
   926                           tblptru	equ	0xFF8
   927                           tblptrh	equ	0xFF7
   928                           tblptrl	equ	0xFF6
   929                           tablat	equ	0xFF5
   930                           postinc0	equ	0xFEE
   931                           wreg	equ	0xFE8
   932                           postdec1	equ	0xFE5
   933                           fsr1l	equ	0xFE1
   934                           
   935 ;;
   936 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   937 ;;
   938 ;; *************** function _main *****************
   939 ;; Defined at:
   940 ;;		line 186 in file "../src/main.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  ic             29   35[BANK1 ] struct __i2c_comm
   945 ;;  uc             13   22[BANK1 ] struct __uart_comm
   946 ;;  msgbuffer      11    5[BANK1 ] unsigned char [11]
   947 ;;  t1thread_dat    2   18[BANK1 ] struct __timer1_thread_s
   948 ;;  motorcomm       2    3[BANK1 ] unsigned char [2]
   949 ;;  t0thread_dat    2   16[BANK1 ] struct __timer0_thread_s
   950 ;;  msg             2    0[BANK1 ] unsigned char [2]
   951 ;;  uthread_data    2    0        struct __uart_thread_str
   952 ;;  length          1   21[BANK1 ] char 
   953 ;;  msgtype         1   20[BANK1 ] unsigned char 
   954 ;;  last_reg_rec    1    2[BANK1 ] unsigned char 
   955 ;;  i               1    0        unsigned char 
   956 ;;  c               1    0        unsigned char 
   957 ;; Return value:  Size  Location     Type
   958 ;;		None               void
   959 ;; Registers used:
   960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   967 ;;      Locals:         0       0      64       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   968 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   969 ;;      Totals:         0       2      64       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   970 ;;Total ram usage:       66 bytes
   971 ;; Hardware stack levels required when called:   15
   972 ;; This function calls:
   973 ;;		_Open1USART
   974 ;;		_OpenADC
   975 ;;		_OpenTimer0
   976 ;;		_OpenTimer1
   977 ;;		_SetChanADC
   978 ;;		_ToMainHigh_recvmsg
   979 ;;		_ToMainLow_recvmsg
   980 ;;		_block_on_To_msgqueues
   981 ;;		_enable_interrupts
   982 ;;		_i2c_configure_master
   983 ;;		_i2c_master_send
   984 ;;		_init_i2c
   985 ;;		_init_queues
   986 ;;		_init_timer1_lthread
   987 ;;		_init_uart_recv
   988 ;;		_timer0_lthread
   989 ;;		_timer1_lthread
   990 ;;		_uart_trans
   991 ;; This function is called by:
   992 ;;		Startup code after reset
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text0
   997  00048A                     __ptext0:
   998                           	opt stack 0
   999  00048A                     _main:
  1000                           	opt stack 16
  1001                           
  1002                           ;main.c: 187: char c;
  1003                           ;main.c: 188: signed char length;
  1004                           ;main.c: 189: unsigned char msgtype;
  1005                           ;main.c: 190: unsigned char last_reg_recvd;
  1006                           ;main.c: 191: uart_comm uc;
  1007                           ;main.c: 192: i2c_comm ic;
  1008                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
  1009                           ;main.c: 194: unsigned char i;
  1010                           ;main.c: 195: uart_thread_struct uthread_data;
  1011                           ;main.c: 196: timer1_thread_struct t1thread_data;
  1012                           ;main.c: 197: timer0_thread_struct t0thread_data;
  1013                           ;main.c: 213: OSCCON = 0xE0;
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;incstack = 0
  1017  00048A  0EE0               	movlw	224
  1018  00048C  6ED3               	movwf	4051,c	;volatile
  1019                           
  1020                           ;main.c: 214: OSCTUNEbits.PLLEN = 1;
  1021  00048E  8C9B               	bsf	3995,6,c	;volatile
  1022                           
  1023                           ;main.c: 224: init_uart_recv(&uc);
  1024  000490  0101               	movlb	1	; () banked
  1025  000492  0E01               	movlw	high main@uc
  1026  000494  0100               	movlb	0	; () banked
  1027  000496  0100               	movlb	0	; () banked
  1028  000498  6F8E               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1029  00049A  0101               	movlb	1	; () banked
  1030  00049C  0E9C               	movlw	low main@uc
  1031  00049E  0100               	movlb	0	; () banked
  1032  0004A0  0100               	movlb	0	; () banked
  1033  0004A2  6F8D               	movwf	init_uart_recv@uc& (0+255),b
  1034  0004A4  ECE8  F00D         	call	_init_uart_recv	;wreg free
  1035                           
  1036                           ;main.c: 227: init_i2c(&ic);
  1037  0004A8  0101               	movlb	1	; () banked
  1038  0004AA  0E01               	movlw	high main@ic
  1039  0004AC  0100               	movlb	0	; () banked
  1040  0004AE  0100               	movlb	0	; () banked
  1041  0004B0  6F8E               	movwf	(init_i2c@ic+1)& (0+255),b
  1042  0004B2  0101               	movlb	1	; () banked
  1043  0004B4  0EA9               	movlw	low main@ic
  1044  0004B6  0100               	movlb	0	; () banked
  1045  0004B8  0100               	movlb	0	; () banked
  1046  0004BA  6F8D               	movwf	init_i2c@ic& (0+255),b
  1047  0004BC  EC01  F00B         	call	_init_i2c	;wreg free
  1048                           
  1049                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1050  0004C0  0101               	movlb	1	; () banked
  1051  0004C2  0E01               	movlw	high main@t1thread_data
  1052  0004C4  0100               	movlb	0	; () banked
  1053  0004C6  0100               	movlb	0	; () banked
  1054  0004C8  6F8E               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1055  0004CA  0101               	movlb	1	; () banked
  1056  0004CC  0E98               	movlw	low main@t1thread_data
  1057  0004CE  0100               	movlb	0	; () banked
  1058  0004D0  0100               	movlb	0	; () banked
  1059  0004D2  6F8D               	movwf	init_timer1_lthread@tptr& (0+255),b
  1060  0004D4  EC26  F00E         	call	_init_timer1_lthread	;wreg free
  1061                           
  1062                           ;main.c: 233: init_queues();
  1063  0004D8  ECCA  F00A         	call	_init_queues	;wreg free
  1064                           
  1065                           ;main.c: 237: TRISB = 0xFF;
  1066  0004DC  6893               	setf	3987,c	;volatile
  1067                           
  1068                           ;main.c: 238: LATB = 0x0;
  1069  0004DE  0E00               	movlw	0
  1070  0004E0  6E8A               	movwf	3978,c	;volatile
  1071                           
  1072                           ;main.c: 240: PORTA = 0x0;
  1073  0004E2  0E00               	movlw	0
  1074  0004E4  6E80               	movwf	3968,c	;volatile
  1075                           
  1076                           ;main.c: 241: LATA = 0x0;
  1077  0004E6  0E00               	movlw	0
  1078  0004E8  6E89               	movwf	3977,c	;volatile
  1079                           
  1080                           ;main.c: 242: TRISA = 0x0F;
  1081  0004EA  0E0F               	movlw	15
  1082  0004EC  6E92               	movwf	3986,c	;volatile
  1083                           
  1084                           ;main.c: 261: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110101);
  1085  0004EE  0ED5               	movlw	213
  1086  0004F0  ECA0  F00D         	call	_OpenTimer0
  1087                           
  1088                           ;main.c: 269: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 
      +                          & 0b11111111,0x0);
  1089  0004F4  0100               	movlb	0	; () banked
  1090  0004F6  6FB1               	movwf	??_main& (0+255),b
  1091  0004F8  0E00               	movlw	0
  1092  0004FA  0100               	movlb	0	; () banked
  1093  0004FC  0100               	movlb	0	; () banked
  1094  0004FE  6F8D               	movwf	OpenTimer1@config1& (0+255),b
  1095  000500  0100               	movlb	0	; () banked
  1096  000502  51B1               	movf	??_main& (0+255),w,b
  1097  000504  0E9B               	movlw	155
  1098  000506  ECD9  F00C         	call	_OpenTimer1
  1099                           
  1100                           ;main.c: 279: IPR1bits.ADIP = 0;
  1101  00050A  9C9F               	bcf	3999,6,c	;volatile
  1102                           
  1103                           ;main.c: 280: PIE1bits.ADIE = 1;
  1104  00050C  8C9D               	bsf	3997,6,c	;volatile
  1105                           
  1106                           ;main.c: 282: IPR1bits.TMR1IP = 0;
  1107  00050E  909F               	bcf	3999,0,c	;volatile
  1108                           
  1109                           ;main.c: 284: INTCON2bits.TMR0IP = 1;
  1110  000510  84F1               	bsf	intcon2,2,c	;volatile
  1111                           
  1112                           ;main.c: 286: IPR1bits.RCIP = 0;
  1113  000512  9A9F               	bcf	3999,5,c	;volatile
  1114                           
  1115                           ;main.c: 288: IPR1bits.TXIP = 0;
  1116  000514  989F               	bcf	3999,4,c	;volatile
  1117                           
  1118                           ;main.c: 290: IPR1bits.SSPIP = 1;
  1119  000516  869F               	bsf	3999,3,c	;volatile
  1120                           
  1121                           ;main.c: 301: i2c_configure_master();
  1122  000518  ECC8  F00D         	call	_i2c_configure_master	;wreg free
  1123                           
  1124                           ;main.c: 326: PIE1bits.SSPIE = 1;
  1125  00051C  869D               	bsf	3997,3,c	;volatile
  1126                           
  1127                           ;main.c: 334: Open1USART(0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1128                           ;main.c: 335: 0b11111111 & 0b11101111, 38);
  1129  00051E  0E00               	movlw	0
  1130  000520  0100               	movlb	0	; () banked
  1131  000522  0100               	movlb	0	; () banked
  1132  000524  6F8E               	movwf	(Open1USART@spbrg+1)& (0+255),b
  1133  000526  0E26               	movlw	38
  1134  000528  0100               	movlb	0	; () banked
  1135  00052A  6F8D               	movwf	Open1USART@spbrg& (0+255),b
  1136  00052C  0EEC               	movlw	236
  1137  00052E  EC9A  F009         	call	_Open1USART
  1138                           
  1139                           ;main.c: 336: RCSTAbits.SPEN = 1;
  1140  000532  8EAC               	bsf	4012,7,c	;volatile
  1141                           
  1142                           ;main.c: 337: TRISC = 0xFF;
  1143  000534  6894               	setf	3988,c	;volatile
  1144                           
  1145                           ;main.c: 349: enable_interrupts();
  1146  000536  EC60  F00E         	call	_enable_interrupts	;wreg free
  1147                           
  1148                           ;main.c: 363: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1149                           ;main.c: 364: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1150                           ;main.c: 365: 0b1011);
  1151  00053A  0100               	movlb	0	; () banked
  1152  00053C  6FB1               	movwf	??_main& (0+255),b
  1153  00053E  0E0C               	movlw	12
  1154  000540  0100               	movlb	0	; () banked
  1155  000542  0100               	movlb	0	; () banked
  1156  000544  6F8D               	movwf	OpenADC@config2& (0+255),b
  1157  000546  0100               	movlb	0	; () banked
  1158  000548  51B1               	movf	??_main& (0+255),w,b
  1159  00054A  0E00               	movlw	0
  1160  00054C  0100               	movlb	0	; () banked
  1161  00054E  0100               	movlb	0	; () banked
  1162  000550  6F8F               	movwf	(OpenADC@config3+1)& (0+255),b
  1163  000552  0E0B               	movlw	11
  1164  000554  0100               	movlb	0	; () banked
  1165  000556  6F8E               	movwf	OpenADC@config3& (0+255),b
  1166  000558  0E53               	movlw	83
  1167  00055A  EC74  F008         	call	_OpenADC
  1168                           
  1169                           ;main.c: 366: SetChanADC(0b10001111);
  1170  00055E  0E8F               	movlw	143
  1171  000560  ECD8  F00D         	call	_SetChanADC
  1172                           
  1173                           ;main.c: 377: unsigned char msg[2] = {0x01, 0x02};
  1174  000564  C1C6  F186         	movff	main@F9242,main@msg
  1175  000568  C1C7  F187         	movff	main@F9242+1,main@msg+1
  1176                           
  1177                           ;main.c: 384: unsigned char motorcomm[2] = {0x9F, 0x1F};
  1178  00056C  C1C8  F189         	movff	main@F9244,main@motorcomm
  1179  000570  C1C9  F18A         	movff	main@F9244+1,main@motorcomm+1
  1180                           
  1181                           ;main.c: 385: uart_trans(2, motorcomm);
  1182  000574  0101               	movlb	1	; () banked
  1183  000576  0E01               	movlw	high main@motorcomm
  1184  000578  0100               	movlb	0	; () banked
  1185  00057A  0100               	movlb	0	; () banked
  1186  00057C  6F8E               	movwf	(uart_trans@data+1)& (0+255),b
  1187  00057E  0101               	movlb	1	; () banked
  1188  000580  0E89               	movlw	low main@motorcomm
  1189  000582  0100               	movlb	0	; () banked
  1190  000584  0100               	movlb	0	; () banked
  1191  000586  6F8D               	movwf	uart_trans@data& (0+255),b
  1192  000588  0E02               	movlw	2
  1193  00058A  EC1A  F008         	call	_uart_trans
  1194  00058E                     l2674:
  1195                           
  1196                           ;main.c: 391: block_on_To_msgqueues();
  1197  00058E  ECDA  F009         	call	_block_on_To_msgqueues	;wreg free
  1198                           
  1199                           ;main.c: 398: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1200  000592  0101               	movlb	1	; () banked
  1201  000594  0E01               	movlw	high main@msgtype
  1202  000596  0100               	movlb	0	; () banked
  1203  000598  0100               	movlb	0	; () banked
  1204  00059A  6FA6               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1205  00059C  0101               	movlb	1	; () banked
  1206  00059E  0E9A               	movlw	low main@msgtype
  1207  0005A0  0100               	movlb	0	; () banked
  1208  0005A2  0100               	movlb	0	; () banked
  1209  0005A4  6FA5               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1210  0005A6  0101               	movlb	1	; () banked
  1211  0005A8  0E01               	movlw	high main@msgbuffer
  1212  0005AA  0100               	movlb	0	; () banked
  1213  0005AC  0100               	movlb	0	; () banked
  1214  0005AE  6FA8               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1215  0005B0  0101               	movlb	1	; () banked
  1216  0005B2  0E8B               	movlw	low main@msgbuffer
  1217  0005B4  0100               	movlb	0	; () banked
  1218  0005B6  0100               	movlb	0	; () banked
  1219  0005B8  6FA7               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1220  0005BA  0E0A               	movlw	10
  1221  0005BC  ECB8  F00C         	call	_ToMainHigh_recvmsg
  1222  0005C0  0101               	movlb	1	; () banked
  1223  0005C2  0101               	movlb	1	; () banked
  1224  0005C4  6F9B               	movwf	main@length& (0+255),b
  1225                           
  1226                           ; BSR set to: 1
  1227                           ;main.c: 399: if (length < 0) {
  1228  0005C6  0101               	movlb	1	; () banked
  1229  0005C8  0101               	movlb	1	; () banked
  1230  0005CA  BF9B               	btfsc	main@length& (0+255),7,b
  1231  0005CC  D04D               	goto	l2690
  1232  0005CE  D03C               	goto	l2688
  1233  0005D0                     l2682:
  1234                           
  1235                           ; BSR set to: 1
  1236                           ;main.c: 407: {
  1237                           ;main.c: 408: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1238  0005D0  0101               	movlb	1	; () banked
  1239  0005D2  0E01               	movlw	high main@t0thread_data
  1240  0005D4  0100               	movlb	0	; () banked
  1241  0005D6  0100               	movlb	0	; () banked
  1242  0005D8  6F8E               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1243  0005DA  0101               	movlb	1	; () banked
  1244  0005DC  0E96               	movlw	low main@t0thread_data
  1245  0005DE  0100               	movlb	0	; () banked
  1246  0005E0  0100               	movlb	0	; () banked
  1247  0005E2  6F8D               	movwf	timer0_lthread@tptr& (0+255),b
  1248  0005E4  0101               	movlb	1	; () banked
  1249  0005E6  0100               	movlb	0	; () banked
  1250  0005E8  C19A  F08F         	movff	main@msgtype,timer0_lthread@msgtype
  1251  0005EC  0100               	movlb	0	; () banked
  1252  0005EE  0100               	movlb	0	; () banked
  1253  0005F0  6B90               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1254  0005F2  0101               	movlb	1	; () banked
  1255  0005F4  0101               	movlb	1	; () banked
  1256  0005F6  519B               	movf	main@length& (0+255),w,b
  1257  0005F8  0100               	movlb	0	; () banked
  1258  0005FA  0100               	movlb	0	; () banked
  1259  0005FC  6F91               	movwf	timer0_lthread@length& (0+255),b
  1260  0005FE  0100               	movlb	0	; () banked
  1261  000600  6B92               	clrf	(timer0_lthread@length+1)& (0+255),b
  1262  000602  0100               	movlb	0	; () banked
  1263  000604  BF91               	btfsc	timer0_lthread@length& (0+255),7,b
  1264  000606  0792               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1265  000608  0101               	movlb	1	; () banked
  1266  00060A  0E01               	movlw	high main@msgbuffer
  1267  00060C  0100               	movlb	0	; () banked
  1268  00060E  0100               	movlb	0	; () banked
  1269  000610  6F94               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1270  000612  0101               	movlb	1	; () banked
  1271  000614  0E8B               	movlw	low main@msgbuffer
  1272  000616  0100               	movlb	0	; () banked
  1273  000618  0100               	movlb	0	; () banked
  1274  00061A  6F93               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1275  00061C  EC1D  F00E         	call	_timer0_lthread	;wreg free
  1276                           
  1277                           ;main.c: 409: break;
  1278  000620  D023               	goto	l2690
  1279  000622                     l138:
  1280                           
  1281                           ;main.c: 412: case 41:
  1282                           ;main.c: 413: {
  1283                           ;main.c: 416: last_reg_recvd = msgbuffer[0];
  1284  000622  C18B  F188         	movff	main@msgbuffer,main@last_reg_recvd
  1285                           
  1286                           ;main.c: 417: break;
  1287  000626  D020               	goto	l2690
  1288  000628                     l2684:
  1289                           
  1290                           ;main.c: 420: {
  1291                           ;main.c: 423: uart_trans(length, msgbuffer);
  1292  000628  0101               	movlb	1	; () banked
  1293  00062A  0E01               	movlw	high main@msgbuffer
  1294  00062C  0100               	movlb	0	; () banked
  1295  00062E  0100               	movlb	0	; () banked
  1296  000630  6F8E               	movwf	(uart_trans@data+1)& (0+255),b
  1297  000632  0101               	movlb	1	; () banked
  1298  000634  0E8B               	movlw	low main@msgbuffer
  1299  000636  0100               	movlb	0	; () banked
  1300  000638  0100               	movlb	0	; () banked
  1301  00063A  6F8D               	movwf	uart_trans@data& (0+255),b
  1302  00063C  0101               	movlb	1	; () banked
  1303  00063E  0101               	movlb	1	; () banked
  1304  000640  519B               	movf	main@length& (0+255),w,b
  1305  000642  EC1A  F008         	call	_uart_trans
  1306                           
  1307                           ;main.c: 426: break;
  1308  000646  D010               	goto	l2690
  1309  000648                     l2688:
  1310  000648  0101               	movlb	1	; () banked
  1311  00064A  0101               	movlb	1	; () banked
  1312  00064C  519A               	movf	main@msgtype& (0+255),w,b
  1313                           
  1314                           ; Switch size 1, requested type "space"
  1315                           ; Number of cases is 5, Range of values is 10 to 46
  1316                           ; switch strategies available:
  1317                           ; Name         Instructions Cycles
  1318                           ; simple_byte           16     9 (average)
  1319                           ;	Chosen strategy is simple_byte
  1320  00064E  0A0A               	xorlw	10	; case 10
  1321  000650  B4D8               	btfsc	status,2,c
  1322  000652  D7BE               	goto	l2682
  1323  000654  0A22               	xorlw	34	; case 40
  1324  000656  B4D8               	btfsc	status,2,c
  1325  000658  D7E4               	goto	l138
  1326  00065A  0A01               	xorlw	1	; case 41
  1327  00065C  B4D8               	btfsc	status,2,c
  1328  00065E  D7E1               	goto	l138
  1329  000660  0A04               	xorlw	4	; case 45
  1330  000662  B4D8               	btfsc	status,2,c
  1331  000664  D7E1               	goto	l2684
  1332  000666  0A03               	xorlw	3	; case 46
  1333  000668                     l2690:
  1334                           
  1335                           ;main.c: 441: }
  1336                           ;main.c: 444: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1337  000668  0101               	movlb	1	; () banked
  1338  00066A  0E01               	movlw	high main@msgtype
  1339  00066C  0100               	movlb	0	; () banked
  1340  00066E  0100               	movlb	0	; () banked
  1341  000670  6FA6               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1342  000672  0101               	movlb	1	; () banked
  1343  000674  0E9A               	movlw	low main@msgtype
  1344  000676  0100               	movlb	0	; () banked
  1345  000678  0100               	movlb	0	; () banked
  1346  00067A  6FA5               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1347  00067C  0101               	movlb	1	; () banked
  1348  00067E  0E01               	movlw	high main@msgbuffer
  1349  000680  0100               	movlb	0	; () banked
  1350  000682  0100               	movlb	0	; () banked
  1351  000684  6FA8               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1352  000686  0101               	movlb	1	; () banked
  1353  000688  0E8B               	movlw	low main@msgbuffer
  1354  00068A  0100               	movlb	0	; () banked
  1355  00068C  0100               	movlb	0	; () banked
  1356  00068E  6FA7               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1357  000690  0E0A               	movlw	10
  1358  000692  EC97  F00C         	call	_ToMainLow_recvmsg
  1359  000696  0101               	movlb	1	; () banked
  1360  000698  0101               	movlb	1	; () banked
  1361  00069A  6F9B               	movwf	main@length& (0+255),b
  1362                           
  1363                           ; BSR set to: 1
  1364                           ;main.c: 445: if (length < 0) {
  1365  00069C  0101               	movlb	1	; () banked
  1366  00069E  0101               	movlb	1	; () banked
  1367  0006A0  BF9B               	btfsc	main@length& (0+255),7,b
  1368  0006A2  D775               	goto	l2674
  1369  0006A4  D072               	goto	l2710
  1370  0006A6                     l2696:
  1371                           
  1372                           ; BSR set to: 1
  1373                           ;main.c: 453: {
  1374                           ;main.c: 454: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1375  0006A6  0101               	movlb	1	; () banked
  1376  0006A8  0E01               	movlw	high main@t1thread_data
  1377  0006AA  0100               	movlb	0	; () banked
  1378  0006AC  0100               	movlb	0	; () banked
  1379  0006AE  6FA8               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1380  0006B0  0101               	movlb	1	; () banked
  1381  0006B2  0E98               	movlw	low main@t1thread_data
  1382  0006B4  0100               	movlb	0	; () banked
  1383  0006B6  0100               	movlb	0	; () banked
  1384  0006B8  6FA7               	movwf	timer1_lthread@tptr& (0+255),b
  1385  0006BA  0101               	movlb	1	; () banked
  1386  0006BC  0100               	movlb	0	; () banked
  1387  0006BE  C19A  F0A9         	movff	main@msgtype,timer1_lthread@msgtype
  1388  0006C2  0100               	movlb	0	; () banked
  1389  0006C4  0100               	movlb	0	; () banked
  1390  0006C6  6BAA               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1391  0006C8  0101               	movlb	1	; () banked
  1392  0006CA  0101               	movlb	1	; () banked
  1393  0006CC  519B               	movf	main@length& (0+255),w,b
  1394  0006CE  0100               	movlb	0	; () banked
  1395  0006D0  0100               	movlb	0	; () banked
  1396  0006D2  6FAB               	movwf	timer1_lthread@length& (0+255),b
  1397  0006D4  0100               	movlb	0	; () banked
  1398  0006D6  6BAC               	clrf	(timer1_lthread@length+1)& (0+255),b
  1399  0006D8  0100               	movlb	0	; () banked
  1400  0006DA  BFAB               	btfsc	timer1_lthread@length& (0+255),7,b
  1401  0006DC  07AC               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1402  0006DE  0101               	movlb	1	; () banked
  1403  0006E0  0E01               	movlw	high main@msgbuffer
  1404  0006E2  0100               	movlb	0	; () banked
  1405  0006E4  0100               	movlb	0	; () banked
  1406  0006E6  6FAE               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1407  0006E8  0101               	movlb	1	; () banked
  1408  0006EA  0E8B               	movlw	low main@msgbuffer
  1409  0006EC  0100               	movlb	0	; () banked
  1410  0006EE  0100               	movlb	0	; () banked
  1411  0006F0  6FAD               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1412  0006F2  EC91  F00A         	call	_timer1_lthread	;wreg free
  1413                           
  1414                           ;main.c: 455: break;
  1415  0006F6  D74B               	goto	l2674
  1416  0006F8                     l2698:
  1417                           
  1418                           ;main.c: 458: case 31:
  1419                           ;main.c: 459: {
  1420                           ;main.c: 462: if(msgbuffer[0] == 0xBA){
  1421  0006F8  0101               	movlb	1	; () banked
  1422  0006FA  0101               	movlb	1	; () banked
  1423  0006FC  518B               	movf	main@msgbuffer& (0+255),w,b
  1424  0006FE  0ABA               	xorlw	186
  1425  000700  A4D8               	btfss	status,2,c
  1426  000702  D01E               	goto	l2702
  1427                           
  1428                           ; BSR set to: 1
  1429                           ;main.c: 464: i2c_master_send(5, 5, msgbuffer, 0xBE);
  1430  000704  0100               	movlb	0	; () banked
  1431  000706  6FB1               	movwf	??_main& (0+255),b
  1432  000708  0E05               	movlw	5
  1433  00070A  0100               	movlb	0	; () banked
  1434  00070C  0100               	movlb	0	; () banked
  1435  00070E  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1436  000710  0100               	movlb	0	; () banked
  1437  000712  51B1               	movf	??_main& (0+255),w,b
  1438  000714  0101               	movlb	1	; () banked
  1439  000716  0E01               	movlw	high main@msgbuffer
  1440  000718  0100               	movlb	0	; () banked
  1441  00071A  0100               	movlb	0	; () banked
  1442  00071C  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1443  00071E  0101               	movlb	1	; () banked
  1444  000720  0E8B               	movlw	low main@msgbuffer
  1445  000722  0100               	movlb	0	; () banked
  1446  000724  0100               	movlb	0	; () banked
  1447  000726  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1448  000728  0100               	movlb	0	; () banked
  1449  00072A  6FB2               	movwf	(??_main+1)& (0+255),b
  1450  00072C  0EBE               	movlw	190
  1451  00072E  0100               	movlb	0	; () banked
  1452  000730  0100               	movlb	0	; () banked
  1453  000732  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1454  000734  0100               	movlb	0	; () banked
  1455  000736  51B2               	movf	(??_main+1)& (0+255),w,b
  1456  000738  0E05               	movlw	5
  1457  00073A  EC81  F004         	call	_i2c_master_send
  1458                           
  1459                           ;main.c: 465: } else if(msgbuffer[0] == 0xAA){
  1460  00073E  D023               	goto	l2706
  1461  000740                     l2702:
  1462  000740  0101               	movlb	1	; () banked
  1463  000742  0101               	movlb	1	; () banked
  1464  000744  518B               	movf	main@msgbuffer& (0+255),w,b
  1465  000746  0AAA               	xorlw	170
  1466  000748  A4D8               	btfss	status,2,c
  1467  00074A  D01D               	goto	l2706
  1468                           
  1469                           ; BSR set to: 1
  1470                           ;main.c: 467: i2c_master_send(1, 5, msgbuffer, 0x9E);
  1471  00074C  0100               	movlb	0	; () banked
  1472  00074E  6FB1               	movwf	??_main& (0+255),b
  1473  000750  0E05               	movlw	5
  1474  000752  0100               	movlb	0	; () banked
  1475  000754  0100               	movlb	0	; () banked
  1476  000756  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1477  000758  0100               	movlb	0	; () banked
  1478  00075A  51B1               	movf	??_main& (0+255),w,b
  1479  00075C  0101               	movlb	1	; () banked
  1480  00075E  0E01               	movlw	high main@msgbuffer
  1481  000760  0100               	movlb	0	; () banked
  1482  000762  0100               	movlb	0	; () banked
  1483  000764  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1484  000766  0101               	movlb	1	; () banked
  1485  000768  0E8B               	movlw	low main@msgbuffer
  1486  00076A  0100               	movlb	0	; () banked
  1487  00076C  0100               	movlb	0	; () banked
  1488  00076E  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1489  000770  0100               	movlb	0	; () banked
  1490  000772  6FB2               	movwf	(??_main+1)& (0+255),b
  1491  000774  0E9E               	movlw	158
  1492  000776  0100               	movlb	0	; () banked
  1493  000778  0100               	movlb	0	; () banked
  1494  00077A  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1495  00077C  0100               	movlb	0	; () banked
  1496  00077E  51B2               	movf	(??_main+1)& (0+255),w,b
  1497  000780  0E01               	movlw	1
  1498  000782  EC81  F004         	call	_i2c_master_send
  1499  000786                     l2706:
  1500                           
  1501                           ;main.c: 468: }
  1502                           ;main.c: 470: LATBbits.LATB2 = 0;
  1503  000786  948A               	bcf	3978,2,c	;volatile
  1504                           
  1505                           ;main.c: 472: break;
  1506  000788  D702               	goto	l2674
  1507  00078A                     l2710:
  1508  00078A  0101               	movlb	1	; () banked
  1509  00078C  0101               	movlb	1	; () banked
  1510  00078E  519A               	movf	main@msgtype& (0+255),w,b
  1511                           
  1512                           ; Switch size 1, requested type "space"
  1513                           ; Number of cases is 3, Range of values is 11 to 31
  1514                           ; switch strategies available:
  1515                           ; Name         Instructions Cycles
  1516                           ; simple_byte           10     6 (average)
  1517                           ;	Chosen strategy is simple_byte
  1518  000790  0A0B               	xorlw	11	; case 11
  1519  000792  B4D8               	btfsc	status,2,c
  1520  000794  D788               	goto	l2696
  1521  000796  0A15               	xorlw	21	; case 30
  1522  000798  B4D8               	btfsc	status,2,c
  1523  00079A  D7AE               	goto	l2698
  1524  00079C  0A01               	xorlw	1	; case 31
  1525  00079E  B4D8               	btfsc	status,2,c
  1526  0007A0  D7AB               	goto	l2698
  1527  0007A2  D6F5               	goto	l2674
  1528  0007A4                     __end_of_main:
  1529                           	opt stack 0
  1530                           tblptru	equ	0xFF8
  1531                           tblptrh	equ	0xFF7
  1532                           tblptrl	equ	0xFF6
  1533                           tablat	equ	0xFF5
  1534                           intcon2	equ	0xFF1
  1535                           postinc0	equ	0xFEE
  1536                           wreg	equ	0xFE8
  1537                           postdec1	equ	0xFE5
  1538                           fsr1l	equ	0xFE1
  1539                           status	equ	0xFD8
  1540                           
  1541 ;; *************** function _uart_trans *****************
  1542 ;; Defined at:
  1543 ;;		line 61 in file "../src/my_uart.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  length          1    wreg     unsigned char 
  1546 ;;  data            2   45[BANK0 ] PTR unsigned char 
  1547 ;;		 -> i2c_slave_int_handler@motorcomm(2), main@msgbuffer(11), main@motorcomm(2), 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  length          1   49[BANK0 ] unsigned char 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;		None               void
  1552 ;; Registers used:
  1553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1559 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1560 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1561 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1562 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1563 ;;Total ram usage:        5 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:   11
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;;		_i2c_slave_int_handler
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text1
  1575  001034                     __ptext1:
  1576                           	opt stack 0
  1577  001034                     _uart_trans:
  1578                           	opt stack 19
  1579                           
  1580                           ; BSR set to: 1
  1581                           ;incstack = 0
  1582                           ;uart_trans@length stored from wreg
  1583  001034  CFE8 F091          	movff	wreg,uart_trans@length
  1584                           
  1585                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  1586  001038  EE20 F00B          	lfsr	2,11
  1587  00103C  503D               	movf	_uc_ptr,w,c
  1588  00103E  26D9               	addwf	fsr2l,f,c
  1589  001040  503E               	movf	_uc_ptr+1,w,c
  1590  001042  22DA               	addwfc	fsr2h,f,c
  1591  001044  0E00               	movlw	0
  1592  001046  6EDF               	movwf	indf2,c
  1593  001048  D035               	goto	l2834
  1594  00104A                     l2830:
  1595                           
  1596                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  1597  00104A  EE20 F00B          	lfsr	2,11
  1598  00104E  503D               	movf	_uc_ptr,w,c
  1599  001050  26D9               	addwf	fsr2l,f,c
  1600  001052  503E               	movf	_uc_ptr+1,w,c
  1601  001054  22DA               	addwfc	fsr2h,f,c
  1602  001056  50DF               	movf	indf2,w,c
  1603  001058  0100               	movlb	0	; () banked
  1604  00105A  6F8F               	movwf	??_uart_trans& (0+255),b
  1605  00105C  0100               	movlb	0	; () banked
  1606  00105E  518F               	movf	??_uart_trans& (0+255),w,b
  1607  001060  0D01               	mullw	1
  1608  001062  50F3               	movf	prodl,w,c
  1609  001064  0100               	movlb	0	; () banked
  1610  001066  0100               	movlb	0	; () banked
  1611  001068  258D               	addwf	uart_trans@data& (0+255),w,b
  1612  00106A  6ED9               	movwf	fsr2l,c
  1613  00106C  50F4               	movf	prodh,w,c
  1614  00106E  0100               	movlb	0	; () banked
  1615  001070  0100               	movlb	0	; () banked
  1616  001072  218E               	addwfc	(uart_trans@data+1)& (0+255),w,b
  1617  001074  6EDA               	movwf	fsr2h,c
  1618  001076  EE10 F00B          	lfsr	1,11
  1619  00107A  503D               	movf	_uc_ptr,w,c
  1620  00107C  26E1               	addwf	fsr1l,f,c
  1621  00107E  503E               	movf	_uc_ptr+1,w,c
  1622  001080  22E2               	addwfc	fsr1h,f,c
  1623  001082  50E7               	movf	indf1,w,c
  1624  001084  0100               	movlb	0	; () banked
  1625  001086  6F90               	movwf	(??_uart_trans+1)& (0+255),b
  1626  001088  0100               	movlb	0	; () banked
  1627  00108A  5190               	movf	(??_uart_trans+1)& (0+255),w,b
  1628  00108C  0D01               	mullw	1
  1629  00108E  0E06               	movlw	6
  1630  001090  26F3               	addwf	prodl,f,c
  1631  001092  0E00               	movlw	0
  1632  001094  22F4               	addwfc	prodh,f,c
  1633  001096  50F3               	movf	prodl,w,c
  1634  001098  243D               	addwf	_uc_ptr,w,c
  1635  00109A  6EE1               	movwf	fsr1l,c
  1636  00109C  50F4               	movf	prodh,w,c
  1637  00109E  203E               	addwfc	_uc_ptr+1,w,c
  1638  0010A0  6EE2               	movwf	fsr1h,c
  1639  0010A2  CFDF FFE7          	movff	indf2,indf1
  1640                           
  1641                           ; BSR set to: 0
  1642  0010A6  EE20 F00B          	lfsr	2,11
  1643  0010AA  503D               	movf	_uc_ptr,w,c
  1644  0010AC  26D9               	addwf	fsr2l,f,c
  1645  0010AE  503E               	movf	_uc_ptr+1,w,c
  1646  0010B0  22DA               	addwfc	fsr2h,f,c
  1647  0010B2  2ADF               	incf	indf2,f,c
  1648  0010B4                     l2834:
  1649  0010B4  EE20 F00B          	lfsr	2,11
  1650  0010B8  503D               	movf	_uc_ptr,w,c
  1651  0010BA  26D9               	addwf	fsr2l,f,c
  1652  0010BC  503E               	movf	_uc_ptr+1,w,c
  1653  0010BE  22DA               	addwfc	fsr2h,f,c
  1654  0010C0  50DF               	movf	indf2,w,c
  1655  0010C2  0100               	movlb	0	; () banked
  1656  0010C4  6F8F               	movwf	??_uart_trans& (0+255),b
  1657  0010C6  0100               	movlb	0	; () banked
  1658  0010C8  0100               	movlb	0	; () banked
  1659  0010CA  5191               	movf	uart_trans@length& (0+255),w,b
  1660  0010CC  0100               	movlb	0	; () banked
  1661  0010CE  5D8F               	subwf	??_uart_trans& (0+255),w,b
  1662  0010D0  A0D8               	btfss	status,0,c
  1663  0010D2  D7BB               	goto	l2830
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;my_uart.c: 67: }
  1667                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  1668                           
  1669                           ; BSR set to: 0
  1670  0010D4  EE20 F00C          	lfsr	2,12
  1671  0010D8  503D               	movf	_uc_ptr,w,c
  1672  0010DA  26D9               	addwf	fsr2l,f,c
  1673  0010DC  503E               	movf	_uc_ptr+1,w,c
  1674  0010DE  22DA               	addwfc	fsr2h,f,c
  1675  0010E0  0E00               	movlw	0
  1676  0010E2  6EDF               	movwf	indf2,c
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  1680  0010E4  889D               	bsf	3997,4,c	;volatile
  1681                           
  1682                           ; BSR set to: 0
  1683  0010E6  0012               	return	
  1684  0010E8                     __end_of_uart_trans:
  1685                           	opt stack 0
  1686                           tblptru	equ	0xFF8
  1687                           tblptrh	equ	0xFF7
  1688                           tblptrl	equ	0xFF6
  1689                           tablat	equ	0xFF5
  1690                           prodh	equ	0xFF4
  1691                           prodl	equ	0xFF3
  1692                           intcon2	equ	0xFF1
  1693                           postinc0	equ	0xFEE
  1694                           wreg	equ	0xFE8
  1695                           indf1	equ	0xFE7
  1696                           postdec1	equ	0xFE5
  1697                           fsr1h	equ	0xFE2
  1698                           fsr1l	equ	0xFE1
  1699                           indf2	equ	0xFDF
  1700                           fsr2h	equ	0xFDA
  1701                           fsr2l	equ	0xFD9
  1702                           status	equ	0xFD8
  1703                           
  1704 ;; *************** function _timer1_lthread *****************
  1705 ;; Defined at:
  1706 ;;		line 14 in file "../src/timer1_thread.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  tptr            2   71[BANK0 ] PTR struct __timer1_thre
  1709 ;;		 -> main@t1thread_data(2), 
  1710 ;;  msgtype         2   73[BANK0 ] int 
  1711 ;;  length          2   75[BANK0 ] int 
  1712 ;;  msgbuffer       2   77[BANK0 ] PTR unsigned char 
  1713 ;;		 -> main@msgbuffer(11), 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  retval          1   80[BANK0 ] char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  2   71[BANK0 ] int 
  1718 ;; Registers used:
  1719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1725 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1726 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1727 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1728 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1729 ;;Total ram usage:       10 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:   14
  1732 ;; This function calls:
  1733 ;;		_FromMainHigh_sendmsg
  1734 ;;		___lwmod
  1735 ;; This function is called by:
  1736 ;;		_main
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text2
  1741  001522                     __ptext2:
  1742                           	opt stack 0
  1743  001522                     _timer1_lthread:
  1744                           	opt stack 16
  1745                           
  1746                           ;timer1_thread.c: 15: signed char retval;
  1747                           ;timer1_thread.c: 17: tptr->msgcount++;
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;incstack = 0
  1751  001522  C0A7  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1752  001526  C0A8  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1753  00152A  2ADE               	incf	postinc2,f,c
  1754  00152C  0E00               	movlw	0
  1755  00152E  22DD               	addwfc	postdec2,f,c
  1756                           
  1757                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1758  001530  C0A7  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1759  001534  C0A8  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1760  001538  0100               	movlb	0	; () banked
  1761  00153A  CFDE F08D          	movff	postinc2,___lwmod@dividend
  1762  00153E  0100               	movlb	0	; () banked
  1763  001540  CFDD F08E          	movff	postdec2,___lwmod@dividend+1
  1764  001544  0E00               	movlw	0
  1765  001546  0100               	movlb	0	; () banked
  1766  001548  0100               	movlb	0	; () banked
  1767  00154A  6F90               	movwf	(___lwmod@divisor+1)& (0+255),b
  1768  00154C  0E0A               	movlw	10
  1769  00154E  0100               	movlb	0	; () banked
  1770  001550  6F8F               	movwf	___lwmod@divisor& (0+255),b
  1771  001552  EC12  F009         	call	___lwmod	;wreg free
  1772  001556  0100               	movlb	0	; () banked
  1773  001558  0100               	movlb	0	; () banked
  1774  00155A  518D               	movf	?___lwmod& (0+255),w,b
  1775  00155C  0A09               	xorlw	9
  1776  00155E  0100               	movlb	0	; () banked
  1777  001560  118E               	iorwf	(?___lwmod+1)& (0+255),w,b
  1778  001562  A4D8               	btfss	status,2,c
  1779  001564  0012               	return	
  1780                           
  1781                           ; BSR set to: 0
  1782                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1783  001566  0100               	movlb	0	; () banked
  1784  001568  6FAF               	movwf	??_timer1_lthread& (0+255),b
  1785  00156A  0E14               	movlw	20
  1786  00156C  0100               	movlb	0	; () banked
  1787  00156E  0100               	movlb	0	; () banked
  1788  001570  6FA3               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1789  001572  0100               	movlb	0	; () banked
  1790  001574  51AF               	movf	??_timer1_lthread& (0+255),w,b
  1791  001576  0100               	movlb	0	; () banked
  1792  001578  0100               	movlb	0	; () banked
  1793  00157A  C0A8  F0A5         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1794  00157E  0100               	movlb	0	; () banked
  1795  001580  0100               	movlb	0	; () banked
  1796  001582  C0A7  F0A4         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1797  001586  0E02               	movlw	2
  1798  001588  EC19  F00D         	call	_FromMainHigh_sendmsg
  1799  00158C  0100               	movlb	0	; () banked
  1800  00158E  0100               	movlb	0	; () banked
  1801  001590  6FB0               	movwf	timer1_lthread@retval& (0+255),b
  1802  001592  0012               	return	
  1803  001594                     __end_of_timer1_lthread:
  1804                           	opt stack 0
  1805                           tblptru	equ	0xFF8
  1806                           tblptrh	equ	0xFF7
  1807                           tblptrl	equ	0xFF6
  1808                           tablat	equ	0xFF5
  1809                           prodh	equ	0xFF4
  1810                           prodl	equ	0xFF3
  1811                           intcon2	equ	0xFF1
  1812                           postinc0	equ	0xFEE
  1813                           wreg	equ	0xFE8
  1814                           indf1	equ	0xFE7
  1815                           postdec1	equ	0xFE5
  1816                           fsr1h	equ	0xFE2
  1817                           fsr1l	equ	0xFE1
  1818                           indf2	equ	0xFDF
  1819                           postinc2	equ	0xFDE
  1820                           postdec2	equ	0xFDD
  1821                           fsr2h	equ	0xFDA
  1822                           fsr2l	equ	0xFD9
  1823                           status	equ	0xFD8
  1824                           
  1825 ;; *************** function ___lwmod *****************
  1826 ;; Defined at:
  1827 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  dividend        2   45[BANK0 ] unsigned int 
  1830 ;;  divisor         2   47[BANK0 ] unsigned int 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  counter         1   50[BANK0 ] unsigned char 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  2   45[BANK0 ] unsigned int 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1842 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1843 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1844 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1845 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1846 ;;Total ram usage:        6 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; Hardware stack levels required when called:   11
  1849 ;; This function calls:
  1850 ;;		Nothing
  1851 ;; This function is called by:
  1852 ;;		_timer1_lthread
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text3
  1857  001224                     __ptext3:
  1858                           	opt stack 0
  1859  001224                     ___lwmod:
  1860                           	opt stack 18
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;incstack = 0
  1864  001224  0100               	movlb	0	; () banked
  1865  001226  0100               	movlb	0	; () banked
  1866  001228  5190               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1867  00122A  118F               	iorwf	___lwmod@divisor& (0+255),w,b
  1868  00122C  B4D8               	btfsc	status,2,c
  1869  00122E  D03A               	goto	l1126
  1870                           
  1871                           ; BSR set to: 0
  1872  001230  0100               	movlb	0	; () banked
  1873  001232  6F91               	movwf	??___lwmod& (0+255),b
  1874  001234  0E01               	movlw	1
  1875  001236  0100               	movlb	0	; () banked
  1876  001238  0100               	movlb	0	; () banked
  1877  00123A  6F92               	movwf	___lwmod@counter& (0+255),b
  1878  00123C  0100               	movlb	0	; () banked
  1879  00123E  5191               	movf	??___lwmod& (0+255),w,b
  1880  001240  D009               	goto	l3330
  1881  001242                     l3328:
  1882                           
  1883                           ; BSR set to: 0
  1884  001242  0100               	movlb	0	; () banked
  1885  001244  0100               	movlb	0	; () banked
  1886  001246  0100               	movlb	0	; () banked
  1887  001248  90D8               	bcf	status,0,c
  1888  00124A  378F               	rlcf	___lwmod@divisor& (0+255),f,b
  1889  00124C  3790               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1890  00124E  0100               	movlb	0	; () banked
  1891  001250  0100               	movlb	0	; () banked
  1892  001252  2B92               	incf	___lwmod@counter& (0+255),f,b
  1893  001254                     l3330:
  1894                           
  1895                           ; BSR set to: 0
  1896  001254  0100               	movlb	0	; () banked
  1897  001256  0100               	movlb	0	; () banked
  1898  001258  AF90               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1899  00125A  D7F3               	goto	l3328
  1900  00125C                     l3332:
  1901                           
  1902                           ; BSR set to: 0
  1903  00125C  0100               	movlb	0	; () banked
  1904  00125E  0100               	movlb	0	; () banked
  1905  001260  518F               	movf	___lwmod@divisor& (0+255),w,b
  1906  001262  0100               	movlb	0	; () banked
  1907  001264  0100               	movlb	0	; () banked
  1908  001266  5D8D               	subwf	___lwmod@dividend& (0+255),w,b
  1909  001268  0100               	movlb	0	; () banked
  1910  00126A  0100               	movlb	0	; () banked
  1911  00126C  5190               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1912  00126E  0100               	movlb	0	; () banked
  1913  001270  0100               	movlb	0	; () banked
  1914  001272  598E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1915  001274  A0D8               	btfss	status,0,c
  1916  001276  D00C               	goto	l3336
  1917                           
  1918                           ; BSR set to: 0
  1919  001278  0100               	movlb	0	; () banked
  1920  00127A  0100               	movlb	0	; () banked
  1921  00127C  518F               	movf	___lwmod@divisor& (0+255),w,b
  1922  00127E  0100               	movlb	0	; () banked
  1923  001280  0100               	movlb	0	; () banked
  1924  001282  5F8D               	subwf	___lwmod@dividend& (0+255),f,b
  1925  001284  0100               	movlb	0	; () banked
  1926  001286  0100               	movlb	0	; () banked
  1927  001288  5190               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1928  00128A  0100               	movlb	0	; () banked
  1929  00128C  0100               	movlb	0	; () banked
  1930  00128E  5B8E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1931  001290                     l3336:
  1932                           
  1933                           ; BSR set to: 0
  1934  001290  0100               	movlb	0	; () banked
  1935  001292  0100               	movlb	0	; () banked
  1936  001294  0100               	movlb	0	; () banked
  1937  001296  90D8               	bcf	status,0,c
  1938  001298  3390               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1939  00129A  338F               	rrcf	___lwmod@divisor& (0+255),f,b
  1940                           
  1941                           ; BSR set to: 0
  1942  00129C  0100               	movlb	0	; () banked
  1943  00129E  0100               	movlb	0	; () banked
  1944  0012A0  2F92               	decfsz	___lwmod@counter& (0+255),f,b
  1945  0012A2  D7DC               	goto	l3332
  1946  0012A4                     l1126:
  1947                           
  1948                           ; BSR set to: 0
  1949  0012A4  C08D  F08D         	movff	___lwmod@dividend,?___lwmod
  1950  0012A8  C08E  F08E         	movff	___lwmod@dividend+1,?___lwmod+1
  1951                           
  1952                           ; BSR set to: 0
  1953  0012AC  0012               	return	
  1954  0012AE                     __end_of___lwmod:
  1955                           	opt stack 0
  1956                           tblptru	equ	0xFF8
  1957                           tblptrh	equ	0xFF7
  1958                           tblptrl	equ	0xFF6
  1959                           tablat	equ	0xFF5
  1960                           prodh	equ	0xFF4
  1961                           prodl	equ	0xFF3
  1962                           intcon2	equ	0xFF1
  1963                           postinc0	equ	0xFEE
  1964                           wreg	equ	0xFE8
  1965                           indf1	equ	0xFE7
  1966                           postdec1	equ	0xFE5
  1967                           fsr1h	equ	0xFE2
  1968                           fsr1l	equ	0xFE1
  1969                           indf2	equ	0xFDF
  1970                           postinc2	equ	0xFDE
  1971                           postdec2	equ	0xFDD
  1972                           fsr2h	equ	0xFDA
  1973                           fsr2l	equ	0xFD9
  1974                           status	equ	0xFD8
  1975                           
  1976 ;; *************** function _FromMainHigh_sendmsg *****************
  1977 ;; Defined at:
  1978 ;;		line 174 in file "../src/messages.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  length          1    wreg     unsigned char 
  1981 ;;  msgtype         1   67[BANK0 ] unsigned char 
  1982 ;;  data            2   68[BANK0 ] PTR void 
  1983 ;;		 -> main@t1thread_data(2), 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  length          1   70[BANK0 ] unsigned char 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      char 
  1988 ;; Registers used:
  1989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1995 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1996 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1998 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1999 ;;Total ram usage:        4 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:   13
  2002 ;; This function calls:
  2003 ;;		_send_msg
  2004 ;; This function is called by:
  2005 ;;		_timer1_lthread
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text4
  2010  001A32                     __ptext4:
  2011                           	opt stack 0
  2012  001A32                     _FromMainHigh_sendmsg:
  2013                           	opt stack 16
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;incstack = 0
  2017                           ;FromMainHigh_sendmsg@length stored from wreg
  2018  001A32  CFE8 F0A6          	movff	wreg,FromMainHigh_sendmsg@length
  2019                           
  2020                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2021  001A36  0102               	movlb	2	; () banked
  2022  001A38  0E02               	movlw	high _FromMainHigh_MQ
  2023  001A3A  0100               	movlb	0	; () banked
  2024  001A3C  0100               	movlb	0	; () banked
  2025  001A3E  6F98               	movwf	(send_msg@qptr+1)& (0+255),b
  2026  001A40  0102               	movlb	2	; () banked
  2027  001A42  0E00               	movlw	low _FromMainHigh_MQ
  2028  001A44  0100               	movlb	0	; () banked
  2029  001A46  0100               	movlb	0	; () banked
  2030  001A48  6F97               	movwf	send_msg@qptr& (0+255),b
  2031  001A4A  C0A6  F099         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2032  001A4E  C0A3  F09A         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2033  001A52  0100               	movlb	0	; () banked
  2034  001A54  0100               	movlb	0	; () banked
  2035  001A56  C0A5  F09C         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2036  001A5A  0100               	movlb	0	; () banked
  2037  001A5C  0100               	movlb	0	; () banked
  2038  001A5E  C0A4  F09B         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2039  001A62  EC20  F005         	call	_send_msg	;wreg free
  2040  001A66  0012               	return	
  2041  001A68                     __end_of_FromMainHigh_sendmsg:
  2042                           	opt stack 0
  2043                           tblptru	equ	0xFF8
  2044                           tblptrh	equ	0xFF7
  2045                           tblptrl	equ	0xFF6
  2046                           tablat	equ	0xFF5
  2047                           prodh	equ	0xFF4
  2048                           prodl	equ	0xFF3
  2049                           intcon2	equ	0xFF1
  2050                           postinc0	equ	0xFEE
  2051                           wreg	equ	0xFE8
  2052                           indf1	equ	0xFE7
  2053                           postdec1	equ	0xFE5
  2054                           fsr1h	equ	0xFE2
  2055                           fsr1l	equ	0xFE1
  2056                           indf2	equ	0xFDF
  2057                           postinc2	equ	0xFDE
  2058                           postdec2	equ	0xFDD
  2059                           fsr2h	equ	0xFDA
  2060                           fsr2l	equ	0xFD9
  2061                           status	equ	0xFD8
  2062                           
  2063 ;; *************** function _send_msg *****************
  2064 ;; Defined at:
  2065 ;;		line 24 in file "../src/messages.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  qptr            2   55[BANK0 ] PTR struct __msg_queue
  2068 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2069 ;;  length          1   57[BANK0 ] unsigned char 
  2070 ;;  msgtype         1   58[BANK0 ] unsigned char 
  2071 ;;  data            2   59[BANK0 ] PTR void 
  2072 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  2073 ;;		 -> main@uc(13), 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  qmsg            2   65[BANK0 ] PTR struct __msg
  2076 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  2077 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2078 ;;  tlength         2   62[BANK0 ] unsigned int 
  2079 ;;  slot            1   64[BANK0 ] unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      char 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2089 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2090 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2091 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2092 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2093 ;;Total ram usage:       12 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:   12
  2096 ;; This function calls:
  2097 ;;		___awmod
  2098 ;;		_memcpy
  2099 ;; This function is called by:
  2100 ;;		_FromMainHigh_sendmsg
  2101 ;;		_FromMainLow_sendmsg
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text5
  2106  000A40                     __ptext5:
  2107                           	opt stack 0
  2108  000A40                     _send_msg:
  2109                           	opt stack 16
  2110                           
  2111                           ;messages.c: 25: unsigned char slot;
  2112                           ;messages.c: 27: msg *qmsg;
  2113                           ;messages.c: 28: size_t tlength = length;
  2114                           
  2115                           ;incstack = 0
  2116  000A40  0100               	movlb	0	; () banked
  2117  000A42  0100               	movlb	0	; () banked
  2118  000A44  C099  F09E         	movff	send_msg@length,send_msg@tlength
  2119  000A48  0100               	movlb	0	; () banked
  2120  000A4A  0100               	movlb	0	; () banked
  2121  000A4C  6B9F               	clrf	(send_msg@tlength+1)& (0+255),b
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2125  000A4E  0100               	movlb	0	; () banked
  2126  000A50  EE20 F041          	lfsr	2,65
  2127  000A54  0100               	movlb	0	; () banked
  2128  000A56  5197               	movf	send_msg@qptr& (0+255),w,b
  2129  000A58  26D9               	addwf	fsr2l,f,c
  2130  000A5A  0100               	movlb	0	; () banked
  2131  000A5C  5198               	movf	(send_msg@qptr+1)& (0+255),w,b
  2132  000A5E  22DA               	addwfc	fsr2h,f,c
  2133  000A60  50DF               	movf	indf2,w,c
  2134  000A62  0100               	movlb	0	; () banked
  2135  000A64  0100               	movlb	0	; () banked
  2136  000A66  6FA0               	movwf	send_msg@slot& (0+255),b
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2140  000A68  0100               	movlb	0	; () banked
  2141  000A6A  0100               	movlb	0	; () banked
  2142  000A6C  51A0               	movf	send_msg@slot& (0+255),w,b
  2143  000A6E  0D0D               	mullw	13
  2144  000A70  50F3               	movf	prodl,w,c
  2145  000A72  0100               	movlb	0	; () banked
  2146  000A74  0100               	movlb	0	; () banked
  2147  000A76  2597               	addwf	send_msg@qptr& (0+255),w,b
  2148  000A78  0100               	movlb	0	; () banked
  2149  000A7A  0100               	movlb	0	; () banked
  2150  000A7C  6FA1               	movwf	send_msg@qmsg& (0+255),b
  2151  000A7E  50F4               	movf	prodh,w,c
  2152  000A80  0100               	movlb	0	; () banked
  2153  000A82  0100               	movlb	0	; () banked
  2154  000A84  2198               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2155  000A86  0100               	movlb	0	; () banked
  2156  000A88  6FA2               	movwf	(send_msg@qmsg+1)& (0+255),b
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;messages.c: 41: if (qmsg->full != 0) {
  2160  000A8A  C0A1  FFD9         	movff	send_msg@qmsg,fsr2l
  2161  000A8E  C0A2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2162  000A92  50DF               	movf	indf2,w,c
  2163  000A94  B4D8               	btfsc	status,2,c
  2164  000A96  D002               	goto	l2918
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;messages.c: 42: return (-1);
  2168  000A98  0EFF               	movlw	255
  2169  000A9A  0012               	return	
  2170  000A9C                     l2918:
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;messages.c: 43: }
  2174                           ;messages.c: 46: qmsg->length = length;
  2175  000A9C  0100               	movlb	0	; () banked
  2176  000A9E  EE20 F001          	lfsr	2,1
  2177  000AA2  0100               	movlb	0	; () banked
  2178  000AA4  51A1               	movf	send_msg@qmsg& (0+255),w,b
  2179  000AA6  26D9               	addwf	fsr2l,f,c
  2180  000AA8  0100               	movlb	0	; () banked
  2181  000AAA  51A2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2182  000AAC  22DA               	addwfc	fsr2h,f,c
  2183  000AAE  0100               	movlb	0	; () banked
  2184  000AB0  C099  FFDF         	movff	send_msg@length,indf2
  2185                           
  2186                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2187  000AB4  0100               	movlb	0	; () banked
  2188  000AB6  EE20 F002          	lfsr	2,2
  2189  000ABA  0100               	movlb	0	; () banked
  2190  000ABC  51A1               	movf	send_msg@qmsg& (0+255),w,b
  2191  000ABE  26D9               	addwf	fsr2l,f,c
  2192  000AC0  0100               	movlb	0	; () banked
  2193  000AC2  51A2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2194  000AC4  22DA               	addwfc	fsr2h,f,c
  2195  000AC6  0100               	movlb	0	; () banked
  2196  000AC8  C09A  FFDF         	movff	send_msg@msgtype,indf2
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2200  000ACC  0E03               	movlw	3
  2201  000ACE  0100               	movlb	0	; () banked
  2202  000AD0  0100               	movlb	0	; () banked
  2203  000AD2  25A1               	addwf	send_msg@qmsg& (0+255),w,b
  2204  000AD4  0100               	movlb	0	; () banked
  2205  000AD6  0100               	movlb	0	; () banked
  2206  000AD8  6F8D               	movwf	memcpy@d1& (0+255),b
  2207  000ADA  0E00               	movlw	0
  2208  000ADC  0100               	movlb	0	; () banked
  2209  000ADE  0100               	movlb	0	; () banked
  2210  000AE0  21A2               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2211  000AE2  0100               	movlb	0	; () banked
  2212  000AE4  6F8E               	movwf	(memcpy@d1+1)& (0+255),b
  2213  000AE6  0100               	movlb	0	; () banked
  2214  000AE8  0100               	movlb	0	; () banked
  2215  000AEA  C09C  F090         	movff	send_msg@data+1,memcpy@s1+1
  2216  000AEE  0100               	movlb	0	; () banked
  2217  000AF0  0100               	movlb	0	; () banked
  2218  000AF2  C09B  F08F         	movff	send_msg@data,memcpy@s1
  2219  000AF6  C09E  F091         	movff	send_msg@tlength,memcpy@n
  2220  000AFA  C09F  F092         	movff	send_msg@tlength+1,memcpy@n+1
  2221  000AFE  ECD1  F00B         	call	_memcpy	;wreg free
  2222                           
  2223                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  2224  000B02  0100               	movlb	0	; () banked
  2225  000B04  EE20 F041          	lfsr	2,65
  2226  000B08  0100               	movlb	0	; () banked
  2227  000B0A  5197               	movf	send_msg@qptr& (0+255),w,b
  2228  000B0C  26D9               	addwf	fsr2l,f,c
  2229  000B0E  0100               	movlb	0	; () banked
  2230  000B10  5198               	movf	(send_msg@qptr+1)& (0+255),w,b
  2231  000B12  22DA               	addwfc	fsr2h,f,c
  2232  000B14  0100               	movlb	0	; () banked
  2233  000B16  EE10 F041          	lfsr	1,65
  2234  000B1A  0100               	movlb	0	; () banked
  2235  000B1C  5197               	movf	send_msg@qptr& (0+255),w,b
  2236  000B1E  26E1               	addwf	fsr1l,f,c
  2237  000B20  0100               	movlb	0	; () banked
  2238  000B22  5198               	movf	(send_msg@qptr+1)& (0+255),w,b
  2239  000B24  22E2               	addwfc	fsr1h,f,c
  2240  000B26  50E7               	movf	indf1,w,c
  2241  000B28  0100               	movlb	0	; () banked
  2242  000B2A  6F9D               	movwf	??_send_msg& (0+255),b
  2243  000B2C  0E01               	movlw	1
  2244  000B2E  0100               	movlb	0	; () banked
  2245  000B30  259D               	addwf	??_send_msg& (0+255),w,b
  2246  000B32  0100               	movlb	0	; () banked
  2247  000B34  0100               	movlb	0	; () banked
  2248  000B36  6F8D               	movwf	___awmod@dividend& (0+255),b
  2249  000B38  0100               	movlb	0	; () banked
  2250  000B3A  0100               	movlb	0	; () banked
  2251  000B3C  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
  2252  000B3E  0E00               	movlw	0
  2253  000B40  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  2254  000B42  0E00               	movlw	0
  2255  000B44  0100               	movlb	0	; () banked
  2256  000B46  0100               	movlb	0	; () banked
  2257  000B48  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
  2258  000B4A  0E05               	movlw	5
  2259  000B4C  0100               	movlb	0	; () banked
  2260  000B4E  6F8F               	movwf	___awmod@divisor& (0+255),b
  2261  000B50  EC4C  F006         	call	___awmod	;wreg free
  2262  000B54  0100               	movlb	0	; () banked
  2263  000B56  0100               	movlb	0	; () banked
  2264  000B58  518D               	movf	?___awmod& (0+255),w,b
  2265  000B5A  6EDF               	movwf	indf2,c
  2266                           
  2267                           ; BSR set to: 0
  2268                           ;messages.c: 59: qmsg->full = 1;
  2269  000B5C  C0A1  FFD9         	movff	send_msg@qmsg,fsr2l
  2270  000B60  C0A2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2271  000B64  0E01               	movlw	1
  2272  000B66  6EDF               	movwf	indf2,c
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;messages.c: 60: return (1);
  2276  000B68  0E01               	movlw	1
  2277  000B6A  0012               	return	
  2278  000B6C                     __end_of_send_msg:
  2279                           	opt stack 0
  2280                           tblptru	equ	0xFF8
  2281                           tblptrh	equ	0xFF7
  2282                           tblptrl	equ	0xFF6
  2283                           tablat	equ	0xFF5
  2284                           prodh	equ	0xFF4
  2285                           prodl	equ	0xFF3
  2286                           intcon2	equ	0xFF1
  2287                           postinc0	equ	0xFEE
  2288                           wreg	equ	0xFE8
  2289                           indf1	equ	0xFE7
  2290                           postdec1	equ	0xFE5
  2291                           fsr1h	equ	0xFE2
  2292                           fsr1l	equ	0xFE1
  2293                           indf2	equ	0xFDF
  2294                           postinc2	equ	0xFDE
  2295                           postdec2	equ	0xFDD
  2296                           fsr2h	equ	0xFDA
  2297                           fsr2l	equ	0xFD9
  2298                           status	equ	0xFD8
  2299                           
  2300 ;; *************** function _timer0_lthread *****************
  2301 ;; Defined at:
  2302 ;;		line 9 in file "../src/timer0_thread.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;  tptr            2   45[BANK0 ] PTR struct __timer0_thre
  2305 ;;		 -> main@t0thread_data(2), 
  2306 ;;  msgtype         2   47[BANK0 ] int 
  2307 ;;  length          2   49[BANK0 ] int 
  2308 ;;  msgbuffer       2   51[BANK0 ] PTR unsigned char 
  2309 ;;		 -> main@msgbuffer(11), 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  msgval          2   53[BANK0 ] PTR unsigned int 
  2312 ;;		 -> main@msgbuffer(11), 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  2   45[BANK0 ] int 
  2315 ;; Registers used:
  2316 ;;		wreg, status,2, status,0
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2322 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2323 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2325 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2326 ;;Total ram usage:       10 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; Hardware stack levels required when called:   11
  2329 ;; This function calls:
  2330 ;;		Nothing
  2331 ;; This function is called by:
  2332 ;;		_main
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text6
  2337  001C3A                     __ptext6:
  2338                           	opt stack 0
  2339  001C3A                     _timer0_lthread:
  2340                           	opt stack 19
  2341                           
  2342                           ;timer0_thread.c: 10: unsigned int *msgval;
  2343                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;incstack = 0
  2347  001C3A  0100               	movlb	0	; () banked
  2348  001C3C  0100               	movlb	0	; () banked
  2349  001C3E  C094  F096         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2350  001C42  0100               	movlb	0	; () banked
  2351  001C44  0100               	movlb	0	; () banked
  2352  001C46  C093  F095         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2353                           
  2354                           ; BSR set to: 0
  2355  001C4A  0012               	return	
  2356  001C4C                     __end_of_timer0_lthread:
  2357                           	opt stack 0
  2358                           tblptru	equ	0xFF8
  2359                           tblptrh	equ	0xFF7
  2360                           tblptrl	equ	0xFF6
  2361                           tablat	equ	0xFF5
  2362                           prodh	equ	0xFF4
  2363                           prodl	equ	0xFF3
  2364                           intcon2	equ	0xFF1
  2365                           postinc0	equ	0xFEE
  2366                           wreg	equ	0xFE8
  2367                           indf1	equ	0xFE7
  2368                           postdec1	equ	0xFE5
  2369                           fsr1h	equ	0xFE2
  2370                           fsr1l	equ	0xFE1
  2371                           indf2	equ	0xFDF
  2372                           postinc2	equ	0xFDE
  2373                           postdec2	equ	0xFDD
  2374                           fsr2h	equ	0xFDA
  2375                           fsr2l	equ	0xFD9
  2376                           status	equ	0xFD8
  2377                           
  2378 ;; *************** function _init_uart_recv *****************
  2379 ;; Defined at:
  2380 ;;		line 54 in file "../src/my_uart.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  uc              2   45[BANK0 ] PTR struct __uart_comm
  2383 ;;		 -> main@uc(13), 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;		None
  2386 ;; Return value:  Size  Location     Type
  2387 ;;		None               void
  2388 ;; Registers used:
  2389 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2395 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2398 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2399 ;;Total ram usage:        2 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:   11
  2402 ;; This function calls:
  2403 ;;		Nothing
  2404 ;; This function is called by:
  2405 ;;		_main
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text7
  2410  001BD0                     __ptext7:
  2411                           	opt stack 0
  2412  001BD0                     _init_uart_recv:
  2413                           	opt stack 19
  2414                           
  2415                           ;my_uart.c: 57: uc_ptr = uc;
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;incstack = 0
  2419  001BD0  0100               	movlb	0	; () banked
  2420  001BD2  C08E  F03E         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2421  001BD6  0100               	movlb	0	; () banked
  2422  001BD8  C08D  F03D         	movff	init_uart_recv@uc,_uc_ptr
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;my_uart.c: 58: uc_ptr->buflen = 0;
  2426  001BDC  EE20 F005          	lfsr	2,5
  2427  001BE0  503D               	movf	_uc_ptr,w,c
  2428  001BE2  26D9               	addwf	fsr2l,f,c
  2429  001BE4  503E               	movf	_uc_ptr+1,w,c
  2430  001BE6  22DA               	addwfc	fsr2h,f,c
  2431  001BE8  0E00               	movlw	0
  2432  001BEA  6EDF               	movwf	indf2,c
  2433                           
  2434                           ; BSR set to: 0
  2435  001BEC  0012               	return	
  2436  001BEE                     __end_of_init_uart_recv:
  2437                           	opt stack 0
  2438                           tblptru	equ	0xFF8
  2439                           tblptrh	equ	0xFF7
  2440                           tblptrl	equ	0xFF6
  2441                           tablat	equ	0xFF5
  2442                           prodh	equ	0xFF4
  2443                           prodl	equ	0xFF3
  2444                           intcon2	equ	0xFF1
  2445                           postinc0	equ	0xFEE
  2446                           wreg	equ	0xFE8
  2447                           indf1	equ	0xFE7
  2448                           postdec1	equ	0xFE5
  2449                           fsr1h	equ	0xFE2
  2450                           fsr1l	equ	0xFE1
  2451                           indf2	equ	0xFDF
  2452                           postinc2	equ	0xFDE
  2453                           postdec2	equ	0xFDD
  2454                           fsr2h	equ	0xFDA
  2455                           fsr2l	equ	0xFD9
  2456                           status	equ	0xFD8
  2457                           
  2458 ;; *************** function _init_timer1_lthread *****************
  2459 ;; Defined at:
  2460 ;;		line 6 in file "../src/timer1_thread.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  tptr            2   45[BANK0 ] PTR struct __timer1_thre
  2463 ;;		 -> main@t1thread_data(2), 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;		None               void
  2468 ;; Registers used:
  2469 ;;		wreg, fsr2l, fsr2h
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2475 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2478 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2479 ;;Total ram usage:        2 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:   11
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_main
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text8
  2490  001C4C                     __ptext8:
  2491                           	opt stack 0
  2492  001C4C                     _init_timer1_lthread:
  2493                           	opt stack 19
  2494                           
  2495                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;incstack = 0
  2499  001C4C  C08D  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2500  001C50  C08E  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2501  001C54  0E00               	movlw	0
  2502  001C56  6EDE               	movwf	postinc2,c
  2503  001C58  0E00               	movlw	0
  2504  001C5A  6EDD               	movwf	postdec2,c
  2505  001C5C  0012               	return	
  2506  001C5E                     __end_of_init_timer1_lthread:
  2507                           	opt stack 0
  2508                           tblptru	equ	0xFF8
  2509                           tblptrh	equ	0xFF7
  2510                           tblptrl	equ	0xFF6
  2511                           tablat	equ	0xFF5
  2512                           prodh	equ	0xFF4
  2513                           prodl	equ	0xFF3
  2514                           intcon2	equ	0xFF1
  2515                           postinc0	equ	0xFEE
  2516                           wreg	equ	0xFE8
  2517                           indf1	equ	0xFE7
  2518                           postdec1	equ	0xFE5
  2519                           fsr1h	equ	0xFE2
  2520                           fsr1l	equ	0xFE1
  2521                           indf2	equ	0xFDF
  2522                           postinc2	equ	0xFDE
  2523                           postdec2	equ	0xFDD
  2524                           fsr2h	equ	0xFDA
  2525                           fsr2l	equ	0xFD9
  2526                           status	equ	0xFD8
  2527                           
  2528 ;; *************** function _init_queues *****************
  2529 ;; Defined at:
  2530 ;;		line 194 in file "../src/messages.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;		None
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;		None
  2535 ;; Return value:  Size  Location     Type
  2536 ;;		None               void
  2537 ;; Registers used:
  2538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2546 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2547 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2548 ;;Total ram usage:        1 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:   12
  2551 ;; This function calls:
  2552 ;;		_init_queue
  2553 ;; This function is called by:
  2554 ;;		_main
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text9
  2559  001594                     __ptext9:
  2560                           	opt stack 0
  2561  001594                     _init_queues:
  2562                           	opt stack 18
  2563                           
  2564                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2565                           
  2566                           ;incstack = 0
  2567  001594  0100               	movlb	0	; () banked
  2568  001596  6F91               	movwf	??_init_queues& (0+255),b
  2569  001598  0E00               	movlw	0
  2570  00159A  6E3B               	movwf	_MQ_Main_Willing_to_block,c
  2571  00159C  0100               	movlb	0	; () banked
  2572  00159E  5191               	movf	??_init_queues& (0+255),w,b
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2576  0015A0  0101               	movlb	1	; () banked
  2577  0015A2  0E01               	movlw	high _ToMainLow_MQ
  2578  0015A4  0100               	movlb	0	; () banked
  2579  0015A6  0100               	movlb	0	; () banked
  2580  0015A8  6F8E               	movwf	(init_queue@qptr+1)& (0+255),b
  2581  0015AA  0101               	movlb	1	; () banked
  2582  0015AC  0E43               	movlw	low _ToMainLow_MQ
  2583  0015AE  0100               	movlb	0	; () banked
  2584  0015B0  0100               	movlb	0	; () banked
  2585  0015B2  6F8D               	movwf	init_queue@qptr& (0+255),b
  2586  0015B4  EC19  F00A         	call	_init_queue	;wreg free
  2587                           
  2588                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2589  0015B8  0101               	movlb	1	; () banked
  2590  0015BA  0E01               	movlw	high _ToMainHigh_MQ
  2591  0015BC  0100               	movlb	0	; () banked
  2592  0015BE  0100               	movlb	0	; () banked
  2593  0015C0  6F8E               	movwf	(init_queue@qptr+1)& (0+255),b
  2594  0015C2  0101               	movlb	1	; () banked
  2595  0015C4  0E00               	movlw	low _ToMainHigh_MQ
  2596  0015C6  0100               	movlb	0	; () banked
  2597  0015C8  0100               	movlb	0	; () banked
  2598  0015CA  6F8D               	movwf	init_queue@qptr& (0+255),b
  2599  0015CC  EC19  F00A         	call	_init_queue	;wreg free
  2600                           
  2601                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2602  0015D0  0102               	movlb	2	; () banked
  2603  0015D2  0E02               	movlw	high _FromMainLow_MQ
  2604  0015D4  0100               	movlb	0	; () banked
  2605  0015D6  0100               	movlb	0	; () banked
  2606  0015D8  6F8E               	movwf	(init_queue@qptr+1)& (0+255),b
  2607  0015DA  0102               	movlb	2	; () banked
  2608  0015DC  0E43               	movlw	low _FromMainLow_MQ
  2609  0015DE  0100               	movlb	0	; () banked
  2610  0015E0  0100               	movlb	0	; () banked
  2611  0015E2  6F8D               	movwf	init_queue@qptr& (0+255),b
  2612  0015E4  EC19  F00A         	call	_init_queue	;wreg free
  2613                           
  2614                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2615  0015E8  0102               	movlb	2	; () banked
  2616  0015EA  0E02               	movlw	high _FromMainHigh_MQ
  2617  0015EC  0100               	movlb	0	; () banked
  2618  0015EE  0100               	movlb	0	; () banked
  2619  0015F0  6F8E               	movwf	(init_queue@qptr+1)& (0+255),b
  2620  0015F2  0102               	movlb	2	; () banked
  2621  0015F4  0E00               	movlw	low _FromMainHigh_MQ
  2622  0015F6  0100               	movlb	0	; () banked
  2623  0015F8  0100               	movlb	0	; () banked
  2624  0015FA  6F8D               	movwf	init_queue@qptr& (0+255),b
  2625  0015FC  EC19  F00A         	call	_init_queue	;wreg free
  2626  001600  0012               	return	
  2627  001602                     __end_of_init_queues:
  2628                           	opt stack 0
  2629                           tblptru	equ	0xFF8
  2630                           tblptrh	equ	0xFF7
  2631                           tblptrl	equ	0xFF6
  2632                           tablat	equ	0xFF5
  2633                           prodh	equ	0xFF4
  2634                           prodl	equ	0xFF3
  2635                           intcon2	equ	0xFF1
  2636                           postinc0	equ	0xFEE
  2637                           wreg	equ	0xFE8
  2638                           indf1	equ	0xFE7
  2639                           postdec1	equ	0xFE5
  2640                           fsr1h	equ	0xFE2
  2641                           fsr1l	equ	0xFE1
  2642                           indf2	equ	0xFDF
  2643                           postinc2	equ	0xFDE
  2644                           postdec2	equ	0xFDD
  2645                           fsr2h	equ	0xFDA
  2646                           fsr2l	equ	0xFD9
  2647                           status	equ	0xFD8
  2648                           
  2649 ;; *************** function _init_queue *****************
  2650 ;; Defined at:
  2651 ;;		line 14 in file "../src/messages.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  qptr            2   45[BANK0 ] PTR struct __msg_queue
  2654 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  i               1   48[BANK0 ] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;		None               void
  2659 ;; Registers used:
  2660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2666 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2667 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2668 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2669 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2670 ;;Total ram usage:        4 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:   11
  2673 ;; This function calls:
  2674 ;;		Nothing
  2675 ;; This function is called by:
  2676 ;;		_init_queues
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text10
  2681  001432                     __ptext10:
  2682                           	opt stack 0
  2683  001432                     _init_queue:
  2684                           	opt stack 18
  2685                           
  2686                           ;messages.c: 15: unsigned char i;
  2687                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2688                           
  2689                           ;incstack = 0
  2690  001432  0100               	movlb	0	; () banked
  2691  001434  EE20 F041          	lfsr	2,65
  2692  001438  0100               	movlb	0	; () banked
  2693  00143A  518D               	movf	init_queue@qptr& (0+255),w,b
  2694  00143C  26D9               	addwf	fsr2l,f,c
  2695  00143E  0100               	movlb	0	; () banked
  2696  001440  518E               	movf	(init_queue@qptr+1)& (0+255),w,b
  2697  001442  22DA               	addwfc	fsr2h,f,c
  2698  001444  0E00               	movlw	0
  2699  001446  6EDF               	movwf	indf2,c
  2700                           
  2701                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2702  001448  0100               	movlb	0	; () banked
  2703  00144A  EE20 F042          	lfsr	2,66
  2704  00144E  0100               	movlb	0	; () banked
  2705  001450  518D               	movf	init_queue@qptr& (0+255),w,b
  2706  001452  26D9               	addwf	fsr2l,f,c
  2707  001454  0100               	movlb	0	; () banked
  2708  001456  518E               	movf	(init_queue@qptr+1)& (0+255),w,b
  2709  001458  22DA               	addwfc	fsr2h,f,c
  2710  00145A  0E00               	movlw	0
  2711  00145C  6EDF               	movwf	indf2,c
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2715  00145E  0100               	movlb	0	; () banked
  2716  001460  6F8F               	movwf	??_init_queue& (0+255),b
  2717  001462  0E00               	movlw	0
  2718  001464  0100               	movlb	0	; () banked
  2719  001466  0100               	movlb	0	; () banked
  2720  001468  6F90               	movwf	init_queue@i& (0+255),b
  2721  00146A  0100               	movlb	0	; () banked
  2722  00146C  518F               	movf	??_init_queue& (0+255),w,b
  2723                           
  2724                           ; BSR set to: 0
  2725  00146E  0E04               	movlw	4
  2726  001470  0100               	movlb	0	; () banked
  2727  001472  0100               	movlb	0	; () banked
  2728  001474  6590               	cpfsgt	init_queue@i& (0+255),b
  2729  001476  D001               	goto	l2900
  2730  001478  0012               	return	
  2731  00147A                     l2900:
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;messages.c: 20: qptr->queue[i].full = 0;
  2735  00147A  0100               	movlb	0	; () banked
  2736  00147C  0100               	movlb	0	; () banked
  2737  00147E  5190               	movf	init_queue@i& (0+255),w,b
  2738  001480  0D0D               	mullw	13
  2739  001482  50F3               	movf	prodl,w,c
  2740  001484  0100               	movlb	0	; () banked
  2741  001486  0100               	movlb	0	; () banked
  2742  001488  258D               	addwf	init_queue@qptr& (0+255),w,b
  2743  00148A  6ED9               	movwf	fsr2l,c
  2744  00148C  50F4               	movf	prodh,w,c
  2745  00148E  0100               	movlb	0	; () banked
  2746  001490  0100               	movlb	0	; () banked
  2747  001492  218E               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2748  001494  6EDA               	movwf	fsr2h,c
  2749  001496  0E00               	movlw	0
  2750  001498  6EDF               	movwf	indf2,c
  2751                           
  2752                           ; BSR set to: 0
  2753  00149A  0100               	movlb	0	; () banked
  2754  00149C  0100               	movlb	0	; () banked
  2755  00149E  2B90               	incf	init_queue@i& (0+255),f,b
  2756                           
  2757                           ; BSR set to: 0
  2758  0014A0  0E04               	movlw	4
  2759  0014A2  0100               	movlb	0	; () banked
  2760  0014A4  0100               	movlb	0	; () banked
  2761  0014A6  6590               	cpfsgt	init_queue@i& (0+255),b
  2762  0014A8  D7E8               	goto	l2900
  2763  0014AA  0012               	return	
  2764  0014AC                     __end_of_init_queue:
  2765                           	opt stack 0
  2766                           tblptru	equ	0xFF8
  2767                           tblptrh	equ	0xFF7
  2768                           tblptrl	equ	0xFF6
  2769                           tablat	equ	0xFF5
  2770                           prodh	equ	0xFF4
  2771                           prodl	equ	0xFF3
  2772                           intcon2	equ	0xFF1
  2773                           postinc0	equ	0xFEE
  2774                           wreg	equ	0xFE8
  2775                           indf1	equ	0xFE7
  2776                           postdec1	equ	0xFE5
  2777                           fsr1h	equ	0xFE2
  2778                           fsr1l	equ	0xFE1
  2779                           indf2	equ	0xFDF
  2780                           postinc2	equ	0xFDE
  2781                           postdec2	equ	0xFDD
  2782                           fsr2h	equ	0xFDA
  2783                           fsr2l	equ	0xFD9
  2784                           status	equ	0xFD8
  2785                           
  2786 ;; *************** function _init_i2c *****************
  2787 ;; Defined at:
  2788 ;;		line 441 in file "../src/my_i2c.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;  ic              2   45[BANK0 ] PTR struct __i2c_comm
  2791 ;;		 -> main@ic(29), 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;		None
  2794 ;; Return value:  Size  Location     Type
  2795 ;;		None               void
  2796 ;; Registers used:
  2797 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2803 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2806 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2807 ;;Total ram usage:        2 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:   11
  2810 ;; This function calls:
  2811 ;;		Nothing
  2812 ;; This function is called by:
  2813 ;;		_main
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text11
  2818  001602                     __ptext11:
  2819                           	opt stack 0
  2820  001602                     _init_i2c:
  2821                           	opt stack 19
  2822                           
  2823                           ;my_i2c.c: 442: ic_ptr = ic;
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;incstack = 0
  2827  001602  0100               	movlb	0	; () banked
  2828  001604  0100               	movlb	0	; () banked
  2829  001606  C08E  F0D0         	movff	init_i2c@ic+1,_ic_ptr+1
  2830  00160A  0100               	movlb	0	; () banked
  2831  00160C  0100               	movlb	0	; () banked
  2832  00160E  C08D  F0CF         	movff	init_i2c@ic,_ic_ptr
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;my_i2c.c: 443: ic_ptr->buflen = 0;
  2836  001612  0100               	movlb	0	; () banked
  2837  001614  EE20 F00A          	lfsr	2,10
  2838  001618  0100               	movlb	0	; () banked
  2839  00161A  51CF               	movf	_ic_ptr& (0+255),w,b
  2840  00161C  26D9               	addwf	fsr2l,f,c
  2841  00161E  0100               	movlb	0	; () banked
  2842  001620  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2843  001622  22DA               	addwfc	fsr2h,f,c
  2844  001624  0E00               	movlw	0
  2845  001626  6EDF               	movwf	indf2,c
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;my_i2c.c: 444: ic_ptr->event_count = 0;
  2849  001628  0100               	movlb	0	; () banked
  2850  00162A  EE20 F00C          	lfsr	2,12
  2851  00162E  0100               	movlb	0	; () banked
  2852  001630  51CF               	movf	_ic_ptr& (0+255),w,b
  2853  001632  26D9               	addwf	fsr2l,f,c
  2854  001634  0100               	movlb	0	; () banked
  2855  001636  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2856  001638  22DA               	addwfc	fsr2h,f,c
  2857  00163A  0E00               	movlw	0
  2858  00163C  6EDF               	movwf	indf2,c
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;my_i2c.c: 445: ic_ptr->status = 0x5;
  2862  00163E  0100               	movlb	0	; () banked
  2863  001640  EE20 F00D          	lfsr	2,13
  2864  001644  0100               	movlb	0	; () banked
  2865  001646  51CF               	movf	_ic_ptr& (0+255),w,b
  2866  001648  26D9               	addwf	fsr2l,f,c
  2867  00164A  0100               	movlb	0	; () banked
  2868  00164C  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2869  00164E  22DA               	addwfc	fsr2h,f,c
  2870  001650  0E05               	movlw	5
  2871  001652  6EDF               	movwf	indf2,c
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;my_i2c.c: 446: ic_ptr->error_count = 0;
  2875  001654  0100               	movlb	0	; () banked
  2876  001656  EE20 F00F          	lfsr	2,15
  2877  00165A  0100               	movlb	0	; () banked
  2878  00165C  51CF               	movf	_ic_ptr& (0+255),w,b
  2879  00165E  26D9               	addwf	fsr2l,f,c
  2880  001660  0100               	movlb	0	; () banked
  2881  001662  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2882  001664  22DA               	addwfc	fsr2h,f,c
  2883  001666  0E00               	movlw	0
  2884  001668  6EDF               	movwf	indf2,c
  2885                           
  2886                           ; BSR set to: 0
  2887  00166A  0012               	return	
  2888  00166C                     __end_of_init_i2c:
  2889                           	opt stack 0
  2890                           tblptru	equ	0xFF8
  2891                           tblptrh	equ	0xFF7
  2892                           tblptrl	equ	0xFF6
  2893                           tablat	equ	0xFF5
  2894                           prodh	equ	0xFF4
  2895                           prodl	equ	0xFF3
  2896                           intcon2	equ	0xFF1
  2897                           postinc0	equ	0xFEE
  2898                           wreg	equ	0xFE8
  2899                           indf1	equ	0xFE7
  2900                           postdec1	equ	0xFE5
  2901                           fsr1h	equ	0xFE2
  2902                           fsr1l	equ	0xFE1
  2903                           indf2	equ	0xFDF
  2904                           postinc2	equ	0xFDE
  2905                           postdec2	equ	0xFDD
  2906                           fsr2h	equ	0xFDA
  2907                           fsr2l	equ	0xFD9
  2908                           status	equ	0xFD8
  2909                           
  2910 ;; *************** function _i2c_master_send *****************
  2911 ;; Defined at:
  2912 ;;		line 44 in file "../src/my_i2c.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;  sendlength      1    wreg     unsigned char 
  2915 ;;  recvlength      1   45[BANK0 ] unsigned char 
  2916 ;;  msg             2   46[BANK0 ] PTR unsigned char 
  2917 ;;		 -> main@msgbuffer(11), 
  2918 ;;  slave_addr      1   48[BANK0 ] unsigned char 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  sendlength      1   51[BANK0 ] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      unsigned char 
  2923 ;; Registers used:
  2924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2930 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2931 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2932 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2933 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2934 ;;Total ram usage:        7 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:   11
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_main
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text12
  2945  000902                     __ptext12:
  2946                           	opt stack 0
  2947  000902                     _i2c_master_send:
  2948                           	opt stack 19
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;incstack = 0
  2952                           ;i2c_master_send@sendlength stored from wreg
  2953  000902  CFE8 F093          	movff	wreg,i2c_master_send@sendlength
  2954                           
  2955                           ;my_i2c.c: 46: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < sendlength; ic_ptr->outbu
      +                          flen++) {
  2956  000906  0100               	movlb	0	; () banked
  2957  000908  EE20 F01A          	lfsr	2,26
  2958  00090C  0100               	movlb	0	; () banked
  2959  00090E  51CF               	movf	_ic_ptr& (0+255),w,b
  2960  000910  26D9               	addwf	fsr2l,f,c
  2961  000912  0100               	movlb	0	; () banked
  2962  000914  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2963  000916  22DA               	addwfc	fsr2h,f,c
  2964  000918  0E00               	movlw	0
  2965  00091A  6EDF               	movwf	indf2,c
  2966  00091C  D042               	goto	l2884
  2967  00091E                     l2880:
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;my_i2c.c: 47: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2971  00091E  0100               	movlb	0	; () banked
  2972  000920  EE20 F01A          	lfsr	2,26
  2973  000924  0100               	movlb	0	; () banked
  2974  000926  51CF               	movf	_ic_ptr& (0+255),w,b
  2975  000928  26D9               	addwf	fsr2l,f,c
  2976  00092A  0100               	movlb	0	; () banked
  2977  00092C  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2978  00092E  22DA               	addwfc	fsr2h,f,c
  2979  000930  50DF               	movf	indf2,w,c
  2980  000932  0100               	movlb	0	; () banked
  2981  000934  6F91               	movwf	??_i2c_master_send& (0+255),b
  2982  000936  0100               	movlb	0	; () banked
  2983  000938  5191               	movf	??_i2c_master_send& (0+255),w,b
  2984  00093A  0D01               	mullw	1
  2985  00093C  50F3               	movf	prodl,w,c
  2986  00093E  0100               	movlb	0	; () banked
  2987  000940  0100               	movlb	0	; () banked
  2988  000942  258E               	addwf	i2c_master_send@msg& (0+255),w,b
  2989  000944  6ED9               	movwf	fsr2l,c
  2990  000946  50F4               	movf	prodh,w,c
  2991  000948  0100               	movlb	0	; () banked
  2992  00094A  0100               	movlb	0	; () banked
  2993  00094C  218F               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  2994  00094E  6EDA               	movwf	fsr2h,c
  2995  000950  0100               	movlb	0	; () banked
  2996  000952  EE10 F01A          	lfsr	1,26
  2997  000956  0100               	movlb	0	; () banked
  2998  000958  51CF               	movf	_ic_ptr& (0+255),w,b
  2999  00095A  26E1               	addwf	fsr1l,f,c
  3000  00095C  0100               	movlb	0	; () banked
  3001  00095E  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  3002  000960  22E2               	addwfc	fsr1h,f,c
  3003  000962  50E7               	movf	indf1,w,c
  3004  000964  0100               	movlb	0	; () banked
  3005  000966  6F92               	movwf	(??_i2c_master_send+1)& (0+255),b
  3006  000968  0100               	movlb	0	; () banked
  3007  00096A  5192               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3008  00096C  0D01               	mullw	1
  3009  00096E  0E10               	movlw	16
  3010  000970  26F3               	addwf	prodl,f,c
  3011  000972  0E00               	movlw	0
  3012  000974  22F4               	addwfc	prodh,f,c
  3013  000976  50F3               	movf	prodl,w,c
  3014  000978  0100               	movlb	0	; () banked
  3015  00097A  0100               	movlb	0	; () banked
  3016  00097C  25CF               	addwf	_ic_ptr& (0+255),w,b
  3017  00097E  6EE1               	movwf	fsr1l,c
  3018  000980  50F4               	movf	prodh,w,c
  3019  000982  0100               	movlb	0	; () banked
  3020  000984  0100               	movlb	0	; () banked
  3021  000986  21D0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3022  000988  6EE2               	movwf	fsr1h,c
  3023  00098A  CFDF FFE7          	movff	indf2,indf1
  3024                           
  3025                           ; BSR set to: 0
  3026  00098E  0100               	movlb	0	; () banked
  3027  000990  EE20 F01A          	lfsr	2,26
  3028  000994  0100               	movlb	0	; () banked
  3029  000996  51CF               	movf	_ic_ptr& (0+255),w,b
  3030  000998  26D9               	addwf	fsr2l,f,c
  3031  00099A  0100               	movlb	0	; () banked
  3032  00099C  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  3033  00099E  22DA               	addwfc	fsr2h,f,c
  3034  0009A0  2ADF               	incf	indf2,f,c
  3035  0009A2                     l2884:
  3036                           
  3037                           ; BSR set to: 0
  3038  0009A2  0100               	movlb	0	; () banked
  3039  0009A4  EE20 F01A          	lfsr	2,26
  3040  0009A8  0100               	movlb	0	; () banked
  3041  0009AA  51CF               	movf	_ic_ptr& (0+255),w,b
  3042  0009AC  26D9               	addwf	fsr2l,f,c
  3043  0009AE  0100               	movlb	0	; () banked
  3044  0009B0  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  3045  0009B2  22DA               	addwfc	fsr2h,f,c
  3046  0009B4  50DF               	movf	indf2,w,c
  3047  0009B6  0100               	movlb	0	; () banked
  3048  0009B8  6F91               	movwf	??_i2c_master_send& (0+255),b
  3049  0009BA  0100               	movlb	0	; () banked
  3050  0009BC  0100               	movlb	0	; () banked
  3051  0009BE  5193               	movf	i2c_master_send@sendlength& (0+255),w,b
  3052  0009C0  0100               	movlb	0	; () banked
  3053  0009C2  5D91               	subwf	??_i2c_master_send& (0+255),w,b
  3054  0009C4  A0D8               	btfss	status,0,c
  3055  0009C6  D7AB               	goto	l2880
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;my_i2c.c: 48: }
  3059                           ;my_i2c.c: 50: ic_ptr->slave_addr = slave_addr;
  3060                           
  3061                           ; BSR set to: 0
  3062  0009C8  0100               	movlb	0	; () banked
  3063  0009CA  EE20 F01C          	lfsr	2,28
  3064  0009CE  0100               	movlb	0	; () banked
  3065  0009D0  51CF               	movf	_ic_ptr& (0+255),w,b
  3066  0009D2  26D9               	addwf	fsr2l,f,c
  3067  0009D4  0100               	movlb	0	; () banked
  3068  0009D6  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  3069  0009D8  22DA               	addwfc	fsr2h,f,c
  3070  0009DA  0100               	movlb	0	; () banked
  3071  0009DC  C090  FFDF         	movff	i2c_master_send@slave_addr,indf2
  3072                           
  3073                           ;my_i2c.c: 51: ic_ptr->outbuflen = sendlength;
  3074  0009E0  0100               	movlb	0	; () banked
  3075  0009E2  EE20 F01A          	lfsr	2,26
  3076  0009E6  0100               	movlb	0	; () banked
  3077  0009E8  51CF               	movf	_ic_ptr& (0+255),w,b
  3078  0009EA  26D9               	addwf	fsr2l,f,c
  3079  0009EC  0100               	movlb	0	; () banked
  3080  0009EE  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  3081  0009F0  22DA               	addwfc	fsr2h,f,c
  3082  0009F2  0100               	movlb	0	; () banked
  3083  0009F4  C093  FFDF         	movff	i2c_master_send@sendlength,indf2
  3084                           
  3085                           ;my_i2c.c: 52: ic_ptr->buflen = recvlength;
  3086  0009F8  0100               	movlb	0	; () banked
  3087  0009FA  EE20 F00A          	lfsr	2,10
  3088  0009FE  0100               	movlb	0	; () banked
  3089  000A00  51CF               	movf	_ic_ptr& (0+255),w,b
  3090  000A02  26D9               	addwf	fsr2l,f,c
  3091  000A04  0100               	movlb	0	; () banked
  3092  000A06  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  3093  000A08  22DA               	addwfc	fsr2h,f,c
  3094  000A0A  0100               	movlb	0	; () banked
  3095  000A0C  C08D  FFDF         	movff	i2c_master_send@recvlength,indf2
  3096                           
  3097                           ;my_i2c.c: 53: ic_ptr->status = 0xA;
  3098  000A10  0100               	movlb	0	; () banked
  3099  000A12  EE20 F00D          	lfsr	2,13
  3100  000A16  0100               	movlb	0	; () banked
  3101  000A18  51CF               	movf	_ic_ptr& (0+255),w,b
  3102  000A1A  26D9               	addwf	fsr2l,f,c
  3103  000A1C  0100               	movlb	0	; () banked
  3104  000A1E  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  3105  000A20  22DA               	addwfc	fsr2h,f,c
  3106  000A22  0E0A               	movlw	10
  3107  000A24  6EDF               	movwf	indf2,c
  3108                           
  3109                           ;my_i2c.c: 54: ic_ptr->outbufind = 0;
  3110  000A26  0100               	movlb	0	; () banked
  3111  000A28  EE20 F01B          	lfsr	2,27
  3112  000A2C  0100               	movlb	0	; () banked
  3113  000A2E  51CF               	movf	_ic_ptr& (0+255),w,b
  3114  000A30  26D9               	addwf	fsr2l,f,c
  3115  000A32  0100               	movlb	0	; () banked
  3116  000A34  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  3117  000A36  22DA               	addwfc	fsr2h,f,c
  3118  000A38  0E00               	movlw	0
  3119  000A3A  6EDF               	movwf	indf2,c
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;my_i2c.c: 56: SSPCON2bits.SEN = 1;
  3123  000A3C  80C5               	bsf	4037,0,c	;volatile
  3124  000A3E  0012               	return	
  3125  000A40                     __end_of_i2c_master_send:
  3126                           	opt stack 0
  3127                           tblptru	equ	0xFF8
  3128                           tblptrh	equ	0xFF7
  3129                           tblptrl	equ	0xFF6
  3130                           tablat	equ	0xFF5
  3131                           prodh	equ	0xFF4
  3132                           prodl	equ	0xFF3
  3133                           intcon2	equ	0xFF1
  3134                           postinc0	equ	0xFEE
  3135                           wreg	equ	0xFE8
  3136                           indf1	equ	0xFE7
  3137                           postdec1	equ	0xFE5
  3138                           fsr1h	equ	0xFE2
  3139                           fsr1l	equ	0xFE1
  3140                           indf2	equ	0xFDF
  3141                           postinc2	equ	0xFDE
  3142                           postdec2	equ	0xFDD
  3143                           fsr2h	equ	0xFDA
  3144                           fsr2l	equ	0xFD9
  3145                           status	equ	0xFD8
  3146                           
  3147 ;; *************** function _i2c_configure_master *****************
  3148 ;; Defined at:
  3149 ;;		line 15 in file "../src/my_i2c.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;		None
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;		None
  3154 ;; Return value:  Size  Location     Type
  3155 ;;		None               void
  3156 ;; Registers used:
  3157 ;;		wreg, status,2
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3167 ;;Total ram usage:        0 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; Hardware stack levels required when called:   11
  3170 ;; This function calls:
  3171 ;;		Nothing
  3172 ;; This function is called by:
  3173 ;;		_main
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text13
  3178  001B90                     __ptext13:
  3179                           	opt stack 0
  3180  001B90                     _i2c_configure_master:
  3181                           	opt stack 19
  3182                           
  3183                           ;my_i2c.c: 18: SSPSTAT = 0x0;
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;incstack = 0
  3187  001B90  0E00               	movlw	0
  3188  001B92  6EC7               	movwf	4039,c	;volatile
  3189                           
  3190                           ;my_i2c.c: 19: SSPCON1 = 0x0;
  3191  001B94  0E00               	movlw	0
  3192  001B96  6EC6               	movwf	4038,c	;volatile
  3193                           
  3194                           ;my_i2c.c: 20: SSPCON2 = 0x0;
  3195  001B98  0E00               	movlw	0
  3196  001B9A  6EC5               	movwf	4037,c	;volatile
  3197                           
  3198                           ;my_i2c.c: 22: TRISCbits.TRISC3 = 1;
  3199  001B9C  8694               	bsf	3988,3,c	;volatile
  3200                           
  3201                           ;my_i2c.c: 23: TRISCbits.TRISC4 = 1;
  3202  001B9E  8894               	bsf	3988,4,c	;volatile
  3203                           
  3204                           ;my_i2c.c: 24: SSPADD = 29;
  3205  001BA0  0E1D               	movlw	29
  3206  001BA2  6EC8               	movwf	4040,c	;volatile
  3207                           
  3208                           ;my_i2c.c: 27: SSPCON1bits.SSPM = 0x8;
  3209  001BA4  50C6               	movf	4038,w,c	;volatile
  3210  001BA6  0BF0               	andlw	-16
  3211  001BA8  0908               	iorlw	8
  3212  001BAA  6EC6               	movwf	4038,c	;volatile
  3213                           
  3214                           ;my_i2c.c: 28: SSPCON1bits.SSPEN = 1;
  3215  001BAC  8AC6               	bsf	4038,5,c	;volatile
  3216  001BAE  0012               	return	
  3217  001BB0                     __end_of_i2c_configure_master:
  3218                           	opt stack 0
  3219                           tblptru	equ	0xFF8
  3220                           tblptrh	equ	0xFF7
  3221                           tblptrl	equ	0xFF6
  3222                           tablat	equ	0xFF5
  3223                           prodh	equ	0xFF4
  3224                           prodl	equ	0xFF3
  3225                           intcon2	equ	0xFF1
  3226                           postinc0	equ	0xFEE
  3227                           wreg	equ	0xFE8
  3228                           indf1	equ	0xFE7
  3229                           postdec1	equ	0xFE5
  3230                           fsr1h	equ	0xFE2
  3231                           fsr1l	equ	0xFE1
  3232                           indf2	equ	0xFDF
  3233                           postinc2	equ	0xFDE
  3234                           postdec2	equ	0xFDD
  3235                           fsr2h	equ	0xFDA
  3236                           fsr2l	equ	0xFD9
  3237                           status	equ	0xFD8
  3238                           
  3239 ;; *************** function _enable_interrupts *****************
  3240 ;; Defined at:
  3241 ;;		line 15 in file "../src/interrupts.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;		None
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;		None               void
  3248 ;; Registers used:
  3249 ;;		None
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3259 ;;Total ram usage:        0 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:   11
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_main
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           	psect	text14
  3270  001CC0                     __ptext14:
  3271                           	opt stack 0
  3272  001CC0                     _enable_interrupts:
  3273                           	opt stack 19
  3274                           
  3275                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3276                           
  3277                           ;incstack = 0
  3278  001CC0  8ED0               	bsf	4048,7,c	;volatile
  3279                           
  3280                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3281  001CC2  8EF2               	bsf	intcon,7,c	;volatile
  3282                           
  3283                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3284  001CC4  8CF2               	bsf	intcon,6,c	;volatile
  3285  001CC6  0012               	return	
  3286  001CC8                     __end_of_enable_interrupts:
  3287                           	opt stack 0
  3288                           tblptru	equ	0xFF8
  3289                           tblptrh	equ	0xFF7
  3290                           tblptrl	equ	0xFF6
  3291                           tablat	equ	0xFF5
  3292                           prodh	equ	0xFF4
  3293                           prodl	equ	0xFF3
  3294                           intcon	equ	0xFF2
  3295                           intcon2	equ	0xFF1
  3296                           postinc0	equ	0xFEE
  3297                           wreg	equ	0xFE8
  3298                           indf1	equ	0xFE7
  3299                           postdec1	equ	0xFE5
  3300                           fsr1h	equ	0xFE2
  3301                           fsr1l	equ	0xFE1
  3302                           indf2	equ	0xFDF
  3303                           postinc2	equ	0xFDE
  3304                           postdec2	equ	0xFDD
  3305                           fsr2h	equ	0xFDA
  3306                           fsr2l	equ	0xFD9
  3307                           status	equ	0xFD8
  3308                           
  3309 ;; *************** function _block_on_To_msgqueues *****************
  3310 ;; Defined at:
  3311 ;;		line 258 in file "../src/messages.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;		None               void
  3318 ;; Registers used:
  3319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3327 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3328 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3329 ;;Total ram usage:        1 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:   14
  3332 ;; This function calls:
  3333 ;;		_Delay1KTCYx
  3334 ;;		_check_msg
  3335 ;;		_in_main
  3336 ;; This function is called by:
  3337 ;;		_main
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text15
  3342  0013B4                     __ptext15:
  3343                           	opt stack 0
  3344  0013B4                     _block_on_To_msgqueues:
  3345                           	opt stack 16
  3346                           
  3347                           ;messages.c: 259: if (!in_main()) {
  3348                           
  3349                           ;incstack = 0
  3350  0013B4  EC75  F00C         	call	_in_main	;wreg free
  3351  0013B8  0100               	movlb	0	; () banked
  3352  0013BA  0100               	movlb	0	; () banked
  3353  0013BC  5192               	movf	(?_in_main+1)& (0+255),w,b
  3354  0013BE  0100               	movlb	0	; () banked
  3355  0013C0  1191               	iorwf	?_in_main& (0+255),w,b
  3356  0013C2  B4D8               	btfsc	status,2,c
  3357  0013C4  0012               	return	
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;messages.c: 261: }
  3361                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3362                           
  3363                           ; BSR set to: 0
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;messages.c: 260: return;
  3367  0013C6  0100               	movlb	0	; () banked
  3368  0013C8  6F93               	movwf	??_block_on_To_msgqueues& (0+255),b
  3369  0013CA  0E01               	movlw	1
  3370  0013CC  6E3B               	movwf	_MQ_Main_Willing_to_block,c
  3371  0013CE  0100               	movlb	0	; () banked
  3372  0013D0  5193               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3373  0013D2                     l2846:
  3374                           
  3375                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3376  0013D2  0101               	movlb	1	; () banked
  3377  0013D4  0E01               	movlw	high _ToMainHigh_MQ
  3378  0013D6  0100               	movlb	0	; () banked
  3379  0013D8  0100               	movlb	0	; () banked
  3380  0013DA  6F8E               	movwf	(check_msg@qptr+1)& (0+255),b
  3381  0013DC  0101               	movlb	1	; () banked
  3382  0013DE  0E00               	movlw	low _ToMainHigh_MQ
  3383  0013E0  0100               	movlb	0	; () banked
  3384  0013E2  0100               	movlb	0	; () banked
  3385  0013E4  6F8D               	movwf	check_msg@qptr& (0+255),b
  3386  0013E6  EC34  F00D         	call	_check_msg	;wreg free
  3387  0013EA  0900               	iorlw	0
  3388  0013EC  B4D8               	btfsc	status,2,c
  3389  0013EE  D007               	goto	l2852
  3390                           
  3391                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3392  0013F0  0100               	movlb	0	; () banked
  3393  0013F2  6F93               	movwf	??_block_on_To_msgqueues& (0+255),b
  3394  0013F4  0E00               	movlw	0
  3395  0013F6  6E3B               	movwf	_MQ_Main_Willing_to_block,c
  3396  0013F8  0100               	movlb	0	; () banked
  3397  0013FA  5193               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3398  0013FC  0012               	return	
  3399  0013FE                     l2852:
  3400                           
  3401                           ;messages.c: 271: }
  3402                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3403  0013FE  0101               	movlb	1	; () banked
  3404  001400  0E01               	movlw	high _ToMainLow_MQ
  3405  001402  0100               	movlb	0	; () banked
  3406  001404  0100               	movlb	0	; () banked
  3407  001406  6F8E               	movwf	(check_msg@qptr+1)& (0+255),b
  3408  001408  0101               	movlb	1	; () banked
  3409  00140A  0E43               	movlw	low _ToMainLow_MQ
  3410  00140C  0100               	movlb	0	; () banked
  3411  00140E  0100               	movlb	0	; () banked
  3412  001410  6F8D               	movwf	check_msg@qptr& (0+255),b
  3413  001412  EC34  F00D         	call	_check_msg	;wreg free
  3414  001416  0900               	iorlw	0
  3415  001418  B4D8               	btfsc	status,2,c
  3416  00141A  D007               	goto	l2858
  3417                           
  3418                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3419  00141C  0100               	movlb	0	; () banked
  3420  00141E  6F93               	movwf	??_block_on_To_msgqueues& (0+255),b
  3421  001420  0E00               	movlw	0
  3422  001422  6E3B               	movwf	_MQ_Main_Willing_to_block,c
  3423  001424  0100               	movlb	0	; () banked
  3424  001426  5193               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3425  001428  0012               	return	
  3426  00142A                     l2858:
  3427                           
  3428                           ;messages.c: 278: }
  3429                           ;messages.c: 279: Delay1KTCYx(10);
  3430  00142A  0E0A               	movlw	10
  3431  00142C  EC12  F00E         	call	_Delay1KTCYx
  3432  001430  D7D0               	goto	l2846
  3433  001432                     __end_of_block_on_To_msgqueues:
  3434                           	opt stack 0
  3435                           tblptru	equ	0xFF8
  3436                           tblptrh	equ	0xFF7
  3437                           tblptrl	equ	0xFF6
  3438                           tablat	equ	0xFF5
  3439                           prodh	equ	0xFF4
  3440                           prodl	equ	0xFF3
  3441                           intcon	equ	0xFF2
  3442                           intcon2	equ	0xFF1
  3443                           postinc0	equ	0xFEE
  3444                           wreg	equ	0xFE8
  3445                           indf1	equ	0xFE7
  3446                           postdec1	equ	0xFE5
  3447                           fsr1h	equ	0xFE2
  3448                           fsr1l	equ	0xFE1
  3449                           indf2	equ	0xFDF
  3450                           postinc2	equ	0xFDE
  3451                           postdec2	equ	0xFDD
  3452                           fsr2h	equ	0xFDA
  3453                           fsr2l	equ	0xFD9
  3454                           status	equ	0xFD8
  3455                           
  3456 ;; *************** function _in_main *****************
  3457 ;; Defined at:
  3458 ;;		line 41 in file "../src/interrupts.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;		None
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;		None
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  2   49[BANK0 ] int 
  3465 ;; Registers used:
  3466 ;;		wreg, status,2, status,0, cstack
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3472 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3475 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3476 ;;Total ram usage:        2 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:   13
  3479 ;; This function calls:
  3480 ;;		_in_high_int
  3481 ;;		_in_low_int
  3482 ;; This function is called by:
  3483 ;;		_block_on_To_msgqueues
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           	psect	text16
  3488  0018EA                     __ptext16:
  3489                           	opt stack 0
  3490  0018EA                     _in_main:
  3491                           	opt stack 16
  3492                           
  3493                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3494                           
  3495                           ;incstack = 0
  3496  0018EA  EC2F  F00C         	call	_in_low_int	;wreg free
  3497  0018EE  0100               	movlb	0	; () banked
  3498  0018F0  0100               	movlb	0	; () banked
  3499  0018F2  5190               	movf	(?_in_low_int+1)& (0+255),w,b
  3500  0018F4  0100               	movlb	0	; () banked
  3501  0018F6  118F               	iorwf	?_in_low_int& (0+255),w,b
  3502  0018F8  A4D8               	btfss	status,2,c
  3503  0018FA  D011               	goto	l2556
  3504                           
  3505                           ; BSR set to: 0
  3506  0018FC  EC2F  F00E         	call	_in_high_int	;wreg free
  3507  001900  0100               	movlb	0	; () banked
  3508  001902  0100               	movlb	0	; () banked
  3509  001904  518E               	movf	(?_in_high_int+1)& (0+255),w,b
  3510  001906  0100               	movlb	0	; () banked
  3511  001908  118D               	iorwf	?_in_high_int& (0+255),w,b
  3512  00190A  A4D8               	btfss	status,2,c
  3513  00190C  D008               	goto	l2556
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;interrupts.c: 43: return (1);
  3517  00190E  0E00               	movlw	0
  3518  001910  0100               	movlb	0	; () banked
  3519  001912  0100               	movlb	0	; () banked
  3520  001914  6F92               	movwf	(?_in_main+1)& (0+255),b
  3521  001916  0E01               	movlw	1
  3522  001918  0100               	movlb	0	; () banked
  3523  00191A  6F91               	movwf	?_in_main& (0+255),b
  3524  00191C  0012               	return	
  3525  00191E                     l2556:
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;interrupts.c: 45: return (0);
  3529  00191E  0E00               	movlw	0
  3530  001920  0100               	movlb	0	; () banked
  3531  001922  0100               	movlb	0	; () banked
  3532  001924  6F92               	movwf	(?_in_main+1)& (0+255),b
  3533  001926  0E00               	movlw	0
  3534  001928  0100               	movlb	0	; () banked
  3535  00192A  6F91               	movwf	?_in_main& (0+255),b
  3536  00192C  0012               	return	
  3537  00192E                     __end_of_in_main:
  3538                           	opt stack 0
  3539                           tblptru	equ	0xFF8
  3540                           tblptrh	equ	0xFF7
  3541                           tblptrl	equ	0xFF6
  3542                           tablat	equ	0xFF5
  3543                           prodh	equ	0xFF4
  3544                           prodl	equ	0xFF3
  3545                           intcon	equ	0xFF2
  3546                           intcon2	equ	0xFF1
  3547                           postinc0	equ	0xFEE
  3548                           wreg	equ	0xFE8
  3549                           indf1	equ	0xFE7
  3550                           postdec1	equ	0xFE5
  3551                           fsr1h	equ	0xFE2
  3552                           fsr1l	equ	0xFE1
  3553                           indf2	equ	0xFDF
  3554                           postinc2	equ	0xFDE
  3555                           postdec2	equ	0xFDD
  3556                           fsr2h	equ	0xFDA
  3557                           fsr2l	equ	0xFD9
  3558                           status	equ	0xFD8
  3559                           
  3560 ;; *************** function _in_low_int *****************
  3561 ;; Defined at:
  3562 ;;		line 31 in file "../src/interrupts.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;		None
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;		None
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  2   47[BANK0 ] int 
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, status,0, cstack
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3576 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3579 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3580 ;;Total ram usage:        2 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:   12
  3583 ;; This function calls:
  3584 ;;		_in_high_int
  3585 ;; This function is called by:
  3586 ;;		_in_main
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text17
  3591  00185E                     __ptext17:
  3592                           	opt stack 0
  3593  00185E                     _in_low_int:
  3594                           	opt stack 16
  3595                           
  3596                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;incstack = 0
  3600  00185E  ACF2               	btfss	intcon,6,c	;volatile
  3601  001860  D008               	goto	l2534
  3602                           
  3603                           ;interrupts.c: 33: return (0);
  3604  001862  0E00               	movlw	0
  3605  001864  0100               	movlb	0	; () banked
  3606  001866  0100               	movlb	0	; () banked
  3607  001868  6F90               	movwf	(?_in_low_int+1)& (0+255),b
  3608  00186A  0E00               	movlw	0
  3609  00186C  0100               	movlb	0	; () banked
  3610  00186E  6F8F               	movwf	?_in_low_int& (0+255),b
  3611  001870  0012               	return	
  3612  001872                     l2534:
  3613  001872  EC2F  F00E         	call	_in_high_int	;wreg free
  3614  001876  0100               	movlb	0	; () banked
  3615  001878  0100               	movlb	0	; () banked
  3616  00187A  518E               	movf	(?_in_high_int+1)& (0+255),w,b
  3617  00187C  0100               	movlb	0	; () banked
  3618  00187E  118D               	iorwf	?_in_high_int& (0+255),w,b
  3619  001880  B4D8               	btfsc	status,2,c
  3620  001882  D008               	goto	l2542
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;interrupts.c: 35: return (0);
  3624  001884  0E00               	movlw	0
  3625  001886  0100               	movlb	0	; () banked
  3626  001888  0100               	movlb	0	; () banked
  3627  00188A  6F90               	movwf	(?_in_low_int+1)& (0+255),b
  3628  00188C  0E00               	movlw	0
  3629  00188E  0100               	movlb	0	; () banked
  3630  001890  6F8F               	movwf	?_in_low_int& (0+255),b
  3631  001892  0012               	return	
  3632  001894                     l2542:
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;interrupts.c: 37: return (1);
  3636  001894  0E00               	movlw	0
  3637  001896  0100               	movlb	0	; () banked
  3638  001898  0100               	movlb	0	; () banked
  3639  00189A  6F90               	movwf	(?_in_low_int+1)& (0+255),b
  3640  00189C  0E01               	movlw	1
  3641  00189E  0100               	movlb	0	; () banked
  3642  0018A0  6F8F               	movwf	?_in_low_int& (0+255),b
  3643  0018A2  0012               	return	
  3644  0018A4                     __end_of_in_low_int:
  3645                           	opt stack 0
  3646                           tblptru	equ	0xFF8
  3647                           tblptrh	equ	0xFF7
  3648                           tblptrl	equ	0xFF6
  3649                           tablat	equ	0xFF5
  3650                           prodh	equ	0xFF4
  3651                           prodl	equ	0xFF3
  3652                           intcon	equ	0xFF2
  3653                           intcon2	equ	0xFF1
  3654                           postinc0	equ	0xFEE
  3655                           wreg	equ	0xFE8
  3656                           indf1	equ	0xFE7
  3657                           postdec1	equ	0xFE5
  3658                           fsr1h	equ	0xFE2
  3659                           fsr1l	equ	0xFE1
  3660                           indf2	equ	0xFDF
  3661                           postinc2	equ	0xFDE
  3662                           postdec2	equ	0xFDD
  3663                           fsr2h	equ	0xFDA
  3664                           fsr2l	equ	0xFD9
  3665                           status	equ	0xFD8
  3666                           
  3667 ;; *************** function _in_high_int *****************
  3668 ;; Defined at:
  3669 ;;		line 23 in file "../src/interrupts.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;		None
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;		None
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  2   45[BANK0 ] int 
  3676 ;; Registers used:
  3677 ;;		wreg, status,2
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3683 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3686 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3687 ;;Total ram usage:        2 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:   11
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_in_low_int
  3694 ;;		_in_main
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           	psect	text18
  3699  001C5E                     __ptext18:
  3700                           	opt stack 0
  3701  001C5E                     _in_high_int:
  3702                           	opt stack 16
  3703                           
  3704                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;incstack = 0
  3708  001C5E  0E00               	movlw	0
  3709  001C60  AEF2               	btfss	intcon,7,c	;volatile
  3710  001C62  0E01               	movlw	1
  3711  001C64  0100               	movlb	0	; () banked
  3712  001C66  0100               	movlb	0	; () banked
  3713  001C68  6F8D               	movwf	?_in_high_int& (0+255),b
  3714  001C6A  0100               	movlb	0	; () banked
  3715  001C6C  6B8E               	clrf	(?_in_high_int+1)& (0+255),b
  3716  001C6E  0012               	return	
  3717  001C70                     __end_of_in_high_int:
  3718                           	opt stack 0
  3719                           tblptru	equ	0xFF8
  3720                           tblptrh	equ	0xFF7
  3721                           tblptrl	equ	0xFF6
  3722                           tablat	equ	0xFF5
  3723                           prodh	equ	0xFF4
  3724                           prodl	equ	0xFF3
  3725                           intcon	equ	0xFF2
  3726                           intcon2	equ	0xFF1
  3727                           postinc0	equ	0xFEE
  3728                           wreg	equ	0xFE8
  3729                           indf1	equ	0xFE7
  3730                           postdec1	equ	0xFE5
  3731                           fsr1h	equ	0xFE2
  3732                           fsr1l	equ	0xFE1
  3733                           indf2	equ	0xFDF
  3734                           postinc2	equ	0xFDE
  3735                           postdec2	equ	0xFDD
  3736                           fsr2h	equ	0xFDA
  3737                           fsr2l	equ	0xFD9
  3738                           status	equ	0xFD8
  3739                           
  3740 ;; *************** function _check_msg *****************
  3741 ;; Defined at:
  3742 ;;		line 222 in file "../src/messages.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;  qptr            2   45[BANK0 ] PTR struct __msg_queue
  3745 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;		None
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      unsigned char 
  3750 ;; Registers used:
  3751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3757 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3759 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3760 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3761 ;;Total ram usage:        3 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; Hardware stack levels required when called:   11
  3764 ;; This function calls:
  3765 ;;		Nothing
  3766 ;; This function is called by:
  3767 ;;		_block_on_To_msgqueues
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text19
  3772  001A68                     __ptext19:
  3773                           	opt stack 0
  3774  001A68                     _check_msg:
  3775                           	opt stack 18
  3776                           
  3777                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;incstack = 0
  3781  001A68  0100               	movlb	0	; () banked
  3782  001A6A  EE20 F042          	lfsr	2,66
  3783  001A6E  0100               	movlb	0	; () banked
  3784  001A70  518D               	movf	check_msg@qptr& (0+255),w,b
  3785  001A72  26D9               	addwf	fsr2l,f,c
  3786  001A74  0100               	movlb	0	; () banked
  3787  001A76  518E               	movf	(check_msg@qptr+1)& (0+255),w,b
  3788  001A78  22DA               	addwfc	fsr2h,f,c
  3789  001A7A  50DF               	movf	indf2,w,c
  3790  001A7C  0100               	movlb	0	; () banked
  3791  001A7E  6F8F               	movwf	??_check_msg& (0+255),b
  3792  001A80  0100               	movlb	0	; () banked
  3793  001A82  518F               	movf	??_check_msg& (0+255),w,b
  3794  001A84  0D0D               	mullw	13
  3795  001A86  50F3               	movf	prodl,w,c
  3796  001A88  0100               	movlb	0	; () banked
  3797  001A8A  0100               	movlb	0	; () banked
  3798  001A8C  258D               	addwf	check_msg@qptr& (0+255),w,b
  3799  001A8E  6ED9               	movwf	fsr2l,c
  3800  001A90  50F4               	movf	prodh,w,c
  3801  001A92  0100               	movlb	0	; () banked
  3802  001A94  0100               	movlb	0	; () banked
  3803  001A96  218E               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3804  001A98  6EDA               	movwf	fsr2h,c
  3805  001A9A  50DF               	movf	indf2,w,c
  3806  001A9C  0012               	return	
  3807  001A9E                     __end_of_check_msg:
  3808                           	opt stack 0
  3809                           tblptru	equ	0xFF8
  3810                           tblptrh	equ	0xFF7
  3811                           tblptrl	equ	0xFF6
  3812                           tablat	equ	0xFF5
  3813                           prodh	equ	0xFF4
  3814                           prodl	equ	0xFF3
  3815                           intcon	equ	0xFF2
  3816                           intcon2	equ	0xFF1
  3817                           postinc0	equ	0xFEE
  3818                           wreg	equ	0xFE8
  3819                           indf1	equ	0xFE7
  3820                           postdec1	equ	0xFE5
  3821                           fsr1h	equ	0xFE2
  3822                           fsr1l	equ	0xFE1
  3823                           indf2	equ	0xFDF
  3824                           postinc2	equ	0xFDE
  3825                           postdec2	equ	0xFDD
  3826                           fsr2h	equ	0xFDA
  3827                           fsr2l	equ	0xFD9
  3828                           status	equ	0xFD8
  3829                           
  3830 ;; *************** function _Delay1KTCYx *****************
  3831 ;; Defined at:
  3832 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;  unit            1    wreg     unsigned char 
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;  unit            1   45[BANK0 ] unsigned char 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;		None               void
  3839 ;; Registers used:
  3840 ;;		wreg
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3849 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3850 ;;Total ram usage:        1 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:   11
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_block_on_To_msgqueues
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text20
  3861  001C24                     __ptext20:
  3862                           	opt stack 0
  3863  001C24                     _Delay1KTCYx:
  3864                           	opt stack 18
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;incstack = 0
  3868                           ;Delay1KTCYx@unit stored from wreg
  3869  001C24  CFE8 F08D          	movff	wreg,Delay1KTCYx@unit
  3870  001C28                     l814:
  3871  001C28  0EFA               	movlw	250
  3872  001C2A                     u3317:
  3873  001C2A  F000               	nop	
  3874  001C2C  2EE8               	decfsz	wreg,f,c
  3875  001C2E  D7FD               	goto	u3317
  3876  001C30  0100               	movlb	0	; () banked
  3877  001C32  0100               	movlb	0	; () banked
  3878  001C34  2F8D               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3879  001C36  D7F8               	goto	l814
  3880  001C38  0012               	return	
  3881  001C3A                     __end_of_Delay1KTCYx:
  3882                           	opt stack 0
  3883                           tblptru	equ	0xFF8
  3884                           tblptrh	equ	0xFF7
  3885                           tblptrl	equ	0xFF6
  3886                           tablat	equ	0xFF5
  3887                           prodh	equ	0xFF4
  3888                           prodl	equ	0xFF3
  3889                           intcon	equ	0xFF2
  3890                           intcon2	equ	0xFF1
  3891                           postinc0	equ	0xFEE
  3892                           wreg	equ	0xFE8
  3893                           indf1	equ	0xFE7
  3894                           postdec1	equ	0xFE5
  3895                           fsr1h	equ	0xFE2
  3896                           fsr1l	equ	0xFE1
  3897                           indf2	equ	0xFDF
  3898                           postinc2	equ	0xFDE
  3899                           postdec2	equ	0xFDD
  3900                           fsr2h	equ	0xFDA
  3901                           fsr2l	equ	0xFD9
  3902                           status	equ	0xFD8
  3903                           
  3904 ;; *************** function _ToMainLow_recvmsg *****************
  3905 ;; Defined at:
  3906 ;;		line 112 in file "../src/messages.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  maxlength       1    wreg     unsigned char 
  3909 ;;  msgtype         2   69[BANK0 ] PTR unsigned char 
  3910 ;;		 -> main@msgtype(1), 
  3911 ;;  data            2   71[BANK0 ] PTR void 
  3912 ;;		 -> main@msgbuffer(11), 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  maxlength       1   73[BANK0 ] unsigned char 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      char 
  3917 ;; Registers used:
  3918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3924 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3925 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3927 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3928 ;;Total ram usage:        5 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:   13
  3931 ;; This function calls:
  3932 ;;		_recv_msg
  3933 ;; This function is called by:
  3934 ;;		_main
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text21
  3939  00192E                     __ptext21:
  3940                           	opt stack 0
  3941  00192E                     _ToMainLow_recvmsg:
  3942                           	opt stack 17
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;incstack = 0
  3946                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3947  00192E  CFE8 F0A9          	movff	wreg,ToMainLow_recvmsg@maxlength
  3948                           
  3949                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3950  001932  0101               	movlb	1	; () banked
  3951  001934  0E01               	movlw	high _ToMainLow_MQ
  3952  001936  0100               	movlb	0	; () banked
  3953  001938  0100               	movlb	0	; () banked
  3954  00193A  6F98               	movwf	(recv_msg@qptr+1)& (0+255),b
  3955  00193C  0101               	movlb	1	; () banked
  3956  00193E  0E43               	movlw	low _ToMainLow_MQ
  3957  001940  0100               	movlb	0	; () banked
  3958  001942  0100               	movlb	0	; () banked
  3959  001944  6F97               	movwf	recv_msg@qptr& (0+255),b
  3960  001946  C0A9  F099         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3961  00194A  0100               	movlb	0	; () banked
  3962  00194C  0100               	movlb	0	; () banked
  3963  00194E  C0A6  F09B         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3964  001952  0100               	movlb	0	; () banked
  3965  001954  0100               	movlb	0	; () banked
  3966  001956  C0A5  F09A         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3967  00195A  0100               	movlb	0	; () banked
  3968  00195C  0100               	movlb	0	; () banked
  3969  00195E  C0A8  F09D         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3970  001962  0100               	movlb	0	; () banked
  3971  001964  0100               	movlb	0	; () banked
  3972  001966  C0A7  F09C         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3973  00196A  ECD2  F003         	call	_recv_msg	;wreg free
  3974  00196E  0012               	return	
  3975  001970                     __end_of_ToMainLow_recvmsg:
  3976                           	opt stack 0
  3977                           tblptru	equ	0xFF8
  3978                           tblptrh	equ	0xFF7
  3979                           tblptrl	equ	0xFF6
  3980                           tablat	equ	0xFF5
  3981                           prodh	equ	0xFF4
  3982                           prodl	equ	0xFF3
  3983                           intcon	equ	0xFF2
  3984                           intcon2	equ	0xFF1
  3985                           postinc0	equ	0xFEE
  3986                           wreg	equ	0xFE8
  3987                           indf1	equ	0xFE7
  3988                           postdec1	equ	0xFE5
  3989                           fsr1h	equ	0xFE2
  3990                           fsr1l	equ	0xFE1
  3991                           indf2	equ	0xFDF
  3992                           postinc2	equ	0xFDE
  3993                           postdec2	equ	0xFDD
  3994                           fsr2h	equ	0xFDA
  3995                           fsr2l	equ	0xFD9
  3996                           status	equ	0xFD8
  3997                           
  3998 ;; *************** function _ToMainHigh_recvmsg *****************
  3999 ;; Defined at:
  4000 ;;		line 135 in file "../src/messages.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;  maxlength       1    wreg     unsigned char 
  4003 ;;  msgtype         2   69[BANK0 ] PTR unsigned char 
  4004 ;;		 -> main@msgtype(1), 
  4005 ;;  data            2   71[BANK0 ] PTR void 
  4006 ;;		 -> main@msgbuffer(11), 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  maxlength       1   73[BANK0 ] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      char 
  4011 ;; Registers used:
  4012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4018 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4019 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4021 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4022 ;;Total ram usage:        5 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:   13
  4025 ;; This function calls:
  4026 ;;		_recv_msg
  4027 ;; This function is called by:
  4028 ;;		_main
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text22
  4033  001970                     __ptext22:
  4034                           	opt stack 0
  4035  001970                     _ToMainHigh_recvmsg:
  4036                           	opt stack 17
  4037                           
  4038                           ;incstack = 0
  4039                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4040  001970  CFE8 F0A9          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4041                           
  4042                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4043  001974  0101               	movlb	1	; () banked
  4044  001976  0E01               	movlw	high _ToMainHigh_MQ
  4045  001978  0100               	movlb	0	; () banked
  4046  00197A  0100               	movlb	0	; () banked
  4047  00197C  6F98               	movwf	(recv_msg@qptr+1)& (0+255),b
  4048  00197E  0101               	movlb	1	; () banked
  4049  001980  0E00               	movlw	low _ToMainHigh_MQ
  4050  001982  0100               	movlb	0	; () banked
  4051  001984  0100               	movlb	0	; () banked
  4052  001986  6F97               	movwf	recv_msg@qptr& (0+255),b
  4053  001988  C0A9  F099         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4054  00198C  0100               	movlb	0	; () banked
  4055  00198E  0100               	movlb	0	; () banked
  4056  001990  C0A6  F09B         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4057  001994  0100               	movlb	0	; () banked
  4058  001996  0100               	movlb	0	; () banked
  4059  001998  C0A5  F09A         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4060  00199C  0100               	movlb	0	; () banked
  4061  00199E  0100               	movlb	0	; () banked
  4062  0019A0  C0A8  F09D         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4063  0019A4  0100               	movlb	0	; () banked
  4064  0019A6  0100               	movlb	0	; () banked
  4065  0019A8  C0A7  F09C         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4066  0019AC  ECD2  F003         	call	_recv_msg	;wreg free
  4067  0019B0  0012               	return	
  4068  0019B2                     __end_of_ToMainHigh_recvmsg:
  4069                           	opt stack 0
  4070                           tblptru	equ	0xFF8
  4071                           tblptrh	equ	0xFF7
  4072                           tblptrl	equ	0xFF6
  4073                           tablat	equ	0xFF5
  4074                           prodh	equ	0xFF4
  4075                           prodl	equ	0xFF3
  4076                           intcon	equ	0xFF2
  4077                           intcon2	equ	0xFF1
  4078                           postinc0	equ	0xFEE
  4079                           wreg	equ	0xFE8
  4080                           indf1	equ	0xFE7
  4081                           postdec1	equ	0xFE5
  4082                           fsr1h	equ	0xFE2
  4083                           fsr1l	equ	0xFE1
  4084                           indf2	equ	0xFDF
  4085                           postinc2	equ	0xFDE
  4086                           postdec2	equ	0xFDD
  4087                           fsr2h	equ	0xFDA
  4088                           fsr2l	equ	0xFD9
  4089                           status	equ	0xFD8
  4090                           
  4091 ;; *************** function _recv_msg *****************
  4092 ;; Defined at:
  4093 ;;		line 63 in file "../src/messages.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  qptr            2   55[BANK0 ] PTR struct __msg_queue
  4096 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4097 ;;  maxlength       1   57[BANK0 ] unsigned char 
  4098 ;;  msgtype         2   58[BANK0 ] PTR unsigned char 
  4099 ;;		 -> main@msgtype(1), 
  4100 ;;  data            2   60[BANK0 ] PTR void 
  4101 ;;		 -> main@msgbuffer(11), 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  qmsg            2   67[BANK0 ] PTR struct __msg
  4104 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4105 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4106 ;;  tlength         2   65[BANK0 ] unsigned int 
  4107 ;;  slot            1   64[BANK0 ] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      char 
  4110 ;; Registers used:
  4111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4117 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4118 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4119 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4120 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4121 ;;Total ram usage:       14 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:   12
  4124 ;; This function calls:
  4125 ;;		___awmod
  4126 ;;		_memcpy
  4127 ;; This function is called by:
  4128 ;;		_ToMainLow_recvmsg
  4129 ;;		_ToMainHigh_recvmsg
  4130 ;;		_FromMainLow_recvmsg
  4131 ;;		_FromMainHigh_recvmsg
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	text23
  4136  0007A4                     __ptext23:
  4137                           	opt stack 0
  4138  0007A4                     _recv_msg:
  4139                           	opt stack 17
  4140                           
  4141                           ;messages.c: 64: unsigned char slot;
  4142                           ;messages.c: 68: msg *qmsg;
  4143                           ;messages.c: 69: size_t tlength;
  4144                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4145                           
  4146                           ;incstack = 0
  4147  0007A4  0100               	movlb	0	; () banked
  4148  0007A6  EE20 F042          	lfsr	2,66
  4149  0007AA  0100               	movlb	0	; () banked
  4150  0007AC  5197               	movf	recv_msg@qptr& (0+255),w,b
  4151  0007AE  26D9               	addwf	fsr2l,f,c
  4152  0007B0  0100               	movlb	0	; () banked
  4153  0007B2  5198               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4154  0007B4  22DA               	addwfc	fsr2h,f,c
  4155  0007B6  50DF               	movf	indf2,w,c
  4156  0007B8  0100               	movlb	0	; () banked
  4157  0007BA  0100               	movlb	0	; () banked
  4158  0007BC  6FA0               	movwf	recv_msg@slot& (0+255),b
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4162  0007BE  0100               	movlb	0	; () banked
  4163  0007C0  0100               	movlb	0	; () banked
  4164  0007C2  51A0               	movf	recv_msg@slot& (0+255),w,b
  4165  0007C4  0D0D               	mullw	13
  4166  0007C6  50F3               	movf	prodl,w,c
  4167  0007C8  0100               	movlb	0	; () banked
  4168  0007CA  0100               	movlb	0	; () banked
  4169  0007CC  2597               	addwf	recv_msg@qptr& (0+255),w,b
  4170  0007CE  0100               	movlb	0	; () banked
  4171  0007D0  0100               	movlb	0	; () banked
  4172  0007D2  6FA3               	movwf	recv_msg@qmsg& (0+255),b
  4173  0007D4  50F4               	movf	prodh,w,c
  4174  0007D6  0100               	movlb	0	; () banked
  4175  0007D8  0100               	movlb	0	; () banked
  4176  0007DA  2198               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4177  0007DC  0100               	movlb	0	; () banked
  4178  0007DE  6FA4               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;messages.c: 74: if (qmsg->full == 1) {
  4182  0007E0  0E01               	movlw	1
  4183  0007E2  C0A3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4184  0007E6  C0A4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4185  0007EA  62DF               	cpfseq	indf2,c
  4186  0007EC  D088               	goto	l2968
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4190  0007EE  0100               	movlb	0	; () banked
  4191  0007F0  EE20 F001          	lfsr	2,1
  4192  0007F4  0100               	movlb	0	; () banked
  4193  0007F6  51A3               	movf	recv_msg@qmsg& (0+255),w,b
  4194  0007F8  26D9               	addwf	fsr2l,f,c
  4195  0007FA  0100               	movlb	0	; () banked
  4196  0007FC  51A4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4197  0007FE  22DA               	addwfc	fsr2h,f,c
  4198  000800  50DF               	movf	indf2,w,c
  4199  000802  0100               	movlb	0	; () banked
  4200  000804  0100               	movlb	0	; () banked
  4201  000806  5D99               	subwf	recv_msg@maxlength& (0+255),w,b
  4202  000808  B0D8               	btfsc	status,0,c
  4203  00080A  D002               	goto	l2952
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;messages.c: 77: return (-3);
  4207  00080C  0EFD               	movlw	253
  4208  00080E  0012               	return	
  4209  000810                     l2952:
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;messages.c: 78: }
  4213                           ;messages.c: 80: tlength = qmsg->length;
  4214  000810  0100               	movlb	0	; () banked
  4215  000812  EE20 F001          	lfsr	2,1
  4216  000816  0100               	movlb	0	; () banked
  4217  000818  51A3               	movf	recv_msg@qmsg& (0+255),w,b
  4218  00081A  26D9               	addwf	fsr2l,f,c
  4219  00081C  0100               	movlb	0	; () banked
  4220  00081E  51A4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4221  000820  22DA               	addwfc	fsr2h,f,c
  4222  000822  50DF               	movf	indf2,w,c
  4223  000824  0100               	movlb	0	; () banked
  4224  000826  6F9E               	movwf	??_recv_msg& (0+255),b
  4225  000828  0100               	movlb	0	; () banked
  4226  00082A  519E               	movf	??_recv_msg& (0+255),w,b
  4227  00082C  0100               	movlb	0	; () banked
  4228  00082E  0100               	movlb	0	; () banked
  4229  000830  6FA1               	movwf	recv_msg@tlength& (0+255),b
  4230  000832  0100               	movlb	0	; () banked
  4231  000834  6BA2               	clrf	(recv_msg@tlength+1)& (0+255),b
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4235  000836  0100               	movlb	0	; () banked
  4236  000838  0100               	movlb	0	; () banked
  4237  00083A  C09D  F08E         	movff	recv_msg@data+1,memcpy@d1+1
  4238  00083E  0100               	movlb	0	; () banked
  4239  000840  0100               	movlb	0	; () banked
  4240  000842  C09C  F08D         	movff	recv_msg@data,memcpy@d1
  4241  000846  0E03               	movlw	3
  4242  000848  0100               	movlb	0	; () banked
  4243  00084A  0100               	movlb	0	; () banked
  4244  00084C  25A3               	addwf	recv_msg@qmsg& (0+255),w,b
  4245  00084E  0100               	movlb	0	; () banked
  4246  000850  6F9E               	movwf	??_recv_msg& (0+255),b
  4247  000852  0E00               	movlw	0
  4248  000854  0100               	movlb	0	; () banked
  4249  000856  0100               	movlb	0	; () banked
  4250  000858  21A4               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4251  00085A  0100               	movlb	0	; () banked
  4252  00085C  6F9F               	movwf	(??_recv_msg+1)& (0+255),b
  4253  00085E  C09E  F08F         	movff	??_recv_msg,memcpy@s1
  4254  000862  C09F  F090         	movff	??_recv_msg+1,memcpy@s1+1
  4255  000866  C0A1  F091         	movff	recv_msg@tlength,memcpy@n
  4256  00086A  C0A2  F092         	movff	recv_msg@tlength+1,memcpy@n+1
  4257  00086E  ECD1  F00B         	call	_memcpy	;wreg free
  4258                           
  4259                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  4260  000872  0100               	movlb	0	; () banked
  4261  000874  EE20 F042          	lfsr	2,66
  4262  000878  0100               	movlb	0	; () banked
  4263  00087A  5197               	movf	recv_msg@qptr& (0+255),w,b
  4264  00087C  26D9               	addwf	fsr2l,f,c
  4265  00087E  0100               	movlb	0	; () banked
  4266  000880  5198               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4267  000882  22DA               	addwfc	fsr2h,f,c
  4268  000884  0100               	movlb	0	; () banked
  4269  000886  EE10 F042          	lfsr	1,66
  4270  00088A  0100               	movlb	0	; () banked
  4271  00088C  5197               	movf	recv_msg@qptr& (0+255),w,b
  4272  00088E  26E1               	addwf	fsr1l,f,c
  4273  000890  0100               	movlb	0	; () banked
  4274  000892  5198               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4275  000894  22E2               	addwfc	fsr1h,f,c
  4276  000896  50E7               	movf	indf1,w,c
  4277  000898  0100               	movlb	0	; () banked
  4278  00089A  6F9E               	movwf	??_recv_msg& (0+255),b
  4279  00089C  0E01               	movlw	1
  4280  00089E  0100               	movlb	0	; () banked
  4281  0008A0  259E               	addwf	??_recv_msg& (0+255),w,b
  4282  0008A2  0100               	movlb	0	; () banked
  4283  0008A4  0100               	movlb	0	; () banked
  4284  0008A6  6F8D               	movwf	___awmod@dividend& (0+255),b
  4285  0008A8  0100               	movlb	0	; () banked
  4286  0008AA  0100               	movlb	0	; () banked
  4287  0008AC  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
  4288  0008AE  0E00               	movlw	0
  4289  0008B0  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4290  0008B2  0E00               	movlw	0
  4291  0008B4  0100               	movlb	0	; () banked
  4292  0008B6  0100               	movlb	0	; () banked
  4293  0008B8  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
  4294  0008BA  0E05               	movlw	5
  4295  0008BC  0100               	movlb	0	; () banked
  4296  0008BE  6F8F               	movwf	___awmod@divisor& (0+255),b
  4297  0008C0  EC4C  F006         	call	___awmod	;wreg free
  4298  0008C4  0100               	movlb	0	; () banked
  4299  0008C6  0100               	movlb	0	; () banked
  4300  0008C8  518D               	movf	?___awmod& (0+255),w,b
  4301  0008CA  6EDF               	movwf	indf2,c
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4305  0008CC  0100               	movlb	0	; () banked
  4306  0008CE  EE20 F002          	lfsr	2,2
  4307  0008D2  0100               	movlb	0	; () banked
  4308  0008D4  51A3               	movf	recv_msg@qmsg& (0+255),w,b
  4309  0008D6  26D9               	addwf	fsr2l,f,c
  4310  0008D8  0100               	movlb	0	; () banked
  4311  0008DA  51A4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4312  0008DC  22DA               	addwfc	fsr2h,f,c
  4313  0008DE  C09A  FFE1         	movff	recv_msg@msgtype,fsr1l
  4314  0008E2  C09B  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4315  0008E6  CFDF FFE7          	movff	indf2,indf1
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;messages.c: 91: qmsg->full = 0;
  4319  0008EA  C0A3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4320  0008EE  C0A4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4321  0008F2  0E00               	movlw	0
  4322  0008F4  6EDF               	movwf	indf2,c
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;messages.c: 92: return (tlength);
  4326  0008F6  0100               	movlb	0	; () banked
  4327  0008F8  0100               	movlb	0	; () banked
  4328  0008FA  51A1               	movf	recv_msg@tlength& (0+255),w,b
  4329  0008FC  0012               	return	
  4330  0008FE                     l2968:
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;messages.c: 94: return (-4);
  4334  0008FE  0EFC               	movlw	252
  4335  000900  0012               	return	
  4336  000902                     __end_of_recv_msg:
  4337                           	opt stack 0
  4338                           tblptru	equ	0xFF8
  4339                           tblptrh	equ	0xFF7
  4340                           tblptrl	equ	0xFF6
  4341                           tablat	equ	0xFF5
  4342                           prodh	equ	0xFF4
  4343                           prodl	equ	0xFF3
  4344                           intcon	equ	0xFF2
  4345                           intcon2	equ	0xFF1
  4346                           postinc0	equ	0xFEE
  4347                           wreg	equ	0xFE8
  4348                           indf1	equ	0xFE7
  4349                           postdec1	equ	0xFE5
  4350                           fsr1h	equ	0xFE2
  4351                           fsr1l	equ	0xFE1
  4352                           indf2	equ	0xFDF
  4353                           postinc2	equ	0xFDE
  4354                           postdec2	equ	0xFDD
  4355                           fsr2h	equ	0xFDA
  4356                           fsr2l	equ	0xFD9
  4357                           status	equ	0xFD8
  4358                           
  4359 ;; *************** function _memcpy *****************
  4360 ;; Defined at:
  4361 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;  d1              2   45[BANK0 ] PTR void 
  4364 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4365 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4366 ;;		 -> main@msgbuffer(11), 
  4367 ;;  s1              2   47[BANK0 ] PTR const void 
  4368 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4369 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4370 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4371 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4372 ;;		 -> main@uc(13), 
  4373 ;;  n               2   49[BANK0 ] unsigned int 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  s               2   53[BANK0 ] PTR const unsigned char 
  4376 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4377 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4378 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4379 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4380 ;;		 -> main@uc(13), 
  4381 ;;  d               2   51[BANK0 ] PTR unsigned char 
  4382 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4383 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4384 ;;		 -> main@msgbuffer(11), 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  2   45[BANK0 ] PTR void 
  4387 ;; Registers used:
  4388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4394 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4395 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4397 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4398 ;;Total ram usage:       10 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:   11
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_send_msg
  4405 ;;		_recv_msg
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text24
  4410  0017A2                     __ptext24:
  4411                           	opt stack 0
  4412  0017A2                     _memcpy:
  4413                           	opt stack 16
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;incstack = 0
  4417  0017A2  0100               	movlb	0	; () banked
  4418  0017A4  0100               	movlb	0	; () banked
  4419  0017A6  C090  F096         	movff	memcpy@s1+1,memcpy@s+1
  4420  0017AA  0100               	movlb	0	; () banked
  4421  0017AC  0100               	movlb	0	; () banked
  4422  0017AE  C08F  F095         	movff	memcpy@s1,memcpy@s
  4423  0017B2  0100               	movlb	0	; () banked
  4424  0017B4  0100               	movlb	0	; () banked
  4425  0017B6  C08E  F094         	movff	memcpy@d1+1,memcpy@d+1
  4426  0017BA  0100               	movlb	0	; () banked
  4427  0017BC  0100               	movlb	0	; () banked
  4428  0017BE  C08D  F093         	movff	memcpy@d1,memcpy@d
  4429  0017C2  D012               	goto	l2938
  4430  0017C4                     l2932:
  4431                           
  4432                           ; BSR set to: 0
  4433  0017C4  C095  FFD9         	movff	memcpy@s,fsr2l
  4434  0017C8  C096  FFDA         	movff	memcpy@s+1,fsr2h
  4435  0017CC  C093  FFE1         	movff	memcpy@d,fsr1l
  4436  0017D0  C094  FFE2         	movff	memcpy@d+1,fsr1h
  4437  0017D4  CFDF FFE7          	movff	indf2,indf1
  4438                           
  4439                           ; BSR set to: 0
  4440  0017D8  0100               	movlb	0	; () banked
  4441  0017DA  0100               	movlb	0	; () banked
  4442  0017DC  4B95               	infsnz	memcpy@s& (0+255),f,b
  4443  0017DE  2B96               	incf	(memcpy@s+1)& (0+255),f,b
  4444                           
  4445                           ; BSR set to: 0
  4446  0017E0  0100               	movlb	0	; () banked
  4447  0017E2  0100               	movlb	0	; () banked
  4448  0017E4  4B93               	infsnz	memcpy@d& (0+255),f,b
  4449  0017E6  2B94               	incf	(memcpy@d+1)& (0+255),f,b
  4450  0017E8                     l2938:
  4451                           
  4452                           ; BSR set to: 0
  4453  0017E8  0100               	movlb	0	; () banked
  4454  0017EA  0100               	movlb	0	; () banked
  4455  0017EC  0791               	decf	memcpy@n& (0+255),f,b
  4456  0017EE  A0D8               	btfss	status,0,c
  4457  0017F0  0792               	decf	(memcpy@n+1)& (0+255),f,b
  4458  0017F2  0100               	movlb	0	; () banked
  4459  0017F4  2991               	incf	memcpy@n& (0+255),w,b
  4460  0017F6  B4D8               	btfsc	status,2,c
  4461  0017F8  2992               	incf	(memcpy@n+1)& (0+255),w,b
  4462  0017FA  B4D8               	btfsc	status,2,c
  4463                           
  4464                           ; BSR set to: 0
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;	Return value of _memcpy is never used
  4468  0017FC  0012               	return	
  4469  0017FE  D7E2               	goto	l2932
  4470  001800                     __end_of_memcpy:
  4471                           	opt stack 0
  4472                           tblptru	equ	0xFF8
  4473                           tblptrh	equ	0xFF7
  4474                           tblptrl	equ	0xFF6
  4475                           tablat	equ	0xFF5
  4476                           prodh	equ	0xFF4
  4477                           prodl	equ	0xFF3
  4478                           intcon	equ	0xFF2
  4479                           intcon2	equ	0xFF1
  4480                           postinc0	equ	0xFEE
  4481                           wreg	equ	0xFE8
  4482                           indf1	equ	0xFE7
  4483                           postdec1	equ	0xFE5
  4484                           fsr1h	equ	0xFE2
  4485                           fsr1l	equ	0xFE1
  4486                           indf2	equ	0xFDF
  4487                           postinc2	equ	0xFDE
  4488                           postdec2	equ	0xFDD
  4489                           fsr2h	equ	0xFDA
  4490                           fsr2l	equ	0xFD9
  4491                           status	equ	0xFD8
  4492                           
  4493 ;; *************** function ___awmod *****************
  4494 ;; Defined at:
  4495 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;  dividend        2   45[BANK0 ] int 
  4498 ;;  divisor         2   47[BANK0 ] int 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  sign            1   51[BANK0 ] unsigned char 
  4501 ;;  counter         1   50[BANK0 ] unsigned char 
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  2   45[BANK0 ] int 
  4504 ;; Registers used:
  4505 ;;		wreg, status,2, status,0, prodl
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4511 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4512 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4513 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4514 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4515 ;;Total ram usage:        7 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; Hardware stack levels required when called:   11
  4518 ;; This function calls:
  4519 ;;		Nothing
  4520 ;; This function is called by:
  4521 ;;		_send_msg
  4522 ;;		_recv_msg
  4523 ;;		i1_send_msg
  4524 ;;		i2_send_msg
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text25
  4529  000C98                     __ptext25:
  4530                           	opt stack 0
  4531  000C98                     ___awmod:
  4532                           	opt stack 16
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;incstack = 0
  4536  000C98  0100               	movlb	0	; () banked
  4537  000C9A  6F91               	movwf	??___awmod& (0+255),b
  4538  000C9C  0E00               	movlw	0
  4539  000C9E  0100               	movlb	0	; () banked
  4540  000CA0  0100               	movlb	0	; () banked
  4541  000CA2  6F93               	movwf	___awmod@sign& (0+255),b
  4542  000CA4  0100               	movlb	0	; () banked
  4543  000CA6  5191               	movf	??___awmod& (0+255),w,b
  4544                           
  4545                           ; BSR set to: 0
  4546  000CA8  0100               	movlb	0	; () banked
  4547  000CAA  0100               	movlb	0	; () banked
  4548  000CAC  518E               	movf	(___awmod@dividend+1)& (0+255),w,b
  4549  000CAE  0A80               	xorlw	128
  4550  000CB0  6EF3               	movwf	prodl,c
  4551  000CB2  0E80               	movlw	128
  4552  000CB4  5CF3               	subwf	prodl,w,c
  4553  000CB6  0E00               	movlw	0
  4554  000CB8  B4D8               	btfsc	status,2,c
  4555  000CBA  5D8D               	subwf	___awmod@dividend& (0+255),w,b
  4556  000CBC  B0D8               	btfsc	status,0,c
  4557  000CBE  D00F               	goto	l3296
  4558                           
  4559                           ; BSR set to: 0
  4560  000CC0  0100               	movlb	0	; () banked
  4561  000CC2  0100               	movlb	0	; () banked
  4562  000CC4  6D8D               	negf	___awmod@dividend& (0+255),b
  4563  000CC6  0100               	movlb	0	; () banked
  4564  000CC8  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
  4565  000CCA  B0D8               	btfsc	status,0,c
  4566  000CCC  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
  4567                           
  4568                           ; BSR set to: 0
  4569  000CCE  0100               	movlb	0	; () banked
  4570  000CD0  6F91               	movwf	??___awmod& (0+255),b
  4571  000CD2  0E01               	movlw	1
  4572  000CD4  0100               	movlb	0	; () banked
  4573  000CD6  0100               	movlb	0	; () banked
  4574  000CD8  6F93               	movwf	___awmod@sign& (0+255),b
  4575  000CDA  0100               	movlb	0	; () banked
  4576  000CDC  5191               	movf	??___awmod& (0+255),w,b
  4577  000CDE                     l3296:
  4578                           
  4579                           ; BSR set to: 0
  4580  000CDE  0100               	movlb	0	; () banked
  4581  000CE0  0100               	movlb	0	; () banked
  4582  000CE2  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
  4583  000CE4  0A80               	xorlw	128
  4584  000CE6  6EF3               	movwf	prodl,c
  4585  000CE8  0E80               	movlw	128
  4586  000CEA  5CF3               	subwf	prodl,w,c
  4587  000CEC  0E00               	movlw	0
  4588  000CEE  B4D8               	btfsc	status,2,c
  4589  000CF0  5D8F               	subwf	___awmod@divisor& (0+255),w,b
  4590  000CF2  B0D8               	btfsc	status,0,c
  4591  000CF4  D007               	goto	l3300
  4592                           
  4593                           ; BSR set to: 0
  4594  000CF6  0100               	movlb	0	; () banked
  4595  000CF8  0100               	movlb	0	; () banked
  4596  000CFA  6D8F               	negf	___awmod@divisor& (0+255),b
  4597  000CFC  0100               	movlb	0	; () banked
  4598  000CFE  1F90               	comf	(___awmod@divisor+1)& (0+255),f,b
  4599  000D00  B0D8               	btfsc	status,0,c
  4600  000D02  2B90               	incf	(___awmod@divisor+1)& (0+255),f,b
  4601  000D04                     l3300:
  4602                           
  4603                           ; BSR set to: 0
  4604  000D04  0100               	movlb	0	; () banked
  4605  000D06  0100               	movlb	0	; () banked
  4606  000D08  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
  4607  000D0A  118F               	iorwf	___awmod@divisor& (0+255),w,b
  4608  000D0C  B4D8               	btfsc	status,2,c
  4609  000D0E  D03A               	goto	l3316
  4610                           
  4611                           ; BSR set to: 0
  4612  000D10  0100               	movlb	0	; () banked
  4613  000D12  6F91               	movwf	??___awmod& (0+255),b
  4614  000D14  0E01               	movlw	1
  4615  000D16  0100               	movlb	0	; () banked
  4616  000D18  0100               	movlb	0	; () banked
  4617  000D1A  6F92               	movwf	___awmod@counter& (0+255),b
  4618  000D1C  0100               	movlb	0	; () banked
  4619  000D1E  5191               	movf	??___awmod& (0+255),w,b
  4620  000D20  D009               	goto	l3306
  4621  000D22                     l3304:
  4622                           
  4623                           ; BSR set to: 0
  4624  000D22  0100               	movlb	0	; () banked
  4625  000D24  0100               	movlb	0	; () banked
  4626  000D26  0100               	movlb	0	; () banked
  4627  000D28  90D8               	bcf	status,0,c
  4628  000D2A  378F               	rlcf	___awmod@divisor& (0+255),f,b
  4629  000D2C  3790               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4630  000D2E  0100               	movlb	0	; () banked
  4631  000D30  0100               	movlb	0	; () banked
  4632  000D32  2B92               	incf	___awmod@counter& (0+255),f,b
  4633  000D34                     l3306:
  4634                           
  4635                           ; BSR set to: 0
  4636  000D34  0100               	movlb	0	; () banked
  4637  000D36  0100               	movlb	0	; () banked
  4638  000D38  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4639  000D3A  D7F3               	goto	l3304
  4640  000D3C                     l3308:
  4641                           
  4642                           ; BSR set to: 0
  4643  000D3C  0100               	movlb	0	; () banked
  4644  000D3E  0100               	movlb	0	; () banked
  4645  000D40  518F               	movf	___awmod@divisor& (0+255),w,b
  4646  000D42  0100               	movlb	0	; () banked
  4647  000D44  0100               	movlb	0	; () banked
  4648  000D46  5D8D               	subwf	___awmod@dividend& (0+255),w,b
  4649  000D48  0100               	movlb	0	; () banked
  4650  000D4A  0100               	movlb	0	; () banked
  4651  000D4C  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
  4652  000D4E  0100               	movlb	0	; () banked
  4653  000D50  0100               	movlb	0	; () banked
  4654  000D52  598E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4655  000D54  A0D8               	btfss	status,0,c
  4656  000D56  D00C               	goto	l3312
  4657                           
  4658                           ; BSR set to: 0
  4659  000D58  0100               	movlb	0	; () banked
  4660  000D5A  0100               	movlb	0	; () banked
  4661  000D5C  518F               	movf	___awmod@divisor& (0+255),w,b
  4662  000D5E  0100               	movlb	0	; () banked
  4663  000D60  0100               	movlb	0	; () banked
  4664  000D62  5F8D               	subwf	___awmod@dividend& (0+255),f,b
  4665  000D64  0100               	movlb	0	; () banked
  4666  000D66  0100               	movlb	0	; () banked
  4667  000D68  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
  4668  000D6A  0100               	movlb	0	; () banked
  4669  000D6C  0100               	movlb	0	; () banked
  4670  000D6E  5B8E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4671  000D70                     l3312:
  4672                           
  4673                           ; BSR set to: 0
  4674  000D70  0100               	movlb	0	; () banked
  4675  000D72  0100               	movlb	0	; () banked
  4676  000D74  0100               	movlb	0	; () banked
  4677  000D76  90D8               	bcf	status,0,c
  4678  000D78  3390               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4679  000D7A  338F               	rrcf	___awmod@divisor& (0+255),f,b
  4680                           
  4681                           ; BSR set to: 0
  4682  000D7C  0100               	movlb	0	; () banked
  4683  000D7E  0100               	movlb	0	; () banked
  4684  000D80  2F92               	decfsz	___awmod@counter& (0+255),f,b
  4685  000D82  D7DC               	goto	l3308
  4686  000D84                     l3316:
  4687                           
  4688                           ; BSR set to: 0
  4689  000D84  0100               	movlb	0	; () banked
  4690  000D86  0100               	movlb	0	; () banked
  4691  000D88  5193               	movf	___awmod@sign& (0+255),w,b
  4692  000D8A  B4D8               	btfsc	status,2,c
  4693  000D8C  D007               	goto	l3320
  4694                           
  4695                           ; BSR set to: 0
  4696  000D8E  0100               	movlb	0	; () banked
  4697  000D90  0100               	movlb	0	; () banked
  4698  000D92  6D8D               	negf	___awmod@dividend& (0+255),b
  4699  000D94  0100               	movlb	0	; () banked
  4700  000D96  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
  4701  000D98  B0D8               	btfsc	status,0,c
  4702  000D9A  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
  4703  000D9C                     l3320:
  4704                           
  4705                           ; BSR set to: 0
  4706  000D9C  C08D  F08D         	movff	___awmod@dividend,?___awmod
  4707  000DA0  C08E  F08E         	movff	___awmod@dividend+1,?___awmod+1
  4708  000DA4  0012               	return	
  4709  000DA6                     __end_of___awmod:
  4710                           	opt stack 0
  4711                           tblptru	equ	0xFF8
  4712                           tblptrh	equ	0xFF7
  4713                           tblptrl	equ	0xFF6
  4714                           tablat	equ	0xFF5
  4715                           prodh	equ	0xFF4
  4716                           prodl	equ	0xFF3
  4717                           intcon	equ	0xFF2
  4718                           intcon2	equ	0xFF1
  4719                           postinc0	equ	0xFEE
  4720                           wreg	equ	0xFE8
  4721                           indf1	equ	0xFE7
  4722                           postdec1	equ	0xFE5
  4723                           fsr1h	equ	0xFE2
  4724                           fsr1l	equ	0xFE1
  4725                           indf2	equ	0xFDF
  4726                           postinc2	equ	0xFDE
  4727                           postdec2	equ	0xFDD
  4728                           fsr2h	equ	0xFDA
  4729                           fsr2l	equ	0xFD9
  4730                           status	equ	0xFD8
  4731                           
  4732 ;; *************** function _SetChanADC *****************
  4733 ;; Defined at:
  4734 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  channel         1    wreg     unsigned char 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  channel         1   46[BANK0 ] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;		None               void
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4750 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4751 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4752 ;;Total ram usage:        2 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; Hardware stack levels required when called:   11
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_main
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text26
  4763  001BB0                     __ptext26:
  4764                           	opt stack 0
  4765  001BB0                     _SetChanADC:
  4766                           	opt stack 19
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;incstack = 0
  4770                           ;SetChanADC@channel stored from wreg
  4771  001BB0  CFE8 F08E          	movff	wreg,SetChanADC@channel
  4772  001BB4  CFC2 F08D          	movff	4034,??_SetChanADC	;volatile
  4773  001BB8  0EC3               	movlw	195
  4774  001BBA  0100               	movlb	0	; () banked
  4775  001BBC  178D               	andwf	??_SetChanADC& (0+255),f,b
  4776  001BBE  0100               	movlb	0	; () banked
  4777  001BC0  0100               	movlb	0	; () banked
  4778  001BC2  90D8               	bcf	status,0,c
  4779  001BC4  318E               	rrcf	SetChanADC@channel& (0+255),w,b
  4780  001BC6  0B3C               	andlw	60
  4781  001BC8  0100               	movlb	0	; () banked
  4782  001BCA  118D               	iorwf	??_SetChanADC& (0+255),w,b
  4783  001BCC  6EC2               	movwf	4034,c	;volatile
  4784                           
  4785                           ; BSR set to: 0
  4786  001BCE  0012               	return	
  4787  001BD0                     __end_of_SetChanADC:
  4788                           	opt stack 0
  4789                           tblptru	equ	0xFF8
  4790                           tblptrh	equ	0xFF7
  4791                           tblptrl	equ	0xFF6
  4792                           tablat	equ	0xFF5
  4793                           prodh	equ	0xFF4
  4794                           prodl	equ	0xFF3
  4795                           intcon	equ	0xFF2
  4796                           intcon2	equ	0xFF1
  4797                           postinc0	equ	0xFEE
  4798                           wreg	equ	0xFE8
  4799                           indf1	equ	0xFE7
  4800                           postdec1	equ	0xFE5
  4801                           fsr1h	equ	0xFE2
  4802                           fsr1l	equ	0xFE1
  4803                           indf2	equ	0xFDF
  4804                           postinc2	equ	0xFDE
  4805                           postdec2	equ	0xFDD
  4806                           fsr2h	equ	0xFDA
  4807                           fsr2l	equ	0xFD9
  4808                           status	equ	0xFD8
  4809                           
  4810 ;; *************** function _OpenTimer1 *****************
  4811 ;; Defined at:
  4812 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;  config          1    wreg     unsigned char 
  4815 ;;  config1         1   45[BANK0 ] unsigned char 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  config          1   47[BANK0 ] unsigned char 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;		None               void
  4820 ;; Registers used:
  4821 ;;		wreg, status,2, status,0
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4827 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4828 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4829 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4830 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4831 ;;Total ram usage:        3 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:   11
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_main
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text27
  4842  0019B2                     __ptext27:
  4843                           	opt stack 0
  4844  0019B2                     _OpenTimer1:
  4845                           	opt stack 19
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;incstack = 0
  4849                           ;OpenTimer1@config stored from wreg
  4850  0019B2  CFE8 F08F          	movff	wreg,OpenTimer1@config
  4851  0019B6  0100               	movlb	0	; () banked
  4852  0019B8  0100               	movlb	0	; () banked
  4853  0019BA  518D               	movf	OpenTimer1@config1& (0+255),w,b
  4854  0019BC  0BF3               	andlw	243
  4855  0019BE  6E9A               	movwf	3994,c	;volatile
  4856  0019C0  C08F  F08E         	movff	OpenTimer1@config,??_OpenTimer1
  4857  0019C4  0E7F               	movlw	127
  4858  0019C6  0100               	movlb	0	; () banked
  4859  0019C8  178E               	andwf	??_OpenTimer1& (0+255),f,b
  4860  0019CA  0100               	movlb	0	; () banked
  4861  0019CC  90D8               	bcf	status,0,c
  4862  0019CE  358E               	rlcf	??_OpenTimer1& (0+255),w,b
  4863  0019D0  6ECD               	movwf	4045,c	;volatile
  4864                           
  4865                           ; BSR set to: 0
  4866  0019D2  0E00               	movlw	0
  4867  0019D4  6ECF               	movwf	4047,c	;volatile
  4868                           
  4869                           ; BSR set to: 0
  4870  0019D6  0E00               	movlw	0
  4871  0019D8  6ECE               	movwf	4046,c	;volatile
  4872                           
  4873                           ; BSR set to: 0
  4874  0019DA  909E               	bcf	3998,0,c	;volatile
  4875                           
  4876                           ; BSR set to: 0
  4877  0019DC  0100               	movlb	0	; () banked
  4878  0019DE  0100               	movlb	0	; () banked
  4879  0019E0  AF8F               	btfss	OpenTimer1@config& (0+255),7,b
  4880  0019E2  D002               	goto	l550
  4881                           
  4882                           ; BSR set to: 0
  4883  0019E4  809D               	bsf	3997,0,c	;volatile
  4884  0019E6  D001               	goto	l551
  4885  0019E8                     l550:
  4886                           
  4887                           ; BSR set to: 0
  4888  0019E8  909D               	bcf	3997,0,c	;volatile
  4889  0019EA                     l551:
  4890                           
  4891                           ; BSR set to: 0
  4892  0019EA  BE9A               	btfsc	3994,7,c	;volatile
  4893                           
  4894                           ; BSR set to: 0
  4895  0019EC  869A               	bsf	3994,3,c	;volatile
  4896                           
  4897                           ; BSR set to: 0
  4898  0019EE  80CD               	bsf	4045,0,c	;volatile
  4899                           
  4900                           ; BSR set to: 0
  4901  0019F0  0012               	return	
  4902  0019F2                     __end_of_OpenTimer1:
  4903                           	opt stack 0
  4904                           tblptru	equ	0xFF8
  4905                           tblptrh	equ	0xFF7
  4906                           tblptrl	equ	0xFF6
  4907                           tablat	equ	0xFF5
  4908                           prodh	equ	0xFF4
  4909                           prodl	equ	0xFF3
  4910                           intcon	equ	0xFF2
  4911                           intcon2	equ	0xFF1
  4912                           postinc0	equ	0xFEE
  4913                           wreg	equ	0xFE8
  4914                           indf1	equ	0xFE7
  4915                           postdec1	equ	0xFE5
  4916                           fsr1h	equ	0xFE2
  4917                           fsr1l	equ	0xFE1
  4918                           indf2	equ	0xFDF
  4919                           postinc2	equ	0xFDE
  4920                           postdec2	equ	0xFDD
  4921                           fsr2h	equ	0xFDA
  4922                           fsr2l	equ	0xFD9
  4923                           status	equ	0xFD8
  4924                           
  4925 ;; *************** function _OpenTimer0 *****************
  4926 ;; Defined at:
  4927 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  config          1    wreg     unsigned char 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  config          1   45[BANK0 ] unsigned char 
  4932 ;; Return value:  Size  Location     Type
  4933 ;;		None               void
  4934 ;; Registers used:
  4935 ;;		wreg, status,2, status,0
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4942 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4944 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4945 ;;Total ram usage:        1 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; Hardware stack levels required when called:   11
  4948 ;; This function calls:
  4949 ;;		Nothing
  4950 ;; This function is called by:
  4951 ;;		_main
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text28
  4956  001B40                     __ptext28:
  4957                           	opt stack 0
  4958  001B40                     _OpenTimer0:
  4959                           	opt stack 19
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;incstack = 0
  4963                           ;OpenTimer0@config stored from wreg
  4964  001B40  CFE8 F08D          	movff	wreg,OpenTimer0@config
  4965  001B44  0100               	movlb	0	; () banked
  4966  001B46  0100               	movlb	0	; () banked
  4967  001B48  518D               	movf	OpenTimer0@config& (0+255),w,b
  4968  001B4A  0B7F               	andlw	127
  4969  001B4C  6ED5               	movwf	4053,c	;volatile
  4970                           
  4971                           ; BSR set to: 0
  4972  001B4E  0E00               	movlw	0
  4973  001B50  6ED7               	movwf	4055,c	;volatile
  4974                           
  4975                           ; BSR set to: 0
  4976  001B52  0E00               	movlw	0
  4977  001B54  6ED6               	movwf	4054,c	;volatile
  4978                           
  4979                           ; BSR set to: 0
  4980  001B56  94F2               	bcf	intcon,2,c	;volatile
  4981                           
  4982                           ; BSR set to: 0
  4983  001B58  0100               	movlb	0	; () banked
  4984  001B5A  0100               	movlb	0	; () banked
  4985  001B5C  AF8D               	btfss	OpenTimer0@config& (0+255),7,b
  4986  001B5E  D002               	goto	l522
  4987                           
  4988                           ; BSR set to: 0
  4989  001B60  8AF2               	bsf	intcon,5,c	;volatile
  4990  001B62  D001               	goto	l523
  4991  001B64                     l522:
  4992                           
  4993                           ; BSR set to: 0
  4994  001B64  9AF2               	bcf	intcon,5,c	;volatile
  4995  001B66                     l523:
  4996                           
  4997                           ; BSR set to: 0
  4998  001B66  8ED5               	bsf	4053,7,c	;volatile
  4999                           
  5000                           ; BSR set to: 0
  5001  001B68  0012               	return	
  5002  001B6A                     __end_of_OpenTimer0:
  5003                           	opt stack 0
  5004                           tblptru	equ	0xFF8
  5005                           tblptrh	equ	0xFF7
  5006                           tblptrl	equ	0xFF6
  5007                           tablat	equ	0xFF5
  5008                           prodh	equ	0xFF4
  5009                           prodl	equ	0xFF3
  5010                           intcon	equ	0xFF2
  5011                           intcon2	equ	0xFF1
  5012                           postinc0	equ	0xFEE
  5013                           wreg	equ	0xFE8
  5014                           indf1	equ	0xFE7
  5015                           postdec1	equ	0xFE5
  5016                           fsr1h	equ	0xFE2
  5017                           fsr1l	equ	0xFE1
  5018                           indf2	equ	0xFDF
  5019                           postinc2	equ	0xFDE
  5020                           postdec2	equ	0xFDD
  5021                           fsr2h	equ	0xFDA
  5022                           fsr2l	equ	0xFD9
  5023                           status	equ	0xFD8
  5024                           
  5025 ;; *************** function _OpenADC *****************
  5026 ;; Defined at:
  5027 ;;		line 225 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  config          1    wreg     unsigned char 
  5030 ;;  config2         1   45[BANK0 ] unsigned char 
  5031 ;;  config3         2   46[BANK0 ] unsigned int 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  config          1   51[BANK0 ] unsigned char 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;		None               void
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5043 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5044 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5045 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5046 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5047 ;;Total ram usage:        7 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:   11
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_main
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text29
  5058  0010E8                     __ptext29:
  5059                           	opt stack 0
  5060  0010E8                     _OpenADC:
  5061                           	opt stack 19
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;incstack = 0
  5065                           ;OpenADC@config stored from wreg
  5066  0010E8  CFE8 F093          	movff	wreg,OpenADC@config
  5067  0010EC  0E00               	movlw	0
  5068  0010EE  6EC2               	movwf	4034,c	;volatile
  5069  0010F0  0E00               	movlw	0
  5070  0010F2  6EC1               	movwf	4033,c	;volatile
  5071  0010F4  C08D  F090         	movff	OpenADC@config2,??_OpenADC
  5072  0010F8  0E06               	movlw	6
  5073  0010FA  0100               	movlb	0	; () banked
  5074  0010FC  6F91               	movwf	(??_OpenADC+1)& (0+255),b
  5075  0010FE                     u1755:
  5076  0010FE  0100               	movlb	0	; () banked
  5077  001100  90D8               	bcf	status,0,c
  5078  001102  3790               	rlcf	??_OpenADC& (0+255),f,b
  5079  001104  0100               	movlb	0	; () banked
  5080  001106  2F91               	decfsz	(??_OpenADC+1)& (0+255),f,b
  5081  001108  D7FA               	goto	u1755
  5082  00110A  0EC0               	movlw	192
  5083  00110C  0100               	movlb	0	; () banked
  5084  00110E  1790               	andwf	??_OpenADC& (0+255),f,b
  5085  001110  0100               	movlb	0	; () banked
  5086  001112  0100               	movlb	0	; () banked
  5087  001114  90D8               	bcf	status,0,c
  5088  001116  318D               	rrcf	OpenADC@config2& (0+255),w,b
  5089  001118  0B3C               	andlw	60
  5090  00111A  0100               	movlb	0	; () banked
  5091  00111C  1190               	iorwf	??_OpenADC& (0+255),w,b
  5092  00111E  6EC2               	movwf	4034,c	;volatile
  5093                           
  5094                           ; BSR set to: 0
  5095  001120  C093  F090         	movff	OpenADC@config,??_OpenADC
  5096  001124  0100               	movlb	0	; () banked
  5097  001126  90D8               	bcf	status,0,c
  5098  001128  3790               	rlcf	??_OpenADC& (0+255),f,b
  5099  00112A  0100               	movlb	0	; () banked
  5100  00112C  90D8               	bcf	status,0,c
  5101  00112E  3790               	rlcf	??_OpenADC& (0+255),f,b
  5102  001130  0E38               	movlw	56
  5103  001132  0100               	movlb	0	; () banked
  5104  001134  1790               	andwf	??_OpenADC& (0+255),f,b
  5105  001136  C093  F091         	movff	OpenADC@config,??_OpenADC+1
  5106  00113A  0100               	movlb	0	; () banked
  5107  00113C  3B91               	swapf	(??_OpenADC+1)& (0+255),f,b
  5108  00113E  0E0F               	movlw	15
  5109  001140  1791               	andwf	(??_OpenADC+1)& (0+255),f,b
  5110  001142  0E07               	movlw	7
  5111  001144  0100               	movlb	0	; () banked
  5112  001146  1791               	andwf	(??_OpenADC+1)& (0+255),f,b
  5113  001148  0100               	movlb	0	; () banked
  5114  00114A  0100               	movlb	0	; () banked
  5115  00114C  5193               	movf	OpenADC@config& (0+255),w,b
  5116  00114E  0B80               	andlw	128
  5117  001150  0100               	movlb	0	; () banked
  5118  001152  1191               	iorwf	(??_OpenADC+1)& (0+255),w,b
  5119  001154  0100               	movlb	0	; () banked
  5120  001156  1190               	iorwf	??_OpenADC& (0+255),w,b
  5121  001158  6EC1               	movwf	4033,c	;volatile
  5122                           
  5123                           ; BSR set to: 0
  5124  00115A  C08E  FF48         	movff	OpenADC@config3,3912	;volatile
  5125                           
  5126                           ; BSR set to: 0
  5127  00115E  0100               	movlb	0	; () banked
  5128  001160  C08F  F090         	movff	OpenADC@config3+1,??_OpenADC
  5129  001164  C090  F091         	movff	??_OpenADC,??_OpenADC+1
  5130  001168  0100               	movlb	0	; () banked
  5131  00116A  6B92               	clrf	(??_OpenADC+2)& (0+255),b
  5132  00116C  0100               	movlb	0	; () banked
  5133  00116E  5191               	movf	(??_OpenADC+1)& (0+255),w,b
  5134  001170  010F               	movlb	15	; () banked
  5135  001172  010F               	movlb	15	; () banked
  5136  001174  6F49               	movwf	73,b	;volatile
  5137                           
  5138                           ; BSR set to: 15
  5139  001176  0100               	movlb	0	; () banked
  5140  001178  0100               	movlb	0	; () banked
  5141  00117A  AF8D               	btfss	OpenADC@config2& (0+255),7,b
  5142  00117C  D003               	goto	l503
  5143                           
  5144                           ; BSR set to: 0
  5145  00117E  9C9E               	bcf	3998,6,c	;volatile
  5146  001180  8C9D               	bsf	3997,6,c	;volatile
  5147  001182  8CF2               	bsf	intcon,6,c	;volatile
  5148  001184                     l503:
  5149                           
  5150                           ; BSR set to: 0
  5151  001184  80C2               	bsf	4034,0,c	;volatile
  5152                           
  5153                           ; BSR set to: 0
  5154  001186  0012               	return	
  5155  001188                     __end_of_OpenADC:
  5156                           	opt stack 0
  5157                           tblptru	equ	0xFF8
  5158                           tblptrh	equ	0xFF7
  5159                           tblptrl	equ	0xFF6
  5160                           tablat	equ	0xFF5
  5161                           prodh	equ	0xFF4
  5162                           prodl	equ	0xFF3
  5163                           intcon	equ	0xFF2
  5164                           intcon2	equ	0xFF1
  5165                           postinc0	equ	0xFEE
  5166                           wreg	equ	0xFE8
  5167                           indf1	equ	0xFE7
  5168                           postdec1	equ	0xFE5
  5169                           fsr1h	equ	0xFE2
  5170                           fsr1l	equ	0xFE1
  5171                           indf2	equ	0xFDF
  5172                           postinc2	equ	0xFDE
  5173                           postdec2	equ	0xFDD
  5174                           fsr2h	equ	0xFDA
  5175                           fsr2l	equ	0xFD9
  5176                           status	equ	0xFD8
  5177                           
  5178 ;; *************** function _Open1USART *****************
  5179 ;; Defined at:
  5180 ;;		line 124 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\u1open.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  config          1    wreg     unsigned char 
  5183 ;;  spbrg           2   45[BANK0 ] unsigned int 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  config          1   50[BANK0 ] unsigned char 
  5186 ;; Return value:  Size  Location     Type
  5187 ;;		None               void
  5188 ;; Registers used:
  5189 ;;		wreg, status,2
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5195 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5196 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5197 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5198 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5199 ;;Total ram usage:        6 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:   11
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_main
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text30
  5210  001334                     __ptext30:
  5211                           	opt stack 0
  5212  001334                     _Open1USART:
  5213                           	opt stack 19
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;incstack = 0
  5217                           ;Open1USART@config stored from wreg
  5218  001334  CFE8 F092          	movff	wreg,Open1USART@config
  5219  001338  0E00               	movlw	0
  5220  00133A  6EAD               	movwf	4013,c	;volatile
  5221  00133C  0E00               	movlw	0
  5222  00133E  6EAC               	movwf	4012,c	;volatile
  5223  001340  0100               	movlb	0	; () banked
  5224  001342  0100               	movlb	0	; () banked
  5225  001344  B192               	btfsc	Open1USART@config& (0+255),0,b
  5226                           
  5227                           ; BSR set to: 0
  5228  001346  88AD               	bsf	4013,4,c	;volatile
  5229                           
  5230                           ; BSR set to: 0
  5231                           
  5232                           ; BSR set to: 0
  5233  001348  0100               	movlb	0	; () banked
  5234  00134A  0100               	movlb	0	; () banked
  5235  00134C  A392               	btfss	Open1USART@config& (0+255),1,b
  5236  00134E  D002               	goto	l2782
  5237                           
  5238                           ; BSR set to: 0
  5239  001350  8CAD               	bsf	4013,6,c	;volatile
  5240  001352  8CAC               	bsf	4012,6,c	;volatile
  5241  001354                     l2782:
  5242                           
  5243                           ; BSR set to: 0
  5244  001354  0100               	movlb	0	; () banked
  5245  001356  0100               	movlb	0	; () banked
  5246  001358  B592               	btfsc	Open1USART@config& (0+255),2,b
  5247                           
  5248                           ; BSR set to: 0
  5249  00135A  8EAD               	bsf	4013,7,c	;volatile
  5250                           
  5251                           ; BSR set to: 0
  5252                           
  5253                           ; BSR set to: 0
  5254  00135C  0100               	movlb	0	; () banked
  5255  00135E  0100               	movlb	0	; () banked
  5256  001360  A792               	btfss	Open1USART@config& (0+255),3,b
  5257  001362  D002               	goto	l582
  5258                           
  5259                           ; BSR set to: 0
  5260  001364  88AC               	bsf	4012,4,c	;volatile
  5261  001366  D001               	goto	l2790
  5262  001368                     l582:
  5263                           
  5264                           ; BSR set to: 0
  5265  001368  8AAC               	bsf	4012,5,c	;volatile
  5266  00136A                     l2790:
  5267                           
  5268                           ; BSR set to: 0
  5269  00136A  0100               	movlb	0	; () banked
  5270  00136C  0100               	movlb	0	; () banked
  5271  00136E  B992               	btfsc	Open1USART@config& (0+255),4,b
  5272                           
  5273                           ; BSR set to: 0
  5274  001370  84AD               	bsf	4013,2,c	;volatile
  5275                           
  5276                           ; BSR set to: 0
  5277                           
  5278                           ; BSR set to: 0
  5279  001372  0100               	movlb	0	; () banked
  5280  001374  0100               	movlb	0	; () banked
  5281  001376  BB92               	btfsc	Open1USART@config& (0+255),5,b
  5282                           
  5283                           ; BSR set to: 0
  5284  001378  86AC               	bsf	4012,3,c	;volatile
  5285                           
  5286                           ; BSR set to: 0
  5287                           
  5288                           ; BSR set to: 0
  5289  00137A  0100               	movlb	0	; () banked
  5290  00137C  0100               	movlb	0	; () banked
  5291  00137E  AD92               	btfss	Open1USART@config& (0+255),6,b
  5292  001380  D002               	goto	l586
  5293                           
  5294                           ; BSR set to: 0
  5295  001382  8A9D               	bsf	3997,5,c	;volatile
  5296  001384  D001               	goto	l2802
  5297  001386                     l586:
  5298                           
  5299                           ; BSR set to: 0
  5300  001386  9A9D               	bcf	3997,5,c	;volatile
  5301  001388                     l2802:
  5302                           
  5303                           ; BSR set to: 0
  5304  001388  0100               	movlb	0	; () banked
  5305  00138A  0100               	movlb	0	; () banked
  5306  00138C  AF92               	btfss	Open1USART@config& (0+255),7,b
  5307  00138E  D002               	goto	l588
  5308                           
  5309                           ; BSR set to: 0
  5310  001390  889D               	bsf	3997,4,c	;volatile
  5311  001392  D001               	goto	l589
  5312  001394                     l588:
  5313                           
  5314                           ; BSR set to: 0
  5315  001394  989D               	bcf	3997,4,c	;volatile
  5316  001396                     l589:
  5317                           
  5318                           ; BSR set to: 0
  5319  001396  C08D  FFB0         	movff	Open1USART@spbrg,4016	;volatile
  5320                           
  5321                           ; BSR set to: 0
  5322  00139A  0100               	movlb	0	; () banked
  5323  00139C  C08E  F08F         	movff	Open1USART@spbrg+1,??_Open1USART
  5324  0013A0  C08F  F090         	movff	??_Open1USART,??_Open1USART+1
  5325  0013A4  0100               	movlb	0	; () banked
  5326  0013A6  6B91               	clrf	(??_Open1USART+2)& (0+255),b
  5327  0013A8  0100               	movlb	0	; () banked
  5328  0013AA  5190               	movf	(??_Open1USART+1)& (0+255),w,b
  5329  0013AC  6E7F               	movwf	3967,c	;volatile
  5330                           
  5331                           ; BSR set to: 0
  5332  0013AE  8AAD               	bsf	4013,5,c	;volatile
  5333                           
  5334                           ; BSR set to: 0
  5335  0013B0  8EAC               	bsf	4012,7,c	;volatile
  5336                           
  5337                           ; BSR set to: 0
  5338  0013B2  0012               	return	
  5339  0013B4                     __end_of_Open1USART:
  5340                           	opt stack 0
  5341                           tblptru	equ	0xFF8
  5342                           tblptrh	equ	0xFF7
  5343                           tblptrl	equ	0xFF6
  5344                           tablat	equ	0xFF5
  5345                           prodh	equ	0xFF4
  5346                           prodl	equ	0xFF3
  5347                           intcon	equ	0xFF2
  5348                           intcon2	equ	0xFF1
  5349                           postinc0	equ	0xFEE
  5350                           wreg	equ	0xFE8
  5351                           indf1	equ	0xFE7
  5352                           postdec1	equ	0xFE5
  5353                           fsr1h	equ	0xFE2
  5354                           fsr1l	equ	0xFE1
  5355                           indf2	equ	0xFDF
  5356                           postinc2	equ	0xFDE
  5357                           postdec2	equ	0xFDD
  5358                           fsr2h	equ	0xFDA
  5359                           fsr2l	equ	0xFD9
  5360                           status	equ	0xFD8
  5361                           
  5362 ;; *************** function _InterruptHandlerLow *****************
  5363 ;; Defined at:
  5364 ;;		line 128 in file "../src/interrupts.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;		None
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;		None
  5369 ;; Return value:  Size  Location     Type
  5370 ;;		None               void
  5371 ;; Registers used:
  5372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5380 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5381 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5382 ;;Total ram usage:       17 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; Hardware stack levels required when called:   10
  5385 ;; This function calls:
  5386 ;;		_adc_int_handler
  5387 ;;		_timer1_int_handler
  5388 ;;		_uart_recv_int_handler
  5389 ;;		_uart_trans_int_handler
  5390 ;; This function is called by:
  5391 ;;		Interrupt level 1
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           	psect	intcodelo
  5396  000018                     __pintcodelo:
  5397                           	opt stack 0
  5398  000018                     _InterruptHandlerLow:
  5399                           	opt stack 16
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;incstack = 0
  5403  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  5404  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  5405  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  5406  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  5407  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  5408  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  5409  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  5410  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  5411  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  5412  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  5413  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  5414  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  5415  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  5416  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  5417  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  5418  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  5419  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  5420                           
  5421                           ;interrupts.c: 130: if(PIR1bits.ADIF){
  5422  00005C  AC9E               	btfss	3998,6,c	;volatile
  5423  00005E  D003               	goto	i1l3542
  5424                           
  5425                           ;interrupts.c: 132: PIR1bits.ADIF = 0;
  5426  000060  9C9E               	bcf	3998,6,c	;volatile
  5427                           
  5428                           ;interrupts.c: 133: adc_int_handler();
  5429  000062  EC4F  F00D         	call	_adc_int_handler	;wreg free
  5430  000066                     i1l3542:
  5431                           
  5432                           ;interrupts.c: 134: }
  5433                           ;interrupts.c: 137: if (PIR1bits.TMR1IF) {
  5434  000066  A09E               	btfss	3998,0,c	;volatile
  5435  000068  D003               	goto	i1l3548
  5436                           
  5437                           ;interrupts.c: 138: PIR1bits.TMR1IF = 0;
  5438  00006A  909E               	bcf	3998,0,c	;volatile
  5439                           
  5440                           ;interrupts.c: 139: timer1_int_handler();
  5441  00006C  EC53  F00E         	call	_timer1_int_handler	;wreg free
  5442  000070                     i1l3548:
  5443                           
  5444                           ;interrupts.c: 141: }
  5445                           ;interrupts.c: 143: if (PIR1bits.TXIF) {
  5446  000070  B89E               	btfsc	3998,4,c	;volatile
  5447                           
  5448                           ;interrupts.c: 145: uart_trans_int_handler();
  5449  000072  EC6B  F00B         	call	_uart_trans_int_handler	;wreg free
  5450                           
  5451                           ;interrupts.c: 146: }
  5452                           ;interrupts.c: 148: if (PIR1bits.RCIF) {
  5453  000076  AA9E               	btfss	3998,5,c	;volatile
  5454  000078  D003               	goto	i1l59
  5455                           
  5456                           ;interrupts.c: 149: PIR1bits.RCIF = 0;
  5457  00007A  9A9E               	bcf	3998,5,c	;volatile
  5458                           
  5459                           ;interrupts.c: 151: uart_recv_int_handler();
  5460  00007C  EC5A  F007         	call	_uart_recv_int_handler	;wreg free
  5461  000080                     i1l59:
  5462  000080  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5463  000084  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5464  000088  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5465  00008C  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5466  000090  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5467  000094  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5468  000098  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5469  00009C  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5470  0000A0  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5471  0000A4  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5472  0000A8  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5473  0000AC  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5474  0000B0  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5475  0000B4  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5476  0000B8  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5477  0000BC  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5478  0000C0  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5479  0000C4  0010               	retfie	
  5480  0000C6                     __end_of_InterruptHandlerLow:
  5481                           	opt stack 0
  5482                           pclatu	equ	0xFFB
  5483                           pclath	equ	0xFFA
  5484                           tblptru	equ	0xFF8
  5485                           tblptrh	equ	0xFF7
  5486                           tblptrl	equ	0xFF6
  5487                           tablat	equ	0xFF5
  5488                           prodh	equ	0xFF4
  5489                           prodl	equ	0xFF3
  5490                           intcon	equ	0xFF2
  5491                           intcon2	equ	0xFF1
  5492                           postinc0	equ	0xFEE
  5493                           fsr0h	equ	0xFEA
  5494                           fsr0l	equ	0xFE9
  5495                           wreg	equ	0xFE8
  5496                           indf1	equ	0xFE7
  5497                           postdec1	equ	0xFE5
  5498                           fsr1h	equ	0xFE2
  5499                           fsr1l	equ	0xFE1
  5500                           bsr	equ	0xFE0
  5501                           indf2	equ	0xFDF
  5502                           postinc2	equ	0xFDE
  5503                           postdec2	equ	0xFDD
  5504                           fsr2h	equ	0xFDA
  5505                           fsr2l	equ	0xFD9
  5506                           status	equ	0xFD8
  5507                           
  5508 ;; *************** function _uart_trans_int_handler *****************
  5509 ;; Defined at:
  5510 ;;		line 73 in file "../src/my_uart.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;		None
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;		None
  5515 ;; Return value:  Size  Location     Type
  5516 ;;		None               void
  5517 ;; Registers used:
  5518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5526 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5527 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5528 ;;Total ram usage:        1 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:    6
  5531 ;; This function calls:
  5532 ;;		Nothing
  5533 ;; This function is called by:
  5534 ;;		_InterruptHandlerLow
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           	psect	text32
  5539  0016D6                     __ptext32:
  5540                           	opt stack 0
  5541  0016D6                     _uart_trans_int_handler:
  5542                           	opt stack 19
  5543                           
  5544                           ;my_uart.c: 75: if(TXSTAbits.TRMT){
  5545                           
  5546                           ;incstack = 0
  5547  0016D6  A2AD               	btfss	4013,1,c	;volatile
  5548  0016D8  0012               	return	
  5549                           
  5550                           ;my_uart.c: 76: if(uc_ptr->txBufind < uc_ptr->txBuflen){
  5551  0016DA  EE20 F00C          	lfsr	2,12
  5552  0016DE  503D               	movf	_uc_ptr,w,c
  5553  0016E0  26D9               	addwf	fsr2l,f,c
  5554  0016E2  503E               	movf	_uc_ptr+1,w,c
  5555  0016E4  22DA               	addwfc	fsr2h,f,c
  5556  0016E6  50DF               	movf	indf2,w,c
  5557  0016E8  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5558  0016EA  EE20 F00B          	lfsr	2,11
  5559  0016EE  503D               	movf	_uc_ptr,w,c
  5560  0016F0  26D9               	addwf	fsr2l,f,c
  5561  0016F2  503E               	movf	_uc_ptr+1,w,c
  5562  0016F4  22DA               	addwfc	fsr2h,f,c
  5563  0016F6  50DF               	movf	indf2,w,c
  5564  0016F8  5C01               	subwf	??_uart_trans_int_handler,w,c
  5565  0016FA  B0D8               	btfsc	status,0,c
  5566  0016FC  D01E               	goto	i1l441
  5567                           
  5568                           ;my_uart.c: 77: TXREG = uc_ptr->txBuff[uc_ptr->txBufind];
  5569  0016FE  EE20 F00C          	lfsr	2,12
  5570  001702  503D               	movf	_uc_ptr,w,c
  5571  001704  26D9               	addwf	fsr2l,f,c
  5572  001706  503E               	movf	_uc_ptr+1,w,c
  5573  001708  22DA               	addwfc	fsr2h,f,c
  5574  00170A  50DF               	movf	indf2,w,c
  5575  00170C  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5576  00170E  5001               	movf	??_uart_trans_int_handler,w,c
  5577  001710  0D01               	mullw	1
  5578  001712  0E06               	movlw	6
  5579  001714  26F3               	addwf	prodl,f,c
  5580  001716  0E00               	movlw	0
  5581  001718  22F4               	addwfc	prodh,f,c
  5582  00171A  50F3               	movf	prodl,w,c
  5583  00171C  243D               	addwf	_uc_ptr,w,c
  5584  00171E  6ED9               	movwf	fsr2l,c
  5585  001720  50F4               	movf	prodh,w,c
  5586  001722  203E               	addwfc	_uc_ptr+1,w,c
  5587  001724  6EDA               	movwf	fsr2h,c
  5588  001726  50DF               	movf	indf2,w,c
  5589  001728  6EAE               	movwf	4014,c	;volatile
  5590                           
  5591                           ;my_uart.c: 79: uc_ptr->txBufind++;
  5592  00172A  EE20 F00C          	lfsr	2,12
  5593  00172E  503D               	movf	_uc_ptr,w,c
  5594  001730  26D9               	addwf	fsr2l,f,c
  5595  001732  503E               	movf	_uc_ptr+1,w,c
  5596  001734  22DA               	addwfc	fsr2h,f,c
  5597  001736  2ADF               	incf	indf2,f,c
  5598                           
  5599                           ;my_uart.c: 80: } else
  5600  001738  0012               	return	
  5601  00173A                     i1l441:
  5602                           
  5603                           ;my_uart.c: 81: PIE1bits.TX1IE = 0;
  5604  00173A  989D               	bcf	3997,4,c	;volatile
  5605  00173C  0012               	return	
  5606  00173E                     __end_of_uart_trans_int_handler:
  5607                           	opt stack 0
  5608                           pclatu	equ	0xFFB
  5609                           pclath	equ	0xFFA
  5610                           tblptru	equ	0xFF8
  5611                           tblptrh	equ	0xFF7
  5612                           tblptrl	equ	0xFF6
  5613                           tablat	equ	0xFF5
  5614                           prodh	equ	0xFF4
  5615                           prodl	equ	0xFF3
  5616                           intcon	equ	0xFF2
  5617                           intcon2	equ	0xFF1
  5618                           postinc0	equ	0xFEE
  5619                           fsr0h	equ	0xFEA
  5620                           fsr0l	equ	0xFE9
  5621                           wreg	equ	0xFE8
  5622                           indf1	equ	0xFE7
  5623                           postdec1	equ	0xFE5
  5624                           fsr1h	equ	0xFE2
  5625                           fsr1l	equ	0xFE1
  5626                           bsr	equ	0xFE0
  5627                           indf2	equ	0xFDF
  5628                           postinc2	equ	0xFDE
  5629                           postdec2	equ	0xFDD
  5630                           fsr2h	equ	0xFDA
  5631                           fsr2l	equ	0xFD9
  5632                           status	equ	0xFD8
  5633                           
  5634 ;; *************** function _uart_recv_int_handler *****************
  5635 ;; Defined at:
  5636 ;;		line 11 in file "../src/my_uart.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;		None
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;		None
  5641 ;; Return value:  Size  Location     Type
  5642 ;;		None               void
  5643 ;; Registers used:
  5644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5653 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5654 ;;Total ram usage:        1 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; Hardware stack levels required when called:    9
  5657 ;; This function calls:
  5658 ;;		_Read1USART
  5659 ;;		_ToMainLow_sendmsg
  5660 ;; This function is called by:
  5661 ;;		_InterruptHandlerLow
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           	psect	text33
  5666  000EB4                     __ptext33:
  5667                           	opt stack 0
  5668  000EB4                     _uart_recv_int_handler:
  5669                           	opt stack 16
  5670                           
  5671                           ;my_uart.c: 17: if ((PIR1bits.RC1IF)) {
  5672                           
  5673                           ;incstack = 0
  5674  000EB4  AA9E               	btfss	3998,5,c	;volatile
  5675  000EB6  D04E               	goto	i1l3530
  5676                           
  5677                           ;my_uart.c: 18: uc_ptr->buffer[uc_ptr->buflen] = Read1USART();
  5678  000EB8  EE20 F005          	lfsr	2,5
  5679  000EBC  503D               	movf	_uc_ptr,w,c
  5680  000EBE  26D9               	addwf	fsr2l,f,c
  5681  000EC0  503E               	movf	_uc_ptr+1,w,c
  5682  000EC2  22DA               	addwfc	fsr2h,f,c
  5683  000EC4  50DF               	movf	indf2,w,c
  5684  000EC6  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5685  000EC8  501B               	movf	??_uart_recv_int_handler,w,c
  5686  000ECA  0D01               	mullw	1
  5687  000ECC  50F3               	movf	prodl,w,c
  5688  000ECE  243D               	addwf	_uc_ptr,w,c
  5689  000ED0  6ED9               	movwf	fsr2l,c
  5690  000ED2  50F4               	movf	prodh,w,c
  5691  000ED4  203E               	addwfc	_uc_ptr+1,w,c
  5692  000ED6  6EDA               	movwf	fsr2h,c
  5693  000ED8  ECF7  F00D         	call	_Read1USART	;wreg free
  5694  000EDC  6EDF               	movwf	indf2,c
  5695                           
  5696                           ;my_uart.c: 25: uc_ptr->buflen++;
  5697  000EDE  EE20 F005          	lfsr	2,5
  5698  000EE2  503D               	movf	_uc_ptr,w,c
  5699  000EE4  26D9               	addwf	fsr2l,f,c
  5700  000EE6  503E               	movf	_uc_ptr+1,w,c
  5701  000EE8  22DA               	addwfc	fsr2h,f,c
  5702  000EEA  2ADF               	incf	indf2,f,c
  5703                           
  5704                           ;my_uart.c: 26: if(UART_timeout > 200){
  5705  000EEC  0EC9               	movlw	201
  5706  000EEE  5C39               	subwf	_UART_timeout,w,c
  5707  000EF0  0E00               	movlw	0
  5708  000EF2  583A               	subwfb	_UART_timeout+1,w,c
  5709  000EF4  A0D8               	btfss	status,0,c
  5710  000EF6  D00C               	goto	i1l3524
  5711                           
  5712                           ;my_uart.c: 27: uc_ptr->buflen = 1;
  5713  000EF8  EE20 F005          	lfsr	2,5
  5714  000EFC  503D               	movf	_uc_ptr,w,c
  5715  000EFE  26D9               	addwf	fsr2l,f,c
  5716  000F00  503E               	movf	_uc_ptr+1,w,c
  5717  000F02  22DA               	addwfc	fsr2h,f,c
  5718  000F04  0E01               	movlw	1
  5719  000F06  6EDF               	movwf	indf2,c
  5720                           
  5721                           ;my_uart.c: 28: UART_timeout = 0;
  5722  000F08  0E00               	movlw	0
  5723  000F0A  6E3A               	movwf	_UART_timeout+1,c
  5724  000F0C  0E00               	movlw	0
  5725  000F0E  6E39               	movwf	_UART_timeout,c
  5726  000F10                     i1l3524:
  5727                           
  5728                           ;my_uart.c: 29: }
  5729                           ;my_uart.c: 32: if (uc_ptr->buflen == 5) {
  5730  000F10  EE20 F005          	lfsr	2,5
  5731  000F14  503D               	movf	_uc_ptr,w,c
  5732  000F16  26D9               	addwf	fsr2l,f,c
  5733  000F18  503E               	movf	_uc_ptr+1,w,c
  5734  000F1A  22DA               	addwfc	fsr2h,f,c
  5735  000F1C  0E05               	movlw	5
  5736  000F1E  62DF               	cpfseq	indf2,c
  5737  000F20  D019               	goto	i1l3530
  5738                           
  5739                           ;my_uart.c: 33: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5740  000F22  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5741  000F24  0E1F               	movlw	31
  5742  000F26  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5743  000F28  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5744  000F2A  C03E  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5745  000F2E  C03D  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5746  000F32  EE20 F005          	lfsr	2,5
  5747  000F36  503D               	movf	_uc_ptr,w,c
  5748  000F38  26D9               	addwf	fsr2l,f,c
  5749  000F3A  503E               	movf	_uc_ptr+1,w,c
  5750  000F3C  22DA               	addwfc	fsr2h,f,c
  5751  000F3E  50DF               	movf	indf2,w,c
  5752  000F40  ECB5  F00D         	call	_ToMainLow_sendmsg
  5753                           
  5754                           ;my_uart.c: 34: uc_ptr->buflen = 0;
  5755  000F44  EE20 F005          	lfsr	2,5
  5756  000F48  503D               	movf	_uc_ptr,w,c
  5757  000F4A  26D9               	addwf	fsr2l,f,c
  5758  000F4C  503E               	movf	_uc_ptr+1,w,c
  5759  000F4E  22DA               	addwfc	fsr2h,f,c
  5760  000F50  0E00               	movlw	0
  5761  000F52  6EDF               	movwf	indf2,c
  5762  000F54                     i1l3530:
  5763                           
  5764                           ;my_uart.c: 35: }
  5765                           ;my_uart.c: 36: }
  5766                           ;my_uart.c: 41: if (USART1_Status.OVERRUN_ERROR == 1) {
  5767  000F54  A63C               	btfss	_USART1_Status,3,c
  5768  000F56  0012               	return	
  5769                           
  5770                           ;my_uart.c: 48: RCSTAbits.CREN = 0;
  5771  000F58  98AC               	bcf	4012,4,c	;volatile
  5772                           
  5773                           ;my_uart.c: 49: RCSTAbits.CREN = 1;
  5774  000F5A  88AC               	bsf	4012,4,c	;volatile
  5775                           
  5776                           ;my_uart.c: 50: ToMainLow_sendmsg(0, 30, (void *) 0);
  5777  000F5C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5778  000F5E  0E1E               	movlw	30
  5779  000F60  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5780  000F62  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5781  000F64  0E00               	movlw	0
  5782  000F66  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5783  000F68  0E00               	movlw	0
  5784  000F6A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5785  000F6C  0E00               	movlw	0
  5786  000F6E  ECB5  F00D         	call	_ToMainLow_sendmsg
  5787  000F72  0012               	return	
  5788  000F74                     __end_of_uart_recv_int_handler:
  5789                           	opt stack 0
  5790                           pclatu	equ	0xFFB
  5791                           pclath	equ	0xFFA
  5792                           tblptru	equ	0xFF8
  5793                           tblptrh	equ	0xFF7
  5794                           tblptrl	equ	0xFF6
  5795                           tablat	equ	0xFF5
  5796                           prodh	equ	0xFF4
  5797                           prodl	equ	0xFF3
  5798                           intcon	equ	0xFF2
  5799                           intcon2	equ	0xFF1
  5800                           postinc0	equ	0xFEE
  5801                           fsr0h	equ	0xFEA
  5802                           fsr0l	equ	0xFE9
  5803                           wreg	equ	0xFE8
  5804                           indf1	equ	0xFE7
  5805                           postdec1	equ	0xFE5
  5806                           fsr1h	equ	0xFE2
  5807                           fsr1l	equ	0xFE1
  5808                           bsr	equ	0xFE0
  5809                           indf2	equ	0xFDF
  5810                           postinc2	equ	0xFDE
  5811                           postdec2	equ	0xFDD
  5812                           fsr2h	equ	0xFDA
  5813                           fsr2l	equ	0xFD9
  5814                           status	equ	0xFD8
  5815                           
  5816 ;; *************** function _ToMainLow_sendmsg *****************
  5817 ;; Defined at:
  5818 ;;		line 103 in file "../src/messages.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;  length          1    wreg     unsigned char 
  5821 ;;  msgtype         1   22[COMRAM] unsigned char 
  5822 ;;  data            2   23[COMRAM] PTR void 
  5823 ;;		 -> NULL(0), main@uc(13), 
  5824 ;; Auto vars:     Size  Location     Type
  5825 ;;  length          1   25[COMRAM] unsigned char 
  5826 ;; Return value:  Size  Location     Type
  5827 ;;                  1    wreg      char 
  5828 ;; Registers used:
  5829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5835 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5838 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5839 ;;Total ram usage:        4 bytes
  5840 ;; Hardware stack levels used:    1
  5841 ;; Hardware stack levels required when called:    8
  5842 ;; This function calls:
  5843 ;;		i1_send_msg
  5844 ;; This function is called by:
  5845 ;;		_uart_recv_int_handler
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           	psect	text34
  5850  001B6A                     __ptext34:
  5851                           	opt stack 0
  5852  001B6A                     _ToMainLow_sendmsg:
  5853                           	opt stack 16
  5854                           
  5855                           ;incstack = 0
  5856                           ;ToMainLow_sendmsg@length stored from wreg
  5857  001B6A  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5858                           
  5859                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5860                           ;	Return value of _ToMainLow_sendmsg is never used
  5861  001B6E  0101               	movlb	1	; () banked
  5862  001B70  0E01               	movlw	high _ToMainLow_MQ
  5863  001B72  6E0C               	movwf	i1send_msg@qptr+1,c
  5864  001B74  0101               	movlb	1	; () banked
  5865  001B76  0E43               	movlw	low _ToMainLow_MQ
  5866  001B78  6E0B               	movwf	i1send_msg@qptr,c
  5867  001B7A  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5868  001B7E  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5869  001B82  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5870  001B86  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5871  001B8A  ECBA  F007         	call	i1_send_msg	;wreg free
  5872  001B8E  0012               	return	
  5873  001B90                     __end_of_ToMainLow_sendmsg:
  5874                           	opt stack 0
  5875                           pclatu	equ	0xFFB
  5876                           pclath	equ	0xFFA
  5877                           tblptru	equ	0xFF8
  5878                           tblptrh	equ	0xFF7
  5879                           tblptrl	equ	0xFF6
  5880                           tablat	equ	0xFF5
  5881                           prodh	equ	0xFF4
  5882                           prodl	equ	0xFF3
  5883                           intcon	equ	0xFF2
  5884                           intcon2	equ	0xFF1
  5885                           postinc0	equ	0xFEE
  5886                           fsr0h	equ	0xFEA
  5887                           fsr0l	equ	0xFE9
  5888                           wreg	equ	0xFE8
  5889                           indf1	equ	0xFE7
  5890                           postdec1	equ	0xFE5
  5891                           fsr1h	equ	0xFE2
  5892                           fsr1l	equ	0xFE1
  5893                           bsr	equ	0xFE0
  5894                           indf2	equ	0xFDF
  5895                           postinc2	equ	0xFDE
  5896                           postdec2	equ	0xFDD
  5897                           fsr2h	equ	0xFDA
  5898                           fsr2l	equ	0xFD9
  5899                           status	equ	0xFD8
  5900                           
  5901 ;; *************** function i1_send_msg *****************
  5902 ;; Defined at:
  5903 ;;		line 24 in file "../src/messages.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5906 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5907 ;;  length          1   12[COMRAM] unsigned char 
  5908 ;;  msgtype         1   13[COMRAM] unsigned char 
  5909 ;;  data            2   14[COMRAM] PTR void 
  5910 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  5911 ;;		 -> main@uc(13), 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5914 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  5915 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5916 ;;  send_msg        2   17[COMRAM] unsigned int 
  5917 ;;  send_msg        1   19[COMRAM] unsigned char 
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  1    wreg      char 
  5920 ;; Registers used:
  5921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5927 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5928 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5929 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5930 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5931 ;;Total ram usage:       12 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:    7
  5934 ;; This function calls:
  5935 ;;		i1___awmod
  5936 ;;		i1_memcpy
  5937 ;; This function is called by:
  5938 ;;		_ToMainLow_sendmsg
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text35
  5943  000F74                     __ptext35:
  5944                           	opt stack 0
  5945  000F74                     i1_send_msg:
  5946                           	opt stack 16
  5947                           
  5948                           ;messages.c: 25: unsigned char slot;
  5949                           ;messages.c: 27: msg *qmsg;
  5950                           ;messages.c: 28: size_t tlength = length;
  5951                           
  5952                           ;incstack = 0
  5953  000F74  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5954  000F78  6A13               	clrf	i1send_msg@tlength+1,c
  5955                           
  5956                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5957  000F7A  EE20 F041          	lfsr	2,65
  5958  000F7E  500B               	movf	i1send_msg@qptr,w,c
  5959  000F80  26D9               	addwf	fsr2l,f,c
  5960  000F82  500C               	movf	i1send_msg@qptr+1,w,c
  5961  000F84  22DA               	addwfc	fsr2h,f,c
  5962  000F86  50DF               	movf	indf2,w,c
  5963  000F88  6E14               	movwf	i1send_msg@slot,c
  5964                           
  5965                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5966  000F8A  5014               	movf	i1send_msg@slot,w,c
  5967  000F8C  0D0D               	mullw	13
  5968  000F8E  50F3               	movf	prodl,w,c
  5969  000F90  240B               	addwf	i1send_msg@qptr,w,c
  5970  000F92  6E15               	movwf	i1send_msg@qmsg,c
  5971  000F94  50F4               	movf	prodh,w,c
  5972  000F96  200C               	addwfc	i1send_msg@qptr+1,w,c
  5973  000F98  6E16               	movwf	i1send_msg@qmsg+1,c
  5974                           
  5975                           ;messages.c: 41: if (qmsg->full != 0) {
  5976  000F9A  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5977  000F9E  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5978  000FA2  50DF               	movf	indf2,w,c
  5979  000FA4  B4D8               	btfsc	status,2,c
  5980  000FA6  D002               	goto	i1l3496
  5981                           
  5982                           ;messages.c: 42: return (-1);
  5983  000FA8  0EFF               	movlw	255
  5984  000FAA  0012               	return	
  5985  000FAC                     i1l3496:
  5986                           
  5987                           ;messages.c: 43: }
  5988                           ;messages.c: 46: qmsg->length = length;
  5989  000FAC  EE20 F001          	lfsr	2,1
  5990  000FB0  5015               	movf	i1send_msg@qmsg,w,c
  5991  000FB2  26D9               	addwf	fsr2l,f,c
  5992  000FB4  5016               	movf	i1send_msg@qmsg+1,w,c
  5993  000FB6  22DA               	addwfc	fsr2h,f,c
  5994  000FB8  C00D  FFDF         	movff	i1send_msg@length,indf2
  5995                           
  5996                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5997  000FBC  EE20 F002          	lfsr	2,2
  5998  000FC0  5015               	movf	i1send_msg@qmsg,w,c
  5999  000FC2  26D9               	addwf	fsr2l,f,c
  6000  000FC4  5016               	movf	i1send_msg@qmsg+1,w,c
  6001  000FC6  22DA               	addwfc	fsr2h,f,c
  6002  000FC8  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6003                           
  6004                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6005  000FCC  0E03               	movlw	3
  6006  000FCE  2415               	addwf	i1send_msg@qmsg,w,c
  6007  000FD0  6E01               	movwf	i1memcpy@d1,c
  6008  000FD2  0E00               	movlw	0
  6009  000FD4  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6010  000FD6  6E02               	movwf	i1memcpy@d1+1,c
  6011  000FD8  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6012  000FDC  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6013  000FE0  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6014  000FE4  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6015  000FE8  ECF9  F00C         	call	i1_memcpy	;wreg free
  6016                           
  6017                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  6018  000FEC  EE20 F041          	lfsr	2,65
  6019  000FF0  500B               	movf	i1send_msg@qptr,w,c
  6020  000FF2  26D9               	addwf	fsr2l,f,c
  6021  000FF4  500C               	movf	i1send_msg@qptr+1,w,c
  6022  000FF6  22DA               	addwfc	fsr2h,f,c
  6023  000FF8  EE10 F041          	lfsr	1,65
  6024  000FFC  500B               	movf	i1send_msg@qptr,w,c
  6025  000FFE  26E1               	addwf	fsr1l,f,c
  6026  001000  500C               	movf	i1send_msg@qptr+1,w,c
  6027  001002  22E2               	addwfc	fsr1h,f,c
  6028  001004  50E7               	movf	indf1,w,c
  6029  001006  6E11               	movwf	??i1_send_msg& (0+255),c
  6030  001008  0E01               	movlw	1
  6031  00100A  2411               	addwf	??i1_send_msg,w,c
  6032  00100C  6E01               	movwf	i1___awmod@dividend,c
  6033  00100E  6A02               	clrf	i1___awmod@dividend+1,c
  6034  001010  0E00               	movlw	0
  6035  001012  2202               	addwfc	i1___awmod@dividend+1,f,c
  6036  001014  0E00               	movlw	0
  6037  001016  6E04               	movwf	i1___awmod@divisor+1,c
  6038  001018  0E05               	movlw	5
  6039  00101A  6E03               	movwf	i1___awmod@divisor,c
  6040  00101C  ECC4  F008         	call	i1___awmod	;wreg free
  6041  001020  5001               	movf	?i1___awmod,w,c
  6042  001022  6EDF               	movwf	indf2,c
  6043                           
  6044                           ;messages.c: 59: qmsg->full = 1;
  6045  001024  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6046  001028  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6047  00102C  0E01               	movlw	1
  6048  00102E  6EDF               	movwf	indf2,c
  6049                           
  6050                           ;messages.c: 60: return (1);
  6051  001030  0E01               	movlw	1
  6052  001032  0012               	return	
  6053  001034                     __end_ofi1_send_msg:
  6054                           	opt stack 0
  6055                           pclatu	equ	0xFFB
  6056                           pclath	equ	0xFFA
  6057                           tblptru	equ	0xFF8
  6058                           tblptrh	equ	0xFF7
  6059                           tblptrl	equ	0xFF6
  6060                           tablat	equ	0xFF5
  6061                           prodh	equ	0xFF4
  6062                           prodl	equ	0xFF3
  6063                           intcon	equ	0xFF2
  6064                           intcon2	equ	0xFF1
  6065                           postinc0	equ	0xFEE
  6066                           fsr0h	equ	0xFEA
  6067                           fsr0l	equ	0xFE9
  6068                           wreg	equ	0xFE8
  6069                           indf1	equ	0xFE7
  6070                           postdec1	equ	0xFE5
  6071                           fsr1h	equ	0xFE2
  6072                           fsr1l	equ	0xFE1
  6073                           bsr	equ	0xFE0
  6074                           indf2	equ	0xFDF
  6075                           postinc2	equ	0xFDE
  6076                           postdec2	equ	0xFDD
  6077                           fsr2h	equ	0xFDA
  6078                           fsr2l	equ	0xFD9
  6079                           status	equ	0xFD8
  6080                           
  6081 ;; *************** function i1_memcpy *****************
  6082 ;; Defined at:
  6083 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  d1              2    0[COMRAM] PTR void 
  6086 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6087 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6088 ;;		 -> main@msgbuffer(11), 
  6089 ;;  s1              2    2[COMRAM] PTR const void 
  6090 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6091 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6092 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6093 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6094 ;;		 -> main@uc(13), 
  6095 ;;  n               2    4[COMRAM] unsigned int 
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6098 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6099 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6100 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6101 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6102 ;;		 -> main@uc(13), 
  6103 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6104 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6105 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6106 ;;		 -> main@msgbuffer(11), 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  2    0[COMRAM] PTR void 
  6109 ;; Registers used:
  6110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6116 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6117 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6119 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6120 ;;Total ram usage:       10 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    6
  6123 ;; This function calls:
  6124 ;;		Nothing
  6125 ;; This function is called by:
  6126 ;;		i1_send_msg
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text36
  6131  0019F2                     __ptext36:
  6132                           	opt stack 0
  6133  0019F2                     i1_memcpy:
  6134                           	opt stack 16
  6135                           
  6136                           ;incstack = 0
  6137  0019F2  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6138  0019F6  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6139  0019FA  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6140  0019FE  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6141  001A02  D00E               	goto	i1l3400
  6142  001A04                     i1l3394:
  6143  001A04  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6144  001A08  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6145  001A0C  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6146  001A10  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6147  001A14  CFDF FFE7          	movff	indf2,indf1
  6148  001A18  4A09               	infsnz	i1memcpy@s,f,c
  6149  001A1A  2A0A               	incf	i1memcpy@s+1,f,c
  6150  001A1C  4A07               	infsnz	i1memcpy@d,f,c
  6151  001A1E  2A08               	incf	i1memcpy@d+1,f,c
  6152  001A20                     i1l3400:
  6153  001A20  0605               	decf	i1memcpy@n,f,c
  6154  001A22  A0D8               	btfss	status,0,c
  6155  001A24  0606               	decf	i1memcpy@n+1,f,c
  6156  001A26  2805               	incf	i1memcpy@n& (0+255),w,c
  6157  001A28  B4D8               	btfsc	status,2,c
  6158  001A2A  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6159  001A2C  B4D8               	btfsc	status,2,c
  6160                           
  6161                           ;	Return value of i1_memcpy is never used
  6162  001A2E  0012               	return	
  6163  001A30  D7E9               	goto	i1l3394
  6164  001A32                     __end_ofi1_memcpy:
  6165                           	opt stack 0
  6166                           pclatu	equ	0xFFB
  6167                           pclath	equ	0xFFA
  6168                           tblptru	equ	0xFF8
  6169                           tblptrh	equ	0xFF7
  6170                           tblptrl	equ	0xFF6
  6171                           tablat	equ	0xFF5
  6172                           prodh	equ	0xFF4
  6173                           prodl	equ	0xFF3
  6174                           intcon	equ	0xFF2
  6175                           intcon2	equ	0xFF1
  6176                           postinc0	equ	0xFEE
  6177                           fsr0h	equ	0xFEA
  6178                           fsr0l	equ	0xFE9
  6179                           wreg	equ	0xFE8
  6180                           indf1	equ	0xFE7
  6181                           postdec1	equ	0xFE5
  6182                           fsr1h	equ	0xFE2
  6183                           fsr1l	equ	0xFE1
  6184                           bsr	equ	0xFE0
  6185                           indf2	equ	0xFDF
  6186                           postinc2	equ	0xFDE
  6187                           postdec2	equ	0xFDD
  6188                           fsr2h	equ	0xFDA
  6189                           fsr2l	equ	0xFD9
  6190                           status	equ	0xFD8
  6191                           
  6192 ;; *************** function i1___awmod *****************
  6193 ;; Defined at:
  6194 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;  dividend        2    0[COMRAM] int 
  6197 ;;  divisor         2    2[COMRAM] int 
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;  __awmod         1    6[COMRAM] unsigned char 
  6200 ;;  __awmod         1    5[COMRAM] unsigned char 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  2    0[COMRAM] int 
  6203 ;; Registers used:
  6204 ;;		wreg, status,2, status,0, prodl
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6210 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6211 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6212 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6213 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6214 ;;Total ram usage:        7 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    6
  6217 ;; This function calls:
  6218 ;;		Nothing
  6219 ;; This function is called by:
  6220 ;;		i1_send_msg
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           	psect	text37
  6225  001188                     __ptext37:
  6226                           	opt stack 0
  6227  001188                     i1___awmod:
  6228                           	opt stack 16
  6229                           
  6230                           ;incstack = 0
  6231  001188  6E05               	movwf	??i1___awmod& (0+255),c
  6232  00118A  0E00               	movlw	0
  6233  00118C  6E07               	movwf	i1___awmod@sign,c
  6234  00118E  5005               	movf	??i1___awmod& (0+255),w,c
  6235  001190  5002               	movf	i1___awmod@dividend+1,w,c
  6236  001192  0A80               	xorlw	128
  6237  001194  6EF3               	movwf	prodl,c
  6238  001196  0E80               	movlw	128
  6239  001198  5CF3               	subwf	prodl,w,c
  6240  00119A  0E00               	movlw	0
  6241  00119C  B4D8               	btfsc	status,2,c
  6242  00119E  5C01               	subwf	i1___awmod@dividend,w,c
  6243  0011A0  B0D8               	btfsc	status,0,c
  6244  0011A2  D008               	goto	i1l3420
  6245  0011A4  6C01               	negf	i1___awmod@dividend,c
  6246  0011A6  1E02               	comf	i1___awmod@dividend+1,f,c
  6247  0011A8  B0D8               	btfsc	status,0,c
  6248  0011AA  2A02               	incf	i1___awmod@dividend+1,f,c
  6249  0011AC  6E05               	movwf	??i1___awmod& (0+255),c
  6250  0011AE  0E01               	movlw	1
  6251  0011B0  6E07               	movwf	i1___awmod@sign,c
  6252  0011B2  5005               	movf	??i1___awmod& (0+255),w,c
  6253  0011B4                     i1l3420:
  6254  0011B4  5004               	movf	i1___awmod@divisor+1,w,c
  6255  0011B6  0A80               	xorlw	128
  6256  0011B8  6EF3               	movwf	prodl,c
  6257  0011BA  0E80               	movlw	128
  6258  0011BC  5CF3               	subwf	prodl,w,c
  6259  0011BE  0E00               	movlw	0
  6260  0011C0  B4D8               	btfsc	status,2,c
  6261  0011C2  5C03               	subwf	i1___awmod@divisor,w,c
  6262  0011C4  B0D8               	btfsc	status,0,c
  6263  0011C6  D004               	goto	i1l3424
  6264  0011C8  6C03               	negf	i1___awmod@divisor,c
  6265  0011CA  1E04               	comf	i1___awmod@divisor+1,f,c
  6266  0011CC  B0D8               	btfsc	status,0,c
  6267  0011CE  2A04               	incf	i1___awmod@divisor+1,f,c
  6268  0011D0                     i1l3424:
  6269  0011D0  5004               	movf	i1___awmod@divisor+1,w,c
  6270  0011D2  1003               	iorwf	i1___awmod@divisor,w,c
  6271  0011D4  B4D8               	btfsc	status,2,c
  6272  0011D6  D01A               	goto	i1l3440
  6273  0011D8  6E05               	movwf	??i1___awmod& (0+255),c
  6274  0011DA  0E01               	movlw	1
  6275  0011DC  6E06               	movwf	i1___awmod@counter,c
  6276  0011DE  5005               	movf	??i1___awmod& (0+255),w,c
  6277  0011E0  D004               	goto	i1l3430
  6278  0011E2                     i1l3428:
  6279  0011E2  90D8               	bcf	status,0,c
  6280  0011E4  3603               	rlcf	i1___awmod@divisor,f,c
  6281  0011E6  3604               	rlcf	i1___awmod@divisor+1,f,c
  6282  0011E8  2A06               	incf	i1___awmod@counter,f,c
  6283  0011EA                     i1l3430:
  6284  0011EA  AE04               	btfss	i1___awmod@divisor+1,7,c
  6285  0011EC  D7FA               	goto	i1l3428
  6286  0011EE                     i1l3432:
  6287  0011EE  5003               	movf	i1___awmod@divisor,w,c
  6288  0011F0  5C01               	subwf	i1___awmod@dividend,w,c
  6289  0011F2  5004               	movf	i1___awmod@divisor+1,w,c
  6290  0011F4  5802               	subwfb	i1___awmod@dividend+1,w,c
  6291  0011F6  A0D8               	btfss	status,0,c
  6292  0011F8  D004               	goto	i1l3436
  6293  0011FA  5003               	movf	i1___awmod@divisor,w,c
  6294  0011FC  5E01               	subwf	i1___awmod@dividend,f,c
  6295  0011FE  5004               	movf	i1___awmod@divisor+1,w,c
  6296  001200  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6297  001202                     i1l3436:
  6298  001202  90D8               	bcf	status,0,c
  6299  001204  3204               	rrcf	i1___awmod@divisor+1,f,c
  6300  001206  3203               	rrcf	i1___awmod@divisor,f,c
  6301  001208  2E06               	decfsz	i1___awmod@counter,f,c
  6302  00120A  D7F1               	goto	i1l3432
  6303  00120C                     i1l3440:
  6304  00120C  5007               	movf	i1___awmod@sign,w,c
  6305  00120E  B4D8               	btfsc	status,2,c
  6306  001210  D004               	goto	i1l3444
  6307  001212  6C01               	negf	i1___awmod@dividend,c
  6308  001214  1E02               	comf	i1___awmod@dividend+1,f,c
  6309  001216  B0D8               	btfsc	status,0,c
  6310  001218  2A02               	incf	i1___awmod@dividend+1,f,c
  6311  00121A                     i1l3444:
  6312  00121A  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6313  00121E  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6314  001222  0012               	return	
  6315  001224                     __end_ofi1___awmod:
  6316                           	opt stack 0
  6317                           pclatu	equ	0xFFB
  6318                           pclath	equ	0xFFA
  6319                           tblptru	equ	0xFF8
  6320                           tblptrh	equ	0xFF7
  6321                           tblptrl	equ	0xFF6
  6322                           tablat	equ	0xFF5
  6323                           prodh	equ	0xFF4
  6324                           prodl	equ	0xFF3
  6325                           intcon	equ	0xFF2
  6326                           intcon2	equ	0xFF1
  6327                           postinc0	equ	0xFEE
  6328                           fsr0h	equ	0xFEA
  6329                           fsr0l	equ	0xFE9
  6330                           wreg	equ	0xFE8
  6331                           indf1	equ	0xFE7
  6332                           postdec1	equ	0xFE5
  6333                           fsr1h	equ	0xFE2
  6334                           fsr1l	equ	0xFE1
  6335                           bsr	equ	0xFE0
  6336                           indf2	equ	0xFDF
  6337                           postinc2	equ	0xFDE
  6338                           postdec2	equ	0xFDD
  6339                           fsr2h	equ	0xFDA
  6340                           fsr2l	equ	0xFD9
  6341                           status	equ	0xFD8
  6342                           
  6343 ;; *************** function _Read1USART *****************
  6344 ;; Defined at:
  6345 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\u1read.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;		None
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;  data            1    0[COMRAM] unsigned char 
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  1    wreg      unsigned char 
  6352 ;; Registers used:
  6353 ;;		wreg, status,2, status,0
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6360 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6362 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6363 ;;Total ram usage:        1 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; Hardware stack levels required when called:    6
  6366 ;; This function calls:
  6367 ;;		Nothing
  6368 ;; This function is called by:
  6369 ;;		_uart_recv_int_handler
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           	psect	text38
  6374  001BEE                     __ptext38:
  6375                           	opt stack 0
  6376  001BEE                     _Read1USART:
  6377                           	opt stack 18
  6378                           
  6379                           ;incstack = 0
  6380  001BEE  0EF2               	movlw	242
  6381  001BF0  163C               	andwf	_USART1_Status,f,c
  6382  001BF2  ACAC               	btfss	4012,6,c	;volatile
  6383  001BF4  D003               	goto	i1l599
  6384  001BF6  903C               	bcf	_USART1_Status,0,c
  6385  001BF8  B0AC               	btfsc	4012,0,c	;volatile
  6386  001BFA  803C               	bsf	_USART1_Status,0,c
  6387  001BFC                     i1l599:
  6388  001BFC  B4AC               	btfsc	4012,2,c	;volatile
  6389  001BFE  843C               	bsf	_USART1_Status,2,c
  6390  001C00  B2AC               	btfsc	4012,1,c	;volatile
  6391  001C02  863C               	bsf	_USART1_Status,3,c
  6392  001C04  CFAF F001          	movff	4015,Read1USART@data	;volatile
  6393  001C08  5001               	movf	Read1USART@data,w,c
  6394  001C0A  0012               	return	
  6395  001C0C                     __end_of_Read1USART:
  6396                           	opt stack 0
  6397                           pclatu	equ	0xFFB
  6398                           pclath	equ	0xFFA
  6399                           tblptru	equ	0xFF8
  6400                           tblptrh	equ	0xFF7
  6401                           tblptrl	equ	0xFF6
  6402                           tablat	equ	0xFF5
  6403                           prodh	equ	0xFF4
  6404                           prodl	equ	0xFF3
  6405                           intcon	equ	0xFF2
  6406                           intcon2	equ	0xFF1
  6407                           postinc0	equ	0xFEE
  6408                           fsr0h	equ	0xFEA
  6409                           fsr0l	equ	0xFE9
  6410                           wreg	equ	0xFE8
  6411                           indf1	equ	0xFE7
  6412                           postdec1	equ	0xFE5
  6413                           fsr1h	equ	0xFE2
  6414                           fsr1l	equ	0xFE1
  6415                           bsr	equ	0xFE0
  6416                           indf2	equ	0xFDF
  6417                           postinc2	equ	0xFDE
  6418                           postdec2	equ	0xFDD
  6419                           fsr2h	equ	0xFDA
  6420                           fsr2l	equ	0xFD9
  6421                           status	equ	0xFD8
  6422                           
  6423 ;; *************** function _timer1_int_handler *****************
  6424 ;; Defined at:
  6425 ;;		line 50 in file "../src/user_interrupts.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;		None
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;		None
  6430 ;; Return value:  Size  Location     Type
  6431 ;;		None               void
  6432 ;; Registers used:
  6433 ;;		wreg, status,2, cstack
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6443 ;;Total ram usage:        0 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:    7
  6446 ;; This function calls:
  6447 ;;		_WriteTimer1
  6448 ;; This function is called by:
  6449 ;;		_InterruptHandlerLow
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text39
  6454  001CA6                     __ptext39:
  6455                           	opt stack 0
  6456  001CA6                     _timer1_int_handler:
  6457                           	opt stack 18
  6458                           
  6459                           ;user_interrupts.c: 62: WriteTimer1(0);
  6460                           
  6461                           ;incstack = 0
  6462  001CA6  0E00               	movlw	0
  6463  001CA8  6E02               	movwf	WriteTimer1@timer1+1,c
  6464  001CAA  0E00               	movlw	0
  6465  001CAC  6E01               	movwf	WriteTimer1@timer1,c
  6466  001CAE  EC38  F00E         	call	_WriteTimer1	;wreg free
  6467  001CB2  0012               	return	
  6468  001CB4                     __end_of_timer1_int_handler:
  6469                           	opt stack 0
  6470                           pclatu	equ	0xFFB
  6471                           pclath	equ	0xFFA
  6472                           tblptru	equ	0xFF8
  6473                           tblptrh	equ	0xFF7
  6474                           tblptrl	equ	0xFF6
  6475                           tablat	equ	0xFF5
  6476                           prodh	equ	0xFF4
  6477                           prodl	equ	0xFF3
  6478                           intcon	equ	0xFF2
  6479                           intcon2	equ	0xFF1
  6480                           postinc0	equ	0xFEE
  6481                           fsr0h	equ	0xFEA
  6482                           fsr0l	equ	0xFE9
  6483                           wreg	equ	0xFE8
  6484                           indf1	equ	0xFE7
  6485                           postdec1	equ	0xFE5
  6486                           fsr1h	equ	0xFE2
  6487                           fsr1l	equ	0xFE1
  6488                           bsr	equ	0xFE0
  6489                           indf2	equ	0xFDF
  6490                           postinc2	equ	0xFDE
  6491                           postdec2	equ	0xFDD
  6492                           fsr2h	equ	0xFDA
  6493                           fsr2l	equ	0xFD9
  6494                           status	equ	0xFD8
  6495                           
  6496 ;; *************** function _WriteTimer1 *****************
  6497 ;; Defined at:
  6498 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;  timer1          2    0[COMRAM] unsigned int 
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;  timer           2    2[COMRAM] struct Timers
  6503 ;; Return value:  Size  Location     Type
  6504 ;;		None               void
  6505 ;; Registers used:
  6506 ;;		None
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6513 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6515 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6516 ;;Total ram usage:        4 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; Hardware stack levels required when called:    6
  6519 ;; This function calls:
  6520 ;;		Nothing
  6521 ;; This function is called by:
  6522 ;;		_timer1_int_handler
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           	psect	text40
  6527  001C70                     __ptext40:
  6528                           	opt stack 0
  6529  001C70                     _WriteTimer1:
  6530                           	opt stack 18
  6531                           
  6532                           ;incstack = 0
  6533  001C70  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6534  001C74  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6535  001C78  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6536  001C7C  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6537  001C80  0012               	return	
  6538  001C82                     __end_of_WriteTimer1:
  6539                           	opt stack 0
  6540                           pclatu	equ	0xFFB
  6541                           pclath	equ	0xFFA
  6542                           tblptru	equ	0xFF8
  6543                           tblptrh	equ	0xFF7
  6544                           tblptrl	equ	0xFF6
  6545                           tablat	equ	0xFF5
  6546                           prodh	equ	0xFF4
  6547                           prodl	equ	0xFF3
  6548                           intcon	equ	0xFF2
  6549                           intcon2	equ	0xFF1
  6550                           postinc0	equ	0xFEE
  6551                           fsr0h	equ	0xFEA
  6552                           fsr0l	equ	0xFE9
  6553                           wreg	equ	0xFE8
  6554                           indf1	equ	0xFE7
  6555                           postdec1	equ	0xFE5
  6556                           fsr1h	equ	0xFE2
  6557                           fsr1l	equ	0xFE1
  6558                           bsr	equ	0xFE0
  6559                           indf2	equ	0xFDF
  6560                           postinc2	equ	0xFDE
  6561                           postdec2	equ	0xFDD
  6562                           fsr2h	equ	0xFDA
  6563                           fsr2l	equ	0xFD9
  6564                           status	equ	0xFD8
  6565                           
  6566 ;; *************** function _adc_int_handler *****************
  6567 ;; Defined at:
  6568 ;;		line 65 in file "../src/user_interrupts.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;		None
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;		None
  6573 ;; Return value:  Size  Location     Type
  6574 ;;		None               void
  6575 ;; Registers used:
  6576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6586 ;;Total ram usage:        0 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    6
  6589 ;; This function calls:
  6590 ;;		Nothing
  6591 ;; This function is called by:
  6592 ;;		_InterruptHandlerLow
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           	psect	text41
  6597  001A9E                     __ptext41:
  6598                           	opt stack 0
  6599  001A9E                     _adc_int_handler:
  6600                           	opt stack 19
  6601                           
  6602                           ;user_interrupts.c: 67: if(adcbuffer[0] < 27)
  6603                           
  6604                           ;incstack = 0
  6605  001A9E  0E1B               	movlw	27
  6606  001AA0  0100               	movlb	0	; () banked
  6607  001AA2  0100               	movlb	0	; () banked
  6608  001AA4  5DB3               	subwf	_adcbuffer& (0+255),w,b
  6609  001AA6  B0D8               	btfsc	status,0,c
  6610  001AA8  D006               	goto	i1l2602
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;user_interrupts.c: 68: adcbuffer[0] = adcbuffer[0] + 1;
  6614  001AAA  0100               	movlb	0	; () banked
  6615  001AAC  0100               	movlb	0	; () banked
  6616  001AAE  29B3               	incf	_adcbuffer& (0+255),w,b
  6617  001AB0  0100               	movlb	0	; () banked
  6618  001AB2  0100               	movlb	0	; () banked
  6619  001AB4  6FB3               	movwf	_adcbuffer& (0+255),b
  6620  001AB6                     i1l2602:
  6621                           
  6622                           ; BSR set to: 0
  6623                           ;user_interrupts.c: 75: adcbuffer[adcbuffer[0]] = ADRESH;
  6624  001AB6  0100               	movlb	0	; () banked
  6625  001AB8  0100               	movlb	0	; () banked
  6626  001ABA  51B3               	movf	_adcbuffer& (0+255),w,b
  6627  001ABC  0D01               	mullw	1
  6628  001ABE  0100               	movlb	0	; () banked
  6629  001AC0  0EB3               	movlw	low _adcbuffer
  6630  001AC2  24F3               	addwf	prodl,w,c
  6631  001AC4  6ED9               	movwf	fsr2l,c
  6632  001AC6  0100               	movlb	0	; () banked
  6633  001AC8  0E00               	movlw	high _adcbuffer
  6634  001ACA  20F4               	addwfc	prodh,w,c
  6635  001ACC  6EDA               	movwf	fsr2h,c
  6636  001ACE  CFC4 FFDF          	movff	4036,indf2	;volatile
  6637                           
  6638                           ; BSR set to: 0
  6639  001AD2  0012               	return	
  6640  001AD4                     __end_of_adc_int_handler:
  6641                           	opt stack 0
  6642                           pclatu	equ	0xFFB
  6643                           pclath	equ	0xFFA
  6644                           tblptru	equ	0xFF8
  6645                           tblptrh	equ	0xFF7
  6646                           tblptrl	equ	0xFF6
  6647                           tablat	equ	0xFF5
  6648                           prodh	equ	0xFF4
  6649                           prodl	equ	0xFF3
  6650                           intcon	equ	0xFF2
  6651                           intcon2	equ	0xFF1
  6652                           postinc0	equ	0xFEE
  6653                           fsr0h	equ	0xFEA
  6654                           fsr0l	equ	0xFE9
  6655                           wreg	equ	0xFE8
  6656                           indf1	equ	0xFE7
  6657                           postdec1	equ	0xFE5
  6658                           fsr1h	equ	0xFE2
  6659                           fsr1l	equ	0xFE1
  6660                           bsr	equ	0xFE0
  6661                           indf2	equ	0xFDF
  6662                           postinc2	equ	0xFDE
  6663                           postdec2	equ	0xFDD
  6664                           fsr2h	equ	0xFDA
  6665                           fsr2l	equ	0xFD9
  6666                           status	equ	0xFD8
  6667                           
  6668 ;; *************** function _InterruptHandlerHigh *****************
  6669 ;; Defined at:
  6670 ;;		line 84 in file "../src/interrupts.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;		None
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;		None               void
  6677 ;; Registers used:
  6678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6686 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6687 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6688 ;;Total ram usage:       14 bytes
  6689 ;; Hardware stack levels used:    1
  6690 ;; Hardware stack levels required when called:    5
  6691 ;; This function calls:
  6692 ;;		_SleepIfOkay
  6693 ;;		_i2c_int_handler
  6694 ;;		_timer0_int_handler
  6695 ;; This function is called by:
  6696 ;;		Interrupt level 2
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           	psect	intcode
  6701  000008                     __pintcode:
  6702                           	opt stack 0
  6703  000008                     _InterruptHandlerHigh:
  6704                           	opt stack 16
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;incstack = 0
  6708  000008  CFFA F07F          	movff	pclath,??_InterruptHandlerHigh
  6709  00000C  CFFB F080          	movff	pclatu,??_InterruptHandlerHigh+1
  6710  000010  EF57  F009         	goto	int_func
  6711                           pclatu	equ	0xFFB
  6712                           pclath	equ	0xFFA
  6713                           tblptru	equ	0xFF8
  6714                           tblptrh	equ	0xFF7
  6715                           tblptrl	equ	0xFF6
  6716                           tablat	equ	0xFF5
  6717                           prodh	equ	0xFF4
  6718                           prodl	equ	0xFF3
  6719                           intcon	equ	0xFF2
  6720                           intcon2	equ	0xFF1
  6721                           postinc0	equ	0xFEE
  6722                           fsr0h	equ	0xFEA
  6723                           fsr0l	equ	0xFE9
  6724                           wreg	equ	0xFE8
  6725                           indf1	equ	0xFE7
  6726                           postdec1	equ	0xFE5
  6727                           fsr1h	equ	0xFE2
  6728                           fsr1l	equ	0xFE1
  6729                           bsr	equ	0xFE0
  6730                           indf2	equ	0xFDF
  6731                           postinc2	equ	0xFDE
  6732                           postdec2	equ	0xFDD
  6733                           fsr2h	equ	0xFDA
  6734                           fsr2l	equ	0xFD9
  6735                           status	equ	0xFD8
  6736                           
  6737                           	psect	intcode_body
  6738  0012AE                     __pintcode_body:
  6739                           	opt stack 16
  6740  0012AE                     int_func:
  6741                           	opt stack 16
  6742  0012AE  CFE9 F081          	movff	fsr0l,??_InterruptHandlerHigh+2
  6743  0012B2  CFEA F082          	movff	fsr0h,??_InterruptHandlerHigh+3
  6744  0012B6  CFE1 F083          	movff	fsr1l,??_InterruptHandlerHigh+4
  6745  0012BA  CFE2 F084          	movff	fsr1h,??_InterruptHandlerHigh+5
  6746  0012BE  CFD9 F085          	movff	fsr2l,??_InterruptHandlerHigh+6
  6747  0012C2  CFDA F086          	movff	fsr2h,??_InterruptHandlerHigh+7
  6748  0012C6  CFF3 F087          	movff	prodl,??_InterruptHandlerHigh+8
  6749  0012CA  CFF4 F088          	movff	prodh,??_InterruptHandlerHigh+9
  6750  0012CE  CFF6 F089          	movff	tblptrl,??_InterruptHandlerHigh+10
  6751  0012D2  CFF7 F08A          	movff	tblptrh,??_InterruptHandlerHigh+11
  6752  0012D6  CFF8 F08B          	movff	tblptru,??_InterruptHandlerHigh+12
  6753  0012DA  CFF5 F08C          	movff	tablat,??_InterruptHandlerHigh+13
  6754                           
  6755                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  6756  0012DE  A69E               	btfss	3998,3,c	;volatile
  6757  0012E0  D003               	goto	i2l3566
  6758                           
  6759                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  6760  0012E2  969E               	bcf	3998,3,c	;volatile
  6761                           
  6762                           ;interrupts.c: 94: i2c_int_handler();
  6763  0012E4  EC64  F00E         	call	_i2c_int_handler	;wreg free
  6764  0012E8                     i2l3566:
  6765                           
  6766                           ;interrupts.c: 96: }
  6767                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  6768  0012E8  A4F2               	btfss	intcon,2,c	;volatile
  6769  0012EA  D005               	goto	i2l3574
  6770                           
  6771                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  6772  0012EC  94F2               	bcf	intcon,2,c	;volatile
  6773                           
  6774                           ;interrupts.c: 103: PORTAbits.AN0 = 1;
  6775  0012EE  8080               	bsf	3968,0,c	;volatile
  6776                           
  6777                           ;interrupts.c: 104: timer0_int_handler();
  6778  0012F0  EC06  F00E         	call	_timer0_int_handler	;wreg free
  6779                           
  6780                           ;interrupts.c: 105: PORTAbits.AN0 = 0;
  6781  0012F4  9080               	bcf	3968,0,c	;volatile
  6782  0012F6                     i2l3574:
  6783                           
  6784                           ;interrupts.c: 106: }
  6785                           ;interrupts.c: 115: SleepIfOkay();
  6786  0012F6  EC36  F00B         	call	_SleepIfOkay	;wreg free
  6787  0012FA  C08C  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6788  0012FE  C08B  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6789  001302  C08A  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6790  001306  C089  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6791  00130A  C088  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6792  00130E  C087  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6793  001312  C086  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6794  001316  C085  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6795  00131A  C084  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6796  00131E  C083  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6797  001322  C082  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6798  001326  C081  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6799  00132A  C080  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6800  00132E  C07F  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6801  001332  0011               	retfie		f
  6802  001334                     __end_of_InterruptHandlerHigh:
  6803                           	opt stack 0
  6804                           pclatu	equ	0xFFB
  6805                           pclath	equ	0xFFA
  6806                           tblptru	equ	0xFF8
  6807                           tblptrh	equ	0xFF7
  6808                           tblptrl	equ	0xFF6
  6809                           tablat	equ	0xFF5
  6810                           prodh	equ	0xFF4
  6811                           prodl	equ	0xFF3
  6812                           intcon	equ	0xFF2
  6813                           intcon2	equ	0xFF1
  6814                           postinc0	equ	0xFEE
  6815                           fsr0h	equ	0xFEA
  6816                           fsr0l	equ	0xFE9
  6817                           wreg	equ	0xFE8
  6818                           indf1	equ	0xFE7
  6819                           postdec1	equ	0xFE5
  6820                           fsr1h	equ	0xFE2
  6821                           fsr1l	equ	0xFE1
  6822                           bsr	equ	0xFE0
  6823                           indf2	equ	0xFDF
  6824                           postinc2	equ	0xFDE
  6825                           postdec2	equ	0xFDD
  6826                           fsr2h	equ	0xFDA
  6827                           fsr2l	equ	0xFD9
  6828                           status	equ	0xFD8
  6829                           
  6830 ;; *************** function _timer0_int_handler *****************
  6831 ;; Defined at:
  6832 ;;		line 16 in file "../src/user_interrupts.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;		None
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;		None
  6837 ;; Return value:  Size  Location     Type
  6838 ;;		None               void
  6839 ;; Registers used:
  6840 ;;		wreg, status,2, status,0, cstack
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6850 ;;Total ram usage:        0 bytes
  6851 ;; Hardware stack levels used:    1
  6852 ;; Hardware stack levels required when called:    1
  6853 ;; This function calls:
  6854 ;;		_WriteTimer0
  6855 ;; This function is called by:
  6856 ;;		_InterruptHandlerHigh
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           	psect	text43
  6861  001C0C                     __ptext43:
  6862                           	opt stack 0
  6863  001C0C                     _timer0_int_handler:
  6864                           	opt stack 19
  6865                           
  6866                           ;user_interrupts.c: 17: WriteTimer0(0);
  6867                           
  6868                           ;incstack = 0
  6869  001C0C  0E00               	movlw	0
  6870  001C0E  0100               	movlb	0	; () banked
  6871  001C10  0100               	movlb	0	; () banked
  6872  001C12  6F61               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6873  001C14  0E00               	movlw	0
  6874  001C16  0100               	movlb	0	; () banked
  6875  001C18  6F60               	movwf	WriteTimer0@timer0& (0+255),b
  6876  001C1A  EC41  F00E         	call	_WriteTimer0	;wreg free
  6877                           
  6878                           ;user_interrupts.c: 33: UART_timeout++;
  6879  001C1E  4A39               	infsnz	_UART_timeout,f,c
  6880  001C20  2A3A               	incf	_UART_timeout+1,f,c
  6881  001C22  0012               	return	
  6882  001C24                     __end_of_timer0_int_handler:
  6883                           	opt stack 0
  6884                           pclatu	equ	0xFFB
  6885                           pclath	equ	0xFFA
  6886                           tblptru	equ	0xFF8
  6887                           tblptrh	equ	0xFF7
  6888                           tblptrl	equ	0xFF6
  6889                           tablat	equ	0xFF5
  6890                           prodh	equ	0xFF4
  6891                           prodl	equ	0xFF3
  6892                           intcon	equ	0xFF2
  6893                           intcon2	equ	0xFF1
  6894                           postinc0	equ	0xFEE
  6895                           fsr0h	equ	0xFEA
  6896                           fsr0l	equ	0xFE9
  6897                           wreg	equ	0xFE8
  6898                           indf1	equ	0xFE7
  6899                           postdec1	equ	0xFE5
  6900                           fsr1h	equ	0xFE2
  6901                           fsr1l	equ	0xFE1
  6902                           bsr	equ	0xFE0
  6903                           indf2	equ	0xFDF
  6904                           postinc2	equ	0xFDE
  6905                           postdec2	equ	0xFDD
  6906                           fsr2h	equ	0xFDA
  6907                           fsr2l	equ	0xFD9
  6908                           status	equ	0xFD8
  6909                           
  6910 ;; *************** function _WriteTimer0 *****************
  6911 ;; Defined at:
  6912 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;  timer0          2    0[BANK0 ] unsigned int 
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;  timer           2    2[BANK0 ] struct Timers
  6917 ;; Return value:  Size  Location     Type
  6918 ;;		None               void
  6919 ;; Registers used:
  6920 ;;		None
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6926 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6927 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6929 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6930 ;;Total ram usage:        4 bytes
  6931 ;; Hardware stack levels used:    1
  6932 ;; This function calls:
  6933 ;;		Nothing
  6934 ;; This function is called by:
  6935 ;;		_timer0_int_handler
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           	psect	text44
  6940  001C82                     __ptext44:
  6941                           	opt stack 0
  6942  001C82                     _WriteTimer0:
  6943                           	opt stack 19
  6944                           
  6945                           ;incstack = 0
  6946  001C82  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6947  001C86  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6948  001C8A  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6949  001C8E  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6950  001C92  0012               	return	
  6951  001C94                     __end_of_WriteTimer0:
  6952                           	opt stack 0
  6953                           pclatu	equ	0xFFB
  6954                           pclath	equ	0xFFA
  6955                           tblptru	equ	0xFF8
  6956                           tblptrh	equ	0xFF7
  6957                           tblptrl	equ	0xFF6
  6958                           tablat	equ	0xFF5
  6959                           prodh	equ	0xFF4
  6960                           prodl	equ	0xFF3
  6961                           intcon	equ	0xFF2
  6962                           intcon2	equ	0xFF1
  6963                           postinc0	equ	0xFEE
  6964                           fsr0h	equ	0xFEA
  6965                           fsr0l	equ	0xFE9
  6966                           wreg	equ	0xFE8
  6967                           indf1	equ	0xFE7
  6968                           postdec1	equ	0xFE5
  6969                           fsr1h	equ	0xFE2
  6970                           fsr1l	equ	0xFE1
  6971                           bsr	equ	0xFE0
  6972                           indf2	equ	0xFDF
  6973                           postinc2	equ	0xFDE
  6974                           postdec2	equ	0xFDD
  6975                           fsr2h	equ	0xFDA
  6976                           fsr2l	equ	0xFD9
  6977                           status	equ	0xFD8
  6978                           
  6979 ;; *************** function _i2c_int_handler *****************
  6980 ;; Defined at:
  6981 ;;		line 139 in file "../src/my_i2c.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;		None
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;		None
  6986 ;; Return value:  Size  Location     Type
  6987 ;;		None               void
  6988 ;; Registers used:
  6989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6999 ;;Total ram usage:        0 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; Hardware stack levels required when called:    4
  7002 ;; This function calls:
  7003 ;;		_i2c_master_int_handler
  7004 ;; This function is called by:
  7005 ;;		_InterruptHandlerHigh
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text45
  7010  001CC8                     __ptext45:
  7011                           	opt stack 0
  7012  001CC8                     _i2c_int_handler:
  7013                           	opt stack 16
  7014                           
  7015                           ;my_i2c.c: 141: i2c_master_int_handler();
  7016                           
  7017                           ;incstack = 0
  7018  001CC8  EC65  F000         	call	_i2c_master_int_handler	;wreg free
  7019  001CCC  0012               	return	
  7020  001CCE                     __end_of_i2c_int_handler:
  7021                           	opt stack 0
  7022                           pclatu	equ	0xFFB
  7023                           pclath	equ	0xFFA
  7024                           tblptru	equ	0xFF8
  7025                           tblptrh	equ	0xFF7
  7026                           tblptrl	equ	0xFF6
  7027                           tablat	equ	0xFF5
  7028                           prodh	equ	0xFF4
  7029                           prodl	equ	0xFF3
  7030                           intcon	equ	0xFF2
  7031                           intcon2	equ	0xFF1
  7032                           postinc0	equ	0xFEE
  7033                           fsr0h	equ	0xFEA
  7034                           fsr0l	equ	0xFE9
  7035                           wreg	equ	0xFE8
  7036                           indf1	equ	0xFE7
  7037                           postdec1	equ	0xFE5
  7038                           fsr1h	equ	0xFE2
  7039                           fsr1l	equ	0xFE1
  7040                           bsr	equ	0xFE0
  7041                           indf2	equ	0xFDF
  7042                           postinc2	equ	0xFDE
  7043                           postdec2	equ	0xFDD
  7044                           fsr2h	equ	0xFDA
  7045                           fsr2l	equ	0xFD9
  7046                           status	equ	0xFD8
  7047                           
  7048 ;; *************** function _i2c_master_int_handler *****************
  7049 ;; Defined at:
  7050 ;;		line 147 in file "../src/my_i2c.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;		None
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;		None
  7055 ;; Return value:  Size  Location     Type
  7056 ;;		None               void
  7057 ;; Registers used:
  7058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7066 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7067 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7068 ;;Total ram usage:        5 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    3
  7071 ;; This function calls:
  7072 ;;		_ToMainHigh_sendmsg
  7073 ;;		_i2c_master_recv
  7074 ;; This function is called by:
  7075 ;;		_i2c_int_handler
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text46
  7080  0000CA                     __ptext46:
  7081                           	opt stack 0
  7082  0000CA                     _i2c_master_int_handler:
  7083                           	opt stack 16
  7084                           
  7085                           ;my_i2c.c: 150: if(!(ic_ptr->status == 0x5)) {
  7086                           
  7087                           ;incstack = 0
  7088  0000CA  0100               	movlb	0	; () banked
  7089  0000CC  EE20 F00D          	lfsr	2,13
  7090  0000D0  0100               	movlb	0	; () banked
  7091  0000D2  51CF               	movf	_ic_ptr& (0+255),w,b
  7092  0000D4  26D9               	addwf	fsr2l,f,c
  7093  0000D6  0100               	movlb	0	; () banked
  7094  0000D8  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7095  0000DA  22DA               	addwfc	fsr2h,f,c
  7096  0000DC  50DF               	movf	indf2,w,c
  7097  0000DE  0A05               	xorlw	5
  7098  0000E0  B4D8               	btfsc	status,2,c
  7099  0000E2  0012               	return	
  7100  0000E4  D1B5               	goto	i2l3682
  7101  0000E6                     i2l3624:
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;my_i2c.c: 154: {
  7105                           ;my_i2c.c: 155: if(ic_ptr->slave_addr % 2){
  7106  0000E6  0100               	movlb	0	; () banked
  7107  0000E8  EE20 F01C          	lfsr	2,28
  7108  0000EC  0100               	movlb	0	; () banked
  7109  0000EE  51CF               	movf	_ic_ptr& (0+255),w,b
  7110  0000F0  26D9               	addwf	fsr2l,f,c
  7111  0000F2  0100               	movlb	0	; () banked
  7112  0000F4  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7113  0000F6  22DA               	addwfc	fsr2h,f,c
  7114  0000F8  50DF               	movf	indf2,w,c
  7115  0000FA  0100               	movlb	0	; () banked
  7116  0000FC  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7117  0000FE  0100               	movlb	0	; () banked
  7118  000100  A17A               	btfss	??_i2c_master_int_handler& (0+255),0,b
  7119  000102  D00B               	goto	i2l3628
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;my_i2c.c: 157: ic_ptr->status = 0x7;
  7123  000104  0100               	movlb	0	; () banked
  7124  000106  EE20 F00D          	lfsr	2,13
  7125  00010A  0100               	movlb	0	; () banked
  7126  00010C  51CF               	movf	_ic_ptr& (0+255),w,b
  7127  00010E  26D9               	addwf	fsr2l,f,c
  7128  000110  0100               	movlb	0	; () banked
  7129  000112  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7130  000114  22DA               	addwfc	fsr2h,f,c
  7131  000116  0E07               	movlw	7
  7132  000118  D00A               	goto	L1
  7133  00011A                     i2l3628:
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;my_i2c.c: 160: ic_ptr->status = 0x9;
  7137  00011A  0100               	movlb	0	; () banked
  7138  00011C  EE20 F00D          	lfsr	2,13
  7139  000120  0100               	movlb	0	; () banked
  7140  000122  51CF               	movf	_ic_ptr& (0+255),w,b
  7141  000124  26D9               	addwf	fsr2l,f,c
  7142  000126  0100               	movlb	0	; () banked
  7143  000128  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7144  00012A  22DA               	addwfc	fsr2h,f,c
  7145  00012C  0E09               	movlw	9
  7146  00012E                     L1:
  7147  00012E  6EDF               	movwf	indf2,c
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;my_i2c.c: 161: }
  7151                           ;my_i2c.c: 162: ic_ptr->bufind = 0;
  7152  000130  0100               	movlb	0	; () banked
  7153  000132  EE20 F00B          	lfsr	2,11
  7154  000136  0100               	movlb	0	; () banked
  7155  000138  51CF               	movf	_ic_ptr& (0+255),w,b
  7156  00013A  26D9               	addwf	fsr2l,f,c
  7157  00013C  0100               	movlb	0	; () banked
  7158  00013E  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7159  000140  22DA               	addwfc	fsr2h,f,c
  7160  000142  0E00               	movlw	0
  7161  000144  6EDF               	movwf	indf2,c
  7162                           
  7163                           ;my_i2c.c: 163: SSPBUF = ic_ptr->slave_addr;
  7164  000146  0100               	movlb	0	; () banked
  7165  000148  EE20 F01C          	lfsr	2,28
  7166  00014C  0100               	movlb	0	; () banked
  7167  00014E  51CF               	movf	_ic_ptr& (0+255),w,b
  7168  000150  26D9               	addwf	fsr2l,f,c
  7169  000152  0100               	movlb	0	; () banked
  7170  000154  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7171  000156  22DA               	addwfc	fsr2h,f,c
  7172  000158  50DF               	movf	indf2,w,c
  7173  00015A  6EC9               	movwf	4041,c	;volatile
  7174                           
  7175                           ;my_i2c.c: 165: break;
  7176  00015C  0012               	return	
  7177  00015E                     i2l322:
  7178                           
  7179                           ; BSR set to: 0
  7180                           ;my_i2c.c: 168: {
  7181                           ;my_i2c.c: 169: if(!SSPCON2bits.ACKSTAT){
  7182  00015E  BCC5               	btfsc	4037,6,c	;volatile
  7183  000160  D070               	goto	i2l323
  7184                           
  7185                           ; BSR set to: 0
  7186                           ;my_i2c.c: 170: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7187  000162  0100               	movlb	0	; () banked
  7188  000164  EE20 F01B          	lfsr	2,27
  7189  000168  0100               	movlb	0	; () banked
  7190  00016A  51CF               	movf	_ic_ptr& (0+255),w,b
  7191  00016C  26D9               	addwf	fsr2l,f,c
  7192  00016E  0100               	movlb	0	; () banked
  7193  000170  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7194  000172  22DA               	addwfc	fsr2h,f,c
  7195  000174  50DF               	movf	indf2,w,c
  7196  000176  0100               	movlb	0	; () banked
  7197  000178  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7198  00017A  0100               	movlb	0	; () banked
  7199  00017C  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7200  00017E  0D01               	mullw	1
  7201  000180  0E10               	movlw	16
  7202  000182  26F3               	addwf	prodl,f,c
  7203  000184  0E00               	movlw	0
  7204  000186  22F4               	addwfc	prodh,f,c
  7205  000188  50F3               	movf	prodl,w,c
  7206  00018A  0100               	movlb	0	; () banked
  7207  00018C  0100               	movlb	0	; () banked
  7208  00018E  25CF               	addwf	_ic_ptr& (0+255),w,b
  7209  000190  6ED9               	movwf	fsr2l,c
  7210  000192  50F4               	movf	prodh,w,c
  7211  000194  0100               	movlb	0	; () banked
  7212  000196  0100               	movlb	0	; () banked
  7213  000198  21D0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7214  00019A  6EDA               	movwf	fsr2h,c
  7215  00019C  50DF               	movf	indf2,w,c
  7216  00019E  6EC9               	movwf	4041,c	;volatile
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;my_i2c.c: 172: if(ic_ptr->outbuflen > ic_ptr->outbufind+1){
  7220  0001A0  0100               	movlb	0	; () banked
  7221  0001A2  EE20 F01A          	lfsr	2,26
  7222  0001A6  0100               	movlb	0	; () banked
  7223  0001A8  51CF               	movf	_ic_ptr& (0+255),w,b
  7224  0001AA  26D9               	addwf	fsr2l,f,c
  7225  0001AC  0100               	movlb	0	; () banked
  7226  0001AE  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7227  0001B0  22DA               	addwfc	fsr2h,f,c
  7228  0001B2  50DF               	movf	indf2,w,c
  7229  0001B4  0100               	movlb	0	; () banked
  7230  0001B6  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7231  0001B8  6B7B               	clrf	(??_i2c_master_int_handler+1)& (0+255),b
  7232  0001BA  0100               	movlb	0	; () banked
  7233  0001BC  EE20 F01B          	lfsr	2,27
  7234  0001C0  0100               	movlb	0	; () banked
  7235  0001C2  51CF               	movf	_ic_ptr& (0+255),w,b
  7236  0001C4  26D9               	addwf	fsr2l,f,c
  7237  0001C6  0100               	movlb	0	; () banked
  7238  0001C8  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7239  0001CA  22DA               	addwfc	fsr2h,f,c
  7240  0001CC  50DF               	movf	indf2,w,c
  7241  0001CE  0100               	movlb	0	; () banked
  7242  0001D0  6F7C               	movwf	(??_i2c_master_int_handler+2)& (0+255),b
  7243  0001D2  6B7D               	clrf	(??_i2c_master_int_handler+3)& (0+255),b
  7244  0001D4  0E01               	movlw	1
  7245  0001D6  0100               	movlb	0	; () banked
  7246  0001D8  277C               	addwf	(??_i2c_master_int_handler+2)& (0+255),f,b
  7247  0001DA  0E00               	movlw	0
  7248  0001DC  237D               	addwfc	(??_i2c_master_int_handler+3)& (0+255),f,b
  7249  0001DE  0100               	movlb	0	; () banked
  7250  0001E0  517D               	movf	(??_i2c_master_int_handler+3)& (0+255),w,b
  7251  0001E2  0A80               	xorlw	128
  7252  0001E4  0100               	movlb	0	; () banked
  7253  0001E6  6F7E               	movwf	(??_i2c_master_int_handler+4)& (0+255),b
  7254  0001E8  0100               	movlb	0	; () banked
  7255  0001EA  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7256  0001EC  0100               	movlb	0	; () banked
  7257  0001EE  5D7C               	subwf	(??_i2c_master_int_handler+2)& (0+255),w,b
  7258  0001F0  0100               	movlb	0	; () banked
  7259  0001F2  517B               	movf	(??_i2c_master_int_handler+1)& (0+255),w,b
  7260  0001F4  0A80               	xorlw	128
  7261  0001F6  0100               	movlb	0	; () banked
  7262  0001F8  597E               	subwfb	(??_i2c_master_int_handler+4)& (0+255),w,b
  7263  0001FA  B0D8               	btfsc	status,0,c
  7264  0001FC  D016               	goto	i2l3636
  7265                           
  7266                           ; BSR set to: 0
  7267                           ;my_i2c.c: 173: ic_ptr->outbufind++;
  7268  0001FE  0100               	movlb	0	; () banked
  7269  000200  EE20 F01B          	lfsr	2,27
  7270  000204  0100               	movlb	0	; () banked
  7271  000206  51CF               	movf	_ic_ptr& (0+255),w,b
  7272  000208  26D9               	addwf	fsr2l,f,c
  7273  00020A  0100               	movlb	0	; () banked
  7274  00020C  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7275  00020E  22DA               	addwfc	fsr2h,f,c
  7276  000210  2ADF               	incf	indf2,f,c
  7277                           
  7278                           ;my_i2c.c: 174: ic_ptr->status = 0x9;
  7279  000212  0100               	movlb	0	; () banked
  7280  000214  EE20 F00D          	lfsr	2,13
  7281  000218  0100               	movlb	0	; () banked
  7282  00021A  51CF               	movf	_ic_ptr& (0+255),w,b
  7283  00021C  26D9               	addwf	fsr2l,f,c
  7284  00021E  0100               	movlb	0	; () banked
  7285  000220  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7286  000222  22DA               	addwfc	fsr2h,f,c
  7287  000224  0E09               	movlw	9
  7288  000226  6EDF               	movwf	indf2,c
  7289                           
  7290                           ;my_i2c.c: 175: }else{
  7291  000228  0012               	return	
  7292  00022A                     i2l3636:
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;my_i2c.c: 177: ic_ptr->status = 0xD;
  7296  00022A  0100               	movlb	0	; () banked
  7297  00022C  EE20 F00D          	lfsr	2,13
  7298  000230  0100               	movlb	0	; () banked
  7299  000232  51CF               	movf	_ic_ptr& (0+255),w,b
  7300  000234  26D9               	addwf	fsr2l,f,c
  7301  000236  0100               	movlb	0	; () banked
  7302  000238  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7303  00023A  22DA               	addwfc	fsr2h,f,c
  7304  00023C  0E0D               	movlw	13
  7305  00023E  6EDF               	movwf	indf2,c
  7306  000240  0012               	return	
  7307  000242                     i2l323:
  7308                           
  7309                           ; BSR set to: 0
  7310                           ;my_i2c.c: 181: SSPCON2bits.RSEN = 1;
  7311  000242  82C5               	bsf	4037,1,c	;volatile
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;my_i2c.c: 182: ic_ptr->status = 0xA;
  7315  000244  0100               	movlb	0	; () banked
  7316  000246  EE20 F00D          	lfsr	2,13
  7317  00024A  0100               	movlb	0	; () banked
  7318  00024C  51CF               	movf	_ic_ptr& (0+255),w,b
  7319  00024E  26D9               	addwf	fsr2l,f,c
  7320  000250  0100               	movlb	0	; () banked
  7321  000252  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7322  000254  22DA               	addwfc	fsr2h,f,c
  7323  000256  0E0A               	movlw	10
  7324  000258  6EDF               	movwf	indf2,c
  7325  00025A  0012               	return	
  7326  00025C                     i2l327:
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;my_i2c.c: 187: {
  7330                           ;my_i2c.c: 188: if(!SSPCON2bits.ACKSTAT){
  7331  00025C  BCC5               	btfsc	4037,6,c	;volatile
  7332  00025E  D00D               	goto	i2l3644
  7333                           
  7334                           ; BSR set to: 0
  7335                           ;my_i2c.c: 189: SSPCON2bits.RCEN = 1;
  7336  000260  86C5               	bsf	4037,3,c	;volatile
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;my_i2c.c: 190: ic_ptr->status = 0xC;
  7340  000262  0100               	movlb	0	; () banked
  7341  000264  EE20 F00D          	lfsr	2,13
  7342  000268  0100               	movlb	0	; () banked
  7343  00026A  51CF               	movf	_ic_ptr& (0+255),w,b
  7344  00026C  26D9               	addwf	fsr2l,f,c
  7345  00026E  0100               	movlb	0	; () banked
  7346  000270  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7347  000272  22DA               	addwfc	fsr2h,f,c
  7348  000274  0E0C               	movlw	12
  7349  000276  6EDF               	movwf	indf2,c
  7350                           
  7351                           ;my_i2c.c: 191: } else {
  7352  000278  0012               	return	
  7353  00027A                     i2l3644:
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;my_i2c.c: 193: if(ic_ptr->buffer[4] == 0x78)
  7357  00027A  0100               	movlb	0	; () banked
  7358  00027C  EE20 F004          	lfsr	2,4
  7359  000280  0100               	movlb	0	; () banked
  7360  000282  51CF               	movf	_ic_ptr& (0+255),w,b
  7361  000284  26D9               	addwf	fsr2l,f,c
  7362  000286  0100               	movlb	0	; () banked
  7363  000288  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7364  00028A  22DA               	addwfc	fsr2h,f,c
  7365  00028C  0E78               	movlw	120
  7366  00028E  62DF               	cpfseq	indf2,c
  7367  000290  D001               	goto	i2l3648
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;my_i2c.c: 194: LATBbits.LATB2 = 1;
  7371  000292  848A               	bsf	3978,2,c	;volatile
  7372  000294                     i2l3648:
  7373                           
  7374                           ; BSR set to: 0
  7375                           ;my_i2c.c: 195: ToMainHigh_sendmsg(0, 46, ic_ptr->buffer);
  7376  000294  0100               	movlb	0	; () banked
  7377  000296  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7378  000298  0E2E               	movlw	46
  7379  00029A  0100               	movlb	0	; () banked
  7380  00029C  0100               	movlb	0	; () banked
  7381  00029E  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7382  0002A0  0100               	movlb	0	; () banked
  7383  0002A2  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7384  0002A4  0100               	movlb	0	; () banked
  7385  0002A6  0100               	movlb	0	; () banked
  7386  0002A8  C0D0  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7387  0002AC  0100               	movlb	0	; () banked
  7388  0002AE  0100               	movlb	0	; () banked
  7389  0002B0  C0CF  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7390  0002B4  0E00               	movlw	0
  7391  0002B6  EC6A  F00D         	call	_ToMainHigh_sendmsg
  7392                           
  7393                           ;my_i2c.c: 196: LATBbits.LATB2 = 0;
  7394  0002BA  948A               	bcf	3978,2,c	;volatile
  7395                           
  7396                           ;my_i2c.c: 197: ic_ptr->buflen = 0;
  7397  0002BC  0100               	movlb	0	; () banked
  7398  0002BE  EE20 F00A          	lfsr	2,10
  7399  0002C2  0100               	movlb	0	; () banked
  7400  0002C4  51CF               	movf	_ic_ptr& (0+255),w,b
  7401  0002C6  26D9               	addwf	fsr2l,f,c
  7402  0002C8  0100               	movlb	0	; () banked
  7403  0002CA  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7404  0002CC  22DA               	addwfc	fsr2h,f,c
  7405  0002CE  0E00               	movlw	0
  7406  0002D0  6EDF               	movwf	indf2,c
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;my_i2c.c: 198: ic_ptr->status = 0x5;
  7410  0002D2  0100               	movlb	0	; () banked
  7411  0002D4  EE20 F00D          	lfsr	2,13
  7412  0002D8  0100               	movlb	0	; () banked
  7413  0002DA  51CF               	movf	_ic_ptr& (0+255),w,b
  7414  0002DC  26D9               	addwf	fsr2l,f,c
  7415  0002DE  0100               	movlb	0	; () banked
  7416  0002E0  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7417  0002E2  22DA               	addwfc	fsr2h,f,c
  7418  0002E4  0E05               	movlw	5
  7419  0002E6  6EDF               	movwf	indf2,c
  7420  0002E8  0012               	return	
  7421  0002EA                     i2l331:
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;my_i2c.c: 203: {
  7425                           ;my_i2c.c: 204: LATBbits.LATB1 = 1;
  7426  0002EA  828A               	bsf	3978,1,c	;volatile
  7427                           
  7428                           ;my_i2c.c: 205: LATBbits.LATB1 = 0;
  7429  0002EC  928A               	bcf	3978,1,c	;volatile
  7430                           
  7431                           ; BSR set to: 0
  7432                           ;my_i2c.c: 206: if(ic_ptr->bufind < ic_ptr->buflen){
  7433  0002EE  0100               	movlb	0	; () banked
  7434  0002F0  EE20 F00B          	lfsr	2,11
  7435  0002F4  0100               	movlb	0	; () banked
  7436  0002F6  51CF               	movf	_ic_ptr& (0+255),w,b
  7437  0002F8  26D9               	addwf	fsr2l,f,c
  7438  0002FA  0100               	movlb	0	; () banked
  7439  0002FC  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7440  0002FE  22DA               	addwfc	fsr2h,f,c
  7441  000300  50DF               	movf	indf2,w,c
  7442  000302  0100               	movlb	0	; () banked
  7443  000304  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7444  000306  0100               	movlb	0	; () banked
  7445  000308  EE20 F00A          	lfsr	2,10
  7446  00030C  0100               	movlb	0	; () banked
  7447  00030E  51CF               	movf	_ic_ptr& (0+255),w,b
  7448  000310  26D9               	addwf	fsr2l,f,c
  7449  000312  0100               	movlb	0	; () banked
  7450  000314  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7451  000316  22DA               	addwfc	fsr2h,f,c
  7452  000318  50DF               	movf	indf2,w,c
  7453  00031A  0100               	movlb	0	; () banked
  7454  00031C  5D7A               	subwf	??_i2c_master_int_handler& (0+255),w,b
  7455  00031E  B0D8               	btfsc	status,0,c
  7456  000320  D030               	goto	i2l3664
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;my_i2c.c: 207: ic_ptr->buffer[ic_ptr->bufind] = SSPBUF;
  7460  000322  0100               	movlb	0	; () banked
  7461  000324  EE20 F00B          	lfsr	2,11
  7462  000328  0100               	movlb	0	; () banked
  7463  00032A  51CF               	movf	_ic_ptr& (0+255),w,b
  7464  00032C  26D9               	addwf	fsr2l,f,c
  7465  00032E  0100               	movlb	0	; () banked
  7466  000330  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7467  000332  22DA               	addwfc	fsr2h,f,c
  7468  000334  50DF               	movf	indf2,w,c
  7469  000336  0100               	movlb	0	; () banked
  7470  000338  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7471  00033A  0100               	movlb	0	; () banked
  7472  00033C  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7473  00033E  0D01               	mullw	1
  7474  000340  50F3               	movf	prodl,w,c
  7475  000342  0100               	movlb	0	; () banked
  7476  000344  0100               	movlb	0	; () banked
  7477  000346  25CF               	addwf	_ic_ptr& (0+255),w,b
  7478  000348  6ED9               	movwf	fsr2l,c
  7479  00034A  50F4               	movf	prodh,w,c
  7480  00034C  0100               	movlb	0	; () banked
  7481  00034E  0100               	movlb	0	; () banked
  7482  000350  21D0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7483  000352  6EDA               	movwf	fsr2h,c
  7484  000354  CFC9 FFDF          	movff	4041,indf2	;volatile
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;my_i2c.c: 208: ic_ptr->bufind++;
  7488  000358  0100               	movlb	0	; () banked
  7489  00035A  EE20 F00B          	lfsr	2,11
  7490  00035E  0100               	movlb	0	; () banked
  7491  000360  51CF               	movf	_ic_ptr& (0+255),w,b
  7492  000362  26D9               	addwf	fsr2l,f,c
  7493  000364  0100               	movlb	0	; () banked
  7494  000366  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7495  000368  22DA               	addwfc	fsr2h,f,c
  7496  00036A  2ADF               	incf	indf2,f,c
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;my_i2c.c: 209: ic_ptr->status = 0x7;
  7500  00036C  0100               	movlb	0	; () banked
  7501  00036E  EE20 F00D          	lfsr	2,13
  7502  000372  0100               	movlb	0	; () banked
  7503  000374  51CF               	movf	_ic_ptr& (0+255),w,b
  7504  000376  26D9               	addwf	fsr2l,f,c
  7505  000378  0100               	movlb	0	; () banked
  7506  00037A  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7507  00037C  22DA               	addwfc	fsr2h,f,c
  7508  00037E  0E07               	movlw	7
  7509  000380  6EDF               	movwf	indf2,c
  7510  000382                     i2l3664:
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;my_i2c.c: 211: }
  7514                           ;my_i2c.c: 212: if(ic_ptr->bufind == ic_ptr->buflen){
  7515  000382  0100               	movlb	0	; () banked
  7516  000384  EE20 F00B          	lfsr	2,11
  7517  000388  0100               	movlb	0	; () banked
  7518  00038A  51CF               	movf	_ic_ptr& (0+255),w,b
  7519  00038C  26D9               	addwf	fsr2l,f,c
  7520  00038E  0100               	movlb	0	; () banked
  7521  000390  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7522  000392  22DA               	addwfc	fsr2h,f,c
  7523  000394  0100               	movlb	0	; () banked
  7524  000396  EE10 F00A          	lfsr	1,10
  7525  00039A  0100               	movlb	0	; () banked
  7526  00039C  51CF               	movf	_ic_ptr& (0+255),w,b
  7527  00039E  26E1               	addwf	fsr1l,f,c
  7528  0003A0  0100               	movlb	0	; () banked
  7529  0003A2  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7530  0003A4  22E2               	addwfc	fsr1h,f,c
  7531  0003A6  50E7               	movf	indf1,w,c
  7532  0003A8  62DF               	cpfseq	indf2,c
  7533  0003AA  D02A               	goto	i2l333
  7534                           
  7535                           ; BSR set to: 0
  7536                           ;my_i2c.c: 213: ic_ptr->status = 0xB;
  7537  0003AC  0100               	movlb	0	; () banked
  7538  0003AE  EE20 F00D          	lfsr	2,13
  7539  0003B2  0100               	movlb	0	; () banked
  7540  0003B4  51CF               	movf	_ic_ptr& (0+255),w,b
  7541  0003B6  26D9               	addwf	fsr2l,f,c
  7542  0003B8  0100               	movlb	0	; () banked
  7543  0003BA  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7544  0003BC  22DA               	addwfc	fsr2h,f,c
  7545  0003BE  0E0B               	movlw	11
  7546  0003C0  6EDF               	movwf	indf2,c
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;my_i2c.c: 216: ToMainHigh_sendmsg(ic_ptr->buflen, 45, ic_ptr->buffer);
  7550  0003C2  0100               	movlb	0	; () banked
  7551  0003C4  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7552  0003C6  0E2D               	movlw	45
  7553  0003C8  0100               	movlb	0	; () banked
  7554  0003CA  0100               	movlb	0	; () banked
  7555  0003CC  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7556  0003CE  0100               	movlb	0	; () banked
  7557  0003D0  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7558  0003D2  0100               	movlb	0	; () banked
  7559  0003D4  0100               	movlb	0	; () banked
  7560  0003D6  C0D0  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7561  0003DA  0100               	movlb	0	; () banked
  7562  0003DC  0100               	movlb	0	; () banked
  7563  0003DE  C0CF  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7564  0003E2  0100               	movlb	0	; () banked
  7565  0003E4  EE20 F00A          	lfsr	2,10
  7566  0003E8  0100               	movlb	0	; () banked
  7567  0003EA  51CF               	movf	_ic_ptr& (0+255),w,b
  7568  0003EC  26D9               	addwf	fsr2l,f,c
  7569  0003EE  0100               	movlb	0	; () banked
  7570  0003F0  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7571  0003F2  22DA               	addwfc	fsr2h,f,c
  7572  0003F4  50DF               	movf	indf2,w,c
  7573  0003F6  EC6A  F00D         	call	_ToMainHigh_sendmsg
  7574                           
  7575                           ;my_i2c.c: 219: SSPCON2bits.ACKDT = 1;
  7576  0003FA  8AC5               	bsf	4037,5,c	;volatile
  7577                           
  7578                           ;my_i2c.c: 220: SSPCON2bits.ACKEN = 1;
  7579  0003FC  88C5               	bsf	4037,4,c	;volatile
  7580                           
  7581                           ;my_i2c.c: 221: } else {
  7582  0003FE  0012               	return	
  7583  000400                     i2l333:
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;my_i2c.c: 223: SSPCON2bits.ACKDT = 0;
  7587  000400  9AC5               	bcf	4037,5,c	;volatile
  7588                           
  7589                           ;my_i2c.c: 224: SSPCON2bits.ACKEN = 1;
  7590  000402  88C5               	bsf	4037,4,c	;volatile
  7591  000404  0012               	return	
  7592  000406                     i2l3674:
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;my_i2c.c: 230: {
  7596                           ;my_i2c.c: 231: ic_ptr->status = 0x5;
  7597  000406  0100               	movlb	0	; () banked
  7598  000408  EE20 F00D          	lfsr	2,13
  7599  00040C  0100               	movlb	0	; () banked
  7600  00040E  51CF               	movf	_ic_ptr& (0+255),w,b
  7601  000410  26D9               	addwf	fsr2l,f,c
  7602  000412  0100               	movlb	0	; () banked
  7603  000414  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7604  000416  22DA               	addwfc	fsr2h,f,c
  7605  000418  0E05               	movlw	5
  7606  00041A  6EDF               	movwf	indf2,c
  7607                           
  7608                           ; BSR set to: 0
  7609                           ;my_i2c.c: 232: i2c_master_recv(ic_ptr->buflen);
  7610  00041C  0100               	movlb	0	; () banked
  7611  00041E  EE20 F00A          	lfsr	2,10
  7612  000422  0100               	movlb	0	; () banked
  7613  000424  51CF               	movf	_ic_ptr& (0+255),w,b
  7614  000426  26D9               	addwf	fsr2l,f,c
  7615  000428  0100               	movlb	0	; () banked
  7616  00042A  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7617  00042C  22DA               	addwfc	fsr2h,f,c
  7618  00042E  50DF               	movf	indf2,w,c
  7619  000430  EC9F  F00B         	call	_i2c_master_recv
  7620                           
  7621                           ;my_i2c.c: 233: break;
  7622  000434  0012               	return	
  7623  000436                     i2l336:
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;my_i2c.c: 236: {
  7627                           ;my_i2c.c: 238: SSPCON2bits.PEN = 1;
  7628  000436  84C5               	bsf	4037,2,c	;volatile
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;my_i2c.c: 240: ic_ptr->status = 0x5;
  7632  000438  0100               	movlb	0	; () banked
  7633  00043A  EE20 F00D          	lfsr	2,13
  7634  00043E  0100               	movlb	0	; () banked
  7635  000440  51CF               	movf	_ic_ptr& (0+255),w,b
  7636  000442  26D9               	addwf	fsr2l,f,c
  7637  000444  0100               	movlb	0	; () banked
  7638  000446  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7639  000448  22DA               	addwfc	fsr2h,f,c
  7640  00044A  0E05               	movlw	5
  7641  00044C  6EDF               	movwf	indf2,c
  7642                           
  7643                           ;my_i2c.c: 241: break;
  7644  00044E  0012               	return	
  7645  000450                     i2l3682:
  7646                           
  7647                           ; BSR set to: 0
  7648  000450  0100               	movlb	0	; () banked
  7649  000452  EE20 F00D          	lfsr	2,13
  7650  000456  0100               	movlb	0	; () banked
  7651  000458  51CF               	movf	_ic_ptr& (0+255),w,b
  7652  00045A  26D9               	addwf	fsr2l,f,c
  7653  00045C  0100               	movlb	0	; () banked
  7654  00045E  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7655  000460  22DA               	addwfc	fsr2h,f,c
  7656  000462  50DF               	movf	indf2,w,c
  7657                           
  7658                           ; Switch size 1, requested type "space"
  7659                           ; Number of cases is 6, Range of values is 7 to 13
  7660                           ; switch strategies available:
  7661                           ; Name         Instructions Cycles
  7662                           ; simple_byte           19    10 (average)
  7663                           ;	Chosen strategy is simple_byte
  7664  000464  0A07               	xorlw	7	; case 7
  7665  000466  B4D8               	btfsc	status,2,c
  7666  000468  D6F9               	goto	i2l327
  7667  00046A  0A0E               	xorlw	14	; case 9
  7668  00046C  B4D8               	btfsc	status,2,c
  7669  00046E  D677               	goto	i2l322
  7670  000470  0A03               	xorlw	3	; case 10
  7671  000472  B4D8               	btfsc	status,2,c
  7672  000474  D638               	goto	i2l3624
  7673  000476  0A01               	xorlw	1	; case 11
  7674  000478  B4D8               	btfsc	status,2,c
  7675  00047A  D7DD               	goto	i2l336
  7676  00047C  0A07               	xorlw	7	; case 12
  7677  00047E  B4D8               	btfsc	status,2,c
  7678  000480  D734               	goto	i2l331
  7679  000482  0A01               	xorlw	1	; case 13
  7680  000484  A4D8               	btfss	status,2,c
  7681  000486  0012               	return	
  7682  000488  D7BE               	goto	i2l3674
  7683  00048A                     __end_of_i2c_master_int_handler:
  7684                           	opt stack 0
  7685                           pclatu	equ	0xFFB
  7686                           pclath	equ	0xFFA
  7687                           tblptru	equ	0xFF8
  7688                           tblptrh	equ	0xFF7
  7689                           tblptrl	equ	0xFF6
  7690                           tablat	equ	0xFF5
  7691                           prodh	equ	0xFF4
  7692                           prodl	equ	0xFF3
  7693                           intcon	equ	0xFF2
  7694                           intcon2	equ	0xFF1
  7695                           postinc0	equ	0xFEE
  7696                           fsr0h	equ	0xFEA
  7697                           fsr0l	equ	0xFE9
  7698                           wreg	equ	0xFE8
  7699                           indf1	equ	0xFE7
  7700                           postdec1	equ	0xFE5
  7701                           fsr1h	equ	0xFE2
  7702                           fsr1l	equ	0xFE1
  7703                           bsr	equ	0xFE0
  7704                           indf2	equ	0xFDF
  7705                           postinc2	equ	0xFDE
  7706                           postdec2	equ	0xFDD
  7707                           fsr2h	equ	0xFDA
  7708                           fsr2l	equ	0xFD9
  7709                           status	equ	0xFD8
  7710                           
  7711 ;; *************** function _i2c_master_recv *****************
  7712 ;; Defined at:
  7713 ;;		line 74 in file "../src/my_i2c.c"
  7714 ;; Parameters:    Size  Location     Type
  7715 ;;  length          1    wreg     unsigned char 
  7716 ;; Auto vars:     Size  Location     Type
  7717 ;;  length          1    0[BANK0 ] unsigned char 
  7718 ;; Return value:  Size  Location     Type
  7719 ;;                  1    wreg      unsigned char 
  7720 ;; Registers used:
  7721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7722 ;; Tracked objects:
  7723 ;;		On entry : 0/0
  7724 ;;		On exit  : 0/0
  7725 ;;		Unchanged: 0/0
  7726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7728 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7730 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7731 ;;Total ram usage:        1 bytes
  7732 ;; Hardware stack levels used:    1
  7733 ;; This function calls:
  7734 ;;		Nothing
  7735 ;; This function is called by:
  7736 ;;		_i2c_master_int_handler
  7737 ;; This function uses a non-reentrant model
  7738 ;;
  7739                           
  7740                           	psect	text47
  7741  00173E                     __ptext47:
  7742                           	opt stack 0
  7743  00173E                     _i2c_master_recv:
  7744                           	opt stack 18
  7745                           
  7746                           ;incstack = 0
  7747                           ;i2c_master_recv@length stored from wreg
  7748  00173E  CFE8 F060          	movff	wreg,i2c_master_recv@length
  7749                           
  7750                           ;my_i2c.c: 77: if(ic_ptr->status == 0x5){
  7751  001742  0100               	movlb	0	; () banked
  7752  001744  EE20 F00D          	lfsr	2,13
  7753  001748  0100               	movlb	0	; () banked
  7754  00174A  51CF               	movf	_ic_ptr& (0+255),w,b
  7755  00174C  26D9               	addwf	fsr2l,f,c
  7756  00174E  0100               	movlb	0	; () banked
  7757  001750  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7758  001752  22DA               	addwfc	fsr2h,f,c
  7759  001754  0E05               	movlw	5
  7760  001756  62DF               	cpfseq	indf2,c
  7761  001758  0012               	return	
  7762                           
  7763                           ; BSR set to: 0
  7764                           ;my_i2c.c: 78: ic_ptr->slave_addr |= 0x01;
  7765  00175A  0100               	movlb	0	; () banked
  7766  00175C  EE20 F01C          	lfsr	2,28
  7767  001760  0100               	movlb	0	; () banked
  7768  001762  51CF               	movf	_ic_ptr& (0+255),w,b
  7769  001764  26D9               	addwf	fsr2l,f,c
  7770  001766  0100               	movlb	0	; () banked
  7771  001768  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7772  00176A  22DA               	addwfc	fsr2h,f,c
  7773  00176C  0E00               	movlw	0
  7774  00176E  80DB               	bsf	plusw2,0,c
  7775                           
  7776                           ;my_i2c.c: 79: ic_ptr->buflen = length;
  7777  001770  0100               	movlb	0	; () banked
  7778  001772  EE20 F00A          	lfsr	2,10
  7779  001776  0100               	movlb	0	; () banked
  7780  001778  51CF               	movf	_ic_ptr& (0+255),w,b
  7781  00177A  26D9               	addwf	fsr2l,f,c
  7782  00177C  0100               	movlb	0	; () banked
  7783  00177E  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7784  001780  22DA               	addwfc	fsr2h,f,c
  7785  001782  0100               	movlb	0	; () banked
  7786  001784  C060  FFDF         	movff	i2c_master_recv@length,indf2
  7787                           
  7788                           ;my_i2c.c: 81: ic_ptr->status = 0xA;
  7789  001788  0100               	movlb	0	; () banked
  7790  00178A  EE20 F00D          	lfsr	2,13
  7791  00178E  0100               	movlb	0	; () banked
  7792  001790  51CF               	movf	_ic_ptr& (0+255),w,b
  7793  001792  26D9               	addwf	fsr2l,f,c
  7794  001794  0100               	movlb	0	; () banked
  7795  001796  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7796  001798  22DA               	addwfc	fsr2h,f,c
  7797  00179A  0E0A               	movlw	10
  7798  00179C  6EDF               	movwf	indf2,c
  7799                           
  7800                           ; BSR set to: 0
  7801                           ;my_i2c.c: 84: SSPCON2bits.RSEN = 1;
  7802  00179E  82C5               	bsf	4037,1,c	;volatile
  7803  0017A0  0012               	return	
  7804  0017A2                     __end_of_i2c_master_recv:
  7805                           	opt stack 0
  7806                           pclatu	equ	0xFFB
  7807                           pclath	equ	0xFFA
  7808                           tblptru	equ	0xFF8
  7809                           tblptrh	equ	0xFF7
  7810                           tblptrl	equ	0xFF6
  7811                           tablat	equ	0xFF5
  7812                           prodh	equ	0xFF4
  7813                           prodl	equ	0xFF3
  7814                           intcon	equ	0xFF2
  7815                           intcon2	equ	0xFF1
  7816                           postinc0	equ	0xFEE
  7817                           fsr0h	equ	0xFEA
  7818                           fsr0l	equ	0xFE9
  7819                           wreg	equ	0xFE8
  7820                           indf1	equ	0xFE7
  7821                           postdec1	equ	0xFE5
  7822                           fsr1h	equ	0xFE2
  7823                           fsr1l	equ	0xFE1
  7824                           bsr	equ	0xFE0
  7825                           indf2	equ	0xFDF
  7826                           postinc2	equ	0xFDE
  7827                           postdec2	equ	0xFDD
  7828                           plusw2	equ	0xFDB
  7829                           fsr2h	equ	0xFDA
  7830                           fsr2l	equ	0xFD9
  7831                           status	equ	0xFD8
  7832                           
  7833 ;; *************** function _ToMainHigh_sendmsg *****************
  7834 ;; Defined at:
  7835 ;;		line 126 in file "../src/messages.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;  length          1    wreg     unsigned char 
  7838 ;;  msgtype         1   22[BANK0 ] unsigned char 
  7839 ;;  data            2   23[BANK0 ] PTR void 
  7840 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), 
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;  length          1   25[BANK0 ] unsigned char 
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  1    wreg      char 
  7845 ;; Registers used:
  7846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7852 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7853 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7855 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7856 ;;Total ram usage:        4 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; Hardware stack levels required when called:    2
  7859 ;; This function calls:
  7860 ;;		i2_send_msg
  7861 ;; This function is called by:
  7862 ;;		_i2c_master_int_handler
  7863 ;;		_i2c_slave_int_handler
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           
  7867                           	psect	text48
  7868  001AD4                     __ptext48:
  7869                           	opt stack 0
  7870  001AD4                     _ToMainHigh_sendmsg:
  7871                           	opt stack 16
  7872                           
  7873                           ; BSR set to: 0
  7874                           ;incstack = 0
  7875                           ;ToMainHigh_sendmsg@length stored from wreg
  7876  001AD4  CFE8 F079          	movff	wreg,ToMainHigh_sendmsg@length
  7877                           
  7878                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7879                           ;	Return value of _ToMainHigh_sendmsg is never used
  7880  001AD8  0101               	movlb	1	; () banked
  7881  001ADA  0E01               	movlw	high _ToMainHigh_MQ
  7882  001ADC  0100               	movlb	0	; () banked
  7883  001ADE  0100               	movlb	0	; () banked
  7884  001AE0  6F6B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  7885  001AE2  0101               	movlb	1	; () banked
  7886  001AE4  0E00               	movlw	low _ToMainHigh_MQ
  7887  001AE6  0100               	movlb	0	; () banked
  7888  001AE8  0100               	movlb	0	; () banked
  7889  001AEA  6F6A               	movwf	i2send_msg@qptr& (0+255),b
  7890  001AEC  C079  F06C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7891  001AF0  C076  F06D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7892  001AF4  0100               	movlb	0	; () banked
  7893  001AF6  0100               	movlb	0	; () banked
  7894  001AF8  C078  F06F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7895  001AFC  0100               	movlb	0	; () banked
  7896  001AFE  0100               	movlb	0	; () banked
  7897  001B00  C077  F06E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7898  001B04  ECB6  F005         	call	i2_send_msg	;wreg free
  7899  001B08  0012               	return	
  7900  001B0A                     __end_of_ToMainHigh_sendmsg:
  7901                           	opt stack 0
  7902                           pclatu	equ	0xFFB
  7903                           pclath	equ	0xFFA
  7904                           tblptru	equ	0xFF8
  7905                           tblptrh	equ	0xFF7
  7906                           tblptrl	equ	0xFF6
  7907                           tablat	equ	0xFF5
  7908                           prodh	equ	0xFF4
  7909                           prodl	equ	0xFF3
  7910                           intcon	equ	0xFF2
  7911                           intcon2	equ	0xFF1
  7912                           postinc0	equ	0xFEE
  7913                           fsr0h	equ	0xFEA
  7914                           fsr0l	equ	0xFE9
  7915                           wreg	equ	0xFE8
  7916                           indf1	equ	0xFE7
  7917                           postdec1	equ	0xFE5
  7918                           fsr1h	equ	0xFE2
  7919                           fsr1l	equ	0xFE1
  7920                           bsr	equ	0xFE0
  7921                           indf2	equ	0xFDF
  7922                           postinc2	equ	0xFDE
  7923                           postdec2	equ	0xFDD
  7924                           plusw2	equ	0xFDB
  7925                           fsr2h	equ	0xFDA
  7926                           fsr2l	equ	0xFD9
  7927                           status	equ	0xFD8
  7928                           
  7929 ;; *************** function i2_send_msg *****************
  7930 ;; Defined at:
  7931 ;;		line 24 in file "../src/messages.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  7934 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  7935 ;;  length          1   12[BANK0 ] unsigned char 
  7936 ;;  msgtype         1   13[BANK0 ] unsigned char 
  7937 ;;  data            2   14[BANK0 ] PTR void 
  7938 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  7939 ;;		 -> main@uc(13), 
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  7942 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  7943 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  7944 ;;  send_msg        2   17[BANK0 ] unsigned int 
  7945 ;;  send_msg        1   19[BANK0 ] unsigned char 
  7946 ;; Return value:  Size  Location     Type
  7947 ;;                  1    wreg      char 
  7948 ;; Registers used:
  7949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7955 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7956 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7957 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7958 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7959 ;;Total ram usage:       12 bytes
  7960 ;; Hardware stack levels used:    1
  7961 ;; Hardware stack levels required when called:    1
  7962 ;; This function calls:
  7963 ;;		i2___awmod
  7964 ;;		i2_memcpy
  7965 ;; This function is called by:
  7966 ;;		_ToMainHigh_sendmsg
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970                           	psect	text49
  7971  000B6C                     __ptext49:
  7972                           	opt stack 0
  7973  000B6C                     i2_send_msg:
  7974                           	opt stack 16
  7975                           
  7976                           ;messages.c: 25: unsigned char slot;
  7977                           ;messages.c: 27: msg *qmsg;
  7978                           ;messages.c: 28: size_t tlength = length;
  7979                           
  7980                           ;incstack = 0
  7981  000B6C  0100               	movlb	0	; () banked
  7982  000B6E  0100               	movlb	0	; () banked
  7983  000B70  C06C  F071         	movff	i2send_msg@length,i2send_msg@tlength
  7984  000B74  0100               	movlb	0	; () banked
  7985  000B76  0100               	movlb	0	; () banked
  7986  000B78  6B72               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7990  000B7A  0100               	movlb	0	; () banked
  7991  000B7C  EE20 F041          	lfsr	2,65
  7992  000B80  0100               	movlb	0	; () banked
  7993  000B82  516A               	movf	i2send_msg@qptr& (0+255),w,b
  7994  000B84  26D9               	addwf	fsr2l,f,c
  7995  000B86  0100               	movlb	0	; () banked
  7996  000B88  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7997  000B8A  22DA               	addwfc	fsr2h,f,c
  7998  000B8C  50DF               	movf	indf2,w,c
  7999  000B8E  0100               	movlb	0	; () banked
  8000  000B90  0100               	movlb	0	; () banked
  8001  000B92  6F73               	movwf	i2send_msg@slot& (0+255),b
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8005  000B94  0100               	movlb	0	; () banked
  8006  000B96  0100               	movlb	0	; () banked
  8007  000B98  5173               	movf	i2send_msg@slot& (0+255),w,b
  8008  000B9A  0D0D               	mullw	13
  8009  000B9C  50F3               	movf	prodl,w,c
  8010  000B9E  0100               	movlb	0	; () banked
  8011  000BA0  0100               	movlb	0	; () banked
  8012  000BA2  256A               	addwf	i2send_msg@qptr& (0+255),w,b
  8013  000BA4  0100               	movlb	0	; () banked
  8014  000BA6  0100               	movlb	0	; () banked
  8015  000BA8  6F74               	movwf	i2send_msg@qmsg& (0+255),b
  8016  000BAA  50F4               	movf	prodh,w,c
  8017  000BAC  0100               	movlb	0	; () banked
  8018  000BAE  0100               	movlb	0	; () banked
  8019  000BB0  216B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8020  000BB2  0100               	movlb	0	; () banked
  8021  000BB4  6F75               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8022                           
  8023                           ; BSR set to: 0
  8024                           ;messages.c: 41: if (qmsg->full != 0) {
  8025  000BB6  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8026  000BBA  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8027  000BBE  50DF               	movf	indf2,w,c
  8028  000BC0  B4D8               	btfsc	status,2,c
  8029  000BC2  D002               	goto	i2l3892
  8030                           
  8031                           ; BSR set to: 0
  8032                           ;messages.c: 42: return (-1);
  8033  000BC4  0EFF               	movlw	255
  8034  000BC6  0012               	return	
  8035  000BC8                     i2l3892:
  8036                           
  8037                           ; BSR set to: 0
  8038                           ;messages.c: 43: }
  8039                           ;messages.c: 46: qmsg->length = length;
  8040  000BC8  0100               	movlb	0	; () banked
  8041  000BCA  EE20 F001          	lfsr	2,1
  8042  000BCE  0100               	movlb	0	; () banked
  8043  000BD0  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  8044  000BD2  26D9               	addwf	fsr2l,f,c
  8045  000BD4  0100               	movlb	0	; () banked
  8046  000BD6  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8047  000BD8  22DA               	addwfc	fsr2h,f,c
  8048  000BDA  0100               	movlb	0	; () banked
  8049  000BDC  C06C  FFDF         	movff	i2send_msg@length,indf2
  8050                           
  8051                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8052  000BE0  0100               	movlb	0	; () banked
  8053  000BE2  EE20 F002          	lfsr	2,2
  8054  000BE6  0100               	movlb	0	; () banked
  8055  000BE8  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  8056  000BEA  26D9               	addwf	fsr2l,f,c
  8057  000BEC  0100               	movlb	0	; () banked
  8058  000BEE  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8059  000BF0  22DA               	addwfc	fsr2h,f,c
  8060  000BF2  0100               	movlb	0	; () banked
  8061  000BF4  C06D  FFDF         	movff	i2send_msg@msgtype,indf2
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8065  000BF8  0E03               	movlw	3
  8066  000BFA  0100               	movlb	0	; () banked
  8067  000BFC  0100               	movlb	0	; () banked
  8068  000BFE  2574               	addwf	i2send_msg@qmsg& (0+255),w,b
  8069  000C00  0100               	movlb	0	; () banked
  8070  000C02  0100               	movlb	0	; () banked
  8071  000C04  6F60               	movwf	i2memcpy@d1& (0+255),b
  8072  000C06  0E00               	movlw	0
  8073  000C08  0100               	movlb	0	; () banked
  8074  000C0A  0100               	movlb	0	; () banked
  8075  000C0C  2175               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8076  000C0E  0100               	movlb	0	; () banked
  8077  000C10  6F61               	movwf	(i2memcpy@d1+1)& (0+255),b
  8078  000C12  0100               	movlb	0	; () banked
  8079  000C14  0100               	movlb	0	; () banked
  8080  000C16  C06F  F063         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8081  000C1A  0100               	movlb	0	; () banked
  8082  000C1C  0100               	movlb	0	; () banked
  8083  000C1E  C06E  F062         	movff	i2send_msg@data,i2memcpy@s1
  8084  000C22  C071  F064         	movff	i2send_msg@tlength,i2memcpy@n
  8085  000C26  C072  F065         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8086  000C2A  EC00  F00C         	call	i2_memcpy	;wreg free
  8087                           
  8088                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  8089  000C2E  0100               	movlb	0	; () banked
  8090  000C30  EE20 F041          	lfsr	2,65
  8091  000C34  0100               	movlb	0	; () banked
  8092  000C36  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8093  000C38  26D9               	addwf	fsr2l,f,c
  8094  000C3A  0100               	movlb	0	; () banked
  8095  000C3C  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8096  000C3E  22DA               	addwfc	fsr2h,f,c
  8097  000C40  0100               	movlb	0	; () banked
  8098  000C42  EE10 F041          	lfsr	1,65
  8099  000C46  0100               	movlb	0	; () banked
  8100  000C48  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8101  000C4A  26E1               	addwf	fsr1l,f,c
  8102  000C4C  0100               	movlb	0	; () banked
  8103  000C4E  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8104  000C50  22E2               	addwfc	fsr1h,f,c
  8105  000C52  50E7               	movf	indf1,w,c
  8106  000C54  0100               	movlb	0	; () banked
  8107  000C56  6F70               	movwf	??i2_send_msg& (0+255),b
  8108  000C58  0E01               	movlw	1
  8109  000C5A  0100               	movlb	0	; () banked
  8110  000C5C  2570               	addwf	??i2_send_msg& (0+255),w,b
  8111  000C5E  0100               	movlb	0	; () banked
  8112  000C60  0100               	movlb	0	; () banked
  8113  000C62  6F60               	movwf	i2___awmod@dividend& (0+255),b
  8114  000C64  0100               	movlb	0	; () banked
  8115  000C66  0100               	movlb	0	; () banked
  8116  000C68  6B61               	clrf	(i2___awmod@dividend+1)& (0+255),b
  8117  000C6A  0E00               	movlw	0
  8118  000C6C  2361               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  8119  000C6E  0E00               	movlw	0
  8120  000C70  0100               	movlb	0	; () banked
  8121  000C72  0100               	movlb	0	; () banked
  8122  000C74  6F63               	movwf	(i2___awmod@divisor+1)& (0+255),b
  8123  000C76  0E05               	movlw	5
  8124  000C78  0100               	movlb	0	; () banked
  8125  000C7A  6F62               	movwf	i2___awmod@divisor& (0+255),b
  8126  000C7C  ECD3  F006         	call	i2___awmod	;wreg free
  8127  000C80  0100               	movlb	0	; () banked
  8128  000C82  0100               	movlb	0	; () banked
  8129  000C84  5160               	movf	?i2___awmod& (0+255),w,b
  8130  000C86  6EDF               	movwf	indf2,c
  8131                           
  8132                           ; BSR set to: 0
  8133                           ;messages.c: 59: qmsg->full = 1;
  8134  000C88  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8135  000C8C  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8136  000C90  0E01               	movlw	1
  8137  000C92  6EDF               	movwf	indf2,c
  8138                           
  8139                           ; BSR set to: 0
  8140                           ;messages.c: 60: return (1);
  8141  000C94  0E01               	movlw	1
  8142  000C96  0012               	return	
  8143  000C98                     __end_ofi2_send_msg:
  8144                           	opt stack 0
  8145                           pclatu	equ	0xFFB
  8146                           pclath	equ	0xFFA
  8147                           tblptru	equ	0xFF8
  8148                           tblptrh	equ	0xFF7
  8149                           tblptrl	equ	0xFF6
  8150                           tablat	equ	0xFF5
  8151                           prodh	equ	0xFF4
  8152                           prodl	equ	0xFF3
  8153                           intcon	equ	0xFF2
  8154                           intcon2	equ	0xFF1
  8155                           postinc0	equ	0xFEE
  8156                           fsr0h	equ	0xFEA
  8157                           fsr0l	equ	0xFE9
  8158                           wreg	equ	0xFE8
  8159                           indf1	equ	0xFE7
  8160                           postdec1	equ	0xFE5
  8161                           fsr1h	equ	0xFE2
  8162                           fsr1l	equ	0xFE1
  8163                           bsr	equ	0xFE0
  8164                           indf2	equ	0xFDF
  8165                           postinc2	equ	0xFDE
  8166                           postdec2	equ	0xFDD
  8167                           plusw2	equ	0xFDB
  8168                           fsr2h	equ	0xFDA
  8169                           fsr2l	equ	0xFD9
  8170                           status	equ	0xFD8
  8171                           
  8172 ;; *************** function i2_memcpy *****************
  8173 ;; Defined at:
  8174 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;  d1              2    0[BANK0 ] PTR void 
  8177 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8178 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8179 ;;		 -> main@msgbuffer(11), 
  8180 ;;  s1              2    2[BANK0 ] PTR const void 
  8181 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8182 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8183 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  8184 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  8185 ;;		 -> main@uc(13), 
  8186 ;;  n               2    4[BANK0 ] unsigned int 
  8187 ;; Auto vars:     Size  Location     Type
  8188 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  8189 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8190 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8191 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  8192 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  8193 ;;		 -> main@uc(13), 
  8194 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  8195 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8196 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8197 ;;		 -> main@msgbuffer(11), 
  8198 ;; Return value:  Size  Location     Type
  8199 ;;                  2    0[BANK0 ] PTR void 
  8200 ;; Registers used:
  8201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8207 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8208 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8210 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8211 ;;Total ram usage:       10 bytes
  8212 ;; Hardware stack levels used:    1
  8213 ;; This function calls:
  8214 ;;		Nothing
  8215 ;; This function is called by:
  8216 ;;		i2_send_msg
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text50
  8221  001800                     __ptext50:
  8222                           	opt stack 0
  8223  001800                     i2_memcpy:
  8224                           	opt stack 16
  8225                           
  8226                           ; BSR set to: 0
  8227                           ;incstack = 0
  8228  001800  0100               	movlb	0	; () banked
  8229  001802  0100               	movlb	0	; () banked
  8230  001804  C063  F069         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8231  001808  0100               	movlb	0	; () banked
  8232  00180A  0100               	movlb	0	; () banked
  8233  00180C  C062  F068         	movff	i2memcpy@s1,i2memcpy@s
  8234  001810  0100               	movlb	0	; () banked
  8235  001812  0100               	movlb	0	; () banked
  8236  001814  C061  F067         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8237  001818  0100               	movlb	0	; () banked
  8238  00181A  0100               	movlb	0	; () banked
  8239  00181C  C060  F066         	movff	i2memcpy@d1,i2memcpy@d
  8240  001820  D012               	goto	i2l3916
  8241  001822                     i2l3910:
  8242                           
  8243                           ; BSR set to: 0
  8244  001822  C068  FFD9         	movff	i2memcpy@s,fsr2l
  8245  001826  C069  FFDA         	movff	i2memcpy@s+1,fsr2h
  8246  00182A  C066  FFE1         	movff	i2memcpy@d,fsr1l
  8247  00182E  C067  FFE2         	movff	i2memcpy@d+1,fsr1h
  8248  001832  CFDF FFE7          	movff	indf2,indf1
  8249                           
  8250                           ; BSR set to: 0
  8251  001836  0100               	movlb	0	; () banked
  8252  001838  0100               	movlb	0	; () banked
  8253  00183A  4B68               	infsnz	i2memcpy@s& (0+255),f,b
  8254  00183C  2B69               	incf	(i2memcpy@s+1)& (0+255),f,b
  8255                           
  8256                           ; BSR set to: 0
  8257  00183E  0100               	movlb	0	; () banked
  8258  001840  0100               	movlb	0	; () banked
  8259  001842  4B66               	infsnz	i2memcpy@d& (0+255),f,b
  8260  001844  2B67               	incf	(i2memcpy@d+1)& (0+255),f,b
  8261  001846                     i2l3916:
  8262                           
  8263                           ; BSR set to: 0
  8264  001846  0100               	movlb	0	; () banked
  8265  001848  0100               	movlb	0	; () banked
  8266  00184A  0764               	decf	i2memcpy@n& (0+255),f,b
  8267  00184C  A0D8               	btfss	status,0,c
  8268  00184E  0765               	decf	(i2memcpy@n+1)& (0+255),f,b
  8269  001850  0100               	movlb	0	; () banked
  8270  001852  2964               	incf	i2memcpy@n& (0+255),w,b
  8271  001854  B4D8               	btfsc	status,2,c
  8272  001856  2965               	incf	(i2memcpy@n+1)& (0+255),w,b
  8273  001858  B4D8               	btfsc	status,2,c
  8274                           
  8275                           ; BSR set to: 0
  8276                           
  8277                           ; BSR set to: 0
  8278                           ;	Return value of i2_memcpy is never used
  8279  00185A  0012               	return	
  8280  00185C  D7E2               	goto	i2l3910
  8281  00185E                     __end_ofi2_memcpy:
  8282                           	opt stack 0
  8283                           pclatu	equ	0xFFB
  8284                           pclath	equ	0xFFA
  8285                           tblptru	equ	0xFF8
  8286                           tblptrh	equ	0xFF7
  8287                           tblptrl	equ	0xFF6
  8288                           tablat	equ	0xFF5
  8289                           prodh	equ	0xFF4
  8290                           prodl	equ	0xFF3
  8291                           intcon	equ	0xFF2
  8292                           intcon2	equ	0xFF1
  8293                           postinc0	equ	0xFEE
  8294                           fsr0h	equ	0xFEA
  8295                           fsr0l	equ	0xFE9
  8296                           wreg	equ	0xFE8
  8297                           indf1	equ	0xFE7
  8298                           postdec1	equ	0xFE5
  8299                           fsr1h	equ	0xFE2
  8300                           fsr1l	equ	0xFE1
  8301                           bsr	equ	0xFE0
  8302                           indf2	equ	0xFDF
  8303                           postinc2	equ	0xFDE
  8304                           postdec2	equ	0xFDD
  8305                           plusw2	equ	0xFDB
  8306                           fsr2h	equ	0xFDA
  8307                           fsr2l	equ	0xFD9
  8308                           status	equ	0xFD8
  8309                           
  8310 ;; *************** function i2___awmod *****************
  8311 ;; Defined at:
  8312 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;  dividend        2    0[BANK0 ] int 
  8315 ;;  divisor         2    2[BANK0 ] int 
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;  __awmod         1    6[BANK0 ] unsigned char 
  8318 ;;  __awmod         1    5[BANK0 ] unsigned char 
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  2    0[BANK0 ] int 
  8321 ;; Registers used:
  8322 ;;		wreg, status,2, status,0, prodl
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8328 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8329 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8330 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8331 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8332 ;;Total ram usage:        7 bytes
  8333 ;; Hardware stack levels used:    1
  8334 ;; This function calls:
  8335 ;;		Nothing
  8336 ;; This function is called by:
  8337 ;;		i2_send_msg
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           	psect	text51
  8342  000DA6                     __ptext51:
  8343                           	opt stack 0
  8344  000DA6                     i2___awmod:
  8345                           	opt stack 16
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;incstack = 0
  8349  000DA6  0100               	movlb	0	; () banked
  8350  000DA8  6F64               	movwf	??i2___awmod& (0+255),b
  8351  000DAA  0E00               	movlw	0
  8352  000DAC  0100               	movlb	0	; () banked
  8353  000DAE  0100               	movlb	0	; () banked
  8354  000DB0  6F66               	movwf	i2___awmod@sign& (0+255),b
  8355  000DB2  0100               	movlb	0	; () banked
  8356  000DB4  5164               	movf	??i2___awmod& (0+255),w,b
  8357                           
  8358                           ; BSR set to: 0
  8359  000DB6  0100               	movlb	0	; () banked
  8360  000DB8  0100               	movlb	0	; () banked
  8361  000DBA  5161               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  8362  000DBC  0A80               	xorlw	128
  8363  000DBE  6EF3               	movwf	prodl,c
  8364  000DC0  0E80               	movlw	128
  8365  000DC2  5CF3               	subwf	prodl,w,c
  8366  000DC4  0E00               	movlw	0
  8367  000DC6  B4D8               	btfsc	status,2,c
  8368  000DC8  5D60               	subwf	i2___awmod@dividend& (0+255),w,b
  8369  000DCA  B0D8               	btfsc	status,0,c
  8370  000DCC  D00F               	goto	i2l3926
  8371                           
  8372                           ; BSR set to: 0
  8373  000DCE  0100               	movlb	0	; () banked
  8374  000DD0  0100               	movlb	0	; () banked
  8375  000DD2  6D60               	negf	i2___awmod@dividend& (0+255),b
  8376  000DD4  0100               	movlb	0	; () banked
  8377  000DD6  1F61               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  8378  000DD8  B0D8               	btfsc	status,0,c
  8379  000DDA  2B61               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  8380                           
  8381                           ; BSR set to: 0
  8382  000DDC  0100               	movlb	0	; () banked
  8383  000DDE  6F64               	movwf	??i2___awmod& (0+255),b
  8384  000DE0  0E01               	movlw	1
  8385  000DE2  0100               	movlb	0	; () banked
  8386  000DE4  0100               	movlb	0	; () banked
  8387  000DE6  6F66               	movwf	i2___awmod@sign& (0+255),b
  8388  000DE8  0100               	movlb	0	; () banked
  8389  000DEA  5164               	movf	??i2___awmod& (0+255),w,b
  8390  000DEC                     i2l3926:
  8391                           
  8392                           ; BSR set to: 0
  8393  000DEC  0100               	movlb	0	; () banked
  8394  000DEE  0100               	movlb	0	; () banked
  8395  000DF0  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8396  000DF2  0A80               	xorlw	128
  8397  000DF4  6EF3               	movwf	prodl,c
  8398  000DF6  0E80               	movlw	128
  8399  000DF8  5CF3               	subwf	prodl,w,c
  8400  000DFA  0E00               	movlw	0
  8401  000DFC  B4D8               	btfsc	status,2,c
  8402  000DFE  5D62               	subwf	i2___awmod@divisor& (0+255),w,b
  8403  000E00  B0D8               	btfsc	status,0,c
  8404  000E02  D007               	goto	i2l3930
  8405                           
  8406                           ; BSR set to: 0
  8407  000E04  0100               	movlb	0	; () banked
  8408  000E06  0100               	movlb	0	; () banked
  8409  000E08  6D62               	negf	i2___awmod@divisor& (0+255),b
  8410  000E0A  0100               	movlb	0	; () banked
  8411  000E0C  1F63               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  8412  000E0E  B0D8               	btfsc	status,0,c
  8413  000E10  2B63               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  8414  000E12                     i2l3930:
  8415                           
  8416                           ; BSR set to: 0
  8417  000E12  0100               	movlb	0	; () banked
  8418  000E14  0100               	movlb	0	; () banked
  8419  000E16  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8420  000E18  1162               	iorwf	i2___awmod@divisor& (0+255),w,b
  8421  000E1A  B4D8               	btfsc	status,2,c
  8422  000E1C  D03A               	goto	i2l3946
  8423                           
  8424                           ; BSR set to: 0
  8425  000E1E  0100               	movlb	0	; () banked
  8426  000E20  6F64               	movwf	??i2___awmod& (0+255),b
  8427  000E22  0E01               	movlw	1
  8428  000E24  0100               	movlb	0	; () banked
  8429  000E26  0100               	movlb	0	; () banked
  8430  000E28  6F65               	movwf	i2___awmod@counter& (0+255),b
  8431  000E2A  0100               	movlb	0	; () banked
  8432  000E2C  5164               	movf	??i2___awmod& (0+255),w,b
  8433  000E2E  D009               	goto	i2l3936
  8434  000E30                     i2l3934:
  8435                           
  8436                           ; BSR set to: 0
  8437  000E30  0100               	movlb	0	; () banked
  8438  000E32  0100               	movlb	0	; () banked
  8439  000E34  0100               	movlb	0	; () banked
  8440  000E36  90D8               	bcf	status,0,c
  8441  000E38  3762               	rlcf	i2___awmod@divisor& (0+255),f,b
  8442  000E3A  3763               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  8443  000E3C  0100               	movlb	0	; () banked
  8444  000E3E  0100               	movlb	0	; () banked
  8445  000E40  2B65               	incf	i2___awmod@counter& (0+255),f,b
  8446  000E42                     i2l3936:
  8447                           
  8448                           ; BSR set to: 0
  8449  000E42  0100               	movlb	0	; () banked
  8450  000E44  0100               	movlb	0	; () banked
  8451  000E46  AF63               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  8452  000E48  D7F3               	goto	i2l3934
  8453  000E4A                     i2l3938:
  8454                           
  8455                           ; BSR set to: 0
  8456  000E4A  0100               	movlb	0	; () banked
  8457  000E4C  0100               	movlb	0	; () banked
  8458  000E4E  5162               	movf	i2___awmod@divisor& (0+255),w,b
  8459  000E50  0100               	movlb	0	; () banked
  8460  000E52  0100               	movlb	0	; () banked
  8461  000E54  5D60               	subwf	i2___awmod@dividend& (0+255),w,b
  8462  000E56  0100               	movlb	0	; () banked
  8463  000E58  0100               	movlb	0	; () banked
  8464  000E5A  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8465  000E5C  0100               	movlb	0	; () banked
  8466  000E5E  0100               	movlb	0	; () banked
  8467  000E60  5961               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  8468  000E62  A0D8               	btfss	status,0,c
  8469  000E64  D00C               	goto	i2l3942
  8470                           
  8471                           ; BSR set to: 0
  8472  000E66  0100               	movlb	0	; () banked
  8473  000E68  0100               	movlb	0	; () banked
  8474  000E6A  5162               	movf	i2___awmod@divisor& (0+255),w,b
  8475  000E6C  0100               	movlb	0	; () banked
  8476  000E6E  0100               	movlb	0	; () banked
  8477  000E70  5F60               	subwf	i2___awmod@dividend& (0+255),f,b
  8478  000E72  0100               	movlb	0	; () banked
  8479  000E74  0100               	movlb	0	; () banked
  8480  000E76  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8481  000E78  0100               	movlb	0	; () banked
  8482  000E7A  0100               	movlb	0	; () banked
  8483  000E7C  5B61               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  8484  000E7E                     i2l3942:
  8485                           
  8486                           ; BSR set to: 0
  8487  000E7E  0100               	movlb	0	; () banked
  8488  000E80  0100               	movlb	0	; () banked
  8489  000E82  0100               	movlb	0	; () banked
  8490  000E84  90D8               	bcf	status,0,c
  8491  000E86  3363               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  8492  000E88  3362               	rrcf	i2___awmod@divisor& (0+255),f,b
  8493                           
  8494                           ; BSR set to: 0
  8495  000E8A  0100               	movlb	0	; () banked
  8496  000E8C  0100               	movlb	0	; () banked
  8497  000E8E  2F65               	decfsz	i2___awmod@counter& (0+255),f,b
  8498  000E90  D7DC               	goto	i2l3938
  8499  000E92                     i2l3946:
  8500                           
  8501                           ; BSR set to: 0
  8502  000E92  0100               	movlb	0	; () banked
  8503  000E94  0100               	movlb	0	; () banked
  8504  000E96  5166               	movf	i2___awmod@sign& (0+255),w,b
  8505  000E98  B4D8               	btfsc	status,2,c
  8506  000E9A  D007               	goto	i2l3950
  8507                           
  8508                           ; BSR set to: 0
  8509  000E9C  0100               	movlb	0	; () banked
  8510  000E9E  0100               	movlb	0	; () banked
  8511  000EA0  6D60               	negf	i2___awmod@dividend& (0+255),b
  8512  000EA2  0100               	movlb	0	; () banked
  8513  000EA4  1F61               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  8514  000EA6  B0D8               	btfsc	status,0,c
  8515  000EA8  2B61               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  8516  000EAA                     i2l3950:
  8517                           
  8518                           ; BSR set to: 0
  8519  000EAA  C060  F060         	movff	i2___awmod@dividend,?i2___awmod
  8520  000EAE  C061  F061         	movff	i2___awmod@dividend+1,?i2___awmod+1
  8521  000EB2  0012               	return	
  8522  000EB4                     __end_ofi2___awmod:
  8523                           	opt stack 0
  8524                           pclatu	equ	0xFFB
  8525                           pclath	equ	0xFFA
  8526                           tblptru	equ	0xFF8
  8527                           tblptrh	equ	0xFF7
  8528                           tblptrl	equ	0xFF6
  8529                           tablat	equ	0xFF5
  8530                           prodh	equ	0xFF4
  8531                           prodl	equ	0xFF3
  8532                           intcon	equ	0xFF2
  8533                           intcon2	equ	0xFF1
  8534                           postinc0	equ	0xFEE
  8535                           fsr0h	equ	0xFEA
  8536                           fsr0l	equ	0xFE9
  8537                           wreg	equ	0xFE8
  8538                           indf1	equ	0xFE7
  8539                           postdec1	equ	0xFE5
  8540                           fsr1h	equ	0xFE2
  8541                           fsr1l	equ	0xFE1
  8542                           bsr	equ	0xFE0
  8543                           indf2	equ	0xFDF
  8544                           postinc2	equ	0xFDE
  8545                           postdec2	equ	0xFDD
  8546                           plusw2	equ	0xFDB
  8547                           fsr2h	equ	0xFDA
  8548                           fsr2l	equ	0xFD9
  8549                           status	equ	0xFD8
  8550                           
  8551 ;; *************** function _SleepIfOkay *****************
  8552 ;; Defined at:
  8553 ;;		line 228 in file "../src/messages.c"
  8554 ;; Parameters:    Size  Location     Type
  8555 ;;		None
  8556 ;; Auto vars:     Size  Location     Type
  8557 ;;		None
  8558 ;; Return value:  Size  Location     Type
  8559 ;;		None               void
  8560 ;; Registers used:
  8561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8571 ;;Total ram usage:        0 bytes
  8572 ;; Hardware stack levels used:    1
  8573 ;; Hardware stack levels required when called:    2
  8574 ;; This function calls:
  8575 ;;		_enter_sleep_mode
  8576 ;;		i2_check_msg
  8577 ;;		i2_in_high_int
  8578 ;;		i2_in_low_int
  8579 ;; This function is called by:
  8580 ;;		_InterruptHandlerHigh
  8581 ;; This function uses a non-reentrant model
  8582 ;;
  8583                           
  8584                           	psect	text52
  8585  00166C                     __ptext52:
  8586                           	opt stack 0
  8587  00166C                     _SleepIfOkay:
  8588                           	opt stack 18
  8589                           
  8590                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;incstack = 0
  8594  00166C  663B               	tstfsz	_MQ_Main_Willing_to_block,c
  8595  00166E  D001               	goto	i2l3586
  8596  001670  0012               	return	
  8597  001672                     i2l3586:
  8598                           
  8599                           ;messages.c: 232: }
  8600                           ;messages.c: 235: if (in_low_int()) {
  8601  001672  EC52  F00C         	call	i2_in_low_int	;wreg free
  8602  001676  0100               	movlb	0	; () banked
  8603  001678  0100               	movlb	0	; () banked
  8604  00167A  5163               	movf	(?i2_in_low_int+1)& (0+255),w,b
  8605  00167C  0100               	movlb	0	; () banked
  8606  00167E  1162               	iorwf	?i2_in_low_int& (0+255),w,b
  8607  001680  A4D8               	btfss	status,2,c
  8608  001682  0012               	return	
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;messages.c: 237: }
  8612                           ;messages.c: 240: if (!in_high_int()) {
  8613                           
  8614                           ; BSR set to: 0
  8615                           
  8616                           ; BSR set to: 0
  8617                           ;messages.c: 236: return;
  8618  001684  EC4A  F00E         	call	i2_in_high_int	;wreg free
  8619  001688  0100               	movlb	0	; () banked
  8620  00168A  0100               	movlb	0	; () banked
  8621  00168C  5161               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8622  00168E  0100               	movlb	0	; () banked
  8623  001690  1160               	iorwf	?i2_in_high_int& (0+255),w,b
  8624  001692  B4D8               	btfsc	status,2,c
  8625  001694  0012               	return	
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;messages.c: 242: }
  8629                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8630                           
  8631                           ; BSR set to: 0
  8632                           
  8633                           ; BSR set to: 0
  8634                           ;messages.c: 241: return;
  8635  001696  0101               	movlb	1	; () banked
  8636  001698  0E01               	movlw	high _ToMainHigh_MQ
  8637  00169A  0100               	movlb	0	; () banked
  8638  00169C  0100               	movlb	0	; () banked
  8639  00169E  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8640  0016A0  0101               	movlb	1	; () banked
  8641  0016A2  0E00               	movlw	low _ToMainHigh_MQ
  8642  0016A4  0100               	movlb	0	; () banked
  8643  0016A6  0100               	movlb	0	; () banked
  8644  0016A8  6F60               	movwf	i2check_msg@qptr& (0+255),b
  8645  0016AA  EC85  F00D         	call	i2_check_msg	;wreg free
  8646  0016AE  0900               	iorlw	0
  8647  0016B0  A4D8               	btfss	status,2,c
  8648  0016B2  0012               	return	
  8649                           
  8650                           ;messages.c: 249: }
  8651                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8652                           
  8653                           ;messages.c: 248: return;
  8654  0016B4  0101               	movlb	1	; () banked
  8655  0016B6  0E01               	movlw	high _ToMainLow_MQ
  8656  0016B8  0100               	movlb	0	; () banked
  8657  0016BA  0100               	movlb	0	; () banked
  8658  0016BC  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8659  0016BE  0101               	movlb	1	; () banked
  8660  0016C0  0E43               	movlw	low _ToMainLow_MQ
  8661  0016C2  0100               	movlb	0	; () banked
  8662  0016C4  0100               	movlb	0	; () banked
  8663  0016C6  6F60               	movwf	i2check_msg@qptr& (0+255),b
  8664  0016C8  EC85  F00D         	call	i2_check_msg	;wreg free
  8665  0016CC  0900               	iorlw	0
  8666  0016CE  B4D8               	btfsc	status,2,c
  8667                           
  8668                           ;messages.c: 252: }
  8669                           ;messages.c: 253: enter_sleep_mode();
  8670                           
  8671                           ;messages.c: 251: return;
  8672  0016D0  EC67  F00E         	call	_enter_sleep_mode	;wreg free
  8673  0016D4  0012               	return	
  8674  0016D6                     __end_of_SleepIfOkay:
  8675                           	opt stack 0
  8676                           pclatu	equ	0xFFB
  8677                           pclath	equ	0xFFA
  8678                           tblptru	equ	0xFF8
  8679                           tblptrh	equ	0xFF7
  8680                           tblptrl	equ	0xFF6
  8681                           tablat	equ	0xFF5
  8682                           prodh	equ	0xFF4
  8683                           prodl	equ	0xFF3
  8684                           intcon	equ	0xFF2
  8685                           intcon2	equ	0xFF1
  8686                           postinc0	equ	0xFEE
  8687                           fsr0h	equ	0xFEA
  8688                           fsr0l	equ	0xFE9
  8689                           wreg	equ	0xFE8
  8690                           indf1	equ	0xFE7
  8691                           postdec1	equ	0xFE5
  8692                           fsr1h	equ	0xFE2
  8693                           fsr1l	equ	0xFE1
  8694                           bsr	equ	0xFE0
  8695                           indf2	equ	0xFDF
  8696                           postinc2	equ	0xFDE
  8697                           postdec2	equ	0xFDD
  8698                           plusw2	equ	0xFDB
  8699                           fsr2h	equ	0xFDA
  8700                           fsr2l	equ	0xFD9
  8701                           status	equ	0xFD8
  8702                           
  8703 ;; *************** function i2_in_low_int *****************
  8704 ;; Defined at:
  8705 ;;		line 31 in file "../src/interrupts.c"
  8706 ;; Parameters:    Size  Location     Type
  8707 ;;		None
  8708 ;; Auto vars:     Size  Location     Type
  8709 ;;		None
  8710 ;; Return value:  Size  Location     Type
  8711 ;;                  2    2[BANK0 ] int 
  8712 ;; Registers used:
  8713 ;;		wreg, status,2, status,0, cstack
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8719 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8722 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8723 ;;Total ram usage:        2 bytes
  8724 ;; Hardware stack levels used:    1
  8725 ;; Hardware stack levels required when called:    1
  8726 ;; This function calls:
  8727 ;;		i2_in_high_int
  8728 ;; This function is called by:
  8729 ;;		_SleepIfOkay
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           	psect	text53
  8734  0018A4                     __ptext53:
  8735                           	opt stack 0
  8736  0018A4                     i2_in_low_int:
  8737                           	opt stack 18
  8738                           
  8739                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  8740                           
  8741                           ;incstack = 0
  8742  0018A4  ACF2               	btfss	intcon,6,c	;volatile
  8743  0018A6  D008               	goto	i2l3868
  8744                           
  8745                           ;interrupts.c: 33: return (0);
  8746  0018A8  0E00               	movlw	0
  8747  0018AA  0100               	movlb	0	; () banked
  8748  0018AC  0100               	movlb	0	; () banked
  8749  0018AE  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8750  0018B0  0E00               	movlw	0
  8751  0018B2  0100               	movlb	0	; () banked
  8752  0018B4  6F62               	movwf	?i2_in_low_int& (0+255),b
  8753  0018B6  0012               	return	
  8754  0018B8                     i2l3868:
  8755  0018B8  EC4A  F00E         	call	i2_in_high_int	;wreg free
  8756  0018BC  0100               	movlb	0	; () banked
  8757  0018BE  0100               	movlb	0	; () banked
  8758  0018C0  5161               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8759  0018C2  0100               	movlb	0	; () banked
  8760  0018C4  1160               	iorwf	?i2_in_high_int& (0+255),w,b
  8761  0018C6  B4D8               	btfsc	status,2,c
  8762  0018C8  D008               	goto	i2l3876
  8763                           
  8764                           ; BSR set to: 0
  8765                           ;interrupts.c: 35: return (0);
  8766  0018CA  0E00               	movlw	0
  8767  0018CC  0100               	movlb	0	; () banked
  8768  0018CE  0100               	movlb	0	; () banked
  8769  0018D0  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8770  0018D2  0E00               	movlw	0
  8771  0018D4  0100               	movlb	0	; () banked
  8772  0018D6  6F62               	movwf	?i2_in_low_int& (0+255),b
  8773  0018D8  0012               	return	
  8774  0018DA                     i2l3876:
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;interrupts.c: 37: return (1);
  8778  0018DA  0E00               	movlw	0
  8779  0018DC  0100               	movlb	0	; () banked
  8780  0018DE  0100               	movlb	0	; () banked
  8781  0018E0  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8782  0018E2  0E01               	movlw	1
  8783  0018E4  0100               	movlb	0	; () banked
  8784  0018E6  6F62               	movwf	?i2_in_low_int& (0+255),b
  8785  0018E8  0012               	return	
  8786  0018EA                     __end_ofi2_in_low_int:
  8787                           	opt stack 0
  8788                           pclatu	equ	0xFFB
  8789                           pclath	equ	0xFFA
  8790                           tblptru	equ	0xFF8
  8791                           tblptrh	equ	0xFF7
  8792                           tblptrl	equ	0xFF6
  8793                           tablat	equ	0xFF5
  8794                           prodh	equ	0xFF4
  8795                           prodl	equ	0xFF3
  8796                           intcon	equ	0xFF2
  8797                           intcon2	equ	0xFF1
  8798                           postinc0	equ	0xFEE
  8799                           fsr0h	equ	0xFEA
  8800                           fsr0l	equ	0xFE9
  8801                           wreg	equ	0xFE8
  8802                           indf1	equ	0xFE7
  8803                           postdec1	equ	0xFE5
  8804                           fsr1h	equ	0xFE2
  8805                           fsr1l	equ	0xFE1
  8806                           bsr	equ	0xFE0
  8807                           indf2	equ	0xFDF
  8808                           postinc2	equ	0xFDE
  8809                           postdec2	equ	0xFDD
  8810                           plusw2	equ	0xFDB
  8811                           fsr2h	equ	0xFDA
  8812                           fsr2l	equ	0xFD9
  8813                           status	equ	0xFD8
  8814                           
  8815 ;; *************** function i2_in_high_int *****************
  8816 ;; Defined at:
  8817 ;;		line 23 in file "../src/interrupts.c"
  8818 ;; Parameters:    Size  Location     Type
  8819 ;;		None
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;		None
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  2    0[BANK0 ] int 
  8824 ;; Registers used:
  8825 ;;		wreg, status,2
  8826 ;; Tracked objects:
  8827 ;;		On entry : 0/0
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8831 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8834 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8835 ;;Total ram usage:        2 bytes
  8836 ;; Hardware stack levels used:    1
  8837 ;; This function calls:
  8838 ;;		Nothing
  8839 ;; This function is called by:
  8840 ;;		_SleepIfOkay
  8841 ;;		i2_in_low_int
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845                           	psect	text54
  8846  001C94                     __ptext54:
  8847                           	opt stack 0
  8848  001C94                     i2_in_high_int:
  8849                           	opt stack 18
  8850                           
  8851                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;incstack = 0
  8855  001C94  0E00               	movlw	0
  8856  001C96  AEF2               	btfss	intcon,7,c	;volatile
  8857  001C98  0E01               	movlw	1
  8858  001C9A  0100               	movlb	0	; () banked
  8859  001C9C  0100               	movlb	0	; () banked
  8860  001C9E  6F60               	movwf	?i2_in_high_int& (0+255),b
  8861  001CA0  0100               	movlb	0	; () banked
  8862  001CA2  6B61               	clrf	(?i2_in_high_int+1)& (0+255),b
  8863  001CA4  0012               	return	
  8864  001CA6                     __end_ofi2_in_high_int:
  8865                           	opt stack 0
  8866                           pclatu	equ	0xFFB
  8867                           pclath	equ	0xFFA
  8868                           tblptru	equ	0xFF8
  8869                           tblptrh	equ	0xFF7
  8870                           tblptrl	equ	0xFF6
  8871                           tablat	equ	0xFF5
  8872                           prodh	equ	0xFF4
  8873                           prodl	equ	0xFF3
  8874                           intcon	equ	0xFF2
  8875                           intcon2	equ	0xFF1
  8876                           postinc0	equ	0xFEE
  8877                           fsr0h	equ	0xFEA
  8878                           fsr0l	equ	0xFE9
  8879                           wreg	equ	0xFE8
  8880                           indf1	equ	0xFE7
  8881                           postdec1	equ	0xFE5
  8882                           fsr1h	equ	0xFE2
  8883                           fsr1l	equ	0xFE1
  8884                           bsr	equ	0xFE0
  8885                           indf2	equ	0xFDF
  8886                           postinc2	equ	0xFDE
  8887                           postdec2	equ	0xFDD
  8888                           plusw2	equ	0xFDB
  8889                           fsr2h	equ	0xFDA
  8890                           fsr2l	equ	0xFD9
  8891                           status	equ	0xFD8
  8892                           
  8893 ;; *************** function i2_check_msg *****************
  8894 ;; Defined at:
  8895 ;;		line 222 in file "../src/messages.c"
  8896 ;; Parameters:    Size  Location     Type
  8897 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  8898 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;		None
  8901 ;; Return value:  Size  Location     Type
  8902 ;;                  1    wreg      unsigned char 
  8903 ;; Registers used:
  8904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8905 ;; Tracked objects:
  8906 ;;		On entry : 0/0
  8907 ;;		On exit  : 0/0
  8908 ;;		Unchanged: 0/0
  8909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8910 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8912 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8913 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8914 ;;Total ram usage:        3 bytes
  8915 ;; Hardware stack levels used:    1
  8916 ;; This function calls:
  8917 ;;		Nothing
  8918 ;; This function is called by:
  8919 ;;		_SleepIfOkay
  8920 ;; This function uses a non-reentrant model
  8921 ;;
  8922                           
  8923                           	psect	text55
  8924  001B0A                     __ptext55:
  8925                           	opt stack 0
  8926  001B0A                     i2_check_msg:
  8927                           	opt stack 19
  8928                           
  8929                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8930                           
  8931                           ; BSR set to: 0
  8932                           ;incstack = 0
  8933  001B0A  0100               	movlb	0	; () banked
  8934  001B0C  EE20 F042          	lfsr	2,66
  8935  001B10  0100               	movlb	0	; () banked
  8936  001B12  5160               	movf	i2check_msg@qptr& (0+255),w,b
  8937  001B14  26D9               	addwf	fsr2l,f,c
  8938  001B16  0100               	movlb	0	; () banked
  8939  001B18  5161               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  8940  001B1A  22DA               	addwfc	fsr2h,f,c
  8941  001B1C  50DF               	movf	indf2,w,c
  8942  001B1E  0100               	movlb	0	; () banked
  8943  001B20  6F62               	movwf	??i2_check_msg& (0+255),b
  8944  001B22  0100               	movlb	0	; () banked
  8945  001B24  5162               	movf	??i2_check_msg& (0+255),w,b
  8946  001B26  0D0D               	mullw	13
  8947  001B28  50F3               	movf	prodl,w,c
  8948  001B2A  0100               	movlb	0	; () banked
  8949  001B2C  0100               	movlb	0	; () banked
  8950  001B2E  2560               	addwf	i2check_msg@qptr& (0+255),w,b
  8951  001B30  6ED9               	movwf	fsr2l,c
  8952  001B32  50F4               	movf	prodh,w,c
  8953  001B34  0100               	movlb	0	; () banked
  8954  001B36  0100               	movlb	0	; () banked
  8955  001B38  2161               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  8956  001B3A  6EDA               	movwf	fsr2h,c
  8957  001B3C  50DF               	movf	indf2,w,c
  8958  001B3E  0012               	return	
  8959  001B40                     __end_ofi2_check_msg:
  8960                           	opt stack 0
  8961                           pclatu	equ	0xFFB
  8962                           pclath	equ	0xFFA
  8963                           tblptru	equ	0xFF8
  8964                           tblptrh	equ	0xFF7
  8965                           tblptrl	equ	0xFF6
  8966                           tablat	equ	0xFF5
  8967                           prodh	equ	0xFF4
  8968                           prodl	equ	0xFF3
  8969                           intcon	equ	0xFF2
  8970                           intcon2	equ	0xFF1
  8971                           postinc0	equ	0xFEE
  8972                           fsr0h	equ	0xFEA
  8973                           fsr0l	equ	0xFE9
  8974                           wreg	equ	0xFE8
  8975                           indf1	equ	0xFE7
  8976                           postdec1	equ	0xFE5
  8977                           fsr1h	equ	0xFE2
  8978                           fsr1l	equ	0xFE1
  8979                           bsr	equ	0xFE0
  8980                           indf2	equ	0xFDF
  8981                           postinc2	equ	0xFDE
  8982                           postdec2	equ	0xFDD
  8983                           plusw2	equ	0xFDB
  8984                           fsr2h	equ	0xFDA
  8985                           fsr2l	equ	0xFD9
  8986                           status	equ	0xFD8
  8987                           
  8988 ;; *************** function _enter_sleep_mode *****************
  8989 ;; Defined at:
  8990 ;;		line 202 in file "../src/messages.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;		None
  8993 ;; Auto vars:     Size  Location     Type
  8994 ;;		None
  8995 ;; Return value:  Size  Location     Type
  8996 ;;		None               void
  8997 ;; Registers used:
  8998 ;;		None
  8999 ;; Tracked objects:
  9000 ;;		On entry : 0/0
  9001 ;;		On exit  : 0/0
  9002 ;;		Unchanged: 0/0
  9003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9008 ;;Total ram usage:        0 bytes
  9009 ;; Hardware stack levels used:    1
  9010 ;; This function calls:
  9011 ;;		Nothing
  9012 ;; This function is called by:
  9013 ;;		_SleepIfOkay
  9014 ;; This function uses a non-reentrant model
  9015 ;;
  9016                           
  9017                           	psect	text56
  9018  001CCE                     __ptext56:
  9019                           	opt stack 0
  9020  001CCE                     _enter_sleep_mode:
  9021                           	opt stack 19
  9022                           
  9023                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9024                           
  9025                           ; BSR set to: 0
  9026                           ;incstack = 0
  9027  001CCE  8ED3               	bsf	4051,7,c	;volatile
  9028  001CD0  0003               	sleep		;# 
  9029  001CD2  0012               	return	
  9030  001CD4                     __end_of_enter_sleep_mode:
  9031                           	opt stack 0
  9032  0000                     pclatu	equ	0xFFB
  9033                           pclath	equ	0xFFA
  9034                           tblptru	equ	0xFF8
  9035                           tblptrh	equ	0xFF7
  9036                           tblptrl	equ	0xFF6
  9037                           tablat	equ	0xFF5
  9038                           prodh	equ	0xFF4
  9039                           prodl	equ	0xFF3
  9040                           intcon	equ	0xFF2
  9041                           intcon2	equ	0xFF1
  9042                           postinc0	equ	0xFEE
  9043                           fsr0h	equ	0xFEA
  9044                           fsr0l	equ	0xFE9
  9045                           wreg	equ	0xFE8
  9046                           indf1	equ	0xFE7
  9047                           postdec1	equ	0xFE5
  9048                           fsr1h	equ	0xFE2
  9049                           fsr1l	equ	0xFE1
  9050                           bsr	equ	0xFE0
  9051                           indf2	equ	0xFDF
  9052                           postinc2	equ	0xFDE
  9053                           postdec2	equ	0xFDD
  9054                           plusw2	equ	0xFDB
  9055                           fsr2h	equ	0xFDA
  9056                           fsr2l	equ	0xFD9
  9057                           status	equ	0xFD8
  9058                           pclatu	equ	0xFFB
  9059                           pclath	equ	0xFFA
  9060                           tblptru	equ	0xFF8
  9061                           tblptrh	equ	0xFF7
  9062                           tblptrl	equ	0xFF6
  9063                           tablat	equ	0xFF5
  9064                           prodh	equ	0xFF4
  9065                           prodl	equ	0xFF3
  9066                           intcon	equ	0xFF2
  9067                           intcon2	equ	0xFF1
  9068                           postinc0	equ	0xFEE
  9069                           fsr0h	equ	0xFEA
  9070                           fsr0l	equ	0xFE9
  9071                           wreg	equ	0xFE8
  9072                           indf1	equ	0xFE7
  9073                           postdec1	equ	0xFE5
  9074                           fsr1h	equ	0xFE2
  9075                           fsr1l	equ	0xFE1
  9076                           bsr	equ	0xFE0
  9077                           indf2	equ	0xFDF
  9078                           postinc2	equ	0xFDE
  9079                           postdec2	equ	0xFDD
  9080                           plusw2	equ	0xFDB
  9081                           fsr2h	equ	0xFDA
  9082                           fsr2l	equ	0xFD9
  9083                           status	equ	0xFD8
  9084                           
  9085                           	psect	param0
  9086  0000                     pclatu	equ	0xFFB
  9087                           pclath	equ	0xFFA
  9088                           tblptru	equ	0xFF8
  9089                           tblptrh	equ	0xFF7
  9090                           tblptrl	equ	0xFF6
  9091                           tablat	equ	0xFF5
  9092                           prodh	equ	0xFF4
  9093                           prodl	equ	0xFF3
  9094                           intcon	equ	0xFF2
  9095                           intcon2	equ	0xFF1
  9096                           postinc0	equ	0xFEE
  9097                           fsr0h	equ	0xFEA
  9098                           fsr0l	equ	0xFE9
  9099                           wreg	equ	0xFE8
  9100                           indf1	equ	0xFE7
  9101                           postdec1	equ	0xFE5
  9102                           fsr1h	equ	0xFE2
  9103                           fsr1l	equ	0xFE1
  9104                           bsr	equ	0xFE0
  9105                           indf2	equ	0xFDF
  9106                           postinc2	equ	0xFDE
  9107                           postdec2	equ	0xFDD
  9108                           plusw2	equ	0xFDB
  9109                           fsr2h	equ	0xFDA
  9110                           fsr2l	equ	0xFD9
  9111                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         300
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      62
    BANK0           160     83     113
    BANK1           256     64     202
    BANK2           256      0     134
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_trans@data	PTR unsigned char  size(2) Largest target is 11
		 -> i2c_slave_int_handler@motorcomm(COMRAM[2]), main@msgbuffer(BANK1[11]), main@motorcomm(BANK1[2]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 13
		 -> main@uc(BANK1[13]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK1[29]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK1[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), main@ic(BANK1[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _timer0_int_handler->_WriteTimer0
    _i2c_int_handler->_i2c_master_int_handler
    _i2c_master_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                70    70      0   10452
                                             81 BANK0      2     2      0
                                              0 BANK1     64    64      0
                         _Open1USART
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
               _i2c_configure_master
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                         _uart_trans
 ---------------------------------------------------------------------------------
 (1) _uart_trans                                           5     3      2     256
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2551
                                             71 BANK0     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     211
                                             45 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2039
                                             67 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1867
                                             55 BANK0     12     6      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             45 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             49 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      7     3      4     428
                                             45 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             51 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             49 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             47 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2269
                                             69 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2269
                                             69 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2097
                                             55 BANK0     14     7      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     438
                                             45 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     456
                                             45 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      22
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     119
                                             45 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              7     4      3     282
                                             45 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     273
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    3141
                                             27 COMRAM    17    17      0
                    _adc_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3053
                                             26 COMRAM     1     1      0
                         _Read1USART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    3030
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2752
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     809
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _Read1USART                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   0     0      0      88
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    4430
                                             31 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  0     0      0     121
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    4025
             _i2c_master_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_master_int_handler                              5     5      0    4025
                                             26 BANK0      5     5      0
                 _ToMainHigh_sendmsg
                    _i2c_master_recv
 ---------------------------------------------------------------------------------
 (13) _i2c_master_recv                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    3994
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    3381
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           7     3      4    1034
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open1USART
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_master
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
   _uart_trans

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
   _timer1_int_handler
     _WriteTimer1
   _uart_recv_int_handler
     _Read1USART
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_trans_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_master_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2___awmod
           i2_memcpy
       _i2c_master_recv
   _timer0_int_handler
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      86      10       52.3%
BITBANK1           100      0       0       7        0.0%
BANK1              100     40      CA       8       78.9%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     53      71       5       70.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      3E       1       65.3%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FF       6        0.0%
DATA                 0      0     1FF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Mar 19 19:01:51 2014

       _MQ_Main_Willing_to_block 003B                      _SSPSTATbits 000FC7  
      __end_of_ToMainLow_recvmsg 1970                               bsr 000FE0  
      __end_of_ToMainLow_sendmsg 1B90                     __CFG_CP0$OFF 000000  
                            l138 0622                              l503 1184  
                            l522 1B64                              l523 1B66  
                            l550 19E8                              l551 19EA  
                            l582 1368                              l814 1C28  
                            l586 1386                              l588 1394  
                            l589 1396  __size_of_uart_trans_int_handler 0068  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                   ___awmod@sign 0093                   _FromMainLow_MQ 0243  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD                     __CFG_IESO$ON 000000  
                   ?_in_high_int 008D                 ??_init_uart_recv 008F  
     i2c_slave_int_handler@F9160 0032       i2c_slave_int_handler@F9162 0037  
     i2c_slave_int_handler@F9158 002D                             l1126 12A4  
                           l3300 0D04                             l3320 0D9C  
                           l3312 0D70                             l3304 0D22  
                           l3306 0D34                             l3330 1254  
                           l3308 0D3C                             l3316 0D84  
                           l3332 125C                             l2542 1894  
                           l2534 1872                             l2702 0740  
                           l2710 078A                             l3336 1290  
                           l3328 1242                             l2802 1388  
                           l2706 0786                             l2556 191E  
                           l2900 147A                             l2830 104A  
                           l3296 0CDE                             l2834 10B4  
                           l2682 05D0                             l2690 0668  
                           l2674 058E                             l2932 17C4  
                           l2852 13FE                             l2684 0628  
                           l2790 136A                             l2782 1354  
                           l2846 13D2                             l2918 0A9C  
                           l2952 0810                             l2880 091E  
                           l2696 06A6                             l2688 0648  
                           l2938 17E8                             l2858 142A  
                           l2698 06F8                             l2884 09A2  
                           l2968 08FE                             _LATA 000F89  
                           _LATB 000F8A                             u3317 1C2A  
                           u1755 10FE                             i1l59 0080  
                _FromMainHigh_MQ 0200                   Read1USART@data 0001  
         ?_block_on_To_msgqueues 0001                             _main 048A  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
         __CFG_DSWDTOSC$T1OSCREF 000000                      main@msgtype 019A  
                     i1_send_msg 0F74                             pclat 000FFA  
                    i2_check_msg 1B0A                             prodh 000FF4  
                           prodl 000FF3                             start 00C6  
               ?_adc_int_handler 0001                       i2_send_msg 0B6C  
  __size_of_i2c_configure_master 0020        ToMainHigh_recvmsg@msgtype 00A5  
                 send_msg@length 0099                  __end_of_OpenADC 1188  
    __size_of_timer0_int_handler 0018                      _Delay1KTCYx 1C24  
                  __CFG_PLLDIV$3 000000                            ?_main 0001  
                __end_of___awmod 0DA6                            _T0CON 000FD5  
                          _T1CON 000FCD                            i1l441 173A  
                __end_of___lwmod 12AE                       i1memcpy@d1 0001  
                          i2l322 015E                            i2l331 02EA  
                          i2l323 0242                            i2l333 0400  
                          i2l327 025C                            i2l336 0436  
                          i1l599 1BFC                       i1memcpy@s1 0003  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                          _PORTA 000F80                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TXREG 000FAE                       i2memcpy@d1 0060  
                 __CFG_FCMEN$OFF 000000                       i2memcpy@s1 0062  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
                 i1___awmod@sign 0007                  __end_of_in_main 192E  
     ToMainLow_recvmsg@maxlength 00A9                       _Read1USART 1BEE  
        timer0_lthread@msgbuffer 0093                   __CFG_T1DIG$OFF 000000  
                          tablat 000FF5                            plusw2 000FDB  
                          status 000FD8           _uart_trans_int_handler 16D6  
               __end_ofi1_memcpy 1A32               __size_ofi1___awmod 009C  
               __end_ofi2_memcpy 185E               __size_ofi2___awmod 010E  
                __initialization 14AC                     __end_of_main 07A4  
    __size_of_timer1_int_handler 000E       __size_of_ToMainLow_recvmsg 0042  
     __size_of_ToMainLow_sendmsg 0026            __size_ofi2_in_low_int 0046  
                 __CFG_OSC$HSPLL 000000    __size_of_FromMainHigh_sendmsg 0036  
                     _Open1USART 1334                           ??_main 00B1  
                send_msg@msgtype 009A                    __activetblptr 000002  
                send_msg@tlength 009E                       _SetChanADC 1BB0  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         _ADRESH 000FC4                           _ANCON0 000F48  
                         _ANCON1 000F49          ??_uart_recv_int_handler 001B  
                         _T1GCON 000F9A                           i1l3400 1A20  
                         i1l2602 1AB6                           i1l3420 11B4  
                         i1l3430 11EA                           i1l3432 11EE  
                         i1l3440 120C                           i1l3424 11D0  
                         i1l3530 0F54                           i1l3444 121A  
                         i1l3436 1202                           i1l3428 11E2  
                         i1l3524 0F10                           i1l3542 0066  
                         i1l3394 1A04                           i1l3548 0070  
                         i1l3496 0FAC                       _OpenTimer0 1B40  
                     _OpenTimer1 19B2                   __CFG_WDTEN$OFF 000000  
                         i2l3624 00E6                           i2l3644 027A  
                         i2l3636 022A                           i2l3628 011A  
                         i2l3910 1822                           i2l3574 12F6  
                         i2l3566 12E8                           i2l3664 0382  
                         i2l3648 0294                           i2l3586 1672  
                         i2l3930 0E12                           i2l3674 0406  
                         i2l3682 0450                           i2l3916 1846  
                         i2l3950 0EAA                           i2l3942 0E7E  
                         i2l3934 0E30                           i2l3926 0DEC  
                         i2l3936 0E42                           i2l3938 0E4A  
                         i2l3946 0E92                           i2l3876 18DA  
                         i2l3868 18B8                           i2l3892 0BC8  
                         _RCREG1 000FAF                    ??_SleepIfOkay 0064  
                         _RCSTA1 000FAC                           _OSCCON 000FD3  
                         _SPBRG1 000FB0                           _SSPADD 000FC8  
                 __CFG_WPCFG$OFF 000000                           _SSPBUF 000FC9  
                    ?i1_send_msg 000B                           _TXSTA1 000FAD  
             timer0_lthread@tptr 008D                   __CFG_WPDIS$OFF 000000  
                      ??_OpenADC 0090                     i2_in_low_int 18A4  
                    ?i2_send_msg 006A                   __CFG_XINST$OFF 000000  
                _i2c_int_handler 1CC8                        ??___awmod 0091  
                _i2c_master_recv 173E                  _i2c_master_send 0902  
               OpenTimer0@config 008D                           _ic_ptr 00CF  
                      ??___lwmod 0091                    main@msgbuffer 018B  
               __end_of_init_i2c 166C                 OpenTimer1@config 008F  
                         _memcpy 17A2                           clear_0 14B2  
                         clear_1 14BE                           clear_2 14CA  
                ___awmod@divisor 008F                           _uc_ptr 003D  
                ___awmod@counter 0092                           main@ic 01A9  
                         main@uc 019C                 __end_of_recv_msg 0902  
                  main@motorcomm 0189                        ??_in_main 0093  
              __end_ofi1___awmod 1224                 __end_of_send_msg 0B6C  
                   __pdataCOMRAM 002D                __end_ofi2___awmod 0EB4  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      init_queue@i 0090  
                 i2___awmod@sign 0066         ToMainLow_recvmsg@msgtype 00A5  
           __size_of_in_high_int 0012                      ?_Read1USART 0001  
                     __accesstop 0060          __end_of__initialization 1518  
     __end_of_ToMainHigh_recvmsg 19B2       __end_of_ToMainHigh_sendmsg 1B0A  
                __CFG_IOL1WAY$ON 000000             __CFG_WPEND$PAGE_WPFP 000000  
    __end_of_init_timer1_lthread 1C5E              __end_of_SleepIfOkay 16D6  
                 __pcstackCOMRAM 0001                     __pidataBANK1 1CD4  
         __size_ofi2_in_high_int 0012               __size_of_check_msg 0036  
                __CFG_DSWDTPS$G2 000000                      ?_Open1USART 008D  
                    ?_SetChanADC 0001              __size_ofi1_send_msg 00C0  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 132C  
    __end_of_InterruptHandlerLow 00C6                        ?i2_memcpy 0060  
                  _ToMainHigh_MQ 0100                 _enter_sleep_mode 1CCE  
            __size_ofi2_send_msg 012C             timer1_lthread@length 00AB  
                  check_msg@qptr 008D             timer1_lthread@retval 00B0  
        ??_block_on_To_msgqueues 0093             __size_of_init_queues 006E  
                     __pbssBANK0 00B3                       __pbssBANK1 0100  
                     __pbssBANK2 0200                      ?_OpenTimer0 0001  
                    ?_OpenTimer1 008D                       __pnvCOMRAM 003D  
        __end_of_i2c_int_handler 1CCE                     ?i2_check_msg 0060  
        __end_of_i2c_master_recv 17A2          __end_of_i2c_master_send 0A40  
             timer1_lthread@tptr 00A7         ??_i2c_master_int_handler 007A  
              recv_msg@maxlength 0099                  recv_msg@msgtype 009A  
                recv_msg@tlength 00A1                     ?_Delay1KTCYx 0001  
               WriteTimer0@timer 0062                          ?_memcpy 008D  
               WriteTimer1@timer 0003                    ??_WriteTimer0 0062  
                  ??_WriteTimer1 0003              __size_of_Read1USART 001E  
        __size_of_timer0_lthread 0012          __size_of_timer1_lthread 0072  
               Open1USART@config 0092     __end_of_i2c_configure_master 1BB0  
                     ??i1_memcpy 0007                       ??i2_memcpy 0066  
                        _SPBRGH1 000F7F                 i1send_msg@length 000D  
                  i2_in_high_int 1C94                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
        ?_uart_trans_int_handler 0001                __end_of_check_msg 1A9E  
                      ?_init_i2c 008D                      _SleepIfOkay 166C  
            __size_of_Open1USART 0080                        ?_recv_msg 0097  
                        _OpenADC 10E8                       _in_low_int 185E  
                        __Hparam 0000              __size_of_SetChanADC 0020  
                      ?_send_msg 0097                          __Lparam 0000  
     __end_of_timer0_int_handler 1C24                 init_uart_recv@uc 008D  
                        ___awmod 0C98                          ___lwmod 1224  
                __CFG_STVREN$OFF 000000                          __pcinit 14AC  
                __size_of_memcpy 005E         __size_of_adc_int_handler 0036  
                     _init_queue 1432                          __ramtop 0F00  
            __size_of_OpenTimer0 002A              __size_of_OpenTimer1 0040  
                        __ptext0 048A                          __ptext1 1034  
                        __ptext2 1522                          __ptext3 1224  
                        __ptext4 1A32                          __ptext5 0A40  
                        __ptext6 1C3A                          __ptext7 1BD0  
                        __ptext8 1C4C                          __ptext9 1594  
                      _T0CONbits 000FD5                OpenTimer1@config1 008D  
                        _in_main 18EA                        _T1CONbits 000FCD  
               ___awmod@dividend 008D              __end_of_WriteTimer0 1C94  
            __end_of_WriteTimer1 1C82                   ?i2_in_high_int 0060  
 __end_of_uart_trans_int_handler 173E                   OpenADC@config2 008D  
                 OpenADC@config3 008E                          main@msg 0186  
                 __pintcode_body 12AE             end_of_initialization 1518  
        timer1_lthread@msgbuffer 00AD     __end_of_FromMainHigh_sendmsg 1A68  
 __size_of_uart_recv_int_handler 00C0       FromMainHigh_sendmsg@length 00A6  
                        memcpy@d 0093                          memcpy@n 0091  
                        memcpy@s 0095    __end_of_uart_recv_int_handler 0F74  
                     ??_init_i2c 008F                    __Lmediumconst 0000  
                        int_func 12AE                     ??i1_send_msg 0011  
        __size_of_init_uart_recv 001E                 ?_i2c_int_handler 0001  
               ?_i2c_master_recv 0001                 ?_i2c_master_send 008D  
                     ??_recv_msg 009E                     ??i2_send_msg 0070  
                     ??_send_msg 009D  __size_of_i2c_master_int_handler 03C0  
     __end_of_timer1_int_handler 1CB4                        _RCSTAbits 000FAC  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
      ToMainHigh_sendmsg@msgtype 0076                       _uart_trans 1034  
                      _PORTAbits 000F80                        _PORTBbits 000F81  
               __CFG_DSBOREN$OFF 000000                 __CFG_CPUDIV$OSC1 000000  
             __end_ofi1_send_msg 1034      FromMainHigh_sendmsg@msgtype 00A3  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
                      i1___awmod 1188               __end_ofi2_send_msg 0C98  
                      i2___awmod 0DA6                     ??_Read1USART 0001  
              __CFG_WPFP$PAGE_63 000000                        _TXSTAbits 000FAD  
                     main@length 019B                      ?_in_low_int 008F  
          timer0_lthread@msgtype 008F             _i2c_configure_master 1B90  
            __CFG_MSSP7B_EN$MSK7 000000             __size_ofi2_check_msg 0036  
       __end_of_enter_sleep_mode 1CD4               _ToMainHigh_recvmsg 1970  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 1AD4  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
      i2c_master_send@recvlength 008D                    __pidataCOMRAM 1CB4  
                 _timer0_lthread 1C3A                     ??_Open1USART 008F  
                    ?_init_queue 008D                        i2memcpy@d 0066  
                    _WriteTimer0 1C82                      _WriteTimer1 1C70  
                      i2memcpy@n 0064                        i2memcpy@s 0068  
             __end_of_Read1USART 1C0C                   _timer1_lthread 1522  
                 __end_of_memcpy 1800                _enable_interrupts 1CC0  
           __size_of_Delay1KTCYx 0016                 __CFG_DSWDTEN$OFF 000000  
                   ??_SetChanADC 008D        i2c_master_send@sendlength 0093  
            ?_ToMainHigh_recvmsg 00A5                  ??i2_in_high_int 0062  
            ?_ToMainHigh_sendmsg 0076               ?_enable_interrupts 0001  
            start_initialization 14AC           _i2c_master_int_handler 00CA  
                  ??_in_high_int 008F                ??_adc_int_handler 0001  
                     ?i1___awmod 0001                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 005E        i2c_master_send@slave_addr 0090  
                     ?i2___awmod 0060              ??_enable_interrupts 008D  
                   ??_OpenTimer0 008D                     ??_OpenTimer1 008E  
 __size_of_block_on_To_msgqueues 007E    __end_of_block_on_To_msgqueues 1432  
   __end_of_InterruptHandlerHigh 1334               __end_of_Open1USART 13B4  
                     init_i2c@ic 008D             ??_ToMainHigh_recvmsg 00A9  
           ??_ToMainHigh_sendmsg 0079            ?_i2c_configure_master 0001  
             __end_of_SetChanADC 1BD0           __end_of_timer0_lthread 1C4C  
                    __pdataBANK1 01C6           __end_of_timer1_lthread 1594  
             i1___awmod@dividend 0001                 __CFG_LPT1OSC$OFF 000000  
      __end_of_enable_interrupts 1CC8                         ??_memcpy 0093  
          timer1_lthread@msgtype 00A9                      ?_uart_trans 008D  
           _FromMainHigh_sendmsg 1A32     __size_of_init_timer1_lthread 0012  
             __end_of_OpenTimer0 1B6A               __end_of_OpenTimer1 19F2  
                    __pbssCOMRAM 0039                    ??_init_queues 0091  
                  __pcstackBANK0 0060                    __pcstackBANK1 0186  
            __size_of_in_low_int 0046                        _adcbuffer 00B3  
                Delay1KTCYx@unit 008D         ToMainLow_sendmsg@msgtype 0017  
   __size_of_InterruptHandlerLow 00AE              __end_of_in_high_int 1C70  
                   ?_SleepIfOkay 0001            ToMainLow_recvmsg@data 00A7  
                   _ToMainLow_MQ 0143              __size_of_init_queue 007A  
                 _init_uart_recv 1BD0                        _check_msg 1A68  
                      __pnvBANK0 00CF                __size_of_init_i2c 006A  
                       ?_OpenADC 008D                     recv_msg@data 009C  
                   recv_msg@qmsg 00A3                     recv_msg@slot 00A0  
                   recv_msg@qptr 0097                __size_of_recv_msg 015E  
                      __pintcode 0008                __size_of_send_msg 012C  
                       ?___awmod 008D                  ?_timer0_lthread 008D  
                       ?___lwmod 008D                  ?_timer1_lthread 00A7  
          ?_FromMainHigh_sendmsg 00A3                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 00A7                  Open1USART@spbrg 008D  
                       ?_in_main 0091                WriteTimer0@timer0 0060  
             _timer0_int_handler 1C0C                WriteTimer1@timer1 0001  
           __CFG_RTCOSC$T1OSCREF 000000                      ??i1___awmod 0005  
          ToMainLow_sendmsg@data 0018                      ??i2___awmod 0064  
            ?_timer0_int_handler 0001           __end_of_init_uart_recv 1BEE  
            __end_of_init_queues 1602            i2c_master_recv@length 0060  
            __size_of_uart_trans 00B4                    OpenADC@config 0093  
                       _LATBbits 000F8A           ??_i2c_configure_master 008D  
                i2check_msg@qptr 0060                       ?_check_msg 008D  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                  ?i2_in_low_int 0062                         _PIR1bits 000F9E  
         ToMainHigh_sendmsg@data 0077                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                        main@F9242 01C6  
                      main@F9244 01C8             ??_timer0_int_handler 0064  
     __size_of_enable_interrupts 0008                i1send_msg@msgtype 000E  
              i1send_msg@tlength 0012                       _ADCON0bits 000FC2  
           timer0_lthread@length 0091               _timer1_int_handler 1CA6  
                       i1_memcpy 19F2             _InterruptHandlerHigh 0008  
                       i2_memcpy 1800             timer0_lthread@msgval 0095  
                    _in_high_int 1C5E                     send_msg@data 009B  
                   send_msg@qmsg 00A1                     send_msg@slot 00A0  
                   send_msg@qptr 0097                      _INTCON2bits 000FF1  
                      copy_data0 14EC                        copy_data1 150C  
            ?_timer1_int_handler 0001               i2___awmod@dividend 0060  
                ?_init_uart_recv 008D                   ??i2_in_low_int 0064  
                       __Hparam0 0000            _uart_recv_int_handler 0EB4  
                   ??_in_low_int 0091                         __Lparam0 0000  
               __size_of_OpenADC 00A0                ?_enter_sleep_mode 0001  
         ??_FromMainHigh_sendmsg 00A6                i1___awmod@divisor 0003  
           ??_timer1_int_handler 0005                i1___awmod@counter 0006  
                _adc_int_handler 1A9E         __size_of_i2c_int_handler 0006  
               __size_of___awmod 010E               ??_enter_sleep_mode 0060  
       __size_of_i2c_master_recv 0064         __size_of_i2c_master_send 013E  
               __size_of___lwmod 008A                     ??_init_queue 008F  
                   ?_WriteTimer0 0060                     ?_WriteTimer1 0001  
       FromMainHigh_sendmsg@data 00A4          ToMainLow_sendmsg@length 001A  
        ?_i2c_master_int_handler 0001                main@t0thread_data 0196  
          ?_InterruptHandlerHigh 0001                 __size_of_in_main 0044  
              i2send_msg@msgtype 006D      ToMainHigh_recvmsg@maxlength 00A9  
              i2send_msg@tlength 0071          init_timer1_lthread@tptr 008D  
                    _init_queues 1594               __end_of_in_low_int 18A4  
                       __ptext10 1432                         __ptext11 1602  
                       __ptext20 1C24                         __ptext12 0902  
                       __ptext21 192E                         __ptext13 1B90  
                     _T1GCONbits 000F9A                         __ptext30 1334  
                       __ptext22 1970                         __ptext14 1CC0  
                       __ptext23 07A4                         __ptext15 13B4  
                       __ptext40 1C70                         __ptext32 16D6  
                       __ptext24 17A2                         __ptext16 18EA  
                       __ptext41 1A9E                         __ptext33 0EB4  
                       __ptext25 0C98                         __ptext17 185E  
                       __ptext50 1800                         __ptext34 1B6A  
                       __ptext26 1BB0                         __ptext18 1C5E  
                       __ptext51 0DA6                         __ptext43 1C0C  
                       __ptext35 0F74                         __ptext27 19B2  
                       __ptext19 1A68                         __ptext52 166C  
                       __ptext44 1C82                         __ptext36 19F2  
                       __ptext28 1B40                         __ptext53 18A4  
                       __ptext45 1CC8                         __ptext37 1188  
                       __ptext29 10E8                         __ptext54 1C94  
                       __ptext46 00CA                         __ptext38 1BEE  
                       __ptext55 1B0A                         __ptext47 173E  
                       __ptext39 1CA6                         __ptext56 1CCE  
                       __ptext48 1AD4                         __ptext49 0B6C  
                 i1send_msg@data 000F                   i1send_msg@qmsg 0015  
                 i1send_msg@slot 0014                   i1send_msg@qptr 000B  
                       _init_i2c 1602              _init_timer1_lthread 1C4C  
                  __size_of_main 031A                    ??i2_check_msg 0062  
              main@t1thread_data 0198                      ??_check_msg 008F  
             __end_of_init_queue 14AC             __size_of_SleepIfOkay 006A  
                       _recv_msg 07A4                         _send_msg 0A40  
                 init_queue@qptr 008D                    ??_Delay1KTCYx 008D  
 __end_of_i2c_master_int_handler 048A                 uart_trans@length 0091  
                   ??_uart_trans 008F              _InterruptHandlerLow 0018  
           ?_init_timer1_lthread 008D                    _USART1_Status 003C  
       ??_uart_trans_int_handler 0001                i2___awmod@divisor 0062  
              i2___awmod@counter 0065                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                     _UART_timeout 0039  
                       memcpy@d1 008D                         memcpy@s1 008F  
          __end_ofi2_in_high_int 1CA6                 i2send_msg@length 006C  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001                 ___lwmod@dividend 008D  
         ?_uart_recv_int_handler 0001               __end_of_uart_trans 10E8  
              SetChanADC@channel 008E                       _RCSTA1bits 000FAC  
          _block_on_To_msgqueues 13B4                 ??_timer0_lthread 0095  
    __size_of_ToMainHigh_recvmsg 0042          __end_of_adc_int_handler 1AD4  
    __size_of_ToMainHigh_sendmsg 0036                       _OSCCONbits 000FD3  
               ??_timer1_lthread 00AF         ToMainHigh_sendmsg@length 0079  
            __end_ofi2_check_msg 1B40            ??_init_timer1_lthread 008F  
         ??_InterruptHandlerHigh 007F                _ToMainLow_recvmsg 192E  
              _ToMainLow_sendmsg 1B6A               main@last_reg_recvd 0188  
                ___lwmod@divisor 008F             __end_ofi2_in_low_int 18EA  
             ?_ToMainLow_recvmsg 00A5              __end_of_Delay1KTCYx 1C3A  
              ??_i2c_int_handler 007F                  ___lwmod@counter 0092  
             ?_ToMainLow_sendmsg 0017                ??_i2c_master_recv 0060  
              ??_i2c_master_send 0091               i2c_master_send@msg 008E  
                 uart_trans@data 008D                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5                   i2send_msg@data 006E  
          ??_InterruptHandlerLow 001C              ??_ToMainLow_recvmsg 00A9  
                 i2send_msg@qmsg 0074                   i2send_msg@slot 0073  
                 i2send_msg@qptr 006A              ??_ToMainLow_sendmsg 001A  
