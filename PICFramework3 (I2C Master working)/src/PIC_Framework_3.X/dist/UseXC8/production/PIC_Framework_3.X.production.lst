

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sun Feb 23 20:48:28 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           	psect	idataBANK1
    77  001BD8                     __pidataBANK1:
    78                           	opt stack 0
    79                           
    80                           ;initializer for main@F5204
    81  001BD8  12                 	db	18
    82  001BD9  34                 	db	52
    83                           
    84                           ;initializer for main@F5207
    85  001BDA  EE                 	db	238
    86  001BDB  FF                 	db	255
    87  0000                     _ADCON0	set	4034
    88  0000                     _ADCON0bits	set	4034
    89  0000                     _ADCON1	set	4033
    90  0000                     _ADCON2	set	4032
    91  0000                     _ADRESH	set	4036
    92  0000                     _INTCONbits	set	4082
    93  0000                     _IPR1bits	set	3999
    94  0000                     _LATA	set	3977
    95  0000                     _LATB	set	3978
    96  0000                     _LATBbits	set	3978
    97  0000                     _OSCCON	set	4051
    98  0000                     _OSCCONbits	set	4051
    99  0000                     _OSCTUNEbits	set	3995
   100  0000                     _PIE1bits	set	3997
   101  0000                     _PIR1bits	set	3998
   102  0000                     _PORTA	set	3968
   103  0000                     _RCONbits	set	4048
   104  0000                     _RCREG	set	4014
   105  0000                     _RCSTA	set	4011
   106  0000                     _RCSTAbits	set	4011
   107  0000                     _SPBRG	set	4015
   108  0000                     _SPBRGH	set	4016
   109  0000                     _SSPADD	set	4040
   110  0000                     _SSPBUF	set	4041
   111  0000                     _SSPCON1	set	4038
   112  0000                     _SSPCON1bits	set	4038
   113  0000                     _SSPCON2	set	4037
   114  0000                     _SSPCON2bits	set	4037
   115  0000                     _SSPSTAT	set	4039
   116  0000                     _SSPSTATbits	set	4039
   117  0000                     _T0CON	set	4053
   118  0000                     _T0CONbits	set	4053
   119  0000                     _T1CON	set	4045
   120  0000                     _T1CONbits	set	4045
   121  0000                     _TMR0H	set	4055
   122  0000                     _TMR0L	set	4054
   123  0000                     _TMR1H	set	4047
   124  0000                     _TMR1L	set	4046
   125  0000                     _TRISA	set	3986
   126  0000                     _TRISB	set	3987
   127  0000                     _TRISCbits	set	3988
   128  0000                     _TXSTA	set	4012
   129  0000                     _TXSTAbits	set	4012
   130                           
   131                           	psect	nvCOMRAM
   132  000052                     __pnvCOMRAM:
   133                           	opt stack 0
   134  000052                     _uc_ptr:
   135                           	opt stack 0
   136  000052                     	ds	2
   137                           
   138                           	psect	nvBANK0
   139  0000D0                     __pnvBANK0:
   140                           	opt stack 0
   141  0000D0                     _ic_ptr:
   142                           	opt stack 0
   143  0000D0                     	ds	2
   144                           
   145                           ; #config settings
   146  0000                     
   147                           	psect	cinit
   148  001682                     __pcinit:
   149                           	opt stack 0
   150  001682                     start_initialization:
   151                           	opt stack 0
   152  001682                     __initialization:
   153                           	opt stack 0
   154                           
   155                           ; Clear objects allocated to BANK3 (126 bytes)
   156  001682  EE03  F000         	lfsr	0,__pbssBANK3
   157  001686  0E7E               	movlw	126
   158  001688                     clear_0:
   159  001688  6AEE               	clrf	postinc0,c
   160  00168A  06E8               	decf	wreg,f,c
   161  00168C  E1FD               	bnz	clear_0
   162                           
   163                           ; Clear objects allocated to BANK2 (252 bytes)
   164  00168E  EE02  F000         	lfsr	0,__pbssBANK2
   165  001692  0EFC               	movlw	252
   166  001694                     clear_1:
   167  001694  6AEE               	clrf	postinc0,c
   168  001696  06E8               	decf	wreg,f,c
   169  001698  E1FD               	bnz	clear_1
   170                           
   171                           ; Clear objects allocated to BANK1 (126 bytes)
   172  00169A  EE01  F000         	lfsr	0,__pbssBANK1
   173  00169E  0E7E               	movlw	126
   174  0016A0                     clear_2:
   175  0016A0  6AEE               	clrf	postinc0,c
   176  0016A2  06E8               	decf	wreg,f,c
   177  0016A4  E1FD               	bnz	clear_2
   178                           
   179                           ; Clear objects allocated to COMRAM (30 bytes)
   180  0016A6  EE00  F034         	lfsr	0,__pbssCOMRAM
   181  0016AA  0E1E               	movlw	30
   182  0016AC                     clear_3:
   183  0016AC  6AEE               	clrf	postinc0,c
   184  0016AE  06E8               	decf	wreg,f,c
   185  0016B0  E1FD               	bnz	clear_3
   186                           
   187                           ; Initialize objects allocated to BANK1 (4 bytes)
   188                           ; load TBLPTR registers with __pidataBANK1
   189  0016B2  0ED8               	movlw	low __pidataBANK1
   190  0016B4  6EF6               	movwf	tblptrl,c
   191  0016B6  0E1B               	movlw	high __pidataBANK1
   192  0016B8  6EF7               	movwf	tblptrh,c
   193  0016BA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   194  0016BC  6EF8               	movwf	tblptru,c
   195  0016BE  EE01  F0F2         	lfsr	0,__pdataBANK1
   196  0016C2  EE10 F004          	lfsr	1,4
   197  0016C6                     copy_data0:
   198  0016C6  0009               	tblrd		*+
   199  0016C8  CFF5 FFEE          	movff	tablat,postinc0
   200  0016CC  50E5               	movf	postdec1,w,c
   201  0016CE  50E1               	movf	fsr1l,w,c
   202  0016D0  E1FA               	bnz	copy_data0
   203  0016D2                     end_of_initialization:
   204                           	opt stack 0
   205  0016D2                     __end_of__initialization:
   206                           	opt stack 0
   207  0016D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   208  0016D4  6EF8               	movwf	tblptru,c
   209  0016D6  0100               	movlb	0
   210  0016D8  EFA2  F003         	goto	_main	;jump to C main() function
   211                           tblptru	equ	0xFF8
   212                           tblptrh	equ	0xFF7
   213                           tblptrl	equ	0xFF6
   214                           tablat	equ	0xFF5
   215                           postinc0	equ	0xFEE
   216                           wreg	equ	0xFE8
   217                           postdec1	equ	0xFE5
   218                           fsr1l	equ	0xFE1
   219                           
   220                           	psect	bssCOMRAM
   221  000034                     __pbssCOMRAM:
   222                           	opt stack 0
   223  000034                     _adcbuffer:
   224                           	opt stack 0
   225  000034                     	ds	28
   226  000050                     _MQ_Main_Willing_to_block:
   227                           	opt stack 0
   228  000050                     	ds	1
   229  000051                     _USART_Status:
   230                           	opt stack 0
   231  000051                     	ds	1
   232                           tblptru	equ	0xFF8
   233                           tblptrh	equ	0xFF7
   234                           tblptrl	equ	0xFF6
   235                           tablat	equ	0xFF5
   236                           postinc0	equ	0xFEE
   237                           wreg	equ	0xFE8
   238                           postdec1	equ	0xFE5
   239                           fsr1l	equ	0xFE1
   240                           
   241                           	psect	bssBANK1
   242  000100                     __pbssBANK1:
   243                           	opt stack 0
   244  000100                     _ToMainLow_MQ:
   245                           	opt stack 0
   246  000100                     	ds	126
   247                           tblptru	equ	0xFF8
   248                           tblptrh	equ	0xFF7
   249                           tblptrl	equ	0xFF6
   250                           tablat	equ	0xFF5
   251                           postinc0	equ	0xFEE
   252                           wreg	equ	0xFE8
   253                           postdec1	equ	0xFE5
   254                           fsr1l	equ	0xFE1
   255                           
   256                           	psect	dataBANK1
   257  0001F2                     __pdataBANK1:
   258                           	opt stack 0
   259  0001F2                     main@F5204:
   260                           	opt stack 0
   261  0001F2                     	ds	2
   262  0001F4                     main@F5207:
   263                           	opt stack 0
   264  0001F4                     	ds	2
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           postdec1	equ	0xFE5
   272                           fsr1l	equ	0xFE1
   273                           
   274                           	psect	bssBANK2
   275  000200                     __pbssBANK2:
   276                           	opt stack 0
   277  000200                     _FromMainLow_MQ:
   278                           	opt stack 0
   279  000200                     	ds	126
   280  00027E                     _ToMainHigh_MQ:
   281                           	opt stack 0
   282  00027E                     	ds	126
   283                           tblptru	equ	0xFF8
   284                           tblptrh	equ	0xFF7
   285                           tblptrl	equ	0xFF6
   286                           tablat	equ	0xFF5
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           postdec1	equ	0xFE5
   290                           fsr1l	equ	0xFE1
   291                           
   292                           	psect	bssBANK3
   293  000300                     __pbssBANK3:
   294                           	opt stack 0
   295  000300                     _FromMainHigh_MQ:
   296                           	opt stack 0
   297  000300                     	ds	126
   298                           tblptru	equ	0xFF8
   299                           tblptrh	equ	0xFF7
   300                           tblptrl	equ	0xFF6
   301                           tablat	equ	0xFF5
   302                           postinc0	equ	0xFEE
   303                           wreg	equ	0xFE8
   304                           postdec1	equ	0xFE5
   305                           fsr1l	equ	0xFE1
   306                           
   307                           	psect	cstackBANK1
   308  00017E                     __pcstackBANK1:
   309                           	opt stack 0
   310  00017E                     ??_timer1_lthread:
   311                           
   312                           ; 0 bytes @ 0x0
   313  00017E                     	ds	1
   314  00017F                     timer1_lthread@retval:
   315                           	opt stack 0
   316                           
   317                           ; 1 bytes @ 0x1
   318  00017F                     	ds	1
   319  000180                     ??_main:
   320                           
   321                           ; 0 bytes @ 0x2
   322  000180                     	ds	2
   323  000182                     main@msgbuffer:
   324                           	opt stack 0
   325                           
   326                           ; 29 bytes @ 0x4
   327  000182                     	ds	29
   328  00019F                     main@msg:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x21
   332  00019F                     	ds	2
   333  0001A1                     main@last_reg_recvd:
   334                           	opt stack 0
   335                           
   336                           ; 1 bytes @ 0x23
   337  0001A1                     	ds	1
   338  0001A2                     main@msg2:
   339                           	opt stack 0
   340                           
   341                           ; 2 bytes @ 0x24
   342  0001A2                     	ds	2
   343  0001A4                     main@uthread_data:
   344                           	opt stack 0
   345                           
   346                           ; 2 bytes @ 0x26
   347  0001A4                     	ds	2
   348  0001A6                     main@t0thread_data:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0x28
   352  0001A6                     	ds	2
   353  0001A8                     main@t1thread_data:
   354                           	opt stack 0
   355                           
   356                           ; 2 bytes @ 0x2A
   357  0001A8                     	ds	2
   358  0001AA                     main@uc:
   359                           	opt stack 0
   360                           
   361                           ; 5 bytes @ 0x2C
   362  0001AA                     	ds	5
   363  0001AF                     main@length:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x31
   367  0001AF                     	ds	1
   368  0001B0                     main@msgtype:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x32
   372  0001B0                     	ds	1
   373  0001B1                     main@ic:
   374                           	opt stack 0
   375                           
   376                           ; 65 bytes @ 0x33
   377  0001B1                     	ds	65
   378                           tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           postinc0	equ	0xFEE
   383                           wreg	equ	0xFE8
   384                           postdec1	equ	0xFE5
   385                           fsr1l	equ	0xFE1
   386                           
   387                           	psect	cstackBANK0
   388  000080                     __pcstackBANK0:
   389                           	opt stack 0
   390  000080                     i2memcpy@d:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x0
   394  000080                     	ds	2
   395  000082                     i2memcpy@s:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x2
   399  000082                     	ds	2
   400  000084                     i2send_msg@qptr:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x4
   404  000084                     	ds	2
   405  000086                     i2send_msg@length:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x6
   409  000086                     	ds	1
   410  000087                     i2send_msg@msgtype:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x7
   414  000087                     	ds	1
   415  000088                     i2send_msg@data:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x8
   419  000088                     	ds	2
   420  00008A                     i2send_msg@tlength:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0xA
   424  00008A                     	ds	2
   425  00008C                     i2send_msg@slot:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0xC
   429  00008C                     	ds	1
   430  00008D                     i2send_msg@qmsg:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0xD
   434  00008D                     	ds	2
   435  00008F                     ToMainHigh_sendmsg@msgtype:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0xF
   439  00008F                     	ds	1
   440  000090                     ToMainHigh_sendmsg@data:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x10
   444  000090                     	ds	2
   445  000092                     ToMainHigh_sendmsg@length:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0x12
   449  000092                     	ds	1
   450  000093                     ??_i2c_slave_int_handler:
   451                           
   452                           ; 0 bytes @ 0x13
   453  000093                     	ds	2
   454  000095                     i2c_slave_int_handler@length:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x15
   458  000095                     	ds	2
   459  000097                     i2c_slave_int_handler@error_buf:
   460                           	opt stack 0
   461                           
   462                           ; 3 bytes @ 0x17
   463  000097                     	ds	3
   464  00009A                     i2c_slave_int_handler@data_written:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x1A
   468  00009A                     	ds	1
   469  00009B                     i2c_slave_int_handler@overrun_error:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0x1B
   473  00009B                     	ds	1
   474  00009C                     i2c_slave_int_handler@i2c_data:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x1C
   478  00009C                     	ds	1
   479  00009D                     i2c_slave_int_handler@msg_to_send:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x1D
   483  00009D                     	ds	1
   484  00009E                     i2c_slave_int_handler@msg_ready:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x1E
   488  00009E                     	ds	1
   489  00009F                     i2c_slave_int_handler@data_read:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x1F
   493  00009F                     	ds	1
   494  0000A0                     ??_InterruptHandlerHigh:
   495                           
   496                           ; 0 bytes @ 0x20
   497  0000A0                     	ds	14
   498  0000AE                     ??_SetChanADC:
   499  0000AE                     ?_in_high_int:
   500                           	opt stack 0
   501  0000AE                     ?___lwmod:
   502                           	opt stack 0
   503  0000AE                     i2c_master_send@recvlength:
   504                           	opt stack 0
   505  0000AE                     i2c_configure_slave@addr:
   506                           	opt stack 0
   507  0000AE                     OpenADC@config2:
   508                           	opt stack 0
   509  0000AE                     OpenTimer0@config:
   510                           	opt stack 0
   511  0000AE                     OpenTimer1@config:
   512                           	opt stack 0
   513  0000AE                     Delay1KTCYx@unit:
   514                           	opt stack 0
   515  0000AE                     init_queue@qptr:
   516                           	opt stack 0
   517  0000AE                     check_msg@qptr:
   518                           	opt stack 0
   519  0000AE                     init_i2c@ic:
   520                           	opt stack 0
   521  0000AE                     init_uart_recv@uc:
   522                           	opt stack 0
   523  0000AE                     timer0_lthread@tptr:
   524                           	opt stack 0
   525  0000AE                     init_timer1_lthread@tptr:
   526                           	opt stack 0
   527  0000AE                     uart_lthread@uptr:
   528                           	opt stack 0
   529  0000AE                     OpenUSART@spbrg:
   530                           	opt stack 0
   531  0000AE                     ___lwmod@dividend:
   532                           	opt stack 0
   533  0000AE                     memcpy@d1:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x2E
   537  0000AE                     	ds	1
   538  0000AF                     OpenADC@portconfig:
   539                           	opt stack 0
   540  0000AF                     SetChanADC@channel:
   541                           	opt stack 0
   542  0000AF                     i2c_master_send@msg:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x2F
   546  0000AF                     	ds	1
   547  0000B0                     ??_OpenUSART:
   548  0000B0                     ??_OpenADC:
   549  0000B0                     ??_init_queue:
   550  0000B0                     ??_check_msg:
   551  0000B0                     ?_in_low_int:
   552                           	opt stack 0
   553  0000B0                     timer0_lthread@msgtype:
   554                           	opt stack 0
   555  0000B0                     uart_lthread@msgtype:
   556                           	opt stack 0
   557  0000B0                     ___lwmod@divisor:
   558                           	opt stack 0
   559  0000B0                     memcpy@s1:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x30
   563  0000B0                     	ds	1
   564  0000B1                     init_queue@i:
   565                           	opt stack 0
   566  0000B1                     i2c_master_send@slave_addr:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x31
   570  0000B1                     	ds	1
   571  0000B2                     ??_init_queues:
   572  0000B2                     ??_i2c_master_send:
   573  0000B2                     ??___lwmod:
   574  0000B2                     ?_in_main:
   575                           	opt stack 0
   576  0000B2                     OpenADC@config:
   577                           	opt stack 0
   578  0000B2                     timer0_lthread@length:
   579                           	opt stack 0
   580  0000B2                     uart_lthread@length:
   581                           	opt stack 0
   582  0000B2                     memcpy@n:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x32
   586  0000B2                     	ds	1
   587  0000B3                     OpenUSART@config:
   588                           	opt stack 0
   589  0000B3                     ___lwmod@counter:
   590                           	opt stack 0
   591                           
   592                           ; 1 bytes @ 0x33
   593  0000B3                     	ds	1
   594  0000B4                     ??_block_on_To_msgqueues:
   595  0000B4                     i2c_master_send@sendlength:
   596                           	opt stack 0
   597  0000B4                     timer0_lthread@msgbuffer:
   598                           	opt stack 0
   599  0000B4                     uart_lthread@msgbuffer:
   600                           	opt stack 0
   601  0000B4                     memcpy@d:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x34
   605  0000B4                     	ds	2
   606  0000B6                     timer0_lthread@msgval:
   607                           	opt stack 0
   608  0000B6                     memcpy@s:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x36
   612  0000B6                     	ds	2
   613  0000B8                     send_msg@qptr:
   614                           	opt stack 0
   615  0000B8                     recv_msg@qptr:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x38
   619  0000B8                     	ds	2
   620  0000BA                     send_msg@length:
   621                           	opt stack 0
   622  0000BA                     recv_msg@maxlength:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x3A
   626  0000BA                     	ds	1
   627  0000BB                     send_msg@msgtype:
   628                           	opt stack 0
   629  0000BB                     recv_msg@msgtype:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x3B
   633  0000BB                     	ds	1
   634  0000BC                     send_msg@data:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0x3C
   638  0000BC                     	ds	1
   639  0000BD                     recv_msg@data:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x3D
   643  0000BD                     	ds	1
   644  0000BE                     ??_send_msg:
   645                           
   646                           ; 0 bytes @ 0x3E
   647  0000BE                     	ds	1
   648  0000BF                     ??_recv_msg:
   649  0000BF                     send_msg@tlength:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x3F
   653  0000BF                     	ds	2
   654  0000C1                     send_msg@slot:
   655                           	opt stack 0
   656  0000C1                     recv_msg@slot:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0x41
   660  0000C1                     	ds	1
   661  0000C2                     send_msg@qmsg:
   662                           	opt stack 0
   663  0000C2                     recv_msg@tlength:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0x42
   667  0000C2                     	ds	2
   668  0000C4                     FromMainHigh_sendmsg@msgtype:
   669                           	opt stack 0
   670  0000C4                     recv_msg@qmsg:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x44
   674  0000C4                     	ds	1
   675  0000C5                     FromMainHigh_sendmsg@data:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x45
   679  0000C5                     	ds	1
   680  0000C6                     ToMainLow_recvmsg@msgtype:
   681                           	opt stack 0
   682  0000C6                     ToMainHigh_recvmsg@msgtype:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x46
   686  0000C6                     	ds	1
   687  0000C7                     FromMainHigh_sendmsg@length:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x47
   691  0000C7                     	ds	1
   692  0000C8                     ToMainLow_recvmsg@data:
   693                           	opt stack 0
   694  0000C8                     ToMainHigh_recvmsg@data:
   695                           	opt stack 0
   696  0000C8                     timer1_lthread@tptr:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x48
   700  0000C8                     	ds	2
   701  0000CA                     ToMainLow_recvmsg@maxlength:
   702                           	opt stack 0
   703  0000CA                     ToMainHigh_recvmsg@maxlength:
   704                           	opt stack 0
   705  0000CA                     timer1_lthread@msgtype:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x4A
   709  0000CA                     	ds	2
   710  0000CC                     timer1_lthread@length:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x4C
   714  0000CC                     	ds	2
   715  0000CE                     timer1_lthread@msgbuffer:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x4E
   719  0000CE                     	ds	2
   720                           tblptru	equ	0xFF8
   721                           tblptrh	equ	0xFF7
   722                           tblptrl	equ	0xFF6
   723                           tablat	equ	0xFF5
   724                           postinc0	equ	0xFEE
   725                           wreg	equ	0xFE8
   726                           postdec1	equ	0xFE5
   727                           fsr1l	equ	0xFE1
   728                           
   729                           	psect	cstackCOMRAM
   730  000001                     __pcstackCOMRAM:
   731                           	opt stack 0
   732  000001                     ReadUSART@data:
   733                           	opt stack 0
   734  000001                     WriteTimer1@timer1:
   735                           	opt stack 0
   736  000001                     i1memcpy@d1:
   737                           	opt stack 0
   738                           
   739                           ; 2 bytes @ 0x0
   740  000001                     	ds	2
   741  000003                     WriteTimer1@timer:
   742                           	opt stack 0
   743  000003                     i1memcpy@s1:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0x2
   747  000003                     	ds	2
   748  000005                     i1memcpy@n:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x4
   752  000005                     	ds	2
   753  000007                     i1memcpy@d:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x6
   757  000007                     	ds	2
   758  000009                     i1memcpy@s:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x8
   762  000009                     	ds	2
   763  00000B                     i1send_msg@qptr:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0xA
   767  00000B                     	ds	2
   768  00000D                     i1send_msg@length:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0xC
   772  00000D                     	ds	1
   773  00000E                     i1send_msg@msgtype:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0xD
   777  00000E                     	ds	1
   778  00000F                     i1send_msg@data:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0xE
   782  00000F                     	ds	2
   783  000011                     ??i1_send_msg:
   784                           
   785                           ; 0 bytes @ 0x10
   786  000011                     	ds	1
   787  000012                     i1send_msg@tlength:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x11
   791  000012                     	ds	2
   792  000014                     i1send_msg@slot:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x13
   796  000014                     	ds	1
   797  000015                     i1send_msg@qmsg:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x14
   801  000015                     	ds	2
   802  000017                     ToMainLow_sendmsg@msgtype:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0x16
   806  000017                     	ds	1
   807  000018                     ToMainLow_sendmsg@data:
   808                           	opt stack 0
   809                           
   810                           ; 2 bytes @ 0x17
   811  000018                     	ds	2
   812  00001A                     ToMainLow_sendmsg@length:
   813                           	opt stack 0
   814                           
   815                           ; 1 bytes @ 0x19
   816  00001A                     	ds	1
   817  00001B                     ??_uart_recv_int_handler:
   818                           
   819                           ; 0 bytes @ 0x1A
   820  00001B                     	ds	1
   821  00001C                     ??_InterruptHandlerLow:
   822                           
   823                           ; 0 bytes @ 0x1B
   824  00001C                     	ds	17
   825  00002D                     ?i2_in_high_int:
   826                           	opt stack 0
   827  00002D                     handle_start@data_read:
   828                           	opt stack 0
   829  00002D                     start_i2c_slave_reply@msg:
   830                           	opt stack 0
   831  00002D                     WriteTimer0@timer0:
   832                           	opt stack 0
   833  00002D                     i2check_msg@qptr:
   834                           	opt stack 0
   835  00002D                     i2memcpy@d1:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x2C
   839  00002D                     	ds	2
   840  00002F                     ??_start_i2c_slave_reply:
   841  00002F                     ??i2_check_msg:
   842  00002F                     ?i2_in_low_int:
   843                           	opt stack 0
   844  00002F                     WriteTimer0@timer:
   845                           	opt stack 0
   846  00002F                     i2memcpy@s1:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0x2E
   850  00002F                     	ds	2
   851  000031                     start_i2c_slave_reply@length:
   852                           	opt stack 0
   853  000031                     i2memcpy@n:
   854                           	opt stack 0
   855                           
   856                           ; 2 bytes @ 0x30
   857  000031                     	ds	2
   858  000033                     ??i2_send_msg:
   859  000033                     
   860                           ; 0 bytes @ 0x32
   861  000033                     	ds	1
   862  000034                     tblptru	equ	0xFF8
   863                           tblptrh	equ	0xFF7
   864                           tblptrl	equ	0xFF6
   865                           tablat	equ	0xFF5
   866                           postinc0	equ	0xFEE
   867                           wreg	equ	0xFE8
   868                           postdec1	equ	0xFE5
   869                           fsr1l	equ	0xFE1
   870                           
   871                           ; 0 bytes @ 0x33
   872 ;;
   873 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   874 ;;
   875 ;; *************** function _main *****************
   876 ;; Defined at:
   877 ;;		line 186 in file "../src/main.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  msg2            2   36[BANK1 ] unsigned char [2]
   882 ;;  ic             65   51[BANK1 ] struct __i2c_comm
   883 ;;  msgbuffer      29    4[BANK1 ] unsigned char [29]
   884 ;;  uc              5   44[BANK1 ] struct __uart_comm
   885 ;;  t1thread_dat    2   42[BANK1 ] struct __timer1_thread_s
   886 ;;  t0thread_dat    2   40[BANK1 ] struct __timer0_thread_s
   887 ;;  uthread_data    2   38[BANK1 ] struct __uart_thread_str
   888 ;;  msg             2   33[BANK1 ] unsigned char [2]
   889 ;;  msgtype         1   50[BANK1 ] unsigned char 
   890 ;;  length          1   49[BANK1 ] char 
   891 ;;  last_reg_rec    1   35[BANK1 ] unsigned char 
   892 ;;  i               1    0        unsigned char 
   893 ;;  c               1    0        unsigned char 
   894 ;; Return value:  Size  Location     Type
   895 ;;		None               void
   896 ;; Registers used:
   897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   903 ;;      Params:         0       0       0       0       0
   904 ;;      Locals:         0       0     112       0       0
   905 ;;      Temps:          0       0       2       0       0
   906 ;;      Totals:         0       0     114       0       0
   907 ;;Total ram usage:      114 bytes
   908 ;; Hardware stack levels required when called:   15
   909 ;; This function calls:
   910 ;;		_OpenADC
   911 ;;		_OpenTimer0
   912 ;;		_OpenTimer1
   913 ;;		_OpenUSART
   914 ;;		_SetChanADC
   915 ;;		_ToMainHigh_recvmsg
   916 ;;		_ToMainLow_recvmsg
   917 ;;		_block_on_To_msgqueues
   918 ;;		_enable_interrupts
   919 ;;		_i2c_configure_slave
   920 ;;		_i2c_master_send
   921 ;;		_init_i2c
   922 ;;		_init_queues
   923 ;;		_init_timer1_lthread
   924 ;;		_init_uart_recv
   925 ;;		_timer0_lthread
   926 ;;		_timer1_lthread
   927 ;;		_uart_lthread
   928 ;; This function is called by:
   929 ;;		Startup code after reset
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text0
   934  000744                     __ptext0:
   935                           	opt stack 0
   936  000744                     _main:
   937                           	opt stack 16
   938                           
   939                           ;main.c: 187: char c;
   940                           ;main.c: 188: signed char length;
   941                           ;main.c: 189: unsigned char msgtype;
   942                           ;main.c: 190: unsigned char last_reg_recvd;
   943                           ;main.c: 191: uart_comm uc;
   944                           ;main.c: 192: i2c_comm ic;
   945                           ;main.c: 193: unsigned char msgbuffer[28 + 1];
   946                           ;main.c: 194: unsigned char i;
   947                           ;main.c: 195: uart_thread_struct uthread_data;
   948                           ;main.c: 196: timer1_thread_struct t1thread_data;
   949                           ;main.c: 197: timer0_thread_struct t0thread_data;
   950                           ;main.c: 205: OSCCON = 0x82;
   951                           
   952                           ;incstack = 0
   953  000744  0E82               	movlw	130
   954  000746  6ED3               	movwf	4051,c	;volatile
   955                           
   956                           ;main.c: 206: OSCTUNEbits.PLLEN = 1;
   957  000748  8C9B               	bsf	3995,6,c	;volatile
   958                           
   959                           ;main.c: 224: init_uart_recv(&uc);
   960  00074A  0101               	movlb	1	; () banked
   961  00074C  0E01               	movlw	high main@uc
   962  00074E  0100               	movlb	0	; () banked
   963  000750  0100               	movlb	0	; () banked
   964  000752  6FAF               	movwf	(init_uart_recv@uc+1)& (0+255),b
   965  000754  0101               	movlb	1	; () banked
   966  000756  0EAA               	movlw	low main@uc
   967  000758  0100               	movlb	0	; () banked
   968  00075A  0100               	movlb	0	; () banked
   969  00075C  6FAE               	movwf	init_uart_recv@uc& (0+255),b
   970  00075E  EC76  F00D         	call	_init_uart_recv	;wreg free
   971                           
   972                           ;main.c: 227: init_i2c(&ic);
   973  000762  0101               	movlb	1	; () banked
   974  000764  0E01               	movlw	high main@ic
   975  000766  0100               	movlb	0	; () banked
   976  000768  0100               	movlb	0	; () banked
   977  00076A  6FAF               	movwf	(init_i2c@ic+1)& (0+255),b
   978  00076C  0101               	movlb	1	; () banked
   979  00076E  0EB1               	movlw	low main@ic
   980  000770  0100               	movlb	0	; () banked
   981  000772  0100               	movlb	0	; () banked
   982  000774  6FAE               	movwf	init_i2c@ic& (0+255),b
   983  000776  ECDD  F00A         	call	_init_i2c	;wreg free
   984                           
   985                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
   986  00077A  0101               	movlb	1	; () banked
   987  00077C  0E01               	movlw	high main@t1thread_data
   988  00077E  0100               	movlb	0	; () banked
   989  000780  0100               	movlb	0	; () banked
   990  000782  6FAF               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   991  000784  0101               	movlb	1	; () banked
   992  000786  0EA8               	movlw	low main@t1thread_data
   993  000788  0100               	movlb	0	; () banked
   994  00078A  0100               	movlb	0	; () banked
   995  00078C  6FAE               	movwf	init_timer1_lthread@tptr& (0+255),b
   996  00078E  ECA8  F00D         	call	_init_timer1_lthread	;wreg free
   997                           
   998                           ;main.c: 233: init_queues();
   999  000792  ECA6  F00A         	call	_init_queues	;wreg free
  1000                           
  1001                           ;main.c: 237: TRISB = 0x0;
  1002  000796  0E00               	movlw	0
  1003  000798  6E93               	movwf	3987,c	;volatile
  1004                           
  1005                           ;main.c: 238: LATB = 0x0;
  1006  00079A  0E00               	movlw	0
  1007  00079C  6E8A               	movwf	3978,c	;volatile
  1008                           
  1009                           ;main.c: 240: PORTA = 0x0;
  1010  00079E  0E00               	movlw	0
  1011  0007A0  6E80               	movwf	3968,c	;volatile
  1012                           
  1013                           ;main.c: 241: LATA = 0x0;
  1014  0007A2  0E00               	movlw	0
  1015  0007A4  6E89               	movwf	3977,c	;volatile
  1016                           
  1017                           ;main.c: 242: TRISA = 0x0F;
  1018  0007A6  0E0F               	movlw	15
  1019  0007A8  6E92               	movwf	3986,c	;volatile
  1020                           
  1021                           ;main.c: 255: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110101);
  1022  0007AA  0ED5               	movlw	213
  1023  0007AC  EC07  F00D         	call	_OpenTimer0
  1024                           
  1025                           ;main.c: 264: OpenTimer1(0b11111111 & 0b10111111 & 0b11001111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1026  0007B0  0E85               	movlw	133
  1027  0007B2  EC83  F00C         	call	_OpenTimer1
  1028                           
  1029                           ;main.c: 272: IPR1bits.ADIP = 0;
  1030  0007B6  9C9F               	bcf	3999,6,c	;volatile
  1031                           
  1032                           ;main.c: 273: PIE1bits.ADIE = 1;
  1033  0007B8  8C9D               	bsf	3997,6,c	;volatile
  1034                           
  1035                           ;main.c: 275: IPR1bits.TMR1IP = 0;
  1036  0007BA  909F               	bcf	3999,0,c	;volatile
  1037                           
  1038                           ;main.c: 277: IPR1bits.RCIP = 0;
  1039  0007BC  9A9F               	bcf	3999,5,c	;volatile
  1040                           
  1041                           ;main.c: 279: IPR1bits.SSPIP = 1;
  1042  0007BE  869F               	bsf	3999,3,c	;volatile
  1043                           
  1044                           ;main.c: 291: i2c_configure_slave(0x9E);
  1045  0007C0  0E9E               	movlw	158
  1046  0007C2  EC1C  F00D         	call	_i2c_configure_slave
  1047                           
  1048                           ;main.c: 308: PIE1bits.SSPIE = 1;
  1049  0007C6  869D               	bsf	3997,3,c	;volatile
  1050                           
  1051                           ;main.c: 319: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1052                           ;main.c: 320: 0b11111111 & 0b11101111, 0x19);
  1053  0007C8  0E00               	movlw	0
  1054  0007CA  0100               	movlb	0	; () banked
  1055  0007CC  0100               	movlb	0	; () banked
  1056  0007CE  6FAF               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1057  0007D0  0E19               	movlw	25
  1058  0007D2  0100               	movlb	0	; () banked
  1059  0007D4  6FAE               	movwf	OpenUSART@spbrg& (0+255),b
  1060  0007D6  0E6C               	movlw	108
  1061  0007D8  ECE0  F008         	call	_OpenUSART
  1062                           
  1063                           ;main.c: 326: enable_interrupts();
  1064  0007DC  ECE2  F00D         	call	_enable_interrupts	;wreg free
  1065                           
  1066                           ;main.c: 340: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1067                           ;main.c: 341: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1068                           ;main.c: 342: 0b1011);
  1069  0007E0  0101               	movlb	1	; () banked
  1070  0007E2  6F80               	movwf	??_main& (0+255),b
  1071  0007E4  0E0C               	movlw	12
  1072  0007E6  0100               	movlb	0	; () banked
  1073  0007E8  0100               	movlb	0	; () banked
  1074  0007EA  6FAE               	movwf	OpenADC@config2& (0+255),b
  1075  0007EC  0101               	movlb	1	; () banked
  1076  0007EE  5180               	movf	??_main& (0+255),w,b
  1077  0007F0  0101               	movlb	1	; () banked
  1078  0007F2  6F81               	movwf	(??_main+1)& (0+255),b
  1079  0007F4  0E0B               	movlw	11
  1080  0007F6  0100               	movlb	0	; () banked
  1081  0007F8  0100               	movlb	0	; () banked
  1082  0007FA  6FAF               	movwf	OpenADC@portconfig& (0+255),b
  1083  0007FC  0101               	movlb	1	; () banked
  1084  0007FE  5181               	movf	(??_main+1)& (0+255),w,b
  1085  000800  0E53               	movlw	83
  1086  000802  EC6E  F009         	call	_OpenADC
  1087                           
  1088                           ;main.c: 343: SetChanADC(0b10001111);
  1089  000806  0E8F               	movlw	143
  1090  000808  EC66  F00D         	call	_SetChanADC
  1091                           
  1092                           ;main.c: 354: unsigned char msg[2] = {0x12, 0x34};
  1093  00080C  C1F2  F19F         	movff	main@F5204,main@msg
  1094  000810  C1F3  F1A0         	movff	main@F5204+1,main@msg+1
  1095  000814                     l3099:
  1096                           
  1097                           ;main.c: 363: block_on_To_msgqueues();
  1098  000814  ECF1  F009         	call	_block_on_To_msgqueues	;wreg free
  1099                           
  1100                           ;main.c: 370: length = ToMainHigh_recvmsg(28, &msgtype, (void *) msgbuffer);
  1101  000818  0101               	movlb	1	; () banked
  1102  00081A  0E01               	movlw	high main@msgtype
  1103  00081C  0100               	movlb	0	; () banked
  1104  00081E  0100               	movlb	0	; () banked
  1105  000820  6FC7               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1106  000822  0101               	movlb	1	; () banked
  1107  000824  0EB0               	movlw	low main@msgtype
  1108  000826  0100               	movlb	0	; () banked
  1109  000828  0100               	movlb	0	; () banked
  1110  00082A  6FC6               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1111  00082C  0101               	movlb	1	; () banked
  1112  00082E  0E01               	movlw	high main@msgbuffer
  1113  000830  0100               	movlb	0	; () banked
  1114  000832  0100               	movlb	0	; () banked
  1115  000834  6FC9               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1116  000836  0101               	movlb	1	; () banked
  1117  000838  0E82               	movlw	low main@msgbuffer
  1118  00083A  0100               	movlb	0	; () banked
  1119  00083C  0100               	movlb	0	; () banked
  1120  00083E  6FC8               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1121  000840  0E1C               	movlw	28
  1122  000842  EC23  F00C         	call	_ToMainHigh_recvmsg
  1123  000846  0101               	movlb	1	; () banked
  1124  000848  0101               	movlb	1	; () banked
  1125  00084A  6FAF               	movwf	main@length& (0+255),b
  1126                           
  1127                           ; BSR set to: 1
  1128                           ;main.c: 371: if (length < 0) {
  1129  00084C  0101               	movlb	1	; () banked
  1130  00084E  0101               	movlb	1	; () banked
  1131  000850  BFAF               	btfsc	main@length& (0+255),7,b
  1132  000852  D080               	goto	l3119
  1133  000854  D06D               	goto	l3117
  1134  000856                     l3107:
  1135                           
  1136                           ; BSR set to: 1
  1137                           ;main.c: 379: {
  1138                           ;main.c: 380: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1139  000856  0101               	movlb	1	; () banked
  1140  000858  0E01               	movlw	high main@t0thread_data
  1141  00085A  0100               	movlb	0	; () banked
  1142  00085C  0100               	movlb	0	; () banked
  1143  00085E  6FAF               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1144  000860  0101               	movlb	1	; () banked
  1145  000862  0EA6               	movlw	low main@t0thread_data
  1146  000864  0100               	movlb	0	; () banked
  1147  000866  0100               	movlb	0	; () banked
  1148  000868  6FAE               	movwf	timer0_lthread@tptr& (0+255),b
  1149  00086A  0101               	movlb	1	; () banked
  1150  00086C  0100               	movlb	0	; () banked
  1151  00086E  C1B0  F0B0         	movff	main@msgtype,timer0_lthread@msgtype
  1152  000872  0100               	movlb	0	; () banked
  1153  000874  0100               	movlb	0	; () banked
  1154  000876  6BB1               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1155  000878  0101               	movlb	1	; () banked
  1156  00087A  0101               	movlb	1	; () banked
  1157  00087C  51AF               	movf	main@length& (0+255),w,b
  1158  00087E  0100               	movlb	0	; () banked
  1159  000880  0100               	movlb	0	; () banked
  1160  000882  6FB2               	movwf	timer0_lthread@length& (0+255),b
  1161  000884  0100               	movlb	0	; () banked
  1162  000886  6BB3               	clrf	(timer0_lthread@length+1)& (0+255),b
  1163  000888  0100               	movlb	0	; () banked
  1164  00088A  BFB2               	btfsc	timer0_lthread@length& (0+255),7,b
  1165  00088C  07B3               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1166  00088E  0101               	movlb	1	; () banked
  1167  000890  0E01               	movlw	high main@msgbuffer
  1168  000892  0100               	movlb	0	; () banked
  1169  000894  0100               	movlb	0	; () banked
  1170  000896  6FB5               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1171  000898  0101               	movlb	1	; () banked
  1172  00089A  0E82               	movlw	low main@msgbuffer
  1173  00089C  0100               	movlb	0	; () banked
  1174  00089E  0100               	movlb	0	; () banked
  1175  0008A0  6FB4               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1176  0008A2  EC9F  F00D         	call	_timer0_lthread	;wreg free
  1177                           
  1178                           ;main.c: 381: break;
  1179  0008A6  D056               	goto	l3119
  1180  0008A8                     l121:
  1181                           
  1182                           ;main.c: 384: case 41:
  1183                           ;main.c: 385: {
  1184                           ;main.c: 388: last_reg_recvd = msgbuffer[0];
  1185  0008A8  C182  F1A1         	movff	main@msgbuffer,main@last_reg_recvd
  1186                           
  1187                           ;main.c: 389: break;
  1188  0008AC  D053               	goto	l3119
  1189  0008AE                     l3109:
  1190                           
  1191                           ;main.c: 392: {
  1192                           ;main.c: 393: i2c_master_send(2, 3, msgbuffer, 0x9E);
  1193  0008AE  0101               	movlb	1	; () banked
  1194  0008B0  6F80               	movwf	??_main& (0+255),b
  1195  0008B2  0E03               	movlw	3
  1196  0008B4  0100               	movlb	0	; () banked
  1197  0008B6  0100               	movlb	0	; () banked
  1198  0008B8  6FAE               	movwf	i2c_master_send@recvlength& (0+255),b
  1199  0008BA  0101               	movlb	1	; () banked
  1200  0008BC  5180               	movf	??_main& (0+255),w,b
  1201  0008BE  0101               	movlb	1	; () banked
  1202  0008C0  0E01               	movlw	high main@msgbuffer
  1203  0008C2  0100               	movlb	0	; () banked
  1204  0008C4  0100               	movlb	0	; () banked
  1205  0008C6  6FB0               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1206  0008C8  0101               	movlb	1	; () banked
  1207  0008CA  0E82               	movlw	low main@msgbuffer
  1208  0008CC  0100               	movlb	0	; () banked
  1209  0008CE  0100               	movlb	0	; () banked
  1210  0008D0  6FAF               	movwf	i2c_master_send@msg& (0+255),b
  1211  0008D2  0101               	movlb	1	; () banked
  1212  0008D4  6F81               	movwf	(??_main+1)& (0+255),b
  1213  0008D6  0E9E               	movlw	158
  1214  0008D8  0100               	movlb	0	; () banked
  1215  0008DA  0100               	movlb	0	; () banked
  1216  0008DC  6FB1               	movwf	i2c_master_send@slave_addr& (0+255),b
  1217  0008DE  0101               	movlb	1	; () banked
  1218  0008E0  5181               	movf	(??_main+1)& (0+255),w,b
  1219  0008E2  0E02               	movlw	2
  1220  0008E4  EC28  F005         	call	_i2c_master_send
  1221                           
  1222                           ;main.c: 394: break;
  1223  0008E8  D035               	goto	l3119
  1224  0008EA                     l123:
  1225                           
  1226                           ; BSR set to: 1
  1227                           ;main.c: 397: {
  1228                           ;main.c: 398: unsigned char msg2[2] = {0xEE, 0xFF};
  1229  0008EA  C1F4  F1A2         	movff	main@F5207,main@msg2
  1230  0008EE  C1F5  F1A3         	movff	main@F5207+1,main@msg2+1
  1231                           
  1232                           ; BSR set to: 1
  1233                           ;main.c: 399: i2c_master_send(2, 3, msg2, 0x9E);
  1234  0008F2  0101               	movlb	1	; () banked
  1235  0008F4  6F80               	movwf	??_main& (0+255),b
  1236  0008F6  0E03               	movlw	3
  1237  0008F8  0100               	movlb	0	; () banked
  1238  0008FA  0100               	movlb	0	; () banked
  1239  0008FC  6FAE               	movwf	i2c_master_send@recvlength& (0+255),b
  1240  0008FE  0101               	movlb	1	; () banked
  1241  000900  5180               	movf	??_main& (0+255),w,b
  1242  000902  0101               	movlb	1	; () banked
  1243  000904  0E01               	movlw	high main@msg2
  1244  000906  0100               	movlb	0	; () banked
  1245  000908  0100               	movlb	0	; () banked
  1246  00090A  6FB0               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1247  00090C  0101               	movlb	1	; () banked
  1248  00090E  0EA2               	movlw	low main@msg2
  1249  000910  0100               	movlb	0	; () banked
  1250  000912  0100               	movlb	0	; () banked
  1251  000914  6FAF               	movwf	i2c_master_send@msg& (0+255),b
  1252  000916  0101               	movlb	1	; () banked
  1253  000918  6F81               	movwf	(??_main+1)& (0+255),b
  1254  00091A  0E9E               	movlw	158
  1255  00091C  0100               	movlb	0	; () banked
  1256  00091E  0100               	movlb	0	; () banked
  1257  000920  6FB1               	movwf	i2c_master_send@slave_addr& (0+255),b
  1258  000922  0101               	movlb	1	; () banked
  1259  000924  5181               	movf	(??_main+1)& (0+255),w,b
  1260  000926  0E02               	movlw	2
  1261  000928  EC28  F005         	call	_i2c_master_send
  1262                           
  1263                           ;main.c: 400: LATBbits.LATB2 = 0;
  1264  00092C  948A               	bcf	3978,2,c	;volatile
  1265                           
  1266                           ;main.c: 401: break;
  1267  00092E  D012               	goto	l3119
  1268  000930                     l3117:
  1269  000930  0101               	movlb	1	; () banked
  1270  000932  0101               	movlb	1	; () banked
  1271  000934  51B0               	movf	main@msgtype& (0+255),w,b
  1272                           
  1273                           ; Switch size 1, requested type "space"
  1274                           ; Number of cases is 5, Range of values is 10 to 46
  1275                           ; switch strategies available:
  1276                           ; Name         Instructions Cycles
  1277                           ; simple_byte           16     9 (average)
  1278                           ;	Chosen strategy is simple_byte
  1279  000936  0A0A               	xorlw	10	; case 10
  1280  000938  B4D8               	btfsc	status,2,c
  1281  00093A  D78D               	goto	l3107
  1282  00093C  0A22               	xorlw	34	; case 40
  1283  00093E  B4D8               	btfsc	status,2,c
  1284  000940  D7B3               	goto	l121
  1285  000942  0A01               	xorlw	1	; case 41
  1286  000944  B4D8               	btfsc	status,2,c
  1287  000946  D7B0               	goto	l121
  1288  000948  0A04               	xorlw	4	; case 45
  1289  00094A  B4D8               	btfsc	status,2,c
  1290  00094C  D7B0               	goto	l3109
  1291  00094E  0A03               	xorlw	3	; case 46
  1292  000950  B4D8               	btfsc	status,2,c
  1293  000952  D7CB               	goto	l123
  1294  000954                     l3119:
  1295                           
  1296                           ;main.c: 409: }
  1297                           ;main.c: 412: length = ToMainLow_recvmsg(28, &msgtype, (void *) msgbuffer);
  1298  000954  0101               	movlb	1	; () banked
  1299  000956  0E01               	movlw	high main@msgtype
  1300  000958  0100               	movlb	0	; () banked
  1301  00095A  0100               	movlb	0	; () banked
  1302  00095C  6FC7               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1303  00095E  0101               	movlb	1	; () banked
  1304  000960  0EB0               	movlw	low main@msgtype
  1305  000962  0100               	movlb	0	; () banked
  1306  000964  0100               	movlb	0	; () banked
  1307  000966  6FC6               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1308  000968  0101               	movlb	1	; () banked
  1309  00096A  0E01               	movlw	high main@msgbuffer
  1310  00096C  0100               	movlb	0	; () banked
  1311  00096E  0100               	movlb	0	; () banked
  1312  000970  6FC9               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1313  000972  0101               	movlb	1	; () banked
  1314  000974  0E82               	movlw	low main@msgbuffer
  1315  000976  0100               	movlb	0	; () banked
  1316  000978  0100               	movlb	0	; () banked
  1317  00097A  6FC8               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1318  00097C  0E1C               	movlw	28
  1319  00097E  EC02  F00C         	call	_ToMainLow_recvmsg
  1320  000982  0101               	movlb	1	; () banked
  1321  000984  0101               	movlb	1	; () banked
  1322  000986  6FAF               	movwf	main@length& (0+255),b
  1323                           
  1324                           ; BSR set to: 1
  1325                           ;main.c: 413: if (length < 0) {
  1326  000988  0101               	movlb	1	; () banked
  1327  00098A  0101               	movlb	1	; () banked
  1328  00098C  BFAF               	btfsc	main@length& (0+255),7,b
  1329  00098E  D742               	goto	l3099
  1330  000990  D052               	goto	l3131
  1331  000992                     l3125:
  1332                           
  1333                           ; BSR set to: 1
  1334                           ;main.c: 421: {
  1335                           ;main.c: 422: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1336  000992  0101               	movlb	1	; () banked
  1337  000994  0E01               	movlw	high main@t1thread_data
  1338  000996  0100               	movlb	0	; () banked
  1339  000998  0100               	movlb	0	; () banked
  1340  00099A  6FC9               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1341  00099C  0101               	movlb	1	; () banked
  1342  00099E  0EA8               	movlw	low main@t1thread_data
  1343  0009A0  0100               	movlb	0	; () banked
  1344  0009A2  0100               	movlb	0	; () banked
  1345  0009A4  6FC8               	movwf	timer1_lthread@tptr& (0+255),b
  1346  0009A6  0101               	movlb	1	; () banked
  1347  0009A8  0100               	movlb	0	; () banked
  1348  0009AA  C1B0  F0CA         	movff	main@msgtype,timer1_lthread@msgtype
  1349  0009AE  0100               	movlb	0	; () banked
  1350  0009B0  0100               	movlb	0	; () banked
  1351  0009B2  6BCB               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1352  0009B4  0101               	movlb	1	; () banked
  1353  0009B6  0101               	movlb	1	; () banked
  1354  0009B8  51AF               	movf	main@length& (0+255),w,b
  1355  0009BA  0100               	movlb	0	; () banked
  1356  0009BC  0100               	movlb	0	; () banked
  1357  0009BE  6FCC               	movwf	timer1_lthread@length& (0+255),b
  1358  0009C0  0100               	movlb	0	; () banked
  1359  0009C2  6BCD               	clrf	(timer1_lthread@length+1)& (0+255),b
  1360  0009C4  0100               	movlb	0	; () banked
  1361  0009C6  BFCC               	btfsc	timer1_lthread@length& (0+255),7,b
  1362  0009C8  07CD               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1363  0009CA  0101               	movlb	1	; () banked
  1364  0009CC  0E01               	movlw	high main@msgbuffer
  1365  0009CE  0100               	movlb	0	; () banked
  1366  0009D0  0100               	movlb	0	; () banked
  1367  0009D2  6FCF               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1368  0009D4  0101               	movlb	1	; () banked
  1369  0009D6  0E82               	movlw	low main@msgbuffer
  1370  0009D8  0100               	movlb	0	; () banked
  1371  0009DA  0100               	movlb	0	; () banked
  1372  0009DC  6FCE               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1373  0009DE  EC6D  F00A         	call	_timer1_lthread	;wreg free
  1374                           
  1375                           ;main.c: 423: break;
  1376  0009E2  D718               	goto	l3099
  1377  0009E4                     l3127:
  1378                           
  1379                           ;main.c: 426: case 31:
  1380                           ;main.c: 427: {
  1381                           ;main.c: 428: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1382  0009E4  0101               	movlb	1	; () banked
  1383  0009E6  0E01               	movlw	high main@uthread_data
  1384  0009E8  0100               	movlb	0	; () banked
  1385  0009EA  0100               	movlb	0	; () banked
  1386  0009EC  6FAF               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1387  0009EE  0101               	movlb	1	; () banked
  1388  0009F0  0EA4               	movlw	low main@uthread_data
  1389  0009F2  0100               	movlb	0	; () banked
  1390  0009F4  0100               	movlb	0	; () banked
  1391  0009F6  6FAE               	movwf	uart_lthread@uptr& (0+255),b
  1392  0009F8  0101               	movlb	1	; () banked
  1393  0009FA  0100               	movlb	0	; () banked
  1394  0009FC  C1B0  F0B0         	movff	main@msgtype,uart_lthread@msgtype
  1395  000A00  0100               	movlb	0	; () banked
  1396  000A02  0100               	movlb	0	; () banked
  1397  000A04  6BB1               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1398  000A06  0101               	movlb	1	; () banked
  1399  000A08  0101               	movlb	1	; () banked
  1400  000A0A  51AF               	movf	main@length& (0+255),w,b
  1401  000A0C  0100               	movlb	0	; () banked
  1402  000A0E  0100               	movlb	0	; () banked
  1403  000A10  6FB2               	movwf	uart_lthread@length& (0+255),b
  1404  000A12  0100               	movlb	0	; () banked
  1405  000A14  6BB3               	clrf	(uart_lthread@length+1)& (0+255),b
  1406  000A16  0100               	movlb	0	; () banked
  1407  000A18  BFB2               	btfsc	uart_lthread@length& (0+255),7,b
  1408  000A1A  07B3               	decf	(uart_lthread@length+1)& (0+255),f,b
  1409  000A1C  0101               	movlb	1	; () banked
  1410  000A1E  0E01               	movlw	high main@msgbuffer
  1411  000A20  0100               	movlb	0	; () banked
  1412  000A22  0100               	movlb	0	; () banked
  1413  000A24  6FB5               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1414  000A26  0101               	movlb	1	; () banked
  1415  000A28  0E82               	movlw	low main@msgbuffer
  1416  000A2A  0100               	movlb	0	; () banked
  1417  000A2C  0100               	movlb	0	; () banked
  1418  000A2E  6FB4               	movwf	uart_lthread@msgbuffer& (0+255),b
  1419  000A30  EC64  F00C         	call	_uart_lthread	;wreg free
  1420                           
  1421                           ;main.c: 429: break;
  1422  000A34  D6EF               	goto	l3099
  1423  000A36                     l3131:
  1424  000A36  0101               	movlb	1	; () banked
  1425  000A38  0101               	movlb	1	; () banked
  1426  000A3A  51B0               	movf	main@msgtype& (0+255),w,b
  1427                           
  1428                           ; Switch size 1, requested type "space"
  1429                           ; Number of cases is 3, Range of values is 11 to 31
  1430                           ; switch strategies available:
  1431                           ; Name         Instructions Cycles
  1432                           ; simple_byte           10     6 (average)
  1433                           ;	Chosen strategy is simple_byte
  1434  000A3C  0A0B               	xorlw	11	; case 11
  1435  000A3E  B4D8               	btfsc	status,2,c
  1436  000A40  D7A8               	goto	l3125
  1437  000A42  0A15               	xorlw	21	; case 30
  1438  000A44  B4D8               	btfsc	status,2,c
  1439  000A46  D7CE               	goto	l3127
  1440  000A48  0A01               	xorlw	1	; case 31
  1441  000A4A  B4D8               	btfsc	status,2,c
  1442  000A4C  D7CB               	goto	l3127
  1443  000A4E  D6E2               	goto	l3099
  1444  000A50                     __end_of_main:
  1445                           	opt stack 0
  1446                           tblptru	equ	0xFF8
  1447                           tblptrh	equ	0xFF7
  1448                           tblptrl	equ	0xFF6
  1449                           tablat	equ	0xFF5
  1450                           postinc0	equ	0xFEE
  1451                           wreg	equ	0xFE8
  1452                           postdec1	equ	0xFE5
  1453                           fsr1l	equ	0xFE1
  1454                           status	equ	0xFD8
  1455                           
  1456 ;; *************** function _uart_lthread *****************
  1457 ;; Defined at:
  1458 ;;		line 9 in file "../src/uart_thread.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  uptr            2   46[BANK0 ] PTR struct __uart_thread
  1461 ;;		 -> main@uthread_data(2), 
  1462 ;;  msgtype         2   48[BANK0 ] int 
  1463 ;;  length          2   50[BANK0 ] int 
  1464 ;;  msgbuffer       2   52[BANK0 ] PTR unsigned char 
  1465 ;;		 -> main@msgbuffer(29), 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  2   46[BANK0 ] int 
  1470 ;; Registers used:
  1471 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1477 ;;      Params:         0       8       0       0       0
  1478 ;;      Locals:         0       0       0       0       0
  1479 ;;      Temps:          0       0       0       0       0
  1480 ;;      Totals:         0       8       0       0       0
  1481 ;;Total ram usage:        8 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:   11
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text1
  1492  0018C8                     __ptext1:
  1493                           	opt stack 0
  1494  0018C8                     _uart_lthread:
  1495                           	opt stack 19
  1496                           
  1497                           ;uart_thread.c: 10: if (msgtype == 30) {
  1498                           
  1499                           ; BSR set to: 1
  1500                           ;incstack = 0
  1501  0018C8  0100               	movlb	0	; () banked
  1502  0018CA  0100               	movlb	0	; () banked
  1503  0018CC  51B0               	movf	uart_lthread@msgtype& (0+255),w,b
  1504  0018CE  0A1E               	xorlw	30
  1505  0018D0  11B1               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1506  0018D2  B4D8               	btfsc	status,2,c
  1507  0018D4  0012               	return	
  1508                           
  1509                           ; BSR set to: 0
  1510                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1511                           
  1512                           ; BSR set to: 0
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;uart_thread.c: 11: }
  1516  0018D6  0100               	movlb	0	; () banked
  1517  0018D8  0100               	movlb	0	; () banked
  1518  0018DA  51B0               	movf	uart_lthread@msgtype& (0+255),w,b
  1519  0018DC  0A1F               	xorlw	31
  1520  0018DE  11B1               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1521  0018E0  A4D8               	btfss	status,2,c
  1522  0018E2  0012               	return	
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1526  0018E4  0100               	movlb	0	; () banked
  1527  0018E6  0100               	movlb	0	; () banked
  1528  0018E8  51B2               	movf	uart_lthread@length& (0+255),w,b
  1529  0018EA  0100               	movlb	0	; () banked
  1530  0018EC  0100               	movlb	0	; () banked
  1531  0018EE  25B4               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1532  0018F0  6ED9               	movwf	fsr2l,c
  1533  0018F2  0100               	movlb	0	; () banked
  1534  0018F4  0100               	movlb	0	; () banked
  1535  0018F6  51B3               	movf	(uart_lthread@length+1)& (0+255),w,b
  1536  0018F8  0100               	movlb	0	; () banked
  1537  0018FA  0100               	movlb	0	; () banked
  1538  0018FC  21B5               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1539  0018FE  6EDA               	movwf	fsr2h,c
  1540  001900  0E00               	movlw	0
  1541  001902  6EDF               	movwf	indf2,c
  1542  001904  0012               	return	
  1543  001906                     __end_of_uart_lthread:
  1544                           	opt stack 0
  1545                           tblptru	equ	0xFF8
  1546                           tblptrh	equ	0xFF7
  1547                           tblptrl	equ	0xFF6
  1548                           tablat	equ	0xFF5
  1549                           postinc0	equ	0xFEE
  1550                           wreg	equ	0xFE8
  1551                           postdec1	equ	0xFE5
  1552                           fsr1l	equ	0xFE1
  1553                           indf2	equ	0xFDF
  1554                           fsr2h	equ	0xFDA
  1555                           fsr2l	equ	0xFD9
  1556                           status	equ	0xFD8
  1557                           
  1558 ;; *************** function _timer1_lthread *****************
  1559 ;; Defined at:
  1560 ;;		line 14 in file "../src/timer1_thread.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  tptr            2   72[BANK0 ] PTR struct __timer1_thre
  1563 ;;		 -> main@t1thread_data(2), 
  1564 ;;  msgtype         2   74[BANK0 ] int 
  1565 ;;  length          2   76[BANK0 ] int 
  1566 ;;  msgbuffer       2   78[BANK0 ] PTR unsigned char 
  1567 ;;		 -> main@msgbuffer(29), 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  retval          1    1[BANK1 ] char 
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  2   72[BANK0 ] int 
  1572 ;; Registers used:
  1573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1579 ;;      Params:         0       8       0       0       0
  1580 ;;      Locals:         0       0       1       0       0
  1581 ;;      Temps:          0       0       1       0       0
  1582 ;;      Totals:         0       8       2       0       0
  1583 ;;Total ram usage:       10 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:   14
  1586 ;; This function calls:
  1587 ;;		_FromMainHigh_sendmsg
  1588 ;;		___lwmod
  1589 ;; This function is called by:
  1590 ;;		_main
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text2
  1595  0014DA                     __ptext2:
  1596                           	opt stack 0
  1597  0014DA                     _timer1_lthread:
  1598                           	opt stack 16
  1599                           
  1600                           ;timer1_thread.c: 15: signed char retval;
  1601                           ;timer1_thread.c: 17: tptr->msgcount++;
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;incstack = 0
  1605  0014DA  C0C8  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1606  0014DE  C0C9  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1607  0014E2  2ADE               	incf	postinc2,f,c
  1608  0014E4  0E00               	movlw	0
  1609  0014E6  22DD               	addwfc	postdec2,f,c
  1610                           
  1611                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1612  0014E8  C0C8  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1613  0014EC  C0C9  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1614  0014F0  0100               	movlb	0	; () banked
  1615  0014F2  CFDE F0AE          	movff	postinc2,___lwmod@dividend
  1616  0014F6  0100               	movlb	0	; () banked
  1617  0014F8  CFDD F0AF          	movff	postdec2,___lwmod@dividend+1
  1618  0014FC  0E00               	movlw	0
  1619  0014FE  0100               	movlb	0	; () banked
  1620  001500  0100               	movlb	0	; () banked
  1621  001502  6FB1               	movwf	(___lwmod@divisor+1)& (0+255),b
  1622  001504  0E0A               	movlw	10
  1623  001506  0100               	movlb	0	; () banked
  1624  001508  6FB0               	movwf	___lwmod@divisor& (0+255),b
  1625  00150A  EC29  F009         	call	___lwmod	;wreg free
  1626  00150E  0100               	movlb	0	; () banked
  1627  001510  0100               	movlb	0	; () banked
  1628  001512  51AE               	movf	?___lwmod& (0+255),w,b
  1629  001514  0A09               	xorlw	9
  1630  001516  0100               	movlb	0	; () banked
  1631  001518  11AF               	iorwf	(?___lwmod+1)& (0+255),w,b
  1632  00151A  A4D8               	btfss	status,2,c
  1633  00151C  0012               	return	
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1637  00151E  0101               	movlb	1	; () banked
  1638  001520  6F7E               	movwf	??_timer1_lthread& (0+255),b
  1639  001522  0E14               	movlw	20
  1640  001524  0100               	movlb	0	; () banked
  1641  001526  0100               	movlb	0	; () banked
  1642  001528  6FC4               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1643  00152A  0101               	movlb	1	; () banked
  1644  00152C  517E               	movf	??_timer1_lthread& (0+255),w,b
  1645  00152E  0100               	movlb	0	; () banked
  1646  001530  0100               	movlb	0	; () banked
  1647  001532  C0C9  F0C6         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1648  001536  0100               	movlb	0	; () banked
  1649  001538  0100               	movlb	0	; () banked
  1650  00153A  C0C8  F0C5         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1651  00153E  0E02               	movlw	2
  1652  001540  EC9F  F00C         	call	_FromMainHigh_sendmsg
  1653  001544  0101               	movlb	1	; () banked
  1654  001546  0101               	movlb	1	; () banked
  1655  001548  6F7F               	movwf	timer1_lthread@retval& (0+255),b
  1656  00154A  0012               	return	
  1657  00154C                     __end_of_timer1_lthread:
  1658                           	opt stack 0
  1659                           tblptru	equ	0xFF8
  1660                           tblptrh	equ	0xFF7
  1661                           tblptrl	equ	0xFF6
  1662                           tablat	equ	0xFF5
  1663                           postinc0	equ	0xFEE
  1664                           wreg	equ	0xFE8
  1665                           postdec1	equ	0xFE5
  1666                           fsr1l	equ	0xFE1
  1667                           indf2	equ	0xFDF
  1668                           postinc2	equ	0xFDE
  1669                           postdec2	equ	0xFDD
  1670                           fsr2h	equ	0xFDA
  1671                           fsr2l	equ	0xFD9
  1672                           status	equ	0xFD8
  1673                           
  1674 ;; *************** function ___lwmod *****************
  1675 ;; Defined at:
  1676 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  dividend        2   46[BANK0 ] unsigned int 
  1679 ;;  divisor         2   48[BANK0 ] unsigned int 
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  counter         1   51[BANK0 ] unsigned char 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  2   46[BANK0 ] unsigned int 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, status,0
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1691 ;;      Params:         0       4       0       0       0
  1692 ;;      Locals:         0       1       0       0       0
  1693 ;;      Temps:          0       1       0       0       0
  1694 ;;      Totals:         0       6       0       0       0
  1695 ;;Total ram usage:        6 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:   11
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_timer1_lthread
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text3
  1706  001252                     __ptext3:
  1707                           	opt stack 0
  1708  001252                     ___lwmod:
  1709                           	opt stack 18
  1710                           
  1711                           ;incstack = 0
  1712  001252  0100               	movlb	0	; () banked
  1713  001254  0100               	movlb	0	; () banked
  1714  001256  51B1               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1715  001258  11B0               	iorwf	___lwmod@divisor& (0+255),w,b
  1716  00125A  B4D8               	btfsc	status,2,c
  1717  00125C  D03A               	goto	l1067
  1718                           
  1719                           ; BSR set to: 0
  1720  00125E  0100               	movlb	0	; () banked
  1721  001260  6FB2               	movwf	??___lwmod& (0+255),b
  1722  001262  0E01               	movlw	1
  1723  001264  0100               	movlb	0	; () banked
  1724  001266  0100               	movlb	0	; () banked
  1725  001268  6FB3               	movwf	___lwmod@counter& (0+255),b
  1726  00126A  0100               	movlb	0	; () banked
  1727  00126C  51B2               	movf	??___lwmod& (0+255),w,b
  1728  00126E  D009               	goto	l3477
  1729  001270                     l3475:
  1730                           
  1731                           ; BSR set to: 0
  1732  001270  0100               	movlb	0	; () banked
  1733  001272  0100               	movlb	0	; () banked
  1734  001274  0100               	movlb	0	; () banked
  1735  001276  90D8               	bcf	status,0,c
  1736  001278  37B0               	rlcf	___lwmod@divisor& (0+255),f,b
  1737  00127A  37B1               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1738  00127C  0100               	movlb	0	; () banked
  1739  00127E  0100               	movlb	0	; () banked
  1740  001280  2BB3               	incf	___lwmod@counter& (0+255),f,b
  1741  001282                     l3477:
  1742                           
  1743                           ; BSR set to: 0
  1744  001282  0100               	movlb	0	; () banked
  1745  001284  0100               	movlb	0	; () banked
  1746  001286  AFB1               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1747  001288  D7F3               	goto	l3475
  1748  00128A                     l3479:
  1749                           
  1750                           ; BSR set to: 0
  1751  00128A  0100               	movlb	0	; () banked
  1752  00128C  0100               	movlb	0	; () banked
  1753  00128E  51B0               	movf	___lwmod@divisor& (0+255),w,b
  1754  001290  0100               	movlb	0	; () banked
  1755  001292  0100               	movlb	0	; () banked
  1756  001294  5DAE               	subwf	___lwmod@dividend& (0+255),w,b
  1757  001296  0100               	movlb	0	; () banked
  1758  001298  0100               	movlb	0	; () banked
  1759  00129A  51B1               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1760  00129C  0100               	movlb	0	; () banked
  1761  00129E  0100               	movlb	0	; () banked
  1762  0012A0  59AF               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1763  0012A2  A0D8               	btfss	status,0,c
  1764  0012A4  D00C               	goto	l3483
  1765                           
  1766                           ; BSR set to: 0
  1767  0012A6  0100               	movlb	0	; () banked
  1768  0012A8  0100               	movlb	0	; () banked
  1769  0012AA  51B0               	movf	___lwmod@divisor& (0+255),w,b
  1770  0012AC  0100               	movlb	0	; () banked
  1771  0012AE  0100               	movlb	0	; () banked
  1772  0012B0  5FAE               	subwf	___lwmod@dividend& (0+255),f,b
  1773  0012B2  0100               	movlb	0	; () banked
  1774  0012B4  0100               	movlb	0	; () banked
  1775  0012B6  51B1               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1776  0012B8  0100               	movlb	0	; () banked
  1777  0012BA  0100               	movlb	0	; () banked
  1778  0012BC  5BAF               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1779  0012BE                     l3483:
  1780                           
  1781                           ; BSR set to: 0
  1782  0012BE  0100               	movlb	0	; () banked
  1783  0012C0  0100               	movlb	0	; () banked
  1784  0012C2  0100               	movlb	0	; () banked
  1785  0012C4  90D8               	bcf	status,0,c
  1786  0012C6  33B1               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1787  0012C8  33B0               	rrcf	___lwmod@divisor& (0+255),f,b
  1788                           
  1789                           ; BSR set to: 0
  1790  0012CA  0100               	movlb	0	; () banked
  1791  0012CC  0100               	movlb	0	; () banked
  1792  0012CE  2FB3               	decfsz	___lwmod@counter& (0+255),f,b
  1793  0012D0  D7DC               	goto	l3479
  1794  0012D2                     l1067:
  1795                           
  1796                           ; BSR set to: 0
  1797  0012D2  C0AE  F0AE         	movff	___lwmod@dividend,?___lwmod
  1798  0012D6  C0AF  F0AF         	movff	___lwmod@dividend+1,?___lwmod+1
  1799                           
  1800                           ; BSR set to: 0
  1801  0012DA  0012               	return	
  1802  0012DC                     __end_of___lwmod:
  1803                           	opt stack 0
  1804                           tblptru	equ	0xFF8
  1805                           tblptrh	equ	0xFF7
  1806                           tblptrl	equ	0xFF6
  1807                           tablat	equ	0xFF5
  1808                           postinc0	equ	0xFEE
  1809                           wreg	equ	0xFE8
  1810                           postdec1	equ	0xFE5
  1811                           fsr1l	equ	0xFE1
  1812                           indf2	equ	0xFDF
  1813                           postinc2	equ	0xFDE
  1814                           postdec2	equ	0xFDD
  1815                           fsr2h	equ	0xFDA
  1816                           fsr2l	equ	0xFD9
  1817                           status	equ	0xFD8
  1818                           
  1819 ;; *************** function _FromMainHigh_sendmsg *****************
  1820 ;; Defined at:
  1821 ;;		line 174 in file "../src/messages.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  length          1    wreg     unsigned char 
  1824 ;;  msgtype         1   68[BANK0 ] unsigned char 
  1825 ;;  data            2   69[BANK0 ] PTR void 
  1826 ;;		 -> main@t1thread_data(2), 
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  length          1   71[BANK0 ] unsigned char 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      char 
  1831 ;; Registers used:
  1832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1838 ;;      Params:         0       3       0       0       0
  1839 ;;      Locals:         0       1       0       0       0
  1840 ;;      Temps:          0       0       0       0       0
  1841 ;;      Totals:         0       4       0       0       0
  1842 ;;Total ram usage:        4 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:   13
  1845 ;; This function calls:
  1846 ;;		_send_msg
  1847 ;; This function is called by:
  1848 ;;		_timer1_lthread
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           	psect	text4
  1853  00193E                     __ptext4:
  1854                           	opt stack 0
  1855  00193E                     _FromMainHigh_sendmsg:
  1856                           	opt stack 16
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;incstack = 0
  1860                           ;FromMainHigh_sendmsg@length stored from wreg
  1861  00193E  CFE8 F0C7          	movff	wreg,FromMainHigh_sendmsg@length
  1862                           
  1863                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1864  001942  0103               	movlb	3	; () banked
  1865  001944  0E03               	movlw	high _FromMainHigh_MQ
  1866  001946  0100               	movlb	0	; () banked
  1867  001948  0100               	movlb	0	; () banked
  1868  00194A  6FB9               	movwf	(send_msg@qptr+1)& (0+255),b
  1869  00194C  0103               	movlb	3	; () banked
  1870  00194E  0E00               	movlw	low _FromMainHigh_MQ
  1871  001950  0100               	movlb	0	; () banked
  1872  001952  0100               	movlb	0	; () banked
  1873  001954  6FB8               	movwf	send_msg@qptr& (0+255),b
  1874  001956  C0C7  F0BA         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1875  00195A  C0C4  F0BB         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1876  00195E  0100               	movlb	0	; () banked
  1877  001960  0100               	movlb	0	; () banked
  1878  001962  C0C6  F0BD         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1879  001966  0100               	movlb	0	; () banked
  1880  001968  0100               	movlb	0	; () banked
  1881  00196A  C0C5  F0BC         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1882  00196E  EC62  F006         	call	_send_msg	;wreg free
  1883  001972  0012               	return	
  1884  001974                     __end_of_FromMainHigh_sendmsg:
  1885                           	opt stack 0
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           postinc0	equ	0xFEE
  1891                           wreg	equ	0xFE8
  1892                           postdec1	equ	0xFE5
  1893                           fsr1l	equ	0xFE1
  1894                           indf2	equ	0xFDF
  1895                           postinc2	equ	0xFDE
  1896                           postdec2	equ	0xFDD
  1897                           fsr2h	equ	0xFDA
  1898                           fsr2l	equ	0xFD9
  1899                           status	equ	0xFD8
  1900                           
  1901 ;; *************** function _send_msg *****************
  1902 ;; Defined at:
  1903 ;;		line 24 in file "../src/messages.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  qptr            2   56[BANK0 ] PTR struct __msg_queue
  1906 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  1907 ;;  length          1   58[BANK0 ] unsigned char 
  1908 ;;  msgtype         1   59[BANK0 ] unsigned char 
  1909 ;;  data            2   60[BANK0 ] PTR void 
  1910 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(65), 
  1911 ;;		 -> main@uc(5), 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  qmsg            2   66[BANK0 ] PTR struct __msg
  1914 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  1915 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  1916 ;;  tlength         2   63[BANK0 ] unsigned int 
  1917 ;;  slot            1   65[BANK0 ] unsigned char 
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      char 
  1920 ;; Registers used:
  1921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1927 ;;      Params:         0       6       0       0       0
  1928 ;;      Locals:         0       5       0       0       0
  1929 ;;      Temps:          0       1       0       0       0
  1930 ;;      Totals:         0      12       0       0       0
  1931 ;;Total ram usage:       12 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:   12
  1934 ;; This function calls:
  1935 ;;		_memcpy
  1936 ;; This function is called by:
  1937 ;;		_FromMainHigh_sendmsg
  1938 ;;		_FromMainLow_sendmsg
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text5
  1943  000CC4                     __ptext5:
  1944                           	opt stack 0
  1945  000CC4                     _send_msg:
  1946                           	opt stack 16
  1947                           
  1948                           ;messages.c: 25: unsigned char slot;
  1949                           ;messages.c: 27: msg *qmsg;
  1950                           ;messages.c: 28: size_t tlength = length;
  1951                           
  1952                           ;incstack = 0
  1953  000CC4  0100               	movlb	0	; () banked
  1954  000CC6  0100               	movlb	0	; () banked
  1955  000CC8  C0BA  F0BF         	movff	send_msg@length,send_msg@tlength
  1956  000CCC  0100               	movlb	0	; () banked
  1957  000CCE  0100               	movlb	0	; () banked
  1958  000CD0  6BC0               	clrf	(send_msg@tlength+1)& (0+255),b
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1962  000CD2  0100               	movlb	0	; () banked
  1963  000CD4  EE20 F07C          	lfsr	2,124
  1964  000CD8  0100               	movlb	0	; () banked
  1965  000CDA  51B8               	movf	send_msg@qptr& (0+255),w,b
  1966  000CDC  26D9               	addwf	fsr2l,f,c
  1967  000CDE  0100               	movlb	0	; () banked
  1968  000CE0  51B9               	movf	(send_msg@qptr+1)& (0+255),w,b
  1969  000CE2  22DA               	addwfc	fsr2h,f,c
  1970  000CE4  50DF               	movf	indf2,w,c
  1971  000CE6  0100               	movlb	0	; () banked
  1972  000CE8  0100               	movlb	0	; () banked
  1973  000CEA  6FC1               	movwf	send_msg@slot& (0+255),b
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1977  000CEC  0100               	movlb	0	; () banked
  1978  000CEE  0100               	movlb	0	; () banked
  1979  000CF0  51C1               	movf	send_msg@slot& (0+255),w,b
  1980  000CF2  0D1F               	mullw	31
  1981  000CF4  50F3               	movf	prodl,w,c
  1982  000CF6  0100               	movlb	0	; () banked
  1983  000CF8  0100               	movlb	0	; () banked
  1984  000CFA  25B8               	addwf	send_msg@qptr& (0+255),w,b
  1985  000CFC  0100               	movlb	0	; () banked
  1986  000CFE  0100               	movlb	0	; () banked
  1987  000D00  6FC2               	movwf	send_msg@qmsg& (0+255),b
  1988  000D02  50F4               	movf	prodh,w,c
  1989  000D04  0100               	movlb	0	; () banked
  1990  000D06  0100               	movlb	0	; () banked
  1991  000D08  21B9               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  1992  000D0A  0100               	movlb	0	; () banked
  1993  000D0C  6FC3               	movwf	(send_msg@qmsg+1)& (0+255),b
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;messages.c: 41: if (qmsg->full != 0) {
  1997  000D0E  C0C2  FFD9         	movff	send_msg@qmsg,fsr2l
  1998  000D12  C0C3  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1999  000D16  50DF               	movf	indf2,w,c
  2000  000D18  B4D8               	btfsc	status,2,c
  2001  000D1A  D002               	goto	l3161
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;messages.c: 42: return (-1);
  2005  000D1C  0EFF               	movlw	255
  2006  000D1E  0012               	return	
  2007  000D20                     l3161:
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;messages.c: 43: }
  2011                           ;messages.c: 46: qmsg->length = length;
  2012  000D20  0100               	movlb	0	; () banked
  2013  000D22  EE20 F001          	lfsr	2,1
  2014  000D26  0100               	movlb	0	; () banked
  2015  000D28  51C2               	movf	send_msg@qmsg& (0+255),w,b
  2016  000D2A  26D9               	addwf	fsr2l,f,c
  2017  000D2C  0100               	movlb	0	; () banked
  2018  000D2E  51C3               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2019  000D30  22DA               	addwfc	fsr2h,f,c
  2020  000D32  0100               	movlb	0	; () banked
  2021  000D34  C0BA  FFDF         	movff	send_msg@length,indf2
  2022                           
  2023                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2024  000D38  0100               	movlb	0	; () banked
  2025  000D3A  EE20 F002          	lfsr	2,2
  2026  000D3E  0100               	movlb	0	; () banked
  2027  000D40  51C2               	movf	send_msg@qmsg& (0+255),w,b
  2028  000D42  26D9               	addwf	fsr2l,f,c
  2029  000D44  0100               	movlb	0	; () banked
  2030  000D46  51C3               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2031  000D48  22DA               	addwfc	fsr2h,f,c
  2032  000D4A  0100               	movlb	0	; () banked
  2033  000D4C  C0BB  FFDF         	movff	send_msg@msgtype,indf2
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2037  000D50  0E03               	movlw	3
  2038  000D52  0100               	movlb	0	; () banked
  2039  000D54  0100               	movlb	0	; () banked
  2040  000D56  25C2               	addwf	send_msg@qmsg& (0+255),w,b
  2041  000D58  0100               	movlb	0	; () banked
  2042  000D5A  0100               	movlb	0	; () banked
  2043  000D5C  6FAE               	movwf	memcpy@d1& (0+255),b
  2044  000D5E  0E00               	movlw	0
  2045  000D60  0100               	movlb	0	; () banked
  2046  000D62  0100               	movlb	0	; () banked
  2047  000D64  21C3               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2048  000D66  0100               	movlb	0	; () banked
  2049  000D68  6FAF               	movwf	(memcpy@d1+1)& (0+255),b
  2050  000D6A  0100               	movlb	0	; () banked
  2051  000D6C  0100               	movlb	0	; () banked
  2052  000D6E  C0BD  F0B1         	movff	send_msg@data+1,memcpy@s1+1
  2053  000D72  0100               	movlb	0	; () banked
  2054  000D74  0100               	movlb	0	; () banked
  2055  000D76  C0BC  F0B0         	movff	send_msg@data,memcpy@s1
  2056  000D7A  C0BF  F0B2         	movff	send_msg@tlength,memcpy@n
  2057  000D7E  C0C0  F0B3         	movff	send_msg@tlength+1,memcpy@n+1
  2058  000D82  EC12  F00B         	call	_memcpy	;wreg free
  2059                           
  2060                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2061  000D86  0100               	movlb	0	; () banked
  2062  000D88  EE20 F07C          	lfsr	2,124
  2063  000D8C  0100               	movlb	0	; () banked
  2064  000D8E  51B8               	movf	send_msg@qptr& (0+255),w,b
  2065  000D90  26D9               	addwf	fsr2l,f,c
  2066  000D92  0100               	movlb	0	; () banked
  2067  000D94  51B9               	movf	(send_msg@qptr+1)& (0+255),w,b
  2068  000D96  22DA               	addwfc	fsr2h,f,c
  2069  000D98  0100               	movlb	0	; () banked
  2070  000D9A  EE10 F07C          	lfsr	1,124
  2071  000D9E  0100               	movlb	0	; () banked
  2072  000DA0  51B8               	movf	send_msg@qptr& (0+255),w,b
  2073  000DA2  26E1               	addwf	fsr1l,f,c
  2074  000DA4  0100               	movlb	0	; () banked
  2075  000DA6  51B9               	movf	(send_msg@qptr+1)& (0+255),w,b
  2076  000DA8  22E2               	addwfc	fsr1h,f,c
  2077  000DAA  50E7               	movf	indf1,w,c
  2078  000DAC  0100               	movlb	0	; () banked
  2079  000DAE  6FBE               	movwf	??_send_msg& (0+255),b
  2080  000DB0  0100               	movlb	0	; () banked
  2081  000DB2  29BE               	incf	??_send_msg& (0+255),w,b
  2082  000DB4  0B03               	andlw	3
  2083  000DB6  6EDF               	movwf	indf2,c
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;messages.c: 59: qmsg->full = 1;
  2087  000DB8  C0C2  FFD9         	movff	send_msg@qmsg,fsr2l
  2088  000DBC  C0C3  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2089  000DC0  0E01               	movlw	1
  2090  000DC2  6EDF               	movwf	indf2,c
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;messages.c: 60: return (1);
  2094  000DC4  0E01               	movlw	1
  2095  000DC6  0012               	return	
  2096  000DC8                     __end_of_send_msg:
  2097                           	opt stack 0
  2098                           tblptru	equ	0xFF8
  2099                           tblptrh	equ	0xFF7
  2100                           tblptrl	equ	0xFF6
  2101                           tablat	equ	0xFF5
  2102                           prodh	equ	0xFF4
  2103                           prodl	equ	0xFF3
  2104                           postinc0	equ	0xFEE
  2105                           wreg	equ	0xFE8
  2106                           indf1	equ	0xFE7
  2107                           postdec1	equ	0xFE5
  2108                           fsr1h	equ	0xFE2
  2109                           fsr1l	equ	0xFE1
  2110                           indf2	equ	0xFDF
  2111                           postinc2	equ	0xFDE
  2112                           postdec2	equ	0xFDD
  2113                           fsr2h	equ	0xFDA
  2114                           fsr2l	equ	0xFD9
  2115                           status	equ	0xFD8
  2116                           
  2117 ;; *************** function _timer0_lthread *****************
  2118 ;; Defined at:
  2119 ;;		line 9 in file "../src/timer0_thread.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  tptr            2   46[BANK0 ] PTR struct __timer0_thre
  2122 ;;		 -> main@t0thread_data(2), 
  2123 ;;  msgtype         2   48[BANK0 ] int 
  2124 ;;  length          2   50[BANK0 ] int 
  2125 ;;  msgbuffer       2   52[BANK0 ] PTR unsigned char 
  2126 ;;		 -> main@msgbuffer(29), 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  msgval          2   54[BANK0 ] PTR unsigned int 
  2129 ;;		 -> main@msgbuffer(29), 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  2   46[BANK0 ] int 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2139 ;;      Params:         0       8       0       0       0
  2140 ;;      Locals:         0       2       0       0       0
  2141 ;;      Temps:          0       0       0       0       0
  2142 ;;      Totals:         0      10       0       0       0
  2143 ;;Total ram usage:       10 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:   11
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text6
  2154  001B3E                     __ptext6:
  2155                           	opt stack 0
  2156  001B3E                     _timer0_lthread:
  2157                           	opt stack 19
  2158                           
  2159                           ;timer0_thread.c: 10: unsigned int *msgval;
  2160                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;incstack = 0
  2164  001B3E  0100               	movlb	0	; () banked
  2165  001B40  0100               	movlb	0	; () banked
  2166  001B42  C0B5  F0B7         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2167  001B46  0100               	movlb	0	; () banked
  2168  001B48  0100               	movlb	0	; () banked
  2169  001B4A  C0B4  F0B6         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2170                           
  2171                           ; BSR set to: 0
  2172  001B4E  0012               	return	
  2173  001B50                     __end_of_timer0_lthread:
  2174                           	opt stack 0
  2175                           tblptru	equ	0xFF8
  2176                           tblptrh	equ	0xFF7
  2177                           tblptrl	equ	0xFF6
  2178                           tablat	equ	0xFF5
  2179                           prodh	equ	0xFF4
  2180                           prodl	equ	0xFF3
  2181                           postinc0	equ	0xFEE
  2182                           wreg	equ	0xFE8
  2183                           indf1	equ	0xFE7
  2184                           postdec1	equ	0xFE5
  2185                           fsr1h	equ	0xFE2
  2186                           fsr1l	equ	0xFE1
  2187                           indf2	equ	0xFDF
  2188                           postinc2	equ	0xFDE
  2189                           postdec2	equ	0xFDD
  2190                           fsr2h	equ	0xFDA
  2191                           fsr2l	equ	0xFD9
  2192                           status	equ	0xFD8
  2193                           
  2194 ;; *************** function _init_uart_recv *****************
  2195 ;; Defined at:
  2196 ;;		line 49 in file "../src/my_uart.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  uc              2   46[BANK0 ] PTR struct __uart_comm
  2199 ;;		 -> main@uc(5), 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;		None               void
  2204 ;; Registers used:
  2205 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2211 ;;      Params:         0       2       0       0       0
  2212 ;;      Locals:         0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0
  2214 ;;      Totals:         0       2       0       0       0
  2215 ;;Total ram usage:        2 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:   11
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text7
  2226  001AEC                     __ptext7:
  2227                           	opt stack 0
  2228  001AEC                     _init_uart_recv:
  2229                           	opt stack 19
  2230                           
  2231                           ;my_uart.c: 50: uc_ptr = uc;
  2232                           
  2233                           ; BSR set to: 0
  2234                           ;incstack = 0
  2235  001AEC  0100               	movlb	0	; () banked
  2236  001AEE  C0AF  F053         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2237  001AF2  0100               	movlb	0	; () banked
  2238  001AF4  C0AE  F052         	movff	init_uart_recv@uc,_uc_ptr
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;my_uart.c: 51: uc_ptr->buflen = 0;
  2242  001AF8  EE20 F004          	lfsr	2,4
  2243  001AFC  5052               	movf	_uc_ptr,w,c
  2244  001AFE  26D9               	addwf	fsr2l,f,c
  2245  001B00  5053               	movf	_uc_ptr+1,w,c
  2246  001B02  22DA               	addwfc	fsr2h,f,c
  2247  001B04  0E00               	movlw	0
  2248  001B06  6EDF               	movwf	indf2,c
  2249                           
  2250                           ; BSR set to: 0
  2251  001B08  0012               	return	
  2252  001B0A                     __end_of_init_uart_recv:
  2253                           	opt stack 0
  2254                           tblptru	equ	0xFF8
  2255                           tblptrh	equ	0xFF7
  2256                           tblptrl	equ	0xFF6
  2257                           tablat	equ	0xFF5
  2258                           prodh	equ	0xFF4
  2259                           prodl	equ	0xFF3
  2260                           postinc0	equ	0xFEE
  2261                           wreg	equ	0xFE8
  2262                           indf1	equ	0xFE7
  2263                           postdec1	equ	0xFE5
  2264                           fsr1h	equ	0xFE2
  2265                           fsr1l	equ	0xFE1
  2266                           indf2	equ	0xFDF
  2267                           postinc2	equ	0xFDE
  2268                           postdec2	equ	0xFDD
  2269                           fsr2h	equ	0xFDA
  2270                           fsr2l	equ	0xFD9
  2271                           status	equ	0xFD8
  2272                           
  2273 ;; *************** function _init_timer1_lthread *****************
  2274 ;; Defined at:
  2275 ;;		line 6 in file "../src/timer1_thread.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  tptr            2   46[BANK0 ] PTR struct __timer1_thre
  2278 ;;		 -> main@t1thread_data(2), 
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;		None               void
  2283 ;; Registers used:
  2284 ;;		wreg, fsr2l, fsr2h
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2290 ;;      Params:         0       2       0       0       0
  2291 ;;      Locals:         0       0       0       0       0
  2292 ;;      Temps:          0       0       0       0       0
  2293 ;;      Totals:         0       2       0       0       0
  2294 ;;Total ram usage:        2 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:   11
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_main
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text8
  2305  001B50                     __ptext8:
  2306                           	opt stack 0
  2307  001B50                     _init_timer1_lthread:
  2308                           	opt stack 19
  2309                           
  2310                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;incstack = 0
  2314  001B50  C0AE  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2315  001B54  C0AF  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2316  001B58  0E00               	movlw	0
  2317  001B5A  6EDE               	movwf	postinc2,c
  2318  001B5C  0E00               	movlw	0
  2319  001B5E  6EDD               	movwf	postdec2,c
  2320  001B60  0012               	return	
  2321  001B62                     __end_of_init_timer1_lthread:
  2322                           	opt stack 0
  2323                           tblptru	equ	0xFF8
  2324                           tblptrh	equ	0xFF7
  2325                           tblptrl	equ	0xFF6
  2326                           tablat	equ	0xFF5
  2327                           prodh	equ	0xFF4
  2328                           prodl	equ	0xFF3
  2329                           postinc0	equ	0xFEE
  2330                           wreg	equ	0xFE8
  2331                           indf1	equ	0xFE7
  2332                           postdec1	equ	0xFE5
  2333                           fsr1h	equ	0xFE2
  2334                           fsr1l	equ	0xFE1
  2335                           indf2	equ	0xFDF
  2336                           postinc2	equ	0xFDE
  2337                           postdec2	equ	0xFDD
  2338                           fsr2h	equ	0xFDA
  2339                           fsr2l	equ	0xFD9
  2340                           status	equ	0xFD8
  2341                           
  2342 ;; *************** function _init_queues *****************
  2343 ;; Defined at:
  2344 ;;		line 194 in file "../src/messages.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;		None               void
  2351 ;; Registers used:
  2352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2358 ;;      Params:         0       0       0       0       0
  2359 ;;      Locals:         0       0       0       0       0
  2360 ;;      Temps:          0       1       0       0       0
  2361 ;;      Totals:         0       1       0       0       0
  2362 ;;Total ram usage:        1 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:   12
  2365 ;; This function calls:
  2366 ;;		_init_queue
  2367 ;; This function is called by:
  2368 ;;		_main
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text9
  2373  00154C                     __ptext9:
  2374                           	opt stack 0
  2375  00154C                     _init_queues:
  2376                           	opt stack 18
  2377                           
  2378                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2379                           
  2380                           ;incstack = 0
  2381  00154C  0100               	movlb	0	; () banked
  2382  00154E  6FB2               	movwf	??_init_queues& (0+255),b
  2383  001550  0E00               	movlw	0
  2384  001552  6E50               	movwf	_MQ_Main_Willing_to_block,c
  2385  001554  0100               	movlb	0	; () banked
  2386  001556  51B2               	movf	??_init_queues& (0+255),w,b
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2390  001558  0101               	movlb	1	; () banked
  2391  00155A  0E01               	movlw	high _ToMainLow_MQ
  2392  00155C  0100               	movlb	0	; () banked
  2393  00155E  0100               	movlb	0	; () banked
  2394  001560  6FAF               	movwf	(init_queue@qptr+1)& (0+255),b
  2395  001562  0101               	movlb	1	; () banked
  2396  001564  0E00               	movlw	low _ToMainLow_MQ
  2397  001566  0100               	movlb	0	; () banked
  2398  001568  0100               	movlb	0	; () banked
  2399  00156A  6FAE               	movwf	init_queue@qptr& (0+255),b
  2400  00156C  EC30  F00A         	call	_init_queue	;wreg free
  2401                           
  2402                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2403  001570  0102               	movlb	2	; () banked
  2404  001572  0E02               	movlw	high _ToMainHigh_MQ
  2405  001574  0100               	movlb	0	; () banked
  2406  001576  0100               	movlb	0	; () banked
  2407  001578  6FAF               	movwf	(init_queue@qptr+1)& (0+255),b
  2408  00157A  0102               	movlb	2	; () banked
  2409  00157C  0E7E               	movlw	low _ToMainHigh_MQ
  2410  00157E  0100               	movlb	0	; () banked
  2411  001580  0100               	movlb	0	; () banked
  2412  001582  6FAE               	movwf	init_queue@qptr& (0+255),b
  2413  001584  EC30  F00A         	call	_init_queue	;wreg free
  2414                           
  2415                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2416  001588  0102               	movlb	2	; () banked
  2417  00158A  0E02               	movlw	high _FromMainLow_MQ
  2418  00158C  0100               	movlb	0	; () banked
  2419  00158E  0100               	movlb	0	; () banked
  2420  001590  6FAF               	movwf	(init_queue@qptr+1)& (0+255),b
  2421  001592  0102               	movlb	2	; () banked
  2422  001594  0E00               	movlw	low _FromMainLow_MQ
  2423  001596  0100               	movlb	0	; () banked
  2424  001598  0100               	movlb	0	; () banked
  2425  00159A  6FAE               	movwf	init_queue@qptr& (0+255),b
  2426  00159C  EC30  F00A         	call	_init_queue	;wreg free
  2427                           
  2428                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2429  0015A0  0103               	movlb	3	; () banked
  2430  0015A2  0E03               	movlw	high _FromMainHigh_MQ
  2431  0015A4  0100               	movlb	0	; () banked
  2432  0015A6  0100               	movlb	0	; () banked
  2433  0015A8  6FAF               	movwf	(init_queue@qptr+1)& (0+255),b
  2434  0015AA  0103               	movlb	3	; () banked
  2435  0015AC  0E00               	movlw	low _FromMainHigh_MQ
  2436  0015AE  0100               	movlb	0	; () banked
  2437  0015B0  0100               	movlb	0	; () banked
  2438  0015B2  6FAE               	movwf	init_queue@qptr& (0+255),b
  2439  0015B4  EC30  F00A         	call	_init_queue	;wreg free
  2440  0015B8  0012               	return	
  2441  0015BA                     __end_of_init_queues:
  2442                           	opt stack 0
  2443                           tblptru	equ	0xFF8
  2444                           tblptrh	equ	0xFF7
  2445                           tblptrl	equ	0xFF6
  2446                           tablat	equ	0xFF5
  2447                           prodh	equ	0xFF4
  2448                           prodl	equ	0xFF3
  2449                           postinc0	equ	0xFEE
  2450                           wreg	equ	0xFE8
  2451                           indf1	equ	0xFE7
  2452                           postdec1	equ	0xFE5
  2453                           fsr1h	equ	0xFE2
  2454                           fsr1l	equ	0xFE1
  2455                           indf2	equ	0xFDF
  2456                           postinc2	equ	0xFDE
  2457                           postdec2	equ	0xFDD
  2458                           fsr2h	equ	0xFDA
  2459                           fsr2l	equ	0xFD9
  2460                           status	equ	0xFD8
  2461                           
  2462 ;; *************** function _init_queue *****************
  2463 ;; Defined at:
  2464 ;;		line 14 in file "../src/messages.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  qptr            2   46[BANK0 ] PTR struct __msg_queue
  2467 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  i               1   49[BANK0 ] unsigned char 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;		None               void
  2472 ;; Registers used:
  2473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2479 ;;      Params:         0       2       0       0       0
  2480 ;;      Locals:         0       1       0       0       0
  2481 ;;      Temps:          0       1       0       0       0
  2482 ;;      Totals:         0       4       0       0       0
  2483 ;;Total ram usage:        4 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; Hardware stack levels required when called:   11
  2486 ;; This function calls:
  2487 ;;		Nothing
  2488 ;; This function is called by:
  2489 ;;		_init_queues
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text10
  2494  001460                     __ptext10:
  2495                           	opt stack 0
  2496  001460                     _init_queue:
  2497                           	opt stack 18
  2498                           
  2499                           ;messages.c: 15: unsigned char i;
  2500                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2501                           
  2502                           ;incstack = 0
  2503  001460  0100               	movlb	0	; () banked
  2504  001462  EE20 F07C          	lfsr	2,124
  2505  001466  0100               	movlb	0	; () banked
  2506  001468  51AE               	movf	init_queue@qptr& (0+255),w,b
  2507  00146A  26D9               	addwf	fsr2l,f,c
  2508  00146C  0100               	movlb	0	; () banked
  2509  00146E  51AF               	movf	(init_queue@qptr+1)& (0+255),w,b
  2510  001470  22DA               	addwfc	fsr2h,f,c
  2511  001472  0E00               	movlw	0
  2512  001474  6EDF               	movwf	indf2,c
  2513                           
  2514                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2515  001476  0100               	movlb	0	; () banked
  2516  001478  EE20 F07D          	lfsr	2,125
  2517  00147C  0100               	movlb	0	; () banked
  2518  00147E  51AE               	movf	init_queue@qptr& (0+255),w,b
  2519  001480  26D9               	addwf	fsr2l,f,c
  2520  001482  0100               	movlb	0	; () banked
  2521  001484  51AF               	movf	(init_queue@qptr+1)& (0+255),w,b
  2522  001486  22DA               	addwfc	fsr2h,f,c
  2523  001488  0E00               	movlw	0
  2524  00148A  6EDF               	movwf	indf2,c
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2528  00148C  0100               	movlb	0	; () banked
  2529  00148E  6FB0               	movwf	??_init_queue& (0+255),b
  2530  001490  0E00               	movlw	0
  2531  001492  0100               	movlb	0	; () banked
  2532  001494  0100               	movlb	0	; () banked
  2533  001496  6FB1               	movwf	init_queue@i& (0+255),b
  2534  001498  0100               	movlb	0	; () banked
  2535  00149A  51B0               	movf	??_init_queue& (0+255),w,b
  2536                           
  2537                           ; BSR set to: 0
  2538  00149C  0E03               	movlw	3
  2539  00149E  0100               	movlb	0	; () banked
  2540  0014A0  0100               	movlb	0	; () banked
  2541  0014A2  65B1               	cpfsgt	init_queue@i& (0+255),b
  2542  0014A4  D001               	goto	l2515
  2543  0014A6  0012               	return	
  2544  0014A8                     l2515:
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;messages.c: 20: qptr->queue[i].full = 0;
  2548  0014A8  0100               	movlb	0	; () banked
  2549  0014AA  0100               	movlb	0	; () banked
  2550  0014AC  51B1               	movf	init_queue@i& (0+255),w,b
  2551  0014AE  0D1F               	mullw	31
  2552  0014B0  50F3               	movf	prodl,w,c
  2553  0014B2  0100               	movlb	0	; () banked
  2554  0014B4  0100               	movlb	0	; () banked
  2555  0014B6  25AE               	addwf	init_queue@qptr& (0+255),w,b
  2556  0014B8  6ED9               	movwf	fsr2l,c
  2557  0014BA  50F4               	movf	prodh,w,c
  2558  0014BC  0100               	movlb	0	; () banked
  2559  0014BE  0100               	movlb	0	; () banked
  2560  0014C0  21AF               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2561  0014C2  6EDA               	movwf	fsr2h,c
  2562  0014C4  0E00               	movlw	0
  2563  0014C6  6EDF               	movwf	indf2,c
  2564                           
  2565                           ; BSR set to: 0
  2566  0014C8  0100               	movlb	0	; () banked
  2567  0014CA  0100               	movlb	0	; () banked
  2568  0014CC  2BB1               	incf	init_queue@i& (0+255),f,b
  2569                           
  2570                           ; BSR set to: 0
  2571  0014CE  0E03               	movlw	3
  2572  0014D0  0100               	movlb	0	; () banked
  2573  0014D2  0100               	movlb	0	; () banked
  2574  0014D4  65B1               	cpfsgt	init_queue@i& (0+255),b
  2575  0014D6  D7E8               	goto	l2515
  2576  0014D8  0012               	return	
  2577  0014DA                     __end_of_init_queue:
  2578                           	opt stack 0
  2579                           tblptru	equ	0xFF8
  2580                           tblptrh	equ	0xFF7
  2581                           tblptrl	equ	0xFF6
  2582                           tablat	equ	0xFF5
  2583                           prodh	equ	0xFF4
  2584                           prodl	equ	0xFF3
  2585                           postinc0	equ	0xFEE
  2586                           wreg	equ	0xFE8
  2587                           indf1	equ	0xFE7
  2588                           postdec1	equ	0xFE5
  2589                           fsr1h	equ	0xFE2
  2590                           fsr1l	equ	0xFE1
  2591                           indf2	equ	0xFDF
  2592                           postinc2	equ	0xFDE
  2593                           postdec2	equ	0xFDD
  2594                           fsr2h	equ	0xFDA
  2595                           fsr2l	equ	0xFD9
  2596                           status	equ	0xFD8
  2597                           
  2598 ;; *************** function _init_i2c *****************
  2599 ;; Defined at:
  2600 ;;		line 420 in file "../src/my_i2c.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  ic              2   46[BANK0 ] PTR struct __i2c_comm
  2603 ;;		 -> main@ic(65), 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;		None               void
  2608 ;; Registers used:
  2609 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2615 ;;      Params:         0       2       0       0       0
  2616 ;;      Locals:         0       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0
  2618 ;;      Totals:         0       2       0       0       0
  2619 ;;Total ram usage:        2 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:   11
  2622 ;; This function calls:
  2623 ;;		Nothing
  2624 ;; This function is called by:
  2625 ;;		_main
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           	psect	text11
  2630  0015BA                     __ptext11:
  2631                           	opt stack 0
  2632  0015BA                     _init_i2c:
  2633                           	opt stack 19
  2634                           
  2635                           ;my_i2c.c: 421: ic_ptr = ic;
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;incstack = 0
  2639  0015BA  0100               	movlb	0	; () banked
  2640  0015BC  0100               	movlb	0	; () banked
  2641  0015BE  C0AF  F0D1         	movff	init_i2c@ic+1,_ic_ptr+1
  2642  0015C2  0100               	movlb	0	; () banked
  2643  0015C4  0100               	movlb	0	; () banked
  2644  0015C6  C0AE  F0D0         	movff	init_i2c@ic,_ic_ptr
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;my_i2c.c: 422: ic_ptr->buflen = 0;
  2648  0015CA  0100               	movlb	0	; () banked
  2649  0015CC  EE20 F01C          	lfsr	2,28
  2650  0015D0  0100               	movlb	0	; () banked
  2651  0015D2  51D0               	movf	_ic_ptr& (0+255),w,b
  2652  0015D4  26D9               	addwf	fsr2l,f,c
  2653  0015D6  0100               	movlb	0	; () banked
  2654  0015D8  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2655  0015DA  22DA               	addwfc	fsr2h,f,c
  2656  0015DC  0E00               	movlw	0
  2657  0015DE  6EDF               	movwf	indf2,c
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;my_i2c.c: 423: ic_ptr->event_count = 0;
  2661  0015E0  0100               	movlb	0	; () banked
  2662  0015E2  EE20 F01E          	lfsr	2,30
  2663  0015E6  0100               	movlb	0	; () banked
  2664  0015E8  51D0               	movf	_ic_ptr& (0+255),w,b
  2665  0015EA  26D9               	addwf	fsr2l,f,c
  2666  0015EC  0100               	movlb	0	; () banked
  2667  0015EE  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2668  0015F0  22DA               	addwfc	fsr2h,f,c
  2669  0015F2  0E00               	movlw	0
  2670  0015F4  6EDF               	movwf	indf2,c
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;my_i2c.c: 424: ic_ptr->status = 0x5;
  2674  0015F6  0100               	movlb	0	; () banked
  2675  0015F8  EE20 F01F          	lfsr	2,31
  2676  0015FC  0100               	movlb	0	; () banked
  2677  0015FE  51D0               	movf	_ic_ptr& (0+255),w,b
  2678  001600  26D9               	addwf	fsr2l,f,c
  2679  001602  0100               	movlb	0	; () banked
  2680  001604  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2681  001606  22DA               	addwfc	fsr2h,f,c
  2682  001608  0E05               	movlw	5
  2683  00160A  6EDF               	movwf	indf2,c
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;my_i2c.c: 425: ic_ptr->error_count = 0;
  2687  00160C  0100               	movlb	0	; () banked
  2688  00160E  EE20 F021          	lfsr	2,33
  2689  001612  0100               	movlb	0	; () banked
  2690  001614  51D0               	movf	_ic_ptr& (0+255),w,b
  2691  001616  26D9               	addwf	fsr2l,f,c
  2692  001618  0100               	movlb	0	; () banked
  2693  00161A  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2694  00161C  22DA               	addwfc	fsr2h,f,c
  2695  00161E  0E00               	movlw	0
  2696  001620  6EDF               	movwf	indf2,c
  2697                           
  2698                           ; BSR set to: 0
  2699  001622  0012               	return	
  2700  001624                     __end_of_init_i2c:
  2701                           	opt stack 0
  2702                           tblptru	equ	0xFF8
  2703                           tblptrh	equ	0xFF7
  2704                           tblptrl	equ	0xFF6
  2705                           tablat	equ	0xFF5
  2706                           prodh	equ	0xFF4
  2707                           prodl	equ	0xFF3
  2708                           postinc0	equ	0xFEE
  2709                           wreg	equ	0xFE8
  2710                           indf1	equ	0xFE7
  2711                           postdec1	equ	0xFE5
  2712                           fsr1h	equ	0xFE2
  2713                           fsr1l	equ	0xFE1
  2714                           indf2	equ	0xFDF
  2715                           postinc2	equ	0xFDE
  2716                           postdec2	equ	0xFDD
  2717                           fsr2h	equ	0xFDA
  2718                           fsr2l	equ	0xFD9
  2719                           status	equ	0xFD8
  2720                           
  2721 ;; *************** function _i2c_master_send *****************
  2722 ;; Defined at:
  2723 ;;		line 44 in file "../src/my_i2c.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  sendlength      1    wreg     unsigned char 
  2726 ;;  recvlength      1   46[BANK0 ] unsigned char 
  2727 ;;  msg             2   47[BANK0 ] PTR unsigned char 
  2728 ;;		 -> main@msg2(2), main@msgbuffer(29), 
  2729 ;;  slave_addr      1   49[BANK0 ] unsigned char 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  sendlength      1   52[BANK0 ] unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      unsigned char 
  2734 ;; Registers used:
  2735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2741 ;;      Params:         0       4       0       0       0
  2742 ;;      Locals:         0       1       0       0       0
  2743 ;;      Temps:          0       2       0       0       0
  2744 ;;      Totals:         0       7       0       0       0
  2745 ;;Total ram usage:        7 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:   11
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_main
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text12
  2756  000A50                     __ptext12:
  2757                           	opt stack 0
  2758  000A50                     _i2c_master_send:
  2759                           	opt stack 19
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;incstack = 0
  2763                           ;i2c_master_send@sendlength stored from wreg
  2764  000A50  CFE8 F0B4          	movff	wreg,i2c_master_send@sendlength
  2765                           
  2766                           ;my_i2c.c: 46: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < sendlength; ic_ptr->outbu
      +                          flen++) {
  2767  000A54  0100               	movlb	0	; () banked
  2768  000A56  EE20 F03E          	lfsr	2,62
  2769  000A5A  0100               	movlb	0	; () banked
  2770  000A5C  51D0               	movf	_ic_ptr& (0+255),w,b
  2771  000A5E  26D9               	addwf	fsr2l,f,c
  2772  000A60  0100               	movlb	0	; () banked
  2773  000A62  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2774  000A64  22DA               	addwfc	fsr2h,f,c
  2775  000A66  0E00               	movlw	0
  2776  000A68  6EDF               	movwf	indf2,c
  2777  000A6A  D042               	goto	l2479
  2778  000A6C                     l2475:
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;my_i2c.c: 47: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2782  000A6C  0100               	movlb	0	; () banked
  2783  000A6E  EE20 F03E          	lfsr	2,62
  2784  000A72  0100               	movlb	0	; () banked
  2785  000A74  51D0               	movf	_ic_ptr& (0+255),w,b
  2786  000A76  26D9               	addwf	fsr2l,f,c
  2787  000A78  0100               	movlb	0	; () banked
  2788  000A7A  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2789  000A7C  22DA               	addwfc	fsr2h,f,c
  2790  000A7E  50DF               	movf	indf2,w,c
  2791  000A80  0100               	movlb	0	; () banked
  2792  000A82  6FB2               	movwf	??_i2c_master_send& (0+255),b
  2793  000A84  0100               	movlb	0	; () banked
  2794  000A86  51B2               	movf	??_i2c_master_send& (0+255),w,b
  2795  000A88  0D01               	mullw	1
  2796  000A8A  50F3               	movf	prodl,w,c
  2797  000A8C  0100               	movlb	0	; () banked
  2798  000A8E  0100               	movlb	0	; () banked
  2799  000A90  25AF               	addwf	i2c_master_send@msg& (0+255),w,b
  2800  000A92  6ED9               	movwf	fsr2l,c
  2801  000A94  50F4               	movf	prodh,w,c
  2802  000A96  0100               	movlb	0	; () banked
  2803  000A98  0100               	movlb	0	; () banked
  2804  000A9A  21B0               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  2805  000A9C  6EDA               	movwf	fsr2h,c
  2806  000A9E  0100               	movlb	0	; () banked
  2807  000AA0  EE10 F03E          	lfsr	1,62
  2808  000AA4  0100               	movlb	0	; () banked
  2809  000AA6  51D0               	movf	_ic_ptr& (0+255),w,b
  2810  000AA8  26E1               	addwf	fsr1l,f,c
  2811  000AAA  0100               	movlb	0	; () banked
  2812  000AAC  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2813  000AAE  22E2               	addwfc	fsr1h,f,c
  2814  000AB0  50E7               	movf	indf1,w,c
  2815  000AB2  0100               	movlb	0	; () banked
  2816  000AB4  6FB3               	movwf	(??_i2c_master_send+1)& (0+255),b
  2817  000AB6  0100               	movlb	0	; () banked
  2818  000AB8  51B3               	movf	(??_i2c_master_send+1)& (0+255),w,b
  2819  000ABA  0D01               	mullw	1
  2820  000ABC  0E22               	movlw	34
  2821  000ABE  26F3               	addwf	prodl,f,c
  2822  000AC0  0E00               	movlw	0
  2823  000AC2  22F4               	addwfc	prodh,f,c
  2824  000AC4  50F3               	movf	prodl,w,c
  2825  000AC6  0100               	movlb	0	; () banked
  2826  000AC8  0100               	movlb	0	; () banked
  2827  000ACA  25D0               	addwf	_ic_ptr& (0+255),w,b
  2828  000ACC  6EE1               	movwf	fsr1l,c
  2829  000ACE  50F4               	movf	prodh,w,c
  2830  000AD0  0100               	movlb	0	; () banked
  2831  000AD2  0100               	movlb	0	; () banked
  2832  000AD4  21D1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2833  000AD6  6EE2               	movwf	fsr1h,c
  2834  000AD8  CFDF FFE7          	movff	indf2,indf1
  2835                           
  2836                           ; BSR set to: 0
  2837  000ADC  0100               	movlb	0	; () banked
  2838  000ADE  EE20 F03E          	lfsr	2,62
  2839  000AE2  0100               	movlb	0	; () banked
  2840  000AE4  51D0               	movf	_ic_ptr& (0+255),w,b
  2841  000AE6  26D9               	addwf	fsr2l,f,c
  2842  000AE8  0100               	movlb	0	; () banked
  2843  000AEA  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2844  000AEC  22DA               	addwfc	fsr2h,f,c
  2845  000AEE  2ADF               	incf	indf2,f,c
  2846  000AF0                     l2479:
  2847                           
  2848                           ; BSR set to: 0
  2849  000AF0  0100               	movlb	0	; () banked
  2850  000AF2  EE20 F03E          	lfsr	2,62
  2851  000AF6  0100               	movlb	0	; () banked
  2852  000AF8  51D0               	movf	_ic_ptr& (0+255),w,b
  2853  000AFA  26D9               	addwf	fsr2l,f,c
  2854  000AFC  0100               	movlb	0	; () banked
  2855  000AFE  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2856  000B00  22DA               	addwfc	fsr2h,f,c
  2857  000B02  50DF               	movf	indf2,w,c
  2858  000B04  0100               	movlb	0	; () banked
  2859  000B06  6FB2               	movwf	??_i2c_master_send& (0+255),b
  2860  000B08  0100               	movlb	0	; () banked
  2861  000B0A  0100               	movlb	0	; () banked
  2862  000B0C  51B4               	movf	i2c_master_send@sendlength& (0+255),w,b
  2863  000B0E  0100               	movlb	0	; () banked
  2864  000B10  5DB2               	subwf	??_i2c_master_send& (0+255),w,b
  2865  000B12  A0D8               	btfss	status,0,c
  2866  000B14  D7AB               	goto	l2475
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;my_i2c.c: 48: }
  2870                           ;my_i2c.c: 50: ic_ptr->slave_addr = slave_addr;
  2871                           
  2872                           ; BSR set to: 0
  2873  000B16  0100               	movlb	0	; () banked
  2874  000B18  EE20 F040          	lfsr	2,64
  2875  000B1C  0100               	movlb	0	; () banked
  2876  000B1E  51D0               	movf	_ic_ptr& (0+255),w,b
  2877  000B20  26D9               	addwf	fsr2l,f,c
  2878  000B22  0100               	movlb	0	; () banked
  2879  000B24  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2880  000B26  22DA               	addwfc	fsr2h,f,c
  2881  000B28  0100               	movlb	0	; () banked
  2882  000B2A  C0B1  FFDF         	movff	i2c_master_send@slave_addr,indf2
  2883                           
  2884                           ;my_i2c.c: 51: ic_ptr->outbuflen = sendlength;
  2885  000B2E  0100               	movlb	0	; () banked
  2886  000B30  EE20 F03E          	lfsr	2,62
  2887  000B34  0100               	movlb	0	; () banked
  2888  000B36  51D0               	movf	_ic_ptr& (0+255),w,b
  2889  000B38  26D9               	addwf	fsr2l,f,c
  2890  000B3A  0100               	movlb	0	; () banked
  2891  000B3C  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2892  000B3E  22DA               	addwfc	fsr2h,f,c
  2893  000B40  0100               	movlb	0	; () banked
  2894  000B42  C0B4  FFDF         	movff	i2c_master_send@sendlength,indf2
  2895                           
  2896                           ;my_i2c.c: 52: ic_ptr->buflen = recvlength;
  2897  000B46  0100               	movlb	0	; () banked
  2898  000B48  EE20 F01C          	lfsr	2,28
  2899  000B4C  0100               	movlb	0	; () banked
  2900  000B4E  51D0               	movf	_ic_ptr& (0+255),w,b
  2901  000B50  26D9               	addwf	fsr2l,f,c
  2902  000B52  0100               	movlb	0	; () banked
  2903  000B54  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2904  000B56  22DA               	addwfc	fsr2h,f,c
  2905  000B58  0100               	movlb	0	; () banked
  2906  000B5A  C0AE  FFDF         	movff	i2c_master_send@recvlength,indf2
  2907                           
  2908                           ;my_i2c.c: 53: ic_ptr->status = 0xA;
  2909  000B5E  0100               	movlb	0	; () banked
  2910  000B60  EE20 F01F          	lfsr	2,31
  2911  000B64  0100               	movlb	0	; () banked
  2912  000B66  51D0               	movf	_ic_ptr& (0+255),w,b
  2913  000B68  26D9               	addwf	fsr2l,f,c
  2914  000B6A  0100               	movlb	0	; () banked
  2915  000B6C  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2916  000B6E  22DA               	addwfc	fsr2h,f,c
  2917  000B70  0E0A               	movlw	10
  2918  000B72  6EDF               	movwf	indf2,c
  2919                           
  2920                           ;my_i2c.c: 54: ic_ptr->outbufind = 0;
  2921  000B74  0100               	movlb	0	; () banked
  2922  000B76  EE20 F03F          	lfsr	2,63
  2923  000B7A  0100               	movlb	0	; () banked
  2924  000B7C  51D0               	movf	_ic_ptr& (0+255),w,b
  2925  000B7E  26D9               	addwf	fsr2l,f,c
  2926  000B80  0100               	movlb	0	; () banked
  2927  000B82  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2928  000B84  22DA               	addwfc	fsr2h,f,c
  2929  000B86  0E00               	movlw	0
  2930  000B88  6EDF               	movwf	indf2,c
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;my_i2c.c: 56: SSPCON2bits.SEN = 1;
  2934  000B8A  80C5               	bsf	4037,0,c	;volatile
  2935  000B8C  0012               	return	
  2936  000B8E                     __end_of_i2c_master_send:
  2937                           	opt stack 0
  2938                           tblptru	equ	0xFF8
  2939                           tblptrh	equ	0xFF7
  2940                           tblptrl	equ	0xFF6
  2941                           tablat	equ	0xFF5
  2942                           prodh	equ	0xFF4
  2943                           prodl	equ	0xFF3
  2944                           postinc0	equ	0xFEE
  2945                           wreg	equ	0xFE8
  2946                           indf1	equ	0xFE7
  2947                           postdec1	equ	0xFE5
  2948                           fsr1h	equ	0xFE2
  2949                           fsr1l	equ	0xFE1
  2950                           indf2	equ	0xFDF
  2951                           postinc2	equ	0xFDE
  2952                           postdec2	equ	0xFDD
  2953                           fsr2h	equ	0xFDA
  2954                           fsr2l	equ	0xFD9
  2955                           status	equ	0xFD8
  2956                           
  2957 ;; *************** function _i2c_configure_slave *****************
  2958 ;; Defined at:
  2959 ;;		line 431 in file "../src/my_i2c.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  addr            1    wreg     unsigned char 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  addr            1   46[BANK0 ] unsigned char 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;		None               void
  2966 ;; Registers used:
  2967 ;;		wreg, status,2, status,0
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2973 ;;      Params:         0       0       0       0       0
  2974 ;;      Locals:         0       1       0       0       0
  2975 ;;      Temps:          0       0       0       0       0
  2976 ;;      Totals:         0       1       0       0       0
  2977 ;;Total ram usage:        1 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:   11
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_main
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text13
  2988  001A38                     __ptext13:
  2989                           	opt stack 0
  2990  001A38                     _i2c_configure_slave:
  2991                           	opt stack 19
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;incstack = 0
  2995                           ;i2c_configure_slave@addr stored from wreg
  2996  001A38  CFE8 F0AE          	movff	wreg,i2c_configure_slave@addr
  2997                           
  2998                           ;my_i2c.c: 443: TRISCbits.TRISC3 = 1;
  2999  001A3C  8694               	bsf	3988,3,c	;volatile
  3000                           
  3001                           ;my_i2c.c: 444: TRISCbits.TRISC4 = 1;
  3002  001A3E  8894               	bsf	3988,4,c	;volatile
  3003                           
  3004                           ;my_i2c.c: 449: SSPADD = addr;
  3005  001A40  C0AE  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3006                           
  3007                           ;my_i2c.c: 451: SSPSTAT = 0x0;
  3008  001A44  0E00               	movlw	0
  3009  001A46  6EC7               	movwf	4039,c	;volatile
  3010                           
  3011                           ;my_i2c.c: 452: SSPCON1 = 0x0;
  3012  001A48  0E00               	movlw	0
  3013  001A4A  6EC6               	movwf	4038,c	;volatile
  3014                           
  3015                           ;my_i2c.c: 453: SSPCON2 = 0x0;
  3016  001A4C  0E00               	movlw	0
  3017  001A4E  6EC5               	movwf	4037,c	;volatile
  3018                           
  3019                           ;my_i2c.c: 454: SSPCON1 |= 0x0E;
  3020  001A50  0E0E               	movlw	14
  3021  001A52  12C6               	iorwf	4038,f,c	;volatile
  3022                           
  3023                           ;my_i2c.c: 455: SSPSTAT |= 0b10000000;
  3024  001A54  8EC7               	bsf	4039,7,c	;volatile
  3025                           
  3026                           ;my_i2c.c: 458: TRISCbits.TRISC3 = 1;
  3027  001A56  8694               	bsf	3988,3,c	;volatile
  3028                           
  3029                           ;my_i2c.c: 459: TRISCbits.TRISC4 = 1;
  3030  001A58  8894               	bsf	3988,4,c	;volatile
  3031                           
  3032                           ;my_i2c.c: 480: SSPCON2bits.SEN = 1;
  3033  001A5A  80C5               	bsf	4037,0,c	;volatile
  3034                           
  3035                           ;my_i2c.c: 481: SSPCON1 |= 0b00100000;
  3036  001A5C  8AC6               	bsf	4038,5,c	;volatile
  3037  001A5E  0012               	return	
  3038  001A60                     __end_of_i2c_configure_slave:
  3039                           	opt stack 0
  3040                           tblptru	equ	0xFF8
  3041                           tblptrh	equ	0xFF7
  3042                           tblptrl	equ	0xFF6
  3043                           tablat	equ	0xFF5
  3044                           prodh	equ	0xFF4
  3045                           prodl	equ	0xFF3
  3046                           postinc0	equ	0xFEE
  3047                           wreg	equ	0xFE8
  3048                           indf1	equ	0xFE7
  3049                           postdec1	equ	0xFE5
  3050                           fsr1h	equ	0xFE2
  3051                           fsr1l	equ	0xFE1
  3052                           indf2	equ	0xFDF
  3053                           postinc2	equ	0xFDE
  3054                           postdec2	equ	0xFDD
  3055                           fsr2h	equ	0xFDA
  3056                           fsr2l	equ	0xFD9
  3057                           status	equ	0xFD8
  3058                           
  3059 ;; *************** function _enable_interrupts *****************
  3060 ;; Defined at:
  3061 ;;		line 15 in file "../src/interrupts.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;		None
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;		None
  3066 ;; Return value:  Size  Location     Type
  3067 ;;		None               void
  3068 ;; Registers used:
  3069 ;;		None
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3075 ;;      Params:         0       0       0       0       0
  3076 ;;      Locals:         0       0       0       0       0
  3077 ;;      Temps:          0       0       0       0       0
  3078 ;;      Totals:         0       0       0       0       0
  3079 ;;Total ram usage:        0 bytes
  3080 ;; Hardware stack levels used:    1
  3081 ;; Hardware stack levels required when called:   11
  3082 ;; This function calls:
  3083 ;;		Nothing
  3084 ;; This function is called by:
  3085 ;;		_main
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           	psect	text14
  3090  001BC4                     __ptext14:
  3091                           	opt stack 0
  3092  001BC4                     _enable_interrupts:
  3093                           	opt stack 19
  3094                           
  3095                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3096                           
  3097                           ;incstack = 0
  3098  001BC4  8ED0               	bsf	4048,7,c	;volatile
  3099                           
  3100                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3101  001BC6  8EF2               	bsf	intcon,7,c	;volatile
  3102                           
  3103                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3104  001BC8  8CF2               	bsf	intcon,6,c	;volatile
  3105  001BCA  0012               	return	
  3106  001BCC                     __end_of_enable_interrupts:
  3107                           	opt stack 0
  3108                           tblptru	equ	0xFF8
  3109                           tblptrh	equ	0xFF7
  3110                           tblptrl	equ	0xFF6
  3111                           tablat	equ	0xFF5
  3112                           prodh	equ	0xFF4
  3113                           prodl	equ	0xFF3
  3114                           intcon	equ	0xFF2
  3115                           postinc0	equ	0xFEE
  3116                           wreg	equ	0xFE8
  3117                           indf1	equ	0xFE7
  3118                           postdec1	equ	0xFE5
  3119                           fsr1h	equ	0xFE2
  3120                           fsr1l	equ	0xFE1
  3121                           indf2	equ	0xFDF
  3122                           postinc2	equ	0xFDE
  3123                           postdec2	equ	0xFDD
  3124                           fsr2h	equ	0xFDA
  3125                           fsr2l	equ	0xFD9
  3126                           status	equ	0xFD8
  3127                           
  3128 ;; *************** function _block_on_To_msgqueues *****************
  3129 ;; Defined at:
  3130 ;;		line 258 in file "../src/messages.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;		None
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;		None               void
  3137 ;; Registers used:
  3138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3144 ;;      Params:         0       0       0       0       0
  3145 ;;      Locals:         0       0       0       0       0
  3146 ;;      Temps:          0       1       0       0       0
  3147 ;;      Totals:         0       1       0       0       0
  3148 ;;Total ram usage:        1 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; Hardware stack levels required when called:   14
  3151 ;; This function calls:
  3152 ;;		_Delay1KTCYx
  3153 ;;		_check_msg
  3154 ;;		_in_main
  3155 ;; This function is called by:
  3156 ;;		_main
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text15
  3161  0013E2                     __ptext15:
  3162                           	opt stack 0
  3163  0013E2                     _block_on_To_msgqueues:
  3164                           	opt stack 16
  3165                           
  3166                           ;messages.c: 259: if (!in_main()) {
  3167                           
  3168                           ;incstack = 0
  3169  0013E2  ECE0  F00B         	call	_in_main	;wreg free
  3170  0013E6  0100               	movlb	0	; () banked
  3171  0013E8  0100               	movlb	0	; () banked
  3172  0013EA  51B3               	movf	(?_in_main+1)& (0+255),w,b
  3173  0013EC  0100               	movlb	0	; () banked
  3174  0013EE  11B2               	iorwf	?_in_main& (0+255),w,b
  3175  0013F0  B4D8               	btfsc	status,2,c
  3176  0013F2  0012               	return	
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;messages.c: 261: }
  3180                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3181                           
  3182                           ; BSR set to: 0
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;messages.c: 260: return;
  3186  0013F4  0100               	movlb	0	; () banked
  3187  0013F6  6FB4               	movwf	??_block_on_To_msgqueues& (0+255),b
  3188  0013F8  0E01               	movlw	1
  3189  0013FA  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3190  0013FC  0100               	movlb	0	; () banked
  3191  0013FE  51B4               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3192  001400                     l2453:
  3193                           
  3194                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3195  001400  0102               	movlb	2	; () banked
  3196  001402  0E02               	movlw	high _ToMainHigh_MQ
  3197  001404  0100               	movlb	0	; () banked
  3198  001406  0100               	movlb	0	; () banked
  3199  001408  6FAF               	movwf	(check_msg@qptr+1)& (0+255),b
  3200  00140A  0102               	movlb	2	; () banked
  3201  00140C  0E7E               	movlw	low _ToMainHigh_MQ
  3202  00140E  0100               	movlb	0	; () banked
  3203  001410  0100               	movlb	0	; () banked
  3204  001412  6FAE               	movwf	check_msg@qptr& (0+255),b
  3205  001414  ECBA  F00C         	call	_check_msg	;wreg free
  3206  001418  0900               	iorlw	0
  3207  00141A  B4D8               	btfsc	status,2,c
  3208  00141C  D007               	goto	l2459
  3209                           
  3210                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3211  00141E  0100               	movlb	0	; () banked
  3212  001420  6FB4               	movwf	??_block_on_To_msgqueues& (0+255),b
  3213  001422  0E00               	movlw	0
  3214  001424  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3215  001426  0100               	movlb	0	; () banked
  3216  001428  51B4               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3217  00142A  0012               	return	
  3218  00142C                     l2459:
  3219                           
  3220                           ;messages.c: 271: }
  3221                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3222  00142C  0101               	movlb	1	; () banked
  3223  00142E  0E01               	movlw	high _ToMainLow_MQ
  3224  001430  0100               	movlb	0	; () banked
  3225  001432  0100               	movlb	0	; () banked
  3226  001434  6FAF               	movwf	(check_msg@qptr+1)& (0+255),b
  3227  001436  0101               	movlb	1	; () banked
  3228  001438  0E00               	movlw	low _ToMainLow_MQ
  3229  00143A  0100               	movlb	0	; () banked
  3230  00143C  0100               	movlb	0	; () banked
  3231  00143E  6FAE               	movwf	check_msg@qptr& (0+255),b
  3232  001440  ECBA  F00C         	call	_check_msg	;wreg free
  3233  001444  0900               	iorlw	0
  3234  001446  B4D8               	btfsc	status,2,c
  3235  001448  D007               	goto	l2465
  3236                           
  3237                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3238  00144A  0100               	movlb	0	; () banked
  3239  00144C  6FB4               	movwf	??_block_on_To_msgqueues& (0+255),b
  3240  00144E  0E00               	movlw	0
  3241  001450  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3242  001452  0100               	movlb	0	; () banked
  3243  001454  51B4               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3244  001456  0012               	return	
  3245  001458                     l2465:
  3246                           
  3247                           ;messages.c: 278: }
  3248                           ;messages.c: 279: Delay1KTCYx(10);
  3249  001458  0E0A               	movlw	10
  3250  00145A  EC94  F00D         	call	_Delay1KTCYx
  3251  00145E  D7D0               	goto	l2453
  3252  001460                     __end_of_block_on_To_msgqueues:
  3253                           	opt stack 0
  3254                           tblptru	equ	0xFF8
  3255                           tblptrh	equ	0xFF7
  3256                           tblptrl	equ	0xFF6
  3257                           tablat	equ	0xFF5
  3258                           prodh	equ	0xFF4
  3259                           prodl	equ	0xFF3
  3260                           intcon	equ	0xFF2
  3261                           postinc0	equ	0xFEE
  3262                           wreg	equ	0xFE8
  3263                           indf1	equ	0xFE7
  3264                           postdec1	equ	0xFE5
  3265                           fsr1h	equ	0xFE2
  3266                           fsr1l	equ	0xFE1
  3267                           indf2	equ	0xFDF
  3268                           postinc2	equ	0xFDE
  3269                           postdec2	equ	0xFDD
  3270                           fsr2h	equ	0xFDA
  3271                           fsr2l	equ	0xFD9
  3272                           status	equ	0xFD8
  3273                           
  3274 ;; *************** function _in_main *****************
  3275 ;; Defined at:
  3276 ;;		line 41 in file "../src/interrupts.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;		None
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;		None
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  2   50[BANK0 ] int 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3290 ;;      Params:         0       2       0       0       0
  3291 ;;      Locals:         0       0       0       0       0
  3292 ;;      Temps:          0       0       0       0       0
  3293 ;;      Totals:         0       2       0       0       0
  3294 ;;Total ram usage:        2 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:   13
  3297 ;; This function calls:
  3298 ;;		_in_high_int
  3299 ;;		_in_low_int
  3300 ;; This function is called by:
  3301 ;;		_block_on_To_msgqueues
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text16
  3306  0017C0                     __ptext16:
  3307                           	opt stack 0
  3308  0017C0                     _in_main:
  3309                           	opt stack 16
  3310                           
  3311                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3312                           
  3313                           ;incstack = 0
  3314  0017C0  ECBD  F00B         	call	_in_low_int	;wreg free
  3315  0017C4  0100               	movlb	0	; () banked
  3316  0017C6  0100               	movlb	0	; () banked
  3317  0017C8  51B1               	movf	(?_in_low_int+1)& (0+255),w,b
  3318  0017CA  0100               	movlb	0	; () banked
  3319  0017CC  11B0               	iorwf	?_in_low_int& (0+255),w,b
  3320  0017CE  A4D8               	btfss	status,2,c
  3321  0017D0  D011               	goto	l2185
  3322                           
  3323                           ; BSR set to: 0
  3324  0017D2  ECB1  F00D         	call	_in_high_int	;wreg free
  3325  0017D6  0100               	movlb	0	; () banked
  3326  0017D8  0100               	movlb	0	; () banked
  3327  0017DA  51AF               	movf	(?_in_high_int+1)& (0+255),w,b
  3328  0017DC  0100               	movlb	0	; () banked
  3329  0017DE  11AE               	iorwf	?_in_high_int& (0+255),w,b
  3330  0017E0  A4D8               	btfss	status,2,c
  3331  0017E2  D008               	goto	l2185
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;interrupts.c: 43: return (1);
  3335  0017E4  0E00               	movlw	0
  3336  0017E6  0100               	movlb	0	; () banked
  3337  0017E8  0100               	movlb	0	; () banked
  3338  0017EA  6FB3               	movwf	(?_in_main+1)& (0+255),b
  3339  0017EC  0E01               	movlw	1
  3340  0017EE  0100               	movlb	0	; () banked
  3341  0017F0  6FB2               	movwf	?_in_main& (0+255),b
  3342  0017F2  0012               	return	
  3343  0017F4                     l2185:
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;interrupts.c: 45: return (0);
  3347  0017F4  0E00               	movlw	0
  3348  0017F6  0100               	movlb	0	; () banked
  3349  0017F8  0100               	movlb	0	; () banked
  3350  0017FA  6FB3               	movwf	(?_in_main+1)& (0+255),b
  3351  0017FC  0E00               	movlw	0
  3352  0017FE  0100               	movlb	0	; () banked
  3353  001800  6FB2               	movwf	?_in_main& (0+255),b
  3354  001802  0012               	return	
  3355  001804                     __end_of_in_main:
  3356                           	opt stack 0
  3357                           tblptru	equ	0xFF8
  3358                           tblptrh	equ	0xFF7
  3359                           tblptrl	equ	0xFF6
  3360                           tablat	equ	0xFF5
  3361                           prodh	equ	0xFF4
  3362                           prodl	equ	0xFF3
  3363                           intcon	equ	0xFF2
  3364                           postinc0	equ	0xFEE
  3365                           wreg	equ	0xFE8
  3366                           indf1	equ	0xFE7
  3367                           postdec1	equ	0xFE5
  3368                           fsr1h	equ	0xFE2
  3369                           fsr1l	equ	0xFE1
  3370                           indf2	equ	0xFDF
  3371                           postinc2	equ	0xFDE
  3372                           postdec2	equ	0xFDD
  3373                           fsr2h	equ	0xFDA
  3374                           fsr2l	equ	0xFD9
  3375                           status	equ	0xFD8
  3376                           
  3377 ;; *************** function _in_low_int *****************
  3378 ;; Defined at:
  3379 ;;		line 31 in file "../src/interrupts.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;		None
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;		None
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  2   48[BANK0 ] int 
  3386 ;; Registers used:
  3387 ;;		wreg, status,2, status,0, cstack
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3393 ;;      Params:         0       2       0       0       0
  3394 ;;      Locals:         0       0       0       0       0
  3395 ;;      Temps:          0       0       0       0       0
  3396 ;;      Totals:         0       2       0       0       0
  3397 ;;Total ram usage:        2 bytes
  3398 ;; Hardware stack levels used:    1
  3399 ;; Hardware stack levels required when called:   12
  3400 ;; This function calls:
  3401 ;;		_in_high_int
  3402 ;; This function is called by:
  3403 ;;		_in_main
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           	psect	text17
  3408  00177A                     __ptext17:
  3409                           	opt stack 0
  3410  00177A                     _in_low_int:
  3411                           	opt stack 16
  3412                           
  3413                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;incstack = 0
  3417  00177A  ACF2               	btfss	intcon,6,c	;volatile
  3418  00177C  D008               	goto	l2163
  3419                           
  3420                           ;interrupts.c: 33: return (0);
  3421  00177E  0E00               	movlw	0
  3422  001780  0100               	movlb	0	; () banked
  3423  001782  0100               	movlb	0	; () banked
  3424  001784  6FB1               	movwf	(?_in_low_int+1)& (0+255),b
  3425  001786  0E00               	movlw	0
  3426  001788  0100               	movlb	0	; () banked
  3427  00178A  6FB0               	movwf	?_in_low_int& (0+255),b
  3428  00178C  0012               	return	
  3429  00178E                     l2163:
  3430  00178E  ECB1  F00D         	call	_in_high_int	;wreg free
  3431  001792  0100               	movlb	0	; () banked
  3432  001794  0100               	movlb	0	; () banked
  3433  001796  51AF               	movf	(?_in_high_int+1)& (0+255),w,b
  3434  001798  0100               	movlb	0	; () banked
  3435  00179A  11AE               	iorwf	?_in_high_int& (0+255),w,b
  3436  00179C  B4D8               	btfsc	status,2,c
  3437  00179E  D008               	goto	l2171
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;interrupts.c: 35: return (0);
  3441  0017A0  0E00               	movlw	0
  3442  0017A2  0100               	movlb	0	; () banked
  3443  0017A4  0100               	movlb	0	; () banked
  3444  0017A6  6FB1               	movwf	(?_in_low_int+1)& (0+255),b
  3445  0017A8  0E00               	movlw	0
  3446  0017AA  0100               	movlb	0	; () banked
  3447  0017AC  6FB0               	movwf	?_in_low_int& (0+255),b
  3448  0017AE  0012               	return	
  3449  0017B0                     l2171:
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;interrupts.c: 37: return (1);
  3453  0017B0  0E00               	movlw	0
  3454  0017B2  0100               	movlb	0	; () banked
  3455  0017B4  0100               	movlb	0	; () banked
  3456  0017B6  6FB1               	movwf	(?_in_low_int+1)& (0+255),b
  3457  0017B8  0E01               	movlw	1
  3458  0017BA  0100               	movlb	0	; () banked
  3459  0017BC  6FB0               	movwf	?_in_low_int& (0+255),b
  3460  0017BE  0012               	return	
  3461  0017C0                     __end_of_in_low_int:
  3462                           	opt stack 0
  3463                           tblptru	equ	0xFF8
  3464                           tblptrh	equ	0xFF7
  3465                           tblptrl	equ	0xFF6
  3466                           tablat	equ	0xFF5
  3467                           prodh	equ	0xFF4
  3468                           prodl	equ	0xFF3
  3469                           intcon	equ	0xFF2
  3470                           postinc0	equ	0xFEE
  3471                           wreg	equ	0xFE8
  3472                           indf1	equ	0xFE7
  3473                           postdec1	equ	0xFE5
  3474                           fsr1h	equ	0xFE2
  3475                           fsr1l	equ	0xFE1
  3476                           indf2	equ	0xFDF
  3477                           postinc2	equ	0xFDE
  3478                           postdec2	equ	0xFDD
  3479                           fsr2h	equ	0xFDA
  3480                           fsr2l	equ	0xFD9
  3481                           status	equ	0xFD8
  3482                           
  3483 ;; *************** function _in_high_int *****************
  3484 ;; Defined at:
  3485 ;;		line 23 in file "../src/interrupts.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;		None
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;		None
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  2   46[BANK0 ] int 
  3492 ;; Registers used:
  3493 ;;		wreg, status,2
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3499 ;;      Params:         0       2       0       0       0
  3500 ;;      Locals:         0       0       0       0       0
  3501 ;;      Temps:          0       0       0       0       0
  3502 ;;      Totals:         0       2       0       0       0
  3503 ;;Total ram usage:        2 bytes
  3504 ;; Hardware stack levels used:    1
  3505 ;; Hardware stack levels required when called:   11
  3506 ;; This function calls:
  3507 ;;		Nothing
  3508 ;; This function is called by:
  3509 ;;		_in_low_int
  3510 ;;		_in_main
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text18
  3515  001B62                     __ptext18:
  3516                           	opt stack 0
  3517  001B62                     _in_high_int:
  3518                           	opt stack 16
  3519                           
  3520                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;incstack = 0
  3524  001B62  0E00               	movlw	0
  3525  001B64  AEF2               	btfss	intcon,7,c	;volatile
  3526  001B66  0E01               	movlw	1
  3527  001B68  0100               	movlb	0	; () banked
  3528  001B6A  0100               	movlb	0	; () banked
  3529  001B6C  6FAE               	movwf	?_in_high_int& (0+255),b
  3530  001B6E  0100               	movlb	0	; () banked
  3531  001B70  6BAF               	clrf	(?_in_high_int+1)& (0+255),b
  3532  001B72  0012               	return	
  3533  001B74                     __end_of_in_high_int:
  3534                           	opt stack 0
  3535                           tblptru	equ	0xFF8
  3536                           tblptrh	equ	0xFF7
  3537                           tblptrl	equ	0xFF6
  3538                           tablat	equ	0xFF5
  3539                           prodh	equ	0xFF4
  3540                           prodl	equ	0xFF3
  3541                           intcon	equ	0xFF2
  3542                           postinc0	equ	0xFEE
  3543                           wreg	equ	0xFE8
  3544                           indf1	equ	0xFE7
  3545                           postdec1	equ	0xFE5
  3546                           fsr1h	equ	0xFE2
  3547                           fsr1l	equ	0xFE1
  3548                           indf2	equ	0xFDF
  3549                           postinc2	equ	0xFDE
  3550                           postdec2	equ	0xFDD
  3551                           fsr2h	equ	0xFDA
  3552                           fsr2l	equ	0xFD9
  3553                           status	equ	0xFD8
  3554                           
  3555 ;; *************** function _check_msg *****************
  3556 ;; Defined at:
  3557 ;;		line 222 in file "../src/messages.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  qptr            2   46[BANK0 ] PTR struct __msg_queue
  3560 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      unsigned char 
  3565 ;; Registers used:
  3566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3572 ;;      Params:         0       2       0       0       0
  3573 ;;      Locals:         0       0       0       0       0
  3574 ;;      Temps:          0       1       0       0       0
  3575 ;;      Totals:         0       3       0       0       0
  3576 ;;Total ram usage:        3 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:   11
  3579 ;; This function calls:
  3580 ;;		Nothing
  3581 ;; This function is called by:
  3582 ;;		_block_on_To_msgqueues
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text19
  3587  001974                     __ptext19:
  3588                           	opt stack 0
  3589  001974                     _check_msg:
  3590                           	opt stack 18
  3591                           
  3592                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;incstack = 0
  3596  001974  0100               	movlb	0	; () banked
  3597  001976  EE20 F07D          	lfsr	2,125
  3598  00197A  0100               	movlb	0	; () banked
  3599  00197C  51AE               	movf	check_msg@qptr& (0+255),w,b
  3600  00197E  26D9               	addwf	fsr2l,f,c
  3601  001980  0100               	movlb	0	; () banked
  3602  001982  51AF               	movf	(check_msg@qptr+1)& (0+255),w,b
  3603  001984  22DA               	addwfc	fsr2h,f,c
  3604  001986  50DF               	movf	indf2,w,c
  3605  001988  0100               	movlb	0	; () banked
  3606  00198A  6FB0               	movwf	??_check_msg& (0+255),b
  3607  00198C  0100               	movlb	0	; () banked
  3608  00198E  51B0               	movf	??_check_msg& (0+255),w,b
  3609  001990  0D1F               	mullw	31
  3610  001992  50F3               	movf	prodl,w,c
  3611  001994  0100               	movlb	0	; () banked
  3612  001996  0100               	movlb	0	; () banked
  3613  001998  25AE               	addwf	check_msg@qptr& (0+255),w,b
  3614  00199A  6ED9               	movwf	fsr2l,c
  3615  00199C  50F4               	movf	prodh,w,c
  3616  00199E  0100               	movlb	0	; () banked
  3617  0019A0  0100               	movlb	0	; () banked
  3618  0019A2  21AF               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3619  0019A4  6EDA               	movwf	fsr2h,c
  3620  0019A6  50DF               	movf	indf2,w,c
  3621  0019A8  0012               	return	
  3622  0019AA                     __end_of_check_msg:
  3623                           	opt stack 0
  3624                           tblptru	equ	0xFF8
  3625                           tblptrh	equ	0xFF7
  3626                           tblptrl	equ	0xFF6
  3627                           tablat	equ	0xFF5
  3628                           prodh	equ	0xFF4
  3629                           prodl	equ	0xFF3
  3630                           intcon	equ	0xFF2
  3631                           postinc0	equ	0xFEE
  3632                           wreg	equ	0xFE8
  3633                           indf1	equ	0xFE7
  3634                           postdec1	equ	0xFE5
  3635                           fsr1h	equ	0xFE2
  3636                           fsr1l	equ	0xFE1
  3637                           indf2	equ	0xFDF
  3638                           postinc2	equ	0xFDE
  3639                           postdec2	equ	0xFDD
  3640                           fsr2h	equ	0xFDA
  3641                           fsr2l	equ	0xFD9
  3642                           status	equ	0xFD8
  3643                           
  3644 ;; *************** function _Delay1KTCYx *****************
  3645 ;; Defined at:
  3646 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  unit            1    wreg     unsigned char 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  unit            1   46[BANK0 ] unsigned char 
  3651 ;; Return value:  Size  Location     Type
  3652 ;;		None               void
  3653 ;; Registers used:
  3654 ;;		wreg
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3660 ;;      Params:         0       0       0       0       0
  3661 ;;      Locals:         0       1       0       0       0
  3662 ;;      Temps:          0       0       0       0       0
  3663 ;;      Totals:         0       1       0       0       0
  3664 ;;Total ram usage:        1 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:   11
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_block_on_To_msgqueues
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text20
  3675  001B28                     __ptext20:
  3676                           	opt stack 0
  3677  001B28                     _Delay1KTCYx:
  3678                           	opt stack 18
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;incstack = 0
  3682                           ;Delay1KTCYx@unit stored from wreg
  3683  001B28  CFE8 F0AE          	movff	wreg,Delay1KTCYx@unit
  3684  001B2C                     l755:
  3685  001B2C  0EFA               	movlw	250
  3686  001B2E                     u2617:
  3687  001B2E  F000               	nop	
  3688  001B30  2EE8               	decfsz	wreg,f,c
  3689  001B32  D7FD               	goto	u2617
  3690  001B34  0100               	movlb	0	; () banked
  3691  001B36  0100               	movlb	0	; () banked
  3692  001B38  2FAE               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3693  001B3A  D7F8               	goto	l755
  3694  001B3C  0012               	return	
  3695  001B3E                     __end_of_Delay1KTCYx:
  3696                           	opt stack 0
  3697                           tblptru	equ	0xFF8
  3698                           tblptrh	equ	0xFF7
  3699                           tblptrl	equ	0xFF6
  3700                           tablat	equ	0xFF5
  3701                           prodh	equ	0xFF4
  3702                           prodl	equ	0xFF3
  3703                           intcon	equ	0xFF2
  3704                           postinc0	equ	0xFEE
  3705                           wreg	equ	0xFE8
  3706                           indf1	equ	0xFE7
  3707                           postdec1	equ	0xFE5
  3708                           fsr1h	equ	0xFE2
  3709                           fsr1l	equ	0xFE1
  3710                           indf2	equ	0xFDF
  3711                           postinc2	equ	0xFDE
  3712                           postdec2	equ	0xFDD
  3713                           fsr2h	equ	0xFDA
  3714                           fsr2l	equ	0xFD9
  3715                           status	equ	0xFD8
  3716                           
  3717 ;; *************** function _ToMainLow_recvmsg *****************
  3718 ;; Defined at:
  3719 ;;		line 112 in file "../src/messages.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  maxlength       1    wreg     unsigned char 
  3722 ;;  msgtype         2   70[BANK0 ] PTR unsigned char 
  3723 ;;		 -> main@msgtype(1), 
  3724 ;;  data            2   72[BANK0 ] PTR void 
  3725 ;;		 -> main@msgbuffer(29), 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  maxlength       1   74[BANK0 ] unsigned char 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      char 
  3730 ;; Registers used:
  3731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3737 ;;      Params:         0       4       0       0       0
  3738 ;;      Locals:         0       1       0       0       0
  3739 ;;      Temps:          0       0       0       0       0
  3740 ;;      Totals:         0       5       0       0       0
  3741 ;;Total ram usage:        5 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:   13
  3744 ;; This function calls:
  3745 ;;		_recv_msg
  3746 ;; This function is called by:
  3747 ;;		_main
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text21
  3752  001804                     __ptext21:
  3753                           	opt stack 0
  3754  001804                     _ToMainLow_recvmsg:
  3755                           	opt stack 17
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;incstack = 0
  3759                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3760  001804  CFE8 F0CA          	movff	wreg,ToMainLow_recvmsg@maxlength
  3761                           
  3762                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3763  001808  0101               	movlb	1	; () banked
  3764  00180A  0E01               	movlw	high _ToMainLow_MQ
  3765  00180C  0100               	movlb	0	; () banked
  3766  00180E  0100               	movlb	0	; () banked
  3767  001810  6FB9               	movwf	(recv_msg@qptr+1)& (0+255),b
  3768  001812  0101               	movlb	1	; () banked
  3769  001814  0E00               	movlw	low _ToMainLow_MQ
  3770  001816  0100               	movlb	0	; () banked
  3771  001818  0100               	movlb	0	; () banked
  3772  00181A  6FB8               	movwf	recv_msg@qptr& (0+255),b
  3773  00181C  C0CA  F0BA         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3774  001820  0100               	movlb	0	; () banked
  3775  001822  0100               	movlb	0	; () banked
  3776  001824  C0C7  F0BC         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3777  001828  0100               	movlb	0	; () banked
  3778  00182A  0100               	movlb	0	; () banked
  3779  00182C  C0C6  F0BB         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3780  001830  0100               	movlb	0	; () banked
  3781  001832  0100               	movlb	0	; () banked
  3782  001834  C0C9  F0BE         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3783  001838  0100               	movlb	0	; () banked
  3784  00183A  0100               	movlb	0	; () banked
  3785  00183C  C0C8  F0BD         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3786  001840  ECC7  F005         	call	_recv_msg	;wreg free
  3787  001844  0012               	return	
  3788  001846                     __end_of_ToMainLow_recvmsg:
  3789                           	opt stack 0
  3790                           tblptru	equ	0xFF8
  3791                           tblptrh	equ	0xFF7
  3792                           tblptrl	equ	0xFF6
  3793                           tablat	equ	0xFF5
  3794                           prodh	equ	0xFF4
  3795                           prodl	equ	0xFF3
  3796                           intcon	equ	0xFF2
  3797                           postinc0	equ	0xFEE
  3798                           wreg	equ	0xFE8
  3799                           indf1	equ	0xFE7
  3800                           postdec1	equ	0xFE5
  3801                           fsr1h	equ	0xFE2
  3802                           fsr1l	equ	0xFE1
  3803                           indf2	equ	0xFDF
  3804                           postinc2	equ	0xFDE
  3805                           postdec2	equ	0xFDD
  3806                           fsr2h	equ	0xFDA
  3807                           fsr2l	equ	0xFD9
  3808                           status	equ	0xFD8
  3809                           
  3810 ;; *************** function _ToMainHigh_recvmsg *****************
  3811 ;; Defined at:
  3812 ;;		line 135 in file "../src/messages.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  maxlength       1    wreg     unsigned char 
  3815 ;;  msgtype         2   70[BANK0 ] PTR unsigned char 
  3816 ;;		 -> main@msgtype(1), 
  3817 ;;  data            2   72[BANK0 ] PTR void 
  3818 ;;		 -> main@msgbuffer(29), 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  maxlength       1   74[BANK0 ] unsigned char 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      char 
  3823 ;; Registers used:
  3824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3830 ;;      Params:         0       4       0       0       0
  3831 ;;      Locals:         0       1       0       0       0
  3832 ;;      Temps:          0       0       0       0       0
  3833 ;;      Totals:         0       5       0       0       0
  3834 ;;Total ram usage:        5 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; Hardware stack levels required when called:   13
  3837 ;; This function calls:
  3838 ;;		_recv_msg
  3839 ;; This function is called by:
  3840 ;;		_main
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           	psect	text22
  3845  001846                     __ptext22:
  3846                           	opt stack 0
  3847  001846                     _ToMainHigh_recvmsg:
  3848                           	opt stack 17
  3849                           
  3850                           ;incstack = 0
  3851                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3852  001846  CFE8 F0CA          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3853                           
  3854                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3855  00184A  0102               	movlb	2	; () banked
  3856  00184C  0E02               	movlw	high _ToMainHigh_MQ
  3857  00184E  0100               	movlb	0	; () banked
  3858  001850  0100               	movlb	0	; () banked
  3859  001852  6FB9               	movwf	(recv_msg@qptr+1)& (0+255),b
  3860  001854  0102               	movlb	2	; () banked
  3861  001856  0E7E               	movlw	low _ToMainHigh_MQ
  3862  001858  0100               	movlb	0	; () banked
  3863  00185A  0100               	movlb	0	; () banked
  3864  00185C  6FB8               	movwf	recv_msg@qptr& (0+255),b
  3865  00185E  C0CA  F0BA         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3866  001862  0100               	movlb	0	; () banked
  3867  001864  0100               	movlb	0	; () banked
  3868  001866  C0C7  F0BC         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3869  00186A  0100               	movlb	0	; () banked
  3870  00186C  0100               	movlb	0	; () banked
  3871  00186E  C0C6  F0BB         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3872  001872  0100               	movlb	0	; () banked
  3873  001874  0100               	movlb	0	; () banked
  3874  001876  C0C9  F0BE         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3875  00187A  0100               	movlb	0	; () banked
  3876  00187C  0100               	movlb	0	; () banked
  3877  00187E  C0C8  F0BD         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3878  001882  ECC7  F005         	call	_recv_msg	;wreg free
  3879  001886  0012               	return	
  3880  001888                     __end_of_ToMainHigh_recvmsg:
  3881                           	opt stack 0
  3882                           tblptru	equ	0xFF8
  3883                           tblptrh	equ	0xFF7
  3884                           tblptrl	equ	0xFF6
  3885                           tablat	equ	0xFF5
  3886                           prodh	equ	0xFF4
  3887                           prodl	equ	0xFF3
  3888                           intcon	equ	0xFF2
  3889                           postinc0	equ	0xFEE
  3890                           wreg	equ	0xFE8
  3891                           indf1	equ	0xFE7
  3892                           postdec1	equ	0xFE5
  3893                           fsr1h	equ	0xFE2
  3894                           fsr1l	equ	0xFE1
  3895                           indf2	equ	0xFDF
  3896                           postinc2	equ	0xFDE
  3897                           postdec2	equ	0xFDD
  3898                           fsr2h	equ	0xFDA
  3899                           fsr2l	equ	0xFD9
  3900                           status	equ	0xFD8
  3901                           
  3902 ;; *************** function _recv_msg *****************
  3903 ;; Defined at:
  3904 ;;		line 63 in file "../src/messages.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;  qptr            2   56[BANK0 ] PTR struct __msg_queue
  3907 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  3908 ;;  maxlength       1   58[BANK0 ] unsigned char 
  3909 ;;  msgtype         2   59[BANK0 ] PTR unsigned char 
  3910 ;;		 -> main@msgtype(1), 
  3911 ;;  data            2   61[BANK0 ] PTR void 
  3912 ;;		 -> main@msgbuffer(29), 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  qmsg            2   68[BANK0 ] PTR struct __msg
  3915 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  3916 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  3917 ;;  tlength         2   66[BANK0 ] unsigned int 
  3918 ;;  slot            1   65[BANK0 ] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      char 
  3921 ;; Registers used:
  3922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3928 ;;      Params:         0       7       0       0       0
  3929 ;;      Locals:         0       5       0       0       0
  3930 ;;      Temps:          0       2       0       0       0
  3931 ;;      Totals:         0      14       0       0       0
  3932 ;;Total ram usage:       14 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:   12
  3935 ;; This function calls:
  3936 ;;		_memcpy
  3937 ;; This function is called by:
  3938 ;;		_ToMainLow_recvmsg
  3939 ;;		_ToMainHigh_recvmsg
  3940 ;;		_FromMainLow_recvmsg
  3941 ;;		_FromMainHigh_recvmsg
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	text23
  3946  000B8E                     __ptext23:
  3947                           	opt stack 0
  3948  000B8E                     _recv_msg:
  3949                           	opt stack 17
  3950                           
  3951                           ;messages.c: 64: unsigned char slot;
  3952                           ;messages.c: 68: msg *qmsg;
  3953                           ;messages.c: 69: size_t tlength;
  3954                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3955                           
  3956                           ;incstack = 0
  3957  000B8E  0100               	movlb	0	; () banked
  3958  000B90  EE20 F07D          	lfsr	2,125
  3959  000B94  0100               	movlb	0	; () banked
  3960  000B96  51B8               	movf	recv_msg@qptr& (0+255),w,b
  3961  000B98  26D9               	addwf	fsr2l,f,c
  3962  000B9A  0100               	movlb	0	; () banked
  3963  000B9C  51B9               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3964  000B9E  22DA               	addwfc	fsr2h,f,c
  3965  000BA0  50DF               	movf	indf2,w,c
  3966  000BA2  0100               	movlb	0	; () banked
  3967  000BA4  0100               	movlb	0	; () banked
  3968  000BA6  6FC1               	movwf	recv_msg@slot& (0+255),b
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3972  000BA8  0100               	movlb	0	; () banked
  3973  000BAA  0100               	movlb	0	; () banked
  3974  000BAC  51C1               	movf	recv_msg@slot& (0+255),w,b
  3975  000BAE  0D1F               	mullw	31
  3976  000BB0  50F3               	movf	prodl,w,c
  3977  000BB2  0100               	movlb	0	; () banked
  3978  000BB4  0100               	movlb	0	; () banked
  3979  000BB6  25B8               	addwf	recv_msg@qptr& (0+255),w,b
  3980  000BB8  0100               	movlb	0	; () banked
  3981  000BBA  0100               	movlb	0	; () banked
  3982  000BBC  6FC4               	movwf	recv_msg@qmsg& (0+255),b
  3983  000BBE  50F4               	movf	prodh,w,c
  3984  000BC0  0100               	movlb	0	; () banked
  3985  000BC2  0100               	movlb	0	; () banked
  3986  000BC4  21B9               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3987  000BC6  0100               	movlb	0	; () banked
  3988  000BC8  6FC5               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;messages.c: 74: if (qmsg->full == 1) {
  3992  000BCA  0E01               	movlw	1
  3993  000BCC  C0C4  FFD9         	movff	recv_msg@qmsg,fsr2l
  3994  000BD0  C0C5  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3995  000BD4  62DF               	cpfseq	indf2,c
  3996  000BD6  D074               	goto	l3211
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4000  000BD8  0100               	movlb	0	; () banked
  4001  000BDA  EE20 F001          	lfsr	2,1
  4002  000BDE  0100               	movlb	0	; () banked
  4003  000BE0  51C4               	movf	recv_msg@qmsg& (0+255),w,b
  4004  000BE2  26D9               	addwf	fsr2l,f,c
  4005  000BE4  0100               	movlb	0	; () banked
  4006  000BE6  51C5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4007  000BE8  22DA               	addwfc	fsr2h,f,c
  4008  000BEA  50DF               	movf	indf2,w,c
  4009  000BEC  0100               	movlb	0	; () banked
  4010  000BEE  0100               	movlb	0	; () banked
  4011  000BF0  5DBA               	subwf	recv_msg@maxlength& (0+255),w,b
  4012  000BF2  B0D8               	btfsc	status,0,c
  4013  000BF4  D002               	goto	l3195
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;messages.c: 77: return (-3);
  4017  000BF6  0EFD               	movlw	253
  4018  000BF8  0012               	return	
  4019  000BFA                     l3195:
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;messages.c: 78: }
  4023                           ;messages.c: 80: tlength = qmsg->length;
  4024  000BFA  0100               	movlb	0	; () banked
  4025  000BFC  EE20 F001          	lfsr	2,1
  4026  000C00  0100               	movlb	0	; () banked
  4027  000C02  51C4               	movf	recv_msg@qmsg& (0+255),w,b
  4028  000C04  26D9               	addwf	fsr2l,f,c
  4029  000C06  0100               	movlb	0	; () banked
  4030  000C08  51C5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4031  000C0A  22DA               	addwfc	fsr2h,f,c
  4032  000C0C  50DF               	movf	indf2,w,c
  4033  000C0E  0100               	movlb	0	; () banked
  4034  000C10  6FBF               	movwf	??_recv_msg& (0+255),b
  4035  000C12  0100               	movlb	0	; () banked
  4036  000C14  51BF               	movf	??_recv_msg& (0+255),w,b
  4037  000C16  0100               	movlb	0	; () banked
  4038  000C18  0100               	movlb	0	; () banked
  4039  000C1A  6FC2               	movwf	recv_msg@tlength& (0+255),b
  4040  000C1C  0100               	movlb	0	; () banked
  4041  000C1E  6BC3               	clrf	(recv_msg@tlength+1)& (0+255),b
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4045  000C20  0100               	movlb	0	; () banked
  4046  000C22  0100               	movlb	0	; () banked
  4047  000C24  C0BE  F0AF         	movff	recv_msg@data+1,memcpy@d1+1
  4048  000C28  0100               	movlb	0	; () banked
  4049  000C2A  0100               	movlb	0	; () banked
  4050  000C2C  C0BD  F0AE         	movff	recv_msg@data,memcpy@d1
  4051  000C30  0E03               	movlw	3
  4052  000C32  0100               	movlb	0	; () banked
  4053  000C34  0100               	movlb	0	; () banked
  4054  000C36  25C4               	addwf	recv_msg@qmsg& (0+255),w,b
  4055  000C38  0100               	movlb	0	; () banked
  4056  000C3A  6FBF               	movwf	??_recv_msg& (0+255),b
  4057  000C3C  0E00               	movlw	0
  4058  000C3E  0100               	movlb	0	; () banked
  4059  000C40  0100               	movlb	0	; () banked
  4060  000C42  21C5               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4061  000C44  0100               	movlb	0	; () banked
  4062  000C46  6FC0               	movwf	(??_recv_msg+1)& (0+255),b
  4063  000C48  C0BF  F0B0         	movff	??_recv_msg,memcpy@s1
  4064  000C4C  C0C0  F0B1         	movff	??_recv_msg+1,memcpy@s1+1
  4065  000C50  C0C2  F0B2         	movff	recv_msg@tlength,memcpy@n
  4066  000C54  C0C3  F0B3         	movff	recv_msg@tlength+1,memcpy@n+1
  4067  000C58  EC12  F00B         	call	_memcpy	;wreg free
  4068                           
  4069                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4070  000C5C  0100               	movlb	0	; () banked
  4071  000C5E  EE20 F07D          	lfsr	2,125
  4072  000C62  0100               	movlb	0	; () banked
  4073  000C64  51B8               	movf	recv_msg@qptr& (0+255),w,b
  4074  000C66  26D9               	addwf	fsr2l,f,c
  4075  000C68  0100               	movlb	0	; () banked
  4076  000C6A  51B9               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4077  000C6C  22DA               	addwfc	fsr2h,f,c
  4078  000C6E  0100               	movlb	0	; () banked
  4079  000C70  EE10 F07D          	lfsr	1,125
  4080  000C74  0100               	movlb	0	; () banked
  4081  000C76  51B8               	movf	recv_msg@qptr& (0+255),w,b
  4082  000C78  26E1               	addwf	fsr1l,f,c
  4083  000C7A  0100               	movlb	0	; () banked
  4084  000C7C  51B9               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4085  000C7E  22E2               	addwfc	fsr1h,f,c
  4086  000C80  50E7               	movf	indf1,w,c
  4087  000C82  0100               	movlb	0	; () banked
  4088  000C84  6FBF               	movwf	??_recv_msg& (0+255),b
  4089  000C86  0100               	movlb	0	; () banked
  4090  000C88  29BF               	incf	??_recv_msg& (0+255),w,b
  4091  000C8A  0B03               	andlw	3
  4092  000C8C  6EDF               	movwf	indf2,c
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4096  000C8E  0100               	movlb	0	; () banked
  4097  000C90  EE20 F002          	lfsr	2,2
  4098  000C94  0100               	movlb	0	; () banked
  4099  000C96  51C4               	movf	recv_msg@qmsg& (0+255),w,b
  4100  000C98  26D9               	addwf	fsr2l,f,c
  4101  000C9A  0100               	movlb	0	; () banked
  4102  000C9C  51C5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4103  000C9E  22DA               	addwfc	fsr2h,f,c
  4104  000CA0  C0BB  FFE1         	movff	recv_msg@msgtype,fsr1l
  4105  000CA4  C0BC  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4106  000CA8  CFDF FFE7          	movff	indf2,indf1
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;messages.c: 91: qmsg->full = 0;
  4110  000CAC  C0C4  FFD9         	movff	recv_msg@qmsg,fsr2l
  4111  000CB0  C0C5  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4112  000CB4  0E00               	movlw	0
  4113  000CB6  6EDF               	movwf	indf2,c
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;messages.c: 92: return (tlength);
  4117  000CB8  0100               	movlb	0	; () banked
  4118  000CBA  0100               	movlb	0	; () banked
  4119  000CBC  51C2               	movf	recv_msg@tlength& (0+255),w,b
  4120  000CBE  0012               	return	
  4121  000CC0                     l3211:
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;messages.c: 94: return (-4);
  4125  000CC0  0EFC               	movlw	252
  4126  000CC2  0012               	return	
  4127  000CC4                     __end_of_recv_msg:
  4128                           	opt stack 0
  4129                           tblptru	equ	0xFF8
  4130                           tblptrh	equ	0xFF7
  4131                           tblptrl	equ	0xFF6
  4132                           tablat	equ	0xFF5
  4133                           prodh	equ	0xFF4
  4134                           prodl	equ	0xFF3
  4135                           intcon	equ	0xFF2
  4136                           postinc0	equ	0xFEE
  4137                           wreg	equ	0xFE8
  4138                           indf1	equ	0xFE7
  4139                           postdec1	equ	0xFE5
  4140                           fsr1h	equ	0xFE2
  4141                           fsr1l	equ	0xFE1
  4142                           indf2	equ	0xFDF
  4143                           postinc2	equ	0xFDE
  4144                           postdec2	equ	0xFDD
  4145                           fsr2h	equ	0xFDA
  4146                           fsr2l	equ	0xFD9
  4147                           status	equ	0xFD8
  4148                           
  4149 ;; *************** function _memcpy *****************
  4150 ;; Defined at:
  4151 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;  d1              2   46[BANK0 ] PTR void 
  4154 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  4155 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  4156 ;;		 -> main@msgbuffer(29), 
  4157 ;;  s1              2   48[BANK0 ] PTR const void 
  4158 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  4159 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  4160 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  4161 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(65), 
  4162 ;;		 -> main@uc(5), 
  4163 ;;  n               2   50[BANK0 ] unsigned int 
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;  s               2   54[BANK0 ] PTR const unsigned char 
  4166 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  4167 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  4168 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  4169 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(65), 
  4170 ;;		 -> main@uc(5), 
  4171 ;;  d               2   52[BANK0 ] PTR unsigned char 
  4172 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  4173 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  4174 ;;		 -> main@msgbuffer(29), 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  2   46[BANK0 ] PTR void 
  4177 ;; Registers used:
  4178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4184 ;;      Params:         0       6       0       0       0
  4185 ;;      Locals:         0       4       0       0       0
  4186 ;;      Temps:          0       0       0       0       0
  4187 ;;      Totals:         0      10       0       0       0
  4188 ;;Total ram usage:       10 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:   11
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_send_msg
  4195 ;;		_recv_msg
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           	psect	text24
  4200  001624                     __ptext24:
  4201                           	opt stack 0
  4202  001624                     _memcpy:
  4203                           	opt stack 16
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;incstack = 0
  4207  001624  0100               	movlb	0	; () banked
  4208  001626  0100               	movlb	0	; () banked
  4209  001628  C0B1  F0B7         	movff	memcpy@s1+1,memcpy@s+1
  4210  00162C  0100               	movlb	0	; () banked
  4211  00162E  0100               	movlb	0	; () banked
  4212  001630  C0B0  F0B6         	movff	memcpy@s1,memcpy@s
  4213  001634  0100               	movlb	0	; () banked
  4214  001636  0100               	movlb	0	; () banked
  4215  001638  C0AF  F0B5         	movff	memcpy@d1+1,memcpy@d+1
  4216  00163C  0100               	movlb	0	; () banked
  4217  00163E  0100               	movlb	0	; () banked
  4218  001640  C0AE  F0B4         	movff	memcpy@d1,memcpy@d
  4219  001644  D012               	goto	l3181
  4220  001646                     l3175:
  4221                           
  4222                           ; BSR set to: 0
  4223  001646  C0B6  FFD9         	movff	memcpy@s,fsr2l
  4224  00164A  C0B7  FFDA         	movff	memcpy@s+1,fsr2h
  4225  00164E  C0B4  FFE1         	movff	memcpy@d,fsr1l
  4226  001652  C0B5  FFE2         	movff	memcpy@d+1,fsr1h
  4227  001656  CFDF FFE7          	movff	indf2,indf1
  4228                           
  4229                           ; BSR set to: 0
  4230  00165A  0100               	movlb	0	; () banked
  4231  00165C  0100               	movlb	0	; () banked
  4232  00165E  4BB6               	infsnz	memcpy@s& (0+255),f,b
  4233  001660  2BB7               	incf	(memcpy@s+1)& (0+255),f,b
  4234                           
  4235                           ; BSR set to: 0
  4236  001662  0100               	movlb	0	; () banked
  4237  001664  0100               	movlb	0	; () banked
  4238  001666  4BB4               	infsnz	memcpy@d& (0+255),f,b
  4239  001668  2BB5               	incf	(memcpy@d+1)& (0+255),f,b
  4240  00166A                     l3181:
  4241                           
  4242                           ; BSR set to: 0
  4243  00166A  0100               	movlb	0	; () banked
  4244  00166C  0100               	movlb	0	; () banked
  4245  00166E  07B2               	decf	memcpy@n& (0+255),f,b
  4246  001670  A0D8               	btfss	status,0,c
  4247  001672  07B3               	decf	(memcpy@n+1)& (0+255),f,b
  4248  001674  0100               	movlb	0	; () banked
  4249  001676  29B2               	incf	memcpy@n& (0+255),w,b
  4250  001678  B4D8               	btfsc	status,2,c
  4251  00167A  29B3               	incf	(memcpy@n+1)& (0+255),w,b
  4252  00167C  B4D8               	btfsc	status,2,c
  4253                           
  4254                           ; BSR set to: 0
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;	Return value of _memcpy is never used
  4258  00167E  0012               	return	
  4259  001680  D7E2               	goto	l3175
  4260  001682                     __end_of_memcpy:
  4261                           	opt stack 0
  4262                           tblptru	equ	0xFF8
  4263                           tblptrh	equ	0xFF7
  4264                           tblptrl	equ	0xFF6
  4265                           tablat	equ	0xFF5
  4266                           prodh	equ	0xFF4
  4267                           prodl	equ	0xFF3
  4268                           intcon	equ	0xFF2
  4269                           postinc0	equ	0xFEE
  4270                           wreg	equ	0xFE8
  4271                           indf1	equ	0xFE7
  4272                           postdec1	equ	0xFE5
  4273                           fsr1h	equ	0xFE2
  4274                           fsr1l	equ	0xFE1
  4275                           indf2	equ	0xFDF
  4276                           postinc2	equ	0xFDE
  4277                           postdec2	equ	0xFDD
  4278                           fsr2h	equ	0xFDA
  4279                           fsr2l	equ	0xFD9
  4280                           status	equ	0xFD8
  4281                           
  4282 ;; *************** function _SetChanADC *****************
  4283 ;; Defined at:
  4284 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  channel         1    wreg     unsigned char 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  channel         1   47[BANK0 ] unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;		None               void
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4298 ;;      Params:         0       0       0       0       0
  4299 ;;      Locals:         0       1       0       0       0
  4300 ;;      Temps:          0       1       0       0       0
  4301 ;;      Totals:         0       2       0       0       0
  4302 ;;Total ram usage:        2 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; Hardware stack levels required when called:   11
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_main
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text25
  4313  001ACC                     __ptext25:
  4314                           	opt stack 0
  4315  001ACC                     _SetChanADC:
  4316                           	opt stack 19
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;incstack = 0
  4320                           ;SetChanADC@channel stored from wreg
  4321  001ACC  CFE8 F0AF          	movff	wreg,SetChanADC@channel
  4322  001AD0  CFC2 F0AE          	movff	4034,??_SetChanADC	;volatile
  4323  001AD4  0EC3               	movlw	195
  4324  001AD6  0100               	movlb	0	; () banked
  4325  001AD8  17AE               	andwf	??_SetChanADC& (0+255),f,b
  4326  001ADA  0100               	movlb	0	; () banked
  4327  001ADC  0100               	movlb	0	; () banked
  4328  001ADE  90D8               	bcf	status,0,c
  4329  001AE0  31AF               	rrcf	SetChanADC@channel& (0+255),w,b
  4330  001AE2  0B3C               	andlw	60
  4331  001AE4  0100               	movlb	0	; () banked
  4332  001AE6  11AE               	iorwf	??_SetChanADC& (0+255),w,b
  4333  001AE8  6EC2               	movwf	4034,c	;volatile
  4334                           
  4335                           ; BSR set to: 0
  4336  001AEA  0012               	return	
  4337  001AEC                     __end_of_SetChanADC:
  4338                           	opt stack 0
  4339                           tblptru	equ	0xFF8
  4340                           tblptrh	equ	0xFF7
  4341                           tblptrl	equ	0xFF6
  4342                           tablat	equ	0xFF5
  4343                           prodh	equ	0xFF4
  4344                           prodl	equ	0xFF3
  4345                           intcon	equ	0xFF2
  4346                           postinc0	equ	0xFEE
  4347                           wreg	equ	0xFE8
  4348                           indf1	equ	0xFE7
  4349                           postdec1	equ	0xFE5
  4350                           fsr1h	equ	0xFE2
  4351                           fsr1l	equ	0xFE1
  4352                           indf2	equ	0xFDF
  4353                           postinc2	equ	0xFDE
  4354                           postdec2	equ	0xFDD
  4355                           fsr2h	equ	0xFDA
  4356                           fsr2l	equ	0xFD9
  4357                           status	equ	0xFD8
  4358                           
  4359 ;; *************** function _OpenUSART *****************
  4360 ;; Defined at:
  4361 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;  config          1    wreg     unsigned char 
  4364 ;;  spbrg           2   46[BANK0 ] unsigned int 
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;  config          1   51[BANK0 ] unsigned char 
  4367 ;; Return value:  Size  Location     Type
  4368 ;;		None               void
  4369 ;; Registers used:
  4370 ;;		wreg, status,2
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4376 ;;      Params:         0       2       0       0       0
  4377 ;;      Locals:         0       1       0       0       0
  4378 ;;      Temps:          0       3       0       0       0
  4379 ;;      Totals:         0       6       0       0       0
  4380 ;;Total ram usage:        6 bytes
  4381 ;; Hardware stack levels used:    1
  4382 ;; Hardware stack levels required when called:   11
  4383 ;; This function calls:
  4384 ;;		Nothing
  4385 ;; This function is called by:
  4386 ;;		_main
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           	psect	text26
  4391  0011C0                     __ptext26:
  4392                           	opt stack 0
  4393  0011C0                     _OpenUSART:
  4394                           	opt stack 19
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;incstack = 0
  4398                           ;OpenUSART@config stored from wreg
  4399  0011C0  CFE8 F0B3          	movff	wreg,OpenUSART@config
  4400  0011C4  0E00               	movlw	0
  4401  0011C6  6EAC               	movwf	4012,c	;volatile
  4402  0011C8  0E00               	movlw	0
  4403  0011CA  6EAB               	movwf	4011,c	;volatile
  4404  0011CC  0100               	movlb	0	; () banked
  4405  0011CE  0100               	movlb	0	; () banked
  4406  0011D0  B1B3               	btfsc	OpenUSART@config& (0+255),0,b
  4407                           
  4408                           ; BSR set to: 0
  4409  0011D2  88AC               	bsf	4012,4,c	;volatile
  4410                           
  4411                           ; BSR set to: 0
  4412                           
  4413                           ; BSR set to: 0
  4414  0011D4  0100               	movlb	0	; () banked
  4415  0011D6  0100               	movlb	0	; () banked
  4416  0011D8  A3B3               	btfss	OpenUSART@config& (0+255),1,b
  4417  0011DA  D002               	goto	l2393
  4418                           
  4419                           ; BSR set to: 0
  4420  0011DC  8CAC               	bsf	4012,6,c	;volatile
  4421  0011DE  8CAB               	bsf	4011,6,c	;volatile
  4422  0011E0                     l2393:
  4423                           
  4424                           ; BSR set to: 0
  4425  0011E0  0100               	movlb	0	; () banked
  4426  0011E2  0100               	movlb	0	; () banked
  4427  0011E4  B5B3               	btfsc	OpenUSART@config& (0+255),2,b
  4428                           
  4429                           ; BSR set to: 0
  4430  0011E6  8EAC               	bsf	4012,7,c	;volatile
  4431                           
  4432                           ; BSR set to: 0
  4433                           
  4434                           ; BSR set to: 0
  4435  0011E8  0100               	movlb	0	; () banked
  4436  0011EA  0100               	movlb	0	; () banked
  4437  0011EC  A7B3               	btfss	OpenUSART@config& (0+255),3,b
  4438  0011EE  D002               	goto	l522
  4439                           
  4440                           ; BSR set to: 0
  4441  0011F0  88AB               	bsf	4011,4,c	;volatile
  4442  0011F2  D001               	goto	l2401
  4443  0011F4                     l522:
  4444                           
  4445                           ; BSR set to: 0
  4446  0011F4  8AAB               	bsf	4011,5,c	;volatile
  4447  0011F6                     l2401:
  4448                           
  4449                           ; BSR set to: 0
  4450  0011F6  0100               	movlb	0	; () banked
  4451  0011F8  0100               	movlb	0	; () banked
  4452  0011FA  B9B3               	btfsc	OpenUSART@config& (0+255),4,b
  4453                           
  4454                           ; BSR set to: 0
  4455  0011FC  84AC               	bsf	4012,2,c	;volatile
  4456                           
  4457                           ; BSR set to: 0
  4458  0011FE  989E               	bcf	3998,4,c	;volatile
  4459                           
  4460                           ; BSR set to: 0
  4461  001200  0100               	movlb	0	; () banked
  4462  001202  0100               	movlb	0	; () banked
  4463  001204  BBB3               	btfsc	OpenUSART@config& (0+255),5,b
  4464                           
  4465                           ; BSR set to: 0
  4466  001206  86AB               	bsf	4011,3,c	;volatile
  4467                           
  4468                           ; BSR set to: 0
  4469                           
  4470                           ; BSR set to: 0
  4471  001208  0100               	movlb	0	; () banked
  4472  00120A  0100               	movlb	0	; () banked
  4473  00120C  ADB3               	btfss	OpenUSART@config& (0+255),6,b
  4474  00120E  D002               	goto	l526
  4475                           
  4476                           ; BSR set to: 0
  4477  001210  8A9D               	bsf	3997,5,c	;volatile
  4478  001212  D001               	goto	l527
  4479  001214                     l526:
  4480                           
  4481                           ; BSR set to: 0
  4482  001214  9A9D               	bcf	3997,5,c	;volatile
  4483  001216                     l527:
  4484                           
  4485                           ; BSR set to: 0
  4486  001216  9A9E               	bcf	3998,5,c	;volatile
  4487                           
  4488                           ; BSR set to: 0
  4489  001218  0100               	movlb	0	; () banked
  4490  00121A  0100               	movlb	0	; () banked
  4491  00121C  AFB3               	btfss	OpenUSART@config& (0+255),7,b
  4492  00121E  D002               	goto	l528
  4493                           
  4494                           ; BSR set to: 0
  4495  001220  889D               	bsf	3997,4,c	;volatile
  4496  001222  D001               	goto	l529
  4497  001224                     l528:
  4498                           
  4499                           ; BSR set to: 0
  4500  001224  989D               	bcf	3997,4,c	;volatile
  4501  001226                     l529:
  4502                           
  4503                           ; BSR set to: 0
  4504  001226  C0AE  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4505                           
  4506                           ; BSR set to: 0
  4507  00122A  0100               	movlb	0	; () banked
  4508  00122C  C0AF  F0B0         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4509  001230  C0B0  F0B1         	movff	??_OpenUSART,??_OpenUSART+1
  4510  001234  0100               	movlb	0	; () banked
  4511  001236  6BB2               	clrf	(??_OpenUSART+2)& (0+255),b
  4512  001238  0100               	movlb	0	; () banked
  4513  00123A  51B1               	movf	(??_OpenUSART+1)& (0+255),w,b
  4514  00123C  6EB0               	movwf	4016,c	;volatile
  4515                           
  4516                           ; BSR set to: 0
  4517  00123E  8AAC               	bsf	4012,5,c	;volatile
  4518                           
  4519                           ; BSR set to: 0
  4520  001240  8EAB               	bsf	4011,7,c	;volatile
  4521                           
  4522                           ; BSR set to: 0
  4523  001242  9C94               	bcf	3988,6,c	;volatile
  4524                           
  4525                           ; BSR set to: 0
  4526  001244  8E94               	bsf	3988,7,c	;volatile
  4527                           
  4528                           ; BSR set to: 0
  4529  001246  A8AC               	btfss	4012,4,c	;volatile
  4530  001248  0012               	return	
  4531                           
  4532                           ; BSR set to: 0
  4533  00124A  BEAC               	btfsc	4012,7,c	;volatile
  4534  00124C  0012               	return	
  4535                           
  4536                           ; BSR set to: 0
  4537  00124E  8C94               	bsf	3988,6,c	;volatile
  4538  001250  0012               	return	
  4539  001252                     __end_of_OpenUSART:
  4540                           	opt stack 0
  4541                           tblptru	equ	0xFF8
  4542                           tblptrh	equ	0xFF7
  4543                           tblptrl	equ	0xFF6
  4544                           tablat	equ	0xFF5
  4545                           prodh	equ	0xFF4
  4546                           prodl	equ	0xFF3
  4547                           intcon	equ	0xFF2
  4548                           postinc0	equ	0xFEE
  4549                           wreg	equ	0xFE8
  4550                           indf1	equ	0xFE7
  4551                           postdec1	equ	0xFE5
  4552                           fsr1h	equ	0xFE2
  4553                           fsr1l	equ	0xFE1
  4554                           indf2	equ	0xFDF
  4555                           postinc2	equ	0xFDE
  4556                           postdec2	equ	0xFDD
  4557                           fsr2h	equ	0xFDA
  4558                           fsr2l	equ	0xFD9
  4559                           status	equ	0xFD8
  4560                           
  4561 ;; *************** function _OpenTimer1 *****************
  4562 ;; Defined at:
  4563 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  config          1    wreg     unsigned char 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  config          1   46[BANK0 ] unsigned char 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;		None               void
  4570 ;; Registers used:
  4571 ;;		wreg, status,2, status,0
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4577 ;;      Params:         0       0       0       0       0
  4578 ;;      Locals:         0       1       0       0       0
  4579 ;;      Temps:          0       0       0       0       0
  4580 ;;      Totals:         0       1       0       0       0
  4581 ;;Total ram usage:        1 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:   11
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_main
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text27
  4592  001906                     __ptext27:
  4593                           	opt stack 0
  4594  001906                     _OpenTimer1:
  4595                           	opt stack 19
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;incstack = 0
  4599                           ;OpenTimer1@config stored from wreg
  4600  001906  CFE8 F0AE          	movff	wreg,OpenTimer1@config
  4601  00190A  0100               	movlb	0	; () banked
  4602  00190C  0100               	movlb	0	; () banked
  4603  00190E  51AE               	movf	OpenTimer1@config& (0+255),w,b
  4604  001910  0B7E               	andlw	126
  4605  001912  6ECD               	movwf	4045,c	;volatile
  4606                           
  4607                           ; BSR set to: 0
  4608  001914  0100               	movlb	0	; () banked
  4609  001916  0100               	movlb	0	; () banked
  4610  001918  ADAE               	btfss	OpenTimer1@config& (0+255),6,b
  4611  00191A  D002               	goto	l485
  4612                           
  4613                           ; BSR set to: 0
  4614  00191C  8ECD               	bsf	4045,7,c	;volatile
  4615  00191E  D001               	goto	l2353
  4616  001920                     l485:
  4617                           
  4618                           ; BSR set to: 0
  4619  001920  9ECD               	bcf	4045,7,c	;volatile
  4620  001922                     l2353:
  4621                           
  4622                           ; BSR set to: 0
  4623  001922  0E00               	movlw	0
  4624  001924  6ECF               	movwf	4047,c	;volatile
  4625  001926  0E00               	movlw	0
  4626  001928  6ECE               	movwf	4046,c	;volatile
  4627                           
  4628                           ; BSR set to: 0
  4629  00192A  909E               	bcf	3998,0,c	;volatile
  4630                           
  4631                           ; BSR set to: 0
  4632  00192C  0100               	movlb	0	; () banked
  4633  00192E  0100               	movlb	0	; () banked
  4634  001930  AFAE               	btfss	OpenTimer1@config& (0+255),7,b
  4635  001932  D002               	goto	l487
  4636                           
  4637                           ; BSR set to: 0
  4638  001934  809D               	bsf	3997,0,c	;volatile
  4639  001936  D001               	goto	l488
  4640  001938                     l487:
  4641                           
  4642                           ; BSR set to: 0
  4643  001938  909D               	bcf	3997,0,c	;volatile
  4644  00193A                     l488:
  4645                           
  4646                           ; BSR set to: 0
  4647  00193A  80CD               	bsf	4045,0,c	;volatile
  4648                           
  4649                           ; BSR set to: 0
  4650  00193C  0012               	return	
  4651  00193E                     __end_of_OpenTimer1:
  4652                           	opt stack 0
  4653                           tblptru	equ	0xFF8
  4654                           tblptrh	equ	0xFF7
  4655                           tblptrl	equ	0xFF6
  4656                           tablat	equ	0xFF5
  4657                           prodh	equ	0xFF4
  4658                           prodl	equ	0xFF3
  4659                           intcon	equ	0xFF2
  4660                           postinc0	equ	0xFEE
  4661                           wreg	equ	0xFE8
  4662                           indf1	equ	0xFE7
  4663                           postdec1	equ	0xFE5
  4664                           fsr1h	equ	0xFE2
  4665                           fsr1l	equ	0xFE1
  4666                           indf2	equ	0xFDF
  4667                           postinc2	equ	0xFDE
  4668                           postdec2	equ	0xFDD
  4669                           fsr2h	equ	0xFDA
  4670                           fsr2l	equ	0xFD9
  4671                           status	equ	0xFD8
  4672                           
  4673 ;; *************** function _OpenTimer0 *****************
  4674 ;; Defined at:
  4675 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  config          1    wreg     unsigned char 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  config          1   46[BANK0 ] unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;		None               void
  4682 ;; Registers used:
  4683 ;;		wreg, status,2, status,0
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4689 ;;      Params:         0       0       0       0       0
  4690 ;;      Locals:         0       1       0       0       0
  4691 ;;      Temps:          0       0       0       0       0
  4692 ;;      Totals:         0       1       0       0       0
  4693 ;;Total ram usage:        1 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:   11
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_main
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text28
  4704  001A0E                     __ptext28:
  4705                           	opt stack 0
  4706  001A0E                     _OpenTimer0:
  4707                           	opt stack 19
  4708                           
  4709                           ; BSR set to: 0
  4710                           ;incstack = 0
  4711                           ;OpenTimer0@config stored from wreg
  4712  001A0E  CFE8 F0AE          	movff	wreg,OpenTimer0@config
  4713  001A12  0100               	movlb	0	; () banked
  4714  001A14  0100               	movlb	0	; () banked
  4715  001A16  51AE               	movf	OpenTimer0@config& (0+255),w,b
  4716  001A18  0B7F               	andlw	127
  4717  001A1A  6ED5               	movwf	4053,c	;volatile
  4718                           
  4719                           ; BSR set to: 0
  4720  001A1C  0E00               	movlw	0
  4721  001A1E  6ED7               	movwf	4055,c	;volatile
  4722                           
  4723                           ; BSR set to: 0
  4724  001A20  0E00               	movlw	0
  4725  001A22  6ED6               	movwf	4054,c	;volatile
  4726                           
  4727                           ; BSR set to: 0
  4728  001A24  94F2               	bcf	intcon,2,c	;volatile
  4729                           
  4730                           ; BSR set to: 0
  4731  001A26  0100               	movlb	0	; () banked
  4732  001A28  0100               	movlb	0	; () banked
  4733  001A2A  AFAE               	btfss	OpenTimer0@config& (0+255),7,b
  4734  001A2C  D002               	goto	l461
  4735                           
  4736                           ; BSR set to: 0
  4737  001A2E  8AF2               	bsf	intcon,5,c	;volatile
  4738  001A30  D001               	goto	l462
  4739  001A32                     l461:
  4740                           
  4741                           ; BSR set to: 0
  4742  001A32  9AF2               	bcf	intcon,5,c	;volatile
  4743  001A34                     l462:
  4744                           
  4745                           ; BSR set to: 0
  4746  001A34  8ED5               	bsf	4053,7,c	;volatile
  4747                           
  4748                           ; BSR set to: 0
  4749  001A36  0012               	return	
  4750  001A38                     __end_of_OpenTimer0:
  4751                           	opt stack 0
  4752                           tblptru	equ	0xFF8
  4753                           tblptrh	equ	0xFF7
  4754                           tblptrl	equ	0xFF6
  4755                           tablat	equ	0xFF5
  4756                           prodh	equ	0xFF4
  4757                           prodl	equ	0xFF3
  4758                           intcon	equ	0xFF2
  4759                           postinc0	equ	0xFEE
  4760                           wreg	equ	0xFE8
  4761                           indf1	equ	0xFE7
  4762                           postdec1	equ	0xFE5
  4763                           fsr1h	equ	0xFE2
  4764                           fsr1l	equ	0xFE1
  4765                           indf2	equ	0xFDF
  4766                           postinc2	equ	0xFDE
  4767                           postdec2	equ	0xFDD
  4768                           fsr2h	equ	0xFDA
  4769                           fsr2l	equ	0xFD9
  4770                           status	equ	0xFD8
  4771                           
  4772 ;; *************** function _OpenADC *****************
  4773 ;; Defined at:
  4774 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  config          1    wreg     unsigned char 
  4777 ;;  config2         1   46[BANK0 ] unsigned char 
  4778 ;;  portconfig      1   47[BANK0 ] unsigned char 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  config          1   50[BANK0 ] unsigned char 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;		None               void
  4783 ;; Registers used:
  4784 ;;		wreg, status,2, status,0
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4790 ;;      Params:         0       2       0       0       0
  4791 ;;      Locals:         0       1       0       0       0
  4792 ;;      Temps:          0       2       0       0       0
  4793 ;;      Totals:         0       5       0       0       0
  4794 ;;Total ram usage:        5 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:   11
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_main
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text29
  4805  0012DC                     __ptext29:
  4806                           	opt stack 0
  4807  0012DC                     _OpenADC:
  4808                           	opt stack 19
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;incstack = 0
  4812                           ;OpenADC@config stored from wreg
  4813  0012DC  CFE8 F0B2          	movff	wreg,OpenADC@config
  4814  0012E0  0E00               	movlw	0
  4815  0012E2  6EC2               	movwf	4034,c	;volatile
  4816  0012E4  0E00               	movlw	0
  4817  0012E6  6EC0               	movwf	4032,c	;volatile
  4818  0012E8  0100               	movlb	0	; () banked
  4819  0012EA  0100               	movlb	0	; () banked
  4820  0012EC  90D8               	bcf	status,0,c
  4821  0012EE  31AE               	rrcf	OpenADC@config2& (0+255),w,b
  4822  0012F0  0B3C               	andlw	60
  4823  0012F2  6EC2               	movwf	4034,c	;volatile
  4824                           
  4825                           ; BSR set to: 0
  4826  0012F4  C0AE  F0B0         	movff	OpenADC@config2,??_OpenADC
  4827  0012F8  0100               	movlb	0	; () banked
  4828  0012FA  3BB0               	swapf	??_OpenADC& (0+255),f,b
  4829  0012FC  0EF0               	movlw	240
  4830  0012FE  17B0               	andwf	??_OpenADC& (0+255),f,b
  4831  001300  0E30               	movlw	48
  4832  001302  0100               	movlb	0	; () banked
  4833  001304  17B0               	andwf	??_OpenADC& (0+255),f,b
  4834  001306  0100               	movlb	0	; () banked
  4835  001308  0100               	movlb	0	; () banked
  4836  00130A  51AF               	movf	OpenADC@portconfig& (0+255),w,b
  4837  00130C  0B0F               	andlw	15
  4838  00130E  0100               	movlb	0	; () banked
  4839  001310  11B0               	iorwf	??_OpenADC& (0+255),w,b
  4840  001312  6EC1               	movwf	4033,c	;volatile
  4841                           
  4842                           ; BSR set to: 0
  4843  001314  C0B2  F0B0         	movff	OpenADC@config,??_OpenADC
  4844  001318  0100               	movlb	0	; () banked
  4845  00131A  90D8               	bcf	status,0,c
  4846  00131C  37B0               	rlcf	??_OpenADC& (0+255),f,b
  4847  00131E  0100               	movlb	0	; () banked
  4848  001320  90D8               	bcf	status,0,c
  4849  001322  37B0               	rlcf	??_OpenADC& (0+255),f,b
  4850  001324  0E38               	movlw	56
  4851  001326  0100               	movlb	0	; () banked
  4852  001328  17B0               	andwf	??_OpenADC& (0+255),f,b
  4853  00132A  C0B2  F0B1         	movff	OpenADC@config,??_OpenADC+1
  4854  00132E  0100               	movlb	0	; () banked
  4855  001330  3BB1               	swapf	(??_OpenADC+1)& (0+255),f,b
  4856  001332  0E0F               	movlw	15
  4857  001334  17B1               	andwf	(??_OpenADC+1)& (0+255),f,b
  4858  001336  0E07               	movlw	7
  4859  001338  0100               	movlb	0	; () banked
  4860  00133A  17B1               	andwf	(??_OpenADC+1)& (0+255),f,b
  4861  00133C  0100               	movlb	0	; () banked
  4862  00133E  0100               	movlb	0	; () banked
  4863  001340  51B2               	movf	OpenADC@config& (0+255),w,b
  4864  001342  0B80               	andlw	128
  4865  001344  0100               	movlb	0	; () banked
  4866  001346  11B1               	iorwf	(??_OpenADC+1)& (0+255),w,b
  4867  001348  0100               	movlb	0	; () banked
  4868  00134A  11B0               	iorwf	??_OpenADC& (0+255),w,b
  4869  00134C  6EC0               	movwf	4032,c	;volatile
  4870                           
  4871                           ; BSR set to: 0
  4872  00134E  0100               	movlb	0	; () banked
  4873  001350  0100               	movlb	0	; () banked
  4874  001352  AFAE               	btfss	OpenADC@config2& (0+255),7,b
  4875  001354  D003               	goto	l442
  4876                           
  4877                           ; BSR set to: 0
  4878  001356  9C9E               	bcf	3998,6,c	;volatile
  4879  001358  8C9D               	bsf	3997,6,c	;volatile
  4880  00135A  8CF2               	bsf	intcon,6,c	;volatile
  4881  00135C                     l442:
  4882                           
  4883                           ; BSR set to: 0
  4884  00135C  80C2               	bsf	4034,0,c	;volatile
  4885                           
  4886                           ; BSR set to: 0
  4887  00135E  0012               	return	
  4888  001360                     __end_of_OpenADC:
  4889                           	opt stack 0
  4890                           tblptru	equ	0xFF8
  4891                           tblptrh	equ	0xFF7
  4892                           tblptrl	equ	0xFF6
  4893                           tablat	equ	0xFF5
  4894                           prodh	equ	0xFF4
  4895                           prodl	equ	0xFF3
  4896                           intcon	equ	0xFF2
  4897                           postinc0	equ	0xFEE
  4898                           wreg	equ	0xFE8
  4899                           indf1	equ	0xFE7
  4900                           postdec1	equ	0xFE5
  4901                           fsr1h	equ	0xFE2
  4902                           fsr1l	equ	0xFE1
  4903                           indf2	equ	0xFDF
  4904                           postinc2	equ	0xFDE
  4905                           postdec2	equ	0xFDD
  4906                           fsr2h	equ	0xFDA
  4907                           fsr2l	equ	0xFD9
  4908                           status	equ	0xFD8
  4909                           
  4910 ;; *************** function _InterruptHandlerLow *****************
  4911 ;; Defined at:
  4912 ;;		line 126 in file "../src/interrupts.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;		None
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;		None
  4917 ;; Return value:  Size  Location     Type
  4918 ;;		None               void
  4919 ;; Registers used:
  4920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4926 ;;      Params:         0       0       0       0       0
  4927 ;;      Locals:         0       0       0       0       0
  4928 ;;      Temps:         17       0       0       0       0
  4929 ;;      Totals:        17       0       0       0       0
  4930 ;;Total ram usage:       17 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; Hardware stack levels required when called:   10
  4933 ;; This function calls:
  4934 ;;		_adc_int_handler
  4935 ;;		_timer1_int_handler
  4936 ;;		_uart_recv_int_handler
  4937 ;; This function is called by:
  4938 ;;		Interrupt level 1
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	intcodelo
  4943  000018                     __pintcodelo:
  4944                           	opt stack 0
  4945  000018                     _InterruptHandlerLow:
  4946                           	opt stack 16
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;incstack = 0
  4950  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  4951  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  4952  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  4953  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  4954  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  4955  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  4956  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  4957  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  4958  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  4959  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  4960  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  4961  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  4962  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  4963  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  4964  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  4965  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  4966  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  4967                           
  4968                           ;interrupts.c: 128: if(PIR1bits.ADIF){
  4969  00005C  AC9E               	btfss	3998,6,c	;volatile
  4970  00005E  D003               	goto	i1l3583
  4971                           
  4972                           ;interrupts.c: 130: PIR1bits.ADIF = 0;
  4973  000060  9C9E               	bcf	3998,6,c	;volatile
  4974                           
  4975                           ;interrupts.c: 131: adc_int_handler();
  4976  000062  EC55  F00D         	call	_adc_int_handler	;wreg free
  4977  000066                     i1l3583:
  4978                           
  4979                           ;interrupts.c: 132: }
  4980                           ;interrupts.c: 135: if (PIR1bits.TMR1IF) {
  4981  000066  A09E               	btfss	3998,0,c	;volatile
  4982  000068  D003               	goto	i1l3589
  4983                           
  4984                           ;interrupts.c: 136: PIR1bits.TMR1IF = 0;
  4985  00006A  909E               	bcf	3998,0,c	;volatile
  4986                           
  4987                           ;interrupts.c: 137: timer1_int_handler();
  4988  00006C  ECD5  F00D         	call	_timer1_int_handler	;wreg free
  4989  000070                     i1l3589:
  4990                           
  4991                           ;interrupts.c: 138: }
  4992                           ;interrupts.c: 141: if (PIR1bits.RCIF) {
  4993  000070  AA9E               	btfss	3998,5,c	;volatile
  4994  000072  D003               	goto	i1l52
  4995                           
  4996                           ;interrupts.c: 142: PIR1bits.RCIF = 0;
  4997  000074  9A9E               	bcf	3998,5,c	;volatile
  4998                           
  4999                           ;interrupts.c: 143: uart_recv_int_handler();
  5000  000076  EC92  F008         	call	_uart_recv_int_handler	;wreg free
  5001  00007A                     i1l52:
  5002  00007A  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5003  00007E  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5004  000082  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5005  000086  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5006  00008A  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5007  00008E  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5008  000092  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5009  000096  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5010  00009A  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5011  00009E  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5012  0000A2  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5013  0000A6  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5014  0000AA  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5015  0000AE  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5016  0000B2  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5017  0000B6  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5018  0000BA  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5019  0000BE  0010               	retfie	
  5020  0000C0                     __end_of_InterruptHandlerLow:
  5021                           	opt stack 0
  5022                           pclatu	equ	0xFFB
  5023                           pclath	equ	0xFFA
  5024                           tblptru	equ	0xFF8
  5025                           tblptrh	equ	0xFF7
  5026                           tblptrl	equ	0xFF6
  5027                           tablat	equ	0xFF5
  5028                           prodh	equ	0xFF4
  5029                           prodl	equ	0xFF3
  5030                           intcon	equ	0xFF2
  5031                           postinc0	equ	0xFEE
  5032                           fsr0h	equ	0xFEA
  5033                           fsr0l	equ	0xFE9
  5034                           wreg	equ	0xFE8
  5035                           indf1	equ	0xFE7
  5036                           postdec1	equ	0xFE5
  5037                           fsr1h	equ	0xFE2
  5038                           fsr1l	equ	0xFE1
  5039                           bsr	equ	0xFE0
  5040                           indf2	equ	0xFDF
  5041                           postinc2	equ	0xFDE
  5042                           postdec2	equ	0xFDD
  5043                           fsr2h	equ	0xFDA
  5044                           fsr2l	equ	0xFD9
  5045                           status	equ	0xFD8
  5046                           
  5047 ;; *************** function _uart_recv_int_handler *****************
  5048 ;; Defined at:
  5049 ;;		line 11 in file "../src/my_uart.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;		None
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;		None
  5054 ;; Return value:  Size  Location     Type
  5055 ;;		None               void
  5056 ;; Registers used:
  5057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5063 ;;      Params:         0       0       0       0       0
  5064 ;;      Locals:         0       0       0       0       0
  5065 ;;      Temps:          1       0       0       0       0
  5066 ;;      Totals:         1       0       0       0       0
  5067 ;;Total ram usage:        1 bytes
  5068 ;; Hardware stack levels used:    1
  5069 ;; Hardware stack levels required when called:    9
  5070 ;; This function calls:
  5071 ;;		_ReadUSART
  5072 ;;		_ToMainLow_sendmsg
  5073 ;; This function is called by:
  5074 ;;		_InterruptHandlerLow
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078                           	psect	text31
  5079  001124                     __ptext31:
  5080                           	opt stack 0
  5081  001124                     _uart_recv_int_handler:
  5082                           	opt stack 16
  5083                           
  5084                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  5085                           
  5086                           ;incstack = 0
  5087  001124  AA9E               	btfss	3998,5,c	;volatile
  5088  001126  D03C               	goto	i1l3571
  5089                           
  5090                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5091  001128  EE20 F004          	lfsr	2,4
  5092  00112C  5052               	movf	_uc_ptr,w,c
  5093  00112E  26D9               	addwf	fsr2l,f,c
  5094  001130  5053               	movf	_uc_ptr+1,w,c
  5095  001132  22DA               	addwfc	fsr2h,f,c
  5096  001134  50DF               	movf	indf2,w,c
  5097  001136  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5098  001138  501B               	movf	??_uart_recv_int_handler,w,c
  5099  00113A  0D01               	mullw	1
  5100  00113C  50F3               	movf	prodl,w,c
  5101  00113E  2452               	addwf	_uc_ptr,w,c
  5102  001140  6ED9               	movwf	fsr2l,c
  5103  001142  50F4               	movf	prodh,w,c
  5104  001144  2053               	addwfc	_uc_ptr+1,w,c
  5105  001146  6EDA               	movwf	fsr2h,c
  5106  001148  EC85  F00D         	call	_ReadUSART	;wreg free
  5107  00114C  6EDF               	movwf	indf2,c
  5108                           
  5109                           ;my_uart.c: 25: uc_ptr->buflen++;
  5110  00114E  EE20 F004          	lfsr	2,4
  5111  001152  5052               	movf	_uc_ptr,w,c
  5112  001154  26D9               	addwf	fsr2l,f,c
  5113  001156  5053               	movf	_uc_ptr+1,w,c
  5114  001158  22DA               	addwfc	fsr2h,f,c
  5115  00115A  2ADF               	incf	indf2,f,c
  5116                           
  5117                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  5118  00115C  EE20 F004          	lfsr	2,4
  5119  001160  5052               	movf	_uc_ptr,w,c
  5120  001162  26D9               	addwf	fsr2l,f,c
  5121  001164  5053               	movf	_uc_ptr+1,w,c
  5122  001166  22DA               	addwfc	fsr2h,f,c
  5123  001168  0E04               	movlw	4
  5124  00116A  62DF               	cpfseq	indf2,c
  5125  00116C  D019               	goto	i1l3571
  5126                           
  5127                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5128  00116E  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5129  001170  0E1F               	movlw	31
  5130  001172  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5131  001174  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5132  001176  C053  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5133  00117A  C052  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5134  00117E  EE20 F004          	lfsr	2,4
  5135  001182  5052               	movf	_uc_ptr,w,c
  5136  001184  26D9               	addwf	fsr2l,f,c
  5137  001186  5053               	movf	_uc_ptr+1,w,c
  5138  001188  22DA               	addwfc	fsr2h,f,c
  5139  00118A  50DF               	movf	indf2,w,c
  5140  00118C  EC30  F00D         	call	_ToMainLow_sendmsg
  5141                           
  5142                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  5143  001190  EE20 F004          	lfsr	2,4
  5144  001194  5052               	movf	_uc_ptr,w,c
  5145  001196  26D9               	addwf	fsr2l,f,c
  5146  001198  5053               	movf	_uc_ptr+1,w,c
  5147  00119A  22DA               	addwfc	fsr2h,f,c
  5148  00119C  0E00               	movlw	0
  5149  00119E  6EDF               	movwf	indf2,c
  5150  0011A0                     i1l3571:
  5151                           
  5152                           ;my_uart.c: 30: }
  5153                           ;my_uart.c: 31: }
  5154                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  5155  0011A0  A651               	btfss	_USART_Status,3,c
  5156  0011A2  0012               	return	
  5157                           
  5158                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  5159  0011A4  98AB               	bcf	4011,4,c	;volatile
  5160                           
  5161                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  5162  0011A6  88AB               	bsf	4011,4,c	;volatile
  5163                           
  5164                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  5165  0011A8  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5166  0011AA  0E1E               	movlw	30
  5167  0011AC  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5168  0011AE  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5169  0011B0  0E00               	movlw	0
  5170  0011B2  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5171  0011B4  0E00               	movlw	0
  5172  0011B6  6E18               	movwf	ToMainLow_sendmsg@data,c
  5173  0011B8  0E00               	movlw	0
  5174  0011BA  EC30  F00D         	call	_ToMainLow_sendmsg
  5175  0011BE  0012               	return	
  5176  0011C0                     __end_of_uart_recv_int_handler:
  5177                           	opt stack 0
  5178                           pclatu	equ	0xFFB
  5179                           pclath	equ	0xFFA
  5180                           tblptru	equ	0xFF8
  5181                           tblptrh	equ	0xFF7
  5182                           tblptrl	equ	0xFF6
  5183                           tablat	equ	0xFF5
  5184                           prodh	equ	0xFF4
  5185                           prodl	equ	0xFF3
  5186                           intcon	equ	0xFF2
  5187                           postinc0	equ	0xFEE
  5188                           fsr0h	equ	0xFEA
  5189                           fsr0l	equ	0xFE9
  5190                           wreg	equ	0xFE8
  5191                           indf1	equ	0xFE7
  5192                           postdec1	equ	0xFE5
  5193                           fsr1h	equ	0xFE2
  5194                           fsr1l	equ	0xFE1
  5195                           bsr	equ	0xFE0
  5196                           indf2	equ	0xFDF
  5197                           postinc2	equ	0xFDE
  5198                           postdec2	equ	0xFDD
  5199                           fsr2h	equ	0xFDA
  5200                           fsr2l	equ	0xFD9
  5201                           status	equ	0xFD8
  5202                           
  5203 ;; *************** function _ToMainLow_sendmsg *****************
  5204 ;; Defined at:
  5205 ;;		line 103 in file "../src/messages.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;  length          1    wreg     unsigned char 
  5208 ;;  msgtype         1   22[COMRAM] unsigned char 
  5209 ;;  data            2   23[COMRAM] PTR void 
  5210 ;;		 -> NULL(0), main@uc(5), 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  length          1   25[COMRAM] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      char 
  5215 ;; Registers used:
  5216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5222 ;;      Params:         3       0       0       0       0
  5223 ;;      Locals:         1       0       0       0       0
  5224 ;;      Temps:          0       0       0       0       0
  5225 ;;      Totals:         4       0       0       0       0
  5226 ;;Total ram usage:        4 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    8
  5229 ;; This function calls:
  5230 ;;		i1_send_msg
  5231 ;; This function is called by:
  5232 ;;		_uart_recv_int_handler
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text32
  5237  001A60                     __ptext32:
  5238                           	opt stack 0
  5239  001A60                     _ToMainLow_sendmsg:
  5240                           	opt stack 16
  5241                           
  5242                           ;incstack = 0
  5243                           ;ToMainLow_sendmsg@length stored from wreg
  5244  001A60  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5245                           
  5246                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5247                           ;	Return value of _ToMainLow_sendmsg is never used
  5248  001A64  0101               	movlb	1	; () banked
  5249  001A66  0E01               	movlw	high _ToMainLow_MQ
  5250  001A68  6E0C               	movwf	i1send_msg@qptr+1,c
  5251  001A6A  0101               	movlb	1	; () banked
  5252  001A6C  0E00               	movlw	low _ToMainLow_MQ
  5253  001A6E  6E0B               	movwf	i1send_msg@qptr,c
  5254  001A70  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5255  001A74  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5256  001A78  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5257  001A7C  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5258  001A80  EC3D  F008         	call	i1_send_msg	;wreg free
  5259  001A84  0012               	return	
  5260  001A86                     __end_of_ToMainLow_sendmsg:
  5261                           	opt stack 0
  5262                           pclatu	equ	0xFFB
  5263                           pclath	equ	0xFFA
  5264                           tblptru	equ	0xFF8
  5265                           tblptrh	equ	0xFF7
  5266                           tblptrl	equ	0xFF6
  5267                           tablat	equ	0xFF5
  5268                           prodh	equ	0xFF4
  5269                           prodl	equ	0xFF3
  5270                           intcon	equ	0xFF2
  5271                           postinc0	equ	0xFEE
  5272                           fsr0h	equ	0xFEA
  5273                           fsr0l	equ	0xFE9
  5274                           wreg	equ	0xFE8
  5275                           indf1	equ	0xFE7
  5276                           postdec1	equ	0xFE5
  5277                           fsr1h	equ	0xFE2
  5278                           fsr1l	equ	0xFE1
  5279                           bsr	equ	0xFE0
  5280                           indf2	equ	0xFDF
  5281                           postinc2	equ	0xFDE
  5282                           postdec2	equ	0xFDD
  5283                           fsr2h	equ	0xFDA
  5284                           fsr2l	equ	0xFD9
  5285                           status	equ	0xFD8
  5286                           
  5287 ;; *************** function i1_send_msg *****************
  5288 ;; Defined at:
  5289 ;;		line 24 in file "../src/messages.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5292 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  5293 ;;  length          1   12[COMRAM] unsigned char 
  5294 ;;  msgtype         1   13[COMRAM] unsigned char 
  5295 ;;  data            2   14[COMRAM] PTR void 
  5296 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(65), 
  5297 ;;		 -> main@uc(5), 
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5300 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  5301 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  5302 ;;  send_msg        2   17[COMRAM] unsigned int 
  5303 ;;  send_msg        1   19[COMRAM] unsigned char 
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  1    wreg      char 
  5306 ;; Registers used:
  5307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5313 ;;      Params:         6       0       0       0       0
  5314 ;;      Locals:         5       0       0       0       0
  5315 ;;      Temps:          1       0       0       0       0
  5316 ;;      Totals:        12       0       0       0       0
  5317 ;;Total ram usage:       12 bytes
  5318 ;; Hardware stack levels used:    1
  5319 ;; Hardware stack levels required when called:    7
  5320 ;; This function calls:
  5321 ;;		i1_memcpy
  5322 ;; This function is called by:
  5323 ;;		_ToMainLow_sendmsg
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           	psect	text33
  5328  00107A                     __ptext33:
  5329                           	opt stack 0
  5330  00107A                     i1_send_msg:
  5331                           	opt stack 16
  5332                           
  5333                           ;messages.c: 25: unsigned char slot;
  5334                           ;messages.c: 27: msg *qmsg;
  5335                           ;messages.c: 28: size_t tlength = length;
  5336                           
  5337                           ;incstack = 0
  5338  00107A  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5339  00107E  6A13               	clrf	i1send_msg@tlength+1,c
  5340                           
  5341                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5342  001080  EE20 F07C          	lfsr	2,124
  5343  001084  500B               	movf	i1send_msg@qptr,w,c
  5344  001086  26D9               	addwf	fsr2l,f,c
  5345  001088  500C               	movf	i1send_msg@qptr+1,w,c
  5346  00108A  22DA               	addwfc	fsr2h,f,c
  5347  00108C  50DF               	movf	indf2,w,c
  5348  00108E  6E14               	movwf	i1send_msg@slot,c
  5349                           
  5350                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5351  001090  5014               	movf	i1send_msg@slot,w,c
  5352  001092  0D1F               	mullw	31
  5353  001094  50F3               	movf	prodl,w,c
  5354  001096  240B               	addwf	i1send_msg@qptr,w,c
  5355  001098  6E15               	movwf	i1send_msg@qmsg,c
  5356  00109A  50F4               	movf	prodh,w,c
  5357  00109C  200C               	addwfc	i1send_msg@qptr+1,w,c
  5358  00109E  6E16               	movwf	i1send_msg@qmsg+1,c
  5359                           
  5360                           ;messages.c: 41: if (qmsg->full != 0) {
  5361  0010A0  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5362  0010A4  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5363  0010A8  50DF               	movf	indf2,w,c
  5364  0010AA  B4D8               	btfsc	status,2,c
  5365  0010AC  D002               	goto	i1l3543
  5366                           
  5367                           ;messages.c: 42: return (-1);
  5368  0010AE  0EFF               	movlw	255
  5369  0010B0  0012               	return	
  5370  0010B2                     i1l3543:
  5371                           
  5372                           ;messages.c: 43: }
  5373                           ;messages.c: 46: qmsg->length = length;
  5374  0010B2  EE20 F001          	lfsr	2,1
  5375  0010B6  5015               	movf	i1send_msg@qmsg,w,c
  5376  0010B8  26D9               	addwf	fsr2l,f,c
  5377  0010BA  5016               	movf	i1send_msg@qmsg+1,w,c
  5378  0010BC  22DA               	addwfc	fsr2h,f,c
  5379  0010BE  C00D  FFDF         	movff	i1send_msg@length,indf2
  5380                           
  5381                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5382  0010C2  EE20 F002          	lfsr	2,2
  5383  0010C6  5015               	movf	i1send_msg@qmsg,w,c
  5384  0010C8  26D9               	addwf	fsr2l,f,c
  5385  0010CA  5016               	movf	i1send_msg@qmsg+1,w,c
  5386  0010CC  22DA               	addwfc	fsr2h,f,c
  5387  0010CE  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5388                           
  5389                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5390  0010D2  0E03               	movlw	3
  5391  0010D4  2415               	addwf	i1send_msg@qmsg,w,c
  5392  0010D6  6E01               	movwf	i1memcpy@d1,c
  5393  0010D8  0E00               	movlw	0
  5394  0010DA  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5395  0010DC  6E02               	movwf	i1memcpy@d1+1,c
  5396  0010DE  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5397  0010E2  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5398  0010E6  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5399  0010EA  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5400  0010EE  EC44  F00C         	call	i1_memcpy	;wreg free
  5401                           
  5402                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5403  0010F2  EE20 F07C          	lfsr	2,124
  5404  0010F6  500B               	movf	i1send_msg@qptr,w,c
  5405  0010F8  26D9               	addwf	fsr2l,f,c
  5406  0010FA  500C               	movf	i1send_msg@qptr+1,w,c
  5407  0010FC  22DA               	addwfc	fsr2h,f,c
  5408  0010FE  EE10 F07C          	lfsr	1,124
  5409  001102  500B               	movf	i1send_msg@qptr,w,c
  5410  001104  26E1               	addwf	fsr1l,f,c
  5411  001106  500C               	movf	i1send_msg@qptr+1,w,c
  5412  001108  22E2               	addwfc	fsr1h,f,c
  5413  00110A  50E7               	movf	indf1,w,c
  5414  00110C  6E11               	movwf	??i1_send_msg& (0+255),c
  5415  00110E  2811               	incf	??i1_send_msg,w,c
  5416  001110  0B03               	andlw	3
  5417  001112  6EDF               	movwf	indf2,c
  5418                           
  5419                           ;messages.c: 59: qmsg->full = 1;
  5420  001114  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5421  001118  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5422  00111C  0E01               	movlw	1
  5423  00111E  6EDF               	movwf	indf2,c
  5424                           
  5425                           ;messages.c: 60: return (1);
  5426  001120  0E01               	movlw	1
  5427  001122  0012               	return	
  5428  001124                     __end_ofi1_send_msg:
  5429                           	opt stack 0
  5430                           pclatu	equ	0xFFB
  5431                           pclath	equ	0xFFA
  5432                           tblptru	equ	0xFF8
  5433                           tblptrh	equ	0xFF7
  5434                           tblptrl	equ	0xFF6
  5435                           tablat	equ	0xFF5
  5436                           prodh	equ	0xFF4
  5437                           prodl	equ	0xFF3
  5438                           intcon	equ	0xFF2
  5439                           postinc0	equ	0xFEE
  5440                           fsr0h	equ	0xFEA
  5441                           fsr0l	equ	0xFE9
  5442                           wreg	equ	0xFE8
  5443                           indf1	equ	0xFE7
  5444                           postdec1	equ	0xFE5
  5445                           fsr1h	equ	0xFE2
  5446                           fsr1l	equ	0xFE1
  5447                           bsr	equ	0xFE0
  5448                           indf2	equ	0xFDF
  5449                           postinc2	equ	0xFDE
  5450                           postdec2	equ	0xFDD
  5451                           fsr2h	equ	0xFDA
  5452                           fsr2l	equ	0xFD9
  5453                           status	equ	0xFD8
  5454                           
  5455 ;; *************** function i1_memcpy *****************
  5456 ;; Defined at:
  5457 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  d1              2    0[COMRAM] PTR void 
  5460 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  5461 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  5462 ;;		 -> main@msgbuffer(29), 
  5463 ;;  s1              2    2[COMRAM] PTR const void 
  5464 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  5465 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  5466 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  5467 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(65), 
  5468 ;;		 -> main@uc(5), 
  5469 ;;  n               2    4[COMRAM] unsigned int 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5472 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  5473 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  5474 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  5475 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(65), 
  5476 ;;		 -> main@uc(5), 
  5477 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5478 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  5479 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  5480 ;;		 -> main@msgbuffer(29), 
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  2    0[COMRAM] PTR void 
  5483 ;; Registers used:
  5484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5490 ;;      Params:         6       0       0       0       0
  5491 ;;      Locals:         4       0       0       0       0
  5492 ;;      Temps:          0       0       0       0       0
  5493 ;;      Totals:        10       0       0       0       0
  5494 ;;Total ram usage:       10 bytes
  5495 ;; Hardware stack levels used:    1
  5496 ;; Hardware stack levels required when called:    6
  5497 ;; This function calls:
  5498 ;;		Nothing
  5499 ;; This function is called by:
  5500 ;;		i1_send_msg
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           	psect	text34
  5505  001888                     __ptext34:
  5506                           	opt stack 0
  5507  001888                     i1_memcpy:
  5508                           	opt stack 16
  5509                           
  5510                           ;incstack = 0
  5511  001888  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5512  00188C  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5513  001890  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5514  001894  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5515  001898  D00E               	goto	i1l3519
  5516  00189A                     i1l3513:
  5517  00189A  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5518  00189E  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5519  0018A2  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5520  0018A6  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5521  0018AA  CFDF FFE7          	movff	indf2,indf1
  5522  0018AE  4A09               	infsnz	i1memcpy@s,f,c
  5523  0018B0  2A0A               	incf	i1memcpy@s+1,f,c
  5524  0018B2  4A07               	infsnz	i1memcpy@d,f,c
  5525  0018B4  2A08               	incf	i1memcpy@d+1,f,c
  5526  0018B6                     i1l3519:
  5527  0018B6  0605               	decf	i1memcpy@n,f,c
  5528  0018B8  A0D8               	btfss	status,0,c
  5529  0018BA  0606               	decf	i1memcpy@n+1,f,c
  5530  0018BC  2805               	incf	i1memcpy@n& (0+255),w,c
  5531  0018BE  B4D8               	btfsc	status,2,c
  5532  0018C0  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5533  0018C2  B4D8               	btfsc	status,2,c
  5534                           
  5535                           ;	Return value of i1_memcpy is never used
  5536  0018C4  0012               	return	
  5537  0018C6  D7E9               	goto	i1l3513
  5538  0018C8                     __end_ofi1_memcpy:
  5539                           	opt stack 0
  5540                           pclatu	equ	0xFFB
  5541                           pclath	equ	0xFFA
  5542                           tblptru	equ	0xFF8
  5543                           tblptrh	equ	0xFF7
  5544                           tblptrl	equ	0xFF6
  5545                           tablat	equ	0xFF5
  5546                           prodh	equ	0xFF4
  5547                           prodl	equ	0xFF3
  5548                           intcon	equ	0xFF2
  5549                           postinc0	equ	0xFEE
  5550                           fsr0h	equ	0xFEA
  5551                           fsr0l	equ	0xFE9
  5552                           wreg	equ	0xFE8
  5553                           indf1	equ	0xFE7
  5554                           postdec1	equ	0xFE5
  5555                           fsr1h	equ	0xFE2
  5556                           fsr1l	equ	0xFE1
  5557                           bsr	equ	0xFE0
  5558                           indf2	equ	0xFDF
  5559                           postinc2	equ	0xFDE
  5560                           postdec2	equ	0xFDD
  5561                           fsr2h	equ	0xFDA
  5562                           fsr2l	equ	0xFD9
  5563                           status	equ	0xFD8
  5564                           
  5565 ;; *************** function _ReadUSART *****************
  5566 ;; Defined at:
  5567 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;		None
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;  data            1    0[COMRAM] unsigned char 
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  1    wreg      unsigned char 
  5574 ;; Registers used:
  5575 ;;		wreg, status,2, status,0
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5581 ;;      Params:         0       0       0       0       0
  5582 ;;      Locals:         1       0       0       0       0
  5583 ;;      Temps:          0       0       0       0       0
  5584 ;;      Totals:         1       0       0       0       0
  5585 ;;Total ram usage:        1 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; Hardware stack levels required when called:    6
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_uart_recv_int_handler
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text35
  5596  001B0A                     __ptext35:
  5597                           	opt stack 0
  5598  001B0A                     _ReadUSART:
  5599                           	opt stack 18
  5600                           
  5601                           ;incstack = 0
  5602  001B0A  0EF2               	movlw	242
  5603  001B0C  1651               	andwf	_USART_Status,f,c
  5604  001B0E  ACAB               	btfss	4011,6,c	;volatile
  5605  001B10  D003               	goto	i1l540
  5606  001B12  9051               	bcf	_USART_Status,0,c
  5607  001B14  B0AB               	btfsc	4011,0,c	;volatile
  5608  001B16  8051               	bsf	_USART_Status,0,c
  5609  001B18                     i1l540:
  5610  001B18  B4AB               	btfsc	4011,2,c	;volatile
  5611  001B1A  8451               	bsf	_USART_Status,2,c
  5612  001B1C  B2AB               	btfsc	4011,1,c	;volatile
  5613  001B1E  8651               	bsf	_USART_Status,3,c
  5614  001B20  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5615  001B24  5001               	movf	ReadUSART@data,w,c
  5616  001B26  0012               	return	
  5617  001B28                     __end_of_ReadUSART:
  5618                           	opt stack 0
  5619                           pclatu	equ	0xFFB
  5620                           pclath	equ	0xFFA
  5621                           tblptru	equ	0xFF8
  5622                           tblptrh	equ	0xFF7
  5623                           tblptrl	equ	0xFF6
  5624                           tablat	equ	0xFF5
  5625                           prodh	equ	0xFF4
  5626                           prodl	equ	0xFF3
  5627                           intcon	equ	0xFF2
  5628                           postinc0	equ	0xFEE
  5629                           fsr0h	equ	0xFEA
  5630                           fsr0l	equ	0xFE9
  5631                           wreg	equ	0xFE8
  5632                           indf1	equ	0xFE7
  5633                           postdec1	equ	0xFE5
  5634                           fsr1h	equ	0xFE2
  5635                           fsr1l	equ	0xFE1
  5636                           bsr	equ	0xFE0
  5637                           indf2	equ	0xFDF
  5638                           postinc2	equ	0xFDE
  5639                           postdec2	equ	0xFDD
  5640                           fsr2h	equ	0xFDA
  5641                           fsr2l	equ	0xFD9
  5642                           status	equ	0xFD8
  5643                           
  5644 ;; *************** function _timer1_int_handler *****************
  5645 ;; Defined at:
  5646 ;;		line 46 in file "../src/user_interrupts.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;		None
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;		None
  5651 ;; Return value:  Size  Location     Type
  5652 ;;		None               void
  5653 ;; Registers used:
  5654 ;;		wreg, status,2, cstack
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5660 ;;      Params:         0       0       0       0       0
  5661 ;;      Locals:         0       0       0       0       0
  5662 ;;      Temps:          0       0       0       0       0
  5663 ;;      Totals:         0       0       0       0       0
  5664 ;;Total ram usage:        0 bytes
  5665 ;; Hardware stack levels used:    1
  5666 ;; Hardware stack levels required when called:    7
  5667 ;; This function calls:
  5668 ;;		_WriteTimer1
  5669 ;; This function is called by:
  5670 ;;		_InterruptHandlerLow
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           	psect	text36
  5675  001BAA                     __ptext36:
  5676                           	opt stack 0
  5677  001BAA                     _timer1_int_handler:
  5678                           	opt stack 18
  5679                           
  5680                           ;user_interrupts.c: 58: WriteTimer1(0);
  5681                           
  5682                           ;incstack = 0
  5683  001BAA  0E00               	movlw	0
  5684  001BAC  6E02               	movwf	WriteTimer1@timer1+1,c
  5685  001BAE  0E00               	movlw	0
  5686  001BB0  6E01               	movwf	WriteTimer1@timer1,c
  5687  001BB2  ECBA  F00D         	call	_WriteTimer1	;wreg free
  5688  001BB6  0012               	return	
  5689  001BB8                     __end_of_timer1_int_handler:
  5690                           	opt stack 0
  5691                           pclatu	equ	0xFFB
  5692                           pclath	equ	0xFFA
  5693                           tblptru	equ	0xFF8
  5694                           tblptrh	equ	0xFF7
  5695                           tblptrl	equ	0xFF6
  5696                           tablat	equ	0xFF5
  5697                           prodh	equ	0xFF4
  5698                           prodl	equ	0xFF3
  5699                           intcon	equ	0xFF2
  5700                           postinc0	equ	0xFEE
  5701                           fsr0h	equ	0xFEA
  5702                           fsr0l	equ	0xFE9
  5703                           wreg	equ	0xFE8
  5704                           indf1	equ	0xFE7
  5705                           postdec1	equ	0xFE5
  5706                           fsr1h	equ	0xFE2
  5707                           fsr1l	equ	0xFE1
  5708                           bsr	equ	0xFE0
  5709                           indf2	equ	0xFDF
  5710                           postinc2	equ	0xFDE
  5711                           postdec2	equ	0xFDD
  5712                           fsr2h	equ	0xFDA
  5713                           fsr2l	equ	0xFD9
  5714                           status	equ	0xFD8
  5715                           
  5716 ;; *************** function _WriteTimer1 *****************
  5717 ;; Defined at:
  5718 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  timer1          2    0[COMRAM] unsigned int 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;  timer           2    2[COMRAM] struct Timers
  5723 ;; Return value:  Size  Location     Type
  5724 ;;		None               void
  5725 ;; Registers used:
  5726 ;;		None
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5732 ;;      Params:         2       0       0       0       0
  5733 ;;      Locals:         2       0       0       0       0
  5734 ;;      Temps:          0       0       0       0       0
  5735 ;;      Totals:         4       0       0       0       0
  5736 ;;Total ram usage:        4 bytes
  5737 ;; Hardware stack levels used:    1
  5738 ;; Hardware stack levels required when called:    6
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_timer1_int_handler
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           	psect	text37
  5747  001B74                     __ptext37:
  5748                           	opt stack 0
  5749  001B74                     _WriteTimer1:
  5750                           	opt stack 18
  5751                           
  5752                           ;incstack = 0
  5753  001B74  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5754  001B78  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5755  001B7C  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5756  001B80  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5757  001B84  0012               	return	
  5758  001B86                     __end_of_WriteTimer1:
  5759                           	opt stack 0
  5760                           pclatu	equ	0xFFB
  5761                           pclath	equ	0xFFA
  5762                           tblptru	equ	0xFF8
  5763                           tblptrh	equ	0xFF7
  5764                           tblptrl	equ	0xFF6
  5765                           tablat	equ	0xFF5
  5766                           prodh	equ	0xFF4
  5767                           prodl	equ	0xFF3
  5768                           intcon	equ	0xFF2
  5769                           postinc0	equ	0xFEE
  5770                           fsr0h	equ	0xFEA
  5771                           fsr0l	equ	0xFE9
  5772                           wreg	equ	0xFE8
  5773                           indf1	equ	0xFE7
  5774                           postdec1	equ	0xFE5
  5775                           fsr1h	equ	0xFE2
  5776                           fsr1l	equ	0xFE1
  5777                           bsr	equ	0xFE0
  5778                           indf2	equ	0xFDF
  5779                           postinc2	equ	0xFDE
  5780                           postdec2	equ	0xFDD
  5781                           fsr2h	equ	0xFDA
  5782                           fsr2l	equ	0xFD9
  5783                           status	equ	0xFD8
  5784                           
  5785 ;; *************** function _adc_int_handler *****************
  5786 ;; Defined at:
  5787 ;;		line 61 in file "../src/user_interrupts.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;		None
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;		None
  5792 ;; Return value:  Size  Location     Type
  5793 ;;		None               void
  5794 ;; Registers used:
  5795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5801 ;;      Params:         0       0       0       0       0
  5802 ;;      Locals:         0       0       0       0       0
  5803 ;;      Temps:          0       0       0       0       0
  5804 ;;      Totals:         0       0       0       0       0
  5805 ;;Total ram usage:        0 bytes
  5806 ;; Hardware stack levels used:    1
  5807 ;; Hardware stack levels required when called:    6
  5808 ;; This function calls:
  5809 ;;		Nothing
  5810 ;; This function is called by:
  5811 ;;		_InterruptHandlerLow
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           	psect	text38
  5816  001AAA                     __ptext38:
  5817                           	opt stack 0
  5818  001AAA                     _adc_int_handler:
  5819                           	opt stack 19
  5820                           
  5821                           ;user_interrupts.c: 63: if(adcbuffer[0] < 27)
  5822                           
  5823                           ;incstack = 0
  5824  001AAA  0E1B               	movlw	27
  5825  001AAC  5C34               	subwf	_adcbuffer,w,c
  5826  001AAE  B0D8               	btfsc	status,0,c
  5827  001AB0  D002               	goto	i1l1237
  5828                           
  5829                           ;user_interrupts.c: 64: adcbuffer[0] = adcbuffer[0] + 1;
  5830  001AB2  2834               	incf	_adcbuffer,w,c
  5831  001AB4  6E34               	movwf	_adcbuffer,c
  5832  001AB6                     i1l1237:
  5833                           
  5834                           ;user_interrupts.c: 71: adcbuffer[adcbuffer[0]] = ADRESH;
  5835  001AB6  5034               	movf	_adcbuffer,w,c
  5836  001AB8  0D01               	mullw	1
  5837  001ABA  0E34               	movlw	low _adcbuffer
  5838  001ABC  24F3               	addwf	prodl,w,c
  5839  001ABE  6ED9               	movwf	fsr2l,c
  5840  001AC0  0E00               	movlw	high _adcbuffer
  5841  001AC2  20F4               	addwfc	prodh,w,c
  5842  001AC4  6EDA               	movwf	fsr2h,c
  5843  001AC6  CFC4 FFDF          	movff	4036,indf2	;volatile
  5844  001ACA  0012               	return	
  5845  001ACC                     __end_of_adc_int_handler:
  5846                           	opt stack 0
  5847                           pclatu	equ	0xFFB
  5848                           pclath	equ	0xFFA
  5849                           tblptru	equ	0xFF8
  5850                           tblptrh	equ	0xFF7
  5851                           tblptrl	equ	0xFF6
  5852                           tablat	equ	0xFF5
  5853                           prodh	equ	0xFF4
  5854                           prodl	equ	0xFF3
  5855                           intcon	equ	0xFF2
  5856                           postinc0	equ	0xFEE
  5857                           fsr0h	equ	0xFEA
  5858                           fsr0l	equ	0xFE9
  5859                           wreg	equ	0xFE8
  5860                           indf1	equ	0xFE7
  5861                           postdec1	equ	0xFE5
  5862                           fsr1h	equ	0xFE2
  5863                           fsr1l	equ	0xFE1
  5864                           bsr	equ	0xFE0
  5865                           indf2	equ	0xFDF
  5866                           postinc2	equ	0xFDE
  5867                           postdec2	equ	0xFDD
  5868                           fsr2h	equ	0xFDA
  5869                           fsr2l	equ	0xFD9
  5870                           status	equ	0xFD8
  5871                           
  5872 ;; *************** function _InterruptHandlerHigh *****************
  5873 ;; Defined at:
  5874 ;;		line 84 in file "../src/interrupts.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;		None
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;		None
  5879 ;; Return value:  Size  Location     Type
  5880 ;;		None               void
  5881 ;; Registers used:
  5882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5888 ;;      Params:         0       0       0       0       0
  5889 ;;      Locals:         0       0       0       0       0
  5890 ;;      Temps:          0      14       0       0       0
  5891 ;;      Totals:         0      14       0       0       0
  5892 ;;Total ram usage:       14 bytes
  5893 ;; Hardware stack levels used:    1
  5894 ;; Hardware stack levels required when called:    5
  5895 ;; This function calls:
  5896 ;;		_SleepIfOkay
  5897 ;;		_i2c_int_handler
  5898 ;;		_timer0_int_handler
  5899 ;; This function is called by:
  5900 ;;		Interrupt level 2
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           	psect	intcode
  5905  000008                     __pintcode:
  5906                           	opt stack 0
  5907  000008                     _InterruptHandlerHigh:
  5908                           	opt stack 16
  5909                           
  5910                           ;incstack = 0
  5911  000008  CFFA F0A0          	movff	pclath,??_InterruptHandlerHigh
  5912  00000C  CFFB F0A1          	movff	pclatu,??_InterruptHandlerHigh+1
  5913  000010  EFB0  F009         	goto	int_func
  5914                           pclatu	equ	0xFFB
  5915                           pclath	equ	0xFFA
  5916                           tblptru	equ	0xFF8
  5917                           tblptrh	equ	0xFF7
  5918                           tblptrl	equ	0xFF6
  5919                           tablat	equ	0xFF5
  5920                           prodh	equ	0xFF4
  5921                           prodl	equ	0xFF3
  5922                           intcon	equ	0xFF2
  5923                           postinc0	equ	0xFEE
  5924                           fsr0h	equ	0xFEA
  5925                           fsr0l	equ	0xFE9
  5926                           wreg	equ	0xFE8
  5927                           indf1	equ	0xFE7
  5928                           postdec1	equ	0xFE5
  5929                           fsr1h	equ	0xFE2
  5930                           fsr1l	equ	0xFE1
  5931                           bsr	equ	0xFE0
  5932                           indf2	equ	0xFDF
  5933                           postinc2	equ	0xFDE
  5934                           postdec2	equ	0xFDD
  5935                           fsr2h	equ	0xFDA
  5936                           fsr2l	equ	0xFD9
  5937                           status	equ	0xFD8
  5938                           
  5939                           	psect	intcode_body
  5940  001360                     __pintcode_body:
  5941                           	opt stack 16
  5942  001360                     int_func:
  5943                           	opt stack 16
  5944  001360  CFE9 F0A2          	movff	fsr0l,??_InterruptHandlerHigh+2
  5945  001364  CFEA F0A3          	movff	fsr0h,??_InterruptHandlerHigh+3
  5946  001368  CFE1 F0A4          	movff	fsr1l,??_InterruptHandlerHigh+4
  5947  00136C  CFE2 F0A5          	movff	fsr1h,??_InterruptHandlerHigh+5
  5948  001370  CFD9 F0A6          	movff	fsr2l,??_InterruptHandlerHigh+6
  5949  001374  CFDA F0A7          	movff	fsr2h,??_InterruptHandlerHigh+7
  5950  001378  CFF3 F0A8          	movff	prodl,??_InterruptHandlerHigh+8
  5951  00137C  CFF4 F0A9          	movff	prodh,??_InterruptHandlerHigh+9
  5952  001380  CFF6 F0AA          	movff	tblptrl,??_InterruptHandlerHigh+10
  5953  001384  CFF7 F0AB          	movff	tblptrh,??_InterruptHandlerHigh+11
  5954  001388  CFF8 F0AC          	movff	tblptru,??_InterruptHandlerHigh+12
  5955  00138C  CFF5 F0AD          	movff	tablat,??_InterruptHandlerHigh+13
  5956                           
  5957                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  5958  001390  A69E               	btfss	3998,3,c	;volatile
  5959  001392  D003               	goto	i2l3039
  5960                           
  5961                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  5962  001394  969E               	bcf	3998,3,c	;volatile
  5963                           
  5964                           ;interrupts.c: 94: i2c_int_handler();
  5965  001396  ECE6  F00D         	call	_i2c_int_handler	;wreg free
  5966  00139A                     i2l3039:
  5967                           
  5968                           ;interrupts.c: 96: }
  5969                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  5970  00139A  A4F2               	btfss	intcon,2,c	;volatile
  5971  00139C  D003               	goto	i2l3045
  5972                           
  5973                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  5974  00139E  94F2               	bcf	intcon,2,c	;volatile
  5975                           
  5976                           ;interrupts.c: 103: timer0_int_handler();
  5977  0013A0  ECC3  F00D         	call	_timer0_int_handler	;wreg free
  5978  0013A4                     i2l3045:
  5979                           
  5980                           ;interrupts.c: 104: }
  5981                           ;interrupts.c: 113: SleepIfOkay();
  5982  0013A4  EC96  F00B         	call	_SleepIfOkay	;wreg free
  5983  0013A8  C0AD  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5984  0013AC  C0AC  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5985  0013B0  C0AB  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5986  0013B4  C0AA  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5987  0013B8  C0A9  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5988  0013BC  C0A8  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5989  0013C0  C0A7  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5990  0013C4  C0A6  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5991  0013C8  C0A5  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5992  0013CC  C0A4  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5993  0013D0  C0A3  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5994  0013D4  C0A2  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5995  0013D8  C0A1  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5996  0013DC  C0A0  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5997  0013E0  0011               	retfie		f
  5998  0013E2                     __end_of_InterruptHandlerHigh:
  5999                           	opt stack 0
  6000                           pclatu	equ	0xFFB
  6001                           pclath	equ	0xFFA
  6002                           tblptru	equ	0xFF8
  6003                           tblptrh	equ	0xFF7
  6004                           tblptrl	equ	0xFF6
  6005                           tablat	equ	0xFF5
  6006                           prodh	equ	0xFF4
  6007                           prodl	equ	0xFF3
  6008                           intcon	equ	0xFF2
  6009                           postinc0	equ	0xFEE
  6010                           fsr0h	equ	0xFEA
  6011                           fsr0l	equ	0xFE9
  6012                           wreg	equ	0xFE8
  6013                           indf1	equ	0xFE7
  6014                           postdec1	equ	0xFE5
  6015                           fsr1h	equ	0xFE2
  6016                           fsr1l	equ	0xFE1
  6017                           bsr	equ	0xFE0
  6018                           indf2	equ	0xFDF
  6019                           postinc2	equ	0xFDE
  6020                           postdec2	equ	0xFDD
  6021                           fsr2h	equ	0xFDA
  6022                           fsr2l	equ	0xFD9
  6023                           status	equ	0xFD8
  6024                           
  6025 ;; *************** function _timer0_int_handler *****************
  6026 ;; Defined at:
  6027 ;;		line 16 in file "../src/user_interrupts.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;		None
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;		None
  6032 ;; Return value:  Size  Location     Type
  6033 ;;		None               void
  6034 ;; Registers used:
  6035 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6041 ;;      Params:         0       0       0       0       0
  6042 ;;      Locals:         0       0       0       0       0
  6043 ;;      Temps:          0       0       0       0       0
  6044 ;;      Totals:         0       0       0       0       0
  6045 ;;Total ram usage:        0 bytes
  6046 ;; Hardware stack levels used:    1
  6047 ;; Hardware stack levels required when called:    1
  6048 ;; This function calls:
  6049 ;;		_ConvertADC
  6050 ;;		_WriteTimer0
  6051 ;; This function is called by:
  6052 ;;		_InterruptHandlerHigh
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           	psect	text40
  6057  001B86                     __ptext40:
  6058                           	opt stack 0
  6059  001B86                     _timer0_int_handler:
  6060                           	opt stack 19
  6061                           
  6062                           ;user_interrupts.c: 17: WriteTimer0(0);
  6063                           
  6064                           ;incstack = 0
  6065  001B86  0E00               	movlw	0
  6066  001B88  6E2E               	movwf	WriteTimer0@timer0+1,c
  6067  001B8A  0E00               	movlw	0
  6068  001B8C  6E2D               	movwf	WriteTimer0@timer0,c
  6069  001B8E  ECCC  F00D         	call	_WriteTimer0	;wreg free
  6070                           
  6071                           ;user_interrupts.c: 34: ConvertADC();
  6072  001B92  ECEE  F00D         	call	_ConvertADC	;wreg free
  6073  001B96  0012               	return	
  6074  001B98                     __end_of_timer0_int_handler:
  6075                           	opt stack 0
  6076                           pclatu	equ	0xFFB
  6077                           pclath	equ	0xFFA
  6078                           tblptru	equ	0xFF8
  6079                           tblptrh	equ	0xFF7
  6080                           tblptrl	equ	0xFF6
  6081                           tablat	equ	0xFF5
  6082                           prodh	equ	0xFF4
  6083                           prodl	equ	0xFF3
  6084                           intcon	equ	0xFF2
  6085                           postinc0	equ	0xFEE
  6086                           fsr0h	equ	0xFEA
  6087                           fsr0l	equ	0xFE9
  6088                           wreg	equ	0xFE8
  6089                           indf1	equ	0xFE7
  6090                           postdec1	equ	0xFE5
  6091                           fsr1h	equ	0xFE2
  6092                           fsr1l	equ	0xFE1
  6093                           bsr	equ	0xFE0
  6094                           indf2	equ	0xFDF
  6095                           postinc2	equ	0xFDE
  6096                           postdec2	equ	0xFDD
  6097                           fsr2h	equ	0xFDA
  6098                           fsr2l	equ	0xFD9
  6099                           status	equ	0xFD8
  6100                           
  6101 ;; *************** function _WriteTimer0 *****************
  6102 ;; Defined at:
  6103 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;  timer0          2   44[COMRAM] unsigned int 
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;  timer           2   46[COMRAM] struct Timers
  6108 ;; Return value:  Size  Location     Type
  6109 ;;		None               void
  6110 ;; Registers used:
  6111 ;;		None
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6117 ;;      Params:         2       0       0       0       0
  6118 ;;      Locals:         2       0       0       0       0
  6119 ;;      Temps:          0       0       0       0       0
  6120 ;;      Totals:         4       0       0       0       0
  6121 ;;Total ram usage:        4 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; This function calls:
  6124 ;;		Nothing
  6125 ;; This function is called by:
  6126 ;;		_timer0_int_handler
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text41
  6131  001B98                     __ptext41:
  6132                           	opt stack 0
  6133  001B98                     _WriteTimer0:
  6134                           	opt stack 19
  6135                           
  6136                           ;incstack = 0
  6137  001B98  C02D  F02F         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6138  001B9C  C02E  F030         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6139  001BA0  C030  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6140  001BA4  C02F  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6141  001BA8  0012               	return	
  6142  001BAA                     __end_of_WriteTimer0:
  6143                           	opt stack 0
  6144                           pclatu	equ	0xFFB
  6145                           pclath	equ	0xFFA
  6146                           tblptru	equ	0xFF8
  6147                           tblptrh	equ	0xFF7
  6148                           tblptrl	equ	0xFF6
  6149                           tablat	equ	0xFF5
  6150                           prodh	equ	0xFF4
  6151                           prodl	equ	0xFF3
  6152                           intcon	equ	0xFF2
  6153                           postinc0	equ	0xFEE
  6154                           fsr0h	equ	0xFEA
  6155                           fsr0l	equ	0xFE9
  6156                           wreg	equ	0xFE8
  6157                           indf1	equ	0xFE7
  6158                           postdec1	equ	0xFE5
  6159                           fsr1h	equ	0xFE2
  6160                           fsr1l	equ	0xFE1
  6161                           bsr	equ	0xFE0
  6162                           indf2	equ	0xFDF
  6163                           postinc2	equ	0xFDE
  6164                           postdec2	equ	0xFDD
  6165                           fsr2h	equ	0xFDA
  6166                           fsr2l	equ	0xFD9
  6167                           status	equ	0xFD8
  6168                           
  6169 ;; *************** function _ConvertADC *****************
  6170 ;; Defined at:
  6171 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;		None
  6174 ;; Auto vars:     Size  Location     Type
  6175 ;;		None
  6176 ;; Return value:  Size  Location     Type
  6177 ;;		None               void
  6178 ;; Registers used:
  6179 ;;		None
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6185 ;;      Params:         0       0       0       0       0
  6186 ;;      Locals:         0       0       0       0       0
  6187 ;;      Temps:          0       0       0       0       0
  6188 ;;      Totals:         0       0       0       0       0
  6189 ;;Total ram usage:        0 bytes
  6190 ;; Hardware stack levels used:    1
  6191 ;; This function calls:
  6192 ;;		Nothing
  6193 ;; This function is called by:
  6194 ;;		_timer0_int_handler
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           	psect	text42
  6199  001BDC                     __ptext42:
  6200                           	opt stack 0
  6201  001BDC                     _ConvertADC:
  6202                           	opt stack 19
  6203                           
  6204                           ;incstack = 0
  6205  001BDC  82C2               	bsf	4034,1,c	;volatile
  6206  001BDE  0012               	return	
  6207  001BE0                     __end_of_ConvertADC:
  6208                           	opt stack 0
  6209                           pclatu	equ	0xFFB
  6210                           pclath	equ	0xFFA
  6211                           tblptru	equ	0xFF8
  6212                           tblptrh	equ	0xFF7
  6213                           tblptrl	equ	0xFF6
  6214                           tablat	equ	0xFF5
  6215                           prodh	equ	0xFF4
  6216                           prodl	equ	0xFF3
  6217                           intcon	equ	0xFF2
  6218                           postinc0	equ	0xFEE
  6219                           fsr0h	equ	0xFEA
  6220                           fsr0l	equ	0xFE9
  6221                           wreg	equ	0xFE8
  6222                           indf1	equ	0xFE7
  6223                           postdec1	equ	0xFE5
  6224                           fsr1h	equ	0xFE2
  6225                           fsr1l	equ	0xFE1
  6226                           bsr	equ	0xFE0
  6227                           indf2	equ	0xFDF
  6228                           postinc2	equ	0xFDE
  6229                           postdec2	equ	0xFDD
  6230                           fsr2h	equ	0xFDA
  6231                           fsr2l	equ	0xFD9
  6232                           status	equ	0xFD8
  6233                           
  6234 ;; *************** function _i2c_int_handler *****************
  6235 ;; Defined at:
  6236 ;;		line 139 in file "../src/my_i2c.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;		None
  6239 ;; Auto vars:     Size  Location     Type
  6240 ;;		None
  6241 ;; Return value:  Size  Location     Type
  6242 ;;		None               void
  6243 ;; Registers used:
  6244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6245 ;; Tracked objects:
  6246 ;;		On entry : 0/0
  6247 ;;		On exit  : 0/0
  6248 ;;		Unchanged: 0/0
  6249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6250 ;;      Params:         0       0       0       0       0
  6251 ;;      Locals:         0       0       0       0       0
  6252 ;;      Temps:          0       0       0       0       0
  6253 ;;      Totals:         0       0       0       0       0
  6254 ;;Total ram usage:        0 bytes
  6255 ;; Hardware stack levels used:    1
  6256 ;; Hardware stack levels required when called:    4
  6257 ;; This function calls:
  6258 ;;		_i2c_slave_int_handler
  6259 ;; This function is called by:
  6260 ;;		_InterruptHandlerHigh
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264                           	psect	text43
  6265  001BCC                     __ptext43:
  6266                           	opt stack 0
  6267  001BCC                     _i2c_int_handler:
  6268                           	opt stack 16
  6269                           
  6270                           ;my_i2c.c: 143: i2c_slave_int_handler();
  6271                           
  6272                           ;incstack = 0
  6273  001BCC  EC62  F000         	call	_i2c_slave_int_handler	;wreg free
  6274  001BD0  0012               	return	
  6275  001BD2                     __end_of_i2c_int_handler:
  6276                           	opt stack 0
  6277                           pclatu	equ	0xFFB
  6278                           pclath	equ	0xFFA
  6279                           tblptru	equ	0xFF8
  6280                           tblptrh	equ	0xFF7
  6281                           tblptrl	equ	0xFF6
  6282                           tablat	equ	0xFF5
  6283                           prodh	equ	0xFF4
  6284                           prodl	equ	0xFF3
  6285                           intcon	equ	0xFF2
  6286                           postinc0	equ	0xFEE
  6287                           fsr0h	equ	0xFEA
  6288                           fsr0l	equ	0xFE9
  6289                           wreg	equ	0xFE8
  6290                           indf1	equ	0xFE7
  6291                           postdec1	equ	0xFE5
  6292                           fsr1h	equ	0xFE2
  6293                           fsr1l	equ	0xFE1
  6294                           bsr	equ	0xFE0
  6295                           indf2	equ	0xFDF
  6296                           postinc2	equ	0xFDE
  6297                           postdec2	equ	0xFDD
  6298                           fsr2h	equ	0xFDA
  6299                           fsr2l	equ	0xFD9
  6300                           status	equ	0xFD8
  6301                           
  6302 ;; *************** function _i2c_slave_int_handler *****************
  6303 ;; Defined at:
  6304 ;;		line 243 in file "../src/my_i2c.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;		None
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;  length          2   21[BANK0 ] int 
  6309 ;;  error_buf       3   23[BANK0 ] unsigned char [3]
  6310 ;;  data_read       1   31[BANK0 ] unsigned char 
  6311 ;;  msg_ready       1   30[BANK0 ] unsigned char 
  6312 ;;  msg_to_send     1   29[BANK0 ] unsigned char 
  6313 ;;  i2c_data        1   28[BANK0 ] unsigned char 
  6314 ;;  overrun_erro    1   27[BANK0 ] unsigned char 
  6315 ;;  data_written    1   26[BANK0 ] unsigned char 
  6316 ;; Return value:  Size  Location     Type
  6317 ;;		None               void
  6318 ;; Registers used:
  6319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6325 ;;      Params:         0       0       0       0       0
  6326 ;;      Locals:         0      11       0       0       0
  6327 ;;      Temps:          0       2       0       0       0
  6328 ;;      Totals:         0      13       0       0       0
  6329 ;;Total ram usage:       13 bytes
  6330 ;; Hardware stack levels used:    1
  6331 ;; Hardware stack levels required when called:    3
  6332 ;; This function calls:
  6333 ;;		_ToMainHigh_sendmsg
  6334 ;;		_handle_start
  6335 ;;		_start_i2c_slave_reply
  6336 ;; This function is called by:
  6337 ;;		_i2c_int_handler
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           	psect	text44
  6342  0000C4                     __ptext44:
  6343                           	opt stack 0
  6344  0000C4                     _i2c_slave_int_handler:
  6345                           	opt stack 16
  6346                           
  6347                           ;my_i2c.c: 244: unsigned char i2c_data;
  6348                           ;my_i2c.c: 245: unsigned char data_read = 0;
  6349                           
  6350                           ;incstack = 0
  6351  0000C4  0100               	movlb	0	; () banked
  6352  0000C6  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  6353  0000C8  0E00               	movlw	0
  6354  0000CA  0100               	movlb	0	; () banked
  6355  0000CC  0100               	movlb	0	; () banked
  6356  0000CE  6F9F               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6357  0000D0  0100               	movlb	0	; () banked
  6358  0000D2  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6359                           
  6360                           ;my_i2c.c: 246: unsigned char data_written = 0;
  6361  0000D4  0100               	movlb	0	; () banked
  6362  0000D6  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  6363  0000D8  0E00               	movlw	0
  6364  0000DA  0100               	movlb	0	; () banked
  6365  0000DC  0100               	movlb	0	; () banked
  6366  0000DE  6F9A               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  6367  0000E0  0100               	movlb	0	; () banked
  6368  0000E2  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6369                           
  6370                           ;my_i2c.c: 247: unsigned char msg_ready = 0;
  6371  0000E4  0100               	movlb	0	; () banked
  6372  0000E6  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  6373  0000E8  0E00               	movlw	0
  6374  0000EA  0100               	movlb	0	; () banked
  6375  0000EC  0100               	movlb	0	; () banked
  6376  0000EE  6F9E               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6377  0000F0  0100               	movlb	0	; () banked
  6378  0000F2  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6379                           
  6380                           ;my_i2c.c: 248: unsigned char msg_to_send = 0;
  6381  0000F4  0100               	movlb	0	; () banked
  6382  0000F6  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  6383  0000F8  0E00               	movlw	0
  6384  0000FA  0100               	movlb	0	; () banked
  6385  0000FC  0100               	movlb	0	; () banked
  6386  0000FE  6F9D               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6387  000100  0100               	movlb	0	; () banked
  6388  000102  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6389                           
  6390                           ;my_i2c.c: 249: unsigned char overrun_error = 0;
  6391  000104  0100               	movlb	0	; () banked
  6392  000106  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  6393  000108  0E00               	movlw	0
  6394  00010A  0100               	movlb	0	; () banked
  6395  00010C  0100               	movlb	0	; () banked
  6396  00010E  6F9B               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  6397  000110  0100               	movlb	0	; () banked
  6398  000112  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6399                           
  6400                           ; BSR set to: 0
  6401                           ;my_i2c.c: 250: unsigned char error_buf[3];
  6402                           ;my_i2c.c: 253: if (SSPCON1bits.SSPOV == 1) {
  6403  000114  ACC6               	btfss	4038,6,c	;volatile
  6404  000116  D029               	goto	i2l3275
  6405                           
  6406                           ; BSR set to: 0
  6407                           ;my_i2c.c: 254: SSPCON1bits.SSPOV = 0;
  6408  000118  9CC6               	bcf	4038,6,c	;volatile
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;my_i2c.c: 258: ic_ptr->status = 0x5;
  6412  00011A  0100               	movlb	0	; () banked
  6413  00011C  EE20 F01F          	lfsr	2,31
  6414  000120  0100               	movlb	0	; () banked
  6415  000122  51D0               	movf	_ic_ptr& (0+255),w,b
  6416  000124  26D9               	addwf	fsr2l,f,c
  6417  000126  0100               	movlb	0	; () banked
  6418  000128  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6419  00012A  22DA               	addwfc	fsr2h,f,c
  6420  00012C  0E05               	movlw	5
  6421  00012E  6EDF               	movwf	indf2,c
  6422                           
  6423                           ; BSR set to: 0
  6424                           ;my_i2c.c: 259: overrun_error = 1;
  6425  000130  0100               	movlb	0	; () banked
  6426  000132  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  6427  000134  0E01               	movlw	1
  6428  000136  0100               	movlb	0	; () banked
  6429  000138  0100               	movlb	0	; () banked
  6430  00013A  6F9B               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  6431  00013C  0100               	movlb	0	; () banked
  6432  00013E  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6433                           
  6434                           ; BSR set to: 0
  6435                           ;my_i2c.c: 260: ic_ptr->error_count++;
  6436  000140  0100               	movlb	0	; () banked
  6437  000142  EE20 F021          	lfsr	2,33
  6438  000146  0100               	movlb	0	; () banked
  6439  000148  51D0               	movf	_ic_ptr& (0+255),w,b
  6440  00014A  26D9               	addwf	fsr2l,f,c
  6441  00014C  0100               	movlb	0	; () banked
  6442  00014E  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6443  000150  22DA               	addwfc	fsr2h,f,c
  6444  000152  2ADF               	incf	indf2,f,c
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;my_i2c.c: 261: ic_ptr->error_code = 0x4;
  6448  000154  0100               	movlb	0	; () banked
  6449  000156  EE20 F020          	lfsr	2,32
  6450  00015A  0100               	movlb	0	; () banked
  6451  00015C  51D0               	movf	_ic_ptr& (0+255),w,b
  6452  00015E  26D9               	addwf	fsr2l,f,c
  6453  000160  0100               	movlb	0	; () banked
  6454  000162  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6455  000164  22DA               	addwfc	fsr2h,f,c
  6456  000166  0E04               	movlw	4
  6457  000168  6EDF               	movwf	indf2,c
  6458  00016A                     i2l3275:
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;my_i2c.c: 262: }
  6462                           ;my_i2c.c: 264: if (SSPSTATbits.BF == 1) {
  6463  00016A  A0C7               	btfss	4039,0,c	;volatile
  6464  00016C  D00A               	goto	i2l3281
  6465                           
  6466                           ; BSR set to: 0
  6467                           ;my_i2c.c: 265: i2c_data = SSPBUF;
  6468  00016E  CFC9 F09C          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  6469                           
  6470                           ; BSR set to: 0
  6471                           ;my_i2c.c: 266: data_read = 1;
  6472  000172  0100               	movlb	0	; () banked
  6473  000174  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  6474  000176  0E01               	movlw	1
  6475  000178  0100               	movlb	0	; () banked
  6476  00017A  0100               	movlb	0	; () banked
  6477  00017C  6F9F               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6478  00017E  0100               	movlb	0	; () banked
  6479  000180  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6480  000182                     i2l3281:
  6481                           
  6482                           ; BSR set to: 0
  6483                           ;my_i2c.c: 267: }
  6484                           ;my_i2c.c: 269: if (!overrun_error) {
  6485  000182  0100               	movlb	0	; () banked
  6486  000184  0100               	movlb	0	; () banked
  6487  000186  679B               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  6488  000188  D1CE               	goto	i2l312
  6489  00018A  D1B7               	goto	i2l3369
  6490  00018C                     i2l314:
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;my_i2c.c: 272: {
  6494                           ;my_i2c.c: 274: if (SSPSTATbits.S == 1) {
  6495  00018C  A6C7               	btfss	4039,3,c	;volatile
  6496  00018E  D1CB               	goto	i2l312
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;my_i2c.c: 275: handle_start(data_read);
  6500  000190  0100               	movlb	0	; () banked
  6501  000192  0100               	movlb	0	; () banked
  6502  000194  519F               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6503  000196  ECD9  F007         	call	_handle_start
  6504                           
  6505                           ;my_i2c.c: 277: if (ic_ptr->status == 0x8) {
  6506  00019A  0100               	movlb	0	; () banked
  6507  00019C  EE20 F01F          	lfsr	2,31
  6508  0001A0  0100               	movlb	0	; () banked
  6509  0001A2  51D0               	movf	_ic_ptr& (0+255),w,b
  6510  0001A4  26D9               	addwf	fsr2l,f,c
  6511  0001A6  0100               	movlb	0	; () banked
  6512  0001A8  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6513  0001AA  22DA               	addwfc	fsr2h,f,c
  6514  0001AC  0E08               	movlw	8
  6515  0001AE  62DF               	cpfseq	indf2,c
  6516  0001B0  D1BA               	goto	i2l312
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;my_i2c.c: 278: data_read = 0;
  6520  0001B2  0100               	movlb	0	; () banked
  6521  0001B4  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  6522  0001B6  0E00               	movlw	0
  6523  0001B8  0100               	movlb	0	; () banked
  6524  0001BA  0100               	movlb	0	; () banked
  6525  0001BC  6F9F               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6526  0001BE  0100               	movlb	0	; () banked
  6527  0001C0  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6528                           
  6529                           ;my_i2c.c: 279: msg_to_send = 1;
  6530  0001C2  0100               	movlb	0	; () banked
  6531  0001C4  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  6532  0001C6  0E01               	movlw	1
  6533  0001C8  0100               	movlb	0	; () banked
  6534  0001CA  0100               	movlb	0	; () banked
  6535  0001CC  6F9D               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6536  0001CE  D187               	goto	L6
  6537  0001D0                     i2l318:
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;my_i2c.c: 285: {
  6541                           ;my_i2c.c: 287: if (SSPSTATbits.P == 1) {
  6542  0001D0  A8C7               	btfss	4039,4,c	;volatile
  6543  0001D2  D030               	goto	i2l3301
  6544                           
  6545                           ; BSR set to: 0
  6546                           ;my_i2c.c: 290: ic_ptr->event_count++;
  6547  0001D4  0100               	movlb	0	; () banked
  6548  0001D6  EE20 F01E          	lfsr	2,30
  6549  0001DA  0100               	movlb	0	; () banked
  6550  0001DC  51D0               	movf	_ic_ptr& (0+255),w,b
  6551  0001DE  26D9               	addwf	fsr2l,f,c
  6552  0001E0  0100               	movlb	0	; () banked
  6553  0001E2  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6554  0001E4  22DA               	addwfc	fsr2h,f,c
  6555  0001E6  2ADF               	incf	indf2,f,c
  6556                           
  6557                           ; BSR set to: 0
  6558                           ;my_i2c.c: 291: if (data_read) {
  6559  0001E8  0100               	movlb	0	; () banked
  6560  0001EA  0100               	movlb	0	; () banked
  6561  0001EC  519F               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6562  0001EE  B4D8               	btfsc	status,2,c
  6563  0001F0  D179               	goto	L8
  6564                           
  6565                           ; BSR set to: 0
  6566                           ;my_i2c.c: 292: if (SSPSTATbits.D_A == 0) {
  6567  0001F2  BAC7               	btfsc	4039,5,c	;volatile
  6568  0001F4  D009               	goto	i2l3299
  6569                           
  6570                           ; BSR set to: 0
  6571                           ;my_i2c.c: 293: msg_ready = 1;
  6572  0001F6  0100               	movlb	0	; () banked
  6573  0001F8  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  6574  0001FA  0E01               	movlw	1
  6575  0001FC  0100               	movlb	0	; () banked
  6576  0001FE  0100               	movlb	0	; () banked
  6577  000200  6F9E               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6578  000202  0100               	movlb	0	; () banked
  6579  000204  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6580                           
  6581                           ;my_i2c.c: 294: } else {
  6582  000206  D16E               	goto	L8
  6583  000208                     i2l3299:
  6584                           
  6585                           ; BSR set to: 0
  6586                           ;my_i2c.c: 295: ic_ptr->error_count++;
  6587  000208  0100               	movlb	0	; () banked
  6588  00020A  EE20 F021          	lfsr	2,33
  6589  00020E  0100               	movlb	0	; () banked
  6590  000210  51D0               	movf	_ic_ptr& (0+255),w,b
  6591  000212  26D9               	addwf	fsr2l,f,c
  6592  000214  0100               	movlb	0	; () banked
  6593  000216  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6594  000218  22DA               	addwfc	fsr2h,f,c
  6595  00021A  2ADF               	incf	indf2,f,c
  6596                           
  6597                           ;my_i2c.c: 296: ic_ptr->error_code = 0x6;
  6598  00021C  0100               	movlb	0	; () banked
  6599  00021E  EE20 F020          	lfsr	2,32
  6600  000222  0100               	movlb	0	; () banked
  6601  000224  51D0               	movf	_ic_ptr& (0+255),w,b
  6602  000226  26D9               	addwf	fsr2l,f,c
  6603  000228  0100               	movlb	0	; () banked
  6604  00022A  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6605  00022C  22DA               	addwfc	fsr2h,f,c
  6606  00022E  0E06               	movlw	6
  6607  000230  6EDF               	movwf	indf2,c
  6608                           
  6609                           ; BSR set to: 0
  6610  000232  D158               	goto	L8
  6611  000234                     i2l3301:
  6612                           
  6613                           ; BSR set to: 0
  6614  000234  0100               	movlb	0	; () banked
  6615  000236  0100               	movlb	0	; () banked
  6616  000238  519F               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6617  00023A  B4D8               	btfsc	status,2,c
  6618  00023C  D174               	goto	i2l312
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;my_i2c.c: 301: ic_ptr->event_count++;
  6622  00023E  0100               	movlb	0	; () banked
  6623  000240  EE20 F01E          	lfsr	2,30
  6624  000244  0100               	movlb	0	; () banked
  6625  000246  51D0               	movf	_ic_ptr& (0+255),w,b
  6626  000248  26D9               	addwf	fsr2l,f,c
  6627  00024A  0100               	movlb	0	; () banked
  6628  00024C  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6629  00024E  22DA               	addwfc	fsr2h,f,c
  6630  000250  2ADF               	incf	indf2,f,c
  6631                           
  6632                           ; BSR set to: 0
  6633                           ;my_i2c.c: 302: if (SSPSTATbits.D_A == 0) {
  6634  000252  BAC7               	btfsc	4039,5,c	;volatile
  6635  000254  D019               	goto	i2l3317
  6636                           
  6637                           ; BSR set to: 0
  6638                           ;my_i2c.c: 303: if (SSPSTATbits.R_W == 0) {
  6639  000256  B4C7               	btfsc	4039,2,c	;volatile
  6640  000258  D00B               	goto	i2l3311
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;my_i2c.c: 304: ic_ptr->status = 0x7;
  6644  00025A  0100               	movlb	0	; () banked
  6645  00025C  EE20 F01F          	lfsr	2,31
  6646  000260  0100               	movlb	0	; () banked
  6647  000262  51D0               	movf	_ic_ptr& (0+255),w,b
  6648  000264  26D9               	addwf	fsr2l,f,c
  6649  000266  0100               	movlb	0	; () banked
  6650  000268  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6651  00026A  22DA               	addwfc	fsr2h,f,c
  6652  00026C  0E07               	movlw	7
  6653  00026E  D076               	goto	L5
  6654  000270                     i2l3311:
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;my_i2c.c: 306: ic_ptr->status = 0x8;
  6658  000270  0100               	movlb	0	; () banked
  6659  000272  EE20 F01F          	lfsr	2,31
  6660  000276  0100               	movlb	0	; () banked
  6661  000278  51D0               	movf	_ic_ptr& (0+255),w,b
  6662  00027A  26D9               	addwf	fsr2l,f,c
  6663  00027C  0100               	movlb	0	; () banked
  6664  00027E  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6665  000280  22DA               	addwfc	fsr2h,f,c
  6666  000282  0E08               	movlw	8
  6667  000284  6EDF               	movwf	indf2,c
  6668  000286  D11D               	goto	L9
  6669  000288                     i2l3317:
  6670                           
  6671                           ; BSR set to: 0
  6672                           ;my_i2c.c: 312: ic_ptr->error_count++;
  6673  000288  0100               	movlb	0	; () banked
  6674  00028A  EE20 F021          	lfsr	2,33
  6675  00028E  0100               	movlb	0	; () banked
  6676  000290  51D0               	movf	_ic_ptr& (0+255),w,b
  6677  000292  26D9               	addwf	fsr2l,f,c
  6678  000294  0100               	movlb	0	; () banked
  6679  000296  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6680  000298  22DA               	addwfc	fsr2h,f,c
  6681  00029A  2ADF               	incf	indf2,f,c
  6682                           
  6683                           ;my_i2c.c: 313: ic_ptr->status = 0x5;
  6684  00029C  0100               	movlb	0	; () banked
  6685  00029E  EE20 F01F          	lfsr	2,31
  6686  0002A2  0100               	movlb	0	; () banked
  6687  0002A4  51D0               	movf	_ic_ptr& (0+255),w,b
  6688  0002A6  26D9               	addwf	fsr2l,f,c
  6689  0002A8  0100               	movlb	0	; () banked
  6690  0002AA  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6691  0002AC  22DA               	addwfc	fsr2h,f,c
  6692  0002AE  0E05               	movlw	5
  6693  0002B0  6EDF               	movwf	indf2,c
  6694                           
  6695                           ;my_i2c.c: 314: ic_ptr->error_code = 0x6;
  6696  0002B2  0100               	movlb	0	; () banked
  6697  0002B4  EE20 F020          	lfsr	2,32
  6698  0002B8  0100               	movlb	0	; () banked
  6699  0002BA  51D0               	movf	_ic_ptr& (0+255),w,b
  6700  0002BC  26D9               	addwf	fsr2l,f,c
  6701  0002BE  0100               	movlb	0	; () banked
  6702  0002C0  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6703  0002C2  22DA               	addwfc	fsr2h,f,c
  6704  0002C4  0E06               	movlw	6
  6705  0002C6  D04A               	goto	L5
  6706  0002C8                     i2l3319:
  6707                           
  6708                           ; BSR set to: 0
  6709                           ;my_i2c.c: 320: {
  6710                           ;my_i2c.c: 321: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6711  0002C8  0100               	movlb	0	; () banked
  6712  0002CA  EE20 F03F          	lfsr	2,63
  6713  0002CE  0100               	movlb	0	; () banked
  6714  0002D0  51D0               	movf	_ic_ptr& (0+255),w,b
  6715  0002D2  26D9               	addwf	fsr2l,f,c
  6716  0002D4  0100               	movlb	0	; () banked
  6717  0002D6  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6718  0002D8  22DA               	addwfc	fsr2h,f,c
  6719  0002DA  50DF               	movf	indf2,w,c
  6720  0002DC  0100               	movlb	0	; () banked
  6721  0002DE  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  6722  0002E0  0100               	movlb	0	; () banked
  6723  0002E2  EE20 F03E          	lfsr	2,62
  6724  0002E6  0100               	movlb	0	; () banked
  6725  0002E8  51D0               	movf	_ic_ptr& (0+255),w,b
  6726  0002EA  26D9               	addwf	fsr2l,f,c
  6727  0002EC  0100               	movlb	0	; () banked
  6728  0002EE  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6729  0002F0  22DA               	addwfc	fsr2h,f,c
  6730  0002F2  50DF               	movf	indf2,w,c
  6731  0002F4  0100               	movlb	0	; () banked
  6732  0002F6  5D93               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  6733  0002F8  B0D8               	btfsc	status,0,c
  6734  0002FA  D0F4               	goto	L8
  6735                           
  6736                           ; BSR set to: 0
  6737                           ;my_i2c.c: 322: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6738  0002FC  0100               	movlb	0	; () banked
  6739  0002FE  EE20 F03F          	lfsr	2,63
  6740  000302  0100               	movlb	0	; () banked
  6741  000304  51D0               	movf	_ic_ptr& (0+255),w,b
  6742  000306  26D9               	addwf	fsr2l,f,c
  6743  000308  0100               	movlb	0	; () banked
  6744  00030A  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6745  00030C  22DA               	addwfc	fsr2h,f,c
  6746  00030E  50DF               	movf	indf2,w,c
  6747  000310  0100               	movlb	0	; () banked
  6748  000312  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  6749  000314  0100               	movlb	0	; () banked
  6750  000316  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6751  000318  0D01               	mullw	1
  6752  00031A  0E22               	movlw	34
  6753  00031C  26F3               	addwf	prodl,f,c
  6754  00031E  0E00               	movlw	0
  6755  000320  22F4               	addwfc	prodh,f,c
  6756  000322  50F3               	movf	prodl,w,c
  6757  000324  0100               	movlb	0	; () banked
  6758  000326  0100               	movlb	0	; () banked
  6759  000328  25D0               	addwf	_ic_ptr& (0+255),w,b
  6760  00032A  6ED9               	movwf	fsr2l,c
  6761  00032C  50F4               	movf	prodh,w,c
  6762  00032E  0100               	movlb	0	; () banked
  6763  000330  0100               	movlb	0	; () banked
  6764  000332  21D1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6765  000334  6EDA               	movwf	fsr2h,c
  6766  000336  50DF               	movf	indf2,w,c
  6767  000338  6EC9               	movwf	4041,c	;volatile
  6768                           
  6769                           ; BSR set to: 0
  6770                           ;my_i2c.c: 323: ic_ptr->outbufind++;
  6771  00033A  0100               	movlb	0	; () banked
  6772  00033C  EE20 F03F          	lfsr	2,63
  6773  000340  0100               	movlb	0	; () banked
  6774  000342  51D0               	movf	_ic_ptr& (0+255),w,b
  6775  000344  26D9               	addwf	fsr2l,f,c
  6776  000346  0100               	movlb	0	; () banked
  6777  000348  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6778  00034A  22DA               	addwfc	fsr2h,f,c
  6779  00034C  2ADF               	incf	indf2,f,c
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;my_i2c.c: 324: data_written = 1;
  6783  00034E  0100               	movlb	0	; () banked
  6784  000350  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  6785  000352  0E01               	movlw	1
  6786  000354  0100               	movlb	0	; () banked
  6787  000356  0100               	movlb	0	; () banked
  6788  000358  6F9A               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  6789  00035A  D0C1               	goto	L6
  6790  00035C                     L5:
  6791  00035C  6EDF               	movwf	indf2,c
  6792  00035E  D0E3               	goto	i2l312
  6793  000360                     i2l332:
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;my_i2c.c: 332: {
  6797                           ;my_i2c.c: 334: if (SSPSTATbits.P == 1) {
  6798  000360  A8C7               	btfss	4039,4,c	;volatile
  6799  000362  D062               	goto	i2l3347
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;my_i2c.c: 336: ic_ptr->event_count++;
  6803  000364  0100               	movlb	0	; () banked
  6804  000366  EE20 F01E          	lfsr	2,30
  6805  00036A  0100               	movlb	0	; () banked
  6806  00036C  51D0               	movf	_ic_ptr& (0+255),w,b
  6807  00036E  26D9               	addwf	fsr2l,f,c
  6808  000370  0100               	movlb	0	; () banked
  6809  000372  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6810  000374  22DA               	addwfc	fsr2h,f,c
  6811  000376  2ADF               	incf	indf2,f,c
  6812                           
  6813                           ; BSR set to: 0
  6814                           ;my_i2c.c: 337: if (data_read) {
  6815  000378  0100               	movlb	0	; () banked
  6816  00037A  0100               	movlb	0	; () banked
  6817  00037C  519F               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6818  00037E  B4D8               	btfsc	status,2,c
  6819  000380  D04A               	goto	i2l3343
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;my_i2c.c: 338: if (SSPSTATbits.D_A == 1) {
  6823  000382  AAC7               	btfss	4039,5,c	;volatile
  6824  000384  D027               	goto	i2l3341
  6825                           
  6826                           ; BSR set to: 0
  6827                           ;my_i2c.c: 339: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6828  000386  0100               	movlb	0	; () banked
  6829  000388  EE20 F01C          	lfsr	2,28
  6830  00038C  0100               	movlb	0	; () banked
  6831  00038E  51D0               	movf	_ic_ptr& (0+255),w,b
  6832  000390  26D9               	addwf	fsr2l,f,c
  6833  000392  0100               	movlb	0	; () banked
  6834  000394  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6835  000396  22DA               	addwfc	fsr2h,f,c
  6836  000398  50DF               	movf	indf2,w,c
  6837  00039A  0100               	movlb	0	; () banked
  6838  00039C  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  6839  00039E  0100               	movlb	0	; () banked
  6840  0003A0  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6841  0003A2  0D01               	mullw	1
  6842  0003A4  50F3               	movf	prodl,w,c
  6843  0003A6  0100               	movlb	0	; () banked
  6844  0003A8  0100               	movlb	0	; () banked
  6845  0003AA  25D0               	addwf	_ic_ptr& (0+255),w,b
  6846  0003AC  6ED9               	movwf	fsr2l,c
  6847  0003AE  50F4               	movf	prodh,w,c
  6848  0003B0  0100               	movlb	0	; () banked
  6849  0003B2  0100               	movlb	0	; () banked
  6850  0003B4  21D1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6851  0003B6  6EDA               	movwf	fsr2h,c
  6852  0003B8  0100               	movlb	0	; () banked
  6853  0003BA  C09C  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  6854                           
  6855                           ; BSR set to: 0
  6856                           ;my_i2c.c: 340: ic_ptr->buflen++;
  6857  0003BE  0100               	movlb	0	; () banked
  6858  0003C0  EE20 F01C          	lfsr	2,28
  6859  0003C4  0100               	movlb	0	; () banked
  6860  0003C6  51D0               	movf	_ic_ptr& (0+255),w,b
  6861  0003C8  26D9               	addwf	fsr2l,f,c
  6862  0003CA  0100               	movlb	0	; () banked
  6863  0003CC  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6864  0003CE  22DA               	addwfc	fsr2h,f,c
  6865  0003D0  2ADF               	incf	indf2,f,c
  6866  0003D2  D021               	goto	i2l3343
  6867  0003D4                     i2l3341:
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;my_i2c.c: 343: ic_ptr->error_count++;
  6871  0003D4  0100               	movlb	0	; () banked
  6872  0003D6  EE20 F021          	lfsr	2,33
  6873  0003DA  0100               	movlb	0	; () banked
  6874  0003DC  51D0               	movf	_ic_ptr& (0+255),w,b
  6875  0003DE  26D9               	addwf	fsr2l,f,c
  6876  0003E0  0100               	movlb	0	; () banked
  6877  0003E2  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6878  0003E4  22DA               	addwfc	fsr2h,f,c
  6879  0003E6  2ADF               	incf	indf2,f,c
  6880                           
  6881                           ;my_i2c.c: 344: ic_ptr->error_code = 0x6;
  6882  0003E8  0100               	movlb	0	; () banked
  6883  0003EA  EE20 F020          	lfsr	2,32
  6884  0003EE  0100               	movlb	0	; () banked
  6885  0003F0  51D0               	movf	_ic_ptr& (0+255),w,b
  6886  0003F2  26D9               	addwf	fsr2l,f,c
  6887  0003F4  0100               	movlb	0	; () banked
  6888  0003F6  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6889  0003F8  22DA               	addwfc	fsr2h,f,c
  6890  0003FA  0E06               	movlw	6
  6891  0003FC  6EDF               	movwf	indf2,c
  6892                           
  6893                           ;my_i2c.c: 345: ic_ptr->status = 0x5;
  6894  0003FE  0100               	movlb	0	; () banked
  6895  000400  EE20 F01F          	lfsr	2,31
  6896  000404  0100               	movlb	0	; () banked
  6897  000406  51D0               	movf	_ic_ptr& (0+255),w,b
  6898  000408  26D9               	addwf	fsr2l,f,c
  6899  00040A  0100               	movlb	0	; () banked
  6900  00040C  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6901  00040E  22DA               	addwfc	fsr2h,f,c
  6902  000410  0E05               	movlw	5
  6903  000412  6EDF               	movwf	indf2,c
  6904  000414  D067               	goto	L8
  6905  000416                     i2l3343:
  6906                           
  6907                           ; BSR set to: 0
  6908                           ;my_i2c.c: 348: msg_ready = 1;
  6909  000416  0100               	movlb	0	; () banked
  6910  000418  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  6911  00041A  0E01               	movlw	1
  6912  00041C  0100               	movlb	0	; () banked
  6913  00041E  0100               	movlb	0	; () banked
  6914  000420  6F9E               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6915  000422  0100               	movlb	0	; () banked
  6916  000424  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6917                           
  6918                           ; BSR set to: 0
  6919  000426  D05E               	goto	L8
  6920  000428                     i2l3347:
  6921                           
  6922                           ; BSR set to: 0
  6923  000428  0100               	movlb	0	; () banked
  6924  00042A  0100               	movlb	0	; () banked
  6925  00042C  519F               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6926  00042E  B4D8               	btfsc	status,2,c
  6927  000430  D07A               	goto	i2l312
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;my_i2c.c: 352: ic_ptr->event_count++;
  6931  000432  0100               	movlb	0	; () banked
  6932  000434  EE20 F01E          	lfsr	2,30
  6933  000438  0100               	movlb	0	; () banked
  6934  00043A  51D0               	movf	_ic_ptr& (0+255),w,b
  6935  00043C  26D9               	addwf	fsr2l,f,c
  6936  00043E  0100               	movlb	0	; () banked
  6937  000440  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6938  000442  22DA               	addwfc	fsr2h,f,c
  6939  000444  2ADF               	incf	indf2,f,c
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;my_i2c.c: 353: if (SSPSTATbits.D_A == 1) {
  6943  000446  AAC7               	btfss	4039,5,c	;volatile
  6944  000448  D027               	goto	i2l340
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;my_i2c.c: 354: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6948  00044A  0100               	movlb	0	; () banked
  6949  00044C  EE20 F01C          	lfsr	2,28
  6950  000450  0100               	movlb	0	; () banked
  6951  000452  51D0               	movf	_ic_ptr& (0+255),w,b
  6952  000454  26D9               	addwf	fsr2l,f,c
  6953  000456  0100               	movlb	0	; () banked
  6954  000458  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6955  00045A  22DA               	addwfc	fsr2h,f,c
  6956  00045C  50DF               	movf	indf2,w,c
  6957  00045E  0100               	movlb	0	; () banked
  6958  000460  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  6959  000462  0100               	movlb	0	; () banked
  6960  000464  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6961  000466  0D01               	mullw	1
  6962  000468  50F3               	movf	prodl,w,c
  6963  00046A  0100               	movlb	0	; () banked
  6964  00046C  0100               	movlb	0	; () banked
  6965  00046E  25D0               	addwf	_ic_ptr& (0+255),w,b
  6966  000470  6ED9               	movwf	fsr2l,c
  6967  000472  50F4               	movf	prodh,w,c
  6968  000474  0100               	movlb	0	; () banked
  6969  000476  0100               	movlb	0	; () banked
  6970  000478  21D1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6971  00047A  6EDA               	movwf	fsr2h,c
  6972  00047C  0100               	movlb	0	; () banked
  6973  00047E  C09C  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;my_i2c.c: 355: ic_ptr->buflen++;
  6977  000482  0100               	movlb	0	; () banked
  6978  000484  EE20 F01C          	lfsr	2,28
  6979  000488  0100               	movlb	0	; () banked
  6980  00048A  51D0               	movf	_ic_ptr& (0+255),w,b
  6981  00048C  26D9               	addwf	fsr2l,f,c
  6982  00048E  0100               	movlb	0	; () banked
  6983  000490  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6984  000492  22DA               	addwfc	fsr2h,f,c
  6985  000494  2ADF               	incf	indf2,f,c
  6986                           
  6987                           ;my_i2c.c: 356: } else {
  6988  000496  D047               	goto	i2l312
  6989  000498                     i2l340:
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;my_i2c.c: 357: if (SSPSTATbits.R_W == 1) {
  6993  000498  A4C7               	btfss	4039,2,c	;volatile
  6994  00049A  D6B6               	goto	i2l3299
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;my_i2c.c: 358: ic_ptr->status = 0x8;
  6998  00049C  0100               	movlb	0	; () banked
  6999  00049E  EE20 F01F          	lfsr	2,31
  7000  0004A2  0100               	movlb	0	; () banked
  7001  0004A4  51D0               	movf	_ic_ptr& (0+255),w,b
  7002  0004A6  26D9               	addwf	fsr2l,f,c
  7003  0004A8  0100               	movlb	0	; () banked
  7004  0004AA  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7005  0004AC  22DA               	addwfc	fsr2h,f,c
  7006  0004AE  0E08               	movlw	8
  7007  0004B0  6EDF               	movwf	indf2,c
  7008                           
  7009                           ; BSR set to: 0
  7010                           ;my_i2c.c: 359: msg_ready = 1;
  7011  0004B2  0100               	movlb	0	; () banked
  7012  0004B4  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  7013  0004B6  0E01               	movlw	1
  7014  0004B8  0100               	movlb	0	; () banked
  7015  0004BA  0100               	movlb	0	; () banked
  7016  0004BC  6F9E               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7017  0004BE  0100               	movlb	0	; () banked
  7018  0004C0  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7019  0004C2                     L9:
  7020                           
  7021                           ; BSR set to: 0
  7022                           ;my_i2c.c: 360: msg_to_send = 1;
  7023  0004C2  0100               	movlb	0	; () banked
  7024  0004C4  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  7025  0004C6  0E01               	movlw	1
  7026  0004C8  0100               	movlb	0	; () banked
  7027  0004CA  0100               	movlb	0	; () banked
  7028  0004CC  6F9D               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7029  0004CE  0100               	movlb	0	; () banked
  7030  0004D0  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;my_i2c.c: 362: data_read = 0;
  7034  0004D2  0100               	movlb	0	; () banked
  7035  0004D4  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  7036  0004D6  0E00               	movlw	0
  7037  0004D8  0100               	movlb	0	; () banked
  7038  0004DA  0100               	movlb	0	; () banked
  7039  0004DC  6F9F               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7040  0004DE                     L6:
  7041  0004DE  0100               	movlb	0	; () banked
  7042  0004E0  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7043                           
  7044                           ;my_i2c.c: 363: } else {
  7045  0004E2  D021               	goto	i2l312
  7046  0004E4                     L8:
  7047                           
  7048                           ;my_i2c.c: 366: ic_ptr->status = 0x5;
  7049  0004E4  0100               	movlb	0	; () banked
  7050  0004E6  EE20 F01F          	lfsr	2,31
  7051  0004EA  0100               	movlb	0	; () banked
  7052  0004EC  51D0               	movf	_ic_ptr& (0+255),w,b
  7053  0004EE  26D9               	addwf	fsr2l,f,c
  7054  0004F0  0100               	movlb	0	; () banked
  7055  0004F2  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7056  0004F4  22DA               	addwfc	fsr2h,f,c
  7057  0004F6  0E05               	movlw	5
  7058  0004F8  D731               	goto	L5
  7059  0004FA                     i2l3369:
  7060                           
  7061                           ; BSR set to: 0
  7062  0004FA  0100               	movlb	0	; () banked
  7063  0004FC  EE20 F01F          	lfsr	2,31
  7064  000500  0100               	movlb	0	; () banked
  7065  000502  51D0               	movf	_ic_ptr& (0+255),w,b
  7066  000504  26D9               	addwf	fsr2l,f,c
  7067  000506  0100               	movlb	0	; () banked
  7068  000508  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7069  00050A  22DA               	addwfc	fsr2h,f,c
  7070  00050C  50DF               	movf	indf2,w,c
  7071                           
  7072                           ; Switch size 1, requested type "space"
  7073                           ; Number of cases is 4, Range of values is 5 to 8
  7074                           ; switch strategies available:
  7075                           ; Name         Instructions Cycles
  7076                           ; simple_byte           13     7 (average)
  7077                           ;	Chosen strategy is simple_byte
  7078  00050E  0A05               	xorlw	5	; case 5
  7079  000510  B4D8               	btfsc	status,2,c
  7080  000512  D63C               	goto	i2l314
  7081  000514  0A03               	xorlw	3	; case 6
  7082  000516  B4D8               	btfsc	status,2,c
  7083  000518  D65B               	goto	i2l318
  7084  00051A  0A01               	xorlw	1	; case 7
  7085  00051C  B4D8               	btfsc	status,2,c
  7086  00051E  D720               	goto	i2l332
  7087  000520  0A0F               	xorlw	15	; case 8
  7088  000522  B4D8               	btfsc	status,2,c
  7089  000524  D6D1               	goto	i2l3319
  7090  000526                     i2l312:
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;my_i2c.c: 373: }
  7094                           ;my_i2c.c: 376: if (data_read || data_written) {
  7095  000526  0100               	movlb	0	; () banked
  7096  000528  0100               	movlb	0	; () banked
  7097  00052A  679F               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  7098  00052C  D005               	goto	i2l346
  7099                           
  7100                           ; BSR set to: 0
  7101  00052E  0100               	movlb	0	; () banked
  7102  000530  0100               	movlb	0	; () banked
  7103  000532  519A               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  7104  000534  B4D8               	btfsc	status,2,c
  7105  000536  D002               	goto	i2l3375
  7106  000538                     i2l346:
  7107                           
  7108                           ; BSR set to: 0
  7109                           ;my_i2c.c: 378: if (SSPCON1bits.CKP == 0) {
  7110  000538  A8C6               	btfss	4038,4,c	;volatile
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;my_i2c.c: 379: SSPCON1bits.CKP = 1;
  7114  00053A  88C6               	bsf	4038,4,c	;volatile
  7115  00053C                     i2l3375:
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;my_i2c.c: 380: }
  7119                           ;my_i2c.c: 381: }
  7120                           ;my_i2c.c: 384: if ((ic_ptr->buflen > 28 - 2) && (!msg_ready)) {
  7121  00053C  0100               	movlb	0	; () banked
  7122  00053E  EE20 F01C          	lfsr	2,28
  7123  000542  0100               	movlb	0	; () banked
  7124  000544  51D0               	movf	_ic_ptr& (0+255),w,b
  7125  000546  26D9               	addwf	fsr2l,f,c
  7126  000548  0100               	movlb	0	; () banked
  7127  00054A  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7128  00054C  22DA               	addwfc	fsr2h,f,c
  7129  00054E  0E1A               	movlw	26
  7130  000550  64DF               	cpfsgt	indf2,c
  7131  000552  D024               	goto	i2l3381
  7132                           
  7133                           ; BSR set to: 0
  7134  000554  0100               	movlb	0	; () banked
  7135  000556  0100               	movlb	0	; () banked
  7136  000558  679E               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  7137  00055A  D020               	goto	i2l3381
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;my_i2c.c: 385: ic_ptr->status = 0x5;
  7141  00055C  0100               	movlb	0	; () banked
  7142  00055E  EE20 F01F          	lfsr	2,31
  7143  000562  0100               	movlb	0	; () banked
  7144  000564  51D0               	movf	_ic_ptr& (0+255),w,b
  7145  000566  26D9               	addwf	fsr2l,f,c
  7146  000568  0100               	movlb	0	; () banked
  7147  00056A  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7148  00056C  22DA               	addwfc	fsr2h,f,c
  7149  00056E  0E05               	movlw	5
  7150  000570  6EDF               	movwf	indf2,c
  7151                           
  7152                           ;my_i2c.c: 386: ic_ptr->error_count++;
  7153  000572  0100               	movlb	0	; () banked
  7154  000574  EE20 F021          	lfsr	2,33
  7155  000578  0100               	movlb	0	; () banked
  7156  00057A  51D0               	movf	_ic_ptr& (0+255),w,b
  7157  00057C  26D9               	addwf	fsr2l,f,c
  7158  00057E  0100               	movlb	0	; () banked
  7159  000580  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7160  000582  22DA               	addwfc	fsr2h,f,c
  7161  000584  2ADF               	incf	indf2,f,c
  7162                           
  7163                           ;my_i2c.c: 387: ic_ptr->error_code = 0x7;
  7164  000586  0100               	movlb	0	; () banked
  7165  000588  EE20 F020          	lfsr	2,32
  7166  00058C  0100               	movlb	0	; () banked
  7167  00058E  51D0               	movf	_ic_ptr& (0+255),w,b
  7168  000590  26D9               	addwf	fsr2l,f,c
  7169  000592  0100               	movlb	0	; () banked
  7170  000594  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7171  000596  22DA               	addwfc	fsr2h,f,c
  7172  000598  0E07               	movlw	7
  7173  00059A  6EDF               	movwf	indf2,c
  7174  00059C                     i2l3381:
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;my_i2c.c: 388: }
  7178                           ;my_i2c.c: 390: if (msg_ready) {
  7179  00059C  0100               	movlb	0	; () banked
  7180  00059E  0100               	movlb	0	; () banked
  7181  0005A0  519E               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  7182  0005A2  B4D8               	btfsc	status,2,c
  7183  0005A4  D048               	goto	i2l3389
  7184                           
  7185                           ; BSR set to: 0
  7186                           ;my_i2c.c: 391: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7187  0005A6  0100               	movlb	0	; () banked
  7188  0005A8  EE20 F01E          	lfsr	2,30
  7189  0005AC  0100               	movlb	0	; () banked
  7190  0005AE  51D0               	movf	_ic_ptr& (0+255),w,b
  7191  0005B0  26D9               	addwf	fsr2l,f,c
  7192  0005B2  0100               	movlb	0	; () banked
  7193  0005B4  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7194  0005B6  22DA               	addwfc	fsr2h,f,c
  7195  0005B8  0100               	movlb	0	; () banked
  7196  0005BA  EE10 F01C          	lfsr	1,28
  7197  0005BE  0100               	movlb	0	; () banked
  7198  0005C0  51D0               	movf	_ic_ptr& (0+255),w,b
  7199  0005C2  26E1               	addwf	fsr1l,f,c
  7200  0005C4  0100               	movlb	0	; () banked
  7201  0005C6  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7202  0005C8  22E2               	addwfc	fsr1h,f,c
  7203  0005CA  50E7               	movf	indf1,w,c
  7204  0005CC  0100               	movlb	0	; () banked
  7205  0005CE  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  7206  0005D0  0100               	movlb	0	; () banked
  7207  0005D2  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7208  0005D4  0D01               	mullw	1
  7209  0005D6  50F3               	movf	prodl,w,c
  7210  0005D8  0100               	movlb	0	; () banked
  7211  0005DA  0100               	movlb	0	; () banked
  7212  0005DC  25D0               	addwf	_ic_ptr& (0+255),w,b
  7213  0005DE  6EE1               	movwf	fsr1l,c
  7214  0005E0  50F4               	movf	prodh,w,c
  7215  0005E2  0100               	movlb	0	; () banked
  7216  0005E4  0100               	movlb	0	; () banked
  7217  0005E6  21D1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7218  0005E8  6EE2               	movwf	fsr1h,c
  7219  0005EA  CFDF FFE7          	movff	indf2,indf1
  7220                           
  7221                           ; BSR set to: 0
  7222                           ;my_i2c.c: 392: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7223  0005EE  0100               	movlb	0	; () banked
  7224  0005F0  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  7225  0005F2  0E28               	movlw	40
  7226  0005F4  0100               	movlb	0	; () banked
  7227  0005F6  0100               	movlb	0	; () banked
  7228  0005F8  6F8F               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7229  0005FA  0100               	movlb	0	; () banked
  7230  0005FC  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7231  0005FE  0100               	movlb	0	; () banked
  7232  000600  0100               	movlb	0	; () banked
  7233  000602  C0D1  F091         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7234  000606  0100               	movlb	0	; () banked
  7235  000608  0100               	movlb	0	; () banked
  7236  00060A  C0D0  F090         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7237  00060E  0100               	movlb	0	; () banked
  7238  000610  EE20 F01C          	lfsr	2,28
  7239  000614  0100               	movlb	0	; () banked
  7240  000616  51D0               	movf	_ic_ptr& (0+255),w,b
  7241  000618  26D9               	addwf	fsr2l,f,c
  7242  00061A  0100               	movlb	0	; () banked
  7243  00061C  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7244  00061E  22DA               	addwfc	fsr2h,f,c
  7245  000620  50DF               	movf	indf2,w,c
  7246  000622  0100               	movlb	0	; () banked
  7247  000624  6F94               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  7248  000626  0100               	movlb	0	; () banked
  7249  000628  2994               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  7250  00062A  ECD5  F00C         	call	_ToMainHigh_sendmsg
  7251                           
  7252                           ;my_i2c.c: 393: ic_ptr->buflen = 0;
  7253  00062E  0100               	movlb	0	; () banked
  7254  000630  EE20 F01C          	lfsr	2,28
  7255  000634  D04B               	goto	L7
  7256  000636                     i2l3389:
  7257                           
  7258                           ; BSR set to: 0
  7259  000636  0100               	movlb	0	; () banked
  7260  000638  EE20 F021          	lfsr	2,33
  7261  00063C  0100               	movlb	0	; () banked
  7262  00063E  51D0               	movf	_ic_ptr& (0+255),w,b
  7263  000640  26D9               	addwf	fsr2l,f,c
  7264  000642  0100               	movlb	0	; () banked
  7265  000644  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7266  000646  22DA               	addwfc	fsr2h,f,c
  7267  000648  50DF               	movf	indf2,w,c
  7268  00064A  B4D8               	btfsc	status,2,c
  7269  00064C  D047               	goto	i2l3397
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;my_i2c.c: 395: error_buf[0] = ic_ptr->error_count;
  7273  00064E  0100               	movlb	0	; () banked
  7274  000650  EE20 F021          	lfsr	2,33
  7275  000654  0100               	movlb	0	; () banked
  7276  000656  51D0               	movf	_ic_ptr& (0+255),w,b
  7277  000658  26D9               	addwf	fsr2l,f,c
  7278  00065A  0100               	movlb	0	; () banked
  7279  00065C  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7280  00065E  22DA               	addwfc	fsr2h,f,c
  7281  000660  50DF               	movf	indf2,w,c
  7282  000662  0100               	movlb	0	; () banked
  7283  000664  0100               	movlb	0	; () banked
  7284  000666  6F97               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  7285                           
  7286                           ;my_i2c.c: 396: error_buf[1] = ic_ptr->error_code;
  7287  000668  0100               	movlb	0	; () banked
  7288  00066A  EE20 F020          	lfsr	2,32
  7289  00066E  0100               	movlb	0	; () banked
  7290  000670  51D0               	movf	_ic_ptr& (0+255),w,b
  7291  000672  26D9               	addwf	fsr2l,f,c
  7292  000674  0100               	movlb	0	; () banked
  7293  000676  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7294  000678  22DA               	addwfc	fsr2h,f,c
  7295  00067A  50DF               	movf	indf2,w,c
  7296  00067C  0100               	movlb	0	; () banked
  7297  00067E  0100               	movlb	0	; () banked
  7298  000680  6F98               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  7299                           
  7300                           ;my_i2c.c: 397: error_buf[2] = ic_ptr->event_count;
  7301  000682  0100               	movlb	0	; () banked
  7302  000684  EE20 F01E          	lfsr	2,30
  7303  000688  0100               	movlb	0	; () banked
  7304  00068A  51D0               	movf	_ic_ptr& (0+255),w,b
  7305  00068C  26D9               	addwf	fsr2l,f,c
  7306  00068E  0100               	movlb	0	; () banked
  7307  000690  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7308  000692  22DA               	addwfc	fsr2h,f,c
  7309  000694  50DF               	movf	indf2,w,c
  7310  000696  0100               	movlb	0	; () banked
  7311  000698  0100               	movlb	0	; () banked
  7312  00069A  6F99               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;my_i2c.c: 398: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7316  00069C  0100               	movlb	0	; () banked
  7317  00069E  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  7318  0006A0  0E29               	movlw	41
  7319  0006A2  0100               	movlb	0	; () banked
  7320  0006A4  0100               	movlb	0	; () banked
  7321  0006A6  6F8F               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7322  0006A8  0100               	movlb	0	; () banked
  7323  0006AA  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7324  0006AC  0100               	movlb	0	; () banked
  7325  0006AE  0E00               	movlw	high i2c_slave_int_handler@error_buf
  7326  0006B0  0100               	movlb	0	; () banked
  7327  0006B2  0100               	movlb	0	; () banked
  7328  0006B4  6F91               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7329  0006B6  0100               	movlb	0	; () banked
  7330  0006B8  0E97               	movlw	low i2c_slave_int_handler@error_buf
  7331  0006BA  0100               	movlb	0	; () banked
  7332  0006BC  0100               	movlb	0	; () banked
  7333  0006BE  6F90               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7334  0006C0  0E03               	movlw	3
  7335  0006C2  ECD5  F00C         	call	_ToMainHigh_sendmsg
  7336                           
  7337                           ;my_i2c.c: 399: ic_ptr->error_count = 0;
  7338  0006C6  0100               	movlb	0	; () banked
  7339  0006C8  EE20 F021          	lfsr	2,33
  7340  0006CC                     L7:
  7341  0006CC  0100               	movlb	0	; () banked
  7342  0006CE  51D0               	movf	_ic_ptr& (0+255),w,b
  7343  0006D0  26D9               	addwf	fsr2l,f,c
  7344  0006D2  0100               	movlb	0	; () banked
  7345  0006D4  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7346  0006D6  22DA               	addwfc	fsr2h,f,c
  7347  0006D8  0E00               	movlw	0
  7348  0006DA  6EDF               	movwf	indf2,c
  7349  0006DC                     i2l3397:
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;my_i2c.c: 400: }
  7353                           ;my_i2c.c: 401: if (msg_to_send) {
  7354  0006DC  0100               	movlb	0	; () banked
  7355  0006DE  0100               	movlb	0	; () banked
  7356  0006E0  519D               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  7357  0006E2  B4D8               	btfsc	status,2,c
  7358  0006E4  0012               	return	
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;my_i2c.c: 402: int length = 0;
  7362  0006E6  0E00               	movlw	0
  7363  0006E8  0100               	movlb	0	; () banked
  7364  0006EA  0100               	movlb	0	; () banked
  7365  0006EC  6F96               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  7366  0006EE  0E00               	movlw	0
  7367  0006F0  0100               	movlb	0	; () banked
  7368  0006F2  6F95               	movwf	i2c_slave_int_handler@length& (0+255),b
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;my_i2c.c: 406: if(ic_ptr->buffer[0] == 0xAA){
  7372  0006F4  0EAA               	movlw	170
  7373  0006F6  C0D0  FFD9         	movff	_ic_ptr,fsr2l
  7374  0006FA  C0D1  FFDA         	movff	_ic_ptr+1,fsr2h
  7375  0006FE  62DF               	cpfseq	indf2,c
  7376  000700  D018               	goto	i2l3409
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;my_i2c.c: 407: length = 3;
  7380  000702  0E00               	movlw	0
  7381  000704  0100               	movlb	0	; () banked
  7382  000706  0100               	movlb	0	; () banked
  7383  000708  6F96               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  7384  00070A  0E03               	movlw	3
  7385  00070C  0100               	movlb	0	; () banked
  7386  00070E  6F95               	movwf	i2c_slave_int_handler@length& (0+255),b
  7387                           
  7388                           ; BSR set to: 0
  7389                           ;my_i2c.c: 410: start_i2c_slave_reply(length, ic_ptr->buffer);
  7390  000710  0100               	movlb	0	; () banked
  7391  000712  C0D1  F02E         	movff	_ic_ptr+1,start_i2c_slave_reply@msg+1
  7392  000716  0100               	movlb	0	; () banked
  7393  000718  C0D0  F02D         	movff	_ic_ptr,start_i2c_slave_reply@msg
  7394  00071C  0100               	movlb	0	; () banked
  7395  00071E  0100               	movlb	0	; () banked
  7396  000720  5195               	movf	i2c_slave_int_handler@length& (0+255),w,b
  7397  000722  EC5F  F007         	call	_start_i2c_slave_reply
  7398                           
  7399                           ;my_i2c.c: 411: adcbuffer[0] = 0;
  7400  000726  0100               	movlb	0	; () banked
  7401  000728  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  7402  00072A  0E00               	movlw	0
  7403  00072C  6E34               	movwf	_adcbuffer,c
  7404  00072E  0100               	movlb	0	; () banked
  7405  000730  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7406  000732                     i2l3409:
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;my_i2c.c: 412: }
  7410                           ;my_i2c.c: 413: msg_to_send = 0;
  7411  000732  0100               	movlb	0	; () banked
  7412  000734  6F93               	movwf	??_i2c_slave_int_handler& (0+255),b
  7413  000736  0E00               	movlw	0
  7414  000738  0100               	movlb	0	; () banked
  7415  00073A  0100               	movlb	0	; () banked
  7416  00073C  6F9D               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7417  00073E  0100               	movlb	0	; () banked
  7418  000740  5193               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7419  000742  0012               	return	
  7420  000744                     __end_of_i2c_slave_int_handler:
  7421                           	opt stack 0
  7422                           pclatu	equ	0xFFB
  7423                           pclath	equ	0xFFA
  7424                           tblptru	equ	0xFF8
  7425                           tblptrh	equ	0xFF7
  7426                           tblptrl	equ	0xFF6
  7427                           tablat	equ	0xFF5
  7428                           prodh	equ	0xFF4
  7429                           prodl	equ	0xFF3
  7430                           intcon	equ	0xFF2
  7431                           postinc0	equ	0xFEE
  7432                           fsr0h	equ	0xFEA
  7433                           fsr0l	equ	0xFE9
  7434                           wreg	equ	0xFE8
  7435                           indf1	equ	0xFE7
  7436                           postdec1	equ	0xFE5
  7437                           fsr1h	equ	0xFE2
  7438                           fsr1l	equ	0xFE1
  7439                           bsr	equ	0xFE0
  7440                           indf2	equ	0xFDF
  7441                           postinc2	equ	0xFDE
  7442                           postdec2	equ	0xFDD
  7443                           fsr2h	equ	0xFDA
  7444                           fsr2l	equ	0xFD9
  7445                           status	equ	0xFD8
  7446                           
  7447 ;; *************** function _start_i2c_slave_reply *****************
  7448 ;; Defined at:
  7449 ;;		line 92 in file "../src/my_i2c.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;  length          1    wreg     unsigned char 
  7452 ;;  msg             2   44[COMRAM] PTR unsigned char 
  7453 ;;		 -> NULL(0), main@ic(65), 
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;  length          1   48[COMRAM] unsigned char 
  7456 ;; Return value:  Size  Location     Type
  7457 ;;		None               void
  7458 ;; Registers used:
  7459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7465 ;;      Params:         2       0       0       0       0
  7466 ;;      Locals:         1       0       0       0       0
  7467 ;;      Temps:          2       0       0       0       0
  7468 ;;      Totals:         5       0       0       0       0
  7469 ;;Total ram usage:        5 bytes
  7470 ;; Hardware stack levels used:    1
  7471 ;; This function calls:
  7472 ;;		Nothing
  7473 ;; This function is called by:
  7474 ;;		_i2c_slave_int_handler
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           	psect	text45
  7479  000EBE                     __ptext45:
  7480                           	opt stack 0
  7481  000EBE                     _start_i2c_slave_reply:
  7482                           	opt stack 18
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;incstack = 0
  7486                           ;start_i2c_slave_reply@length stored from wreg
  7487  000EBE  CFE8 F031          	movff	wreg,start_i2c_slave_reply@length
  7488                           
  7489                           ;my_i2c.c: 94: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  7490  000EC2  0100               	movlb	0	; () banked
  7491  000EC4  EE20 F03E          	lfsr	2,62
  7492  000EC8  0100               	movlb	0	; () banked
  7493  000ECA  51D0               	movf	_ic_ptr& (0+255),w,b
  7494  000ECC  26D9               	addwf	fsr2l,f,c
  7495  000ECE  0100               	movlb	0	; () banked
  7496  000ED0  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7497  000ED2  22DA               	addwfc	fsr2h,f,c
  7498  000ED4  0E00               	movlw	0
  7499  000ED6  6EDF               	movwf	indf2,c
  7500  000ED8  D03A               	goto	i2l3241
  7501  000EDA                     i2l3237:
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;my_i2c.c: 95: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  7505  000EDA  0100               	movlb	0	; () banked
  7506  000EDC  EE20 F03E          	lfsr	2,62
  7507  000EE0  0100               	movlb	0	; () banked
  7508  000EE2  51D0               	movf	_ic_ptr& (0+255),w,b
  7509  000EE4  26D9               	addwf	fsr2l,f,c
  7510  000EE6  0100               	movlb	0	; () banked
  7511  000EE8  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7512  000EEA  22DA               	addwfc	fsr2h,f,c
  7513  000EEC  50DF               	movf	indf2,w,c
  7514  000EEE  6E2F               	movwf	??_start_i2c_slave_reply& (0+255),c
  7515  000EF0  502F               	movf	??_start_i2c_slave_reply,w,c
  7516  000EF2  0D01               	mullw	1
  7517  000EF4  50F3               	movf	prodl,w,c
  7518  000EF6  242D               	addwf	start_i2c_slave_reply@msg,w,c
  7519  000EF8  6ED9               	movwf	fsr2l,c
  7520  000EFA  50F4               	movf	prodh,w,c
  7521  000EFC  202E               	addwfc	start_i2c_slave_reply@msg+1,w,c
  7522  000EFE  6EDA               	movwf	fsr2h,c
  7523  000F00  0100               	movlb	0	; () banked
  7524  000F02  EE10 F03E          	lfsr	1,62
  7525  000F06  0100               	movlb	0	; () banked
  7526  000F08  51D0               	movf	_ic_ptr& (0+255),w,b
  7527  000F0A  26E1               	addwf	fsr1l,f,c
  7528  000F0C  0100               	movlb	0	; () banked
  7529  000F0E  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7530  000F10  22E2               	addwfc	fsr1h,f,c
  7531  000F12  50E7               	movf	indf1,w,c
  7532  000F14  6E30               	movwf	(??_start_i2c_slave_reply+1)& (0+255),c
  7533  000F16  5030               	movf	??_start_i2c_slave_reply+1,w,c
  7534  000F18  0D01               	mullw	1
  7535  000F1A  0E22               	movlw	34
  7536  000F1C  26F3               	addwf	prodl,f,c
  7537  000F1E  0E00               	movlw	0
  7538  000F20  22F4               	addwfc	prodh,f,c
  7539  000F22  50F3               	movf	prodl,w,c
  7540  000F24  0100               	movlb	0	; () banked
  7541  000F26  0100               	movlb	0	; () banked
  7542  000F28  25D0               	addwf	_ic_ptr& (0+255),w,b
  7543  000F2A  6EE1               	movwf	fsr1l,c
  7544  000F2C  50F4               	movf	prodh,w,c
  7545  000F2E  0100               	movlb	0	; () banked
  7546  000F30  0100               	movlb	0	; () banked
  7547  000F32  21D1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7548  000F34  6EE2               	movwf	fsr1h,c
  7549  000F36  CFDF FFE7          	movff	indf2,indf1
  7550                           
  7551                           ; BSR set to: 0
  7552  000F3A  0100               	movlb	0	; () banked
  7553  000F3C  EE20 F03E          	lfsr	2,62
  7554  000F40  0100               	movlb	0	; () banked
  7555  000F42  51D0               	movf	_ic_ptr& (0+255),w,b
  7556  000F44  26D9               	addwf	fsr2l,f,c
  7557  000F46  0100               	movlb	0	; () banked
  7558  000F48  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7559  000F4A  22DA               	addwfc	fsr2h,f,c
  7560  000F4C  2ADF               	incf	indf2,f,c
  7561  000F4E                     i2l3241:
  7562                           
  7563                           ; BSR set to: 0
  7564  000F4E  0100               	movlb	0	; () banked
  7565  000F50  EE20 F03E          	lfsr	2,62
  7566  000F54  0100               	movlb	0	; () banked
  7567  000F56  51D0               	movf	_ic_ptr& (0+255),w,b
  7568  000F58  26D9               	addwf	fsr2l,f,c
  7569  000F5A  0100               	movlb	0	; () banked
  7570  000F5C  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7571  000F5E  22DA               	addwfc	fsr2h,f,c
  7572  000F60  50DF               	movf	indf2,w,c
  7573  000F62  6E2F               	movwf	??_start_i2c_slave_reply& (0+255),c
  7574  000F64  5031               	movf	start_i2c_slave_reply@length,w,c
  7575  000F66  5C2F               	subwf	??_start_i2c_slave_reply,w,c
  7576  000F68  A0D8               	btfss	status,0,c
  7577  000F6A  D7B7               	goto	i2l3237
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;my_i2c.c: 96: }
  7581                           ;my_i2c.c: 97: ic_ptr->outbuflen = length;
  7582                           
  7583                           ; BSR set to: 0
  7584  000F6C  0100               	movlb	0	; () banked
  7585  000F6E  EE20 F03E          	lfsr	2,62
  7586  000F72  0100               	movlb	0	; () banked
  7587  000F74  51D0               	movf	_ic_ptr& (0+255),w,b
  7588  000F76  26D9               	addwf	fsr2l,f,c
  7589  000F78  0100               	movlb	0	; () banked
  7590  000F7A  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7591  000F7C  22DA               	addwfc	fsr2h,f,c
  7592  000F7E  C031  FFDF         	movff	start_i2c_slave_reply@length,indf2
  7593                           
  7594                           ;my_i2c.c: 98: ic_ptr->outbufind = 1;
  7595  000F82  0100               	movlb	0	; () banked
  7596  000F84  EE20 F03F          	lfsr	2,63
  7597  000F88  0100               	movlb	0	; () banked
  7598  000F8A  51D0               	movf	_ic_ptr& (0+255),w,b
  7599  000F8C  26D9               	addwf	fsr2l,f,c
  7600  000F8E  0100               	movlb	0	; () banked
  7601  000F90  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7602  000F92  22DA               	addwfc	fsr2h,f,c
  7603  000F94  0E01               	movlw	1
  7604  000F96  6EDF               	movwf	indf2,c
  7605                           
  7606                           ;my_i2c.c: 101: SSPBUF = ic_ptr->outbuffer[0];
  7607  000F98  0100               	movlb	0	; () banked
  7608  000F9A  EE20 F022          	lfsr	2,34
  7609  000F9E  0100               	movlb	0	; () banked
  7610  000FA0  51D0               	movf	_ic_ptr& (0+255),w,b
  7611  000FA2  26D9               	addwf	fsr2l,f,c
  7612  000FA4  0100               	movlb	0	; () banked
  7613  000FA6  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7614  000FA8  22DA               	addwfc	fsr2h,f,c
  7615  000FAA  50DF               	movf	indf2,w,c
  7616  000FAC  6EC9               	movwf	4041,c	;volatile
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;my_i2c.c: 104: SSPCON1bits.CKP = 1;
  7620  000FAE  88C6               	bsf	4038,4,c	;volatile
  7621                           
  7622                           ; BSR set to: 0
  7623  000FB0  0012               	return	
  7624  000FB2                     __end_of_start_i2c_slave_reply:
  7625                           	opt stack 0
  7626                           pclatu	equ	0xFFB
  7627                           pclath	equ	0xFFA
  7628                           tblptru	equ	0xFF8
  7629                           tblptrh	equ	0xFF7
  7630                           tblptrl	equ	0xFF6
  7631                           tablat	equ	0xFF5
  7632                           prodh	equ	0xFF4
  7633                           prodl	equ	0xFF3
  7634                           intcon	equ	0xFF2
  7635                           postinc0	equ	0xFEE
  7636                           fsr0h	equ	0xFEA
  7637                           fsr0l	equ	0xFE9
  7638                           wreg	equ	0xFE8
  7639                           indf1	equ	0xFE7
  7640                           postdec1	equ	0xFE5
  7641                           fsr1h	equ	0xFE2
  7642                           fsr1l	equ	0xFE1
  7643                           bsr	equ	0xFE0
  7644                           indf2	equ	0xFDF
  7645                           postinc2	equ	0xFDE
  7646                           postdec2	equ	0xFDD
  7647                           fsr2h	equ	0xFDA
  7648                           fsr2l	equ	0xFD9
  7649                           status	equ	0xFD8
  7650                           
  7651 ;; *************** function _handle_start *****************
  7652 ;; Defined at:
  7653 ;;		line 110 in file "../src/my_i2c.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;  data_read       1    wreg     unsigned char 
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;  data_read       1   44[COMRAM] unsigned char 
  7658 ;; Return value:  Size  Location     Type
  7659 ;;		None               void
  7660 ;; Registers used:
  7661 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7667 ;;      Params:         0       0       0       0       0
  7668 ;;      Locals:         1       0       0       0       0
  7669 ;;      Temps:          0       0       0       0       0
  7670 ;;      Totals:         1       0       0       0       0
  7671 ;;Total ram usage:        1 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; This function calls:
  7674 ;;		Nothing
  7675 ;; This function is called by:
  7676 ;;		_i2c_slave_int_handler
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           	psect	text46
  7681  000FB2                     __ptext46:
  7682                           	opt stack 0
  7683  000FB2                     _handle_start:
  7684                           	opt stack 18
  7685                           
  7686                           ; BSR set to: 0
  7687                           ;incstack = 0
  7688                           ;handle_start@data_read stored from wreg
  7689  000FB2  CFE8 F02D          	movff	wreg,handle_start@data_read
  7690                           
  7691                           ;my_i2c.c: 111: ic_ptr->event_count = 1;
  7692  000FB6  0100               	movlb	0	; () banked
  7693  000FB8  EE20 F01E          	lfsr	2,30
  7694  000FBC  0100               	movlb	0	; () banked
  7695  000FBE  51D0               	movf	_ic_ptr& (0+255),w,b
  7696  000FC0  26D9               	addwf	fsr2l,f,c
  7697  000FC2  0100               	movlb	0	; () banked
  7698  000FC4  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7699  000FC6  22DA               	addwfc	fsr2h,f,c
  7700  000FC8  0E01               	movlw	1
  7701  000FCA  6EDF               	movwf	indf2,c
  7702                           
  7703                           ;my_i2c.c: 112: ic_ptr->buflen = 0;
  7704  000FCC  0100               	movlb	0	; () banked
  7705  000FCE  EE20 F01C          	lfsr	2,28
  7706  000FD2  0100               	movlb	0	; () banked
  7707  000FD4  51D0               	movf	_ic_ptr& (0+255),w,b
  7708  000FD6  26D9               	addwf	fsr2l,f,c
  7709  000FD8  0100               	movlb	0	; () banked
  7710  000FDA  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7711  000FDC  22DA               	addwfc	fsr2h,f,c
  7712  000FDE  0E00               	movlw	0
  7713  000FE0  6EDF               	movwf	indf2,c
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;my_i2c.c: 114: if (data_read) {
  7717  000FE2  502D               	movf	handle_start@data_read,w,c
  7718  000FE4  B4D8               	btfsc	status,2,c
  7719  000FE6  D03D               	goto	i2l3259
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;my_i2c.c: 115: if (SSPSTATbits.D_A == 1) {
  7723  000FE8  AAC7               	btfss	4039,5,c	;volatile
  7724  000FEA  D021               	goto	i2l277
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;my_i2c.c: 118: ic_ptr->status = 0x5;
  7728  000FEC  0100               	movlb	0	; () banked
  7729  000FEE  EE20 F01F          	lfsr	2,31
  7730  000FF2  0100               	movlb	0	; () banked
  7731  000FF4  51D0               	movf	_ic_ptr& (0+255),w,b
  7732  000FF6  26D9               	addwf	fsr2l,f,c
  7733  000FF8  0100               	movlb	0	; () banked
  7734  000FFA  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7735  000FFC  22DA               	addwfc	fsr2h,f,c
  7736  000FFE  0E05               	movlw	5
  7737  001000  6EDF               	movwf	indf2,c
  7738                           
  7739                           ;my_i2c.c: 119: ic_ptr->error_count++;
  7740  001002  0100               	movlb	0	; () banked
  7741  001004  EE20 F021          	lfsr	2,33
  7742  001008  0100               	movlb	0	; () banked
  7743  00100A  51D0               	movf	_ic_ptr& (0+255),w,b
  7744  00100C  26D9               	addwf	fsr2l,f,c
  7745  00100E  0100               	movlb	0	; () banked
  7746  001010  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7747  001012  22DA               	addwfc	fsr2h,f,c
  7748  001014  2ADF               	incf	indf2,f,c
  7749                           
  7750                           ;my_i2c.c: 120: ic_ptr->error_code = 0x5;
  7751  001016  0100               	movlb	0	; () banked
  7752  001018  EE20 F020          	lfsr	2,32
  7753  00101C  0100               	movlb	0	; () banked
  7754  00101E  51D0               	movf	_ic_ptr& (0+255),w,b
  7755  001020  26D9               	addwf	fsr2l,f,c
  7756  001022  0100               	movlb	0	; () banked
  7757  001024  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7758  001026  22DA               	addwfc	fsr2h,f,c
  7759  001028  0E05               	movlw	5
  7760  00102A  6EDF               	movwf	indf2,c
  7761                           
  7762                           ;my_i2c.c: 121: } else {
  7763  00102C  0012               	return	
  7764  00102E                     i2l277:
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;my_i2c.c: 122: if (SSPSTATbits.R_W == 1) {
  7768  00102E  A4C7               	btfss	4039,2,c	;volatile
  7769  001030  D00C               	goto	i2l3257
  7770                           
  7771                           ; BSR set to: 0
  7772                           ;my_i2c.c: 123: ic_ptr->status = 0x8;
  7773  001032  0100               	movlb	0	; () banked
  7774  001034  EE20 F01F          	lfsr	2,31
  7775  001038  0100               	movlb	0	; () banked
  7776  00103A  51D0               	movf	_ic_ptr& (0+255),w,b
  7777  00103C  26D9               	addwf	fsr2l,f,c
  7778  00103E  0100               	movlb	0	; () banked
  7779  001040  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7780  001042  22DA               	addwfc	fsr2h,f,c
  7781  001044  0E08               	movlw	8
  7782  001046  6EDF               	movwf	indf2,c
  7783                           
  7784                           ;my_i2c.c: 124: } else {
  7785  001048  0012               	return	
  7786  00104A                     i2l3257:
  7787                           
  7788                           ; BSR set to: 0
  7789                           ;my_i2c.c: 125: ic_ptr->status = 0x7;
  7790  00104A  0100               	movlb	0	; () banked
  7791  00104C  EE20 F01F          	lfsr	2,31
  7792  001050  0100               	movlb	0	; () banked
  7793  001052  51D0               	movf	_ic_ptr& (0+255),w,b
  7794  001054  26D9               	addwf	fsr2l,f,c
  7795  001056  0100               	movlb	0	; () banked
  7796  001058  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7797  00105A  22DA               	addwfc	fsr2h,f,c
  7798  00105C  0E07               	movlw	7
  7799  00105E  6EDF               	movwf	indf2,c
  7800  001060  0012               	return	
  7801  001062                     i2l3259:
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;my_i2c.c: 129: ic_ptr->status = 0x6;
  7805  001062  0100               	movlb	0	; () banked
  7806  001064  EE20 F01F          	lfsr	2,31
  7807  001068  0100               	movlb	0	; () banked
  7808  00106A  51D0               	movf	_ic_ptr& (0+255),w,b
  7809  00106C  26D9               	addwf	fsr2l,f,c
  7810  00106E  0100               	movlb	0	; () banked
  7811  001070  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7812  001072  22DA               	addwfc	fsr2h,f,c
  7813  001074  0E06               	movlw	6
  7814  001076  6EDF               	movwf	indf2,c
  7815  001078  0012               	return	
  7816  00107A                     __end_of_handle_start:
  7817                           	opt stack 0
  7818                           pclatu	equ	0xFFB
  7819                           pclath	equ	0xFFA
  7820                           tblptru	equ	0xFF8
  7821                           tblptrh	equ	0xFF7
  7822                           tblptrl	equ	0xFF6
  7823                           tablat	equ	0xFF5
  7824                           prodh	equ	0xFF4
  7825                           prodl	equ	0xFF3
  7826                           intcon	equ	0xFF2
  7827                           postinc0	equ	0xFEE
  7828                           fsr0h	equ	0xFEA
  7829                           fsr0l	equ	0xFE9
  7830                           wreg	equ	0xFE8
  7831                           indf1	equ	0xFE7
  7832                           postdec1	equ	0xFE5
  7833                           fsr1h	equ	0xFE2
  7834                           fsr1l	equ	0xFE1
  7835                           bsr	equ	0xFE0
  7836                           indf2	equ	0xFDF
  7837                           postinc2	equ	0xFDE
  7838                           postdec2	equ	0xFDD
  7839                           fsr2h	equ	0xFDA
  7840                           fsr2l	equ	0xFD9
  7841                           status	equ	0xFD8
  7842                           
  7843 ;; *************** function _ToMainHigh_sendmsg *****************
  7844 ;; Defined at:
  7845 ;;		line 126 in file "../src/messages.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;  length          1    wreg     unsigned char 
  7848 ;;  msgtype         1   15[BANK0 ] unsigned char 
  7849 ;;  data            2   16[BANK0 ] PTR void 
  7850 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(65), 
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;  length          1   18[BANK0 ] unsigned char 
  7853 ;; Return value:  Size  Location     Type
  7854 ;;                  1    wreg      char 
  7855 ;; Registers used:
  7856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7857 ;; Tracked objects:
  7858 ;;		On entry : 0/0
  7859 ;;		On exit  : 0/0
  7860 ;;		Unchanged: 0/0
  7861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7862 ;;      Params:         0       3       0       0       0
  7863 ;;      Locals:         0       1       0       0       0
  7864 ;;      Temps:          0       0       0       0       0
  7865 ;;      Totals:         0       4       0       0       0
  7866 ;;Total ram usage:        4 bytes
  7867 ;; Hardware stack levels used:    1
  7868 ;; Hardware stack levels required when called:    2
  7869 ;; This function calls:
  7870 ;;		i2_send_msg
  7871 ;; This function is called by:
  7872 ;;		_i2c_slave_int_handler
  7873 ;;		_i2c_master_int_handler
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           	psect	text47
  7878  0019AA                     __ptext47:
  7879                           	opt stack 0
  7880  0019AA                     _ToMainHigh_sendmsg:
  7881                           	opt stack 16
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;incstack = 0
  7885                           ;ToMainHigh_sendmsg@length stored from wreg
  7886  0019AA  CFE8 F092          	movff	wreg,ToMainHigh_sendmsg@length
  7887                           
  7888                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7889                           ;	Return value of _ToMainHigh_sendmsg is never used
  7890  0019AE  0102               	movlb	2	; () banked
  7891  0019B0  0E02               	movlw	high _ToMainHigh_MQ
  7892  0019B2  0100               	movlb	0	; () banked
  7893  0019B4  0100               	movlb	0	; () banked
  7894  0019B6  6F85               	movwf	(i2send_msg@qptr+1)& (0+255),b
  7895  0019B8  0102               	movlb	2	; () banked
  7896  0019BA  0E7E               	movlw	low _ToMainHigh_MQ
  7897  0019BC  0100               	movlb	0	; () banked
  7898  0019BE  0100               	movlb	0	; () banked
  7899  0019C0  6F84               	movwf	i2send_msg@qptr& (0+255),b
  7900  0019C2  C092  F086         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7901  0019C6  C08F  F087         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7902  0019CA  0100               	movlb	0	; () banked
  7903  0019CC  0100               	movlb	0	; () banked
  7904  0019CE  C091  F089         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7905  0019D2  0100               	movlb	0	; () banked
  7906  0019D4  0100               	movlb	0	; () banked
  7907  0019D6  C090  F088         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7908  0019DA  ECE4  F006         	call	i2_send_msg	;wreg free
  7909  0019DE  0012               	return	
  7910  0019E0                     __end_of_ToMainHigh_sendmsg:
  7911                           	opt stack 0
  7912                           pclatu	equ	0xFFB
  7913                           pclath	equ	0xFFA
  7914                           tblptru	equ	0xFF8
  7915                           tblptrh	equ	0xFF7
  7916                           tblptrl	equ	0xFF6
  7917                           tablat	equ	0xFF5
  7918                           prodh	equ	0xFF4
  7919                           prodl	equ	0xFF3
  7920                           intcon	equ	0xFF2
  7921                           postinc0	equ	0xFEE
  7922                           fsr0h	equ	0xFEA
  7923                           fsr0l	equ	0xFE9
  7924                           wreg	equ	0xFE8
  7925                           indf1	equ	0xFE7
  7926                           postdec1	equ	0xFE5
  7927                           fsr1h	equ	0xFE2
  7928                           fsr1l	equ	0xFE1
  7929                           bsr	equ	0xFE0
  7930                           indf2	equ	0xFDF
  7931                           postinc2	equ	0xFDE
  7932                           postdec2	equ	0xFDD
  7933                           fsr2h	equ	0xFDA
  7934                           fsr2l	equ	0xFD9
  7935                           status	equ	0xFD8
  7936                           
  7937 ;; *************** function i2_send_msg *****************
  7938 ;; Defined at:
  7939 ;;		line 24 in file "../src/messages.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;  qptr            2    4[BANK0 ] PTR struct __msg_queue
  7942 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  7943 ;;  length          1    6[BANK0 ] unsigned char 
  7944 ;;  msgtype         1    7[BANK0 ] unsigned char 
  7945 ;;  data            2    8[BANK0 ] PTR void 
  7946 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(65), 
  7947 ;;		 -> main@uc(5), 
  7948 ;; Auto vars:     Size  Location     Type
  7949 ;;  send_msg        2   13[BANK0 ] PTR struct __msg
  7950 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  7951 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  7952 ;;  send_msg        2   10[BANK0 ] unsigned int 
  7953 ;;  send_msg        1   12[BANK0 ] unsigned char 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      char 
  7956 ;; Registers used:
  7957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7963 ;;      Params:         0       6       0       0       0
  7964 ;;      Locals:         0       5       0       0       0
  7965 ;;      Temps:          1       0       0       0       0
  7966 ;;      Totals:         1      11       0       0       0
  7967 ;;Total ram usage:       12 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:    1
  7970 ;; This function calls:
  7971 ;;		i2_memcpy
  7972 ;; This function is called by:
  7973 ;;		_ToMainHigh_sendmsg
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977                           	psect	text48
  7978  000DC8                     __ptext48:
  7979                           	opt stack 0
  7980  000DC8                     i2_send_msg:
  7981                           	opt stack 16
  7982                           
  7983                           ;messages.c: 25: unsigned char slot;
  7984                           ;messages.c: 27: msg *qmsg;
  7985                           ;messages.c: 28: size_t tlength = length;
  7986                           
  7987                           ;incstack = 0
  7988  000DC8  0100               	movlb	0	; () banked
  7989  000DCA  0100               	movlb	0	; () banked
  7990  000DCC  C086  F08A         	movff	i2send_msg@length,i2send_msg@tlength
  7991  000DD0  0100               	movlb	0	; () banked
  7992  000DD2  0100               	movlb	0	; () banked
  7993  000DD4  6B8B               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7997  000DD6  0100               	movlb	0	; () banked
  7998  000DD8  EE20 F07C          	lfsr	2,124
  7999  000DDC  0100               	movlb	0	; () banked
  8000  000DDE  5184               	movf	i2send_msg@qptr& (0+255),w,b
  8001  000DE0  26D9               	addwf	fsr2l,f,c
  8002  000DE2  0100               	movlb	0	; () banked
  8003  000DE4  5185               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8004  000DE6  22DA               	addwfc	fsr2h,f,c
  8005  000DE8  50DF               	movf	indf2,w,c
  8006  000DEA  0100               	movlb	0	; () banked
  8007  000DEC  0100               	movlb	0	; () banked
  8008  000DEE  6F8C               	movwf	i2send_msg@slot& (0+255),b
  8009                           
  8010                           ; BSR set to: 0
  8011                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8012  000DF0  0100               	movlb	0	; () banked
  8013  000DF2  0100               	movlb	0	; () banked
  8014  000DF4  518C               	movf	i2send_msg@slot& (0+255),w,b
  8015  000DF6  0D1F               	mullw	31
  8016  000DF8  50F3               	movf	prodl,w,c
  8017  000DFA  0100               	movlb	0	; () banked
  8018  000DFC  0100               	movlb	0	; () banked
  8019  000DFE  2584               	addwf	i2send_msg@qptr& (0+255),w,b
  8020  000E00  0100               	movlb	0	; () banked
  8021  000E02  0100               	movlb	0	; () banked
  8022  000E04  6F8D               	movwf	i2send_msg@qmsg& (0+255),b
  8023  000E06  50F4               	movf	prodh,w,c
  8024  000E08  0100               	movlb	0	; () banked
  8025  000E0A  0100               	movlb	0	; () banked
  8026  000E0C  2185               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8027  000E0E  0100               	movlb	0	; () banked
  8028  000E10  6F8E               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;messages.c: 41: if (qmsg->full != 0) {
  8032  000E12  C08D  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8033  000E16  C08E  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8034  000E1A  50DF               	movf	indf2,w,c
  8035  000E1C  B4D8               	btfsc	status,2,c
  8036  000E1E  D002               	goto	i2l3499
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;messages.c: 42: return (-1);
  8040  000E20  0EFF               	movlw	255
  8041  000E22  0012               	return	
  8042  000E24                     i2l3499:
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;messages.c: 43: }
  8046                           ;messages.c: 46: qmsg->length = length;
  8047  000E24  0100               	movlb	0	; () banked
  8048  000E26  EE20 F001          	lfsr	2,1
  8049  000E2A  0100               	movlb	0	; () banked
  8050  000E2C  518D               	movf	i2send_msg@qmsg& (0+255),w,b
  8051  000E2E  26D9               	addwf	fsr2l,f,c
  8052  000E30  0100               	movlb	0	; () banked
  8053  000E32  518E               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8054  000E34  22DA               	addwfc	fsr2h,f,c
  8055  000E36  0100               	movlb	0	; () banked
  8056  000E38  C086  FFDF         	movff	i2send_msg@length,indf2
  8057                           
  8058                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8059  000E3C  0100               	movlb	0	; () banked
  8060  000E3E  EE20 F002          	lfsr	2,2
  8061  000E42  0100               	movlb	0	; () banked
  8062  000E44  518D               	movf	i2send_msg@qmsg& (0+255),w,b
  8063  000E46  26D9               	addwf	fsr2l,f,c
  8064  000E48  0100               	movlb	0	; () banked
  8065  000E4A  518E               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8066  000E4C  22DA               	addwfc	fsr2h,f,c
  8067  000E4E  0100               	movlb	0	; () banked
  8068  000E50  C087  FFDF         	movff	i2send_msg@msgtype,indf2
  8069                           
  8070                           ; BSR set to: 0
  8071                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8072  000E54  0E03               	movlw	3
  8073  000E56  0100               	movlb	0	; () banked
  8074  000E58  0100               	movlb	0	; () banked
  8075  000E5A  258D               	addwf	i2send_msg@qmsg& (0+255),w,b
  8076  000E5C  6E2D               	movwf	i2memcpy@d1,c
  8077  000E5E  0E00               	movlw	0
  8078  000E60  0100               	movlb	0	; () banked
  8079  000E62  0100               	movlb	0	; () banked
  8080  000E64  218E               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8081  000E66  6E2E               	movwf	i2memcpy@d1+1,c
  8082  000E68  0100               	movlb	0	; () banked
  8083  000E6A  C089  F030         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8084  000E6E  0100               	movlb	0	; () banked
  8085  000E70  C088  F02F         	movff	i2send_msg@data,i2memcpy@s1
  8086  000E74  C08A  F031         	movff	i2send_msg@tlength,i2memcpy@n
  8087  000E78  C08B  F032         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8088  000E7C  EC6E  F00B         	call	i2_memcpy	;wreg free
  8089                           
  8090                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8091  000E80  0100               	movlb	0	; () banked
  8092  000E82  EE20 F07C          	lfsr	2,124
  8093  000E86  0100               	movlb	0	; () banked
  8094  000E88  5184               	movf	i2send_msg@qptr& (0+255),w,b
  8095  000E8A  26D9               	addwf	fsr2l,f,c
  8096  000E8C  0100               	movlb	0	; () banked
  8097  000E8E  5185               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8098  000E90  22DA               	addwfc	fsr2h,f,c
  8099  000E92  0100               	movlb	0	; () banked
  8100  000E94  EE10 F07C          	lfsr	1,124
  8101  000E98  0100               	movlb	0	; () banked
  8102  000E9A  5184               	movf	i2send_msg@qptr& (0+255),w,b
  8103  000E9C  26E1               	addwf	fsr1l,f,c
  8104  000E9E  0100               	movlb	0	; () banked
  8105  000EA0  5185               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8106  000EA2  22E2               	addwfc	fsr1h,f,c
  8107  000EA4  50E7               	movf	indf1,w,c
  8108  000EA6  6E33               	movwf	??i2_send_msg& (0+255),c
  8109  000EA8  2833               	incf	??i2_send_msg,w,c
  8110  000EAA  0B03               	andlw	3
  8111  000EAC  6EDF               	movwf	indf2,c
  8112                           
  8113                           ; BSR set to: 0
  8114                           ;messages.c: 59: qmsg->full = 1;
  8115  000EAE  C08D  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8116  000EB2  C08E  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8117  000EB6  0E01               	movlw	1
  8118  000EB8  6EDF               	movwf	indf2,c
  8119                           
  8120                           ; BSR set to: 0
  8121                           ;messages.c: 60: return (1);
  8122  000EBA  0E01               	movlw	1
  8123  000EBC  0012               	return	
  8124  000EBE                     __end_ofi2_send_msg:
  8125                           	opt stack 0
  8126                           pclatu	equ	0xFFB
  8127                           pclath	equ	0xFFA
  8128                           tblptru	equ	0xFF8
  8129                           tblptrh	equ	0xFF7
  8130                           tblptrl	equ	0xFF6
  8131                           tablat	equ	0xFF5
  8132                           prodh	equ	0xFF4
  8133                           prodl	equ	0xFF3
  8134                           intcon	equ	0xFF2
  8135                           postinc0	equ	0xFEE
  8136                           fsr0h	equ	0xFEA
  8137                           fsr0l	equ	0xFE9
  8138                           wreg	equ	0xFE8
  8139                           indf1	equ	0xFE7
  8140                           postdec1	equ	0xFE5
  8141                           fsr1h	equ	0xFE2
  8142                           fsr1l	equ	0xFE1
  8143                           bsr	equ	0xFE0
  8144                           indf2	equ	0xFDF
  8145                           postinc2	equ	0xFDE
  8146                           postdec2	equ	0xFDD
  8147                           fsr2h	equ	0xFDA
  8148                           fsr2l	equ	0xFD9
  8149                           status	equ	0xFD8
  8150                           
  8151 ;; *************** function i2_memcpy *****************
  8152 ;; Defined at:
  8153 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;  d1              2   44[COMRAM] PTR void 
  8156 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  8157 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  8158 ;;		 -> main@msgbuffer(29), 
  8159 ;;  s1              2   46[COMRAM] PTR const void 
  8160 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  8161 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  8162 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  8163 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(65), 
  8164 ;;		 -> main@uc(5), 
  8165 ;;  n               2   48[COMRAM] unsigned int 
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;  memcpy          2    2[BANK0 ] PTR const unsigned char 
  8168 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  8169 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  8170 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  8171 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(65), 
  8172 ;;		 -> main@uc(5), 
  8173 ;;  memcpy          2    0[BANK0 ] PTR unsigned char 
  8174 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  8175 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  8176 ;;		 -> main@msgbuffer(29), 
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  2   44[COMRAM] PTR void 
  8179 ;; Registers used:
  8180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8181 ;; Tracked objects:
  8182 ;;		On entry : 0/0
  8183 ;;		On exit  : 0/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8186 ;;      Params:         6       0       0       0       0
  8187 ;;      Locals:         0       4       0       0       0
  8188 ;;      Temps:          0       0       0       0       0
  8189 ;;      Totals:         6       4       0       0       0
  8190 ;;Total ram usage:       10 bytes
  8191 ;; Hardware stack levels used:    1
  8192 ;; This function calls:
  8193 ;;		Nothing
  8194 ;; This function is called by:
  8195 ;;		i2_send_msg
  8196 ;; This function uses a non-reentrant model
  8197 ;;
  8198                           
  8199                           	psect	text49
  8200  0016DC                     __ptext49:
  8201                           	opt stack 0
  8202  0016DC                     i2_memcpy:
  8203                           	opt stack 16
  8204                           
  8205                           ; BSR set to: 0
  8206                           ;incstack = 0
  8207  0016DC  0100               	movlb	0	; () banked
  8208  0016DE  C030  F083         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8209  0016E2  0100               	movlb	0	; () banked
  8210  0016E4  C02F  F082         	movff	i2memcpy@s1,i2memcpy@s
  8211  0016E8  0100               	movlb	0	; () banked
  8212  0016EA  C02E  F081         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8213  0016EE  0100               	movlb	0	; () banked
  8214  0016F0  C02D  F080         	movff	i2memcpy@d1,i2memcpy@d
  8215  0016F4  D012               	goto	i2l3529
  8216  0016F6                     i2l3523:
  8217  0016F6  C082  FFD9         	movff	i2memcpy@s,fsr2l
  8218  0016FA  C083  FFDA         	movff	i2memcpy@s+1,fsr2h
  8219  0016FE  C080  FFE1         	movff	i2memcpy@d,fsr1l
  8220  001702  C081  FFE2         	movff	i2memcpy@d+1,fsr1h
  8221  001706  CFDF FFE7          	movff	indf2,indf1
  8222  00170A  0100               	movlb	0	; () banked
  8223  00170C  0100               	movlb	0	; () banked
  8224  00170E  4B82               	infsnz	i2memcpy@s& (0+255),f,b
  8225  001710  2B83               	incf	(i2memcpy@s+1)& (0+255),f,b
  8226                           
  8227                           ; BSR set to: 0
  8228  001712  0100               	movlb	0	; () banked
  8229  001714  0100               	movlb	0	; () banked
  8230  001716  4B80               	infsnz	i2memcpy@d& (0+255),f,b
  8231  001718  2B81               	incf	(i2memcpy@d+1)& (0+255),f,b
  8232  00171A                     i2l3529:
  8233                           
  8234                           ; BSR set to: 0
  8235  00171A  0631               	decf	i2memcpy@n,f,c
  8236  00171C  A0D8               	btfss	status,0,c
  8237  00171E  0632               	decf	i2memcpy@n+1,f,c
  8238  001720  2831               	incf	i2memcpy@n& (0+255),w,c
  8239  001722  B4D8               	btfsc	status,2,c
  8240  001724  2832               	incf	(i2memcpy@n+1)& (0+255),w,c
  8241  001726  B4D8               	btfsc	status,2,c
  8242                           
  8243                           ;	Return value of i2_memcpy is never used
  8244  001728  0012               	return	
  8245  00172A  D7E5               	goto	i2l3523
  8246  00172C                     __end_ofi2_memcpy:
  8247                           	opt stack 0
  8248                           pclatu	equ	0xFFB
  8249                           pclath	equ	0xFFA
  8250                           tblptru	equ	0xFF8
  8251                           tblptrh	equ	0xFF7
  8252                           tblptrl	equ	0xFF6
  8253                           tablat	equ	0xFF5
  8254                           prodh	equ	0xFF4
  8255                           prodl	equ	0xFF3
  8256                           intcon	equ	0xFF2
  8257                           postinc0	equ	0xFEE
  8258                           fsr0h	equ	0xFEA
  8259                           fsr0l	equ	0xFE9
  8260                           wreg	equ	0xFE8
  8261                           indf1	equ	0xFE7
  8262                           postdec1	equ	0xFE5
  8263                           fsr1h	equ	0xFE2
  8264                           fsr1l	equ	0xFE1
  8265                           bsr	equ	0xFE0
  8266                           indf2	equ	0xFDF
  8267                           postinc2	equ	0xFDE
  8268                           postdec2	equ	0xFDD
  8269                           fsr2h	equ	0xFDA
  8270                           fsr2l	equ	0xFD9
  8271                           status	equ	0xFD8
  8272                           
  8273 ;; *************** function _SleepIfOkay *****************
  8274 ;; Defined at:
  8275 ;;		line 228 in file "../src/messages.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;		None
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;		None
  8280 ;; Return value:  Size  Location     Type
  8281 ;;		None               void
  8282 ;; Registers used:
  8283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8289 ;;      Params:         0       0       0       0       0
  8290 ;;      Locals:         0       0       0       0       0
  8291 ;;      Temps:          0       0       0       0       0
  8292 ;;      Totals:         0       0       0       0       0
  8293 ;;Total ram usage:        0 bytes
  8294 ;; Hardware stack levels used:    1
  8295 ;; Hardware stack levels required when called:    2
  8296 ;; This function calls:
  8297 ;;		_enter_sleep_mode
  8298 ;;		i2_check_msg
  8299 ;;		i2_in_high_int
  8300 ;;		i2_in_low_int
  8301 ;; This function is called by:
  8302 ;;		_InterruptHandlerHigh
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           	psect	text50
  8307  00172C                     __ptext50:
  8308                           	opt stack 0
  8309  00172C                     _SleepIfOkay:
  8310                           	opt stack 18
  8311                           
  8312                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8313                           
  8314                           ;incstack = 0
  8315  00172C  6650               	tstfsz	_MQ_Main_Willing_to_block,c
  8316  00172E  D001               	goto	i2l2207
  8317  001730  0012               	return	
  8318  001732                     i2l2207:
  8319                           
  8320                           ;messages.c: 232: }
  8321                           ;messages.c: 235: if (in_low_int()) {
  8322  001732  ECF0  F00C         	call	i2_in_low_int	;wreg free
  8323  001736  5030               	movf	?i2_in_low_int+1,w,c
  8324  001738  102F               	iorwf	?i2_in_low_int,w,c
  8325  00173A  A4D8               	btfss	status,2,c
  8326  00173C  0012               	return	
  8327                           
  8328                           ;messages.c: 237: }
  8329                           ;messages.c: 240: if (!in_high_int()) {
  8330                           
  8331                           ;messages.c: 236: return;
  8332  00173E  ECDC  F00D         	call	i2_in_high_int	;wreg free
  8333  001742  502E               	movf	?i2_in_high_int+1,w,c
  8334  001744  102D               	iorwf	?i2_in_high_int,w,c
  8335  001746  B4D8               	btfsc	status,2,c
  8336  001748  0012               	return	
  8337                           
  8338                           ;messages.c: 242: }
  8339                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8340                           
  8341                           ;messages.c: 241: return;
  8342  00174A  0102               	movlb	2	; () banked
  8343  00174C  0E02               	movlw	high _ToMainHigh_MQ
  8344  00174E  6E2E               	movwf	i2check_msg@qptr+1,c
  8345  001750  0102               	movlb	2	; () banked
  8346  001752  0E7E               	movlw	low _ToMainHigh_MQ
  8347  001754  6E2D               	movwf	i2check_msg@qptr,c
  8348  001756  EC43  F00D         	call	i2_check_msg	;wreg free
  8349  00175A  0900               	iorlw	0
  8350  00175C  A4D8               	btfss	status,2,c
  8351  00175E  0012               	return	
  8352                           
  8353                           ;messages.c: 249: }
  8354                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8355                           
  8356                           ;messages.c: 248: return;
  8357  001760  0101               	movlb	1	; () banked
  8358  001762  0E01               	movlw	high _ToMainLow_MQ
  8359  001764  6E2E               	movwf	i2check_msg@qptr+1,c
  8360  001766  0101               	movlb	1	; () banked
  8361  001768  0E00               	movlw	low _ToMainLow_MQ
  8362  00176A  6E2D               	movwf	i2check_msg@qptr,c
  8363  00176C  EC43  F00D         	call	i2_check_msg	;wreg free
  8364  001770  0900               	iorlw	0
  8365  001772  B4D8               	btfsc	status,2,c
  8366                           
  8367                           ;messages.c: 252: }
  8368                           ;messages.c: 253: enter_sleep_mode();
  8369                           
  8370                           ;messages.c: 251: return;
  8371  001774  ECE9  F00D         	call	_enter_sleep_mode	;wreg free
  8372  001778  0012               	return	
  8373  00177A                     __end_of_SleepIfOkay:
  8374                           	opt stack 0
  8375                           pclatu	equ	0xFFB
  8376                           pclath	equ	0xFFA
  8377                           tblptru	equ	0xFF8
  8378                           tblptrh	equ	0xFF7
  8379                           tblptrl	equ	0xFF6
  8380                           tablat	equ	0xFF5
  8381                           prodh	equ	0xFF4
  8382                           prodl	equ	0xFF3
  8383                           intcon	equ	0xFF2
  8384                           postinc0	equ	0xFEE
  8385                           fsr0h	equ	0xFEA
  8386                           fsr0l	equ	0xFE9
  8387                           wreg	equ	0xFE8
  8388                           indf1	equ	0xFE7
  8389                           postdec1	equ	0xFE5
  8390                           fsr1h	equ	0xFE2
  8391                           fsr1l	equ	0xFE1
  8392                           bsr	equ	0xFE0
  8393                           indf2	equ	0xFDF
  8394                           postinc2	equ	0xFDE
  8395                           postdec2	equ	0xFDD
  8396                           fsr2h	equ	0xFDA
  8397                           fsr2l	equ	0xFD9
  8398                           status	equ	0xFD8
  8399                           
  8400 ;; *************** function i2_in_low_int *****************
  8401 ;; Defined at:
  8402 ;;		line 31 in file "../src/interrupts.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;		None
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;		None
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  2   46[COMRAM] int 
  8409 ;; Registers used:
  8410 ;;		wreg, status,2, status,0, cstack
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8416 ;;      Params:         2       0       0       0       0
  8417 ;;      Locals:         0       0       0       0       0
  8418 ;;      Temps:          0       0       0       0       0
  8419 ;;      Totals:         2       0       0       0       0
  8420 ;;Total ram usage:        2 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; Hardware stack levels required when called:    1
  8423 ;; This function calls:
  8424 ;;		i2_in_high_int
  8425 ;; This function is called by:
  8426 ;;		_SleepIfOkay
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           	psect	text51
  8431  0019E0                     __ptext51:
  8432                           	opt stack 0
  8433  0019E0                     i2_in_low_int:
  8434                           	opt stack 18
  8435                           
  8436                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  8437                           
  8438                           ;incstack = 0
  8439  0019E0  ACF2               	btfss	intcon,6,c	;volatile
  8440  0019E2  D005               	goto	i2l2907
  8441                           
  8442                           ;interrupts.c: 33: return (0);
  8443  0019E4  0E00               	movlw	0
  8444  0019E6  6E30               	movwf	?i2_in_low_int+1,c
  8445  0019E8  0E00               	movlw	0
  8446  0019EA  6E2F               	movwf	?i2_in_low_int,c
  8447  0019EC  0012               	return	
  8448  0019EE                     i2l2907:
  8449  0019EE  ECDC  F00D         	call	i2_in_high_int	;wreg free
  8450  0019F2  502E               	movf	?i2_in_high_int+1,w,c
  8451  0019F4  102D               	iorwf	?i2_in_high_int,w,c
  8452  0019F6  B4D8               	btfsc	status,2,c
  8453  0019F8  D005               	goto	i2l2915
  8454                           
  8455                           ;interrupts.c: 35: return (0);
  8456  0019FA  0E00               	movlw	0
  8457  0019FC  6E30               	movwf	?i2_in_low_int+1,c
  8458  0019FE  0E00               	movlw	0
  8459  001A00  6E2F               	movwf	?i2_in_low_int,c
  8460  001A02  0012               	return	
  8461  001A04                     i2l2915:
  8462                           
  8463                           ;interrupts.c: 37: return (1);
  8464  001A04  0E00               	movlw	0
  8465  001A06  6E30               	movwf	?i2_in_low_int+1,c
  8466  001A08  0E01               	movlw	1
  8467  001A0A  6E2F               	movwf	?i2_in_low_int,c
  8468  001A0C  0012               	return	
  8469  001A0E                     __end_ofi2_in_low_int:
  8470                           	opt stack 0
  8471                           pclatu	equ	0xFFB
  8472                           pclath	equ	0xFFA
  8473                           tblptru	equ	0xFF8
  8474                           tblptrh	equ	0xFF7
  8475                           tblptrl	equ	0xFF6
  8476                           tablat	equ	0xFF5
  8477                           prodh	equ	0xFF4
  8478                           prodl	equ	0xFF3
  8479                           intcon	equ	0xFF2
  8480                           postinc0	equ	0xFEE
  8481                           fsr0h	equ	0xFEA
  8482                           fsr0l	equ	0xFE9
  8483                           wreg	equ	0xFE8
  8484                           indf1	equ	0xFE7
  8485                           postdec1	equ	0xFE5
  8486                           fsr1h	equ	0xFE2
  8487                           fsr1l	equ	0xFE1
  8488                           bsr	equ	0xFE0
  8489                           indf2	equ	0xFDF
  8490                           postinc2	equ	0xFDE
  8491                           postdec2	equ	0xFDD
  8492                           fsr2h	equ	0xFDA
  8493                           fsr2l	equ	0xFD9
  8494                           status	equ	0xFD8
  8495                           
  8496 ;; *************** function i2_in_high_int *****************
  8497 ;; Defined at:
  8498 ;;		line 23 in file "../src/interrupts.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;		None
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;		None
  8503 ;; Return value:  Size  Location     Type
  8504 ;;                  2   44[COMRAM] int 
  8505 ;; Registers used:
  8506 ;;		wreg, status,2
  8507 ;; Tracked objects:
  8508 ;;		On entry : 0/0
  8509 ;;		On exit  : 0/0
  8510 ;;		Unchanged: 0/0
  8511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8512 ;;      Params:         2       0       0       0       0
  8513 ;;      Locals:         0       0       0       0       0
  8514 ;;      Temps:          0       0       0       0       0
  8515 ;;      Totals:         2       0       0       0       0
  8516 ;;Total ram usage:        2 bytes
  8517 ;; Hardware stack levels used:    1
  8518 ;; This function calls:
  8519 ;;		Nothing
  8520 ;; This function is called by:
  8521 ;;		_SleepIfOkay
  8522 ;;		i2_in_low_int
  8523 ;; This function uses a non-reentrant model
  8524 ;;
  8525                           
  8526                           	psect	text52
  8527  001BB8                     __ptext52:
  8528                           	opt stack 0
  8529  001BB8                     i2_in_high_int:
  8530                           	opt stack 18
  8531                           
  8532                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  8533                           
  8534                           ;incstack = 0
  8535  001BB8  0E00               	movlw	0
  8536  001BBA  AEF2               	btfss	intcon,7,c	;volatile
  8537  001BBC  0E01               	movlw	1
  8538  001BBE  6E2D               	movwf	?i2_in_high_int,c
  8539  001BC0  6A2E               	clrf	?i2_in_high_int+1,c
  8540  001BC2  0012               	return	
  8541  001BC4                     __end_ofi2_in_high_int:
  8542                           	opt stack 0
  8543                           pclatu	equ	0xFFB
  8544                           pclath	equ	0xFFA
  8545                           tblptru	equ	0xFF8
  8546                           tblptrh	equ	0xFF7
  8547                           tblptrl	equ	0xFF6
  8548                           tablat	equ	0xFF5
  8549                           prodh	equ	0xFF4
  8550                           prodl	equ	0xFF3
  8551                           intcon	equ	0xFF2
  8552                           postinc0	equ	0xFEE
  8553                           fsr0h	equ	0xFEA
  8554                           fsr0l	equ	0xFE9
  8555                           wreg	equ	0xFE8
  8556                           indf1	equ	0xFE7
  8557                           postdec1	equ	0xFE5
  8558                           fsr1h	equ	0xFE2
  8559                           fsr1l	equ	0xFE1
  8560                           bsr	equ	0xFE0
  8561                           indf2	equ	0xFDF
  8562                           postinc2	equ	0xFDE
  8563                           postdec2	equ	0xFDD
  8564                           fsr2h	equ	0xFDA
  8565                           fsr2l	equ	0xFD9
  8566                           status	equ	0xFD8
  8567                           
  8568 ;; *************** function i2_check_msg *****************
  8569 ;; Defined at:
  8570 ;;		line 222 in file "../src/messages.c"
  8571 ;; Parameters:    Size  Location     Type
  8572 ;;  qptr            2   44[COMRAM] PTR struct __msg_queue
  8573 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;		None
  8576 ;; Return value:  Size  Location     Type
  8577 ;;                  1    wreg      unsigned char 
  8578 ;; Registers used:
  8579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/0
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8585 ;;      Params:         2       0       0       0       0
  8586 ;;      Locals:         0       0       0       0       0
  8587 ;;      Temps:          1       0       0       0       0
  8588 ;;      Totals:         3       0       0       0       0
  8589 ;;Total ram usage:        3 bytes
  8590 ;; Hardware stack levels used:    1
  8591 ;; This function calls:
  8592 ;;		Nothing
  8593 ;; This function is called by:
  8594 ;;		_SleepIfOkay
  8595 ;; This function uses a non-reentrant model
  8596 ;;
  8597                           
  8598                           	psect	text53
  8599  001A86                     __ptext53:
  8600                           	opt stack 0
  8601  001A86                     i2_check_msg:
  8602                           	opt stack 19
  8603                           
  8604                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8605                           
  8606                           ;incstack = 0
  8607  001A86  EE20 F07D          	lfsr	2,125
  8608  001A8A  502D               	movf	i2check_msg@qptr,w,c
  8609  001A8C  26D9               	addwf	fsr2l,f,c
  8610  001A8E  502E               	movf	i2check_msg@qptr+1,w,c
  8611  001A90  22DA               	addwfc	fsr2h,f,c
  8612  001A92  50DF               	movf	indf2,w,c
  8613  001A94  6E2F               	movwf	??i2_check_msg& (0+255),c
  8614  001A96  502F               	movf	??i2_check_msg,w,c
  8615  001A98  0D1F               	mullw	31
  8616  001A9A  50F3               	movf	prodl,w,c
  8617  001A9C  242D               	addwf	i2check_msg@qptr,w,c
  8618  001A9E  6ED9               	movwf	fsr2l,c
  8619  001AA0  50F4               	movf	prodh,w,c
  8620  001AA2  202E               	addwfc	i2check_msg@qptr+1,w,c
  8621  001AA4  6EDA               	movwf	fsr2h,c
  8622  001AA6  50DF               	movf	indf2,w,c
  8623  001AA8  0012               	return	
  8624  001AAA                     __end_ofi2_check_msg:
  8625                           	opt stack 0
  8626                           pclatu	equ	0xFFB
  8627                           pclath	equ	0xFFA
  8628                           tblptru	equ	0xFF8
  8629                           tblptrh	equ	0xFF7
  8630                           tblptrl	equ	0xFF6
  8631                           tablat	equ	0xFF5
  8632                           prodh	equ	0xFF4
  8633                           prodl	equ	0xFF3
  8634                           intcon	equ	0xFF2
  8635                           postinc0	equ	0xFEE
  8636                           fsr0h	equ	0xFEA
  8637                           fsr0l	equ	0xFE9
  8638                           wreg	equ	0xFE8
  8639                           indf1	equ	0xFE7
  8640                           postdec1	equ	0xFE5
  8641                           fsr1h	equ	0xFE2
  8642                           fsr1l	equ	0xFE1
  8643                           bsr	equ	0xFE0
  8644                           indf2	equ	0xFDF
  8645                           postinc2	equ	0xFDE
  8646                           postdec2	equ	0xFDD
  8647                           fsr2h	equ	0xFDA
  8648                           fsr2l	equ	0xFD9
  8649                           status	equ	0xFD8
  8650                           
  8651 ;; *************** function _enter_sleep_mode *****************
  8652 ;; Defined at:
  8653 ;;		line 202 in file "../src/messages.c"
  8654 ;; Parameters:    Size  Location     Type
  8655 ;;		None
  8656 ;; Auto vars:     Size  Location     Type
  8657 ;;		None
  8658 ;; Return value:  Size  Location     Type
  8659 ;;		None               void
  8660 ;; Registers used:
  8661 ;;		None
  8662 ;; Tracked objects:
  8663 ;;		On entry : 0/0
  8664 ;;		On exit  : 0/0
  8665 ;;		Unchanged: 0/0
  8666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8667 ;;      Params:         0       0       0       0       0
  8668 ;;      Locals:         0       0       0       0       0
  8669 ;;      Temps:          0       0       0       0       0
  8670 ;;      Totals:         0       0       0       0       0
  8671 ;;Total ram usage:        0 bytes
  8672 ;; Hardware stack levels used:    1
  8673 ;; This function calls:
  8674 ;;		Nothing
  8675 ;; This function is called by:
  8676 ;;		_SleepIfOkay
  8677 ;; This function uses a non-reentrant model
  8678 ;;
  8679                           
  8680                           	psect	text54
  8681  001BD2                     __ptext54:
  8682                           	opt stack 0
  8683  001BD2                     _enter_sleep_mode:
  8684                           	opt stack 19
  8685                           
  8686                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8687                           
  8688                           ;incstack = 0
  8689  001BD2  8ED3               	bsf	4051,7,c	;volatile
  8690  001BD4  0003               	sleep		;# 
  8691  001BD6  0012               	return	
  8692  001BD8                     __end_of_enter_sleep_mode:
  8693                           	opt stack 0
  8694  0000                     pclatu	equ	0xFFB
  8695                           pclath	equ	0xFFA
  8696                           tblptru	equ	0xFF8
  8697                           tblptrh	equ	0xFF7
  8698                           tblptrl	equ	0xFF6
  8699                           tablat	equ	0xFF5
  8700                           prodh	equ	0xFF4
  8701                           prodl	equ	0xFF3
  8702                           intcon	equ	0xFF2
  8703                           postinc0	equ	0xFEE
  8704                           fsr0h	equ	0xFEA
  8705                           fsr0l	equ	0xFE9
  8706                           wreg	equ	0xFE8
  8707                           indf1	equ	0xFE7
  8708                           postdec1	equ	0xFE5
  8709                           fsr1h	equ	0xFE2
  8710                           fsr1l	equ	0xFE1
  8711                           bsr	equ	0xFE0
  8712                           indf2	equ	0xFDF
  8713                           postinc2	equ	0xFDE
  8714                           postdec2	equ	0xFDD
  8715                           fsr2h	equ	0xFDA
  8716                           fsr2l	equ	0xFD9
  8717                           status	equ	0xFD8
  8718                           pclatu	equ	0xFFB
  8719                           pclath	equ	0xFFA
  8720                           tblptru	equ	0xFF8
  8721                           tblptrh	equ	0xFF7
  8722                           tblptrl	equ	0xFF6
  8723                           tablat	equ	0xFF5
  8724                           prodh	equ	0xFF4
  8725                           prodl	equ	0xFF3
  8726                           intcon	equ	0xFF2
  8727                           postinc0	equ	0xFEE
  8728                           fsr0h	equ	0xFEA
  8729                           fsr0l	equ	0xFE9
  8730                           wreg	equ	0xFE8
  8731                           indf1	equ	0xFE7
  8732                           postdec1	equ	0xFE5
  8733                           fsr1h	equ	0xFE2
  8734                           fsr1l	equ	0xFE1
  8735                           bsr	equ	0xFE0
  8736                           indf2	equ	0xFDF
  8737                           postinc2	equ	0xFDE
  8738                           postdec2	equ	0xFDD
  8739                           fsr2h	equ	0xFDA
  8740                           fsr2l	equ	0xFD9
  8741                           status	equ	0xFD8
  8742                           
  8743                           	psect	rparam
  8744  0000                     pclatu	equ	0xFFB
  8745                           pclath	equ	0xFFA
  8746                           tblptru	equ	0xFF8
  8747                           tblptrh	equ	0xFF7
  8748                           tblptrl	equ	0xFF6
  8749                           tablat	equ	0xFF5
  8750                           prodh	equ	0xFF4
  8751                           prodl	equ	0xFF3
  8752                           intcon	equ	0xFF2
  8753                           postinc0	equ	0xFEE
  8754                           fsr0h	equ	0xFEA
  8755                           fsr0l	equ	0xFE9
  8756                           wreg	equ	0xFE8
  8757                           indf1	equ	0xFE7
  8758                           postdec1	equ	0xFE5
  8759                           fsr1h	equ	0xFE2
  8760                           fsr1l	equ	0xFE1
  8761                           bsr	equ	0xFE0
  8762                           indf2	equ	0xFDF
  8763                           postinc2	equ	0xFDE
  8764                           postdec2	equ	0xFDD
  8765                           fsr2h	equ	0xFDA
  8766                           fsr2l	equ	0xFD9
  8767                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         534
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     51      83
    BANK0           128     80      82
    BANK1           256    116     246
    BANK2           256      0     252
    BANK3           256      0     126

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 126
		 -> FromMainLow_MQ.queue(BANK2[124]), FromMainHigh_MQ.queue(BANK3[124]), ToMainHigh_MQ.queue(BANK2[124]), ToMainLow_MQ.queue(BANK1[124]), 
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 
		 -> main@msgbuffer(BANK1[29]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 126
		 -> FromMainLow_MQ.queue(BANK2[124]), FromMainHigh_MQ.queue(BANK3[124]), ToMainHigh_MQ.queue(BANK2[124]), ToMainLow_MQ.queue(BANK1[124]), 
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 
		 -> main@msgbuffer(BANK1[29]), 

    memcpy@s1	PTR const void  size(2) Largest target is 126
		 -> ToMainLow_MQ.data(BANK1[28]), ToMainHigh_MQ.data(BANK2[28]), FromMainLow_MQ.data(BANK2[28]), FromMainHigh_MQ.data(BANK3[28]), 
		 -> ToMainLow_MQ.queue.data(BANK1[28]), ToMainHigh_MQ.queue.data(BANK2[28]), FromMainHigh_MQ.queue.data(BANK3[28]), FromMainLow_MQ.queue.data(BANK2[28]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), 
		 -> ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), main@t1thread_data(BANK1[2]), main@ic(BANK1[65]), 
		 -> main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 126
		 -> ToMainLow_MQ.data(BANK1[28]), ToMainHigh_MQ.data(BANK2[28]), FromMainLow_MQ.data(BANK2[28]), FromMainHigh_MQ.data(BANK3[28]), 
		 -> ToMainLow_MQ.queue.data(BANK1[28]), ToMainHigh_MQ.queue.data(BANK2[28]), FromMainHigh_MQ.queue.data(BANK3[28]), FromMainLow_MQ.queue.data(BANK2[28]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), 
		 -> ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), main@t1thread_data(BANK1[2]), main@ic(BANK1[65]), 
		 -> main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 65
		 -> main@ic(BANK1[65]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 65
		 -> NULL(NULL[0]), main@ic(BANK1[65]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 29
		 -> main@msg2(BANK1[2]), main@msgbuffer(BANK1[29]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 65
		 -> NULL(NULL[0]), main@ic(BANK1[65]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 126
		 -> ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 65
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@ic(BANK1[65]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 126
		 -> FromMainLow_MQ.queue(BANK2[124]), FromMainHigh_MQ.queue(BANK3[124]), ToMainHigh_MQ.queue(BANK2[124]), ToMainLow_MQ.queue(BANK1[124]), 
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 126
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 

    sp__memcpy	PTR void  size(2) Largest target is 126
		 -> FromMainLow_MQ.queue(BANK2[124]), FromMainHigh_MQ.queue(BANK3[124]), ToMainHigh_MQ.queue(BANK2[124]), ToMainLow_MQ.queue(BANK1[124]), 
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 
		 -> main@msgbuffer(BANK1[29]), 

    send_msg@data	PTR void  size(2) Largest target is 65
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), main@ic(BANK1[65]), 
		 -> main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 126
		 -> FromMainLow_MQ.queue(BANK2[124]), FromMainHigh_MQ.queue(BANK3[124]), ToMainHigh_MQ.queue(BANK2[124]), ToMainLow_MQ.queue(BANK1[124]), 
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 126
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 126
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_WriteTimer0
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               116   116      0   11417
                                              2 BANK1    114   114      0
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     300
                                             46 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2710
                                             72 BANK0      8     0      8
                                              0 BANK1      2     2      0
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             46 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2021
                                             68 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1798
                                             56 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             46 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                             46 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             46 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             50 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             46 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             46 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      7     3      4     428
                                             46 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             46 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             52 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             50 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             48 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             46 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             46 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             46 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2332
                                             70 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2332
                                             70 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2109
                                             56 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             46 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      22
                                             46 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                             46 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             46 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             46 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     260
                                             46 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    2811
                                             27 COMRAM    17    17      0
                    _adc_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2723
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2700
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2347
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     796
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   0     0      0      88
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    4094
                                             32 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  0     0      0      88
                         _ConvertADC
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      88
                                             44 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _ConvertADC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    3770
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_slave_int_handler                              13    13      0    3770
                                             19 BANK0     13    13      0
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     3      2     158
                                             44 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      31
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    2960
                                             15 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2347
                                             50 COMRAM     1     1      0
                                              4 BANK0     11     5      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                             44 COMRAM     6     0      6
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             46 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             44 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
   _timer1_int_handler
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_slave_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
       _handle_start
       _start_i2c_slave_reply
   _timer0_int_handler
     _ConvertADC
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      7E      10       49.2%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      FC       8       98.4%
BITBANK1           100      0       0       5        0.0%
BANK1              100     74      F6       6       96.1%
BITBANK0            80      0       0       3        0.0%
BANK0               80     50      52       4       64.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     33      53       1       65.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     315      11        0.0%
DATA                 0      0     315      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sun Feb 23 20:48:28 2014

                  main@uthread_data 01A4            _MQ_Main_Willing_to_block 0050  
                       _SSPSTATbits 000FC7           __end_of_ToMainLow_recvmsg 1846  
                                bsr 000FE0           __end_of_ToMainLow_sendmsg 1A86  
                      __CFG_CP0$OFF 000000                                 l121 08A8  
                               l123 08EA                                 l442 135C  
                               l522 11F4                                 l461 1A32  
                               l462 1A34                                 l526 1214  
                               l527 1216                                 l528 1224  
                               l529 1226                                 l485 1920  
                               l487 1938                                 l488 193A  
                               l755 1B2C                __size_of_WriteTimer0 0012  
              __size_of_WriteTimer1 0012                      _FromMainLow_MQ 0200  
                               prod 000FF3                                 wreg 000FE8  
                      __CFG_IESO$ON 000000                        ?_in_high_int 00AE  
                  ??_init_uart_recv 00B0                                l1067 12D2  
                              l2401 11F6                                l3211 0CC0  
                              l2171 17B0                                l2163 178E  
                              l3131 0A36                                l3107 0856  
                              l3125 0992                                l3109 08AE  
                              l3117 0930                                l3127 09E4  
                              l3119 0954                                l2353 1922  
                              l2185 17F4                                l3161 0D20  
                              l2515 14A8                                l3181 166A  
                              l2453 1400                                l3175 1646  
                              l2393 11E0                                l2465 1458  
                              l3195 0BFA                                l2459 142C  
                              l2475 0A6C                                l3099 0814  
                              l2479 0AF0                                l3483 12BE  
                              l3475 1270                                l3477 1282  
                              l3479 128A                                _LATA 000F89  
                              _LATB 000F8A                                u2617 1B2E  
                              i1l52 007A                     _FromMainHigh_MQ 0300  
                     __CFG_FCMEN$ON 000000              ?_block_on_To_msgqueues 0001  
                              _main 0744                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr0l 000FE9  
                              fsr2h 000FDA                                indf1 000FE7  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                         main@msgtype 01B0  
                        i1_send_msg 107A                                pclat 000FFA  
                       i2_check_msg 1A86                                prodh 000FF4  
                              prodl 000FF3               handle_start@data_read 002D  
                              start 00C0                       __CFG_FOSC2$ON 000000  
                  ?_adc_int_handler 0001                          i2_send_msg 0DC8  
         ToMainHigh_recvmsg@msgtype 00C6                      send_msg@length 00BA  
                   __end_of_OpenADC 1360         __size_of_timer0_int_handler 0012  
           ??_i2c_slave_int_handler 0093                         _Delay1KTCYx 1B28  
                             ?_main 0001                               _T0CON 000FD5  
                             _T1CON 000FCD                     __end_of___lwmod 12DC  
                        i1memcpy@d1 0001                               i1l540 1B18  
                             i2l312 0526                               i2l314 018C  
                             i2l340 0498                               i2l332 0360  
                             i2l318 01D0                               i2l346 0538  
                             i2l277 102E                          i1memcpy@s1 0003  
                             _RCREG 000FAE                               _RCSTA 000FAB  
                             _TMR0H 000FD7                               _TMR1H 000FCF  
                             _TMR0L 000FD6                               _TMR1L 000FCE  
                             _SPBRG 000FAF                               _PORTA 000F80  
                             _TRISA 000F92                               _TRISB 000F93  
                             _TXSTA 000FAC                          i2memcpy@d1 002D  
                        i2memcpy@s1 002F                        ?_init_queues 0001  
         __size_of_enter_sleep_mode 0006                     __end_of_in_main 1804  
        ToMainLow_recvmsg@maxlength 00CA             timer0_lthread@msgbuffer 00B4  
                        _ConvertADC 1BDC             i2c_configure_slave@addr 00AE  
                             tablat 000FF5                               status 000FD8  
                  __end_ofi1_memcpy 18C8                    __end_ofi2_memcpy 172C  
                   __initialization 1682                        __end_of_main 0A50  
       __size_of_timer1_int_handler 000E          __size_of_ToMainLow_recvmsg 0042  
        __size_of_ToMainLow_sendmsg 0026               __size_ofi2_in_low_int 002E  
     __size_of_FromMainHigh_sendmsg 0036                              ??_main 0180  
                   send_msg@msgtype 00BB                       __activetblptr 000002  
                   send_msg@tlength 00BF                          _SetChanADC 1ACC  
              __end_of_handle_start 107A                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADCON2 000FC0  
                            _ADRESH 000FC4             ??_uart_recv_int_handler 001B  
                            i1l1237 1AB6                              i1l3513 189A  
                            i1l3519 18B6                              i1l3543 10B2  
                            i1l3571 11A0                              i2l2207 1732  
                            i1l3583 0066                              i2l3301 0234  
                            i2l3045 13A4                              i1l3589 0070  
                            i2l3311 0270                              i2l3039 139A  
                            i2l3241 0F4E                          _OpenTimer0 1A0E  
                        _OpenTimer1 1906                              i2l3237 0EDA  
                            i2l3341 03D4                              i2l3317 0288  
                    __CFG_WDTEN$OFF 000000                              i2l3343 0416  
                            i2l3319 02C8                              i2l3257 104A  
                            i2l3409 0732                              i2l3281 0182  
                            i2l3523 16F6                              i2l3259 1062  
                            i2l3347 0428                              i2l3275 016A  
                            i2l3381 059C                              i2l3375 053C  
                            i2l3529 171A                              i2l3369 04FA  
                            i2l2915 1A04                              i2l2907 19EE  
                            i2l3299 0208                              i2l3397 06DC  
                            i2l3389 0636                              i2l3499 0E24  
       __end_of_i2c_configure_slave 1A60                       ??_SleepIfOkay 0031  
                __size_of_ReadUSART 001E                              _OSCCON 000FD3  
                            _SPBRGH 000FB0                              _SSPADD 000FC8  
                            _SSPBUF 000FC9      __size_of_start_i2c_slave_reply 00F4  
                       ?i1_send_msg 000B       __end_of_start_i2c_slave_reply 0FB2  
                timer0_lthread@tptr 00AE                           ??_OpenADC 00B0  
                      i2_in_low_int 19E0                         ?i2_send_msg 0084  
                    __CFG_XINST$OFF 000000                  __size_of_OpenUSART 0092  
                   _i2c_int_handler 1BCC   i2c_slave_int_handler@data_written 009A  
                   _i2c_master_send 0A50                    OpenTimer0@config 00AE  
                            _ic_ptr 00D0                           ??___lwmod 00B2  
                     main@msgbuffer 0182                    __end_of_init_i2c 1624  
                  OpenTimer1@config 00AE                              _memcpy 1624  
                            clear_0 1688                              clear_1 1694  
                            clear_2 16A0                              clear_3 16AC  
                            _uc_ptr 0052                              main@ic 01B1  
                            main@uc 01AA                    __end_of_recv_msg 0CC4  
       start_i2c_slave_reply@length 0031                           ??_in_main 00B4  
                  __end_of_send_msg 0DC8                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                       init_queue@i 00B1            ToMainLow_recvmsg@msgtype 00C6  
              __size_of_in_high_int 0012                         ?_ConvertADC 0001  
                   __CFG_FOSC$HSPLL 000000                          __accesstop 0080  
           __end_of__initialization 16D2          __end_of_ToMainHigh_recvmsg 1888  
        __end_of_ToMainHigh_sendmsg 19E0         __end_of_init_timer1_lthread 1B62  
               __end_of_SleepIfOkay 177A                      __pcstackCOMRAM 0001  
                      __pidataBANK1 1BD8              __size_ofi2_in_high_int 000C  
                __size_of_check_msg 0036                   __end_of_ReadUSART 1B28  
                       ?_SetChanADC 0001                 __size_ofi1_send_msg 00AA  
                         ?i1_memcpy 0001       __size_of_InterruptHandlerHigh 13DA  
       __end_of_InterruptHandlerLow 00C0                           ?i2_memcpy 002D  
                     _ToMainHigh_MQ 027E                    _enter_sleep_mode 1BD2  
               __size_ofi2_send_msg 00F6                timer1_lthread@length 00CC  
                     ReadUSART@data 0001                   __end_of_OpenUSART 1252  
                     check_msg@qptr 00AE                timer1_lthread@retval 017F  
           ??_block_on_To_msgqueues 00B4                __size_of_init_queues 006E  
                        __pbssBANK1 0100                          __pbssBANK2 0200  
                        __pbssBANK3 0300                         ?_OpenTimer0 0001  
                       ?_OpenTimer1 0001                          __pnvCOMRAM 0052  
           __end_of_i2c_int_handler 1BD2                        ?i2_check_msg 002D  
           __end_of_i2c_master_send 0B8E                  timer1_lthread@tptr 00C8  
                 recv_msg@maxlength 00BA                     recv_msg@msgtype 00BB  
                   recv_msg@tlength 00C2               __size_of_handle_start 00C8  
                      ?_Delay1KTCYx 0001                    WriteTimer0@timer 002F  
                           ?_memcpy 00AE                    WriteTimer1@timer 0003  
                     ??_WriteTimer0 002F                       ??_WriteTimer1 0003  
               __size_of_ConvertADC 0004      __size_of_i2c_slave_int_handler 0680  
           __size_of_timer0_lthread 0012       __end_of_i2c_slave_int_handler 0744  
           __size_of_timer1_lthread 0072                          ??i1_memcpy 0007  
                        ??i2_memcpy 0033                    i1send_msg@length 000D  
                     i2_in_high_int 1BB8                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _SSPSTAT 000FC7  
                 __end_of_check_msg 19AA                           ?_init_i2c 00AE  
                       _SleepIfOkay 172C                           ?_recv_msg 00B8  
                           _OpenADC 12DC                          _in_low_int 177A  
                      _handle_start 0FB2                             __Hparam 0000  
               __size_of_SetChanADC 0020                           ?_send_msg 00B8  
                           __Lparam 0000          __end_of_timer0_int_handler 1B98  
                  init_uart_recv@uc 00AE                             ___lwmod 1252  
                   __CFG_STVREN$OFF 000000  i2c_slave_int_handler@overrun_error 009B  
                           __pcinit 1682                     __size_of_memcpy 005E  
          __size_of_adc_int_handler 0022                          _init_queue 1460  
                           __ramtop 0400                 __size_of_OpenTimer0 002A  
               __size_of_OpenTimer1 0038                             __ptext0 0744  
                           __ptext1 18C8                             __ptext2 14DA  
                           __ptext3 1252                             __ptext4 193E  
                           __ptext5 0CC4                             __ptext6 1B3E  
                           __ptext7 1AEC                             __ptext8 1B50  
                           __ptext9 154C                           _T0CONbits 000FD5  
                           _in_main 17C0                           _T1CONbits 000FCD  
               __end_of_WriteTimer0 1BAA                 __end_of_WriteTimer1 1B86  
                    ?i2_in_high_int 002D                      OpenADC@config2 00AE  
                           main@msg 019F                      __pintcode_body 1360  
              end_of_initialization 16D2             timer1_lthread@msgbuffer 00CE  
      __end_of_FromMainHigh_sendmsg 1974      __size_of_uart_recv_int_handler 009C  
        FromMainHigh_sendmsg@length 00C7                             memcpy@d 00B4  
                           memcpy@n 00B2                             memcpy@s 00B6  
     __end_of_uart_recv_int_handler 11C0                          ??_init_i2c 00B0  
                     __Lmediumconst 0000                             int_func 1360  
                      ??i1_send_msg 0011                       ?_uart_lthread 00AE  
           __size_of_init_uart_recv 001E                    ?_i2c_int_handler 0001  
                  ?_i2c_master_send 00AE                          ??_recv_msg 00BF  
                      ??i2_send_msg 0033                          ??_send_msg 00BE  
        __end_of_timer1_int_handler 1BB8                           _RCSTAbits 000FAB  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc2 000FDE  
         ToMainHigh_sendmsg@msgtype 008F                  __end_ofi1_send_msg 1124  
       FromMainHigh_sendmsg@msgtype 00C4                           _TRISCbits 000F94  
                __end_ofi2_send_msg 0EBE                        ??_ConvertADC 002D  
                    ??_uart_lthread 00B6                           _TXSTAbits 000FAC  
                        main@length 01AF                         ?_in_low_int 00B0  
             timer0_lthread@msgtype 00B0               _start_i2c_slave_reply 0EBE  
      __size_of_i2c_configure_slave 0028                __size_ofi2_check_msg 0024  
          __end_of_enter_sleep_mode 1BD8                  _ToMainHigh_recvmsg 1846  
                         i1memcpy@d 0007                  _ToMainHigh_sendmsg 19AA  
                         i1memcpy@n 0005                           i1memcpy@s 0009  
         i2c_master_send@recvlength 00AE                      _timer0_lthread 1B3E  
                       ?_init_queue 00AE                           i2memcpy@d 0080  
                       _WriteTimer0 1B98                         _WriteTimer1 1B74  
                         i2memcpy@n 0031                           i2memcpy@s 0082  
                __end_of_ConvertADC 1BE0                      _timer1_lthread 14DA  
                    __end_of_memcpy 1682                   _enable_interrupts 1BC4  
              __size_of_Delay1KTCYx 0016                        ??_SetChanADC 00AE  
         i2c_master_send@sendlength 00B4                 ?_ToMainHigh_recvmsg 00C6  
                   ??i2_in_high_int 002F                 ?_ToMainHigh_sendmsg 008F  
                ?_enable_interrupts 0001                 start_initialization 1682  
                     ??_in_high_int 00B0                           _ReadUSART 1B0A  
                 ??_adc_int_handler 0001                   __size_ofi1_memcpy 0040  
                 __size_ofi2_memcpy 0050           i2c_master_send@slave_addr 00B1  
               ??_enable_interrupts 00AE                        ??_OpenTimer0 00AE  
                      ??_OpenTimer1 00AE      __size_of_block_on_To_msgqueues 007E  
     __end_of_block_on_To_msgqueues 1460                           _OpenUSART 11C0  
      __end_of_InterruptHandlerHigh 13E2                          init_i2c@ic 00AE  
              ??_ToMainHigh_recvmsg 00CA                ??_ToMainHigh_sendmsg 0034  
                __end_of_SetChanADC 1AEC              __end_of_timer0_lthread 1B50  
                       __pdataBANK1 01F2              __end_of_timer1_lthread 154C  
         __end_of_enable_interrupts 1BCC                            ??_memcpy 00B4  
             timer1_lthread@msgtype 00CA                _FromMainHigh_sendmsg 193E  
      __size_of_init_timer1_lthread 0012                  __end_of_OpenTimer0 1A38  
                __end_of_OpenTimer1 193E                         __pbssCOMRAM 0034  
                        ?_ReadUSART 0001                       ??_init_queues 00B2  
                     __pcstackBANK0 0080                       __pcstackBANK1 017E  
               __size_of_in_low_int 0046            start_i2c_slave_reply@msg 002D  
                         _adcbuffer 0034                 __CFG_CCP2MX$DEFAULT 000000  
                   Delay1KTCYx@unit 00AE            ToMainLow_sendmsg@msgtype 0017  
      __size_of_InterruptHandlerLow 00A8      i2c_slave_int_handler@data_read 009F  
               __end_of_in_high_int 1B74                          ?_OpenUSART 00AE  
                      ?_SleepIfOkay 0001               ToMainLow_recvmsg@data 00C8  
                      _ToMainLow_MQ 0100                 __size_of_init_queue 007A  
                    _init_uart_recv 1AEC                           _check_msg 1974  
                         __pnvBANK0 00D0              ?_start_i2c_slave_reply 002D  
                 __size_of_init_i2c 006A                   OpenADC@portconfig 00AF  
                          ?_OpenADC 00AE                        recv_msg@data 00BD  
                      recv_msg@qmsg 00C4                        recv_msg@slot 00C1  
                      recv_msg@qptr 00B8                   __size_of_recv_msg 0136  
                         __pintcode 0008                   __size_of_send_msg 0104  
                   ?_timer0_lthread 00AE                            ?___lwmod 00AE  
                   ?_timer1_lthread 00C8               ?_FromMainHigh_sendmsg 00C4  
                       __pintcodelo 0018              ToMainHigh_recvmsg@data 00C8  
              __end_of_uart_lthread 1906                            ?_in_main 00B2  
                 WriteTimer0@timer0 002D                  _timer0_int_handler 1B86  
                 WriteTimer1@timer1 0001               _i2c_slave_int_handler 00C4  
               uart_lthread@msgtype 00B0      i2c_slave_int_handler@error_buf 0097  
             ToMainLow_sendmsg@data 0018                 ?_timer0_int_handler 0001  
                  uart_lthread@uptr 00AE      i2c_slave_int_handler@msg_ready 009E  
            __end_of_init_uart_recv 1B0A                 __end_of_init_queues 15BA  
       i2c_slave_int_handler@length 0095                       OpenADC@config 00B2  
                          _LATBbits 000F8A                     i2check_msg@qptr 002D  
                        ?_check_msg 00AE                            _IPR1bits 000F9F  
                          _PIE1bits 000F9D                       ?i2_in_low_int 002F  
                          _PIR1bits 000F9E              ToMainHigh_sendmsg@data 0090  
                          _RCONbits 000FD0                    __CFG_WDTPS$32768 000000  
                         main@F5204 01F2                           main@F5207 01F4  
              ??_timer0_int_handler 0031          __size_of_enable_interrupts 0008  
                 i1send_msg@msgtype 000E                   i1send_msg@tlength 0012  
                        _ADCON0bits 000FC2                timer0_lthread@length 00B2  
                _timer1_int_handler 1BAA                            i1_memcpy 1888  
              _InterruptHandlerHigh 0008                         ??_ReadUSART 0001  
                          i2_memcpy 16DC                timer0_lthread@msgval 00B6  
                       _in_high_int 1B62                        send_msg@data 00BC  
               _i2c_configure_slave 1A38                        send_msg@qmsg 00C2  
                      send_msg@slot 00C1                        send_msg@qptr 00B8  
             uart_lthread@msgbuffer 00B4                           copy_data0 16C6  
               ?_timer1_int_handler 0001                     ?_init_uart_recv 00AE  
                       ??_OpenUSART 00B0                     OpenUSART@config 00B3  
                    ??i2_in_low_int 0031               _uart_recv_int_handler 1124  
                      ??_in_low_int 00B2                            __Hrparam 0000  
                  __size_of_OpenADC 0084                ?_i2c_configure_slave 0001  
                          __Lrparam 0000                   ?_enter_sleep_mode 0001  
            ??_FromMainHigh_sendmsg 00C7                ??_timer1_int_handler 0005  
                   _adc_int_handler 1AAA            __size_of_i2c_int_handler 0006  
                ??_enter_sleep_mode 002D            __size_of_i2c_master_send 013E  
                  __size_of___lwmod 008A                        ??_init_queue 00B0  
                      ?_WriteTimer0 002D                        ?_WriteTimer1 0001  
          FromMainHigh_sendmsg@data 00C5             ToMainLow_sendmsg@length 001A  
            ?_i2c_slave_int_handler 0001                   main@t0thread_data 01A6  
             ?_InterruptHandlerHigh 0001                    __size_of_in_main 0044  
                 i2send_msg@msgtype 0087         ToMainHigh_recvmsg@maxlength 00CA  
                 i2send_msg@tlength 008A             init_timer1_lthread@tptr 00AE  
                       _init_queues 154C                  __end_of_in_low_int 17C0  
                          __ptext10 1460                            __ptext11 15BA  
                          __ptext20 1B28                            __ptext12 0A50  
                          __ptext21 1804                            __ptext13 1A38  
                          __ptext22 1846                            __ptext14 1BC4  
                          __ptext31 1124                            __ptext23 0B8E  
                          __ptext15 13E2                            __ptext40 1B86  
                          __ptext32 1A60                            __ptext24 1624  
                          __ptext16 17C0                            __ptext41 1B98  
                          __ptext33 107A                            __ptext25 1ACC  
                          __ptext17 177A                            __ptext50 172C  
                          __ptext42 1BDC                            __ptext34 1888  
                          __ptext26 11C0                            __ptext18 1B62  
                          __ptext51 19E0                            __ptext43 1BCC  
                          __ptext35 1B0A                            __ptext27 1906  
                          __ptext19 1974                            __ptext52 1BB8  
                          __ptext44 00C4                            __ptext36 1BAA  
                          __ptext28 1A0E                            __ptext53 1A86  
                          __ptext45 0EBE                            __ptext37 1B74  
                          __ptext29 12DC                            __ptext54 1BD2  
                          __ptext46 0FB2                            __ptext38 1AAA  
                          __ptext47 19AA                            __ptext48 0DC8  
                          __ptext49 16DC                      i1send_msg@data 000F  
                    i1send_msg@qmsg 0015                      i1send_msg@slot 0014  
                    i1send_msg@qptr 000B                  uart_lthread@length 00B2  
                          _init_i2c 15BA                 _init_timer1_lthread 1B50  
                     __size_of_main 030C                       ??i2_check_msg 002F  
                 main@t1thread_data 01A8                         ??_check_msg 00B0  
                __end_of_init_queue 14DA                __size_of_SleepIfOkay 004E  
                          _recv_msg 0B8E    i2c_slave_int_handler@msg_to_send 009D  
             ??_i2c_configure_slave 00AE                            _send_msg 0CC4  
                    init_queue@qptr 00AE               __size_of_uart_lthread 003E  
                     ??_Delay1KTCYx 00AE                            main@msg2 01A2  
               _InterruptHandlerLow 0018                ?_init_timer1_lthread 00AE  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
                    OpenUSART@spbrg 00AE                            memcpy@d1 00AE  
                          memcpy@s1 00B0               __end_ofi2_in_high_int 1BC4  
                  i2send_msg@length 0086                            intlevel1 0000  
                          intlevel2 0000                ?_InterruptHandlerLow 0001  
           ??_start_i2c_slave_reply 002F                    ___lwmod@dividend 00AE  
            ?_uart_recv_int_handler 0001                        _uart_lthread 18C8  
                 SetChanADC@channel 00AF               _block_on_To_msgqueues 13E2  
                     ?_handle_start 0001                    ??_timer0_lthread 00B6  
       __size_of_ToMainHigh_recvmsg 0042             __end_of_adc_int_handler 1ACC  
       __size_of_ToMainHigh_sendmsg 0036                          _OSCCONbits 000FD3  
                  ??_timer1_lthread 017E            ToMainHigh_sendmsg@length 0092  
               __end_ofi2_check_msg 1AAA               ??_init_timer1_lthread 00B0  
            ??_InterruptHandlerHigh 00A0                   _ToMainLow_recvmsg 1804  
                 _ToMainLow_sendmsg 1A60                  main@last_reg_recvd 01A1  
                   ___lwmod@divisor 00B0                __end_ofi2_in_low_int 1A0E  
                ?_ToMainLow_recvmsg 00C6                 __end_of_Delay1KTCYx 1B3E  
                 ??_i2c_int_handler 0034                     ___lwmod@counter 00B3  
                ?_ToMainLow_sendmsg 0017                   ??_i2c_master_send 00B2  
                i2c_master_send@msg 00AF                         _SSPCON1bits 000FC6  
                       _SSPCON2bits 000FC5                      i2send_msg@data 0088  
             ??_InterruptHandlerLow 001C                 ??_ToMainLow_recvmsg 00CA  
                    i2send_msg@qmsg 008D                      i2send_msg@slot 008C  
                    i2send_msg@qptr 0084                 ??_ToMainLow_sendmsg 001A  
     i2c_slave_int_handler@i2c_data 009C                      ??_handle_start 002D  
                      _USART_Status 0051  
