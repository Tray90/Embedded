

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Mar 03 23:11:05 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    76                           	psect	param0,global,class=BANK0,space=1,delta=1
    77  0000                     
    78                           	psect	idataCOMRAM
    79  0018DC                     __pidataCOMRAM:
    80                           	opt stack 0
    81                           
    82                           ;initializer for i2c_slave_int_handler@F5127
    83  0018DC  01                 	db	1
    84  0018DD  01                 	db	1
    85  0018DE  02                 	db	2
    86  0018DF  03                 	db	3
    87  0018E0  07                 	db	7
    88                           
    89                           ;initializer for i2c_slave_int_handler@F5129
    90  0018E1  02                 	db	2
    91  0018E2  03                 	db	3
    92  0018E3  04                 	db	4
    93  0018E4  09                 	db	9
    94  0018E5  00                 	db	0
    95                           
    96                           	psect	idataBANK1
    97  0018FE                     __pidataBANK1:
    98                           	opt stack 0
    99                           
   100                           ;initializer for main@F5211
   101  0018FE  01                 	db	1
   102  0018FF  02                 	db	2
   103  0000                     _ADCON0	set	4034
   104  0000                     _ADCON0bits	set	4034
   105  0000                     _ADCON1	set	4033
   106  0000                     _ADCON2	set	4032
   107  0000                     _ADRESH	set	4036
   108  0000                     _INTCONbits	set	4082
   109  0000                     _IPR1bits	set	3999
   110  0000                     _LATA	set	3977
   111  0000                     _LATB	set	3978
   112  0000                     _LATBbits	set	3978
   113  0000                     _OSCCON	set	4051
   114  0000                     _OSCCONbits	set	4051
   115  0000                     _OSCTUNEbits	set	3995
   116  0000                     _PIE1bits	set	3997
   117  0000                     _PIR1bits	set	3998
   118  0000                     _PORTA	set	3968
   119  0000                     _RCONbits	set	4048
   120  0000                     _RCREG	set	4014
   121  0000                     _RCSTA	set	4011
   122  0000                     _RCSTAbits	set	4011
   123  0000                     _SPBRG	set	4015
   124  0000                     _SPBRGH	set	4016
   125  0000                     _SSPADD	set	4040
   126  0000                     _SSPBUF	set	4041
   127  0000                     _SSPCON1	set	4038
   128  0000                     _SSPCON1bits	set	4038
   129  0000                     _SSPCON2	set	4037
   130  0000                     _SSPCON2bits	set	4037
   131  0000                     _SSPSTAT	set	4039
   132  0000                     _SSPSTATbits	set	4039
   133  0000                     _T0CON	set	4053
   134  0000                     _T0CONbits	set	4053
   135  0000                     _T1CON	set	4045
   136  0000                     _T1CONbits	set	4045
   137  0000                     _TMR0H	set	4055
   138  0000                     _TMR0L	set	4054
   139  0000                     _TMR1H	set	4047
   140  0000                     _TMR1L	set	4046
   141  0000                     _TRISA	set	3986
   142  0000                     _TRISB	set	3987
   143  0000                     _TRISC	set	3988
   144  0000                     _TRISCbits	set	3988
   145  0000                     _TXREG	set	4013
   146  0000                     _TXSTA	set	4012
   147  0000                     _TXSTAbits	set	4012
   148                           
   149                           	psect	nvCOMRAM
   150  000055                     __pnvCOMRAM:
   151                           	opt stack 0
   152  000055                     _uc_ptr:
   153                           	opt stack 0
   154  000055                     	ds	2
   155                           
   156                           	psect	nvBANK0
   157  0000D1                     __pnvBANK0:
   158                           	opt stack 0
   159  0000D1                     _ic_ptr:
   160                           	opt stack 0
   161  0000D1                     	ds	2
   162                           
   163                           ; #config settings
   164  0000                     
   165                           	psect	cinit
   166  0010F4                     __pcinit:
   167                           	opt stack 0
   168  0010F4                     start_initialization:
   169                           	opt stack 0
   170  0010F4                     __initialization:
   171                           	opt stack 0
   172                           
   173                           ; Clear objects allocated to BANK3 (126 bytes)
   174  0010F4  EE03  F000         	lfsr	0,__pbssBANK3
   175  0010F8  0E7E               	movlw	126
   176  0010FA                     clear_0:
   177  0010FA  6AEE               	clrf	postinc0,c
   178  0010FC  06E8               	decf	wreg,f,c
   179  0010FE  E1FD               	bnz	clear_0
   180                           
   181                           ; Clear objects allocated to BANK2 (252 bytes)
   182  001100  EE02  F000         	lfsr	0,__pbssBANK2
   183  001104  0EFC               	movlw	252
   184  001106                     clear_1:
   185  001106  6AEE               	clrf	postinc0,c
   186  001108  06E8               	decf	wreg,f,c
   187  00110A  E1FD               	bnz	clear_1
   188                           
   189                           ; Clear objects allocated to BANK1 (126 bytes)
   190  00110C  EE01  F000         	lfsr	0,__pbssBANK1
   191  001110  0E7E               	movlw	126
   192  001112                     clear_2:
   193  001112  6AEE               	clrf	postinc0,c
   194  001114  06E8               	decf	wreg,f,c
   195  001116  E1FD               	bnz	clear_2
   196                           
   197                           ; Clear objects allocated to COMRAM (30 bytes)
   198  001118  EE00  F02D         	lfsr	0,__pbssCOMRAM
   199  00111C  0E1E               	movlw	30
   200  00111E                     clear_3:
   201  00111E  6AEE               	clrf	postinc0,c
   202  001120  06E8               	decf	wreg,f,c
   203  001122  E1FD               	bnz	clear_3
   204                           
   205                           ; Initialize objects allocated to BANK1 (2 bytes)
   206                           ; load TBLPTR registers with __pidataBANK1
   207  001124  0EFE               	movlw	low __pidataBANK1
   208  001126  6EF6               	movwf	tblptrl,c
   209  001128  0E18               	movlw	high __pidataBANK1
   210  00112A  6EF7               	movwf	tblptrh,c
   211  00112C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   212  00112E  6EF8               	movwf	tblptru,c
   213  001130  0009               	tblrd		*+	;fetch initializer
   214  001132  CFF5 F1F4          	movff	tablat,__pdataBANK1
   215  001136  0009               	tblrd		*+	;fetch initializer
   216  001138  CFF5 F1F5          	movff	tablat,__pdataBANK1+1
   217                           
   218                           ; Initialize objects allocated to COMRAM (10 bytes)
   219                           ; load TBLPTR registers with __pidataCOMRAM
   220  00113C  0EDC               	movlw	low __pidataCOMRAM
   221  00113E  6EF6               	movwf	tblptrl,c
   222  001140  0E18               	movlw	high __pidataCOMRAM
   223  001142  6EF7               	movwf	tblptrh,c
   224  001144  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   225  001146  6EF8               	movwf	tblptru,c
   226  001148  EE00  F04B         	lfsr	0,__pdataCOMRAM
   227  00114C  EE10 F00A          	lfsr	1,10
   228  001150                     copy_data0:
   229  001150  0009               	tblrd		*+
   230  001152  CFF5 FFEE          	movff	tablat,postinc0
   231  001156  50E5               	movf	postdec1,w,c
   232  001158  50E1               	movf	fsr1l,w,c
   233  00115A  E1FA               	bnz	copy_data0
   234  00115C                     end_of_initialization:
   235                           	opt stack 0
   236  00115C                     __end_of__initialization:
   237                           	opt stack 0
   238  00115C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   239  00115E  6EF8               	movwf	tblptru,c
   240  001160  0100               	movlb	0
   241  001162  EF38  F002         	goto	_main	;jump to C main() function
   242                           tblptru	equ	0xFF8
   243                           tblptrh	equ	0xFF7
   244                           tblptrl	equ	0xFF6
   245                           tablat	equ	0xFF5
   246                           postinc0	equ	0xFEE
   247                           wreg	equ	0xFE8
   248                           postdec1	equ	0xFE5
   249                           fsr1l	equ	0xFE1
   250                           
   251                           	psect	bssCOMRAM
   252  00002D                     __pbssCOMRAM:
   253                           	opt stack 0
   254  00002D                     _adcbuffer:
   255                           	opt stack 0
   256  00002D                     	ds	28
   257  000049                     _MQ_Main_Willing_to_block:
   258                           	opt stack 0
   259  000049                     	ds	1
   260  00004A                     _USART_Status:
   261                           	opt stack 0
   262  00004A                     	ds	1
   263                           tblptru	equ	0xFF8
   264                           tblptrh	equ	0xFF7
   265                           tblptrl	equ	0xFF6
   266                           tablat	equ	0xFF5
   267                           postinc0	equ	0xFEE
   268                           wreg	equ	0xFE8
   269                           postdec1	equ	0xFE5
   270                           fsr1l	equ	0xFE1
   271                           
   272                           	psect	dataCOMRAM
   273  00004B                     __pdataCOMRAM:
   274                           	opt stack 0
   275  00004B                     i2c_slave_int_handler@F5127:
   276                           	opt stack 0
   277  00004B                     	ds	5
   278  000050                     i2c_slave_int_handler@F5129:
   279                           	opt stack 0
   280  000050                     	ds	5
   281                           tblptru	equ	0xFF8
   282                           tblptrh	equ	0xFF7
   283                           tblptrl	equ	0xFF6
   284                           tablat	equ	0xFF5
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           postdec1	equ	0xFE5
   288                           fsr1l	equ	0xFE1
   289                           
   290                           	psect	bssBANK1
   291  000100                     __pbssBANK1:
   292                           	opt stack 0
   293  000100                     _ToMainLow_MQ:
   294                           	opt stack 0
   295  000100                     	ds	126
   296                           tblptru	equ	0xFF8
   297                           tblptrh	equ	0xFF7
   298                           tblptrl	equ	0xFF6
   299                           tablat	equ	0xFF5
   300                           postinc0	equ	0xFEE
   301                           wreg	equ	0xFE8
   302                           postdec1	equ	0xFE5
   303                           fsr1l	equ	0xFE1
   304                           
   305                           	psect	dataBANK1
   306  0001F4                     __pdataBANK1:
   307                           	opt stack 0
   308  0001F4                     main@F5211:
   309                           	opt stack 0
   310  0001F4                     	ds	2
   311                           tblptru	equ	0xFF8
   312                           tblptrh	equ	0xFF7
   313                           tblptrl	equ	0xFF6
   314                           tablat	equ	0xFF5
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           postdec1	equ	0xFE5
   318                           fsr1l	equ	0xFE1
   319                           
   320                           	psect	bssBANK2
   321  000200                     __pbssBANK2:
   322                           	opt stack 0
   323  000200                     _FromMainLow_MQ:
   324                           	opt stack 0
   325  000200                     	ds	126
   326  00027E                     _ToMainHigh_MQ:
   327                           	opt stack 0
   328  00027E                     	ds	126
   329                           tblptru	equ	0xFF8
   330                           tblptrh	equ	0xFF7
   331                           tblptrl	equ	0xFF6
   332                           tablat	equ	0xFF5
   333                           postinc0	equ	0xFEE
   334                           wreg	equ	0xFE8
   335                           postdec1	equ	0xFE5
   336                           fsr1l	equ	0xFE1
   337                           
   338                           	psect	bssBANK3
   339  000300                     __pbssBANK3:
   340                           	opt stack 0
   341  000300                     _FromMainHigh_MQ:
   342                           	opt stack 0
   343  000300                     	ds	126
   344                           tblptru	equ	0xFF8
   345                           tblptrh	equ	0xFF7
   346                           tblptrl	equ	0xFF6
   347                           tablat	equ	0xFF5
   348                           postinc0	equ	0xFEE
   349                           wreg	equ	0xFE8
   350                           postdec1	equ	0xFE5
   351                           fsr1l	equ	0xFE1
   352                           
   353                           	psect	cstackBANK1
   354  00017E                     __pcstackBANK1:
   355                           	opt stack 0
   356  00017E                     ??_main:
   357                           
   358                           ; 0 bytes @ 0x0
   359  00017E                     	ds	2
   360  000180                     main@msg:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x2
   364  000180                     	ds	2
   365  000182                     main@msgbuffer:
   366                           	opt stack 0
   367                           
   368                           ; 29 bytes @ 0x4
   369  000182                     	ds	29
   370  00019F                     main@last_reg_recvd:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x21
   374  00019F                     	ds	1
   375  0001A0                     main@t0thread_data:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x22
   379  0001A0                     	ds	2
   380  0001A2                     main@t1thread_data:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x24
   384  0001A2                     	ds	2
   385  0001A4                     main@msgtype:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x26
   389  0001A4                     	ds	1
   390  0001A5                     main@uc:
   391                           	opt stack 0
   392                           
   393                           ; 13 bytes @ 0x27
   394  0001A5                     	ds	13
   395  0001B2                     main@length:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x34
   399  0001B2                     	ds	1
   400  0001B3                     main@ic:
   401                           	opt stack 0
   402                           
   403                           ; 65 bytes @ 0x35
   404  0001B3                     	ds	65
   405                           tblptru	equ	0xFF8
   406                           tblptrh	equ	0xFF7
   407                           tblptrl	equ	0xFF6
   408                           tablat	equ	0xFF5
   409                           postinc0	equ	0xFEE
   410                           wreg	equ	0xFE8
   411                           postdec1	equ	0xFE5
   412                           fsr1l	equ	0xFE1
   413                           
   414                           	psect	cstackBANK0
   415  000080                     __pcstackBANK0:
   416                           	opt stack 0
   417  000080                     ?i2_in_high_int:
   418                           	opt stack 0
   419  000080                     i2c_master_recv@length:
   420                           	opt stack 0
   421  000080                     WriteTimer0@timer0:
   422                           	opt stack 0
   423  000080                     i2check_msg@qptr:
   424                           	opt stack 0
   425  000080                     i2memcpy@d1:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x0
   429  000080                     	ds	2
   430  000082                     ??i2_check_msg:
   431  000082                     ?i2_in_low_int:
   432                           	opt stack 0
   433  000082                     WriteTimer0@timer:
   434                           	opt stack 0
   435  000082                     i2memcpy@s1:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x2
   439  000082                     	ds	2
   440  000084                     i2memcpy@n:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x4
   444  000084                     	ds	2
   445  000086                     i2memcpy@d:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x6
   449  000086                     	ds	2
   450  000088                     i2memcpy@s:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x8
   454  000088                     	ds	2
   455  00008A                     i2send_msg@qptr:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0xA
   459  00008A                     	ds	2
   460  00008C                     i2send_msg@length:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0xC
   464  00008C                     	ds	1
   465  00008D                     i2send_msg@msgtype:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0xD
   469  00008D                     	ds	1
   470  00008E                     i2send_msg@data:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0xE
   474  00008E                     	ds	2
   475  000090                     ??i2_send_msg:
   476                           
   477                           ; 0 bytes @ 0x10
   478  000090                     	ds	1
   479  000091                     i2send_msg@tlength:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x11
   483  000091                     	ds	2
   484  000093                     i2send_msg@slot:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x13
   488  000093                     	ds	1
   489  000094                     i2send_msg@qmsg:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x14
   493  000094                     	ds	2
   494  000096                     ToMainHigh_sendmsg@msgtype:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x16
   498  000096                     	ds	1
   499  000097                     ToMainHigh_sendmsg@data:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x17
   503  000097                     	ds	2
   504  000099                     ToMainHigh_sendmsg@length:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0x19
   508  000099                     	ds	1
   509  00009A                     ??_i2c_master_int_handler:
   510                           
   511                           ; 0 bytes @ 0x1A
   512  00009A                     	ds	5
   513  00009F                     ??_InterruptHandlerHigh:
   514                           
   515                           ; 0 bytes @ 0x1F
   516  00009F                     	ds	14
   517  0000AD                     ??_SetChanADC:
   518  0000AD                     ?_in_high_int:
   519                           	opt stack 0
   520  0000AD                     ?___lwmod:
   521                           	opt stack 0
   522  0000AD                     i2c_master_send@recvlength:
   523                           	opt stack 0
   524  0000AD                     OpenADC@config2:
   525                           	opt stack 0
   526  0000AD                     OpenTimer0@config:
   527                           	opt stack 0
   528  0000AD                     OpenTimer1@config:
   529                           	opt stack 0
   530  0000AD                     Delay1KTCYx@unit:
   531                           	opt stack 0
   532  0000AD                     init_queue@qptr:
   533                           	opt stack 0
   534  0000AD                     check_msg@qptr:
   535                           	opt stack 0
   536  0000AD                     init_i2c@ic:
   537                           	opt stack 0
   538  0000AD                     init_uart_recv@uc:
   539                           	opt stack 0
   540  0000AD                     uart_trans@data:
   541                           	opt stack 0
   542  0000AD                     timer0_lthread@tptr:
   543                           	opt stack 0
   544  0000AD                     init_timer1_lthread@tptr:
   545                           	opt stack 0
   546  0000AD                     OpenUSART@spbrg:
   547                           	opt stack 0
   548  0000AD                     ___lwmod@dividend:
   549                           	opt stack 0
   550  0000AD                     memcpy@d1:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0x2D
   554  0000AD                     	ds	1
   555  0000AE                     OpenADC@portconfig:
   556                           	opt stack 0
   557  0000AE                     SetChanADC@channel:
   558                           	opt stack 0
   559  0000AE                     i2c_master_send@msg:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x2E
   563  0000AE                     	ds	1
   564  0000AF                     ??_OpenUSART:
   565  0000AF                     ??_OpenADC:
   566  0000AF                     ??_uart_trans:
   567  0000AF                     ??_init_queue:
   568  0000AF                     ??_check_msg:
   569  0000AF                     ?_in_low_int:
   570                           	opt stack 0
   571  0000AF                     timer0_lthread@msgtype:
   572                           	opt stack 0
   573  0000AF                     ___lwmod@divisor:
   574                           	opt stack 0
   575  0000AF                     memcpy@s1:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x2F
   579  0000AF                     	ds	1
   580  0000B0                     init_queue@i:
   581                           	opt stack 0
   582  0000B0                     i2c_master_send@slave_addr:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x30
   586  0000B0                     	ds	1
   587  0000B1                     ??_init_queues:
   588  0000B1                     ??_i2c_master_send:
   589  0000B1                     ??___lwmod:
   590  0000B1                     ?_in_main:
   591                           	opt stack 0
   592  0000B1                     uart_trans@length:
   593                           	opt stack 0
   594  0000B1                     OpenADC@config:
   595                           	opt stack 0
   596  0000B1                     timer0_lthread@length:
   597                           	opt stack 0
   598  0000B1                     memcpy@n:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x31
   602  0000B1                     	ds	1
   603  0000B2                     OpenUSART@config:
   604                           	opt stack 0
   605  0000B2                     ___lwmod@counter:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x32
   609  0000B2                     	ds	1
   610  0000B3                     ??_block_on_To_msgqueues:
   611  0000B3                     i2c_master_send@sendlength:
   612                           	opt stack 0
   613  0000B3                     timer0_lthread@msgbuffer:
   614                           	opt stack 0
   615  0000B3                     memcpy@d:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x33
   619  0000B3                     	ds	2
   620  0000B5                     timer0_lthread@msgval:
   621                           	opt stack 0
   622  0000B5                     memcpy@s:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x35
   626  0000B5                     	ds	2
   627  0000B7                     send_msg@qptr:
   628                           	opt stack 0
   629  0000B7                     recv_msg@qptr:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x37
   633  0000B7                     	ds	2
   634  0000B9                     send_msg@length:
   635                           	opt stack 0
   636  0000B9                     recv_msg@maxlength:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x39
   640  0000B9                     	ds	1
   641  0000BA                     send_msg@msgtype:
   642                           	opt stack 0
   643  0000BA                     recv_msg@msgtype:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x3A
   647  0000BA                     	ds	1
   648  0000BB                     send_msg@data:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x3B
   652  0000BB                     	ds	1
   653  0000BC                     recv_msg@data:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x3C
   657  0000BC                     	ds	1
   658  0000BD                     ??_send_msg:
   659                           
   660                           ; 0 bytes @ 0x3D
   661  0000BD                     	ds	1
   662  0000BE                     ??_recv_msg:
   663  0000BE                     send_msg@tlength:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0x3E
   667  0000BE                     	ds	2
   668  0000C0                     send_msg@slot:
   669                           	opt stack 0
   670  0000C0                     recv_msg@slot:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0x40
   674  0000C0                     	ds	1
   675  0000C1                     send_msg@qmsg:
   676                           	opt stack 0
   677  0000C1                     recv_msg@tlength:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x41
   681  0000C1                     	ds	2
   682  0000C3                     FromMainHigh_sendmsg@msgtype:
   683                           	opt stack 0
   684  0000C3                     recv_msg@qmsg:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x43
   688  0000C3                     	ds	1
   689  0000C4                     FromMainHigh_sendmsg@data:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x44
   693  0000C4                     	ds	1
   694  0000C5                     ToMainLow_recvmsg@msgtype:
   695                           	opt stack 0
   696  0000C5                     ToMainHigh_recvmsg@msgtype:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x45
   700  0000C5                     	ds	1
   701  0000C6                     FromMainHigh_sendmsg@length:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x46
   705  0000C6                     	ds	1
   706  0000C7                     ToMainLow_recvmsg@data:
   707                           	opt stack 0
   708  0000C7                     ToMainHigh_recvmsg@data:
   709                           	opt stack 0
   710  0000C7                     timer1_lthread@tptr:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x47
   714  0000C7                     	ds	2
   715  0000C9                     ToMainLow_recvmsg@maxlength:
   716                           	opt stack 0
   717  0000C9                     ToMainHigh_recvmsg@maxlength:
   718                           	opt stack 0
   719  0000C9                     timer1_lthread@msgtype:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x49
   723  0000C9                     	ds	2
   724  0000CB                     timer1_lthread@length:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0x4B
   728  0000CB                     	ds	2
   729  0000CD                     timer1_lthread@msgbuffer:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x4D
   733  0000CD                     	ds	2
   734  0000CF                     ??_timer1_lthread:
   735                           
   736                           ; 0 bytes @ 0x4F
   737  0000CF                     	ds	1
   738  0000D0                     timer1_lthread@retval:
   739                           	opt stack 0
   740                           
   741                           ; 1 bytes @ 0x50
   742  0000D0                     	ds	1
   743                           tblptru	equ	0xFF8
   744                           tblptrh	equ	0xFF7
   745                           tblptrl	equ	0xFF6
   746                           tablat	equ	0xFF5
   747                           postinc0	equ	0xFEE
   748                           wreg	equ	0xFE8
   749                           postdec1	equ	0xFE5
   750                           fsr1l	equ	0xFE1
   751                           
   752                           	psect	cstackCOMRAM
   753  000001                     __pcstackCOMRAM:
   754                           	opt stack 0
   755  000001                     ??_uart_trans_int_handler:
   756  000001                     ReadUSART@data:
   757                           	opt stack 0
   758  000001                     WriteTimer1@timer1:
   759                           	opt stack 0
   760  000001                     i1memcpy@d1:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0x0
   764  000001                     	ds	2
   765  000003                     WriteTimer1@timer:
   766                           	opt stack 0
   767  000003                     i1memcpy@s1:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x2
   771  000003                     	ds	2
   772  000005                     i1memcpy@n:
   773                           	opt stack 0
   774                           
   775                           ; 2 bytes @ 0x4
   776  000005                     	ds	2
   777  000007                     i1memcpy@d:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0x6
   781  000007                     	ds	2
   782  000009                     i1memcpy@s:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x8
   786  000009                     	ds	2
   787  00000B                     i1send_msg@qptr:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0xA
   791  00000B                     	ds	2
   792  00000D                     i1send_msg@length:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0xC
   796  00000D                     	ds	1
   797  00000E                     i1send_msg@msgtype:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0xD
   801  00000E                     	ds	1
   802  00000F                     i1send_msg@data:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0xE
   806  00000F                     	ds	2
   807  000011                     ??i1_send_msg:
   808                           
   809                           ; 0 bytes @ 0x10
   810  000011                     	ds	1
   811  000012                     i1send_msg@tlength:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x11
   815  000012                     	ds	2
   816  000014                     i1send_msg@slot:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0x13
   820  000014                     	ds	1
   821  000015                     i1send_msg@qmsg:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x14
   825  000015                     	ds	2
   826  000017                     ToMainLow_sendmsg@msgtype:
   827                           	opt stack 0
   828                           
   829                           ; 1 bytes @ 0x16
   830  000017                     	ds	1
   831  000018                     ToMainLow_sendmsg@data:
   832                           	opt stack 0
   833                           
   834                           ; 2 bytes @ 0x17
   835  000018                     	ds	2
   836  00001A                     ToMainLow_sendmsg@length:
   837                           	opt stack 0
   838                           
   839                           ; 1 bytes @ 0x19
   840  00001A                     	ds	1
   841  00001B                     ??_uart_recv_int_handler:
   842                           
   843                           ; 0 bytes @ 0x1A
   844  00001B                     	ds	1
   845  00001C                     ??_InterruptHandlerLow:
   846                           
   847                           ; 0 bytes @ 0x1B
   848  00001C                     	ds	17
   849                           tblptru	equ	0xFF8
   850                           tblptrh	equ	0xFF7
   851                           tblptrl	equ	0xFF6
   852                           tablat	equ	0xFF5
   853                           postinc0	equ	0xFEE
   854                           wreg	equ	0xFE8
   855                           postdec1	equ	0xFE5
   856                           fsr1l	equ	0xFE1
   857                           
   858 ;;
   859 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   860 ;;
   861 ;; *************** function _main *****************
   862 ;; Defined at:
   863 ;;		line 186 in file "../src/main.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;  ic             65   53[BANK1 ] struct __i2c_comm
   868 ;;  msgbuffer      29    4[BANK1 ] unsigned char [29]
   869 ;;  uc             13   39[BANK1 ] struct __uart_comm
   870 ;;  t1thread_dat    2   36[BANK1 ] struct __timer1_thread_s
   871 ;;  t0thread_dat    2   34[BANK1 ] struct __timer0_thread_s
   872 ;;  msg             2    2[BANK1 ] unsigned char [2]
   873 ;;  uthread_data    2    0        struct __uart_thread_str
   874 ;;  length          1   52[BANK1 ] char 
   875 ;;  msgtype         1   38[BANK1 ] unsigned char 
   876 ;;  last_reg_rec    1   33[BANK1 ] unsigned char 
   877 ;;  i               1    0        unsigned char 
   878 ;;  c               1    0        unsigned char 
   879 ;; Return value:  Size  Location     Type
   880 ;;		None               void
   881 ;; Registers used:
   882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   888 ;;      Params:         0       0       0       0       0
   889 ;;      Locals:         0       0     116       0       0
   890 ;;      Temps:          0       0       2       0       0
   891 ;;      Totals:         0       0     118       0       0
   892 ;;Total ram usage:      118 bytes
   893 ;; Hardware stack levels required when called:   15
   894 ;; This function calls:
   895 ;;		_OpenADC
   896 ;;		_OpenTimer0
   897 ;;		_OpenTimer1
   898 ;;		_OpenUSART
   899 ;;		_SetChanADC
   900 ;;		_ToMainHigh_recvmsg
   901 ;;		_ToMainLow_recvmsg
   902 ;;		_block_on_To_msgqueues
   903 ;;		_enable_interrupts
   904 ;;		_i2c_configure_master
   905 ;;		_i2c_master_send
   906 ;;		_init_i2c
   907 ;;		_init_queues
   908 ;;		_init_timer1_lthread
   909 ;;		_init_uart_recv
   910 ;;		_timer0_lthread
   911 ;;		_timer1_lthread
   912 ;;		_uart_trans
   913 ;; This function is called by:
   914 ;;		Startup code after reset
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	text0
   919  000470                     __ptext0:
   920                           	opt stack 0
   921  000470                     _main:
   922                           	opt stack 16
   923                           
   924                           ;main.c: 187: char c;
   925                           ;main.c: 188: signed char length;
   926                           ;main.c: 189: unsigned char msgtype;
   927                           ;main.c: 190: unsigned char last_reg_recvd;
   928                           ;main.c: 191: uart_comm uc;
   929                           ;main.c: 192: i2c_comm ic;
   930                           ;main.c: 193: unsigned char msgbuffer[28 + 1];
   931                           ;main.c: 194: unsigned char i;
   932                           ;main.c: 195: uart_thread_struct uthread_data;
   933                           ;main.c: 196: timer1_thread_struct t1thread_data;
   934                           ;main.c: 197: timer0_thread_struct t0thread_data;
   935                           ;main.c: 205: OSCCON = 0x82;
   936                           
   937                           ;incstack = 0
   938  000470  0E82               	movlw	130
   939  000472  6ED3               	movwf	4051,c	;volatile
   940                           
   941                           ;main.c: 206: OSCTUNEbits.PLLEN = 0;
   942  000474  9C9B               	bcf	3995,6,c	;volatile
   943                           
   944                           ;main.c: 224: init_uart_recv(&uc);
   945  000476  0101               	movlb	1	; () banked
   946  000478  0E01               	movlw	high main@uc
   947  00047A  0100               	movlb	0	; () banked
   948  00047C  0100               	movlb	0	; () banked
   949  00047E  6FAE               	movwf	(init_uart_recv@uc+1)& (0+255),b
   950  000480  0101               	movlb	1	; () banked
   951  000482  0EA5               	movlw	low main@uc
   952  000484  0100               	movlb	0	; () banked
   953  000486  0100               	movlb	0	; () banked
   954  000488  6FAD               	movwf	init_uart_recv@uc& (0+255),b
   955  00048A  ECFC  F00B         	call	_init_uart_recv	;wreg free
   956                           
   957                           ;main.c: 227: init_i2c(&ic);
   958  00048E  0101               	movlb	1	; () banked
   959  000490  0E01               	movlw	high main@ic
   960  000492  0100               	movlb	0	; () banked
   961  000494  0100               	movlb	0	; () banked
   962  000496  6FAE               	movwf	(init_i2c@ic+1)& (0+255),b
   963  000498  0101               	movlb	1	; () banked
   964  00049A  0EB3               	movlw	low main@ic
   965  00049C  0100               	movlb	0	; () banked
   966  00049E  0100               	movlb	0	; () banked
   967  0004A0  6FAD               	movwf	init_i2c@ic& (0+255),b
   968  0004A2  EC23  F009         	call	_init_i2c	;wreg free
   969                           
   970                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
   971  0004A6  0101               	movlb	1	; () banked
   972  0004A8  0E01               	movlw	high main@t1thread_data
   973  0004AA  0100               	movlb	0	; () banked
   974  0004AC  0100               	movlb	0	; () banked
   975  0004AE  6FAE               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   976  0004B0  0101               	movlb	1	; () banked
   977  0004B2  0EA2               	movlw	low main@t1thread_data
   978  0004B4  0100               	movlb	0	; () banked
   979  0004B6  0100               	movlb	0	; () banked
   980  0004B8  6FAD               	movwf	init_timer1_lthread@tptr& (0+255),b
   981  0004BA  EC3A  F00C         	call	_init_timer1_lthread	;wreg free
   982                           
   983                           ;main.c: 233: init_queues();
   984  0004BE  ECEC  F008         	call	_init_queues	;wreg free
   985                           
   986                           ;main.c: 237: TRISB = 0x0;
   987  0004C2  0E00               	movlw	0
   988  0004C4  6E93               	movwf	3987,c	;volatile
   989                           
   990                           ;main.c: 238: LATB = 0x0;
   991  0004C6  0E00               	movlw	0
   992  0004C8  6E8A               	movwf	3978,c	;volatile
   993                           
   994                           ;main.c: 240: PORTA = 0x0;
   995  0004CA  0E00               	movlw	0
   996  0004CC  6E80               	movwf	3968,c	;volatile
   997                           
   998                           ;main.c: 241: LATA = 0x0;
   999  0004CE  0E00               	movlw	0
  1000  0004D0  6E89               	movwf	3977,c	;volatile
  1001                           
  1002                           ;main.c: 242: TRISA = 0x0F;
  1003  0004D2  0E0F               	movlw	15
  1004  0004D4  6E92               	movwf	3986,c	;volatile
  1005                           
  1006                           ;main.c: 255: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110101);
  1007  0004D6  0ED5               	movlw	213
  1008  0004D8  ECA3  F00B         	call	_OpenTimer0
  1009                           
  1010                           ;main.c: 264: OpenTimer1(0b11111111 & 0b10111111 & 0b11001111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1011  0004DC  0E85               	movlw	133
  1012  0004DE  EC1B  F00B         	call	_OpenTimer1
  1013                           
  1014                           ;main.c: 272: IPR1bits.ADIP = 0;
  1015  0004E2  9C9F               	bcf	3999,6,c	;volatile
  1016                           
  1017                           ;main.c: 273: PIE1bits.ADIE = 1;
  1018  0004E4  8C9D               	bsf	3997,6,c	;volatile
  1019                           
  1020                           ;main.c: 275: IPR1bits.TMR1IP = 0;
  1021  0004E6  909F               	bcf	3999,0,c	;volatile
  1022                           
  1023                           ;main.c: 277: IPR1bits.RCIP = 0;
  1024  0004E8  9A9F               	bcf	3999,5,c	;volatile
  1025                           
  1026                           ;main.c: 279: IPR1bits.TXIP = 0;
  1027  0004EA  989F               	bcf	3999,4,c	;volatile
  1028                           
  1029                           ;main.c: 281: IPR1bits.SSPIP = 1;
  1030  0004EC  869F               	bsf	3999,3,c	;volatile
  1031                           
  1032                           ;main.c: 292: i2c_configure_master();
  1033  0004EE  ECDC  F00B         	call	_i2c_configure_master	;wreg free
  1034                           
  1035                           ;main.c: 317: PIE1bits.SSPIE = 1;
  1036  0004F2  869D               	bsf	3997,3,c	;volatile
  1037                           
  1038                           ;main.c: 328: OpenUSART(0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1039                           ;main.c: 329: 0b11111111 & 0b11111111, 38);
  1040  0004F4  0E00               	movlw	0
  1041  0004F6  0100               	movlb	0	; () banked
  1042  0004F8  0100               	movlb	0	; () banked
  1043  0004FA  6FAE               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1044  0004FC  0E26               	movlw	38
  1045  0004FE  0100               	movlb	0	; () banked
  1046  000500  6FAD               	movwf	OpenUSART@spbrg& (0+255),b
  1047  000502  0EFC               	movlw	252
  1048  000504  ECED  F006         	call	_OpenUSART
  1049                           
  1050                           ;main.c: 330: RCSTAbits.SPEN = 1;
  1051  000508  8EAB               	bsf	4011,7,c	;volatile
  1052                           
  1053                           ;main.c: 331: TRISC = 0xFF;
  1054  00050A  6894               	setf	3988,c	;volatile
  1055                           
  1056                           ;main.c: 338: enable_interrupts();
  1057  00050C  EC73  F00C         	call	_enable_interrupts	;wreg free
  1058                           
  1059                           ;main.c: 352: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1060                           ;main.c: 353: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1061                           ;main.c: 354: 0b1011);
  1062  000510  0101               	movlb	1	; () banked
  1063  000512  6F7E               	movwf	??_main& (0+255),b
  1064  000514  0E0C               	movlw	12
  1065  000516  0100               	movlb	0	; () banked
  1066  000518  0100               	movlb	0	; () banked
  1067  00051A  6FAD               	movwf	OpenADC@config2& (0+255),b
  1068  00051C  0101               	movlb	1	; () banked
  1069  00051E  517E               	movf	??_main& (0+255),w,b
  1070  000520  0101               	movlb	1	; () banked
  1071  000522  6F7F               	movwf	(??_main+1)& (0+255),b
  1072  000524  0E0B               	movlw	11
  1073  000526  0100               	movlb	0	; () banked
  1074  000528  0100               	movlb	0	; () banked
  1075  00052A  6FAE               	movwf	OpenADC@portconfig& (0+255),b
  1076  00052C  0101               	movlb	1	; () banked
  1077  00052E  517F               	movf	(??_main+1)& (0+255),w,b
  1078  000530  0E53               	movlw	83
  1079  000532  EC7B  F007         	call	_OpenADC
  1080                           
  1081                           ;main.c: 355: SetChanADC(0b10001111);
  1082  000536  0E8F               	movlw	143
  1083  000538  ECEC  F00B         	call	_SetChanADC
  1084                           
  1085                           ;main.c: 366: unsigned char msg[2] = {0x01, 0x02};
  1086  00053C  C1F4  F180         	movff	main@F5211,main@msg
  1087  000540  C1F5  F181         	movff	main@F5211+1,main@msg+1
  1088  000544                     l3225:
  1089                           
  1090                           ;main.c: 377: block_on_To_msgqueues();
  1091  000544  ECFE  F007         	call	_block_on_To_msgqueues	;wreg free
  1092                           
  1093                           ;main.c: 384: length = ToMainHigh_recvmsg(28, &msgtype, (void *) msgbuffer);
  1094  000548  0101               	movlb	1	; () banked
  1095  00054A  0E01               	movlw	high main@msgtype
  1096  00054C  0100               	movlb	0	; () banked
  1097  00054E  0100               	movlb	0	; () banked
  1098  000550  6FC6               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1099  000552  0101               	movlb	1	; () banked
  1100  000554  0EA4               	movlw	low main@msgtype
  1101  000556  0100               	movlb	0	; () banked
  1102  000558  0100               	movlb	0	; () banked
  1103  00055A  6FC5               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1104  00055C  0101               	movlb	1	; () banked
  1105  00055E  0E01               	movlw	high main@msgbuffer
  1106  000560  0100               	movlb	0	; () banked
  1107  000562  0100               	movlb	0	; () banked
  1108  000564  6FC8               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1109  000566  0101               	movlb	1	; () banked
  1110  000568  0E82               	movlw	low main@msgbuffer
  1111  00056A  0100               	movlb	0	; () banked
  1112  00056C  0100               	movlb	0	; () banked
  1113  00056E  6FC7               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1114  000570  0E1C               	movlw	28
  1115  000572  ECDA  F00A         	call	_ToMainHigh_recvmsg
  1116  000576  0101               	movlb	1	; () banked
  1117  000578  0101               	movlb	1	; () banked
  1118  00057A  6FB2               	movwf	main@length& (0+255),b
  1119                           
  1120                           ; BSR set to: 1
  1121                           ;main.c: 385: if (length < 0) {
  1122  00057C  0101               	movlb	1	; () banked
  1123  00057E  0101               	movlb	1	; () banked
  1124  000580  BFB2               	btfsc	main@length& (0+255),7,b
  1125  000582  D051               	goto	l3241
  1126  000584  D03E               	goto	l3239
  1127  000586                     l3233:
  1128                           
  1129                           ; BSR set to: 1
  1130                           ;main.c: 393: {
  1131                           ;main.c: 394: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1132  000586  0101               	movlb	1	; () banked
  1133  000588  0E01               	movlw	high main@t0thread_data
  1134  00058A  0100               	movlb	0	; () banked
  1135  00058C  0100               	movlb	0	; () banked
  1136  00058E  6FAE               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1137  000590  0101               	movlb	1	; () banked
  1138  000592  0EA0               	movlw	low main@t0thread_data
  1139  000594  0100               	movlb	0	; () banked
  1140  000596  0100               	movlb	0	; () banked
  1141  000598  6FAD               	movwf	timer0_lthread@tptr& (0+255),b
  1142  00059A  0101               	movlb	1	; () banked
  1143  00059C  0100               	movlb	0	; () banked
  1144  00059E  C1A4  F0AF         	movff	main@msgtype,timer0_lthread@msgtype
  1145  0005A2  0100               	movlb	0	; () banked
  1146  0005A4  0100               	movlb	0	; () banked
  1147  0005A6  6BB0               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1148  0005A8  0101               	movlb	1	; () banked
  1149  0005AA  0101               	movlb	1	; () banked
  1150  0005AC  51B2               	movf	main@length& (0+255),w,b
  1151  0005AE  0100               	movlb	0	; () banked
  1152  0005B0  0100               	movlb	0	; () banked
  1153  0005B2  6FB1               	movwf	timer0_lthread@length& (0+255),b
  1154  0005B4  0100               	movlb	0	; () banked
  1155  0005B6  6BB2               	clrf	(timer0_lthread@length+1)& (0+255),b
  1156  0005B8  0100               	movlb	0	; () banked
  1157  0005BA  BFB1               	btfsc	timer0_lthread@length& (0+255),7,b
  1158  0005BC  07B2               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1159  0005BE  0101               	movlb	1	; () banked
  1160  0005C0  0E01               	movlw	high main@msgbuffer
  1161  0005C2  0100               	movlb	0	; () banked
  1162  0005C4  0100               	movlb	0	; () banked
  1163  0005C6  6FB4               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1164  0005C8  0101               	movlb	1	; () banked
  1165  0005CA  0E82               	movlw	low main@msgbuffer
  1166  0005CC  0100               	movlb	0	; () banked
  1167  0005CE  0100               	movlb	0	; () banked
  1168  0005D0  6FB3               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1169  0005D2  EC31  F00C         	call	_timer0_lthread	;wreg free
  1170                           
  1171                           ;main.c: 395: break;
  1172  0005D6  D027               	goto	l3241
  1173  0005D8                     l128:
  1174                           
  1175                           ;main.c: 398: case 41:
  1176                           ;main.c: 399: {
  1177                           ;main.c: 402: last_reg_recvd = msgbuffer[0];
  1178  0005D8  C182  F19F         	movff	main@msgbuffer,main@last_reg_recvd
  1179                           
  1180                           ;main.c: 403: break;
  1181  0005DC  D024               	goto	l3241
  1182  0005DE                     l3235:
  1183                           
  1184                           ;main.c: 406: {
  1185                           ;main.c: 407: uart_trans(length, msgbuffer);
  1186  0005DE  0101               	movlb	1	; () banked
  1187  0005E0  0E01               	movlw	high main@msgbuffer
  1188  0005E2  0100               	movlb	0	; () banked
  1189  0005E4  0100               	movlb	0	; () banked
  1190  0005E6  6FAE               	movwf	(uart_trans@data+1)& (0+255),b
  1191  0005E8  0101               	movlb	1	; () banked
  1192  0005EA  0E82               	movlw	low main@msgbuffer
  1193  0005EC  0100               	movlb	0	; () banked
  1194  0005EE  0100               	movlb	0	; () banked
  1195  0005F0  6FAD               	movwf	uart_trans@data& (0+255),b
  1196  0005F2  0101               	movlb	1	; () banked
  1197  0005F4  0101               	movlb	1	; () banked
  1198  0005F6  51B2               	movf	main@length& (0+255),w,b
  1199  0005F8  ECF0  F005         	call	_uart_trans
  1200                           
  1201                           ;main.c: 409: break;
  1202  0005FC  D014               	goto	l3241
  1203  0005FE                     l130:
  1204                           
  1205                           ; BSR set to: 1
  1206                           ;main.c: 412: {
  1207                           ;main.c: 415: LATBbits.LATB2 = 0;
  1208  0005FE  948A               	bcf	3978,2,c	;volatile
  1209                           
  1210                           ;main.c: 416: break;
  1211  000600  D012               	goto	l3241
  1212  000602                     l3239:
  1213                           
  1214                           ; BSR set to: 1
  1215  000602  0101               	movlb	1	; () banked
  1216  000604  0101               	movlb	1	; () banked
  1217  000606  51A4               	movf	main@msgtype& (0+255),w,b
  1218                           
  1219                           ; Switch size 1, requested type "space"
  1220                           ; Number of cases is 5, Range of values is 10 to 46
  1221                           ; switch strategies available:
  1222                           ; Name         Instructions Cycles
  1223                           ; simple_byte           16     9 (average)
  1224                           ;	Chosen strategy is simple_byte
  1225  000608  0A0A               	xorlw	10	; case 10
  1226  00060A  B4D8               	btfsc	status,2,c
  1227  00060C  D7BC               	goto	l3233
  1228  00060E  0A22               	xorlw	34	; case 40
  1229  000610  B4D8               	btfsc	status,2,c
  1230  000612  D7E2               	goto	l128
  1231  000614  0A01               	xorlw	1	; case 41
  1232  000616  B4D8               	btfsc	status,2,c
  1233  000618  D7DF               	goto	l128
  1234  00061A  0A04               	xorlw	4	; case 45
  1235  00061C  B4D8               	btfsc	status,2,c
  1236  00061E  D7DF               	goto	l3235
  1237  000620  0A03               	xorlw	3	; case 46
  1238  000622  B4D8               	btfsc	status,2,c
  1239  000624  D7EC               	goto	l130
  1240  000626                     l3241:
  1241                           
  1242                           ;main.c: 424: }
  1243                           ;main.c: 427: length = ToMainLow_recvmsg(28, &msgtype, (void *) msgbuffer);
  1244  000626  0101               	movlb	1	; () banked
  1245  000628  0E01               	movlw	high main@msgtype
  1246  00062A  0100               	movlb	0	; () banked
  1247  00062C  0100               	movlb	0	; () banked
  1248  00062E  6FC6               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1249  000630  0101               	movlb	1	; () banked
  1250  000632  0EA4               	movlw	low main@msgtype
  1251  000634  0100               	movlb	0	; () banked
  1252  000636  0100               	movlb	0	; () banked
  1253  000638  6FC5               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1254  00063A  0101               	movlb	1	; () banked
  1255  00063C  0E01               	movlw	high main@msgbuffer
  1256  00063E  0100               	movlb	0	; () banked
  1257  000640  0100               	movlb	0	; () banked
  1258  000642  6FC8               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1259  000644  0101               	movlb	1	; () banked
  1260  000646  0E82               	movlw	low main@msgbuffer
  1261  000648  0100               	movlb	0	; () banked
  1262  00064A  0100               	movlb	0	; () banked
  1263  00064C  6FC7               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1264  00064E  0E1C               	movlw	28
  1265  000650  ECB9  F00A         	call	_ToMainLow_recvmsg
  1266  000654  0101               	movlb	1	; () banked
  1267  000656  0101               	movlb	1	; () banked
  1268  000658  6FB2               	movwf	main@length& (0+255),b
  1269                           
  1270                           ; BSR set to: 1
  1271                           ;main.c: 428: if (length < 0) {
  1272  00065A  0101               	movlb	1	; () banked
  1273  00065C  0101               	movlb	1	; () banked
  1274  00065E  BFB2               	btfsc	main@length& (0+255),7,b
  1275  000660  D771               	goto	l3225
  1276  000662  D072               	goto	l3261
  1277  000664                     l3247:
  1278                           
  1279                           ; BSR set to: 1
  1280                           ;main.c: 436: {
  1281                           ;main.c: 437: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1282  000664  0101               	movlb	1	; () banked
  1283  000666  0E01               	movlw	high main@t1thread_data
  1284  000668  0100               	movlb	0	; () banked
  1285  00066A  0100               	movlb	0	; () banked
  1286  00066C  6FC8               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1287  00066E  0101               	movlb	1	; () banked
  1288  000670  0EA2               	movlw	low main@t1thread_data
  1289  000672  0100               	movlb	0	; () banked
  1290  000674  0100               	movlb	0	; () banked
  1291  000676  6FC7               	movwf	timer1_lthread@tptr& (0+255),b
  1292  000678  0101               	movlb	1	; () banked
  1293  00067A  0100               	movlb	0	; () banked
  1294  00067C  C1A4  F0C9         	movff	main@msgtype,timer1_lthread@msgtype
  1295  000680  0100               	movlb	0	; () banked
  1296  000682  0100               	movlb	0	; () banked
  1297  000684  6BCA               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1298  000686  0101               	movlb	1	; () banked
  1299  000688  0101               	movlb	1	; () banked
  1300  00068A  51B2               	movf	main@length& (0+255),w,b
  1301  00068C  0100               	movlb	0	; () banked
  1302  00068E  0100               	movlb	0	; () banked
  1303  000690  6FCB               	movwf	timer1_lthread@length& (0+255),b
  1304  000692  0100               	movlb	0	; () banked
  1305  000694  6BCC               	clrf	(timer1_lthread@length+1)& (0+255),b
  1306  000696  0100               	movlb	0	; () banked
  1307  000698  BFCB               	btfsc	timer1_lthread@length& (0+255),7,b
  1308  00069A  07CC               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1309  00069C  0101               	movlb	1	; () banked
  1310  00069E  0E01               	movlw	high main@msgbuffer
  1311  0006A0  0100               	movlb	0	; () banked
  1312  0006A2  0100               	movlb	0	; () banked
  1313  0006A4  6FCE               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1314  0006A6  0101               	movlb	1	; () banked
  1315  0006A8  0E82               	movlw	low main@msgbuffer
  1316  0006AA  0100               	movlb	0	; () banked
  1317  0006AC  0100               	movlb	0	; () banked
  1318  0006AE  6FCD               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1319  0006B0  ECB3  F008         	call	_timer1_lthread	;wreg free
  1320                           
  1321                           ;main.c: 438: break;
  1322  0006B4  D747               	goto	l3225
  1323  0006B6                     l3249:
  1324                           
  1325                           ;main.c: 441: case 31:
  1326                           ;main.c: 442: {
  1327                           ;main.c: 443: if(msgbuffer[0] == 0xBA){
  1328  0006B6  0101               	movlb	1	; () banked
  1329  0006B8  0101               	movlb	1	; () banked
  1330  0006BA  5182               	movf	main@msgbuffer& (0+255),w,b
  1331  0006BC  0ABA               	xorlw	186
  1332  0006BE  A4D8               	btfss	status,2,c
  1333  0006C0  D01E               	goto	l3253
  1334                           
  1335                           ; BSR set to: 1
  1336                           ;main.c: 445: i2c_master_send(5, 5, msgbuffer, 0xBE);
  1337  0006C2  0101               	movlb	1	; () banked
  1338  0006C4  6F7E               	movwf	??_main& (0+255),b
  1339  0006C6  0E05               	movlw	5
  1340  0006C8  0100               	movlb	0	; () banked
  1341  0006CA  0100               	movlb	0	; () banked
  1342  0006CC  6FAD               	movwf	i2c_master_send@recvlength& (0+255),b
  1343  0006CE  0101               	movlb	1	; () banked
  1344  0006D0  517E               	movf	??_main& (0+255),w,b
  1345  0006D2  0101               	movlb	1	; () banked
  1346  0006D4  0E01               	movlw	high main@msgbuffer
  1347  0006D6  0100               	movlb	0	; () banked
  1348  0006D8  0100               	movlb	0	; () banked
  1349  0006DA  6FAF               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1350  0006DC  0101               	movlb	1	; () banked
  1351  0006DE  0E82               	movlw	low main@msgbuffer
  1352  0006E0  0100               	movlb	0	; () banked
  1353  0006E2  0100               	movlb	0	; () banked
  1354  0006E4  6FAE               	movwf	i2c_master_send@msg& (0+255),b
  1355  0006E6  0101               	movlb	1	; () banked
  1356  0006E8  6F7F               	movwf	(??_main+1)& (0+255),b
  1357  0006EA  0EBE               	movlw	190
  1358  0006EC  0100               	movlb	0	; () banked
  1359  0006EE  0100               	movlb	0	; () banked
  1360  0006F0  6FB0               	movwf	i2c_master_send@slave_addr& (0+255),b
  1361  0006F2  0101               	movlb	1	; () banked
  1362  0006F4  517F               	movf	(??_main+1)& (0+255),w,b
  1363  0006F6  0E05               	movlw	5
  1364  0006F8  ECB1  F003         	call	_i2c_master_send
  1365                           
  1366                           ;main.c: 446: } else if(msgbuffer[0] == 0xAA){
  1367  0006FC  D023               	goto	l3257
  1368  0006FE                     l3253:
  1369  0006FE  0101               	movlb	1	; () banked
  1370  000700  0101               	movlb	1	; () banked
  1371  000702  5182               	movf	main@msgbuffer& (0+255),w,b
  1372  000704  0AAA               	xorlw	170
  1373  000706  A4D8               	btfss	status,2,c
  1374  000708  D01D               	goto	l3257
  1375                           
  1376                           ; BSR set to: 1
  1377                           ;main.c: 448: i2c_master_send(1, 5, msgbuffer, 0x9E);
  1378  00070A  0101               	movlb	1	; () banked
  1379  00070C  6F7E               	movwf	??_main& (0+255),b
  1380  00070E  0E05               	movlw	5
  1381  000710  0100               	movlb	0	; () banked
  1382  000712  0100               	movlb	0	; () banked
  1383  000714  6FAD               	movwf	i2c_master_send@recvlength& (0+255),b
  1384  000716  0101               	movlb	1	; () banked
  1385  000718  517E               	movf	??_main& (0+255),w,b
  1386  00071A  0101               	movlb	1	; () banked
  1387  00071C  0E01               	movlw	high main@msgbuffer
  1388  00071E  0100               	movlb	0	; () banked
  1389  000720  0100               	movlb	0	; () banked
  1390  000722  6FAF               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1391  000724  0101               	movlb	1	; () banked
  1392  000726  0E82               	movlw	low main@msgbuffer
  1393  000728  0100               	movlb	0	; () banked
  1394  00072A  0100               	movlb	0	; () banked
  1395  00072C  6FAE               	movwf	i2c_master_send@msg& (0+255),b
  1396  00072E  0101               	movlb	1	; () banked
  1397  000730  6F7F               	movwf	(??_main+1)& (0+255),b
  1398  000732  0E9E               	movlw	158
  1399  000734  0100               	movlb	0	; () banked
  1400  000736  0100               	movlb	0	; () banked
  1401  000738  6FB0               	movwf	i2c_master_send@slave_addr& (0+255),b
  1402  00073A  0101               	movlb	1	; () banked
  1403  00073C  517F               	movf	(??_main+1)& (0+255),w,b
  1404  00073E  0E01               	movlw	1
  1405  000740  ECB1  F003         	call	_i2c_master_send
  1406  000744                     l3257:
  1407                           
  1408                           ;main.c: 449: }
  1409                           ;main.c: 451: LATBbits.LATB2 = 0;
  1410  000744  948A               	bcf	3978,2,c	;volatile
  1411                           
  1412                           ;main.c: 453: break;
  1413  000746  D6FE               	goto	l3225
  1414  000748                     l3261:
  1415  000748  0101               	movlb	1	; () banked
  1416  00074A  0101               	movlb	1	; () banked
  1417  00074C  51A4               	movf	main@msgtype& (0+255),w,b
  1418                           
  1419                           ; Switch size 1, requested type "space"
  1420                           ; Number of cases is 3, Range of values is 11 to 31
  1421                           ; switch strategies available:
  1422                           ; Name         Instructions Cycles
  1423                           ; simple_byte           10     6 (average)
  1424                           ;	Chosen strategy is simple_byte
  1425  00074E  0A0B               	xorlw	11	; case 11
  1426  000750  B4D8               	btfsc	status,2,c
  1427  000752  D788               	goto	l3247
  1428  000754  0A15               	xorlw	21	; case 30
  1429  000756  B4D8               	btfsc	status,2,c
  1430  000758  D7AE               	goto	l3249
  1431  00075A  0A01               	xorlw	1	; case 31
  1432  00075C  B4D8               	btfsc	status,2,c
  1433  00075E  D7AB               	goto	l3249
  1434  000760  D6F1               	goto	l3225
  1435  000762                     __end_of_main:
  1436                           	opt stack 0
  1437                           tblptru	equ	0xFF8
  1438                           tblptrh	equ	0xFF7
  1439                           tblptrl	equ	0xFF6
  1440                           tablat	equ	0xFF5
  1441                           postinc0	equ	0xFEE
  1442                           wreg	equ	0xFE8
  1443                           postdec1	equ	0xFE5
  1444                           fsr1l	equ	0xFE1
  1445                           status	equ	0xFD8
  1446                           
  1447 ;; *************** function _uart_trans *****************
  1448 ;; Defined at:
  1449 ;;		line 56 in file "../src/my_uart.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  length          1    wreg     unsigned char 
  1452 ;;  data            2   45[BANK0 ] PTR unsigned char 
  1453 ;;		 -> main@msgbuffer(29), 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  length          1   49[BANK0 ] unsigned char 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;		None               void
  1458 ;; Registers used:
  1459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1465 ;;      Params:         0       2       0       0       0
  1466 ;;      Locals:         0       1       0       0       0
  1467 ;;      Temps:          0       2       0       0       0
  1468 ;;      Totals:         0       5       0       0       0
  1469 ;;Total ram usage:        5 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; Hardware stack levels required when called:   11
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text1
  1480  000BE0                     __ptext1:
  1481                           	opt stack 0
  1482  000BE0                     _uart_trans:
  1483                           	opt stack 19
  1484                           
  1485                           ; BSR set to: 1
  1486                           ;incstack = 0
  1487                           ;uart_trans@length stored from wreg
  1488  000BE0  CFE8 F0B1          	movff	wreg,uart_trans@length
  1489                           
  1490                           ;my_uart.c: 58: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  1491  000BE4  EE20 F00B          	lfsr	2,11
  1492  000BE8  5055               	movf	_uc_ptr,w,c
  1493  000BEA  26D9               	addwf	fsr2l,f,c
  1494  000BEC  5056               	movf	_uc_ptr+1,w,c
  1495  000BEE  22DA               	addwfc	fsr2h,f,c
  1496  000BF0  0E00               	movlw	0
  1497  000BF2  6EDF               	movwf	indf2,c
  1498  000BF4  D035               	goto	l2557
  1499  000BF6                     l2553:
  1500                           
  1501                           ;my_uart.c: 59: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  1502  000BF6  EE20 F00B          	lfsr	2,11
  1503  000BFA  5055               	movf	_uc_ptr,w,c
  1504  000BFC  26D9               	addwf	fsr2l,f,c
  1505  000BFE  5056               	movf	_uc_ptr+1,w,c
  1506  000C00  22DA               	addwfc	fsr2h,f,c
  1507  000C02  50DF               	movf	indf2,w,c
  1508  000C04  0100               	movlb	0	; () banked
  1509  000C06  6FAF               	movwf	??_uart_trans& (0+255),b
  1510  000C08  0100               	movlb	0	; () banked
  1511  000C0A  51AF               	movf	??_uart_trans& (0+255),w,b
  1512  000C0C  0D01               	mullw	1
  1513  000C0E  50F3               	movf	prodl,w,c
  1514  000C10  0100               	movlb	0	; () banked
  1515  000C12  0100               	movlb	0	; () banked
  1516  000C14  25AD               	addwf	uart_trans@data& (0+255),w,b
  1517  000C16  6ED9               	movwf	fsr2l,c
  1518  000C18  50F4               	movf	prodh,w,c
  1519  000C1A  0100               	movlb	0	; () banked
  1520  000C1C  0100               	movlb	0	; () banked
  1521  000C1E  21AE               	addwfc	(uart_trans@data+1)& (0+255),w,b
  1522  000C20  6EDA               	movwf	fsr2h,c
  1523  000C22  EE10 F00B          	lfsr	1,11
  1524  000C26  5055               	movf	_uc_ptr,w,c
  1525  000C28  26E1               	addwf	fsr1l,f,c
  1526  000C2A  5056               	movf	_uc_ptr+1,w,c
  1527  000C2C  22E2               	addwfc	fsr1h,f,c
  1528  000C2E  50E7               	movf	indf1,w,c
  1529  000C30  0100               	movlb	0	; () banked
  1530  000C32  6FB0               	movwf	(??_uart_trans+1)& (0+255),b
  1531  000C34  0100               	movlb	0	; () banked
  1532  000C36  51B0               	movf	(??_uart_trans+1)& (0+255),w,b
  1533  000C38  0D01               	mullw	1
  1534  000C3A  0E06               	movlw	6
  1535  000C3C  26F3               	addwf	prodl,f,c
  1536  000C3E  0E00               	movlw	0
  1537  000C40  22F4               	addwfc	prodh,f,c
  1538  000C42  50F3               	movf	prodl,w,c
  1539  000C44  2455               	addwf	_uc_ptr,w,c
  1540  000C46  6EE1               	movwf	fsr1l,c
  1541  000C48  50F4               	movf	prodh,w,c
  1542  000C4A  2056               	addwfc	_uc_ptr+1,w,c
  1543  000C4C  6EE2               	movwf	fsr1h,c
  1544  000C4E  CFDF FFE7          	movff	indf2,indf1
  1545                           
  1546                           ; BSR set to: 0
  1547  000C52  EE20 F00B          	lfsr	2,11
  1548  000C56  5055               	movf	_uc_ptr,w,c
  1549  000C58  26D9               	addwf	fsr2l,f,c
  1550  000C5A  5056               	movf	_uc_ptr+1,w,c
  1551  000C5C  22DA               	addwfc	fsr2h,f,c
  1552  000C5E  2ADF               	incf	indf2,f,c
  1553  000C60                     l2557:
  1554  000C60  EE20 F00B          	lfsr	2,11
  1555  000C64  5055               	movf	_uc_ptr,w,c
  1556  000C66  26D9               	addwf	fsr2l,f,c
  1557  000C68  5056               	movf	_uc_ptr+1,w,c
  1558  000C6A  22DA               	addwfc	fsr2h,f,c
  1559  000C6C  50DF               	movf	indf2,w,c
  1560  000C6E  0100               	movlb	0	; () banked
  1561  000C70  6FAF               	movwf	??_uart_trans& (0+255),b
  1562  000C72  0100               	movlb	0	; () banked
  1563  000C74  0100               	movlb	0	; () banked
  1564  000C76  51B1               	movf	uart_trans@length& (0+255),w,b
  1565  000C78  0100               	movlb	0	; () banked
  1566  000C7A  5DAF               	subwf	??_uart_trans& (0+255),w,b
  1567  000C7C  A0D8               	btfss	status,0,c
  1568  000C7E  D7BB               	goto	l2553
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;my_uart.c: 60: }
  1572                           ;my_uart.c: 61: uc_ptr->txBufind = 0;
  1573                           
  1574                           ; BSR set to: 0
  1575  000C80  EE20 F00C          	lfsr	2,12
  1576  000C84  5055               	movf	_uc_ptr,w,c
  1577  000C86  26D9               	addwf	fsr2l,f,c
  1578  000C88  5056               	movf	_uc_ptr+1,w,c
  1579  000C8A  22DA               	addwfc	fsr2h,f,c
  1580  000C8C  0E00               	movlw	0
  1581  000C8E  6EDF               	movwf	indf2,c
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;my_uart.c: 62: PIE1bits.TX1IE = 1;
  1585  000C90  889D               	bsf	3997,4,c	;volatile
  1586                           
  1587                           ; BSR set to: 0
  1588  000C92  0012               	return	
  1589  000C94                     __end_of_uart_trans:
  1590                           	opt stack 0
  1591                           tblptru	equ	0xFF8
  1592                           tblptrh	equ	0xFF7
  1593                           tblptrl	equ	0xFF6
  1594                           tablat	equ	0xFF5
  1595                           prodh	equ	0xFF4
  1596                           prodl	equ	0xFF3
  1597                           postinc0	equ	0xFEE
  1598                           wreg	equ	0xFE8
  1599                           indf1	equ	0xFE7
  1600                           postdec1	equ	0xFE5
  1601                           fsr1h	equ	0xFE2
  1602                           fsr1l	equ	0xFE1
  1603                           indf2	equ	0xFDF
  1604                           fsr2h	equ	0xFDA
  1605                           fsr2l	equ	0xFD9
  1606                           status	equ	0xFD8
  1607                           
  1608 ;; *************** function _timer1_lthread *****************
  1609 ;; Defined at:
  1610 ;;		line 14 in file "../src/timer1_thread.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  tptr            2   71[BANK0 ] PTR struct __timer1_thre
  1613 ;;		 -> main@t1thread_data(2), 
  1614 ;;  msgtype         2   73[BANK0 ] int 
  1615 ;;  length          2   75[BANK0 ] int 
  1616 ;;  msgbuffer       2   77[BANK0 ] PTR unsigned char 
  1617 ;;		 -> main@msgbuffer(29), 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  retval          1   80[BANK0 ] char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  2   71[BANK0 ] int 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1629 ;;      Params:         0       8       0       0       0
  1630 ;;      Locals:         0       1       0       0       0
  1631 ;;      Temps:          0       1       0       0       0
  1632 ;;      Totals:         0      10       0       0       0
  1633 ;;Total ram usage:       10 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:   14
  1636 ;; This function calls:
  1637 ;;		_FromMainHigh_sendmsg
  1638 ;;		___lwmod
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text2
  1645  001166                     __ptext2:
  1646                           	opt stack 0
  1647  001166                     _timer1_lthread:
  1648                           	opt stack 16
  1649                           
  1650                           ;timer1_thread.c: 15: signed char retval;
  1651                           ;timer1_thread.c: 17: tptr->msgcount++;
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;incstack = 0
  1655  001166  C0C7  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1656  00116A  C0C8  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1657  00116E  2ADE               	incf	postinc2,f,c
  1658  001170  0E00               	movlw	0
  1659  001172  22DD               	addwfc	postdec2,f,c
  1660                           
  1661                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1662  001174  C0C7  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1663  001178  C0C8  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1664  00117C  0100               	movlb	0	; () banked
  1665  00117E  CFDE F0AD          	movff	postinc2,___lwmod@dividend
  1666  001182  0100               	movlb	0	; () banked
  1667  001184  CFDD F0AE          	movff	postdec2,___lwmod@dividend+1
  1668  001188  0E00               	movlw	0
  1669  00118A  0100               	movlb	0	; () banked
  1670  00118C  0100               	movlb	0	; () banked
  1671  00118E  6FB0               	movwf	(___lwmod@divisor+1)& (0+255),b
  1672  001190  0E0A               	movlw	10
  1673  001192  0100               	movlb	0	; () banked
  1674  001194  6FAF               	movwf	___lwmod@divisor& (0+255),b
  1675  001196  EC36  F007         	call	___lwmod	;wreg free
  1676  00119A  0100               	movlb	0	; () banked
  1677  00119C  0100               	movlb	0	; () banked
  1678  00119E  51AD               	movf	?___lwmod& (0+255),w,b
  1679  0011A0  0A09               	xorlw	9
  1680  0011A2  0100               	movlb	0	; () banked
  1681  0011A4  11AE               	iorwf	(?___lwmod+1)& (0+255),w,b
  1682  0011A6  A4D8               	btfss	status,2,c
  1683  0011A8  0012               	return	
  1684                           
  1685                           ; BSR set to: 0
  1686                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1687  0011AA  0100               	movlb	0	; () banked
  1688  0011AC  6FCF               	movwf	??_timer1_lthread& (0+255),b
  1689  0011AE  0E14               	movlw	20
  1690  0011B0  0100               	movlb	0	; () banked
  1691  0011B2  0100               	movlb	0	; () banked
  1692  0011B4  6FC3               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1693  0011B6  0100               	movlb	0	; () banked
  1694  0011B8  51CF               	movf	??_timer1_lthread& (0+255),w,b
  1695  0011BA  0100               	movlb	0	; () banked
  1696  0011BC  0100               	movlb	0	; () banked
  1697  0011BE  C0C8  F0C5         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1698  0011C2  0100               	movlb	0	; () banked
  1699  0011C4  0100               	movlb	0	; () banked
  1700  0011C6  C0C7  F0C4         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1701  0011CA  0E02               	movlw	2
  1702  0011CC  EC37  F00B         	call	_FromMainHigh_sendmsg
  1703  0011D0  0100               	movlb	0	; () banked
  1704  0011D2  0100               	movlb	0	; () banked
  1705  0011D4  6FD0               	movwf	timer1_lthread@retval& (0+255),b
  1706  0011D6  0012               	return	
  1707  0011D8                     __end_of_timer1_lthread:
  1708                           	opt stack 0
  1709                           tblptru	equ	0xFF8
  1710                           tblptrh	equ	0xFF7
  1711                           tblptrl	equ	0xFF6
  1712                           tablat	equ	0xFF5
  1713                           prodh	equ	0xFF4
  1714                           prodl	equ	0xFF3
  1715                           postinc0	equ	0xFEE
  1716                           wreg	equ	0xFE8
  1717                           indf1	equ	0xFE7
  1718                           postdec1	equ	0xFE5
  1719                           fsr1h	equ	0xFE2
  1720                           fsr1l	equ	0xFE1
  1721                           indf2	equ	0xFDF
  1722                           postinc2	equ	0xFDE
  1723                           postdec2	equ	0xFDD
  1724                           fsr2h	equ	0xFDA
  1725                           fsr2l	equ	0xFD9
  1726                           status	equ	0xFD8
  1727                           
  1728 ;; *************** function ___lwmod *****************
  1729 ;; Defined at:
  1730 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  dividend        2   45[BANK0 ] unsigned int 
  1733 ;;  divisor         2   47[BANK0 ] unsigned int 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  counter         1   50[BANK0 ] unsigned char 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  2   45[BANK0 ] unsigned int 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1745 ;;      Params:         0       4       0       0       0
  1746 ;;      Locals:         0       1       0       0       0
  1747 ;;      Temps:          0       1       0       0       0
  1748 ;;      Totals:         0       6       0       0       0
  1749 ;;Total ram usage:        6 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:   11
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_timer1_lthread
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text3
  1760  000E6C                     __ptext3:
  1761                           	opt stack 0
  1762  000E6C                     ___lwmod:
  1763                           	opt stack 18
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;incstack = 0
  1767  000E6C  0100               	movlb	0	; () banked
  1768  000E6E  0100               	movlb	0	; () banked
  1769  000E70  51B0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1770  000E72  11AF               	iorwf	___lwmod@divisor& (0+255),w,b
  1771  000E74  B4D8               	btfsc	status,2,c
  1772  000E76  D03A               	goto	l1099
  1773                           
  1774                           ; BSR set to: 0
  1775  000E78  0100               	movlb	0	; () banked
  1776  000E7A  6FB1               	movwf	??___lwmod& (0+255),b
  1777  000E7C  0E01               	movlw	1
  1778  000E7E  0100               	movlb	0	; () banked
  1779  000E80  0100               	movlb	0	; () banked
  1780  000E82  6FB2               	movwf	___lwmod@counter& (0+255),b
  1781  000E84  0100               	movlb	0	; () banked
  1782  000E86  51B1               	movf	??___lwmod& (0+255),w,b
  1783  000E88  D009               	goto	l2977
  1784  000E8A                     l2975:
  1785                           
  1786                           ; BSR set to: 0
  1787  000E8A  0100               	movlb	0	; () banked
  1788  000E8C  0100               	movlb	0	; () banked
  1789  000E8E  0100               	movlb	0	; () banked
  1790  000E90  90D8               	bcf	status,0,c
  1791  000E92  37AF               	rlcf	___lwmod@divisor& (0+255),f,b
  1792  000E94  37B0               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1793  000E96  0100               	movlb	0	; () banked
  1794  000E98  0100               	movlb	0	; () banked
  1795  000E9A  2BB2               	incf	___lwmod@counter& (0+255),f,b
  1796  000E9C                     l2977:
  1797                           
  1798                           ; BSR set to: 0
  1799  000E9C  0100               	movlb	0	; () banked
  1800  000E9E  0100               	movlb	0	; () banked
  1801  000EA0  AFB0               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1802  000EA2  D7F3               	goto	l2975
  1803  000EA4                     l2979:
  1804                           
  1805                           ; BSR set to: 0
  1806  000EA4  0100               	movlb	0	; () banked
  1807  000EA6  0100               	movlb	0	; () banked
  1808  000EA8  51AF               	movf	___lwmod@divisor& (0+255),w,b
  1809  000EAA  0100               	movlb	0	; () banked
  1810  000EAC  0100               	movlb	0	; () banked
  1811  000EAE  5DAD               	subwf	___lwmod@dividend& (0+255),w,b
  1812  000EB0  0100               	movlb	0	; () banked
  1813  000EB2  0100               	movlb	0	; () banked
  1814  000EB4  51B0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1815  000EB6  0100               	movlb	0	; () banked
  1816  000EB8  0100               	movlb	0	; () banked
  1817  000EBA  59AE               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1818  000EBC  A0D8               	btfss	status,0,c
  1819  000EBE  D00C               	goto	l2983
  1820                           
  1821                           ; BSR set to: 0
  1822  000EC0  0100               	movlb	0	; () banked
  1823  000EC2  0100               	movlb	0	; () banked
  1824  000EC4  51AF               	movf	___lwmod@divisor& (0+255),w,b
  1825  000EC6  0100               	movlb	0	; () banked
  1826  000EC8  0100               	movlb	0	; () banked
  1827  000ECA  5FAD               	subwf	___lwmod@dividend& (0+255),f,b
  1828  000ECC  0100               	movlb	0	; () banked
  1829  000ECE  0100               	movlb	0	; () banked
  1830  000ED0  51B0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1831  000ED2  0100               	movlb	0	; () banked
  1832  000ED4  0100               	movlb	0	; () banked
  1833  000ED6  5BAE               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1834  000ED8                     l2983:
  1835                           
  1836                           ; BSR set to: 0
  1837  000ED8  0100               	movlb	0	; () banked
  1838  000EDA  0100               	movlb	0	; () banked
  1839  000EDC  0100               	movlb	0	; () banked
  1840  000EDE  90D8               	bcf	status,0,c
  1841  000EE0  33B0               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1842  000EE2  33AF               	rrcf	___lwmod@divisor& (0+255),f,b
  1843                           
  1844                           ; BSR set to: 0
  1845  000EE4  0100               	movlb	0	; () banked
  1846  000EE6  0100               	movlb	0	; () banked
  1847  000EE8  2FB2               	decfsz	___lwmod@counter& (0+255),f,b
  1848  000EEA  D7DC               	goto	l2979
  1849  000EEC                     l1099:
  1850                           
  1851                           ; BSR set to: 0
  1852  000EEC  C0AD  F0AD         	movff	___lwmod@dividend,?___lwmod
  1853  000EF0  C0AE  F0AE         	movff	___lwmod@dividend+1,?___lwmod+1
  1854                           
  1855                           ; BSR set to: 0
  1856  000EF4  0012               	return	
  1857  000EF6                     __end_of___lwmod:
  1858                           	opt stack 0
  1859                           tblptru	equ	0xFF8
  1860                           tblptrh	equ	0xFF7
  1861                           tblptrl	equ	0xFF6
  1862                           tablat	equ	0xFF5
  1863                           prodh	equ	0xFF4
  1864                           prodl	equ	0xFF3
  1865                           postinc0	equ	0xFEE
  1866                           wreg	equ	0xFE8
  1867                           indf1	equ	0xFE7
  1868                           postdec1	equ	0xFE5
  1869                           fsr1h	equ	0xFE2
  1870                           fsr1l	equ	0xFE1
  1871                           indf2	equ	0xFDF
  1872                           postinc2	equ	0xFDE
  1873                           postdec2	equ	0xFDD
  1874                           fsr2h	equ	0xFDA
  1875                           fsr2l	equ	0xFD9
  1876                           status	equ	0xFD8
  1877                           
  1878 ;; *************** function _FromMainHigh_sendmsg *****************
  1879 ;; Defined at:
  1880 ;;		line 174 in file "../src/messages.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  length          1    wreg     unsigned char 
  1883 ;;  msgtype         1   67[BANK0 ] unsigned char 
  1884 ;;  data            2   68[BANK0 ] PTR void 
  1885 ;;		 -> main@t1thread_data(2), 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  length          1   70[BANK0 ] unsigned char 
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      char 
  1890 ;; Registers used:
  1891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1897 ;;      Params:         0       3       0       0       0
  1898 ;;      Locals:         0       1       0       0       0
  1899 ;;      Temps:          0       0       0       0       0
  1900 ;;      Totals:         0       4       0       0       0
  1901 ;;Total ram usage:        4 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:   13
  1904 ;; This function calls:
  1905 ;;		_send_msg
  1906 ;; This function is called by:
  1907 ;;		_timer1_lthread
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text4
  1912  00166E                     __ptext4:
  1913                           	opt stack 0
  1914  00166E                     _FromMainHigh_sendmsg:
  1915                           	opt stack 16
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;incstack = 0
  1919                           ;FromMainHigh_sendmsg@length stored from wreg
  1920  00166E  CFE8 F0C6          	movff	wreg,FromMainHigh_sendmsg@length
  1921                           
  1922                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1923  001672  0103               	movlb	3	; () banked
  1924  001674  0E03               	movlw	high _FromMainHigh_MQ
  1925  001676  0100               	movlb	0	; () banked
  1926  001678  0100               	movlb	0	; () banked
  1927  00167A  6FB8               	movwf	(send_msg@qptr+1)& (0+255),b
  1928  00167C  0103               	movlb	3	; () banked
  1929  00167E  0E00               	movlw	low _FromMainHigh_MQ
  1930  001680  0100               	movlb	0	; () banked
  1931  001682  0100               	movlb	0	; () banked
  1932  001684  6FB7               	movwf	send_msg@qptr& (0+255),b
  1933  001686  C0C6  F0B9         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1934  00168A  C0C3  F0BA         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1935  00168E  0100               	movlb	0	; () banked
  1936  001690  0100               	movlb	0	; () banked
  1937  001692  C0C5  F0BC         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1938  001696  0100               	movlb	0	; () banked
  1939  001698  0100               	movlb	0	; () banked
  1940  00169A  C0C4  F0BB         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1941  00169E  ECEC  F004         	call	_send_msg	;wreg free
  1942  0016A2  0012               	return	
  1943  0016A4                     __end_of_FromMainHigh_sendmsg:
  1944                           	opt stack 0
  1945                           tblptru	equ	0xFF8
  1946                           tblptrh	equ	0xFF7
  1947                           tblptrl	equ	0xFF6
  1948                           tablat	equ	0xFF5
  1949                           prodh	equ	0xFF4
  1950                           prodl	equ	0xFF3
  1951                           postinc0	equ	0xFEE
  1952                           wreg	equ	0xFE8
  1953                           indf1	equ	0xFE7
  1954                           postdec1	equ	0xFE5
  1955                           fsr1h	equ	0xFE2
  1956                           fsr1l	equ	0xFE1
  1957                           indf2	equ	0xFDF
  1958                           postinc2	equ	0xFDE
  1959                           postdec2	equ	0xFDD
  1960                           fsr2h	equ	0xFDA
  1961                           fsr2l	equ	0xFD9
  1962                           status	equ	0xFD8
  1963                           
  1964 ;; *************** function _send_msg *****************
  1965 ;; Defined at:
  1966 ;;		line 24 in file "../src/messages.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  qptr            2   55[BANK0 ] PTR struct __msg_queue
  1969 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  1970 ;;  length          1   57[BANK0 ] unsigned char 
  1971 ;;  msgtype         1   58[BANK0 ] unsigned char 
  1972 ;;  data            2   59[BANK0 ] PTR void 
  1973 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(65), 
  1974 ;;		 -> main@uc(13), 
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;  qmsg            2   65[BANK0 ] PTR struct __msg
  1977 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  1978 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  1979 ;;  tlength         2   62[BANK0 ] unsigned int 
  1980 ;;  slot            1   64[BANK0 ] unsigned char 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      char 
  1983 ;; Registers used:
  1984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1990 ;;      Params:         0       6       0       0       0
  1991 ;;      Locals:         0       5       0       0       0
  1992 ;;      Temps:          0       1       0       0       0
  1993 ;;      Totals:         0      12       0       0       0
  1994 ;;Total ram usage:       12 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:   12
  1997 ;; This function calls:
  1998 ;;		_memcpy
  1999 ;; This function is called by:
  2000 ;;		_FromMainHigh_sendmsg
  2001 ;;		_FromMainLow_sendmsg
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text5
  2006  0009D8                     __ptext5:
  2007                           	opt stack 0
  2008  0009D8                     _send_msg:
  2009                           	opt stack 16
  2010                           
  2011                           ;messages.c: 25: unsigned char slot;
  2012                           ;messages.c: 27: msg *qmsg;
  2013                           ;messages.c: 28: size_t tlength = length;
  2014                           
  2015                           ;incstack = 0
  2016  0009D8  0100               	movlb	0	; () banked
  2017  0009DA  0100               	movlb	0	; () banked
  2018  0009DC  C0B9  F0BE         	movff	send_msg@length,send_msg@tlength
  2019  0009E0  0100               	movlb	0	; () banked
  2020  0009E2  0100               	movlb	0	; () banked
  2021  0009E4  6BBF               	clrf	(send_msg@tlength+1)& (0+255),b
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2025  0009E6  0100               	movlb	0	; () banked
  2026  0009E8  EE20 F07C          	lfsr	2,124
  2027  0009EC  0100               	movlb	0	; () banked
  2028  0009EE  51B7               	movf	send_msg@qptr& (0+255),w,b
  2029  0009F0  26D9               	addwf	fsr2l,f,c
  2030  0009F2  0100               	movlb	0	; () banked
  2031  0009F4  51B8               	movf	(send_msg@qptr+1)& (0+255),w,b
  2032  0009F6  22DA               	addwfc	fsr2h,f,c
  2033  0009F8  50DF               	movf	indf2,w,c
  2034  0009FA  0100               	movlb	0	; () banked
  2035  0009FC  0100               	movlb	0	; () banked
  2036  0009FE  6FC0               	movwf	send_msg@slot& (0+255),b
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2040  000A00  0100               	movlb	0	; () banked
  2041  000A02  0100               	movlb	0	; () banked
  2042  000A04  51C0               	movf	send_msg@slot& (0+255),w,b
  2043  000A06  0D1F               	mullw	31
  2044  000A08  50F3               	movf	prodl,w,c
  2045  000A0A  0100               	movlb	0	; () banked
  2046  000A0C  0100               	movlb	0	; () banked
  2047  000A0E  25B7               	addwf	send_msg@qptr& (0+255),w,b
  2048  000A10  0100               	movlb	0	; () banked
  2049  000A12  0100               	movlb	0	; () banked
  2050  000A14  6FC1               	movwf	send_msg@qmsg& (0+255),b
  2051  000A16  50F4               	movf	prodh,w,c
  2052  000A18  0100               	movlb	0	; () banked
  2053  000A1A  0100               	movlb	0	; () banked
  2054  000A1C  21B8               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2055  000A1E  0100               	movlb	0	; () banked
  2056  000A20  6FC2               	movwf	(send_msg@qmsg+1)& (0+255),b
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;messages.c: 41: if (qmsg->full != 0) {
  2060  000A22  C0C1  FFD9         	movff	send_msg@qmsg,fsr2l
  2061  000A26  C0C2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2062  000A2A  50DF               	movf	indf2,w,c
  2063  000A2C  B4D8               	btfsc	status,2,c
  2064  000A2E  D002               	goto	l2617
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;messages.c: 42: return (-1);
  2068  000A30  0EFF               	movlw	255
  2069  000A32  0012               	return	
  2070  000A34                     l2617:
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;messages.c: 43: }
  2074                           ;messages.c: 46: qmsg->length = length;
  2075  000A34  0100               	movlb	0	; () banked
  2076  000A36  EE20 F001          	lfsr	2,1
  2077  000A3A  0100               	movlb	0	; () banked
  2078  000A3C  51C1               	movf	send_msg@qmsg& (0+255),w,b
  2079  000A3E  26D9               	addwf	fsr2l,f,c
  2080  000A40  0100               	movlb	0	; () banked
  2081  000A42  51C2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2082  000A44  22DA               	addwfc	fsr2h,f,c
  2083  000A46  0100               	movlb	0	; () banked
  2084  000A48  C0B9  FFDF         	movff	send_msg@length,indf2
  2085                           
  2086                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2087  000A4C  0100               	movlb	0	; () banked
  2088  000A4E  EE20 F002          	lfsr	2,2
  2089  000A52  0100               	movlb	0	; () banked
  2090  000A54  51C1               	movf	send_msg@qmsg& (0+255),w,b
  2091  000A56  26D9               	addwf	fsr2l,f,c
  2092  000A58  0100               	movlb	0	; () banked
  2093  000A5A  51C2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2094  000A5C  22DA               	addwfc	fsr2h,f,c
  2095  000A5E  0100               	movlb	0	; () banked
  2096  000A60  C0BA  FFDF         	movff	send_msg@msgtype,indf2
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2100  000A64  0E03               	movlw	3
  2101  000A66  0100               	movlb	0	; () banked
  2102  000A68  0100               	movlb	0	; () banked
  2103  000A6A  25C1               	addwf	send_msg@qmsg& (0+255),w,b
  2104  000A6C  0100               	movlb	0	; () banked
  2105  000A6E  0100               	movlb	0	; () banked
  2106  000A70  6FAD               	movwf	memcpy@d1& (0+255),b
  2107  000A72  0E00               	movlw	0
  2108  000A74  0100               	movlb	0	; () banked
  2109  000A76  0100               	movlb	0	; () banked
  2110  000A78  21C2               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2111  000A7A  0100               	movlb	0	; () banked
  2112  000A7C  6FAE               	movwf	(memcpy@d1+1)& (0+255),b
  2113  000A7E  0100               	movlb	0	; () banked
  2114  000A80  0100               	movlb	0	; () banked
  2115  000A82  C0BC  F0B0         	movff	send_msg@data+1,memcpy@s1+1
  2116  000A86  0100               	movlb	0	; () banked
  2117  000A88  0100               	movlb	0	; () banked
  2118  000A8A  C0BB  F0AF         	movff	send_msg@data,memcpy@s1
  2119  000A8E  C0BE  F0B1         	movff	send_msg@tlength,memcpy@n
  2120  000A92  C0BF  F0B2         	movff	send_msg@tlength+1,memcpy@n+1
  2121  000A96  ECF3  F009         	call	_memcpy	;wreg free
  2122                           
  2123                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2124  000A9A  0100               	movlb	0	; () banked
  2125  000A9C  EE20 F07C          	lfsr	2,124
  2126  000AA0  0100               	movlb	0	; () banked
  2127  000AA2  51B7               	movf	send_msg@qptr& (0+255),w,b
  2128  000AA4  26D9               	addwf	fsr2l,f,c
  2129  000AA6  0100               	movlb	0	; () banked
  2130  000AA8  51B8               	movf	(send_msg@qptr+1)& (0+255),w,b
  2131  000AAA  22DA               	addwfc	fsr2h,f,c
  2132  000AAC  0100               	movlb	0	; () banked
  2133  000AAE  EE10 F07C          	lfsr	1,124
  2134  000AB2  0100               	movlb	0	; () banked
  2135  000AB4  51B7               	movf	send_msg@qptr& (0+255),w,b
  2136  000AB6  26E1               	addwf	fsr1l,f,c
  2137  000AB8  0100               	movlb	0	; () banked
  2138  000ABA  51B8               	movf	(send_msg@qptr+1)& (0+255),w,b
  2139  000ABC  22E2               	addwfc	fsr1h,f,c
  2140  000ABE  50E7               	movf	indf1,w,c
  2141  000AC0  0100               	movlb	0	; () banked
  2142  000AC2  6FBD               	movwf	??_send_msg& (0+255),b
  2143  000AC4  0100               	movlb	0	; () banked
  2144  000AC6  29BD               	incf	??_send_msg& (0+255),w,b
  2145  000AC8  0B03               	andlw	3
  2146  000ACA  6EDF               	movwf	indf2,c
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;messages.c: 59: qmsg->full = 1;
  2150  000ACC  C0C1  FFD9         	movff	send_msg@qmsg,fsr2l
  2151  000AD0  C0C2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2152  000AD4  0E01               	movlw	1
  2153  000AD6  6EDF               	movwf	indf2,c
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;messages.c: 60: return (1);
  2157  000AD8  0E01               	movlw	1
  2158  000ADA  0012               	return	
  2159  000ADC                     __end_of_send_msg:
  2160                           	opt stack 0
  2161                           tblptru	equ	0xFF8
  2162                           tblptrh	equ	0xFF7
  2163                           tblptrl	equ	0xFF6
  2164                           tablat	equ	0xFF5
  2165                           prodh	equ	0xFF4
  2166                           prodl	equ	0xFF3
  2167                           postinc0	equ	0xFEE
  2168                           wreg	equ	0xFE8
  2169                           indf1	equ	0xFE7
  2170                           postdec1	equ	0xFE5
  2171                           fsr1h	equ	0xFE2
  2172                           fsr1l	equ	0xFE1
  2173                           indf2	equ	0xFDF
  2174                           postinc2	equ	0xFDE
  2175                           postdec2	equ	0xFDD
  2176                           fsr2h	equ	0xFDA
  2177                           fsr2l	equ	0xFD9
  2178                           status	equ	0xFD8
  2179                           
  2180 ;; *************** function _timer0_lthread *****************
  2181 ;; Defined at:
  2182 ;;		line 9 in file "../src/timer0_thread.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  tptr            2   45[BANK0 ] PTR struct __timer0_thre
  2185 ;;		 -> main@t0thread_data(2), 
  2186 ;;  msgtype         2   47[BANK0 ] int 
  2187 ;;  length          2   49[BANK0 ] int 
  2188 ;;  msgbuffer       2   51[BANK0 ] PTR unsigned char 
  2189 ;;		 -> main@msgbuffer(29), 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  msgval          2   53[BANK0 ] PTR unsigned int 
  2192 ;;		 -> main@msgbuffer(29), 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  2   45[BANK0 ] int 
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, status,0
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2202 ;;      Params:         0       8       0       0       0
  2203 ;;      Locals:         0       2       0       0       0
  2204 ;;      Temps:          0       0       0       0       0
  2205 ;;      Totals:         0      10       0       0       0
  2206 ;;Total ram usage:       10 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:   11
  2209 ;; This function calls:
  2210 ;;		Nothing
  2211 ;; This function is called by:
  2212 ;;		_main
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text6
  2217  001862                     __ptext6:
  2218                           	opt stack 0
  2219  001862                     _timer0_lthread:
  2220                           	opt stack 19
  2221                           
  2222                           ;timer0_thread.c: 10: unsigned int *msgval;
  2223                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;incstack = 0
  2227  001862  0100               	movlb	0	; () banked
  2228  001864  0100               	movlb	0	; () banked
  2229  001866  C0B4  F0B6         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2230  00186A  0100               	movlb	0	; () banked
  2231  00186C  0100               	movlb	0	; () banked
  2232  00186E  C0B3  F0B5         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2233                           
  2234                           ; BSR set to: 0
  2235  001872  0012               	return	
  2236  001874                     __end_of_timer0_lthread:
  2237                           	opt stack 0
  2238                           tblptru	equ	0xFF8
  2239                           tblptrh	equ	0xFF7
  2240                           tblptrl	equ	0xFF6
  2241                           tablat	equ	0xFF5
  2242                           prodh	equ	0xFF4
  2243                           prodl	equ	0xFF3
  2244                           postinc0	equ	0xFEE
  2245                           wreg	equ	0xFE8
  2246                           indf1	equ	0xFE7
  2247                           postdec1	equ	0xFE5
  2248                           fsr1h	equ	0xFE2
  2249                           fsr1l	equ	0xFE1
  2250                           indf2	equ	0xFDF
  2251                           postinc2	equ	0xFDE
  2252                           postdec2	equ	0xFDD
  2253                           fsr2h	equ	0xFDA
  2254                           fsr2l	equ	0xFD9
  2255                           status	equ	0xFD8
  2256                           
  2257 ;; *************** function _init_uart_recv *****************
  2258 ;; Defined at:
  2259 ;;		line 49 in file "../src/my_uart.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  uc              2   45[BANK0 ] PTR struct __uart_comm
  2262 ;;		 -> main@uc(13), 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;		None               void
  2267 ;; Registers used:
  2268 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2274 ;;      Params:         0       2       0       0       0
  2275 ;;      Locals:         0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0
  2277 ;;      Totals:         0       2       0       0       0
  2278 ;;Total ram usage:        2 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:   11
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_main
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text7
  2289  0017F8                     __ptext7:
  2290                           	opt stack 0
  2291  0017F8                     _init_uart_recv:
  2292                           	opt stack 19
  2293                           
  2294                           ;my_uart.c: 52: uc_ptr = uc;
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;incstack = 0
  2298  0017F8  0100               	movlb	0	; () banked
  2299  0017FA  C0AE  F056         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2300  0017FE  0100               	movlb	0	; () banked
  2301  001800  C0AD  F055         	movff	init_uart_recv@uc,_uc_ptr
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;my_uart.c: 53: uc_ptr->buflen = 0;
  2305  001804  EE20 F005          	lfsr	2,5
  2306  001808  5055               	movf	_uc_ptr,w,c
  2307  00180A  26D9               	addwf	fsr2l,f,c
  2308  00180C  5056               	movf	_uc_ptr+1,w,c
  2309  00180E  22DA               	addwfc	fsr2h,f,c
  2310  001810  0E00               	movlw	0
  2311  001812  6EDF               	movwf	indf2,c
  2312                           
  2313                           ; BSR set to: 0
  2314  001814  0012               	return	
  2315  001816                     __end_of_init_uart_recv:
  2316                           	opt stack 0
  2317                           tblptru	equ	0xFF8
  2318                           tblptrh	equ	0xFF7
  2319                           tblptrl	equ	0xFF6
  2320                           tablat	equ	0xFF5
  2321                           prodh	equ	0xFF4
  2322                           prodl	equ	0xFF3
  2323                           postinc0	equ	0xFEE
  2324                           wreg	equ	0xFE8
  2325                           indf1	equ	0xFE7
  2326                           postdec1	equ	0xFE5
  2327                           fsr1h	equ	0xFE2
  2328                           fsr1l	equ	0xFE1
  2329                           indf2	equ	0xFDF
  2330                           postinc2	equ	0xFDE
  2331                           postdec2	equ	0xFDD
  2332                           fsr2h	equ	0xFDA
  2333                           fsr2l	equ	0xFD9
  2334                           status	equ	0xFD8
  2335                           
  2336 ;; *************** function _init_timer1_lthread *****************
  2337 ;; Defined at:
  2338 ;;		line 6 in file "../src/timer1_thread.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  tptr            2   45[BANK0 ] PTR struct __timer1_thre
  2341 ;;		 -> main@t1thread_data(2), 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;		None
  2344 ;; Return value:  Size  Location     Type
  2345 ;;		None               void
  2346 ;; Registers used:
  2347 ;;		wreg, fsr2l, fsr2h
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2353 ;;      Params:         0       2       0       0       0
  2354 ;;      Locals:         0       0       0       0       0
  2355 ;;      Temps:          0       0       0       0       0
  2356 ;;      Totals:         0       2       0       0       0
  2357 ;;Total ram usage:        2 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:   11
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_main
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text8
  2368  001874                     __ptext8:
  2369                           	opt stack 0
  2370  001874                     _init_timer1_lthread:
  2371                           	opt stack 19
  2372                           
  2373                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;incstack = 0
  2377  001874  C0AD  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2378  001878  C0AE  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2379  00187C  0E00               	movlw	0
  2380  00187E  6EDE               	movwf	postinc2,c
  2381  001880  0E00               	movlw	0
  2382  001882  6EDD               	movwf	postdec2,c
  2383  001884  0012               	return	
  2384  001886                     __end_of_init_timer1_lthread:
  2385                           	opt stack 0
  2386                           tblptru	equ	0xFF8
  2387                           tblptrh	equ	0xFF7
  2388                           tblptrl	equ	0xFF6
  2389                           tablat	equ	0xFF5
  2390                           prodh	equ	0xFF4
  2391                           prodl	equ	0xFF3
  2392                           postinc0	equ	0xFEE
  2393                           wreg	equ	0xFE8
  2394                           indf1	equ	0xFE7
  2395                           postdec1	equ	0xFE5
  2396                           fsr1h	equ	0xFE2
  2397                           fsr1l	equ	0xFE1
  2398                           indf2	equ	0xFDF
  2399                           postinc2	equ	0xFDE
  2400                           postdec2	equ	0xFDD
  2401                           fsr2h	equ	0xFDA
  2402                           fsr2l	equ	0xFD9
  2403                           status	equ	0xFD8
  2404                           
  2405 ;; *************** function _init_queues *****************
  2406 ;; Defined at:
  2407 ;;		line 194 in file "../src/messages.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;		None
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;		None
  2412 ;; Return value:  Size  Location     Type
  2413 ;;		None               void
  2414 ;; Registers used:
  2415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2421 ;;      Params:         0       0       0       0       0
  2422 ;;      Locals:         0       0       0       0       0
  2423 ;;      Temps:          0       1       0       0       0
  2424 ;;      Totals:         0       1       0       0       0
  2425 ;;Total ram usage:        1 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:   12
  2428 ;; This function calls:
  2429 ;;		_init_queue
  2430 ;; This function is called by:
  2431 ;;		_main
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text9
  2436  0011D8                     __ptext9:
  2437                           	opt stack 0
  2438  0011D8                     _init_queues:
  2439                           	opt stack 18
  2440                           
  2441                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2442                           
  2443                           ;incstack = 0
  2444  0011D8  0100               	movlb	0	; () banked
  2445  0011DA  6FB1               	movwf	??_init_queues& (0+255),b
  2446  0011DC  0E00               	movlw	0
  2447  0011DE  6E49               	movwf	_MQ_Main_Willing_to_block,c
  2448  0011E0  0100               	movlb	0	; () banked
  2449  0011E2  51B1               	movf	??_init_queues& (0+255),w,b
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2453  0011E4  0101               	movlb	1	; () banked
  2454  0011E6  0E01               	movlw	high _ToMainLow_MQ
  2455  0011E8  0100               	movlb	0	; () banked
  2456  0011EA  0100               	movlb	0	; () banked
  2457  0011EC  6FAE               	movwf	(init_queue@qptr+1)& (0+255),b
  2458  0011EE  0101               	movlb	1	; () banked
  2459  0011F0  0E00               	movlw	low _ToMainLow_MQ
  2460  0011F2  0100               	movlb	0	; () banked
  2461  0011F4  0100               	movlb	0	; () banked
  2462  0011F6  6FAD               	movwf	init_queue@qptr& (0+255),b
  2463  0011F8  EC3D  F008         	call	_init_queue	;wreg free
  2464                           
  2465                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2466  0011FC  0102               	movlb	2	; () banked
  2467  0011FE  0E02               	movlw	high _ToMainHigh_MQ
  2468  001200  0100               	movlb	0	; () banked
  2469  001202  0100               	movlb	0	; () banked
  2470  001204  6FAE               	movwf	(init_queue@qptr+1)& (0+255),b
  2471  001206  0102               	movlb	2	; () banked
  2472  001208  0E7E               	movlw	low _ToMainHigh_MQ
  2473  00120A  0100               	movlb	0	; () banked
  2474  00120C  0100               	movlb	0	; () banked
  2475  00120E  6FAD               	movwf	init_queue@qptr& (0+255),b
  2476  001210  EC3D  F008         	call	_init_queue	;wreg free
  2477                           
  2478                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2479  001214  0102               	movlb	2	; () banked
  2480  001216  0E02               	movlw	high _FromMainLow_MQ
  2481  001218  0100               	movlb	0	; () banked
  2482  00121A  0100               	movlb	0	; () banked
  2483  00121C  6FAE               	movwf	(init_queue@qptr+1)& (0+255),b
  2484  00121E  0102               	movlb	2	; () banked
  2485  001220  0E00               	movlw	low _FromMainLow_MQ
  2486  001222  0100               	movlb	0	; () banked
  2487  001224  0100               	movlb	0	; () banked
  2488  001226  6FAD               	movwf	init_queue@qptr& (0+255),b
  2489  001228  EC3D  F008         	call	_init_queue	;wreg free
  2490                           
  2491                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2492  00122C  0103               	movlb	3	; () banked
  2493  00122E  0E03               	movlw	high _FromMainHigh_MQ
  2494  001230  0100               	movlb	0	; () banked
  2495  001232  0100               	movlb	0	; () banked
  2496  001234  6FAE               	movwf	(init_queue@qptr+1)& (0+255),b
  2497  001236  0103               	movlb	3	; () banked
  2498  001238  0E00               	movlw	low _FromMainHigh_MQ
  2499  00123A  0100               	movlb	0	; () banked
  2500  00123C  0100               	movlb	0	; () banked
  2501  00123E  6FAD               	movwf	init_queue@qptr& (0+255),b
  2502  001240  EC3D  F008         	call	_init_queue	;wreg free
  2503  001244  0012               	return	
  2504  001246                     __end_of_init_queues:
  2505                           	opt stack 0
  2506                           tblptru	equ	0xFF8
  2507                           tblptrh	equ	0xFF7
  2508                           tblptrl	equ	0xFF6
  2509                           tablat	equ	0xFF5
  2510                           prodh	equ	0xFF4
  2511                           prodl	equ	0xFF3
  2512                           postinc0	equ	0xFEE
  2513                           wreg	equ	0xFE8
  2514                           indf1	equ	0xFE7
  2515                           postdec1	equ	0xFE5
  2516                           fsr1h	equ	0xFE2
  2517                           fsr1l	equ	0xFE1
  2518                           indf2	equ	0xFDF
  2519                           postinc2	equ	0xFDE
  2520                           postdec2	equ	0xFDD
  2521                           fsr2h	equ	0xFDA
  2522                           fsr2l	equ	0xFD9
  2523                           status	equ	0xFD8
  2524                           
  2525 ;; *************** function _init_queue *****************
  2526 ;; Defined at:
  2527 ;;		line 14 in file "../src/messages.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  qptr            2   45[BANK0 ] PTR struct __msg_queue
  2530 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  i               1   48[BANK0 ] unsigned char 
  2533 ;; Return value:  Size  Location     Type
  2534 ;;		None               void
  2535 ;; Registers used:
  2536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2542 ;;      Params:         0       2       0       0       0
  2543 ;;      Locals:         0       1       0       0       0
  2544 ;;      Temps:          0       1       0       0       0
  2545 ;;      Totals:         0       4       0       0       0
  2546 ;;Total ram usage:        4 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:   11
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_init_queues
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text10
  2557  00107A                     __ptext10:
  2558                           	opt stack 0
  2559  00107A                     _init_queue:
  2560                           	opt stack 18
  2561                           
  2562                           ;messages.c: 15: unsigned char i;
  2563                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2564                           
  2565                           ;incstack = 0
  2566  00107A  0100               	movlb	0	; () banked
  2567  00107C  EE20 F07C          	lfsr	2,124
  2568  001080  0100               	movlb	0	; () banked
  2569  001082  51AD               	movf	init_queue@qptr& (0+255),w,b
  2570  001084  26D9               	addwf	fsr2l,f,c
  2571  001086  0100               	movlb	0	; () banked
  2572  001088  51AE               	movf	(init_queue@qptr+1)& (0+255),w,b
  2573  00108A  22DA               	addwfc	fsr2h,f,c
  2574  00108C  0E00               	movlw	0
  2575  00108E  6EDF               	movwf	indf2,c
  2576                           
  2577                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2578  001090  0100               	movlb	0	; () banked
  2579  001092  EE20 F07D          	lfsr	2,125
  2580  001096  0100               	movlb	0	; () banked
  2581  001098  51AD               	movf	init_queue@qptr& (0+255),w,b
  2582  00109A  26D9               	addwf	fsr2l,f,c
  2583  00109C  0100               	movlb	0	; () banked
  2584  00109E  51AE               	movf	(init_queue@qptr+1)& (0+255),w,b
  2585  0010A0  22DA               	addwfc	fsr2h,f,c
  2586  0010A2  0E00               	movlw	0
  2587  0010A4  6EDF               	movwf	indf2,c
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2591  0010A6  0100               	movlb	0	; () banked
  2592  0010A8  6FAF               	movwf	??_init_queue& (0+255),b
  2593  0010AA  0E00               	movlw	0
  2594  0010AC  0100               	movlb	0	; () banked
  2595  0010AE  0100               	movlb	0	; () banked
  2596  0010B0  6FB0               	movwf	init_queue@i& (0+255),b
  2597  0010B2  0100               	movlb	0	; () banked
  2598  0010B4  51AF               	movf	??_init_queue& (0+255),w,b
  2599                           
  2600                           ; BSR set to: 0
  2601  0010B6  0E03               	movlw	3
  2602  0010B8  0100               	movlb	0	; () banked
  2603  0010BA  0100               	movlb	0	; () banked
  2604  0010BC  65B0               	cpfsgt	init_queue@i& (0+255),b
  2605  0010BE  D001               	goto	l2599
  2606  0010C0  0012               	return	
  2607  0010C2                     l2599:
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;messages.c: 20: qptr->queue[i].full = 0;
  2611  0010C2  0100               	movlb	0	; () banked
  2612  0010C4  0100               	movlb	0	; () banked
  2613  0010C6  51B0               	movf	init_queue@i& (0+255),w,b
  2614  0010C8  0D1F               	mullw	31
  2615  0010CA  50F3               	movf	prodl,w,c
  2616  0010CC  0100               	movlb	0	; () banked
  2617  0010CE  0100               	movlb	0	; () banked
  2618  0010D0  25AD               	addwf	init_queue@qptr& (0+255),w,b
  2619  0010D2  6ED9               	movwf	fsr2l,c
  2620  0010D4  50F4               	movf	prodh,w,c
  2621  0010D6  0100               	movlb	0	; () banked
  2622  0010D8  0100               	movlb	0	; () banked
  2623  0010DA  21AE               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2624  0010DC  6EDA               	movwf	fsr2h,c
  2625  0010DE  0E00               	movlw	0
  2626  0010E0  6EDF               	movwf	indf2,c
  2627                           
  2628                           ; BSR set to: 0
  2629  0010E2  0100               	movlb	0	; () banked
  2630  0010E4  0100               	movlb	0	; () banked
  2631  0010E6  2BB0               	incf	init_queue@i& (0+255),f,b
  2632                           
  2633                           ; BSR set to: 0
  2634  0010E8  0E03               	movlw	3
  2635  0010EA  0100               	movlb	0	; () banked
  2636  0010EC  0100               	movlb	0	; () banked
  2637  0010EE  65B0               	cpfsgt	init_queue@i& (0+255),b
  2638  0010F0  D7E8               	goto	l2599
  2639  0010F2  0012               	return	
  2640  0010F4                     __end_of_init_queue:
  2641                           	opt stack 0
  2642                           tblptru	equ	0xFF8
  2643                           tblptrh	equ	0xFF7
  2644                           tblptrl	equ	0xFF6
  2645                           tablat	equ	0xFF5
  2646                           prodh	equ	0xFF4
  2647                           prodl	equ	0xFF3
  2648                           postinc0	equ	0xFEE
  2649                           wreg	equ	0xFE8
  2650                           indf1	equ	0xFE7
  2651                           postdec1	equ	0xFE5
  2652                           fsr1h	equ	0xFE2
  2653                           fsr1l	equ	0xFE1
  2654                           indf2	equ	0xFDF
  2655                           postinc2	equ	0xFDE
  2656                           postdec2	equ	0xFDD
  2657                           fsr2h	equ	0xFDA
  2658                           fsr2l	equ	0xFD9
  2659                           status	equ	0xFD8
  2660                           
  2661 ;; *************** function _init_i2c *****************
  2662 ;; Defined at:
  2663 ;;		line 424 in file "../src/my_i2c.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  ic              2   45[BANK0 ] PTR struct __i2c_comm
  2666 ;;		 -> main@ic(65), 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;		None               void
  2671 ;; Registers used:
  2672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2678 ;;      Params:         0       2       0       0       0
  2679 ;;      Locals:         0       0       0       0       0
  2680 ;;      Temps:          0       0       0       0       0
  2681 ;;      Totals:         0       2       0       0       0
  2682 ;;Total ram usage:        2 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:   11
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_main
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text11
  2693  001246                     __ptext11:
  2694                           	opt stack 0
  2695  001246                     _init_i2c:
  2696                           	opt stack 19
  2697                           
  2698                           ;my_i2c.c: 425: ic_ptr = ic;
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;incstack = 0
  2702  001246  0100               	movlb	0	; () banked
  2703  001248  0100               	movlb	0	; () banked
  2704  00124A  C0AE  F0D2         	movff	init_i2c@ic+1,_ic_ptr+1
  2705  00124E  0100               	movlb	0	; () banked
  2706  001250  0100               	movlb	0	; () banked
  2707  001252  C0AD  F0D1         	movff	init_i2c@ic,_ic_ptr
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;my_i2c.c: 426: ic_ptr->buflen = 0;
  2711  001256  0100               	movlb	0	; () banked
  2712  001258  EE20 F01C          	lfsr	2,28
  2713  00125C  0100               	movlb	0	; () banked
  2714  00125E  51D1               	movf	_ic_ptr& (0+255),w,b
  2715  001260  26D9               	addwf	fsr2l,f,c
  2716  001262  0100               	movlb	0	; () banked
  2717  001264  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2718  001266  22DA               	addwfc	fsr2h,f,c
  2719  001268  0E00               	movlw	0
  2720  00126A  6EDF               	movwf	indf2,c
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;my_i2c.c: 427: ic_ptr->event_count = 0;
  2724  00126C  0100               	movlb	0	; () banked
  2725  00126E  EE20 F01E          	lfsr	2,30
  2726  001272  0100               	movlb	0	; () banked
  2727  001274  51D1               	movf	_ic_ptr& (0+255),w,b
  2728  001276  26D9               	addwf	fsr2l,f,c
  2729  001278  0100               	movlb	0	; () banked
  2730  00127A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2731  00127C  22DA               	addwfc	fsr2h,f,c
  2732  00127E  0E00               	movlw	0
  2733  001280  6EDF               	movwf	indf2,c
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;my_i2c.c: 428: ic_ptr->status = 0x5;
  2737  001282  0100               	movlb	0	; () banked
  2738  001284  EE20 F01F          	lfsr	2,31
  2739  001288  0100               	movlb	0	; () banked
  2740  00128A  51D1               	movf	_ic_ptr& (0+255),w,b
  2741  00128C  26D9               	addwf	fsr2l,f,c
  2742  00128E  0100               	movlb	0	; () banked
  2743  001290  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2744  001292  22DA               	addwfc	fsr2h,f,c
  2745  001294  0E05               	movlw	5
  2746  001296  6EDF               	movwf	indf2,c
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;my_i2c.c: 429: ic_ptr->error_count = 0;
  2750  001298  0100               	movlb	0	; () banked
  2751  00129A  EE20 F021          	lfsr	2,33
  2752  00129E  0100               	movlb	0	; () banked
  2753  0012A0  51D1               	movf	_ic_ptr& (0+255),w,b
  2754  0012A2  26D9               	addwf	fsr2l,f,c
  2755  0012A4  0100               	movlb	0	; () banked
  2756  0012A6  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2757  0012A8  22DA               	addwfc	fsr2h,f,c
  2758  0012AA  0E00               	movlw	0
  2759  0012AC  6EDF               	movwf	indf2,c
  2760                           
  2761                           ; BSR set to: 0
  2762  0012AE  0012               	return	
  2763  0012B0                     __end_of_init_i2c:
  2764                           	opt stack 0
  2765                           tblptru	equ	0xFF8
  2766                           tblptrh	equ	0xFF7
  2767                           tblptrl	equ	0xFF6
  2768                           tablat	equ	0xFF5
  2769                           prodh	equ	0xFF4
  2770                           prodl	equ	0xFF3
  2771                           postinc0	equ	0xFEE
  2772                           wreg	equ	0xFE8
  2773                           indf1	equ	0xFE7
  2774                           postdec1	equ	0xFE5
  2775                           fsr1h	equ	0xFE2
  2776                           fsr1l	equ	0xFE1
  2777                           indf2	equ	0xFDF
  2778                           postinc2	equ	0xFDE
  2779                           postdec2	equ	0xFDD
  2780                           fsr2h	equ	0xFDA
  2781                           fsr2l	equ	0xFD9
  2782                           status	equ	0xFD8
  2783                           
  2784 ;; *************** function _i2c_master_send *****************
  2785 ;; Defined at:
  2786 ;;		line 44 in file "../src/my_i2c.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  sendlength      1    wreg     unsigned char 
  2789 ;;  recvlength      1   45[BANK0 ] unsigned char 
  2790 ;;  msg             2   46[BANK0 ] PTR unsigned char 
  2791 ;;		 -> main@msgbuffer(29), 
  2792 ;;  slave_addr      1   48[BANK0 ] unsigned char 
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  sendlength      1   51[BANK0 ] unsigned char 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      unsigned char 
  2797 ;; Registers used:
  2798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2804 ;;      Params:         0       4       0       0       0
  2805 ;;      Locals:         0       1       0       0       0
  2806 ;;      Temps:          0       2       0       0       0
  2807 ;;      Totals:         0       7       0       0       0
  2808 ;;Total ram usage:        7 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:   11
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_main
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           	psect	text12
  2819  000762                     __ptext12:
  2820                           	opt stack 0
  2821  000762                     _i2c_master_send:
  2822                           	opt stack 19
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;incstack = 0
  2826                           ;i2c_master_send@sendlength stored from wreg
  2827  000762  CFE8 F0B3          	movff	wreg,i2c_master_send@sendlength
  2828                           
  2829                           ;my_i2c.c: 45: LATBbits.LATB2 = 1;
  2830  000766  848A               	bsf	3978,2,c	;volatile
  2831                           
  2832                           ;my_i2c.c: 46: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < sendlength; ic_ptr->outbu
      +                          flen++) {
  2833  000768  0100               	movlb	0	; () banked
  2834  00076A  EE20 F03E          	lfsr	2,62
  2835  00076E  0100               	movlb	0	; () banked
  2836  000770  51D1               	movf	_ic_ptr& (0+255),w,b
  2837  000772  26D9               	addwf	fsr2l,f,c
  2838  000774  0100               	movlb	0	; () banked
  2839  000776  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2840  000778  22DA               	addwfc	fsr2h,f,c
  2841  00077A  0E00               	movlw	0
  2842  00077C  6EDF               	movwf	indf2,c
  2843  00077E  D042               	goto	l2583
  2844  000780                     l2579:
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;my_i2c.c: 47: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2848  000780  0100               	movlb	0	; () banked
  2849  000782  EE20 F03E          	lfsr	2,62
  2850  000786  0100               	movlb	0	; () banked
  2851  000788  51D1               	movf	_ic_ptr& (0+255),w,b
  2852  00078A  26D9               	addwf	fsr2l,f,c
  2853  00078C  0100               	movlb	0	; () banked
  2854  00078E  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2855  000790  22DA               	addwfc	fsr2h,f,c
  2856  000792  50DF               	movf	indf2,w,c
  2857  000794  0100               	movlb	0	; () banked
  2858  000796  6FB1               	movwf	??_i2c_master_send& (0+255),b
  2859  000798  0100               	movlb	0	; () banked
  2860  00079A  51B1               	movf	??_i2c_master_send& (0+255),w,b
  2861  00079C  0D01               	mullw	1
  2862  00079E  50F3               	movf	prodl,w,c
  2863  0007A0  0100               	movlb	0	; () banked
  2864  0007A2  0100               	movlb	0	; () banked
  2865  0007A4  25AE               	addwf	i2c_master_send@msg& (0+255),w,b
  2866  0007A6  6ED9               	movwf	fsr2l,c
  2867  0007A8  50F4               	movf	prodh,w,c
  2868  0007AA  0100               	movlb	0	; () banked
  2869  0007AC  0100               	movlb	0	; () banked
  2870  0007AE  21AF               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  2871  0007B0  6EDA               	movwf	fsr2h,c
  2872  0007B2  0100               	movlb	0	; () banked
  2873  0007B4  EE10 F03E          	lfsr	1,62
  2874  0007B8  0100               	movlb	0	; () banked
  2875  0007BA  51D1               	movf	_ic_ptr& (0+255),w,b
  2876  0007BC  26E1               	addwf	fsr1l,f,c
  2877  0007BE  0100               	movlb	0	; () banked
  2878  0007C0  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2879  0007C2  22E2               	addwfc	fsr1h,f,c
  2880  0007C4  50E7               	movf	indf1,w,c
  2881  0007C6  0100               	movlb	0	; () banked
  2882  0007C8  6FB2               	movwf	(??_i2c_master_send+1)& (0+255),b
  2883  0007CA  0100               	movlb	0	; () banked
  2884  0007CC  51B2               	movf	(??_i2c_master_send+1)& (0+255),w,b
  2885  0007CE  0D01               	mullw	1
  2886  0007D0  0E22               	movlw	34
  2887  0007D2  26F3               	addwf	prodl,f,c
  2888  0007D4  0E00               	movlw	0
  2889  0007D6  22F4               	addwfc	prodh,f,c
  2890  0007D8  50F3               	movf	prodl,w,c
  2891  0007DA  0100               	movlb	0	; () banked
  2892  0007DC  0100               	movlb	0	; () banked
  2893  0007DE  25D1               	addwf	_ic_ptr& (0+255),w,b
  2894  0007E0  6EE1               	movwf	fsr1l,c
  2895  0007E2  50F4               	movf	prodh,w,c
  2896  0007E4  0100               	movlb	0	; () banked
  2897  0007E6  0100               	movlb	0	; () banked
  2898  0007E8  21D2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2899  0007EA  6EE2               	movwf	fsr1h,c
  2900  0007EC  CFDF FFE7          	movff	indf2,indf1
  2901                           
  2902                           ; BSR set to: 0
  2903  0007F0  0100               	movlb	0	; () banked
  2904  0007F2  EE20 F03E          	lfsr	2,62
  2905  0007F6  0100               	movlb	0	; () banked
  2906  0007F8  51D1               	movf	_ic_ptr& (0+255),w,b
  2907  0007FA  26D9               	addwf	fsr2l,f,c
  2908  0007FC  0100               	movlb	0	; () banked
  2909  0007FE  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2910  000800  22DA               	addwfc	fsr2h,f,c
  2911  000802  2ADF               	incf	indf2,f,c
  2912  000804                     l2583:
  2913                           
  2914                           ; BSR set to: 0
  2915  000804  0100               	movlb	0	; () banked
  2916  000806  EE20 F03E          	lfsr	2,62
  2917  00080A  0100               	movlb	0	; () banked
  2918  00080C  51D1               	movf	_ic_ptr& (0+255),w,b
  2919  00080E  26D9               	addwf	fsr2l,f,c
  2920  000810  0100               	movlb	0	; () banked
  2921  000812  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2922  000814  22DA               	addwfc	fsr2h,f,c
  2923  000816  50DF               	movf	indf2,w,c
  2924  000818  0100               	movlb	0	; () banked
  2925  00081A  6FB1               	movwf	??_i2c_master_send& (0+255),b
  2926  00081C  0100               	movlb	0	; () banked
  2927  00081E  0100               	movlb	0	; () banked
  2928  000820  51B3               	movf	i2c_master_send@sendlength& (0+255),w,b
  2929  000822  0100               	movlb	0	; () banked
  2930  000824  5DB1               	subwf	??_i2c_master_send& (0+255),w,b
  2931  000826  A0D8               	btfss	status,0,c
  2932  000828  D7AB               	goto	l2579
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;my_i2c.c: 48: }
  2936                           ;my_i2c.c: 50: ic_ptr->slave_addr = slave_addr;
  2937                           
  2938                           ; BSR set to: 0
  2939  00082A  0100               	movlb	0	; () banked
  2940  00082C  EE20 F040          	lfsr	2,64
  2941  000830  0100               	movlb	0	; () banked
  2942  000832  51D1               	movf	_ic_ptr& (0+255),w,b
  2943  000834  26D9               	addwf	fsr2l,f,c
  2944  000836  0100               	movlb	0	; () banked
  2945  000838  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2946  00083A  22DA               	addwfc	fsr2h,f,c
  2947  00083C  0100               	movlb	0	; () banked
  2948  00083E  C0B0  FFDF         	movff	i2c_master_send@slave_addr,indf2
  2949                           
  2950                           ;my_i2c.c: 51: ic_ptr->outbuflen = sendlength;
  2951  000842  0100               	movlb	0	; () banked
  2952  000844  EE20 F03E          	lfsr	2,62
  2953  000848  0100               	movlb	0	; () banked
  2954  00084A  51D1               	movf	_ic_ptr& (0+255),w,b
  2955  00084C  26D9               	addwf	fsr2l,f,c
  2956  00084E  0100               	movlb	0	; () banked
  2957  000850  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2958  000852  22DA               	addwfc	fsr2h,f,c
  2959  000854  0100               	movlb	0	; () banked
  2960  000856  C0B3  FFDF         	movff	i2c_master_send@sendlength,indf2
  2961                           
  2962                           ;my_i2c.c: 52: ic_ptr->buflen = recvlength;
  2963  00085A  0100               	movlb	0	; () banked
  2964  00085C  EE20 F01C          	lfsr	2,28
  2965  000860  0100               	movlb	0	; () banked
  2966  000862  51D1               	movf	_ic_ptr& (0+255),w,b
  2967  000864  26D9               	addwf	fsr2l,f,c
  2968  000866  0100               	movlb	0	; () banked
  2969  000868  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2970  00086A  22DA               	addwfc	fsr2h,f,c
  2971  00086C  0100               	movlb	0	; () banked
  2972  00086E  C0AD  FFDF         	movff	i2c_master_send@recvlength,indf2
  2973                           
  2974                           ;my_i2c.c: 53: ic_ptr->status = 0xA;
  2975  000872  0100               	movlb	0	; () banked
  2976  000874  EE20 F01F          	lfsr	2,31
  2977  000878  0100               	movlb	0	; () banked
  2978  00087A  51D1               	movf	_ic_ptr& (0+255),w,b
  2979  00087C  26D9               	addwf	fsr2l,f,c
  2980  00087E  0100               	movlb	0	; () banked
  2981  000880  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2982  000882  22DA               	addwfc	fsr2h,f,c
  2983  000884  0E0A               	movlw	10
  2984  000886  6EDF               	movwf	indf2,c
  2985                           
  2986                           ;my_i2c.c: 54: ic_ptr->outbufind = 0;
  2987  000888  0100               	movlb	0	; () banked
  2988  00088A  EE20 F03F          	lfsr	2,63
  2989  00088E  0100               	movlb	0	; () banked
  2990  000890  51D1               	movf	_ic_ptr& (0+255),w,b
  2991  000892  26D9               	addwf	fsr2l,f,c
  2992  000894  0100               	movlb	0	; () banked
  2993  000896  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2994  000898  22DA               	addwfc	fsr2h,f,c
  2995  00089A  0E00               	movlw	0
  2996  00089C  6EDF               	movwf	indf2,c
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;my_i2c.c: 56: SSPCON2bits.SEN = 1;
  3000  00089E  80C5               	bsf	4037,0,c	;volatile
  3001  0008A0  0012               	return	
  3002  0008A2                     __end_of_i2c_master_send:
  3003                           	opt stack 0
  3004                           tblptru	equ	0xFF8
  3005                           tblptrh	equ	0xFF7
  3006                           tblptrl	equ	0xFF6
  3007                           tablat	equ	0xFF5
  3008                           prodh	equ	0xFF4
  3009                           prodl	equ	0xFF3
  3010                           postinc0	equ	0xFEE
  3011                           wreg	equ	0xFE8
  3012                           indf1	equ	0xFE7
  3013                           postdec1	equ	0xFE5
  3014                           fsr1h	equ	0xFE2
  3015                           fsr1l	equ	0xFE1
  3016                           indf2	equ	0xFDF
  3017                           postinc2	equ	0xFDE
  3018                           postdec2	equ	0xFDD
  3019                           fsr2h	equ	0xFDA
  3020                           fsr2l	equ	0xFD9
  3021                           status	equ	0xFD8
  3022                           
  3023 ;; *************** function _i2c_configure_master *****************
  3024 ;; Defined at:
  3025 ;;		line 15 in file "../src/my_i2c.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;		None               void
  3032 ;; Registers used:
  3033 ;;		wreg, status,2
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3039 ;;      Params:         0       0       0       0       0
  3040 ;;      Locals:         0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0
  3042 ;;      Totals:         0       0       0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:   11
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_main
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           	psect	text13
  3054  0017B8                     __ptext13:
  3055                           	opt stack 0
  3056  0017B8                     _i2c_configure_master:
  3057                           	opt stack 19
  3058                           
  3059                           ;my_i2c.c: 18: SSPSTAT = 0x0;
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;incstack = 0
  3063  0017B8  0E00               	movlw	0
  3064  0017BA  6EC7               	movwf	4039,c	;volatile
  3065                           
  3066                           ;my_i2c.c: 19: SSPCON1 = 0x0;
  3067  0017BC  0E00               	movlw	0
  3068  0017BE  6EC6               	movwf	4038,c	;volatile
  3069                           
  3070                           ;my_i2c.c: 20: SSPCON2 = 0x0;
  3071  0017C0  0E00               	movlw	0
  3072  0017C2  6EC5               	movwf	4037,c	;volatile
  3073                           
  3074                           ;my_i2c.c: 22: TRISCbits.TRISC3 = 1;
  3075  0017C4  8694               	bsf	3988,3,c	;volatile
  3076                           
  3077                           ;my_i2c.c: 23: TRISCbits.TRISC4 = 1;
  3078  0017C6  8894               	bsf	3988,4,c	;volatile
  3079                           
  3080                           ;my_i2c.c: 24: SSPADD = 29;
  3081  0017C8  0E1D               	movlw	29
  3082  0017CA  6EC8               	movwf	4040,c	;volatile
  3083                           
  3084                           ;my_i2c.c: 27: SSPCON1bits.SSPM = 0x8;
  3085  0017CC  50C6               	movf	4038,w,c	;volatile
  3086  0017CE  0BF0               	andlw	-16
  3087  0017D0  0908               	iorlw	8
  3088  0017D2  6EC6               	movwf	4038,c	;volatile
  3089                           
  3090                           ;my_i2c.c: 28: SSPCON1bits.SSPEN = 1;
  3091  0017D4  8AC6               	bsf	4038,5,c	;volatile
  3092  0017D6  0012               	return	
  3093  0017D8                     __end_of_i2c_configure_master:
  3094                           	opt stack 0
  3095                           tblptru	equ	0xFF8
  3096                           tblptrh	equ	0xFF7
  3097                           tblptrl	equ	0xFF6
  3098                           tablat	equ	0xFF5
  3099                           prodh	equ	0xFF4
  3100                           prodl	equ	0xFF3
  3101                           postinc0	equ	0xFEE
  3102                           wreg	equ	0xFE8
  3103                           indf1	equ	0xFE7
  3104                           postdec1	equ	0xFE5
  3105                           fsr1h	equ	0xFE2
  3106                           fsr1l	equ	0xFE1
  3107                           indf2	equ	0xFDF
  3108                           postinc2	equ	0xFDE
  3109                           postdec2	equ	0xFDD
  3110                           fsr2h	equ	0xFDA
  3111                           fsr2l	equ	0xFD9
  3112                           status	equ	0xFD8
  3113                           
  3114 ;; *************** function _enable_interrupts *****************
  3115 ;; Defined at:
  3116 ;;		line 15 in file "../src/interrupts.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;		None
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;		None
  3121 ;; Return value:  Size  Location     Type
  3122 ;;		None               void
  3123 ;; Registers used:
  3124 ;;		None
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3130 ;;      Params:         0       0       0       0       0
  3131 ;;      Locals:         0       0       0       0       0
  3132 ;;      Temps:          0       0       0       0       0
  3133 ;;      Totals:         0       0       0       0       0
  3134 ;;Total ram usage:        0 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:   11
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_main
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text14
  3145  0018E6                     __ptext14:
  3146                           	opt stack 0
  3147  0018E6                     _enable_interrupts:
  3148                           	opt stack 19
  3149                           
  3150                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3151                           
  3152                           ;incstack = 0
  3153  0018E6  8ED0               	bsf	4048,7,c	;volatile
  3154                           
  3155                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3156  0018E8  8EF2               	bsf	intcon,7,c	;volatile
  3157                           
  3158                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3159  0018EA  8CF2               	bsf	intcon,6,c	;volatile
  3160  0018EC  0012               	return	
  3161  0018EE                     __end_of_enable_interrupts:
  3162                           	opt stack 0
  3163                           tblptru	equ	0xFF8
  3164                           tblptrh	equ	0xFF7
  3165                           tblptrl	equ	0xFF6
  3166                           tablat	equ	0xFF5
  3167                           prodh	equ	0xFF4
  3168                           prodl	equ	0xFF3
  3169                           intcon	equ	0xFF2
  3170                           postinc0	equ	0xFEE
  3171                           wreg	equ	0xFE8
  3172                           indf1	equ	0xFE7
  3173                           postdec1	equ	0xFE5
  3174                           fsr1h	equ	0xFE2
  3175                           fsr1l	equ	0xFE1
  3176                           indf2	equ	0xFDF
  3177                           postinc2	equ	0xFDE
  3178                           postdec2	equ	0xFDD
  3179                           fsr2h	equ	0xFDA
  3180                           fsr2l	equ	0xFD9
  3181                           status	equ	0xFD8
  3182                           
  3183 ;; *************** function _block_on_To_msgqueues *****************
  3184 ;; Defined at:
  3185 ;;		line 258 in file "../src/messages.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;		None
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;		None               void
  3192 ;; Registers used:
  3193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3199 ;;      Params:         0       0       0       0       0
  3200 ;;      Locals:         0       0       0       0       0
  3201 ;;      Temps:          0       1       0       0       0
  3202 ;;      Totals:         0       1       0       0       0
  3203 ;;Total ram usage:        1 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:   14
  3206 ;; This function calls:
  3207 ;;		_Delay1KTCYx
  3208 ;;		_check_msg
  3209 ;;		_in_main
  3210 ;; This function is called by:
  3211 ;;		_main
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text15
  3216  000FFC                     __ptext15:
  3217                           	opt stack 0
  3218  000FFC                     _block_on_To_msgqueues:
  3219                           	opt stack 16
  3220                           
  3221                           ;messages.c: 259: if (!in_main()) {
  3222                           
  3223                           ;incstack = 0
  3224  000FFC  EC97  F00A         	call	_in_main	;wreg free
  3225  001000  0100               	movlb	0	; () banked
  3226  001002  0100               	movlb	0	; () banked
  3227  001004  51B2               	movf	(?_in_main+1)& (0+255),w,b
  3228  001006  0100               	movlb	0	; () banked
  3229  001008  11B1               	iorwf	?_in_main& (0+255),w,b
  3230  00100A  B4D8               	btfsc	status,2,c
  3231  00100C  0012               	return	
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;messages.c: 261: }
  3235                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3236                           
  3237                           ; BSR set to: 0
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;messages.c: 260: return;
  3241  00100E  0100               	movlb	0	; () banked
  3242  001010  6FB3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3243  001012  0E01               	movlw	1
  3244  001014  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3245  001016  0100               	movlb	0	; () banked
  3246  001018  51B3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3247  00101A                     l2531:
  3248                           
  3249                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3250  00101A  0102               	movlb	2	; () banked
  3251  00101C  0E02               	movlw	high _ToMainHigh_MQ
  3252  00101E  0100               	movlb	0	; () banked
  3253  001020  0100               	movlb	0	; () banked
  3254  001022  6FAE               	movwf	(check_msg@qptr+1)& (0+255),b
  3255  001024  0102               	movlb	2	; () banked
  3256  001026  0E7E               	movlw	low _ToMainHigh_MQ
  3257  001028  0100               	movlb	0	; () banked
  3258  00102A  0100               	movlb	0	; () banked
  3259  00102C  6FAD               	movwf	check_msg@qptr& (0+255),b
  3260  00102E  EC52  F00B         	call	_check_msg	;wreg free
  3261  001032  0900               	iorlw	0
  3262  001034  B4D8               	btfsc	status,2,c
  3263  001036  D007               	goto	l2537
  3264                           
  3265                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3266  001038  0100               	movlb	0	; () banked
  3267  00103A  6FB3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3268  00103C  0E00               	movlw	0
  3269  00103E  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3270  001040  0100               	movlb	0	; () banked
  3271  001042  51B3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3272  001044  0012               	return	
  3273  001046                     l2537:
  3274                           
  3275                           ;messages.c: 271: }
  3276                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3277  001046  0101               	movlb	1	; () banked
  3278  001048  0E01               	movlw	high _ToMainLow_MQ
  3279  00104A  0100               	movlb	0	; () banked
  3280  00104C  0100               	movlb	0	; () banked
  3281  00104E  6FAE               	movwf	(check_msg@qptr+1)& (0+255),b
  3282  001050  0101               	movlb	1	; () banked
  3283  001052  0E00               	movlw	low _ToMainLow_MQ
  3284  001054  0100               	movlb	0	; () banked
  3285  001056  0100               	movlb	0	; () banked
  3286  001058  6FAD               	movwf	check_msg@qptr& (0+255),b
  3287  00105A  EC52  F00B         	call	_check_msg	;wreg free
  3288  00105E  0900               	iorlw	0
  3289  001060  B4D8               	btfsc	status,2,c
  3290  001062  D007               	goto	l2543
  3291                           
  3292                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3293  001064  0100               	movlb	0	; () banked
  3294  001066  6FB3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3295  001068  0E00               	movlw	0
  3296  00106A  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3297  00106C  0100               	movlb	0	; () banked
  3298  00106E  51B3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3299  001070  0012               	return	
  3300  001072                     l2543:
  3301                           
  3302                           ;messages.c: 278: }
  3303                           ;messages.c: 279: Delay1KTCYx(10);
  3304  001072  0E0A               	movlw	10
  3305  001074  EC26  F00C         	call	_Delay1KTCYx
  3306  001078  D7D0               	goto	l2531
  3307  00107A                     __end_of_block_on_To_msgqueues:
  3308                           	opt stack 0
  3309                           tblptru	equ	0xFF8
  3310                           tblptrh	equ	0xFF7
  3311                           tblptrl	equ	0xFF6
  3312                           tablat	equ	0xFF5
  3313                           prodh	equ	0xFF4
  3314                           prodl	equ	0xFF3
  3315                           intcon	equ	0xFF2
  3316                           postinc0	equ	0xFEE
  3317                           wreg	equ	0xFE8
  3318                           indf1	equ	0xFE7
  3319                           postdec1	equ	0xFE5
  3320                           fsr1h	equ	0xFE2
  3321                           fsr1l	equ	0xFE1
  3322                           indf2	equ	0xFDF
  3323                           postinc2	equ	0xFDE
  3324                           postdec2	equ	0xFDD
  3325                           fsr2h	equ	0xFDA
  3326                           fsr2l	equ	0xFD9
  3327                           status	equ	0xFD8
  3328                           
  3329 ;; *************** function _in_main *****************
  3330 ;; Defined at:
  3331 ;;		line 41 in file "../src/interrupts.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  2   49[BANK0 ] int 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3345 ;;      Params:         0       2       0       0       0
  3346 ;;      Locals:         0       0       0       0       0
  3347 ;;      Temps:          0       0       0       0       0
  3348 ;;      Totals:         0       2       0       0       0
  3349 ;;Total ram usage:        2 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; Hardware stack levels required when called:   13
  3352 ;; This function calls:
  3353 ;;		_in_high_int
  3354 ;;		_in_low_int
  3355 ;; This function is called by:
  3356 ;;		_block_on_To_msgqueues
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text16
  3361  00152E                     __ptext16:
  3362                           	opt stack 0
  3363  00152E                     _in_main:
  3364                           	opt stack 16
  3365                           
  3366                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3367                           
  3368                           ;incstack = 0
  3369  00152E  EC51  F00A         	call	_in_low_int	;wreg free
  3370  001532  0100               	movlb	0	; () banked
  3371  001534  0100               	movlb	0	; () banked
  3372  001536  51B0               	movf	(?_in_low_int+1)& (0+255),w,b
  3373  001538  0100               	movlb	0	; () banked
  3374  00153A  11AF               	iorwf	?_in_low_int& (0+255),w,b
  3375  00153C  A4D8               	btfss	status,2,c
  3376  00153E  D011               	goto	l2259
  3377                           
  3378                           ; BSR set to: 0
  3379  001540  EC43  F00C         	call	_in_high_int	;wreg free
  3380  001544  0100               	movlb	0	; () banked
  3381  001546  0100               	movlb	0	; () banked
  3382  001548  51AE               	movf	(?_in_high_int+1)& (0+255),w,b
  3383  00154A  0100               	movlb	0	; () banked
  3384  00154C  11AD               	iorwf	?_in_high_int& (0+255),w,b
  3385  00154E  A4D8               	btfss	status,2,c
  3386  001550  D008               	goto	l2259
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;interrupts.c: 43: return (1);
  3390  001552  0E00               	movlw	0
  3391  001554  0100               	movlb	0	; () banked
  3392  001556  0100               	movlb	0	; () banked
  3393  001558  6FB2               	movwf	(?_in_main+1)& (0+255),b
  3394  00155A  0E01               	movlw	1
  3395  00155C  0100               	movlb	0	; () banked
  3396  00155E  6FB1               	movwf	?_in_main& (0+255),b
  3397  001560  0012               	return	
  3398  001562                     l2259:
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;interrupts.c: 45: return (0);
  3402  001562  0E00               	movlw	0
  3403  001564  0100               	movlb	0	; () banked
  3404  001566  0100               	movlb	0	; () banked
  3405  001568  6FB2               	movwf	(?_in_main+1)& (0+255),b
  3406  00156A  0E00               	movlw	0
  3407  00156C  0100               	movlb	0	; () banked
  3408  00156E  6FB1               	movwf	?_in_main& (0+255),b
  3409  001570  0012               	return	
  3410  001572                     __end_of_in_main:
  3411                           	opt stack 0
  3412                           tblptru	equ	0xFF8
  3413                           tblptrh	equ	0xFF7
  3414                           tblptrl	equ	0xFF6
  3415                           tablat	equ	0xFF5
  3416                           prodh	equ	0xFF4
  3417                           prodl	equ	0xFF3
  3418                           intcon	equ	0xFF2
  3419                           postinc0	equ	0xFEE
  3420                           wreg	equ	0xFE8
  3421                           indf1	equ	0xFE7
  3422                           postdec1	equ	0xFE5
  3423                           fsr1h	equ	0xFE2
  3424                           fsr1l	equ	0xFE1
  3425                           indf2	equ	0xFDF
  3426                           postinc2	equ	0xFDE
  3427                           postdec2	equ	0xFDD
  3428                           fsr2h	equ	0xFDA
  3429                           fsr2l	equ	0xFD9
  3430                           status	equ	0xFD8
  3431                           
  3432 ;; *************** function _in_low_int *****************
  3433 ;; Defined at:
  3434 ;;		line 31 in file "../src/interrupts.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;		None
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  2   47[BANK0 ] int 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3448 ;;      Params:         0       2       0       0       0
  3449 ;;      Locals:         0       0       0       0       0
  3450 ;;      Temps:          0       0       0       0       0
  3451 ;;      Totals:         0       2       0       0       0
  3452 ;;Total ram usage:        2 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:   12
  3455 ;; This function calls:
  3456 ;;		_in_high_int
  3457 ;; This function is called by:
  3458 ;;		_in_main
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           	psect	text17
  3463  0014A2                     __ptext17:
  3464                           	opt stack 0
  3465  0014A2                     _in_low_int:
  3466                           	opt stack 16
  3467                           
  3468                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;incstack = 0
  3472  0014A2  ACF2               	btfss	intcon,6,c	;volatile
  3473  0014A4  D008               	goto	l2237
  3474                           
  3475                           ;interrupts.c: 33: return (0);
  3476  0014A6  0E00               	movlw	0
  3477  0014A8  0100               	movlb	0	; () banked
  3478  0014AA  0100               	movlb	0	; () banked
  3479  0014AC  6FB0               	movwf	(?_in_low_int+1)& (0+255),b
  3480  0014AE  0E00               	movlw	0
  3481  0014B0  0100               	movlb	0	; () banked
  3482  0014B2  6FAF               	movwf	?_in_low_int& (0+255),b
  3483  0014B4  0012               	return	
  3484  0014B6                     l2237:
  3485  0014B6  EC43  F00C         	call	_in_high_int	;wreg free
  3486  0014BA  0100               	movlb	0	; () banked
  3487  0014BC  0100               	movlb	0	; () banked
  3488  0014BE  51AE               	movf	(?_in_high_int+1)& (0+255),w,b
  3489  0014C0  0100               	movlb	0	; () banked
  3490  0014C2  11AD               	iorwf	?_in_high_int& (0+255),w,b
  3491  0014C4  B4D8               	btfsc	status,2,c
  3492  0014C6  D008               	goto	l2245
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;interrupts.c: 35: return (0);
  3496  0014C8  0E00               	movlw	0
  3497  0014CA  0100               	movlb	0	; () banked
  3498  0014CC  0100               	movlb	0	; () banked
  3499  0014CE  6FB0               	movwf	(?_in_low_int+1)& (0+255),b
  3500  0014D0  0E00               	movlw	0
  3501  0014D2  0100               	movlb	0	; () banked
  3502  0014D4  6FAF               	movwf	?_in_low_int& (0+255),b
  3503  0014D6  0012               	return	
  3504  0014D8                     l2245:
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;interrupts.c: 37: return (1);
  3508  0014D8  0E00               	movlw	0
  3509  0014DA  0100               	movlb	0	; () banked
  3510  0014DC  0100               	movlb	0	; () banked
  3511  0014DE  6FB0               	movwf	(?_in_low_int+1)& (0+255),b
  3512  0014E0  0E01               	movlw	1
  3513  0014E2  0100               	movlb	0	; () banked
  3514  0014E4  6FAF               	movwf	?_in_low_int& (0+255),b
  3515  0014E6  0012               	return	
  3516  0014E8                     __end_of_in_low_int:
  3517                           	opt stack 0
  3518                           tblptru	equ	0xFF8
  3519                           tblptrh	equ	0xFF7
  3520                           tblptrl	equ	0xFF6
  3521                           tablat	equ	0xFF5
  3522                           prodh	equ	0xFF4
  3523                           prodl	equ	0xFF3
  3524                           intcon	equ	0xFF2
  3525                           postinc0	equ	0xFEE
  3526                           wreg	equ	0xFE8
  3527                           indf1	equ	0xFE7
  3528                           postdec1	equ	0xFE5
  3529                           fsr1h	equ	0xFE2
  3530                           fsr1l	equ	0xFE1
  3531                           indf2	equ	0xFDF
  3532                           postinc2	equ	0xFDE
  3533                           postdec2	equ	0xFDD
  3534                           fsr2h	equ	0xFDA
  3535                           fsr2l	equ	0xFD9
  3536                           status	equ	0xFD8
  3537                           
  3538 ;; *************** function _in_high_int *****************
  3539 ;; Defined at:
  3540 ;;		line 23 in file "../src/interrupts.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  2   45[BANK0 ] int 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3554 ;;      Params:         0       2       0       0       0
  3555 ;;      Locals:         0       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0
  3557 ;;      Totals:         0       2       0       0       0
  3558 ;;Total ram usage:        2 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:   11
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_in_low_int
  3565 ;;		_in_main
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text18
  3570  001886                     __ptext18:
  3571                           	opt stack 0
  3572  001886                     _in_high_int:
  3573                           	opt stack 16
  3574                           
  3575                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;incstack = 0
  3579  001886  0E00               	movlw	0
  3580  001888  AEF2               	btfss	intcon,7,c	;volatile
  3581  00188A  0E01               	movlw	1
  3582  00188C  0100               	movlb	0	; () banked
  3583  00188E  0100               	movlb	0	; () banked
  3584  001890  6FAD               	movwf	?_in_high_int& (0+255),b
  3585  001892  0100               	movlb	0	; () banked
  3586  001894  6BAE               	clrf	(?_in_high_int+1)& (0+255),b
  3587  001896  0012               	return	
  3588  001898                     __end_of_in_high_int:
  3589                           	opt stack 0
  3590                           tblptru	equ	0xFF8
  3591                           tblptrh	equ	0xFF7
  3592                           tblptrl	equ	0xFF6
  3593                           tablat	equ	0xFF5
  3594                           prodh	equ	0xFF4
  3595                           prodl	equ	0xFF3
  3596                           intcon	equ	0xFF2
  3597                           postinc0	equ	0xFEE
  3598                           wreg	equ	0xFE8
  3599                           indf1	equ	0xFE7
  3600                           postdec1	equ	0xFE5
  3601                           fsr1h	equ	0xFE2
  3602                           fsr1l	equ	0xFE1
  3603                           indf2	equ	0xFDF
  3604                           postinc2	equ	0xFDE
  3605                           postdec2	equ	0xFDD
  3606                           fsr2h	equ	0xFDA
  3607                           fsr2l	equ	0xFD9
  3608                           status	equ	0xFD8
  3609                           
  3610 ;; *************** function _check_msg *****************
  3611 ;; Defined at:
  3612 ;;		line 222 in file "../src/messages.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;  qptr            2   45[BANK0 ] PTR struct __msg_queue
  3615 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;		None
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      unsigned char 
  3620 ;; Registers used:
  3621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3627 ;;      Params:         0       2       0       0       0
  3628 ;;      Locals:         0       0       0       0       0
  3629 ;;      Temps:          0       1       0       0       0
  3630 ;;      Totals:         0       3       0       0       0
  3631 ;;Total ram usage:        3 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:   11
  3634 ;; This function calls:
  3635 ;;		Nothing
  3636 ;; This function is called by:
  3637 ;;		_block_on_To_msgqueues
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text19
  3642  0016A4                     __ptext19:
  3643                           	opt stack 0
  3644  0016A4                     _check_msg:
  3645                           	opt stack 18
  3646                           
  3647                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;incstack = 0
  3651  0016A4  0100               	movlb	0	; () banked
  3652  0016A6  EE20 F07D          	lfsr	2,125
  3653  0016AA  0100               	movlb	0	; () banked
  3654  0016AC  51AD               	movf	check_msg@qptr& (0+255),w,b
  3655  0016AE  26D9               	addwf	fsr2l,f,c
  3656  0016B0  0100               	movlb	0	; () banked
  3657  0016B2  51AE               	movf	(check_msg@qptr+1)& (0+255),w,b
  3658  0016B4  22DA               	addwfc	fsr2h,f,c
  3659  0016B6  50DF               	movf	indf2,w,c
  3660  0016B8  0100               	movlb	0	; () banked
  3661  0016BA  6FAF               	movwf	??_check_msg& (0+255),b
  3662  0016BC  0100               	movlb	0	; () banked
  3663  0016BE  51AF               	movf	??_check_msg& (0+255),w,b
  3664  0016C0  0D1F               	mullw	31
  3665  0016C2  50F3               	movf	prodl,w,c
  3666  0016C4  0100               	movlb	0	; () banked
  3667  0016C6  0100               	movlb	0	; () banked
  3668  0016C8  25AD               	addwf	check_msg@qptr& (0+255),w,b
  3669  0016CA  6ED9               	movwf	fsr2l,c
  3670  0016CC  50F4               	movf	prodh,w,c
  3671  0016CE  0100               	movlb	0	; () banked
  3672  0016D0  0100               	movlb	0	; () banked
  3673  0016D2  21AE               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3674  0016D4  6EDA               	movwf	fsr2h,c
  3675  0016D6  50DF               	movf	indf2,w,c
  3676  0016D8  0012               	return	
  3677  0016DA                     __end_of_check_msg:
  3678                           	opt stack 0
  3679                           tblptru	equ	0xFF8
  3680                           tblptrh	equ	0xFF7
  3681                           tblptrl	equ	0xFF6
  3682                           tablat	equ	0xFF5
  3683                           prodh	equ	0xFF4
  3684                           prodl	equ	0xFF3
  3685                           intcon	equ	0xFF2
  3686                           postinc0	equ	0xFEE
  3687                           wreg	equ	0xFE8
  3688                           indf1	equ	0xFE7
  3689                           postdec1	equ	0xFE5
  3690                           fsr1h	equ	0xFE2
  3691                           fsr1l	equ	0xFE1
  3692                           indf2	equ	0xFDF
  3693                           postinc2	equ	0xFDE
  3694                           postdec2	equ	0xFDD
  3695                           fsr2h	equ	0xFDA
  3696                           fsr2l	equ	0xFD9
  3697                           status	equ	0xFD8
  3698                           
  3699 ;; *************** function _Delay1KTCYx *****************
  3700 ;; Defined at:
  3701 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  unit            1    wreg     unsigned char 
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;  unit            1   45[BANK0 ] unsigned char 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;		None               void
  3708 ;; Registers used:
  3709 ;;		wreg
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3715 ;;      Params:         0       0       0       0       0
  3716 ;;      Locals:         0       1       0       0       0
  3717 ;;      Temps:          0       0       0       0       0
  3718 ;;      Totals:         0       1       0       0       0
  3719 ;;Total ram usage:        1 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; Hardware stack levels required when called:   11
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_block_on_To_msgqueues
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text20
  3730  00184C                     __ptext20:
  3731                           	opt stack 0
  3732  00184C                     _Delay1KTCYx:
  3733                           	opt stack 18
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;incstack = 0
  3737                           ;Delay1KTCYx@unit stored from wreg
  3738  00184C  CFE8 F0AD          	movff	wreg,Delay1KTCYx@unit
  3739  001850                     l787:
  3740  001850  0EFA               	movlw	250
  3741  001852                     u2687:
  3742  001852  F000               	nop	
  3743  001854  2EE8               	decfsz	wreg,f,c
  3744  001856  D7FD               	goto	u2687
  3745  001858  0100               	movlb	0	; () banked
  3746  00185A  0100               	movlb	0	; () banked
  3747  00185C  2FAD               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3748  00185E  D7F8               	goto	l787
  3749  001860  0012               	return	
  3750  001862                     __end_of_Delay1KTCYx:
  3751                           	opt stack 0
  3752                           tblptru	equ	0xFF8
  3753                           tblptrh	equ	0xFF7
  3754                           tblptrl	equ	0xFF6
  3755                           tablat	equ	0xFF5
  3756                           prodh	equ	0xFF4
  3757                           prodl	equ	0xFF3
  3758                           intcon	equ	0xFF2
  3759                           postinc0	equ	0xFEE
  3760                           wreg	equ	0xFE8
  3761                           indf1	equ	0xFE7
  3762                           postdec1	equ	0xFE5
  3763                           fsr1h	equ	0xFE2
  3764                           fsr1l	equ	0xFE1
  3765                           indf2	equ	0xFDF
  3766                           postinc2	equ	0xFDE
  3767                           postdec2	equ	0xFDD
  3768                           fsr2h	equ	0xFDA
  3769                           fsr2l	equ	0xFD9
  3770                           status	equ	0xFD8
  3771                           
  3772 ;; *************** function _ToMainLow_recvmsg *****************
  3773 ;; Defined at:
  3774 ;;		line 112 in file "../src/messages.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;  maxlength       1    wreg     unsigned char 
  3777 ;;  msgtype         2   69[BANK0 ] PTR unsigned char 
  3778 ;;		 -> main@msgtype(1), 
  3779 ;;  data            2   71[BANK0 ] PTR void 
  3780 ;;		 -> main@msgbuffer(29), 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  maxlength       1   73[BANK0 ] unsigned char 
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      char 
  3785 ;; Registers used:
  3786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3792 ;;      Params:         0       4       0       0       0
  3793 ;;      Locals:         0       1       0       0       0
  3794 ;;      Temps:          0       0       0       0       0
  3795 ;;      Totals:         0       5       0       0       0
  3796 ;;Total ram usage:        5 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:   13
  3799 ;; This function calls:
  3800 ;;		_recv_msg
  3801 ;; This function is called by:
  3802 ;;		_main
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           	psect	text21
  3807  001572                     __ptext21:
  3808                           	opt stack 0
  3809  001572                     _ToMainLow_recvmsg:
  3810                           	opt stack 17
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;incstack = 0
  3814                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3815  001572  CFE8 F0C9          	movff	wreg,ToMainLow_recvmsg@maxlength
  3816                           
  3817                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3818  001576  0101               	movlb	1	; () banked
  3819  001578  0E01               	movlw	high _ToMainLow_MQ
  3820  00157A  0100               	movlb	0	; () banked
  3821  00157C  0100               	movlb	0	; () banked
  3822  00157E  6FB8               	movwf	(recv_msg@qptr+1)& (0+255),b
  3823  001580  0101               	movlb	1	; () banked
  3824  001582  0E00               	movlw	low _ToMainLow_MQ
  3825  001584  0100               	movlb	0	; () banked
  3826  001586  0100               	movlb	0	; () banked
  3827  001588  6FB7               	movwf	recv_msg@qptr& (0+255),b
  3828  00158A  C0C9  F0B9         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3829  00158E  0100               	movlb	0	; () banked
  3830  001590  0100               	movlb	0	; () banked
  3831  001592  C0C6  F0BB         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3832  001596  0100               	movlb	0	; () banked
  3833  001598  0100               	movlb	0	; () banked
  3834  00159A  C0C5  F0BA         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3835  00159E  0100               	movlb	0	; () banked
  3836  0015A0  0100               	movlb	0	; () banked
  3837  0015A2  C0C8  F0BD         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3838  0015A6  0100               	movlb	0	; () banked
  3839  0015A8  0100               	movlb	0	; () banked
  3840  0015AA  C0C7  F0BC         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3841  0015AE  EC51  F004         	call	_recv_msg	;wreg free
  3842  0015B2  0012               	return	
  3843  0015B4                     __end_of_ToMainLow_recvmsg:
  3844                           	opt stack 0
  3845                           tblptru	equ	0xFF8
  3846                           tblptrh	equ	0xFF7
  3847                           tblptrl	equ	0xFF6
  3848                           tablat	equ	0xFF5
  3849                           prodh	equ	0xFF4
  3850                           prodl	equ	0xFF3
  3851                           intcon	equ	0xFF2
  3852                           postinc0	equ	0xFEE
  3853                           wreg	equ	0xFE8
  3854                           indf1	equ	0xFE7
  3855                           postdec1	equ	0xFE5
  3856                           fsr1h	equ	0xFE2
  3857                           fsr1l	equ	0xFE1
  3858                           indf2	equ	0xFDF
  3859                           postinc2	equ	0xFDE
  3860                           postdec2	equ	0xFDD
  3861                           fsr2h	equ	0xFDA
  3862                           fsr2l	equ	0xFD9
  3863                           status	equ	0xFD8
  3864                           
  3865 ;; *************** function _ToMainHigh_recvmsg *****************
  3866 ;; Defined at:
  3867 ;;		line 135 in file "../src/messages.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  maxlength       1    wreg     unsigned char 
  3870 ;;  msgtype         2   69[BANK0 ] PTR unsigned char 
  3871 ;;		 -> main@msgtype(1), 
  3872 ;;  data            2   71[BANK0 ] PTR void 
  3873 ;;		 -> main@msgbuffer(29), 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  maxlength       1   73[BANK0 ] unsigned char 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      char 
  3878 ;; Registers used:
  3879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3885 ;;      Params:         0       4       0       0       0
  3886 ;;      Locals:         0       1       0       0       0
  3887 ;;      Temps:          0       0       0       0       0
  3888 ;;      Totals:         0       5       0       0       0
  3889 ;;Total ram usage:        5 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:   13
  3892 ;; This function calls:
  3893 ;;		_recv_msg
  3894 ;; This function is called by:
  3895 ;;		_main
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text22
  3900  0015B4                     __ptext22:
  3901                           	opt stack 0
  3902  0015B4                     _ToMainHigh_recvmsg:
  3903                           	opt stack 17
  3904                           
  3905                           ;incstack = 0
  3906                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3907  0015B4  CFE8 F0C9          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3908                           
  3909                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3910  0015B8  0102               	movlb	2	; () banked
  3911  0015BA  0E02               	movlw	high _ToMainHigh_MQ
  3912  0015BC  0100               	movlb	0	; () banked
  3913  0015BE  0100               	movlb	0	; () banked
  3914  0015C0  6FB8               	movwf	(recv_msg@qptr+1)& (0+255),b
  3915  0015C2  0102               	movlb	2	; () banked
  3916  0015C4  0E7E               	movlw	low _ToMainHigh_MQ
  3917  0015C6  0100               	movlb	0	; () banked
  3918  0015C8  0100               	movlb	0	; () banked
  3919  0015CA  6FB7               	movwf	recv_msg@qptr& (0+255),b
  3920  0015CC  C0C9  F0B9         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3921  0015D0  0100               	movlb	0	; () banked
  3922  0015D2  0100               	movlb	0	; () banked
  3923  0015D4  C0C6  F0BB         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3924  0015D8  0100               	movlb	0	; () banked
  3925  0015DA  0100               	movlb	0	; () banked
  3926  0015DC  C0C5  F0BA         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3927  0015E0  0100               	movlb	0	; () banked
  3928  0015E2  0100               	movlb	0	; () banked
  3929  0015E4  C0C8  F0BD         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3930  0015E8  0100               	movlb	0	; () banked
  3931  0015EA  0100               	movlb	0	; () banked
  3932  0015EC  C0C7  F0BC         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3933  0015F0  EC51  F004         	call	_recv_msg	;wreg free
  3934  0015F4  0012               	return	
  3935  0015F6                     __end_of_ToMainHigh_recvmsg:
  3936                           	opt stack 0
  3937                           tblptru	equ	0xFF8
  3938                           tblptrh	equ	0xFF7
  3939                           tblptrl	equ	0xFF6
  3940                           tablat	equ	0xFF5
  3941                           prodh	equ	0xFF4
  3942                           prodl	equ	0xFF3
  3943                           intcon	equ	0xFF2
  3944                           postinc0	equ	0xFEE
  3945                           wreg	equ	0xFE8
  3946                           indf1	equ	0xFE7
  3947                           postdec1	equ	0xFE5
  3948                           fsr1h	equ	0xFE2
  3949                           fsr1l	equ	0xFE1
  3950                           indf2	equ	0xFDF
  3951                           postinc2	equ	0xFDE
  3952                           postdec2	equ	0xFDD
  3953                           fsr2h	equ	0xFDA
  3954                           fsr2l	equ	0xFD9
  3955                           status	equ	0xFD8
  3956                           
  3957 ;; *************** function _recv_msg *****************
  3958 ;; Defined at:
  3959 ;;		line 63 in file "../src/messages.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;  qptr            2   55[BANK0 ] PTR struct __msg_queue
  3962 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  3963 ;;  maxlength       1   57[BANK0 ] unsigned char 
  3964 ;;  msgtype         2   58[BANK0 ] PTR unsigned char 
  3965 ;;		 -> main@msgtype(1), 
  3966 ;;  data            2   60[BANK0 ] PTR void 
  3967 ;;		 -> main@msgbuffer(29), 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;  qmsg            2   67[BANK0 ] PTR struct __msg
  3970 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  3971 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  3972 ;;  tlength         2   65[BANK0 ] unsigned int 
  3973 ;;  slot            1   64[BANK0 ] unsigned char 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      char 
  3976 ;; Registers used:
  3977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3983 ;;      Params:         0       7       0       0       0
  3984 ;;      Locals:         0       5       0       0       0
  3985 ;;      Temps:          0       2       0       0       0
  3986 ;;      Totals:         0      14       0       0       0
  3987 ;;Total ram usage:       14 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:   12
  3990 ;; This function calls:
  3991 ;;		_memcpy
  3992 ;; This function is called by:
  3993 ;;		_ToMainLow_recvmsg
  3994 ;;		_ToMainHigh_recvmsg
  3995 ;;		_FromMainLow_recvmsg
  3996 ;;		_FromMainHigh_recvmsg
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           	psect	text23
  4001  0008A2                     __ptext23:
  4002                           	opt stack 0
  4003  0008A2                     _recv_msg:
  4004                           	opt stack 17
  4005                           
  4006                           ;messages.c: 64: unsigned char slot;
  4007                           ;messages.c: 68: msg *qmsg;
  4008                           ;messages.c: 69: size_t tlength;
  4009                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4010                           
  4011                           ;incstack = 0
  4012  0008A2  0100               	movlb	0	; () banked
  4013  0008A4  EE20 F07D          	lfsr	2,125
  4014  0008A8  0100               	movlb	0	; () banked
  4015  0008AA  51B7               	movf	recv_msg@qptr& (0+255),w,b
  4016  0008AC  26D9               	addwf	fsr2l,f,c
  4017  0008AE  0100               	movlb	0	; () banked
  4018  0008B0  51B8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4019  0008B2  22DA               	addwfc	fsr2h,f,c
  4020  0008B4  50DF               	movf	indf2,w,c
  4021  0008B6  0100               	movlb	0	; () banked
  4022  0008B8  0100               	movlb	0	; () banked
  4023  0008BA  6FC0               	movwf	recv_msg@slot& (0+255),b
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4027  0008BC  0100               	movlb	0	; () banked
  4028  0008BE  0100               	movlb	0	; () banked
  4029  0008C0  51C0               	movf	recv_msg@slot& (0+255),w,b
  4030  0008C2  0D1F               	mullw	31
  4031  0008C4  50F3               	movf	prodl,w,c
  4032  0008C6  0100               	movlb	0	; () banked
  4033  0008C8  0100               	movlb	0	; () banked
  4034  0008CA  25B7               	addwf	recv_msg@qptr& (0+255),w,b
  4035  0008CC  0100               	movlb	0	; () banked
  4036  0008CE  0100               	movlb	0	; () banked
  4037  0008D0  6FC3               	movwf	recv_msg@qmsg& (0+255),b
  4038  0008D2  50F4               	movf	prodh,w,c
  4039  0008D4  0100               	movlb	0	; () banked
  4040  0008D6  0100               	movlb	0	; () banked
  4041  0008D8  21B8               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4042  0008DA  0100               	movlb	0	; () banked
  4043  0008DC  6FC4               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;messages.c: 74: if (qmsg->full == 1) {
  4047  0008DE  0E01               	movlw	1
  4048  0008E0  C0C3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4049  0008E4  C0C4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4050  0008E8  62DF               	cpfseq	indf2,c
  4051  0008EA  D074               	goto	l2667
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4055  0008EC  0100               	movlb	0	; () banked
  4056  0008EE  EE20 F001          	lfsr	2,1
  4057  0008F2  0100               	movlb	0	; () banked
  4058  0008F4  51C3               	movf	recv_msg@qmsg& (0+255),w,b
  4059  0008F6  26D9               	addwf	fsr2l,f,c
  4060  0008F8  0100               	movlb	0	; () banked
  4061  0008FA  51C4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4062  0008FC  22DA               	addwfc	fsr2h,f,c
  4063  0008FE  50DF               	movf	indf2,w,c
  4064  000900  0100               	movlb	0	; () banked
  4065  000902  0100               	movlb	0	; () banked
  4066  000904  5DB9               	subwf	recv_msg@maxlength& (0+255),w,b
  4067  000906  B0D8               	btfsc	status,0,c
  4068  000908  D002               	goto	l2651
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;messages.c: 77: return (-3);
  4072  00090A  0EFD               	movlw	253
  4073  00090C  0012               	return	
  4074  00090E                     l2651:
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;messages.c: 78: }
  4078                           ;messages.c: 80: tlength = qmsg->length;
  4079  00090E  0100               	movlb	0	; () banked
  4080  000910  EE20 F001          	lfsr	2,1
  4081  000914  0100               	movlb	0	; () banked
  4082  000916  51C3               	movf	recv_msg@qmsg& (0+255),w,b
  4083  000918  26D9               	addwf	fsr2l,f,c
  4084  00091A  0100               	movlb	0	; () banked
  4085  00091C  51C4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4086  00091E  22DA               	addwfc	fsr2h,f,c
  4087  000920  50DF               	movf	indf2,w,c
  4088  000922  0100               	movlb	0	; () banked
  4089  000924  6FBE               	movwf	??_recv_msg& (0+255),b
  4090  000926  0100               	movlb	0	; () banked
  4091  000928  51BE               	movf	??_recv_msg& (0+255),w,b
  4092  00092A  0100               	movlb	0	; () banked
  4093  00092C  0100               	movlb	0	; () banked
  4094  00092E  6FC1               	movwf	recv_msg@tlength& (0+255),b
  4095  000930  0100               	movlb	0	; () banked
  4096  000932  6BC2               	clrf	(recv_msg@tlength+1)& (0+255),b
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4100  000934  0100               	movlb	0	; () banked
  4101  000936  0100               	movlb	0	; () banked
  4102  000938  C0BD  F0AE         	movff	recv_msg@data+1,memcpy@d1+1
  4103  00093C  0100               	movlb	0	; () banked
  4104  00093E  0100               	movlb	0	; () banked
  4105  000940  C0BC  F0AD         	movff	recv_msg@data,memcpy@d1
  4106  000944  0E03               	movlw	3
  4107  000946  0100               	movlb	0	; () banked
  4108  000948  0100               	movlb	0	; () banked
  4109  00094A  25C3               	addwf	recv_msg@qmsg& (0+255),w,b
  4110  00094C  0100               	movlb	0	; () banked
  4111  00094E  6FBE               	movwf	??_recv_msg& (0+255),b
  4112  000950  0E00               	movlw	0
  4113  000952  0100               	movlb	0	; () banked
  4114  000954  0100               	movlb	0	; () banked
  4115  000956  21C4               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4116  000958  0100               	movlb	0	; () banked
  4117  00095A  6FBF               	movwf	(??_recv_msg+1)& (0+255),b
  4118  00095C  C0BE  F0AF         	movff	??_recv_msg,memcpy@s1
  4119  000960  C0BF  F0B0         	movff	??_recv_msg+1,memcpy@s1+1
  4120  000964  C0C1  F0B1         	movff	recv_msg@tlength,memcpy@n
  4121  000968  C0C2  F0B2         	movff	recv_msg@tlength+1,memcpy@n+1
  4122  00096C  ECF3  F009         	call	_memcpy	;wreg free
  4123                           
  4124                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4125  000970  0100               	movlb	0	; () banked
  4126  000972  EE20 F07D          	lfsr	2,125
  4127  000976  0100               	movlb	0	; () banked
  4128  000978  51B7               	movf	recv_msg@qptr& (0+255),w,b
  4129  00097A  26D9               	addwf	fsr2l,f,c
  4130  00097C  0100               	movlb	0	; () banked
  4131  00097E  51B8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4132  000980  22DA               	addwfc	fsr2h,f,c
  4133  000982  0100               	movlb	0	; () banked
  4134  000984  EE10 F07D          	lfsr	1,125
  4135  000988  0100               	movlb	0	; () banked
  4136  00098A  51B7               	movf	recv_msg@qptr& (0+255),w,b
  4137  00098C  26E1               	addwf	fsr1l,f,c
  4138  00098E  0100               	movlb	0	; () banked
  4139  000990  51B8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4140  000992  22E2               	addwfc	fsr1h,f,c
  4141  000994  50E7               	movf	indf1,w,c
  4142  000996  0100               	movlb	0	; () banked
  4143  000998  6FBE               	movwf	??_recv_msg& (0+255),b
  4144  00099A  0100               	movlb	0	; () banked
  4145  00099C  29BE               	incf	??_recv_msg& (0+255),w,b
  4146  00099E  0B03               	andlw	3
  4147  0009A0  6EDF               	movwf	indf2,c
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4151  0009A2  0100               	movlb	0	; () banked
  4152  0009A4  EE20 F002          	lfsr	2,2
  4153  0009A8  0100               	movlb	0	; () banked
  4154  0009AA  51C3               	movf	recv_msg@qmsg& (0+255),w,b
  4155  0009AC  26D9               	addwf	fsr2l,f,c
  4156  0009AE  0100               	movlb	0	; () banked
  4157  0009B0  51C4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4158  0009B2  22DA               	addwfc	fsr2h,f,c
  4159  0009B4  C0BA  FFE1         	movff	recv_msg@msgtype,fsr1l
  4160  0009B8  C0BB  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4161  0009BC  CFDF FFE7          	movff	indf2,indf1
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;messages.c: 91: qmsg->full = 0;
  4165  0009C0  C0C3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4166  0009C4  C0C4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4167  0009C8  0E00               	movlw	0
  4168  0009CA  6EDF               	movwf	indf2,c
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;messages.c: 92: return (tlength);
  4172  0009CC  0100               	movlb	0	; () banked
  4173  0009CE  0100               	movlb	0	; () banked
  4174  0009D0  51C1               	movf	recv_msg@tlength& (0+255),w,b
  4175  0009D2  0012               	return	
  4176  0009D4                     l2667:
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;messages.c: 94: return (-4);
  4180  0009D4  0EFC               	movlw	252
  4181  0009D6  0012               	return	
  4182  0009D8                     __end_of_recv_msg:
  4183                           	opt stack 0
  4184                           tblptru	equ	0xFF8
  4185                           tblptrh	equ	0xFF7
  4186                           tblptrl	equ	0xFF6
  4187                           tablat	equ	0xFF5
  4188                           prodh	equ	0xFF4
  4189                           prodl	equ	0xFF3
  4190                           intcon	equ	0xFF2
  4191                           postinc0	equ	0xFEE
  4192                           wreg	equ	0xFE8
  4193                           indf1	equ	0xFE7
  4194                           postdec1	equ	0xFE5
  4195                           fsr1h	equ	0xFE2
  4196                           fsr1l	equ	0xFE1
  4197                           indf2	equ	0xFDF
  4198                           postinc2	equ	0xFDE
  4199                           postdec2	equ	0xFDD
  4200                           fsr2h	equ	0xFDA
  4201                           fsr2l	equ	0xFD9
  4202                           status	equ	0xFD8
  4203                           
  4204 ;; *************** function _memcpy *****************
  4205 ;; Defined at:
  4206 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;  d1              2   45[BANK0 ] PTR void 
  4209 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  4210 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  4211 ;;		 -> main@msgbuffer(29), 
  4212 ;;  s1              2   47[BANK0 ] PTR const void 
  4213 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  4214 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  4215 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  4216 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(65), 
  4217 ;;		 -> main@uc(13), 
  4218 ;;  n               2   49[BANK0 ] unsigned int 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  s               2   53[BANK0 ] PTR const unsigned char 
  4221 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  4222 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  4223 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  4224 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(65), 
  4225 ;;		 -> main@uc(13), 
  4226 ;;  d               2   51[BANK0 ] PTR unsigned char 
  4227 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  4228 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  4229 ;;		 -> main@msgbuffer(29), 
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  2   45[BANK0 ] PTR void 
  4232 ;; Registers used:
  4233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4239 ;;      Params:         0       6       0       0       0
  4240 ;;      Locals:         0       4       0       0       0
  4241 ;;      Temps:          0       0       0       0       0
  4242 ;;      Totals:         0      10       0       0       0
  4243 ;;Total ram usage:       10 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; Hardware stack levels required when called:   11
  4246 ;; This function calls:
  4247 ;;		Nothing
  4248 ;; This function is called by:
  4249 ;;		_send_msg
  4250 ;;		_recv_msg
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           	psect	text24
  4255  0013E6                     __ptext24:
  4256                           	opt stack 0
  4257  0013E6                     _memcpy:
  4258                           	opt stack 16
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;incstack = 0
  4262  0013E6  0100               	movlb	0	; () banked
  4263  0013E8  0100               	movlb	0	; () banked
  4264  0013EA  C0B0  F0B6         	movff	memcpy@s1+1,memcpy@s+1
  4265  0013EE  0100               	movlb	0	; () banked
  4266  0013F0  0100               	movlb	0	; () banked
  4267  0013F2  C0AF  F0B5         	movff	memcpy@s1,memcpy@s
  4268  0013F6  0100               	movlb	0	; () banked
  4269  0013F8  0100               	movlb	0	; () banked
  4270  0013FA  C0AE  F0B4         	movff	memcpy@d1+1,memcpy@d+1
  4271  0013FE  0100               	movlb	0	; () banked
  4272  001400  0100               	movlb	0	; () banked
  4273  001402  C0AD  F0B3         	movff	memcpy@d1,memcpy@d
  4274  001406  D012               	goto	l2637
  4275  001408                     l2631:
  4276                           
  4277                           ; BSR set to: 0
  4278  001408  C0B5  FFD9         	movff	memcpy@s,fsr2l
  4279  00140C  C0B6  FFDA         	movff	memcpy@s+1,fsr2h
  4280  001410  C0B3  FFE1         	movff	memcpy@d,fsr1l
  4281  001414  C0B4  FFE2         	movff	memcpy@d+1,fsr1h
  4282  001418  CFDF FFE7          	movff	indf2,indf1
  4283                           
  4284                           ; BSR set to: 0
  4285  00141C  0100               	movlb	0	; () banked
  4286  00141E  0100               	movlb	0	; () banked
  4287  001420  4BB5               	infsnz	memcpy@s& (0+255),f,b
  4288  001422  2BB6               	incf	(memcpy@s+1)& (0+255),f,b
  4289                           
  4290                           ; BSR set to: 0
  4291  001424  0100               	movlb	0	; () banked
  4292  001426  0100               	movlb	0	; () banked
  4293  001428  4BB3               	infsnz	memcpy@d& (0+255),f,b
  4294  00142A  2BB4               	incf	(memcpy@d+1)& (0+255),f,b
  4295  00142C                     l2637:
  4296                           
  4297                           ; BSR set to: 0
  4298  00142C  0100               	movlb	0	; () banked
  4299  00142E  0100               	movlb	0	; () banked
  4300  001430  07B1               	decf	memcpy@n& (0+255),f,b
  4301  001432  A0D8               	btfss	status,0,c
  4302  001434  07B2               	decf	(memcpy@n+1)& (0+255),f,b
  4303  001436  0100               	movlb	0	; () banked
  4304  001438  29B1               	incf	memcpy@n& (0+255),w,b
  4305  00143A  B4D8               	btfsc	status,2,c
  4306  00143C  29B2               	incf	(memcpy@n+1)& (0+255),w,b
  4307  00143E  B4D8               	btfsc	status,2,c
  4308                           
  4309                           ; BSR set to: 0
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;	Return value of _memcpy is never used
  4313  001440  0012               	return	
  4314  001442  D7E2               	goto	l2631
  4315  001444                     __end_of_memcpy:
  4316                           	opt stack 0
  4317                           tblptru	equ	0xFF8
  4318                           tblptrh	equ	0xFF7
  4319                           tblptrl	equ	0xFF6
  4320                           tablat	equ	0xFF5
  4321                           prodh	equ	0xFF4
  4322                           prodl	equ	0xFF3
  4323                           intcon	equ	0xFF2
  4324                           postinc0	equ	0xFEE
  4325                           wreg	equ	0xFE8
  4326                           indf1	equ	0xFE7
  4327                           postdec1	equ	0xFE5
  4328                           fsr1h	equ	0xFE2
  4329                           fsr1l	equ	0xFE1
  4330                           indf2	equ	0xFDF
  4331                           postinc2	equ	0xFDE
  4332                           postdec2	equ	0xFDD
  4333                           fsr2h	equ	0xFDA
  4334                           fsr2l	equ	0xFD9
  4335                           status	equ	0xFD8
  4336                           
  4337 ;; *************** function _SetChanADC *****************
  4338 ;; Defined at:
  4339 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  channel         1    wreg     unsigned char 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  channel         1   46[BANK0 ] unsigned char 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;		None               void
  4346 ;; Registers used:
  4347 ;;		wreg, status,2, status,0
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4353 ;;      Params:         0       0       0       0       0
  4354 ;;      Locals:         0       1       0       0       0
  4355 ;;      Temps:          0       1       0       0       0
  4356 ;;      Totals:         0       2       0       0       0
  4357 ;;Total ram usage:        2 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:   11
  4360 ;; This function calls:
  4361 ;;		Nothing
  4362 ;; This function is called by:
  4363 ;;		_main
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text25
  4368  0017D8                     __ptext25:
  4369                           	opt stack 0
  4370  0017D8                     _SetChanADC:
  4371                           	opt stack 19
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;incstack = 0
  4375                           ;SetChanADC@channel stored from wreg
  4376  0017D8  CFE8 F0AE          	movff	wreg,SetChanADC@channel
  4377  0017DC  CFC2 F0AD          	movff	4034,??_SetChanADC	;volatile
  4378  0017E0  0EC3               	movlw	195
  4379  0017E2  0100               	movlb	0	; () banked
  4380  0017E4  17AD               	andwf	??_SetChanADC& (0+255),f,b
  4381  0017E6  0100               	movlb	0	; () banked
  4382  0017E8  0100               	movlb	0	; () banked
  4383  0017EA  90D8               	bcf	status,0,c
  4384  0017EC  31AE               	rrcf	SetChanADC@channel& (0+255),w,b
  4385  0017EE  0B3C               	andlw	60
  4386  0017F0  0100               	movlb	0	; () banked
  4387  0017F2  11AD               	iorwf	??_SetChanADC& (0+255),w,b
  4388  0017F4  6EC2               	movwf	4034,c	;volatile
  4389                           
  4390                           ; BSR set to: 0
  4391  0017F6  0012               	return	
  4392  0017F8                     __end_of_SetChanADC:
  4393                           	opt stack 0
  4394                           tblptru	equ	0xFF8
  4395                           tblptrh	equ	0xFF7
  4396                           tblptrl	equ	0xFF6
  4397                           tablat	equ	0xFF5
  4398                           prodh	equ	0xFF4
  4399                           prodl	equ	0xFF3
  4400                           intcon	equ	0xFF2
  4401                           postinc0	equ	0xFEE
  4402                           wreg	equ	0xFE8
  4403                           indf1	equ	0xFE7
  4404                           postdec1	equ	0xFE5
  4405                           fsr1h	equ	0xFE2
  4406                           fsr1l	equ	0xFE1
  4407                           indf2	equ	0xFDF
  4408                           postinc2	equ	0xFDE
  4409                           postdec2	equ	0xFDD
  4410                           fsr2h	equ	0xFDA
  4411                           fsr2l	equ	0xFD9
  4412                           status	equ	0xFD8
  4413                           
  4414 ;; *************** function _OpenUSART *****************
  4415 ;; Defined at:
  4416 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  config          1    wreg     unsigned char 
  4419 ;;  spbrg           2   45[BANK0 ] unsigned int 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  config          1   50[BANK0 ] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;		None               void
  4424 ;; Registers used:
  4425 ;;		wreg, status,2
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4431 ;;      Params:         0       2       0       0       0
  4432 ;;      Locals:         0       1       0       0       0
  4433 ;;      Temps:          0       3       0       0       0
  4434 ;;      Totals:         0       6       0       0       0
  4435 ;;Total ram usage:        6 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:   11
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_main
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           	psect	text26
  4446  000DDA                     __ptext26:
  4447                           	opt stack 0
  4448  000DDA                     _OpenUSART:
  4449                           	opt stack 19
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;incstack = 0
  4453                           ;OpenUSART@config stored from wreg
  4454  000DDA  CFE8 F0B2          	movff	wreg,OpenUSART@config
  4455  000DDE  0E00               	movlw	0
  4456  000DE0  6EAC               	movwf	4012,c	;volatile
  4457  000DE2  0E00               	movlw	0
  4458  000DE4  6EAB               	movwf	4011,c	;volatile
  4459  000DE6  0100               	movlb	0	; () banked
  4460  000DE8  0100               	movlb	0	; () banked
  4461  000DEA  B1B2               	btfsc	OpenUSART@config& (0+255),0,b
  4462                           
  4463                           ; BSR set to: 0
  4464  000DEC  88AC               	bsf	4012,4,c	;volatile
  4465                           
  4466                           ; BSR set to: 0
  4467                           
  4468                           ; BSR set to: 0
  4469  000DEE  0100               	movlb	0	; () banked
  4470  000DF0  0100               	movlb	0	; () banked
  4471  000DF2  A3B2               	btfss	OpenUSART@config& (0+255),1,b
  4472  000DF4  D002               	goto	l2471
  4473                           
  4474                           ; BSR set to: 0
  4475  000DF6  8CAC               	bsf	4012,6,c	;volatile
  4476  000DF8  8CAB               	bsf	4011,6,c	;volatile
  4477  000DFA                     l2471:
  4478                           
  4479                           ; BSR set to: 0
  4480  000DFA  0100               	movlb	0	; () banked
  4481  000DFC  0100               	movlb	0	; () banked
  4482  000DFE  B5B2               	btfsc	OpenUSART@config& (0+255),2,b
  4483                           
  4484                           ; BSR set to: 0
  4485  000E00  8EAC               	bsf	4012,7,c	;volatile
  4486                           
  4487                           ; BSR set to: 0
  4488                           
  4489                           ; BSR set to: 0
  4490  000E02  0100               	movlb	0	; () banked
  4491  000E04  0100               	movlb	0	; () banked
  4492  000E06  A7B2               	btfss	OpenUSART@config& (0+255),3,b
  4493  000E08  D002               	goto	l554
  4494                           
  4495                           ; BSR set to: 0
  4496  000E0A  88AB               	bsf	4011,4,c	;volatile
  4497  000E0C  D001               	goto	l2479
  4498  000E0E                     l554:
  4499                           
  4500                           ; BSR set to: 0
  4501  000E0E  8AAB               	bsf	4011,5,c	;volatile
  4502  000E10                     l2479:
  4503                           
  4504                           ; BSR set to: 0
  4505  000E10  0100               	movlb	0	; () banked
  4506  000E12  0100               	movlb	0	; () banked
  4507  000E14  B9B2               	btfsc	OpenUSART@config& (0+255),4,b
  4508                           
  4509                           ; BSR set to: 0
  4510  000E16  84AC               	bsf	4012,2,c	;volatile
  4511                           
  4512                           ; BSR set to: 0
  4513  000E18  989E               	bcf	3998,4,c	;volatile
  4514                           
  4515                           ; BSR set to: 0
  4516  000E1A  0100               	movlb	0	; () banked
  4517  000E1C  0100               	movlb	0	; () banked
  4518  000E1E  BBB2               	btfsc	OpenUSART@config& (0+255),5,b
  4519                           
  4520                           ; BSR set to: 0
  4521  000E20  86AB               	bsf	4011,3,c	;volatile
  4522                           
  4523                           ; BSR set to: 0
  4524                           
  4525                           ; BSR set to: 0
  4526  000E22  0100               	movlb	0	; () banked
  4527  000E24  0100               	movlb	0	; () banked
  4528  000E26  ADB2               	btfss	OpenUSART@config& (0+255),6,b
  4529  000E28  D002               	goto	l558
  4530                           
  4531                           ; BSR set to: 0
  4532  000E2A  8A9D               	bsf	3997,5,c	;volatile
  4533  000E2C  D001               	goto	l559
  4534  000E2E                     l558:
  4535                           
  4536                           ; BSR set to: 0
  4537  000E2E  9A9D               	bcf	3997,5,c	;volatile
  4538  000E30                     l559:
  4539                           
  4540                           ; BSR set to: 0
  4541  000E30  9A9E               	bcf	3998,5,c	;volatile
  4542                           
  4543                           ; BSR set to: 0
  4544  000E32  0100               	movlb	0	; () banked
  4545  000E34  0100               	movlb	0	; () banked
  4546  000E36  AFB2               	btfss	OpenUSART@config& (0+255),7,b
  4547  000E38  D002               	goto	l560
  4548                           
  4549                           ; BSR set to: 0
  4550  000E3A  889D               	bsf	3997,4,c	;volatile
  4551  000E3C  D001               	goto	l561
  4552  000E3E                     l560:
  4553                           
  4554                           ; BSR set to: 0
  4555  000E3E  989D               	bcf	3997,4,c	;volatile
  4556  000E40                     l561:
  4557                           
  4558                           ; BSR set to: 0
  4559  000E40  C0AD  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4560                           
  4561                           ; BSR set to: 0
  4562  000E44  0100               	movlb	0	; () banked
  4563  000E46  C0AE  F0AF         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4564  000E4A  C0AF  F0B0         	movff	??_OpenUSART,??_OpenUSART+1
  4565  000E4E  0100               	movlb	0	; () banked
  4566  000E50  6BB1               	clrf	(??_OpenUSART+2)& (0+255),b
  4567  000E52  0100               	movlb	0	; () banked
  4568  000E54  51B0               	movf	(??_OpenUSART+1)& (0+255),w,b
  4569  000E56  6EB0               	movwf	4016,c	;volatile
  4570                           
  4571                           ; BSR set to: 0
  4572  000E58  8AAC               	bsf	4012,5,c	;volatile
  4573                           
  4574                           ; BSR set to: 0
  4575  000E5A  8EAB               	bsf	4011,7,c	;volatile
  4576                           
  4577                           ; BSR set to: 0
  4578  000E5C  9C94               	bcf	3988,6,c	;volatile
  4579                           
  4580                           ; BSR set to: 0
  4581  000E5E  8E94               	bsf	3988,7,c	;volatile
  4582                           
  4583                           ; BSR set to: 0
  4584  000E60  A8AC               	btfss	4012,4,c	;volatile
  4585  000E62  0012               	return	
  4586                           
  4587                           ; BSR set to: 0
  4588  000E64  BEAC               	btfsc	4012,7,c	;volatile
  4589  000E66  0012               	return	
  4590                           
  4591                           ; BSR set to: 0
  4592  000E68  8C94               	bsf	3988,6,c	;volatile
  4593  000E6A  0012               	return	
  4594  000E6C                     __end_of_OpenUSART:
  4595                           	opt stack 0
  4596                           tblptru	equ	0xFF8
  4597                           tblptrh	equ	0xFF7
  4598                           tblptrl	equ	0xFF6
  4599                           tablat	equ	0xFF5
  4600                           prodh	equ	0xFF4
  4601                           prodl	equ	0xFF3
  4602                           intcon	equ	0xFF2
  4603                           postinc0	equ	0xFEE
  4604                           wreg	equ	0xFE8
  4605                           indf1	equ	0xFE7
  4606                           postdec1	equ	0xFE5
  4607                           fsr1h	equ	0xFE2
  4608                           fsr1l	equ	0xFE1
  4609                           indf2	equ	0xFDF
  4610                           postinc2	equ	0xFDE
  4611                           postdec2	equ	0xFDD
  4612                           fsr2h	equ	0xFDA
  4613                           fsr2l	equ	0xFD9
  4614                           status	equ	0xFD8
  4615                           
  4616 ;; *************** function _OpenTimer1 *****************
  4617 ;; Defined at:
  4618 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  config          1    wreg     unsigned char 
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  config          1   45[BANK0 ] unsigned char 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;		None               void
  4625 ;; Registers used:
  4626 ;;		wreg, status,2, status,0
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4632 ;;      Params:         0       0       0       0       0
  4633 ;;      Locals:         0       1       0       0       0
  4634 ;;      Temps:          0       0       0       0       0
  4635 ;;      Totals:         0       1       0       0       0
  4636 ;;Total ram usage:        1 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:   11
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_main
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text27
  4647  001636                     __ptext27:
  4648                           	opt stack 0
  4649  001636                     _OpenTimer1:
  4650                           	opt stack 19
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;incstack = 0
  4654                           ;OpenTimer1@config stored from wreg
  4655  001636  CFE8 F0AD          	movff	wreg,OpenTimer1@config
  4656  00163A  0100               	movlb	0	; () banked
  4657  00163C  0100               	movlb	0	; () banked
  4658  00163E  51AD               	movf	OpenTimer1@config& (0+255),w,b
  4659  001640  0B7E               	andlw	126
  4660  001642  6ECD               	movwf	4045,c	;volatile
  4661                           
  4662                           ; BSR set to: 0
  4663  001644  0100               	movlb	0	; () banked
  4664  001646  0100               	movlb	0	; () banked
  4665  001648  ADAD               	btfss	OpenTimer1@config& (0+255),6,b
  4666  00164A  D002               	goto	l517
  4667                           
  4668                           ; BSR set to: 0
  4669  00164C  8ECD               	bsf	4045,7,c	;volatile
  4670  00164E  D001               	goto	l2445
  4671  001650                     l517:
  4672                           
  4673                           ; BSR set to: 0
  4674  001650  9ECD               	bcf	4045,7,c	;volatile
  4675  001652                     l2445:
  4676                           
  4677                           ; BSR set to: 0
  4678  001652  0E00               	movlw	0
  4679  001654  6ECF               	movwf	4047,c	;volatile
  4680  001656  0E00               	movlw	0
  4681  001658  6ECE               	movwf	4046,c	;volatile
  4682                           
  4683                           ; BSR set to: 0
  4684  00165A  909E               	bcf	3998,0,c	;volatile
  4685                           
  4686                           ; BSR set to: 0
  4687  00165C  0100               	movlb	0	; () banked
  4688  00165E  0100               	movlb	0	; () banked
  4689  001660  AFAD               	btfss	OpenTimer1@config& (0+255),7,b
  4690  001662  D002               	goto	l519
  4691                           
  4692                           ; BSR set to: 0
  4693  001664  809D               	bsf	3997,0,c	;volatile
  4694  001666  D001               	goto	l520
  4695  001668                     l519:
  4696                           
  4697                           ; BSR set to: 0
  4698  001668  909D               	bcf	3997,0,c	;volatile
  4699  00166A                     l520:
  4700                           
  4701                           ; BSR set to: 0
  4702  00166A  80CD               	bsf	4045,0,c	;volatile
  4703                           
  4704                           ; BSR set to: 0
  4705  00166C  0012               	return	
  4706  00166E                     __end_of_OpenTimer1:
  4707                           	opt stack 0
  4708                           tblptru	equ	0xFF8
  4709                           tblptrh	equ	0xFF7
  4710                           tblptrl	equ	0xFF6
  4711                           tablat	equ	0xFF5
  4712                           prodh	equ	0xFF4
  4713                           prodl	equ	0xFF3
  4714                           intcon	equ	0xFF2
  4715                           postinc0	equ	0xFEE
  4716                           wreg	equ	0xFE8
  4717                           indf1	equ	0xFE7
  4718                           postdec1	equ	0xFE5
  4719                           fsr1h	equ	0xFE2
  4720                           fsr1l	equ	0xFE1
  4721                           indf2	equ	0xFDF
  4722                           postinc2	equ	0xFDE
  4723                           postdec2	equ	0xFDD
  4724                           fsr2h	equ	0xFDA
  4725                           fsr2l	equ	0xFD9
  4726                           status	equ	0xFD8
  4727                           
  4728 ;; *************** function _OpenTimer0 *****************
  4729 ;; Defined at:
  4730 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  config          1    wreg     unsigned char 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  config          1   45[BANK0 ] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;		None               void
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4744 ;;      Params:         0       0       0       0       0
  4745 ;;      Locals:         0       1       0       0       0
  4746 ;;      Temps:          0       0       0       0       0
  4747 ;;      Totals:         0       1       0       0       0
  4748 ;;Total ram usage:        1 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:   11
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_main
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text28
  4759  001746                     __ptext28:
  4760                           	opt stack 0
  4761  001746                     _OpenTimer0:
  4762                           	opt stack 19
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;incstack = 0
  4766                           ;OpenTimer0@config stored from wreg
  4767  001746  CFE8 F0AD          	movff	wreg,OpenTimer0@config
  4768  00174A  0100               	movlb	0	; () banked
  4769  00174C  0100               	movlb	0	; () banked
  4770  00174E  51AD               	movf	OpenTimer0@config& (0+255),w,b
  4771  001750  0B7F               	andlw	127
  4772  001752  6ED5               	movwf	4053,c	;volatile
  4773                           
  4774                           ; BSR set to: 0
  4775  001754  0E00               	movlw	0
  4776  001756  6ED7               	movwf	4055,c	;volatile
  4777                           
  4778                           ; BSR set to: 0
  4779  001758  0E00               	movlw	0
  4780  00175A  6ED6               	movwf	4054,c	;volatile
  4781                           
  4782                           ; BSR set to: 0
  4783  00175C  94F2               	bcf	intcon,2,c	;volatile
  4784                           
  4785                           ; BSR set to: 0
  4786  00175E  0100               	movlb	0	; () banked
  4787  001760  0100               	movlb	0	; () banked
  4788  001762  AFAD               	btfss	OpenTimer0@config& (0+255),7,b
  4789  001764  D002               	goto	l493
  4790                           
  4791                           ; BSR set to: 0
  4792  001766  8AF2               	bsf	intcon,5,c	;volatile
  4793  001768  D001               	goto	l494
  4794  00176A                     l493:
  4795                           
  4796                           ; BSR set to: 0
  4797  00176A  9AF2               	bcf	intcon,5,c	;volatile
  4798  00176C                     l494:
  4799                           
  4800                           ; BSR set to: 0
  4801  00176C  8ED5               	bsf	4053,7,c	;volatile
  4802                           
  4803                           ; BSR set to: 0
  4804  00176E  0012               	return	
  4805  001770                     __end_of_OpenTimer0:
  4806                           	opt stack 0
  4807                           tblptru	equ	0xFF8
  4808                           tblptrh	equ	0xFF7
  4809                           tblptrl	equ	0xFF6
  4810                           tablat	equ	0xFF5
  4811                           prodh	equ	0xFF4
  4812                           prodl	equ	0xFF3
  4813                           intcon	equ	0xFF2
  4814                           postinc0	equ	0xFEE
  4815                           wreg	equ	0xFE8
  4816                           indf1	equ	0xFE7
  4817                           postdec1	equ	0xFE5
  4818                           fsr1h	equ	0xFE2
  4819                           fsr1l	equ	0xFE1
  4820                           indf2	equ	0xFDF
  4821                           postinc2	equ	0xFDE
  4822                           postdec2	equ	0xFDD
  4823                           fsr2h	equ	0xFDA
  4824                           fsr2l	equ	0xFD9
  4825                           status	equ	0xFD8
  4826                           
  4827 ;; *************** function _OpenADC *****************
  4828 ;; Defined at:
  4829 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;  config          1    wreg     unsigned char 
  4832 ;;  config2         1   45[BANK0 ] unsigned char 
  4833 ;;  portconfig      1   46[BANK0 ] unsigned char 
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;  config          1   49[BANK0 ] unsigned char 
  4836 ;; Return value:  Size  Location     Type
  4837 ;;		None               void
  4838 ;; Registers used:
  4839 ;;		wreg, status,2, status,0
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4845 ;;      Params:         0       2       0       0       0
  4846 ;;      Locals:         0       1       0       0       0
  4847 ;;      Temps:          0       2       0       0       0
  4848 ;;      Totals:         0       5       0       0       0
  4849 ;;Total ram usage:        5 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:   11
  4852 ;; This function calls:
  4853 ;;		Nothing
  4854 ;; This function is called by:
  4855 ;;		_main
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           	psect	text29
  4860  000EF6                     __ptext29:
  4861                           	opt stack 0
  4862  000EF6                     _OpenADC:
  4863                           	opt stack 19
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;incstack = 0
  4867                           ;OpenADC@config stored from wreg
  4868  000EF6  CFE8 F0B1          	movff	wreg,OpenADC@config
  4869  000EFA  0E00               	movlw	0
  4870  000EFC  6EC2               	movwf	4034,c	;volatile
  4871  000EFE  0E00               	movlw	0
  4872  000F00  6EC0               	movwf	4032,c	;volatile
  4873  000F02  0100               	movlb	0	; () banked
  4874  000F04  0100               	movlb	0	; () banked
  4875  000F06  90D8               	bcf	status,0,c
  4876  000F08  31AD               	rrcf	OpenADC@config2& (0+255),w,b
  4877  000F0A  0B3C               	andlw	60
  4878  000F0C  6EC2               	movwf	4034,c	;volatile
  4879                           
  4880                           ; BSR set to: 0
  4881  000F0E  C0AD  F0AF         	movff	OpenADC@config2,??_OpenADC
  4882  000F12  0100               	movlb	0	; () banked
  4883  000F14  3BAF               	swapf	??_OpenADC& (0+255),f,b
  4884  000F16  0EF0               	movlw	240
  4885  000F18  17AF               	andwf	??_OpenADC& (0+255),f,b
  4886  000F1A  0E30               	movlw	48
  4887  000F1C  0100               	movlb	0	; () banked
  4888  000F1E  17AF               	andwf	??_OpenADC& (0+255),f,b
  4889  000F20  0100               	movlb	0	; () banked
  4890  000F22  0100               	movlb	0	; () banked
  4891  000F24  51AE               	movf	OpenADC@portconfig& (0+255),w,b
  4892  000F26  0B0F               	andlw	15
  4893  000F28  0100               	movlb	0	; () banked
  4894  000F2A  11AF               	iorwf	??_OpenADC& (0+255),w,b
  4895  000F2C  6EC1               	movwf	4033,c	;volatile
  4896                           
  4897                           ; BSR set to: 0
  4898  000F2E  C0B1  F0AF         	movff	OpenADC@config,??_OpenADC
  4899  000F32  0100               	movlb	0	; () banked
  4900  000F34  90D8               	bcf	status,0,c
  4901  000F36  37AF               	rlcf	??_OpenADC& (0+255),f,b
  4902  000F38  0100               	movlb	0	; () banked
  4903  000F3A  90D8               	bcf	status,0,c
  4904  000F3C  37AF               	rlcf	??_OpenADC& (0+255),f,b
  4905  000F3E  0E38               	movlw	56
  4906  000F40  0100               	movlb	0	; () banked
  4907  000F42  17AF               	andwf	??_OpenADC& (0+255),f,b
  4908  000F44  C0B1  F0B0         	movff	OpenADC@config,??_OpenADC+1
  4909  000F48  0100               	movlb	0	; () banked
  4910  000F4A  3BB0               	swapf	(??_OpenADC+1)& (0+255),f,b
  4911  000F4C  0E0F               	movlw	15
  4912  000F4E  17B0               	andwf	(??_OpenADC+1)& (0+255),f,b
  4913  000F50  0E07               	movlw	7
  4914  000F52  0100               	movlb	0	; () banked
  4915  000F54  17B0               	andwf	(??_OpenADC+1)& (0+255),f,b
  4916  000F56  0100               	movlb	0	; () banked
  4917  000F58  0100               	movlb	0	; () banked
  4918  000F5A  51B1               	movf	OpenADC@config& (0+255),w,b
  4919  000F5C  0B80               	andlw	128
  4920  000F5E  0100               	movlb	0	; () banked
  4921  000F60  11B0               	iorwf	(??_OpenADC+1)& (0+255),w,b
  4922  000F62  0100               	movlb	0	; () banked
  4923  000F64  11AF               	iorwf	??_OpenADC& (0+255),w,b
  4924  000F66  6EC0               	movwf	4032,c	;volatile
  4925                           
  4926                           ; BSR set to: 0
  4927  000F68  0100               	movlb	0	; () banked
  4928  000F6A  0100               	movlb	0	; () banked
  4929  000F6C  AFAD               	btfss	OpenADC@config2& (0+255),7,b
  4930  000F6E  D003               	goto	l474
  4931                           
  4932                           ; BSR set to: 0
  4933  000F70  9C9E               	bcf	3998,6,c	;volatile
  4934  000F72  8C9D               	bsf	3997,6,c	;volatile
  4935  000F74  8CF2               	bsf	intcon,6,c	;volatile
  4936  000F76                     l474:
  4937                           
  4938                           ; BSR set to: 0
  4939  000F76  80C2               	bsf	4034,0,c	;volatile
  4940                           
  4941                           ; BSR set to: 0
  4942  000F78  0012               	return	
  4943  000F7A                     __end_of_OpenADC:
  4944                           	opt stack 0
  4945                           tblptru	equ	0xFF8
  4946                           tblptrh	equ	0xFF7
  4947                           tblptrl	equ	0xFF6
  4948                           tablat	equ	0xFF5
  4949                           prodh	equ	0xFF4
  4950                           prodl	equ	0xFF3
  4951                           intcon	equ	0xFF2
  4952                           postinc0	equ	0xFEE
  4953                           wreg	equ	0xFE8
  4954                           indf1	equ	0xFE7
  4955                           postdec1	equ	0xFE5
  4956                           fsr1h	equ	0xFE2
  4957                           fsr1l	equ	0xFE1
  4958                           indf2	equ	0xFDF
  4959                           postinc2	equ	0xFDE
  4960                           postdec2	equ	0xFDD
  4961                           fsr2h	equ	0xFDA
  4962                           fsr2l	equ	0xFD9
  4963                           status	equ	0xFD8
  4964                           
  4965 ;; *************** function _InterruptHandlerLow *****************
  4966 ;; Defined at:
  4967 ;;		line 126 in file "../src/interrupts.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;		None
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;		None
  4972 ;; Return value:  Size  Location     Type
  4973 ;;		None               void
  4974 ;; Registers used:
  4975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4981 ;;      Params:         0       0       0       0       0
  4982 ;;      Locals:         0       0       0       0       0
  4983 ;;      Temps:         17       0       0       0       0
  4984 ;;      Totals:        17       0       0       0       0
  4985 ;;Total ram usage:       17 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:   10
  4988 ;; This function calls:
  4989 ;;		_adc_int_handler
  4990 ;;		_timer1_int_handler
  4991 ;;		_uart_recv_int_handler
  4992 ;;		_uart_trans_int_handler
  4993 ;; This function is called by:
  4994 ;;		Interrupt level 1
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	intcodelo
  4999  000018                     __pintcodelo:
  5000                           	opt stack 0
  5001  000018                     _InterruptHandlerLow:
  5002                           	opt stack 16
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;incstack = 0
  5006  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  5007  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  5008  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  5009  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  5010  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  5011  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  5012  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  5013  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  5014  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  5015  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  5016  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  5017  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  5018  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  5019  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  5020  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  5021  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  5022  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  5023                           
  5024                           ;interrupts.c: 128: if(PIR1bits.ADIF){
  5025  00005C  AC9E               	btfss	3998,6,c	;volatile
  5026  00005E  D003               	goto	i1l3111
  5027                           
  5028                           ;interrupts.c: 130: PIR1bits.ADIF = 0;
  5029  000060  9C9E               	bcf	3998,6,c	;volatile
  5030                           
  5031                           ;interrupts.c: 131: adc_int_handler();
  5032  000062  ECCB  F00B         	call	_adc_int_handler	;wreg free
  5033  000066                     i1l3111:
  5034                           
  5035                           ;interrupts.c: 132: }
  5036                           ;interrupts.c: 135: if (PIR1bits.TMR1IF) {
  5037  000066  A09E               	btfss	3998,0,c	;volatile
  5038  000068  D003               	goto	i1l3117
  5039                           
  5040                           ;interrupts.c: 136: PIR1bits.TMR1IF = 0;
  5041  00006A  909E               	bcf	3998,0,c	;volatile
  5042                           
  5043                           ;interrupts.c: 137: timer1_int_handler();
  5044  00006C  EC67  F00C         	call	_timer1_int_handler	;wreg free
  5045  000070                     i1l3117:
  5046                           
  5047                           ;interrupts.c: 139: }
  5048                           ;interrupts.c: 141: if (PIR1bits.TXIF) {
  5049  000070  B89E               	btfsc	3998,4,c	;volatile
  5050                           
  5051                           ;interrupts.c: 143: uart_trans_int_handler();
  5052  000072  EC8D  F009         	call	_uart_trans_int_handler	;wreg free
  5053                           
  5054                           ;interrupts.c: 144: }
  5055                           ;interrupts.c: 146: if (PIR1bits.RCIF) {
  5056  000076  AA9E               	btfss	3998,5,c	;volatile
  5057  000078  D003               	goto	i1l55
  5058                           
  5059                           ;interrupts.c: 147: PIR1bits.RCIF = 0;
  5060  00007A  9A9E               	bcf	3998,5,c	;volatile
  5061                           
  5062                           ;interrupts.c: 149: uart_recv_int_handler();
  5063  00007C  EC9F  F006         	call	_uart_recv_int_handler	;wreg free
  5064  000080                     i1l55:
  5065  000080  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5066  000084  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5067  000088  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5068  00008C  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5069  000090  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5070  000094  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5071  000098  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5072  00009C  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5073  0000A0  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5074  0000A4  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5075  0000A8  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5076  0000AC  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5077  0000B0  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5078  0000B4  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5079  0000B8  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5080  0000BC  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5081  0000C0  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5082  0000C4  0010               	retfie	
  5083  0000C6                     __end_of_InterruptHandlerLow:
  5084                           	opt stack 0
  5085                           pclatu	equ	0xFFB
  5086                           pclath	equ	0xFFA
  5087                           tblptru	equ	0xFF8
  5088                           tblptrh	equ	0xFF7
  5089                           tblptrl	equ	0xFF6
  5090                           tablat	equ	0xFF5
  5091                           prodh	equ	0xFF4
  5092                           prodl	equ	0xFF3
  5093                           intcon	equ	0xFF2
  5094                           postinc0	equ	0xFEE
  5095                           fsr0h	equ	0xFEA
  5096                           fsr0l	equ	0xFE9
  5097                           wreg	equ	0xFE8
  5098                           indf1	equ	0xFE7
  5099                           postdec1	equ	0xFE5
  5100                           fsr1h	equ	0xFE2
  5101                           fsr1l	equ	0xFE1
  5102                           bsr	equ	0xFE0
  5103                           indf2	equ	0xFDF
  5104                           postinc2	equ	0xFDE
  5105                           postdec2	equ	0xFDD
  5106                           fsr2h	equ	0xFDA
  5107                           fsr2l	equ	0xFD9
  5108                           status	equ	0xFD8
  5109                           
  5110 ;; *************** function _uart_trans_int_handler *****************
  5111 ;; Defined at:
  5112 ;;		line 66 in file "../src/my_uart.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;		None
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;		None
  5117 ;; Return value:  Size  Location     Type
  5118 ;;		None               void
  5119 ;; Registers used:
  5120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5126 ;;      Params:         0       0       0       0       0
  5127 ;;      Locals:         0       0       0       0       0
  5128 ;;      Temps:          1       0       0       0       0
  5129 ;;      Totals:         1       0       0       0       0
  5130 ;;Total ram usage:        1 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; Hardware stack levels required when called:    6
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		_InterruptHandlerLow
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           	psect	text31
  5141  00131A                     __ptext31:
  5142                           	opt stack 0
  5143  00131A                     _uart_trans_int_handler:
  5144                           	opt stack 19
  5145                           
  5146                           ;my_uart.c: 68: if(TXSTAbits.TRMT){
  5147                           
  5148                           ;incstack = 0
  5149  00131A  A2AC               	btfss	4012,1,c	;volatile
  5150  00131C  0012               	return	
  5151                           
  5152                           ;my_uart.c: 69: if(uc_ptr->txBufind < uc_ptr->txBuflen){
  5153  00131E  EE20 F00C          	lfsr	2,12
  5154  001322  5055               	movf	_uc_ptr,w,c
  5155  001324  26D9               	addwf	fsr2l,f,c
  5156  001326  5056               	movf	_uc_ptr+1,w,c
  5157  001328  22DA               	addwfc	fsr2h,f,c
  5158  00132A  50DF               	movf	indf2,w,c
  5159  00132C  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5160  00132E  EE20 F00B          	lfsr	2,11
  5161  001332  5055               	movf	_uc_ptr,w,c
  5162  001334  26D9               	addwf	fsr2l,f,c
  5163  001336  5056               	movf	_uc_ptr+1,w,c
  5164  001338  22DA               	addwfc	fsr2h,f,c
  5165  00133A  50DF               	movf	indf2,w,c
  5166  00133C  5C01               	subwf	??_uart_trans_int_handler,w,c
  5167  00133E  B0D8               	btfsc	status,0,c
  5168  001340  D01E               	goto	i1l411
  5169                           
  5170                           ;my_uart.c: 70: TXREG = uc_ptr->txBuff[uc_ptr->txBufind];
  5171  001342  EE20 F00C          	lfsr	2,12
  5172  001346  5055               	movf	_uc_ptr,w,c
  5173  001348  26D9               	addwf	fsr2l,f,c
  5174  00134A  5056               	movf	_uc_ptr+1,w,c
  5175  00134C  22DA               	addwfc	fsr2h,f,c
  5176  00134E  50DF               	movf	indf2,w,c
  5177  001350  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5178  001352  5001               	movf	??_uart_trans_int_handler,w,c
  5179  001354  0D01               	mullw	1
  5180  001356  0E06               	movlw	6
  5181  001358  26F3               	addwf	prodl,f,c
  5182  00135A  0E00               	movlw	0
  5183  00135C  22F4               	addwfc	prodh,f,c
  5184  00135E  50F3               	movf	prodl,w,c
  5185  001360  2455               	addwf	_uc_ptr,w,c
  5186  001362  6ED9               	movwf	fsr2l,c
  5187  001364  50F4               	movf	prodh,w,c
  5188  001366  2056               	addwfc	_uc_ptr+1,w,c
  5189  001368  6EDA               	movwf	fsr2h,c
  5190  00136A  50DF               	movf	indf2,w,c
  5191  00136C  6EAD               	movwf	4013,c	;volatile
  5192                           
  5193                           ;my_uart.c: 71: uc_ptr->txBufind++;
  5194  00136E  EE20 F00C          	lfsr	2,12
  5195  001372  5055               	movf	_uc_ptr,w,c
  5196  001374  26D9               	addwf	fsr2l,f,c
  5197  001376  5056               	movf	_uc_ptr+1,w,c
  5198  001378  22DA               	addwfc	fsr2h,f,c
  5199  00137A  2ADF               	incf	indf2,f,c
  5200                           
  5201                           ;my_uart.c: 72: } else
  5202  00137C  0012               	return	
  5203  00137E                     i1l411:
  5204                           
  5205                           ;my_uart.c: 73: PIE1bits.TX1IE = 0;
  5206  00137E  989D               	bcf	3997,4,c	;volatile
  5207  001380  0012               	return	
  5208  001382                     __end_of_uart_trans_int_handler:
  5209                           	opt stack 0
  5210                           pclatu	equ	0xFFB
  5211                           pclath	equ	0xFFA
  5212                           tblptru	equ	0xFF8
  5213                           tblptrh	equ	0xFF7
  5214                           tblptrl	equ	0xFF6
  5215                           tablat	equ	0xFF5
  5216                           prodh	equ	0xFF4
  5217                           prodl	equ	0xFF3
  5218                           intcon	equ	0xFF2
  5219                           postinc0	equ	0xFEE
  5220                           fsr0h	equ	0xFEA
  5221                           fsr0l	equ	0xFE9
  5222                           wreg	equ	0xFE8
  5223                           indf1	equ	0xFE7
  5224                           postdec1	equ	0xFE5
  5225                           fsr1h	equ	0xFE2
  5226                           fsr1l	equ	0xFE1
  5227                           bsr	equ	0xFE0
  5228                           indf2	equ	0xFDF
  5229                           postinc2	equ	0xFDE
  5230                           postdec2	equ	0xFDD
  5231                           fsr2h	equ	0xFDA
  5232                           fsr2l	equ	0xFD9
  5233                           status	equ	0xFD8
  5234                           
  5235 ;; *************** function _uart_recv_int_handler *****************
  5236 ;; Defined at:
  5237 ;;		line 11 in file "../src/my_uart.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;		None
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;		None
  5242 ;; Return value:  Size  Location     Type
  5243 ;;		None               void
  5244 ;; Registers used:
  5245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5251 ;;      Params:         0       0       0       0       0
  5252 ;;      Locals:         0       0       0       0       0
  5253 ;;      Temps:          1       0       0       0       0
  5254 ;;      Totals:         1       0       0       0       0
  5255 ;;Total ram usage:        1 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:    9
  5258 ;; This function calls:
  5259 ;;		_ReadUSART
  5260 ;;		_ToMainLow_sendmsg
  5261 ;; This function is called by:
  5262 ;;		_InterruptHandlerLow
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           	psect	text32
  5267  000D3E                     __ptext32:
  5268                           	opt stack 0
  5269  000D3E                     _uart_recv_int_handler:
  5270                           	opt stack 16
  5271                           
  5272                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  5273                           
  5274                           ;incstack = 0
  5275  000D3E  AA9E               	btfss	3998,5,c	;volatile
  5276  000D40  D03C               	goto	i1l3099
  5277                           
  5278                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5279  000D42  EE20 F005          	lfsr	2,5
  5280  000D46  5055               	movf	_uc_ptr,w,c
  5281  000D48  26D9               	addwf	fsr2l,f,c
  5282  000D4A  5056               	movf	_uc_ptr+1,w,c
  5283  000D4C  22DA               	addwfc	fsr2h,f,c
  5284  000D4E  50DF               	movf	indf2,w,c
  5285  000D50  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5286  000D52  501B               	movf	??_uart_recv_int_handler,w,c
  5287  000D54  0D01               	mullw	1
  5288  000D56  50F3               	movf	prodl,w,c
  5289  000D58  2455               	addwf	_uc_ptr,w,c
  5290  000D5A  6ED9               	movwf	fsr2l,c
  5291  000D5C  50F4               	movf	prodh,w,c
  5292  000D5E  2056               	addwfc	_uc_ptr+1,w,c
  5293  000D60  6EDA               	movwf	fsr2h,c
  5294  000D62  EC0B  F00C         	call	_ReadUSART	;wreg free
  5295  000D66  6EDF               	movwf	indf2,c
  5296                           
  5297                           ;my_uart.c: 25: uc_ptr->buflen++;
  5298  000D68  EE20 F005          	lfsr	2,5
  5299  000D6C  5055               	movf	_uc_ptr,w,c
  5300  000D6E  26D9               	addwf	fsr2l,f,c
  5301  000D70  5056               	movf	_uc_ptr+1,w,c
  5302  000D72  22DA               	addwfc	fsr2h,f,c
  5303  000D74  2ADF               	incf	indf2,f,c
  5304                           
  5305                           ;my_uart.c: 27: if (uc_ptr->buflen == 5) {
  5306  000D76  EE20 F005          	lfsr	2,5
  5307  000D7A  5055               	movf	_uc_ptr,w,c
  5308  000D7C  26D9               	addwf	fsr2l,f,c
  5309  000D7E  5056               	movf	_uc_ptr+1,w,c
  5310  000D80  22DA               	addwfc	fsr2h,f,c
  5311  000D82  0E05               	movlw	5
  5312  000D84  62DF               	cpfseq	indf2,c
  5313  000D86  D019               	goto	i1l3099
  5314                           
  5315                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5316  000D88  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5317  000D8A  0E1F               	movlw	31
  5318  000D8C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5319  000D8E  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5320  000D90  C056  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5321  000D94  C055  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5322  000D98  EE20 F005          	lfsr	2,5
  5323  000D9C  5055               	movf	_uc_ptr,w,c
  5324  000D9E  26D9               	addwf	fsr2l,f,c
  5325  000DA0  5056               	movf	_uc_ptr+1,w,c
  5326  000DA2  22DA               	addwfc	fsr2h,f,c
  5327  000DA4  50DF               	movf	indf2,w,c
  5328  000DA6  ECB8  F00B         	call	_ToMainLow_sendmsg
  5329                           
  5330                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  5331  000DAA  EE20 F005          	lfsr	2,5
  5332  000DAE  5055               	movf	_uc_ptr,w,c
  5333  000DB0  26D9               	addwf	fsr2l,f,c
  5334  000DB2  5056               	movf	_uc_ptr+1,w,c
  5335  000DB4  22DA               	addwfc	fsr2h,f,c
  5336  000DB6  0E00               	movlw	0
  5337  000DB8  6EDF               	movwf	indf2,c
  5338  000DBA                     i1l3099:
  5339                           
  5340                           ;my_uart.c: 30: }
  5341                           ;my_uart.c: 31: }
  5342                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  5343  000DBA  A64A               	btfss	_USART_Status,3,c
  5344  000DBC  0012               	return	
  5345                           
  5346                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  5347  000DBE  98AB               	bcf	4011,4,c	;volatile
  5348                           
  5349                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  5350  000DC0  88AB               	bsf	4011,4,c	;volatile
  5351                           
  5352                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  5353  000DC2  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5354  000DC4  0E1E               	movlw	30
  5355  000DC6  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5356  000DC8  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5357  000DCA  0E00               	movlw	0
  5358  000DCC  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5359  000DCE  0E00               	movlw	0
  5360  000DD0  6E18               	movwf	ToMainLow_sendmsg@data,c
  5361  000DD2  0E00               	movlw	0
  5362  000DD4  ECB8  F00B         	call	_ToMainLow_sendmsg
  5363  000DD8  0012               	return	
  5364  000DDA                     __end_of_uart_recv_int_handler:
  5365                           	opt stack 0
  5366                           pclatu	equ	0xFFB
  5367                           pclath	equ	0xFFA
  5368                           tblptru	equ	0xFF8
  5369                           tblptrh	equ	0xFF7
  5370                           tblptrl	equ	0xFF6
  5371                           tablat	equ	0xFF5
  5372                           prodh	equ	0xFF4
  5373                           prodl	equ	0xFF3
  5374                           intcon	equ	0xFF2
  5375                           postinc0	equ	0xFEE
  5376                           fsr0h	equ	0xFEA
  5377                           fsr0l	equ	0xFE9
  5378                           wreg	equ	0xFE8
  5379                           indf1	equ	0xFE7
  5380                           postdec1	equ	0xFE5
  5381                           fsr1h	equ	0xFE2
  5382                           fsr1l	equ	0xFE1
  5383                           bsr	equ	0xFE0
  5384                           indf2	equ	0xFDF
  5385                           postinc2	equ	0xFDE
  5386                           postdec2	equ	0xFDD
  5387                           fsr2h	equ	0xFDA
  5388                           fsr2l	equ	0xFD9
  5389                           status	equ	0xFD8
  5390                           
  5391 ;; *************** function _ToMainLow_sendmsg *****************
  5392 ;; Defined at:
  5393 ;;		line 103 in file "../src/messages.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;  length          1    wreg     unsigned char 
  5396 ;;  msgtype         1   22[COMRAM] unsigned char 
  5397 ;;  data            2   23[COMRAM] PTR void 
  5398 ;;		 -> NULL(0), main@uc(13), 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;  length          1   25[COMRAM] unsigned char 
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      char 
  5403 ;; Registers used:
  5404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5410 ;;      Params:         3       0       0       0       0
  5411 ;;      Locals:         1       0       0       0       0
  5412 ;;      Temps:          0       0       0       0       0
  5413 ;;      Totals:         4       0       0       0       0
  5414 ;;Total ram usage:        4 bytes
  5415 ;; Hardware stack levels used:    1
  5416 ;; Hardware stack levels required when called:    8
  5417 ;; This function calls:
  5418 ;;		i1_send_msg
  5419 ;; This function is called by:
  5420 ;;		_uart_recv_int_handler
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           	psect	text33
  5425  001770                     __ptext33:
  5426                           	opt stack 0
  5427  001770                     _ToMainLow_sendmsg:
  5428                           	opt stack 16
  5429                           
  5430                           ;incstack = 0
  5431                           ;ToMainLow_sendmsg@length stored from wreg
  5432  001770  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5433                           
  5434                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5435                           ;	Return value of _ToMainLow_sendmsg is never used
  5436  001774  0101               	movlb	1	; () banked
  5437  001776  0E01               	movlw	high _ToMainLow_MQ
  5438  001778  6E0C               	movwf	i1send_msg@qptr+1,c
  5439  00177A  0101               	movlb	1	; () banked
  5440  00177C  0E00               	movlw	low _ToMainLow_MQ
  5441  00177E  6E0B               	movwf	i1send_msg@qptr,c
  5442  001780  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5443  001784  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5444  001788  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5445  00178C  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5446  001790  EC4A  F006         	call	i1_send_msg	;wreg free
  5447  001794  0012               	return	
  5448  001796                     __end_of_ToMainLow_sendmsg:
  5449                           	opt stack 0
  5450                           pclatu	equ	0xFFB
  5451                           pclath	equ	0xFFA
  5452                           tblptru	equ	0xFF8
  5453                           tblptrh	equ	0xFF7
  5454                           tblptrl	equ	0xFF6
  5455                           tablat	equ	0xFF5
  5456                           prodh	equ	0xFF4
  5457                           prodl	equ	0xFF3
  5458                           intcon	equ	0xFF2
  5459                           postinc0	equ	0xFEE
  5460                           fsr0h	equ	0xFEA
  5461                           fsr0l	equ	0xFE9
  5462                           wreg	equ	0xFE8
  5463                           indf1	equ	0xFE7
  5464                           postdec1	equ	0xFE5
  5465                           fsr1h	equ	0xFE2
  5466                           fsr1l	equ	0xFE1
  5467                           bsr	equ	0xFE0
  5468                           indf2	equ	0xFDF
  5469                           postinc2	equ	0xFDE
  5470                           postdec2	equ	0xFDD
  5471                           fsr2h	equ	0xFDA
  5472                           fsr2l	equ	0xFD9
  5473                           status	equ	0xFD8
  5474                           
  5475 ;; *************** function i1_send_msg *****************
  5476 ;; Defined at:
  5477 ;;		line 24 in file "../src/messages.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5480 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  5481 ;;  length          1   12[COMRAM] unsigned char 
  5482 ;;  msgtype         1   13[COMRAM] unsigned char 
  5483 ;;  data            2   14[COMRAM] PTR void 
  5484 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(65), 
  5485 ;;		 -> main@uc(13), 
  5486 ;; Auto vars:     Size  Location     Type
  5487 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5488 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  5489 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  5490 ;;  send_msg        2   17[COMRAM] unsigned int 
  5491 ;;  send_msg        1   19[COMRAM] unsigned char 
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  1    wreg      char 
  5494 ;; Registers used:
  5495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5501 ;;      Params:         6       0       0       0       0
  5502 ;;      Locals:         5       0       0       0       0
  5503 ;;      Temps:          1       0       0       0       0
  5504 ;;      Totals:        12       0       0       0       0
  5505 ;;Total ram usage:       12 bytes
  5506 ;; Hardware stack levels used:    1
  5507 ;; Hardware stack levels required when called:    7
  5508 ;; This function calls:
  5509 ;;		i1_memcpy
  5510 ;; This function is called by:
  5511 ;;		_ToMainLow_sendmsg
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	text34
  5516  000C94                     __ptext34:
  5517                           	opt stack 0
  5518  000C94                     i1_send_msg:
  5519                           	opt stack 16
  5520                           
  5521                           ;messages.c: 25: unsigned char slot;
  5522                           ;messages.c: 27: msg *qmsg;
  5523                           ;messages.c: 28: size_t tlength = length;
  5524                           
  5525                           ;incstack = 0
  5526  000C94  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5527  000C98  6A13               	clrf	i1send_msg@tlength+1,c
  5528                           
  5529                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5530  000C9A  EE20 F07C          	lfsr	2,124
  5531  000C9E  500B               	movf	i1send_msg@qptr,w,c
  5532  000CA0  26D9               	addwf	fsr2l,f,c
  5533  000CA2  500C               	movf	i1send_msg@qptr+1,w,c
  5534  000CA4  22DA               	addwfc	fsr2h,f,c
  5535  000CA6  50DF               	movf	indf2,w,c
  5536  000CA8  6E14               	movwf	i1send_msg@slot,c
  5537                           
  5538                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5539  000CAA  5014               	movf	i1send_msg@slot,w,c
  5540  000CAC  0D1F               	mullw	31
  5541  000CAE  50F3               	movf	prodl,w,c
  5542  000CB0  240B               	addwf	i1send_msg@qptr,w,c
  5543  000CB2  6E15               	movwf	i1send_msg@qmsg,c
  5544  000CB4  50F4               	movf	prodh,w,c
  5545  000CB6  200C               	addwfc	i1send_msg@qptr+1,w,c
  5546  000CB8  6E16               	movwf	i1send_msg@qmsg+1,c
  5547                           
  5548                           ;messages.c: 41: if (qmsg->full != 0) {
  5549  000CBA  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5550  000CBE  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5551  000CC2  50DF               	movf	indf2,w,c
  5552  000CC4  B4D8               	btfsc	status,2,c
  5553  000CC6  D002               	goto	i1l3071
  5554                           
  5555                           ;messages.c: 42: return (-1);
  5556  000CC8  0EFF               	movlw	255
  5557  000CCA  0012               	return	
  5558  000CCC                     i1l3071:
  5559                           
  5560                           ;messages.c: 43: }
  5561                           ;messages.c: 46: qmsg->length = length;
  5562  000CCC  EE20 F001          	lfsr	2,1
  5563  000CD0  5015               	movf	i1send_msg@qmsg,w,c
  5564  000CD2  26D9               	addwf	fsr2l,f,c
  5565  000CD4  5016               	movf	i1send_msg@qmsg+1,w,c
  5566  000CD6  22DA               	addwfc	fsr2h,f,c
  5567  000CD8  C00D  FFDF         	movff	i1send_msg@length,indf2
  5568                           
  5569                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5570  000CDC  EE20 F002          	lfsr	2,2
  5571  000CE0  5015               	movf	i1send_msg@qmsg,w,c
  5572  000CE2  26D9               	addwf	fsr2l,f,c
  5573  000CE4  5016               	movf	i1send_msg@qmsg+1,w,c
  5574  000CE6  22DA               	addwfc	fsr2h,f,c
  5575  000CE8  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5576                           
  5577                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5578  000CEC  0E03               	movlw	3
  5579  000CEE  2415               	addwf	i1send_msg@qmsg,w,c
  5580  000CF0  6E01               	movwf	i1memcpy@d1,c
  5581  000CF2  0E00               	movlw	0
  5582  000CF4  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5583  000CF6  6E02               	movwf	i1memcpy@d1+1,c
  5584  000CF8  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5585  000CFC  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5586  000D00  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5587  000D04  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5588  000D08  ECFB  F00A         	call	i1_memcpy	;wreg free
  5589                           
  5590                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5591  000D0C  EE20 F07C          	lfsr	2,124
  5592  000D10  500B               	movf	i1send_msg@qptr,w,c
  5593  000D12  26D9               	addwf	fsr2l,f,c
  5594  000D14  500C               	movf	i1send_msg@qptr+1,w,c
  5595  000D16  22DA               	addwfc	fsr2h,f,c
  5596  000D18  EE10 F07C          	lfsr	1,124
  5597  000D1C  500B               	movf	i1send_msg@qptr,w,c
  5598  000D1E  26E1               	addwf	fsr1l,f,c
  5599  000D20  500C               	movf	i1send_msg@qptr+1,w,c
  5600  000D22  22E2               	addwfc	fsr1h,f,c
  5601  000D24  50E7               	movf	indf1,w,c
  5602  000D26  6E11               	movwf	??i1_send_msg& (0+255),c
  5603  000D28  2811               	incf	??i1_send_msg,w,c
  5604  000D2A  0B03               	andlw	3
  5605  000D2C  6EDF               	movwf	indf2,c
  5606                           
  5607                           ;messages.c: 59: qmsg->full = 1;
  5608  000D2E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5609  000D32  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5610  000D36  0E01               	movlw	1
  5611  000D38  6EDF               	movwf	indf2,c
  5612                           
  5613                           ;messages.c: 60: return (1);
  5614  000D3A  0E01               	movlw	1
  5615  000D3C  0012               	return	
  5616  000D3E                     __end_ofi1_send_msg:
  5617                           	opt stack 0
  5618                           pclatu	equ	0xFFB
  5619                           pclath	equ	0xFFA
  5620                           tblptru	equ	0xFF8
  5621                           tblptrh	equ	0xFF7
  5622                           tblptrl	equ	0xFF6
  5623                           tablat	equ	0xFF5
  5624                           prodh	equ	0xFF4
  5625                           prodl	equ	0xFF3
  5626                           intcon	equ	0xFF2
  5627                           postinc0	equ	0xFEE
  5628                           fsr0h	equ	0xFEA
  5629                           fsr0l	equ	0xFE9
  5630                           wreg	equ	0xFE8
  5631                           indf1	equ	0xFE7
  5632                           postdec1	equ	0xFE5
  5633                           fsr1h	equ	0xFE2
  5634                           fsr1l	equ	0xFE1
  5635                           bsr	equ	0xFE0
  5636                           indf2	equ	0xFDF
  5637                           postinc2	equ	0xFDE
  5638                           postdec2	equ	0xFDD
  5639                           fsr2h	equ	0xFDA
  5640                           fsr2l	equ	0xFD9
  5641                           status	equ	0xFD8
  5642                           
  5643 ;; *************** function i1_memcpy *****************
  5644 ;; Defined at:
  5645 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  d1              2    0[COMRAM] PTR void 
  5648 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  5649 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  5650 ;;		 -> main@msgbuffer(29), 
  5651 ;;  s1              2    2[COMRAM] PTR const void 
  5652 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  5653 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  5654 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  5655 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(65), 
  5656 ;;		 -> main@uc(13), 
  5657 ;;  n               2    4[COMRAM] unsigned int 
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5660 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  5661 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  5662 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  5663 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(65), 
  5664 ;;		 -> main@uc(13), 
  5665 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5666 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  5667 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  5668 ;;		 -> main@msgbuffer(29), 
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  2    0[COMRAM] PTR void 
  5671 ;; Registers used:
  5672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5678 ;;      Params:         6       0       0       0       0
  5679 ;;      Locals:         4       0       0       0       0
  5680 ;;      Temps:          0       0       0       0       0
  5681 ;;      Totals:        10       0       0       0       0
  5682 ;;Total ram usage:       10 bytes
  5683 ;; Hardware stack levels used:    1
  5684 ;; Hardware stack levels required when called:    6
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		i1_send_msg
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text35
  5693  0015F6                     __ptext35:
  5694                           	opt stack 0
  5695  0015F6                     i1_memcpy:
  5696                           	opt stack 16
  5697                           
  5698                           ;incstack = 0
  5699  0015F6  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5700  0015FA  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5701  0015FE  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5702  001602  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5703  001606  D00E               	goto	i1l3047
  5704  001608                     i1l3041:
  5705  001608  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5706  00160C  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5707  001610  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5708  001614  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5709  001618  CFDF FFE7          	movff	indf2,indf1
  5710  00161C  4A09               	infsnz	i1memcpy@s,f,c
  5711  00161E  2A0A               	incf	i1memcpy@s+1,f,c
  5712  001620  4A07               	infsnz	i1memcpy@d,f,c
  5713  001622  2A08               	incf	i1memcpy@d+1,f,c
  5714  001624                     i1l3047:
  5715  001624  0605               	decf	i1memcpy@n,f,c
  5716  001626  A0D8               	btfss	status,0,c
  5717  001628  0606               	decf	i1memcpy@n+1,f,c
  5718  00162A  2805               	incf	i1memcpy@n& (0+255),w,c
  5719  00162C  B4D8               	btfsc	status,2,c
  5720  00162E  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5721  001630  B4D8               	btfsc	status,2,c
  5722                           
  5723                           ;	Return value of i1_memcpy is never used
  5724  001632  0012               	return	
  5725  001634  D7E9               	goto	i1l3041
  5726  001636                     __end_ofi1_memcpy:
  5727                           	opt stack 0
  5728                           pclatu	equ	0xFFB
  5729                           pclath	equ	0xFFA
  5730                           tblptru	equ	0xFF8
  5731                           tblptrh	equ	0xFF7
  5732                           tblptrl	equ	0xFF6
  5733                           tablat	equ	0xFF5
  5734                           prodh	equ	0xFF4
  5735                           prodl	equ	0xFF3
  5736                           intcon	equ	0xFF2
  5737                           postinc0	equ	0xFEE
  5738                           fsr0h	equ	0xFEA
  5739                           fsr0l	equ	0xFE9
  5740                           wreg	equ	0xFE8
  5741                           indf1	equ	0xFE7
  5742                           postdec1	equ	0xFE5
  5743                           fsr1h	equ	0xFE2
  5744                           fsr1l	equ	0xFE1
  5745                           bsr	equ	0xFE0
  5746                           indf2	equ	0xFDF
  5747                           postinc2	equ	0xFDE
  5748                           postdec2	equ	0xFDD
  5749                           fsr2h	equ	0xFDA
  5750                           fsr2l	equ	0xFD9
  5751                           status	equ	0xFD8
  5752                           
  5753 ;; *************** function _ReadUSART *****************
  5754 ;; Defined at:
  5755 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;		None
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;  data            1    0[COMRAM] unsigned char 
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  1    wreg      unsigned char 
  5762 ;; Registers used:
  5763 ;;		wreg, status,2, status,0
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5769 ;;      Params:         0       0       0       0       0
  5770 ;;      Locals:         1       0       0       0       0
  5771 ;;      Temps:          0       0       0       0       0
  5772 ;;      Totals:         1       0       0       0       0
  5773 ;;Total ram usage:        1 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    6
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		_uart_recv_int_handler
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           	psect	text36
  5784  001816                     __ptext36:
  5785                           	opt stack 0
  5786  001816                     _ReadUSART:
  5787                           	opt stack 18
  5788                           
  5789                           ;incstack = 0
  5790  001816  0EF2               	movlw	242
  5791  001818  164A               	andwf	_USART_Status,f,c
  5792  00181A  ACAB               	btfss	4011,6,c	;volatile
  5793  00181C  D003               	goto	i1l572
  5794  00181E  904A               	bcf	_USART_Status,0,c
  5795  001820  B0AB               	btfsc	4011,0,c	;volatile
  5796  001822  804A               	bsf	_USART_Status,0,c
  5797  001824                     i1l572:
  5798  001824  B4AB               	btfsc	4011,2,c	;volatile
  5799  001826  844A               	bsf	_USART_Status,2,c
  5800  001828  B2AB               	btfsc	4011,1,c	;volatile
  5801  00182A  864A               	bsf	_USART_Status,3,c
  5802  00182C  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5803  001830  5001               	movf	ReadUSART@data,w,c
  5804  001832  0012               	return	
  5805  001834                     __end_of_ReadUSART:
  5806                           	opt stack 0
  5807                           pclatu	equ	0xFFB
  5808                           pclath	equ	0xFFA
  5809                           tblptru	equ	0xFF8
  5810                           tblptrh	equ	0xFF7
  5811                           tblptrl	equ	0xFF6
  5812                           tablat	equ	0xFF5
  5813                           prodh	equ	0xFF4
  5814                           prodl	equ	0xFF3
  5815                           intcon	equ	0xFF2
  5816                           postinc0	equ	0xFEE
  5817                           fsr0h	equ	0xFEA
  5818                           fsr0l	equ	0xFE9
  5819                           wreg	equ	0xFE8
  5820                           indf1	equ	0xFE7
  5821                           postdec1	equ	0xFE5
  5822                           fsr1h	equ	0xFE2
  5823                           fsr1l	equ	0xFE1
  5824                           bsr	equ	0xFE0
  5825                           indf2	equ	0xFDF
  5826                           postinc2	equ	0xFDE
  5827                           postdec2	equ	0xFDD
  5828                           fsr2h	equ	0xFDA
  5829                           fsr2l	equ	0xFD9
  5830                           status	equ	0xFD8
  5831                           
  5832 ;; *************** function _timer1_int_handler *****************
  5833 ;; Defined at:
  5834 ;;		line 46 in file "../src/user_interrupts.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;		None
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;		None
  5839 ;; Return value:  Size  Location     Type
  5840 ;;		None               void
  5841 ;; Registers used:
  5842 ;;		wreg, status,2, cstack
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5848 ;;      Params:         0       0       0       0       0
  5849 ;;      Locals:         0       0       0       0       0
  5850 ;;      Temps:          0       0       0       0       0
  5851 ;;      Totals:         0       0       0       0       0
  5852 ;;Total ram usage:        0 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    7
  5855 ;; This function calls:
  5856 ;;		_WriteTimer1
  5857 ;; This function is called by:
  5858 ;;		_InterruptHandlerLow
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text37
  5863  0018CE                     __ptext37:
  5864                           	opt stack 0
  5865  0018CE                     _timer1_int_handler:
  5866                           	opt stack 18
  5867                           
  5868                           ;user_interrupts.c: 58: WriteTimer1(0);
  5869                           
  5870                           ;incstack = 0
  5871  0018CE  0E00               	movlw	0
  5872  0018D0  6E02               	movwf	WriteTimer1@timer1+1,c
  5873  0018D2  0E00               	movlw	0
  5874  0018D4  6E01               	movwf	WriteTimer1@timer1,c
  5875  0018D6  EC4C  F00C         	call	_WriteTimer1	;wreg free
  5876  0018DA  0012               	return	
  5877  0018DC                     __end_of_timer1_int_handler:
  5878                           	opt stack 0
  5879                           pclatu	equ	0xFFB
  5880                           pclath	equ	0xFFA
  5881                           tblptru	equ	0xFF8
  5882                           tblptrh	equ	0xFF7
  5883                           tblptrl	equ	0xFF6
  5884                           tablat	equ	0xFF5
  5885                           prodh	equ	0xFF4
  5886                           prodl	equ	0xFF3
  5887                           intcon	equ	0xFF2
  5888                           postinc0	equ	0xFEE
  5889                           fsr0h	equ	0xFEA
  5890                           fsr0l	equ	0xFE9
  5891                           wreg	equ	0xFE8
  5892                           indf1	equ	0xFE7
  5893                           postdec1	equ	0xFE5
  5894                           fsr1h	equ	0xFE2
  5895                           fsr1l	equ	0xFE1
  5896                           bsr	equ	0xFE0
  5897                           indf2	equ	0xFDF
  5898                           postinc2	equ	0xFDE
  5899                           postdec2	equ	0xFDD
  5900                           fsr2h	equ	0xFDA
  5901                           fsr2l	equ	0xFD9
  5902                           status	equ	0xFD8
  5903                           
  5904 ;; *************** function _WriteTimer1 *****************
  5905 ;; Defined at:
  5906 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;  timer1          2    0[COMRAM] unsigned int 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  timer           2    2[COMRAM] struct Timers
  5911 ;; Return value:  Size  Location     Type
  5912 ;;		None               void
  5913 ;; Registers used:
  5914 ;;		None
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/0
  5917 ;;		On exit  : 0/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5920 ;;      Params:         2       0       0       0       0
  5921 ;;      Locals:         2       0       0       0       0
  5922 ;;      Temps:          0       0       0       0       0
  5923 ;;      Totals:         4       0       0       0       0
  5924 ;;Total ram usage:        4 bytes
  5925 ;; Hardware stack levels used:    1
  5926 ;; Hardware stack levels required when called:    6
  5927 ;; This function calls:
  5928 ;;		Nothing
  5929 ;; This function is called by:
  5930 ;;		_timer1_int_handler
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           	psect	text38
  5935  001898                     __ptext38:
  5936                           	opt stack 0
  5937  001898                     _WriteTimer1:
  5938                           	opt stack 18
  5939                           
  5940                           ;incstack = 0
  5941  001898  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5942  00189C  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5943  0018A0  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5944  0018A4  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5945  0018A8  0012               	return	
  5946  0018AA                     __end_of_WriteTimer1:
  5947                           	opt stack 0
  5948                           pclatu	equ	0xFFB
  5949                           pclath	equ	0xFFA
  5950                           tblptru	equ	0xFF8
  5951                           tblptrh	equ	0xFF7
  5952                           tblptrl	equ	0xFF6
  5953                           tablat	equ	0xFF5
  5954                           prodh	equ	0xFF4
  5955                           prodl	equ	0xFF3
  5956                           intcon	equ	0xFF2
  5957                           postinc0	equ	0xFEE
  5958                           fsr0h	equ	0xFEA
  5959                           fsr0l	equ	0xFE9
  5960                           wreg	equ	0xFE8
  5961                           indf1	equ	0xFE7
  5962                           postdec1	equ	0xFE5
  5963                           fsr1h	equ	0xFE2
  5964                           fsr1l	equ	0xFE1
  5965                           bsr	equ	0xFE0
  5966                           indf2	equ	0xFDF
  5967                           postinc2	equ	0xFDE
  5968                           postdec2	equ	0xFDD
  5969                           fsr2h	equ	0xFDA
  5970                           fsr2l	equ	0xFD9
  5971                           status	equ	0xFD8
  5972                           
  5973 ;; *************** function _adc_int_handler *****************
  5974 ;; Defined at:
  5975 ;;		line 61 in file "../src/user_interrupts.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;		None
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;		None
  5980 ;; Return value:  Size  Location     Type
  5981 ;;		None               void
  5982 ;; Registers used:
  5983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5984 ;; Tracked objects:
  5985 ;;		On entry : 0/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5989 ;;      Params:         0       0       0       0       0
  5990 ;;      Locals:         0       0       0       0       0
  5991 ;;      Temps:          0       0       0       0       0
  5992 ;;      Totals:         0       0       0       0       0
  5993 ;;Total ram usage:        0 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; Hardware stack levels required when called:    6
  5996 ;; This function calls:
  5997 ;;		Nothing
  5998 ;; This function is called by:
  5999 ;;		_InterruptHandlerLow
  6000 ;; This function uses a non-reentrant model
  6001 ;;
  6002                           
  6003                           	psect	text39
  6004  001796                     __ptext39:
  6005                           	opt stack 0
  6006  001796                     _adc_int_handler:
  6007                           	opt stack 19
  6008                           
  6009                           ;user_interrupts.c: 63: if(adcbuffer[0] < 27)
  6010                           
  6011                           ;incstack = 0
  6012  001796  0E1B               	movlw	27
  6013  001798  5C2D               	subwf	_adcbuffer,w,c
  6014  00179A  B0D8               	btfsc	status,0,c
  6015  00179C  D002               	goto	i1l1269
  6016                           
  6017                           ;user_interrupts.c: 64: adcbuffer[0] = adcbuffer[0] + 1;
  6018  00179E  282D               	incf	_adcbuffer,w,c
  6019  0017A0  6E2D               	movwf	_adcbuffer,c
  6020  0017A2                     i1l1269:
  6021                           
  6022                           ;user_interrupts.c: 71: adcbuffer[adcbuffer[0]] = ADRESH;
  6023  0017A2  502D               	movf	_adcbuffer,w,c
  6024  0017A4  0D01               	mullw	1
  6025  0017A6  0E2D               	movlw	low _adcbuffer
  6026  0017A8  24F3               	addwf	prodl,w,c
  6027  0017AA  6ED9               	movwf	fsr2l,c
  6028  0017AC  0E00               	movlw	high _adcbuffer
  6029  0017AE  20F4               	addwfc	prodh,w,c
  6030  0017B0  6EDA               	movwf	fsr2h,c
  6031  0017B2  CFC4 FFDF          	movff	4036,indf2	;volatile
  6032  0017B6  0012               	return	
  6033  0017B8                     __end_of_adc_int_handler:
  6034                           	opt stack 0
  6035                           pclatu	equ	0xFFB
  6036                           pclath	equ	0xFFA
  6037                           tblptru	equ	0xFF8
  6038                           tblptrh	equ	0xFF7
  6039                           tblptrl	equ	0xFF6
  6040                           tablat	equ	0xFF5
  6041                           prodh	equ	0xFF4
  6042                           prodl	equ	0xFF3
  6043                           intcon	equ	0xFF2
  6044                           postinc0	equ	0xFEE
  6045                           fsr0h	equ	0xFEA
  6046                           fsr0l	equ	0xFE9
  6047                           wreg	equ	0xFE8
  6048                           indf1	equ	0xFE7
  6049                           postdec1	equ	0xFE5
  6050                           fsr1h	equ	0xFE2
  6051                           fsr1l	equ	0xFE1
  6052                           bsr	equ	0xFE0
  6053                           indf2	equ	0xFDF
  6054                           postinc2	equ	0xFDE
  6055                           postdec2	equ	0xFDD
  6056                           fsr2h	equ	0xFDA
  6057                           fsr2l	equ	0xFD9
  6058                           status	equ	0xFD8
  6059                           
  6060 ;; *************** function _InterruptHandlerHigh *****************
  6061 ;; Defined at:
  6062 ;;		line 84 in file "../src/interrupts.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;		None
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;		None
  6067 ;; Return value:  Size  Location     Type
  6068 ;;		None               void
  6069 ;; Registers used:
  6070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6076 ;;      Params:         0       0       0       0       0
  6077 ;;      Locals:         0       0       0       0       0
  6078 ;;      Temps:          0      14       0       0       0
  6079 ;;      Totals:         0      14       0       0       0
  6080 ;;Total ram usage:       14 bytes
  6081 ;; Hardware stack levels used:    1
  6082 ;; Hardware stack levels required when called:    5
  6083 ;; This function calls:
  6084 ;;		_SleepIfOkay
  6085 ;;		_i2c_int_handler
  6086 ;;		_timer0_int_handler
  6087 ;; This function is called by:
  6088 ;;		Interrupt level 2
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           	psect	intcode
  6093  000008                     __pintcode:
  6094                           	opt stack 0
  6095  000008                     _InterruptHandlerHigh:
  6096                           	opt stack 16
  6097                           
  6098                           ;incstack = 0
  6099  000008  CFFA F09F          	movff	pclath,??_InterruptHandlerHigh
  6100  00000C  CFFB F0A0          	movff	pclatu,??_InterruptHandlerHigh+1
  6101  000010  EFBD  F007         	goto	int_func
  6102                           pclatu	equ	0xFFB
  6103                           pclath	equ	0xFFA
  6104                           tblptru	equ	0xFF8
  6105                           tblptrh	equ	0xFF7
  6106                           tblptrl	equ	0xFF6
  6107                           tablat	equ	0xFF5
  6108                           prodh	equ	0xFF4
  6109                           prodl	equ	0xFF3
  6110                           intcon	equ	0xFF2
  6111                           postinc0	equ	0xFEE
  6112                           fsr0h	equ	0xFEA
  6113                           fsr0l	equ	0xFE9
  6114                           wreg	equ	0xFE8
  6115                           indf1	equ	0xFE7
  6116                           postdec1	equ	0xFE5
  6117                           fsr1h	equ	0xFE2
  6118                           fsr1l	equ	0xFE1
  6119                           bsr	equ	0xFE0
  6120                           indf2	equ	0xFDF
  6121                           postinc2	equ	0xFDE
  6122                           postdec2	equ	0xFDD
  6123                           fsr2h	equ	0xFDA
  6124                           fsr2l	equ	0xFD9
  6125                           status	equ	0xFD8
  6126                           
  6127                           	psect	intcode_body
  6128  000F7A                     __pintcode_body:
  6129                           	opt stack 16
  6130  000F7A                     int_func:
  6131                           	opt stack 16
  6132  000F7A  CFE9 F0A1          	movff	fsr0l,??_InterruptHandlerHigh+2
  6133  000F7E  CFEA F0A2          	movff	fsr0h,??_InterruptHandlerHigh+3
  6134  000F82  CFE1 F0A3          	movff	fsr1l,??_InterruptHandlerHigh+4
  6135  000F86  CFE2 F0A4          	movff	fsr1h,??_InterruptHandlerHigh+5
  6136  000F8A  CFD9 F0A5          	movff	fsr2l,??_InterruptHandlerHigh+6
  6137  000F8E  CFDA F0A6          	movff	fsr2h,??_InterruptHandlerHigh+7
  6138  000F92  CFF3 F0A7          	movff	prodl,??_InterruptHandlerHigh+8
  6139  000F96  CFF4 F0A8          	movff	prodh,??_InterruptHandlerHigh+9
  6140  000F9A  CFF6 F0A9          	movff	tblptrl,??_InterruptHandlerHigh+10
  6141  000F9E  CFF7 F0AA          	movff	tblptrh,??_InterruptHandlerHigh+11
  6142  000FA2  CFF8 F0AB          	movff	tblptru,??_InterruptHandlerHigh+12
  6143  000FA6  CFF5 F0AC          	movff	tablat,??_InterruptHandlerHigh+13
  6144                           
  6145                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  6146  000FAA  A69E               	btfss	3998,3,c	;volatile
  6147  000FAC  D003               	goto	i2l3133
  6148                           
  6149                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  6150  000FAE  969E               	bcf	3998,3,c	;volatile
  6151                           
  6152                           ;interrupts.c: 94: i2c_int_handler();
  6153  000FB0  EC77  F00C         	call	_i2c_int_handler	;wreg free
  6154  000FB4                     i2l3133:
  6155                           
  6156                           ;interrupts.c: 96: }
  6157                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  6158  000FB4  A4F2               	btfss	intcon,2,c	;volatile
  6159  000FB6  D003               	goto	i2l3139
  6160                           
  6161                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  6162  000FB8  94F2               	bcf	intcon,2,c	;volatile
  6163                           
  6164                           ;interrupts.c: 103: timer0_int_handler();
  6165  000FBA  EC1A  F00C         	call	_timer0_int_handler	;wreg free
  6166  000FBE                     i2l3139:
  6167                           
  6168                           ;interrupts.c: 104: }
  6169                           ;interrupts.c: 113: SleepIfOkay();
  6170  000FBE  EC58  F009         	call	_SleepIfOkay	;wreg free
  6171  000FC2  C0AC  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6172  000FC6  C0AB  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6173  000FCA  C0AA  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6174  000FCE  C0A9  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6175  000FD2  C0A8  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6176  000FD6  C0A7  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6177  000FDA  C0A6  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6178  000FDE  C0A5  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6179  000FE2  C0A4  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6180  000FE6  C0A3  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6181  000FEA  C0A2  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6182  000FEE  C0A1  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6183  000FF2  C0A0  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6184  000FF6  C09F  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6185  000FFA  0011               	retfie		f
  6186  000FFC                     __end_of_InterruptHandlerHigh:
  6187                           	opt stack 0
  6188                           pclatu	equ	0xFFB
  6189                           pclath	equ	0xFFA
  6190                           tblptru	equ	0xFF8
  6191                           tblptrh	equ	0xFF7
  6192                           tblptrl	equ	0xFF6
  6193                           tablat	equ	0xFF5
  6194                           prodh	equ	0xFF4
  6195                           prodl	equ	0xFF3
  6196                           intcon	equ	0xFF2
  6197                           postinc0	equ	0xFEE
  6198                           fsr0h	equ	0xFEA
  6199                           fsr0l	equ	0xFE9
  6200                           wreg	equ	0xFE8
  6201                           indf1	equ	0xFE7
  6202                           postdec1	equ	0xFE5
  6203                           fsr1h	equ	0xFE2
  6204                           fsr1l	equ	0xFE1
  6205                           bsr	equ	0xFE0
  6206                           indf2	equ	0xFDF
  6207                           postinc2	equ	0xFDE
  6208                           postdec2	equ	0xFDD
  6209                           fsr2h	equ	0xFDA
  6210                           fsr2l	equ	0xFD9
  6211                           status	equ	0xFD8
  6212                           
  6213 ;; *************** function _timer0_int_handler *****************
  6214 ;; Defined at:
  6215 ;;		line 16 in file "../src/user_interrupts.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;		None
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;		None
  6220 ;; Return value:  Size  Location     Type
  6221 ;;		None               void
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, cstack
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6229 ;;      Params:         0       0       0       0       0
  6230 ;;      Locals:         0       0       0       0       0
  6231 ;;      Temps:          0       0       0       0       0
  6232 ;;      Totals:         0       0       0       0       0
  6233 ;;Total ram usage:        0 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; Hardware stack levels required when called:    1
  6236 ;; This function calls:
  6237 ;;		_ConvertADC
  6238 ;;		_WriteTimer0
  6239 ;; This function is called by:
  6240 ;;		_InterruptHandlerHigh
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text41
  6245  001834                     __ptext41:
  6246                           	opt stack 0
  6247  001834                     _timer0_int_handler:
  6248                           	opt stack 19
  6249                           
  6250                           ;user_interrupts.c: 17: WriteTimer0(0);
  6251                           
  6252                           ;incstack = 0
  6253  001834  0E00               	movlw	0
  6254  001836  0100               	movlb	0	; () banked
  6255  001838  0100               	movlb	0	; () banked
  6256  00183A  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6257  00183C  0E00               	movlw	0
  6258  00183E  0100               	movlb	0	; () banked
  6259  001840  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  6260  001842  EC55  F00C         	call	_WriteTimer0	;wreg free
  6261                           
  6262                           ;user_interrupts.c: 34: ConvertADC();
  6263  001846  EC7D  F00C         	call	_ConvertADC	;wreg free
  6264  00184A  0012               	return	
  6265  00184C                     __end_of_timer0_int_handler:
  6266                           	opt stack 0
  6267                           pclatu	equ	0xFFB
  6268                           pclath	equ	0xFFA
  6269                           tblptru	equ	0xFF8
  6270                           tblptrh	equ	0xFF7
  6271                           tblptrl	equ	0xFF6
  6272                           tablat	equ	0xFF5
  6273                           prodh	equ	0xFF4
  6274                           prodl	equ	0xFF3
  6275                           intcon	equ	0xFF2
  6276                           postinc0	equ	0xFEE
  6277                           fsr0h	equ	0xFEA
  6278                           fsr0l	equ	0xFE9
  6279                           wreg	equ	0xFE8
  6280                           indf1	equ	0xFE7
  6281                           postdec1	equ	0xFE5
  6282                           fsr1h	equ	0xFE2
  6283                           fsr1l	equ	0xFE1
  6284                           bsr	equ	0xFE0
  6285                           indf2	equ	0xFDF
  6286                           postinc2	equ	0xFDE
  6287                           postdec2	equ	0xFDD
  6288                           fsr2h	equ	0xFDA
  6289                           fsr2l	equ	0xFD9
  6290                           status	equ	0xFD8
  6291                           
  6292 ;; *************** function _WriteTimer0 *****************
  6293 ;; Defined at:
  6294 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  timer0          2    0[BANK0 ] unsigned int 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  timer           2    2[BANK0 ] struct Timers
  6299 ;; Return value:  Size  Location     Type
  6300 ;;		None               void
  6301 ;; Registers used:
  6302 ;;		None
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6308 ;;      Params:         0       2       0       0       0
  6309 ;;      Locals:         0       2       0       0       0
  6310 ;;      Temps:          0       0       0       0       0
  6311 ;;      Totals:         0       4       0       0       0
  6312 ;;Total ram usage:        4 bytes
  6313 ;; Hardware stack levels used:    1
  6314 ;; This function calls:
  6315 ;;		Nothing
  6316 ;; This function is called by:
  6317 ;;		_timer0_int_handler
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           	psect	text42
  6322  0018AA                     __ptext42:
  6323                           	opt stack 0
  6324  0018AA                     _WriteTimer0:
  6325                           	opt stack 19
  6326                           
  6327                           ;incstack = 0
  6328  0018AA  C080  F082         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6329  0018AE  C081  F083         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6330  0018B2  C083  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6331  0018B6  C082  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6332  0018BA  0012               	return	
  6333  0018BC                     __end_of_WriteTimer0:
  6334                           	opt stack 0
  6335                           pclatu	equ	0xFFB
  6336                           pclath	equ	0xFFA
  6337                           tblptru	equ	0xFF8
  6338                           tblptrh	equ	0xFF7
  6339                           tblptrl	equ	0xFF6
  6340                           tablat	equ	0xFF5
  6341                           prodh	equ	0xFF4
  6342                           prodl	equ	0xFF3
  6343                           intcon	equ	0xFF2
  6344                           postinc0	equ	0xFEE
  6345                           fsr0h	equ	0xFEA
  6346                           fsr0l	equ	0xFE9
  6347                           wreg	equ	0xFE8
  6348                           indf1	equ	0xFE7
  6349                           postdec1	equ	0xFE5
  6350                           fsr1h	equ	0xFE2
  6351                           fsr1l	equ	0xFE1
  6352                           bsr	equ	0xFE0
  6353                           indf2	equ	0xFDF
  6354                           postinc2	equ	0xFDE
  6355                           postdec2	equ	0xFDD
  6356                           fsr2h	equ	0xFDA
  6357                           fsr2l	equ	0xFD9
  6358                           status	equ	0xFD8
  6359                           
  6360 ;; *************** function _ConvertADC *****************
  6361 ;; Defined at:
  6362 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;		None
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;		None
  6367 ;; Return value:  Size  Location     Type
  6368 ;;		None               void
  6369 ;; Registers used:
  6370 ;;		None
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6376 ;;      Params:         0       0       0       0       0
  6377 ;;      Locals:         0       0       0       0       0
  6378 ;;      Temps:          0       0       0       0       0
  6379 ;;      Totals:         0       0       0       0       0
  6380 ;;Total ram usage:        0 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; This function calls:
  6383 ;;		Nothing
  6384 ;; This function is called by:
  6385 ;;		_timer0_int_handler
  6386 ;; This function uses a non-reentrant model
  6387 ;;
  6388                           
  6389                           	psect	text43
  6390  0018FA                     __ptext43:
  6391                           	opt stack 0
  6392  0018FA                     _ConvertADC:
  6393                           	opt stack 19
  6394                           
  6395                           ;incstack = 0
  6396  0018FA  82C2               	bsf	4034,1,c	;volatile
  6397  0018FC  0012               	return	
  6398  0018FE                     __end_of_ConvertADC:
  6399                           	opt stack 0
  6400                           pclatu	equ	0xFFB
  6401                           pclath	equ	0xFFA
  6402                           tblptru	equ	0xFF8
  6403                           tblptrh	equ	0xFF7
  6404                           tblptrl	equ	0xFF6
  6405                           tablat	equ	0xFF5
  6406                           prodh	equ	0xFF4
  6407                           prodl	equ	0xFF3
  6408                           intcon	equ	0xFF2
  6409                           postinc0	equ	0xFEE
  6410                           fsr0h	equ	0xFEA
  6411                           fsr0l	equ	0xFE9
  6412                           wreg	equ	0xFE8
  6413                           indf1	equ	0xFE7
  6414                           postdec1	equ	0xFE5
  6415                           fsr1h	equ	0xFE2
  6416                           fsr1l	equ	0xFE1
  6417                           bsr	equ	0xFE0
  6418                           indf2	equ	0xFDF
  6419                           postinc2	equ	0xFDE
  6420                           postdec2	equ	0xFDD
  6421                           fsr2h	equ	0xFDA
  6422                           fsr2l	equ	0xFD9
  6423                           status	equ	0xFD8
  6424                           
  6425 ;; *************** function _i2c_int_handler *****************
  6426 ;; Defined at:
  6427 ;;		line 139 in file "../src/my_i2c.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;		None
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;		None
  6432 ;; Return value:  Size  Location     Type
  6433 ;;		None               void
  6434 ;; Registers used:
  6435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6441 ;;      Params:         0       0       0       0       0
  6442 ;;      Locals:         0       0       0       0       0
  6443 ;;      Temps:          0       0       0       0       0
  6444 ;;      Totals:         0       0       0       0       0
  6445 ;;Total ram usage:        0 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    4
  6448 ;; This function calls:
  6449 ;;		_i2c_master_int_handler
  6450 ;; This function is called by:
  6451 ;;		_InterruptHandlerHigh
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           	psect	text44
  6456  0018EE                     __ptext44:
  6457                           	opt stack 0
  6458  0018EE                     _i2c_int_handler:
  6459                           	opt stack 16
  6460                           
  6461                           ;my_i2c.c: 141: i2c_master_int_handler();
  6462                           
  6463                           ;incstack = 0
  6464  0018EE  EC65  F000         	call	_i2c_master_int_handler	;wreg free
  6465  0018F2  0012               	return	
  6466  0018F4                     __end_of_i2c_int_handler:
  6467                           	opt stack 0
  6468                           pclatu	equ	0xFFB
  6469                           pclath	equ	0xFFA
  6470                           tblptru	equ	0xFF8
  6471                           tblptrh	equ	0xFF7
  6472                           tblptrl	equ	0xFF6
  6473                           tablat	equ	0xFF5
  6474                           prodh	equ	0xFF4
  6475                           prodl	equ	0xFF3
  6476                           intcon	equ	0xFF2
  6477                           postinc0	equ	0xFEE
  6478                           fsr0h	equ	0xFEA
  6479                           fsr0l	equ	0xFE9
  6480                           wreg	equ	0xFE8
  6481                           indf1	equ	0xFE7
  6482                           postdec1	equ	0xFE5
  6483                           fsr1h	equ	0xFE2
  6484                           fsr1l	equ	0xFE1
  6485                           bsr	equ	0xFE0
  6486                           indf2	equ	0xFDF
  6487                           postinc2	equ	0xFDE
  6488                           postdec2	equ	0xFDD
  6489                           fsr2h	equ	0xFDA
  6490                           fsr2l	equ	0xFD9
  6491                           status	equ	0xFD8
  6492                           
  6493 ;; *************** function _i2c_master_int_handler *****************
  6494 ;; Defined at:
  6495 ;;		line 147 in file "../src/my_i2c.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;		None
  6498 ;; Auto vars:     Size  Location     Type
  6499 ;;		None
  6500 ;; Return value:  Size  Location     Type
  6501 ;;		None               void
  6502 ;; Registers used:
  6503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6509 ;;      Params:         0       0       0       0       0
  6510 ;;      Locals:         0       0       0       0       0
  6511 ;;      Temps:          0       5       0       0       0
  6512 ;;      Totals:         0       5       0       0       0
  6513 ;;Total ram usage:        5 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; Hardware stack levels required when called:    3
  6516 ;; This function calls:
  6517 ;;		_ToMainHigh_sendmsg
  6518 ;;		_i2c_master_recv
  6519 ;; This function is called by:
  6520 ;;		_i2c_int_handler
  6521 ;; This function uses a non-reentrant model
  6522 ;;
  6523                           
  6524                           	psect	text45
  6525  0000CA                     __ptext45:
  6526                           	opt stack 0
  6527  0000CA                     _i2c_master_int_handler:
  6528                           	opt stack 16
  6529                           
  6530                           ;my_i2c.c: 150: if(!(ic_ptr->status == 0x5)) {
  6531                           
  6532                           ;incstack = 0
  6533  0000CA  0100               	movlb	0	; () banked
  6534  0000CC  EE20 F01F          	lfsr	2,31
  6535  0000D0  0100               	movlb	0	; () banked
  6536  0000D2  51D1               	movf	_ic_ptr& (0+255),w,b
  6537  0000D4  26D9               	addwf	fsr2l,f,c
  6538  0000D6  0100               	movlb	0	; () banked
  6539  0000D8  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6540  0000DA  22DA               	addwfc	fsr2h,f,c
  6541  0000DC  50DF               	movf	indf2,w,c
  6542  0000DE  0A05               	xorlw	5
  6543  0000E0  B4D8               	btfsc	status,2,c
  6544  0000E2  0012               	return	
  6545  0000E4  D1A8               	goto	i2l3337
  6546  0000E6                     i2l3283:
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;my_i2c.c: 154: {
  6550                           ;my_i2c.c: 155: if(ic_ptr->slave_addr % 2){
  6551  0000E6  0100               	movlb	0	; () banked
  6552  0000E8  EE20 F040          	lfsr	2,64
  6553  0000EC  0100               	movlb	0	; () banked
  6554  0000EE  51D1               	movf	_ic_ptr& (0+255),w,b
  6555  0000F0  26D9               	addwf	fsr2l,f,c
  6556  0000F2  0100               	movlb	0	; () banked
  6557  0000F4  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6558  0000F6  22DA               	addwfc	fsr2h,f,c
  6559  0000F8  50DF               	movf	indf2,w,c
  6560  0000FA  0100               	movlb	0	; () banked
  6561  0000FC  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  6562  0000FE  0100               	movlb	0	; () banked
  6563  000100  A19A               	btfss	??_i2c_master_int_handler& (0+255),0,b
  6564  000102  D00B               	goto	i2l3287
  6565                           
  6566                           ; BSR set to: 0
  6567                           ;my_i2c.c: 157: ic_ptr->status = 0x7;
  6568  000104  0100               	movlb	0	; () banked
  6569  000106  EE20 F01F          	lfsr	2,31
  6570  00010A  0100               	movlb	0	; () banked
  6571  00010C  51D1               	movf	_ic_ptr& (0+255),w,b
  6572  00010E  26D9               	addwf	fsr2l,f,c
  6573  000110  0100               	movlb	0	; () banked
  6574  000112  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6575  000114  22DA               	addwfc	fsr2h,f,c
  6576  000116  0E07               	movlw	7
  6577  000118  D00A               	goto	L1
  6578  00011A                     i2l3287:
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;my_i2c.c: 160: ic_ptr->status = 0x9;
  6582  00011A  0100               	movlb	0	; () banked
  6583  00011C  EE20 F01F          	lfsr	2,31
  6584  000120  0100               	movlb	0	; () banked
  6585  000122  51D1               	movf	_ic_ptr& (0+255),w,b
  6586  000124  26D9               	addwf	fsr2l,f,c
  6587  000126  0100               	movlb	0	; () banked
  6588  000128  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6589  00012A  22DA               	addwfc	fsr2h,f,c
  6590  00012C  0E09               	movlw	9
  6591  00012E                     L1:
  6592  00012E  6EDF               	movwf	indf2,c
  6593                           
  6594                           ; BSR set to: 0
  6595                           ;my_i2c.c: 161: }
  6596                           ;my_i2c.c: 162: ic_ptr->bufind = 0;
  6597  000130  0100               	movlb	0	; () banked
  6598  000132  EE20 F01D          	lfsr	2,29
  6599  000136  0100               	movlb	0	; () banked
  6600  000138  51D1               	movf	_ic_ptr& (0+255),w,b
  6601  00013A  26D9               	addwf	fsr2l,f,c
  6602  00013C  0100               	movlb	0	; () banked
  6603  00013E  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6604  000140  22DA               	addwfc	fsr2h,f,c
  6605  000142  0E00               	movlw	0
  6606  000144  6EDF               	movwf	indf2,c
  6607                           
  6608                           ;my_i2c.c: 163: SSPBUF = ic_ptr->slave_addr;
  6609  000146  0100               	movlb	0	; () banked
  6610  000148  EE20 F040          	lfsr	2,64
  6611  00014C  0100               	movlb	0	; () banked
  6612  00014E  51D1               	movf	_ic_ptr& (0+255),w,b
  6613  000150  26D9               	addwf	fsr2l,f,c
  6614  000152  0100               	movlb	0	; () banked
  6615  000154  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6616  000156  22DA               	addwfc	fsr2h,f,c
  6617  000158  50DF               	movf	indf2,w,c
  6618  00015A  6EC9               	movwf	4041,c	;volatile
  6619                           
  6620                           ;my_i2c.c: 165: break;
  6621  00015C  0012               	return	
  6622  00015E                     i2l302:
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;my_i2c.c: 168: {
  6626                           ;my_i2c.c: 169: if(!SSPCON2bits.ACKSTAT){
  6627  00015E  BCC5               	btfsc	4037,6,c	;volatile
  6628  000160  D070               	goto	i2l303
  6629                           
  6630                           ; BSR set to: 0
  6631                           ;my_i2c.c: 170: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6632  000162  0100               	movlb	0	; () banked
  6633  000164  EE20 F03F          	lfsr	2,63
  6634  000168  0100               	movlb	0	; () banked
  6635  00016A  51D1               	movf	_ic_ptr& (0+255),w,b
  6636  00016C  26D9               	addwf	fsr2l,f,c
  6637  00016E  0100               	movlb	0	; () banked
  6638  000170  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6639  000172  22DA               	addwfc	fsr2h,f,c
  6640  000174  50DF               	movf	indf2,w,c
  6641  000176  0100               	movlb	0	; () banked
  6642  000178  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  6643  00017A  0100               	movlb	0	; () banked
  6644  00017C  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  6645  00017E  0D01               	mullw	1
  6646  000180  0E22               	movlw	34
  6647  000182  26F3               	addwf	prodl,f,c
  6648  000184  0E00               	movlw	0
  6649  000186  22F4               	addwfc	prodh,f,c
  6650  000188  50F3               	movf	prodl,w,c
  6651  00018A  0100               	movlb	0	; () banked
  6652  00018C  0100               	movlb	0	; () banked
  6653  00018E  25D1               	addwf	_ic_ptr& (0+255),w,b
  6654  000190  6ED9               	movwf	fsr2l,c
  6655  000192  50F4               	movf	prodh,w,c
  6656  000194  0100               	movlb	0	; () banked
  6657  000196  0100               	movlb	0	; () banked
  6658  000198  21D2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6659  00019A  6EDA               	movwf	fsr2h,c
  6660  00019C  50DF               	movf	indf2,w,c
  6661  00019E  6EC9               	movwf	4041,c	;volatile
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;my_i2c.c: 172: if(ic_ptr->outbuflen > ic_ptr->outbufind+1){
  6665  0001A0  0100               	movlb	0	; () banked
  6666  0001A2  EE20 F03E          	lfsr	2,62
  6667  0001A6  0100               	movlb	0	; () banked
  6668  0001A8  51D1               	movf	_ic_ptr& (0+255),w,b
  6669  0001AA  26D9               	addwf	fsr2l,f,c
  6670  0001AC  0100               	movlb	0	; () banked
  6671  0001AE  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6672  0001B0  22DA               	addwfc	fsr2h,f,c
  6673  0001B2  50DF               	movf	indf2,w,c
  6674  0001B4  0100               	movlb	0	; () banked
  6675  0001B6  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  6676  0001B8  6B9B               	clrf	(??_i2c_master_int_handler+1)& (0+255),b
  6677  0001BA  0100               	movlb	0	; () banked
  6678  0001BC  EE20 F03F          	lfsr	2,63
  6679  0001C0  0100               	movlb	0	; () banked
  6680  0001C2  51D1               	movf	_ic_ptr& (0+255),w,b
  6681  0001C4  26D9               	addwf	fsr2l,f,c
  6682  0001C6  0100               	movlb	0	; () banked
  6683  0001C8  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6684  0001CA  22DA               	addwfc	fsr2h,f,c
  6685  0001CC  50DF               	movf	indf2,w,c
  6686  0001CE  0100               	movlb	0	; () banked
  6687  0001D0  6F9C               	movwf	(??_i2c_master_int_handler+2)& (0+255),b
  6688  0001D2  6B9D               	clrf	(??_i2c_master_int_handler+3)& (0+255),b
  6689  0001D4  0E01               	movlw	1
  6690  0001D6  0100               	movlb	0	; () banked
  6691  0001D8  279C               	addwf	(??_i2c_master_int_handler+2)& (0+255),f,b
  6692  0001DA  0E00               	movlw	0
  6693  0001DC  239D               	addwfc	(??_i2c_master_int_handler+3)& (0+255),f,b
  6694  0001DE  0100               	movlb	0	; () banked
  6695  0001E0  519D               	movf	(??_i2c_master_int_handler+3)& (0+255),w,b
  6696  0001E2  0A80               	xorlw	128
  6697  0001E4  0100               	movlb	0	; () banked
  6698  0001E6  6F9E               	movwf	(??_i2c_master_int_handler+4)& (0+255),b
  6699  0001E8  0100               	movlb	0	; () banked
  6700  0001EA  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  6701  0001EC  0100               	movlb	0	; () banked
  6702  0001EE  5D9C               	subwf	(??_i2c_master_int_handler+2)& (0+255),w,b
  6703  0001F0  0100               	movlb	0	; () banked
  6704  0001F2  519B               	movf	(??_i2c_master_int_handler+1)& (0+255),w,b
  6705  0001F4  0A80               	xorlw	128
  6706  0001F6  0100               	movlb	0	; () banked
  6707  0001F8  599E               	subwfb	(??_i2c_master_int_handler+4)& (0+255),w,b
  6708  0001FA  B0D8               	btfsc	status,0,c
  6709  0001FC  D016               	goto	i2l3295
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;my_i2c.c: 173: ic_ptr->outbufind++;
  6713  0001FE  0100               	movlb	0	; () banked
  6714  000200  EE20 F03F          	lfsr	2,63
  6715  000204  0100               	movlb	0	; () banked
  6716  000206  51D1               	movf	_ic_ptr& (0+255),w,b
  6717  000208  26D9               	addwf	fsr2l,f,c
  6718  00020A  0100               	movlb	0	; () banked
  6719  00020C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6720  00020E  22DA               	addwfc	fsr2h,f,c
  6721  000210  2ADF               	incf	indf2,f,c
  6722                           
  6723                           ;my_i2c.c: 174: ic_ptr->status = 0x9;
  6724  000212  0100               	movlb	0	; () banked
  6725  000214  EE20 F01F          	lfsr	2,31
  6726  000218  0100               	movlb	0	; () banked
  6727  00021A  51D1               	movf	_ic_ptr& (0+255),w,b
  6728  00021C  26D9               	addwf	fsr2l,f,c
  6729  00021E  0100               	movlb	0	; () banked
  6730  000220  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6731  000222  22DA               	addwfc	fsr2h,f,c
  6732  000224  0E09               	movlw	9
  6733  000226  6EDF               	movwf	indf2,c
  6734                           
  6735                           ;my_i2c.c: 175: }else{
  6736  000228  0012               	return	
  6737  00022A                     i2l3295:
  6738                           
  6739                           ; BSR set to: 0
  6740                           ;my_i2c.c: 177: ic_ptr->status = 0xD;
  6741  00022A  0100               	movlb	0	; () banked
  6742  00022C  EE20 F01F          	lfsr	2,31
  6743  000230  0100               	movlb	0	; () banked
  6744  000232  51D1               	movf	_ic_ptr& (0+255),w,b
  6745  000234  26D9               	addwf	fsr2l,f,c
  6746  000236  0100               	movlb	0	; () banked
  6747  000238  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6748  00023A  22DA               	addwfc	fsr2h,f,c
  6749  00023C  0E0D               	movlw	13
  6750  00023E  6EDF               	movwf	indf2,c
  6751  000240  0012               	return	
  6752  000242                     i2l303:
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;my_i2c.c: 181: SSPCON2bits.RSEN = 1;
  6756  000242  82C5               	bsf	4037,1,c	;volatile
  6757                           
  6758                           ; BSR set to: 0
  6759                           ;my_i2c.c: 182: ic_ptr->status = 0xA;
  6760  000244  0100               	movlb	0	; () banked
  6761  000246  EE20 F01F          	lfsr	2,31
  6762  00024A  0100               	movlb	0	; () banked
  6763  00024C  51D1               	movf	_ic_ptr& (0+255),w,b
  6764  00024E  26D9               	addwf	fsr2l,f,c
  6765  000250  0100               	movlb	0	; () banked
  6766  000252  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6767  000254  22DA               	addwfc	fsr2h,f,c
  6768  000256  0E0A               	movlw	10
  6769  000258  6EDF               	movwf	indf2,c
  6770  00025A  0012               	return	
  6771  00025C                     i2l307:
  6772                           
  6773                           ; BSR set to: 0
  6774                           ;my_i2c.c: 187: {
  6775                           ;my_i2c.c: 188: if(!SSPCON2bits.ACKSTAT){
  6776  00025C  BCC5               	btfsc	4037,6,c	;volatile
  6777  00025E  D00D               	goto	i2l308
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;my_i2c.c: 189: SSPCON2bits.RCEN = 1;
  6781  000260  86C5               	bsf	4037,3,c	;volatile
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;my_i2c.c: 190: ic_ptr->status = 0xC;
  6785  000262  0100               	movlb	0	; () banked
  6786  000264  EE20 F01F          	lfsr	2,31
  6787  000268  0100               	movlb	0	; () banked
  6788  00026A  51D1               	movf	_ic_ptr& (0+255),w,b
  6789  00026C  26D9               	addwf	fsr2l,f,c
  6790  00026E  0100               	movlb	0	; () banked
  6791  000270  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6792  000272  22DA               	addwfc	fsr2h,f,c
  6793  000274  0E0C               	movlw	12
  6794  000276  6EDF               	movwf	indf2,c
  6795                           
  6796                           ;my_i2c.c: 191: } else {
  6797  000278  0012               	return	
  6798  00027A                     i2l308:
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;my_i2c.c: 193: LATBbits.LATB2 = 1;
  6802  00027A  848A               	bsf	3978,2,c	;volatile
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;my_i2c.c: 194: ToMainHigh_sendmsg(0, 46, ic_ptr->buffer);
  6806  00027C  0100               	movlb	0	; () banked
  6807  00027E  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  6808  000280  0E2E               	movlw	46
  6809  000282  0100               	movlb	0	; () banked
  6810  000284  0100               	movlb	0	; () banked
  6811  000286  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6812  000288  0100               	movlb	0	; () banked
  6813  00028A  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  6814  00028C  0100               	movlb	0	; () banked
  6815  00028E  0100               	movlb	0	; () banked
  6816  000290  C0D2  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6817  000294  0100               	movlb	0	; () banked
  6818  000296  0100               	movlb	0	; () banked
  6819  000298  C0D1  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6820  00029C  0E00               	movlw	0
  6821  00029E  EC6D  F00B         	call	_ToMainHigh_sendmsg
  6822                           
  6823                           ;my_i2c.c: 195: ic_ptr->buflen = 0;
  6824  0002A2  0100               	movlb	0	; () banked
  6825  0002A4  EE20 F01C          	lfsr	2,28
  6826  0002A8  0100               	movlb	0	; () banked
  6827  0002AA  51D1               	movf	_ic_ptr& (0+255),w,b
  6828  0002AC  26D9               	addwf	fsr2l,f,c
  6829  0002AE  0100               	movlb	0	; () banked
  6830  0002B0  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6831  0002B2  22DA               	addwfc	fsr2h,f,c
  6832  0002B4  0E00               	movlw	0
  6833  0002B6  6EDF               	movwf	indf2,c
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;my_i2c.c: 196: ic_ptr->status = 0x5;
  6837  0002B8  0100               	movlb	0	; () banked
  6838  0002BA  EE20 F01F          	lfsr	2,31
  6839  0002BE  0100               	movlb	0	; () banked
  6840  0002C0  51D1               	movf	_ic_ptr& (0+255),w,b
  6841  0002C2  26D9               	addwf	fsr2l,f,c
  6842  0002C4  0100               	movlb	0	; () banked
  6843  0002C6  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6844  0002C8  22DA               	addwfc	fsr2h,f,c
  6845  0002CA  0E05               	movlw	5
  6846  0002CC  6EDF               	movwf	indf2,c
  6847  0002CE  0012               	return	
  6848  0002D0                     i2l310:
  6849                           
  6850                           ; BSR set to: 0
  6851                           ;my_i2c.c: 201: {
  6852                           ;my_i2c.c: 202: LATBbits.LATB1 = 1;
  6853  0002D0  828A               	bsf	3978,1,c	;volatile
  6854                           
  6855                           ;my_i2c.c: 203: LATBbits.LATB1 = 0;
  6856  0002D2  928A               	bcf	3978,1,c	;volatile
  6857                           
  6858                           ; BSR set to: 0
  6859                           ;my_i2c.c: 204: if(ic_ptr->buflen > ic_ptr->bufind+1){
  6860  0002D4  0100               	movlb	0	; () banked
  6861  0002D6  EE20 F01C          	lfsr	2,28
  6862  0002DA  0100               	movlb	0	; () banked
  6863  0002DC  51D1               	movf	_ic_ptr& (0+255),w,b
  6864  0002DE  26D9               	addwf	fsr2l,f,c
  6865  0002E0  0100               	movlb	0	; () banked
  6866  0002E2  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6867  0002E4  22DA               	addwfc	fsr2h,f,c
  6868  0002E6  50DF               	movf	indf2,w,c
  6869  0002E8  0100               	movlb	0	; () banked
  6870  0002EA  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  6871  0002EC  6B9B               	clrf	(??_i2c_master_int_handler+1)& (0+255),b
  6872  0002EE  0100               	movlb	0	; () banked
  6873  0002F0  EE20 F01D          	lfsr	2,29
  6874  0002F4  0100               	movlb	0	; () banked
  6875  0002F6  51D1               	movf	_ic_ptr& (0+255),w,b
  6876  0002F8  26D9               	addwf	fsr2l,f,c
  6877  0002FA  0100               	movlb	0	; () banked
  6878  0002FC  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6879  0002FE  22DA               	addwfc	fsr2h,f,c
  6880  000300  50DF               	movf	indf2,w,c
  6881  000302  0100               	movlb	0	; () banked
  6882  000304  6F9C               	movwf	(??_i2c_master_int_handler+2)& (0+255),b
  6883  000306  6B9D               	clrf	(??_i2c_master_int_handler+3)& (0+255),b
  6884  000308  0E01               	movlw	1
  6885  00030A  0100               	movlb	0	; () banked
  6886  00030C  279C               	addwf	(??_i2c_master_int_handler+2)& (0+255),f,b
  6887  00030E  0E00               	movlw	0
  6888  000310  239D               	addwfc	(??_i2c_master_int_handler+3)& (0+255),f,b
  6889  000312  0100               	movlb	0	; () banked
  6890  000314  519D               	movf	(??_i2c_master_int_handler+3)& (0+255),w,b
  6891  000316  0A80               	xorlw	128
  6892  000318  0100               	movlb	0	; () banked
  6893  00031A  6F9E               	movwf	(??_i2c_master_int_handler+4)& (0+255),b
  6894  00031C  0100               	movlb	0	; () banked
  6895  00031E  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  6896  000320  0100               	movlb	0	; () banked
  6897  000322  5D9C               	subwf	(??_i2c_master_int_handler+2)& (0+255),w,b
  6898  000324  0100               	movlb	0	; () banked
  6899  000326  519B               	movf	(??_i2c_master_int_handler+1)& (0+255),w,b
  6900  000328  0A80               	xorlw	128
  6901  00032A  0100               	movlb	0	; () banked
  6902  00032C  599E               	subwfb	(??_i2c_master_int_handler+4)& (0+255),w,b
  6903  00032E  B0D8               	btfsc	status,0,c
  6904  000330  D033               	goto	i2l3321
  6905                           
  6906                           ; BSR set to: 0
  6907                           ;my_i2c.c: 205: ic_ptr->buffer[ic_ptr->bufind] = SSPBUF;
  6908  000332  0100               	movlb	0	; () banked
  6909  000334  EE20 F01D          	lfsr	2,29
  6910  000338  0100               	movlb	0	; () banked
  6911  00033A  51D1               	movf	_ic_ptr& (0+255),w,b
  6912  00033C  26D9               	addwf	fsr2l,f,c
  6913  00033E  0100               	movlb	0	; () banked
  6914  000340  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6915  000342  22DA               	addwfc	fsr2h,f,c
  6916  000344  50DF               	movf	indf2,w,c
  6917  000346  0100               	movlb	0	; () banked
  6918  000348  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  6919  00034A  0100               	movlb	0	; () banked
  6920  00034C  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  6921  00034E  0D01               	mullw	1
  6922  000350  50F3               	movf	prodl,w,c
  6923  000352  0100               	movlb	0	; () banked
  6924  000354  0100               	movlb	0	; () banked
  6925  000356  25D1               	addwf	_ic_ptr& (0+255),w,b
  6926  000358  6ED9               	movwf	fsr2l,c
  6927  00035A  50F4               	movf	prodh,w,c
  6928  00035C  0100               	movlb	0	; () banked
  6929  00035E  0100               	movlb	0	; () banked
  6930  000360  21D2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6931  000362  6EDA               	movwf	fsr2h,c
  6932  000364  CFC9 FFDF          	movff	4041,indf2	;volatile
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;my_i2c.c: 206: ic_ptr->bufind++;
  6936  000368  0100               	movlb	0	; () banked
  6937  00036A  EE20 F01D          	lfsr	2,29
  6938  00036E  0100               	movlb	0	; () banked
  6939  000370  51D1               	movf	_ic_ptr& (0+255),w,b
  6940  000372  26D9               	addwf	fsr2l,f,c
  6941  000374  0100               	movlb	0	; () banked
  6942  000376  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6943  000378  22DA               	addwfc	fsr2h,f,c
  6944  00037A  2ADF               	incf	indf2,f,c
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;my_i2c.c: 207: ic_ptr->status = 0x7;
  6948  00037C  0100               	movlb	0	; () banked
  6949  00037E  EE20 F01F          	lfsr	2,31
  6950  000382  0100               	movlb	0	; () banked
  6951  000384  51D1               	movf	_ic_ptr& (0+255),w,b
  6952  000386  26D9               	addwf	fsr2l,f,c
  6953  000388  0100               	movlb	0	; () banked
  6954  00038A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6955  00038C  22DA               	addwfc	fsr2h,f,c
  6956  00038E  0E07               	movlw	7
  6957  000390  6EDF               	movwf	indf2,c
  6958                           
  6959                           ; BSR set to: 0
  6960                           ;my_i2c.c: 209: SSPCON2bits.ACKDT = 0;
  6961  000392  9AC5               	bcf	4037,5,c	;volatile
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;my_i2c.c: 210: SSPCON2bits.ACKEN = 1;
  6965  000394  88C5               	bsf	4037,4,c	;volatile
  6966                           
  6967                           ;my_i2c.c: 211: }else{
  6968  000396  0012               	return	
  6969  000398                     i2l3321:
  6970                           
  6971                           ; BSR set to: 0
  6972                           ;my_i2c.c: 212: ic_ptr->status = 0xB;
  6973  000398  0100               	movlb	0	; () banked
  6974  00039A  EE20 F01F          	lfsr	2,31
  6975  00039E  0100               	movlb	0	; () banked
  6976  0003A0  51D1               	movf	_ic_ptr& (0+255),w,b
  6977  0003A2  26D9               	addwf	fsr2l,f,c
  6978  0003A4  0100               	movlb	0	; () banked
  6979  0003A6  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  6980  0003A8  22DA               	addwfc	fsr2h,f,c
  6981  0003AA  0E0B               	movlw	11
  6982  0003AC  6EDF               	movwf	indf2,c
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;my_i2c.c: 215: ToMainHigh_sendmsg(ic_ptr->buflen, 45, ic_ptr->buffer);
  6986  0003AE  0100               	movlb	0	; () banked
  6987  0003B0  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  6988  0003B2  0E2D               	movlw	45
  6989  0003B4  0100               	movlb	0	; () banked
  6990  0003B6  0100               	movlb	0	; () banked
  6991  0003B8  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6992  0003BA  0100               	movlb	0	; () banked
  6993  0003BC  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  6994  0003BE  0100               	movlb	0	; () banked
  6995  0003C0  0100               	movlb	0	; () banked
  6996  0003C2  C0D2  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6997  0003C6  0100               	movlb	0	; () banked
  6998  0003C8  0100               	movlb	0	; () banked
  6999  0003CA  C0D1  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7000  0003CE  0100               	movlb	0	; () banked
  7001  0003D0  EE20 F01C          	lfsr	2,28
  7002  0003D4  0100               	movlb	0	; () banked
  7003  0003D6  51D1               	movf	_ic_ptr& (0+255),w,b
  7004  0003D8  26D9               	addwf	fsr2l,f,c
  7005  0003DA  0100               	movlb	0	; () banked
  7006  0003DC  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7007  0003DE  22DA               	addwfc	fsr2h,f,c
  7008  0003E0  50DF               	movf	indf2,w,c
  7009  0003E2  EC6D  F00B         	call	_ToMainHigh_sendmsg
  7010                           
  7011                           ;my_i2c.c: 218: SSPCON2bits.ACKDT = 1;
  7012  0003E6  8AC5               	bsf	4037,5,c	;volatile
  7013                           
  7014                           ;my_i2c.c: 219: SSPCON2bits.ACKEN = 1;
  7015  0003E8  88C5               	bsf	4037,4,c	;volatile
  7016  0003EA  0012               	return	
  7017  0003EC                     i2l3329:
  7018                           
  7019                           ;my_i2c.c: 225: {
  7020                           ;my_i2c.c: 226: ic_ptr->status = 0x5;
  7021  0003EC  0100               	movlb	0	; () banked
  7022  0003EE  EE20 F01F          	lfsr	2,31
  7023  0003F2  0100               	movlb	0	; () banked
  7024  0003F4  51D1               	movf	_ic_ptr& (0+255),w,b
  7025  0003F6  26D9               	addwf	fsr2l,f,c
  7026  0003F8  0100               	movlb	0	; () banked
  7027  0003FA  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7028  0003FC  22DA               	addwfc	fsr2h,f,c
  7029  0003FE  0E05               	movlw	5
  7030  000400  6EDF               	movwf	indf2,c
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;my_i2c.c: 227: i2c_master_recv(ic_ptr->buflen);
  7034  000402  0100               	movlb	0	; () banked
  7035  000404  EE20 F01C          	lfsr	2,28
  7036  000408  0100               	movlb	0	; () banked
  7037  00040A  51D1               	movf	_ic_ptr& (0+255),w,b
  7038  00040C  26D9               	addwf	fsr2l,f,c
  7039  00040E  0100               	movlb	0	; () banked
  7040  000410  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7041  000412  22DA               	addwfc	fsr2h,f,c
  7042  000414  50DF               	movf	indf2,w,c
  7043  000416  ECC1  F009         	call	_i2c_master_recv
  7044                           
  7045                           ;my_i2c.c: 228: break;
  7046  00041A  0012               	return	
  7047  00041C                     i2l314:
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;my_i2c.c: 231: {
  7051                           ;my_i2c.c: 233: SSPCON2bits.PEN = 1;
  7052  00041C  84C5               	bsf	4037,2,c	;volatile
  7053                           
  7054                           ; BSR set to: 0
  7055                           ;my_i2c.c: 235: ic_ptr->status = 0x5;
  7056  00041E  0100               	movlb	0	; () banked
  7057  000420  EE20 F01F          	lfsr	2,31
  7058  000424  0100               	movlb	0	; () banked
  7059  000426  51D1               	movf	_ic_ptr& (0+255),w,b
  7060  000428  26D9               	addwf	fsr2l,f,c
  7061  00042A  0100               	movlb	0	; () banked
  7062  00042C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7063  00042E  22DA               	addwfc	fsr2h,f,c
  7064  000430  0E05               	movlw	5
  7065  000432  6EDF               	movwf	indf2,c
  7066                           
  7067                           ;my_i2c.c: 236: break;
  7068  000434  0012               	return	
  7069  000436                     i2l3337:
  7070                           
  7071                           ; BSR set to: 0
  7072  000436  0100               	movlb	0	; () banked
  7073  000438  EE20 F01F          	lfsr	2,31
  7074  00043C  0100               	movlb	0	; () banked
  7075  00043E  51D1               	movf	_ic_ptr& (0+255),w,b
  7076  000440  26D9               	addwf	fsr2l,f,c
  7077  000442  0100               	movlb	0	; () banked
  7078  000444  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7079  000446  22DA               	addwfc	fsr2h,f,c
  7080  000448  50DF               	movf	indf2,w,c
  7081                           
  7082                           ; Switch size 1, requested type "space"
  7083                           ; Number of cases is 6, Range of values is 7 to 13
  7084                           ; switch strategies available:
  7085                           ; Name         Instructions Cycles
  7086                           ; simple_byte           19    10 (average)
  7087                           ;	Chosen strategy is simple_byte
  7088  00044A  0A07               	xorlw	7	; case 7
  7089  00044C  B4D8               	btfsc	status,2,c
  7090  00044E  D706               	goto	i2l307
  7091  000450  0A0E               	xorlw	14	; case 9
  7092  000452  B4D8               	btfsc	status,2,c
  7093  000454  D684               	goto	i2l302
  7094  000456  0A03               	xorlw	3	; case 10
  7095  000458  B4D8               	btfsc	status,2,c
  7096  00045A  D645               	goto	i2l3283
  7097  00045C  0A01               	xorlw	1	; case 11
  7098  00045E  B4D8               	btfsc	status,2,c
  7099  000460  D7DD               	goto	i2l314
  7100  000462  0A07               	xorlw	7	; case 12
  7101  000464  B4D8               	btfsc	status,2,c
  7102  000466  D734               	goto	i2l310
  7103  000468  0A01               	xorlw	1	; case 13
  7104  00046A  A4D8               	btfss	status,2,c
  7105  00046C  0012               	return	
  7106  00046E  D7BE               	goto	i2l3329
  7107  000470                     __end_of_i2c_master_int_handler:
  7108                           	opt stack 0
  7109                           pclatu	equ	0xFFB
  7110                           pclath	equ	0xFFA
  7111                           tblptru	equ	0xFF8
  7112                           tblptrh	equ	0xFF7
  7113                           tblptrl	equ	0xFF6
  7114                           tablat	equ	0xFF5
  7115                           prodh	equ	0xFF4
  7116                           prodl	equ	0xFF3
  7117                           intcon	equ	0xFF2
  7118                           postinc0	equ	0xFEE
  7119                           fsr0h	equ	0xFEA
  7120                           fsr0l	equ	0xFE9
  7121                           wreg	equ	0xFE8
  7122                           indf1	equ	0xFE7
  7123                           postdec1	equ	0xFE5
  7124                           fsr1h	equ	0xFE2
  7125                           fsr1l	equ	0xFE1
  7126                           bsr	equ	0xFE0
  7127                           indf2	equ	0xFDF
  7128                           postinc2	equ	0xFDE
  7129                           postdec2	equ	0xFDD
  7130                           fsr2h	equ	0xFDA
  7131                           fsr2l	equ	0xFD9
  7132                           status	equ	0xFD8
  7133                           
  7134 ;; *************** function _i2c_master_recv *****************
  7135 ;; Defined at:
  7136 ;;		line 74 in file "../src/my_i2c.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;  length          1    wreg     unsigned char 
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;  length          1    0[BANK0 ] unsigned char 
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      unsigned char 
  7143 ;; Registers used:
  7144 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7150 ;;      Params:         0       0       0       0       0
  7151 ;;      Locals:         0       1       0       0       0
  7152 ;;      Temps:          0       0       0       0       0
  7153 ;;      Totals:         0       1       0       0       0
  7154 ;;Total ram usage:        1 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; This function calls:
  7157 ;;		Nothing
  7158 ;; This function is called by:
  7159 ;;		_i2c_master_int_handler
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           	psect	text46
  7164  001382                     __ptext46:
  7165                           	opt stack 0
  7166  001382                     _i2c_master_recv:
  7167                           	opt stack 18
  7168                           
  7169                           ;incstack = 0
  7170                           ;i2c_master_recv@length stored from wreg
  7171  001382  CFE8 F080          	movff	wreg,i2c_master_recv@length
  7172                           
  7173                           ;my_i2c.c: 77: if(ic_ptr->status == 0x5){
  7174  001386  0100               	movlb	0	; () banked
  7175  001388  EE20 F01F          	lfsr	2,31
  7176  00138C  0100               	movlb	0	; () banked
  7177  00138E  51D1               	movf	_ic_ptr& (0+255),w,b
  7178  001390  26D9               	addwf	fsr2l,f,c
  7179  001392  0100               	movlb	0	; () banked
  7180  001394  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7181  001396  22DA               	addwfc	fsr2h,f,c
  7182  001398  0E05               	movlw	5
  7183  00139A  62DF               	cpfseq	indf2,c
  7184  00139C  0012               	return	
  7185                           
  7186                           ; BSR set to: 0
  7187                           ;my_i2c.c: 78: ic_ptr->slave_addr |= 0x01;
  7188  00139E  0100               	movlb	0	; () banked
  7189  0013A0  EE20 F040          	lfsr	2,64
  7190  0013A4  0100               	movlb	0	; () banked
  7191  0013A6  51D1               	movf	_ic_ptr& (0+255),w,b
  7192  0013A8  26D9               	addwf	fsr2l,f,c
  7193  0013AA  0100               	movlb	0	; () banked
  7194  0013AC  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7195  0013AE  22DA               	addwfc	fsr2h,f,c
  7196  0013B0  0E00               	movlw	0
  7197  0013B2  80DB               	bsf	plusw2,0,c
  7198                           
  7199                           ;my_i2c.c: 79: ic_ptr->buflen = length;
  7200  0013B4  0100               	movlb	0	; () banked
  7201  0013B6  EE20 F01C          	lfsr	2,28
  7202  0013BA  0100               	movlb	0	; () banked
  7203  0013BC  51D1               	movf	_ic_ptr& (0+255),w,b
  7204  0013BE  26D9               	addwf	fsr2l,f,c
  7205  0013C0  0100               	movlb	0	; () banked
  7206  0013C2  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7207  0013C4  22DA               	addwfc	fsr2h,f,c
  7208  0013C6  0100               	movlb	0	; () banked
  7209  0013C8  C080  FFDF         	movff	i2c_master_recv@length,indf2
  7210                           
  7211                           ;my_i2c.c: 81: ic_ptr->status = 0xA;
  7212  0013CC  0100               	movlb	0	; () banked
  7213  0013CE  EE20 F01F          	lfsr	2,31
  7214  0013D2  0100               	movlb	0	; () banked
  7215  0013D4  51D1               	movf	_ic_ptr& (0+255),w,b
  7216  0013D6  26D9               	addwf	fsr2l,f,c
  7217  0013D8  0100               	movlb	0	; () banked
  7218  0013DA  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7219  0013DC  22DA               	addwfc	fsr2h,f,c
  7220  0013DE  0E0A               	movlw	10
  7221  0013E0  6EDF               	movwf	indf2,c
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;my_i2c.c: 84: SSPCON2bits.RSEN = 1;
  7225  0013E2  82C5               	bsf	4037,1,c	;volatile
  7226  0013E4  0012               	return	
  7227  0013E6                     __end_of_i2c_master_recv:
  7228                           	opt stack 0
  7229                           pclatu	equ	0xFFB
  7230                           pclath	equ	0xFFA
  7231                           tblptru	equ	0xFF8
  7232                           tblptrh	equ	0xFF7
  7233                           tblptrl	equ	0xFF6
  7234                           tablat	equ	0xFF5
  7235                           prodh	equ	0xFF4
  7236                           prodl	equ	0xFF3
  7237                           intcon	equ	0xFF2
  7238                           postinc0	equ	0xFEE
  7239                           fsr0h	equ	0xFEA
  7240                           fsr0l	equ	0xFE9
  7241                           wreg	equ	0xFE8
  7242                           indf1	equ	0xFE7
  7243                           postdec1	equ	0xFE5
  7244                           fsr1h	equ	0xFE2
  7245                           fsr1l	equ	0xFE1
  7246                           bsr	equ	0xFE0
  7247                           indf2	equ	0xFDF
  7248                           postinc2	equ	0xFDE
  7249                           postdec2	equ	0xFDD
  7250                           plusw2	equ	0xFDB
  7251                           fsr2h	equ	0xFDA
  7252                           fsr2l	equ	0xFD9
  7253                           status	equ	0xFD8
  7254                           
  7255 ;; *************** function _ToMainHigh_sendmsg *****************
  7256 ;; Defined at:
  7257 ;;		line 126 in file "../src/messages.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;  length          1    wreg     unsigned char 
  7260 ;;  msgtype         1   22[BANK0 ] unsigned char 
  7261 ;;  data            2   23[BANK0 ] PTR void 
  7262 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(65), 
  7263 ;; Auto vars:     Size  Location     Type
  7264 ;;  length          1   25[BANK0 ] unsigned char 
  7265 ;; Return value:  Size  Location     Type
  7266 ;;                  1    wreg      char 
  7267 ;; Registers used:
  7268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7274 ;;      Params:         0       3       0       0       0
  7275 ;;      Locals:         0       1       0       0       0
  7276 ;;      Temps:          0       0       0       0       0
  7277 ;;      Totals:         0       4       0       0       0
  7278 ;;Total ram usage:        4 bytes
  7279 ;; Hardware stack levels used:    1
  7280 ;; Hardware stack levels required when called:    2
  7281 ;; This function calls:
  7282 ;;		i2_send_msg
  7283 ;; This function is called by:
  7284 ;;		_i2c_master_int_handler
  7285 ;;		_i2c_slave_int_handler
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289                           	psect	text47
  7290  0016DA                     __ptext47:
  7291                           	opt stack 0
  7292  0016DA                     _ToMainHigh_sendmsg:
  7293                           	opt stack 16
  7294                           
  7295                           ; BSR set to: 0
  7296                           ;incstack = 0
  7297                           ;ToMainHigh_sendmsg@length stored from wreg
  7298  0016DA  CFE8 F099          	movff	wreg,ToMainHigh_sendmsg@length
  7299                           
  7300                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7301                           ;	Return value of _ToMainHigh_sendmsg is never used
  7302  0016DE  0102               	movlb	2	; () banked
  7303  0016E0  0E02               	movlw	high _ToMainHigh_MQ
  7304  0016E2  0100               	movlb	0	; () banked
  7305  0016E4  0100               	movlb	0	; () banked
  7306  0016E6  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  7307  0016E8  0102               	movlb	2	; () banked
  7308  0016EA  0E7E               	movlw	low _ToMainHigh_MQ
  7309  0016EC  0100               	movlb	0	; () banked
  7310  0016EE  0100               	movlb	0	; () banked
  7311  0016F0  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  7312  0016F2  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7313  0016F6  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7314  0016FA  0100               	movlb	0	; () banked
  7315  0016FC  0100               	movlb	0	; () banked
  7316  0016FE  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7317  001702  0100               	movlb	0	; () banked
  7318  001704  0100               	movlb	0	; () banked
  7319  001706  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7320  00170A  EC6E  F005         	call	i2_send_msg	;wreg free
  7321  00170E  0012               	return	
  7322  001710                     __end_of_ToMainHigh_sendmsg:
  7323                           	opt stack 0
  7324                           pclatu	equ	0xFFB
  7325                           pclath	equ	0xFFA
  7326                           tblptru	equ	0xFF8
  7327                           tblptrh	equ	0xFF7
  7328                           tblptrl	equ	0xFF6
  7329                           tablat	equ	0xFF5
  7330                           prodh	equ	0xFF4
  7331                           prodl	equ	0xFF3
  7332                           intcon	equ	0xFF2
  7333                           postinc0	equ	0xFEE
  7334                           fsr0h	equ	0xFEA
  7335                           fsr0l	equ	0xFE9
  7336                           wreg	equ	0xFE8
  7337                           indf1	equ	0xFE7
  7338                           postdec1	equ	0xFE5
  7339                           fsr1h	equ	0xFE2
  7340                           fsr1l	equ	0xFE1
  7341                           bsr	equ	0xFE0
  7342                           indf2	equ	0xFDF
  7343                           postinc2	equ	0xFDE
  7344                           postdec2	equ	0xFDD
  7345                           plusw2	equ	0xFDB
  7346                           fsr2h	equ	0xFDA
  7347                           fsr2l	equ	0xFD9
  7348                           status	equ	0xFD8
  7349                           
  7350 ;; *************** function i2_send_msg *****************
  7351 ;; Defined at:
  7352 ;;		line 24 in file "../src/messages.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  7355 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  7356 ;;  length          1   12[BANK0 ] unsigned char 
  7357 ;;  msgtype         1   13[BANK0 ] unsigned char 
  7358 ;;  data            2   14[BANK0 ] PTR void 
  7359 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(65), 
  7360 ;;		 -> main@uc(13), 
  7361 ;; Auto vars:     Size  Location     Type
  7362 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  7363 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  7364 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  7365 ;;  send_msg        2   17[BANK0 ] unsigned int 
  7366 ;;  send_msg        1   19[BANK0 ] unsigned char 
  7367 ;; Return value:  Size  Location     Type
  7368 ;;                  1    wreg      char 
  7369 ;; Registers used:
  7370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7371 ;; Tracked objects:
  7372 ;;		On entry : 0/0
  7373 ;;		On exit  : 0/0
  7374 ;;		Unchanged: 0/0
  7375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7376 ;;      Params:         0       6       0       0       0
  7377 ;;      Locals:         0       5       0       0       0
  7378 ;;      Temps:          0       1       0       0       0
  7379 ;;      Totals:         0      12       0       0       0
  7380 ;;Total ram usage:       12 bytes
  7381 ;; Hardware stack levels used:    1
  7382 ;; Hardware stack levels required when called:    1
  7383 ;; This function calls:
  7384 ;;		i2_memcpy
  7385 ;; This function is called by:
  7386 ;;		_ToMainHigh_sendmsg
  7387 ;; This function uses a non-reentrant model
  7388 ;;
  7389                           
  7390                           	psect	text48
  7391  000ADC                     __ptext48:
  7392                           	opt stack 0
  7393  000ADC                     i2_send_msg:
  7394                           	opt stack 16
  7395                           
  7396                           ;messages.c: 25: unsigned char slot;
  7397                           ;messages.c: 27: msg *qmsg;
  7398                           ;messages.c: 28: size_t tlength = length;
  7399                           
  7400                           ;incstack = 0
  7401  000ADC  0100               	movlb	0	; () banked
  7402  000ADE  0100               	movlb	0	; () banked
  7403  000AE0  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  7404  000AE4  0100               	movlb	0	; () banked
  7405  000AE6  0100               	movlb	0	; () banked
  7406  000AE8  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7410  000AEA  0100               	movlb	0	; () banked
  7411  000AEC  EE20 F07C          	lfsr	2,124
  7412  000AF0  0100               	movlb	0	; () banked
  7413  000AF2  518A               	movf	i2send_msg@qptr& (0+255),w,b
  7414  000AF4  26D9               	addwf	fsr2l,f,c
  7415  000AF6  0100               	movlb	0	; () banked
  7416  000AF8  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7417  000AFA  22DA               	addwfc	fsr2h,f,c
  7418  000AFC  50DF               	movf	indf2,w,c
  7419  000AFE  0100               	movlb	0	; () banked
  7420  000B00  0100               	movlb	0	; () banked
  7421  000B02  6F93               	movwf	i2send_msg@slot& (0+255),b
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7425  000B04  0100               	movlb	0	; () banked
  7426  000B06  0100               	movlb	0	; () banked
  7427  000B08  5193               	movf	i2send_msg@slot& (0+255),w,b
  7428  000B0A  0D1F               	mullw	31
  7429  000B0C  50F3               	movf	prodl,w,c
  7430  000B0E  0100               	movlb	0	; () banked
  7431  000B10  0100               	movlb	0	; () banked
  7432  000B12  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  7433  000B14  0100               	movlb	0	; () banked
  7434  000B16  0100               	movlb	0	; () banked
  7435  000B18  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  7436  000B1A  50F4               	movf	prodh,w,c
  7437  000B1C  0100               	movlb	0	; () banked
  7438  000B1E  0100               	movlb	0	; () banked
  7439  000B20  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  7440  000B22  0100               	movlb	0	; () banked
  7441  000B24  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;messages.c: 41: if (qmsg->full != 0) {
  7445  000B26  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7446  000B2A  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7447  000B2E  50DF               	movf	indf2,w,c
  7448  000B30  B4D8               	btfsc	status,2,c
  7449  000B32  D002               	goto	i2l3537
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;messages.c: 42: return (-1);
  7453  000B34  0EFF               	movlw	255
  7454  000B36  0012               	return	
  7455  000B38                     i2l3537:
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;messages.c: 43: }
  7459                           ;messages.c: 46: qmsg->length = length;
  7460  000B38  0100               	movlb	0	; () banked
  7461  000B3A  EE20 F001          	lfsr	2,1
  7462  000B3E  0100               	movlb	0	; () banked
  7463  000B40  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  7464  000B42  26D9               	addwf	fsr2l,f,c
  7465  000B44  0100               	movlb	0	; () banked
  7466  000B46  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7467  000B48  22DA               	addwfc	fsr2h,f,c
  7468  000B4A  0100               	movlb	0	; () banked
  7469  000B4C  C08C  FFDF         	movff	i2send_msg@length,indf2
  7470                           
  7471                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7472  000B50  0100               	movlb	0	; () banked
  7473  000B52  EE20 F002          	lfsr	2,2
  7474  000B56  0100               	movlb	0	; () banked
  7475  000B58  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  7476  000B5A  26D9               	addwf	fsr2l,f,c
  7477  000B5C  0100               	movlb	0	; () banked
  7478  000B5E  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7479  000B60  22DA               	addwfc	fsr2h,f,c
  7480  000B62  0100               	movlb	0	; () banked
  7481  000B64  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  7482                           
  7483                           ; BSR set to: 0
  7484                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7485  000B68  0E03               	movlw	3
  7486  000B6A  0100               	movlb	0	; () banked
  7487  000B6C  0100               	movlb	0	; () banked
  7488  000B6E  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  7489  000B70  0100               	movlb	0	; () banked
  7490  000B72  0100               	movlb	0	; () banked
  7491  000B74  6F80               	movwf	i2memcpy@d1& (0+255),b
  7492  000B76  0E00               	movlw	0
  7493  000B78  0100               	movlb	0	; () banked
  7494  000B7A  0100               	movlb	0	; () banked
  7495  000B7C  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  7496  000B7E  0100               	movlb	0	; () banked
  7497  000B80  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  7498  000B82  0100               	movlb	0	; () banked
  7499  000B84  0100               	movlb	0	; () banked
  7500  000B86  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7501  000B8A  0100               	movlb	0	; () banked
  7502  000B8C  0100               	movlb	0	; () banked
  7503  000B8E  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  7504  000B92  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  7505  000B96  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7506  000B9A  EC22  F00A         	call	i2_memcpy	;wreg free
  7507                           
  7508                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7509  000B9E  0100               	movlb	0	; () banked
  7510  000BA0  EE20 F07C          	lfsr	2,124
  7511  000BA4  0100               	movlb	0	; () banked
  7512  000BA6  518A               	movf	i2send_msg@qptr& (0+255),w,b
  7513  000BA8  26D9               	addwf	fsr2l,f,c
  7514  000BAA  0100               	movlb	0	; () banked
  7515  000BAC  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7516  000BAE  22DA               	addwfc	fsr2h,f,c
  7517  000BB0  0100               	movlb	0	; () banked
  7518  000BB2  EE10 F07C          	lfsr	1,124
  7519  000BB6  0100               	movlb	0	; () banked
  7520  000BB8  518A               	movf	i2send_msg@qptr& (0+255),w,b
  7521  000BBA  26E1               	addwf	fsr1l,f,c
  7522  000BBC  0100               	movlb	0	; () banked
  7523  000BBE  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7524  000BC0  22E2               	addwfc	fsr1h,f,c
  7525  000BC2  50E7               	movf	indf1,w,c
  7526  000BC4  0100               	movlb	0	; () banked
  7527  000BC6  6F90               	movwf	??i2_send_msg& (0+255),b
  7528  000BC8  0100               	movlb	0	; () banked
  7529  000BCA  2990               	incf	??i2_send_msg& (0+255),w,b
  7530  000BCC  0B03               	andlw	3
  7531  000BCE  6EDF               	movwf	indf2,c
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;messages.c: 59: qmsg->full = 1;
  7535  000BD0  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7536  000BD4  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7537  000BD8  0E01               	movlw	1
  7538  000BDA  6EDF               	movwf	indf2,c
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;messages.c: 60: return (1);
  7542  000BDC  0E01               	movlw	1
  7543  000BDE  0012               	return	
  7544  000BE0                     __end_ofi2_send_msg:
  7545                           	opt stack 0
  7546                           pclatu	equ	0xFFB
  7547                           pclath	equ	0xFFA
  7548                           tblptru	equ	0xFF8
  7549                           tblptrh	equ	0xFF7
  7550                           tblptrl	equ	0xFF6
  7551                           tablat	equ	0xFF5
  7552                           prodh	equ	0xFF4
  7553                           prodl	equ	0xFF3
  7554                           intcon	equ	0xFF2
  7555                           postinc0	equ	0xFEE
  7556                           fsr0h	equ	0xFEA
  7557                           fsr0l	equ	0xFE9
  7558                           wreg	equ	0xFE8
  7559                           indf1	equ	0xFE7
  7560                           postdec1	equ	0xFE5
  7561                           fsr1h	equ	0xFE2
  7562                           fsr1l	equ	0xFE1
  7563                           bsr	equ	0xFE0
  7564                           indf2	equ	0xFDF
  7565                           postinc2	equ	0xFDE
  7566                           postdec2	equ	0xFDD
  7567                           plusw2	equ	0xFDB
  7568                           fsr2h	equ	0xFDA
  7569                           fsr2l	equ	0xFD9
  7570                           status	equ	0xFD8
  7571                           
  7572 ;; *************** function i2_memcpy *****************
  7573 ;; Defined at:
  7574 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;  d1              2    0[BANK0 ] PTR void 
  7577 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  7578 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  7579 ;;		 -> main@msgbuffer(29), 
  7580 ;;  s1              2    2[BANK0 ] PTR const void 
  7581 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  7582 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  7583 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  7584 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(65), 
  7585 ;;		 -> main@uc(13), 
  7586 ;;  n               2    4[BANK0 ] unsigned int 
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  7589 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  7590 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  7591 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  7592 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(65), 
  7593 ;;		 -> main@uc(13), 
  7594 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  7595 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  7596 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  7597 ;;		 -> main@msgbuffer(29), 
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  2    0[BANK0 ] PTR void 
  7600 ;; Registers used:
  7601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7607 ;;      Params:         0       6       0       0       0
  7608 ;;      Locals:         0       4       0       0       0
  7609 ;;      Temps:          0       0       0       0       0
  7610 ;;      Totals:         0      10       0       0       0
  7611 ;;Total ram usage:       10 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; This function calls:
  7614 ;;		Nothing
  7615 ;; This function is called by:
  7616 ;;		i2_send_msg
  7617 ;; This function uses a non-reentrant model
  7618 ;;
  7619                           
  7620                           	psect	text49
  7621  001444                     __ptext49:
  7622                           	opt stack 0
  7623  001444                     i2_memcpy:
  7624                           	opt stack 16
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;incstack = 0
  7628  001444  0100               	movlb	0	; () banked
  7629  001446  0100               	movlb	0	; () banked
  7630  001448  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7631  00144C  0100               	movlb	0	; () banked
  7632  00144E  0100               	movlb	0	; () banked
  7633  001450  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  7634  001454  0100               	movlb	0	; () banked
  7635  001456  0100               	movlb	0	; () banked
  7636  001458  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7637  00145C  0100               	movlb	0	; () banked
  7638  00145E  0100               	movlb	0	; () banked
  7639  001460  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  7640  001464  D012               	goto	i2l3561
  7641  001466                     i2l3555:
  7642                           
  7643                           ; BSR set to: 0
  7644  001466  C088  FFD9         	movff	i2memcpy@s,fsr2l
  7645  00146A  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  7646  00146E  C086  FFE1         	movff	i2memcpy@d,fsr1l
  7647  001472  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  7648  001476  CFDF FFE7          	movff	indf2,indf1
  7649                           
  7650                           ; BSR set to: 0
  7651  00147A  0100               	movlb	0	; () banked
  7652  00147C  0100               	movlb	0	; () banked
  7653  00147E  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  7654  001480  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  7655                           
  7656                           ; BSR set to: 0
  7657  001482  0100               	movlb	0	; () banked
  7658  001484  0100               	movlb	0	; () banked
  7659  001486  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  7660  001488  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  7661  00148A                     i2l3561:
  7662                           
  7663                           ; BSR set to: 0
  7664  00148A  0100               	movlb	0	; () banked
  7665  00148C  0100               	movlb	0	; () banked
  7666  00148E  0784               	decf	i2memcpy@n& (0+255),f,b
  7667  001490  A0D8               	btfss	status,0,c
  7668  001492  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  7669  001494  0100               	movlb	0	; () banked
  7670  001496  2984               	incf	i2memcpy@n& (0+255),w,b
  7671  001498  B4D8               	btfsc	status,2,c
  7672  00149A  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  7673  00149C  B4D8               	btfsc	status,2,c
  7674                           
  7675                           ; BSR set to: 0
  7676                           
  7677                           ; BSR set to: 0
  7678                           ;	Return value of i2_memcpy is never used
  7679  00149E  0012               	return	
  7680  0014A0  D7E2               	goto	i2l3555
  7681  0014A2                     __end_ofi2_memcpy:
  7682                           	opt stack 0
  7683                           pclatu	equ	0xFFB
  7684                           pclath	equ	0xFFA
  7685                           tblptru	equ	0xFF8
  7686                           tblptrh	equ	0xFF7
  7687                           tblptrl	equ	0xFF6
  7688                           tablat	equ	0xFF5
  7689                           prodh	equ	0xFF4
  7690                           prodl	equ	0xFF3
  7691                           intcon	equ	0xFF2
  7692                           postinc0	equ	0xFEE
  7693                           fsr0h	equ	0xFEA
  7694                           fsr0l	equ	0xFE9
  7695                           wreg	equ	0xFE8
  7696                           indf1	equ	0xFE7
  7697                           postdec1	equ	0xFE5
  7698                           fsr1h	equ	0xFE2
  7699                           fsr1l	equ	0xFE1
  7700                           bsr	equ	0xFE0
  7701                           indf2	equ	0xFDF
  7702                           postinc2	equ	0xFDE
  7703                           postdec2	equ	0xFDD
  7704                           plusw2	equ	0xFDB
  7705                           fsr2h	equ	0xFDA
  7706                           fsr2l	equ	0xFD9
  7707                           status	equ	0xFD8
  7708                           
  7709 ;; *************** function _SleepIfOkay *****************
  7710 ;; Defined at:
  7711 ;;		line 228 in file "../src/messages.c"
  7712 ;; Parameters:    Size  Location     Type
  7713 ;;		None
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;		None
  7716 ;; Return value:  Size  Location     Type
  7717 ;;		None               void
  7718 ;; Registers used:
  7719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7720 ;; Tracked objects:
  7721 ;;		On entry : 0/0
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7725 ;;      Params:         0       0       0       0       0
  7726 ;;      Locals:         0       0       0       0       0
  7727 ;;      Temps:          0       0       0       0       0
  7728 ;;      Totals:         0       0       0       0       0
  7729 ;;Total ram usage:        0 bytes
  7730 ;; Hardware stack levels used:    1
  7731 ;; Hardware stack levels required when called:    2
  7732 ;; This function calls:
  7733 ;;		_enter_sleep_mode
  7734 ;;		i2_check_msg
  7735 ;;		i2_in_high_int
  7736 ;;		i2_in_low_int
  7737 ;; This function is called by:
  7738 ;;		_InterruptHandlerHigh
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742                           	psect	text50
  7743  0012B0                     __ptext50:
  7744                           	opt stack 0
  7745  0012B0                     _SleepIfOkay:
  7746                           	opt stack 18
  7747                           
  7748                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;incstack = 0
  7752  0012B0  6649               	tstfsz	_MQ_Main_Willing_to_block,c
  7753  0012B2  D001               	goto	i2l3151
  7754  0012B4  0012               	return	
  7755  0012B6                     i2l3151:
  7756                           
  7757                           ;messages.c: 232: }
  7758                           ;messages.c: 235: if (in_low_int()) {
  7759  0012B6  EC74  F00A         	call	i2_in_low_int	;wreg free
  7760  0012BA  0100               	movlb	0	; () banked
  7761  0012BC  0100               	movlb	0	; () banked
  7762  0012BE  5183               	movf	(?i2_in_low_int+1)& (0+255),w,b
  7763  0012C0  0100               	movlb	0	; () banked
  7764  0012C2  1182               	iorwf	?i2_in_low_int& (0+255),w,b
  7765  0012C4  A4D8               	btfss	status,2,c
  7766  0012C6  0012               	return	
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;messages.c: 237: }
  7770                           ;messages.c: 240: if (!in_high_int()) {
  7771                           
  7772                           ; BSR set to: 0
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;messages.c: 236: return;
  7776  0012C8  EC5E  F00C         	call	i2_in_high_int	;wreg free
  7777  0012CC  0100               	movlb	0	; () banked
  7778  0012CE  0100               	movlb	0	; () banked
  7779  0012D0  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
  7780  0012D2  0100               	movlb	0	; () banked
  7781  0012D4  1180               	iorwf	?i2_in_high_int& (0+255),w,b
  7782  0012D6  B4D8               	btfsc	status,2,c
  7783  0012D8  0012               	return	
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;messages.c: 242: }
  7787                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  7788                           
  7789                           ; BSR set to: 0
  7790                           
  7791                           ; BSR set to: 0
  7792                           ;messages.c: 241: return;
  7793  0012DA  0102               	movlb	2	; () banked
  7794  0012DC  0E02               	movlw	high _ToMainHigh_MQ
  7795  0012DE  0100               	movlb	0	; () banked
  7796  0012E0  0100               	movlb	0	; () banked
  7797  0012E2  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
  7798  0012E4  0102               	movlb	2	; () banked
  7799  0012E6  0E7E               	movlw	low _ToMainHigh_MQ
  7800  0012E8  0100               	movlb	0	; () banked
  7801  0012EA  0100               	movlb	0	; () banked
  7802  0012EC  6F80               	movwf	i2check_msg@qptr& (0+255),b
  7803  0012EE  EC88  F00B         	call	i2_check_msg	;wreg free
  7804  0012F2  0900               	iorlw	0
  7805  0012F4  A4D8               	btfss	status,2,c
  7806  0012F6  0012               	return	
  7807                           
  7808                           ;messages.c: 249: }
  7809                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  7810                           
  7811                           ;messages.c: 248: return;
  7812  0012F8  0101               	movlb	1	; () banked
  7813  0012FA  0E01               	movlw	high _ToMainLow_MQ
  7814  0012FC  0100               	movlb	0	; () banked
  7815  0012FE  0100               	movlb	0	; () banked
  7816  001300  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
  7817  001302  0101               	movlb	1	; () banked
  7818  001304  0E00               	movlw	low _ToMainLow_MQ
  7819  001306  0100               	movlb	0	; () banked
  7820  001308  0100               	movlb	0	; () banked
  7821  00130A  6F80               	movwf	i2check_msg@qptr& (0+255),b
  7822  00130C  EC88  F00B         	call	i2_check_msg	;wreg free
  7823  001310  0900               	iorlw	0
  7824  001312  B4D8               	btfsc	status,2,c
  7825                           
  7826                           ;messages.c: 252: }
  7827                           ;messages.c: 253: enter_sleep_mode();
  7828                           
  7829                           ;messages.c: 251: return;
  7830  001314  EC7A  F00C         	call	_enter_sleep_mode	;wreg free
  7831  001318  0012               	return	
  7832  00131A                     __end_of_SleepIfOkay:
  7833                           	opt stack 0
  7834                           pclatu	equ	0xFFB
  7835                           pclath	equ	0xFFA
  7836                           tblptru	equ	0xFF8
  7837                           tblptrh	equ	0xFF7
  7838                           tblptrl	equ	0xFF6
  7839                           tablat	equ	0xFF5
  7840                           prodh	equ	0xFF4
  7841                           prodl	equ	0xFF3
  7842                           intcon	equ	0xFF2
  7843                           postinc0	equ	0xFEE
  7844                           fsr0h	equ	0xFEA
  7845                           fsr0l	equ	0xFE9
  7846                           wreg	equ	0xFE8
  7847                           indf1	equ	0xFE7
  7848                           postdec1	equ	0xFE5
  7849                           fsr1h	equ	0xFE2
  7850                           fsr1l	equ	0xFE1
  7851                           bsr	equ	0xFE0
  7852                           indf2	equ	0xFDF
  7853                           postinc2	equ	0xFDE
  7854                           postdec2	equ	0xFDD
  7855                           plusw2	equ	0xFDB
  7856                           fsr2h	equ	0xFDA
  7857                           fsr2l	equ	0xFD9
  7858                           status	equ	0xFD8
  7859                           
  7860 ;; *************** function i2_in_low_int *****************
  7861 ;; Defined at:
  7862 ;;		line 31 in file "../src/interrupts.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;		None
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;		None
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  2    2[BANK0 ] int 
  7869 ;; Registers used:
  7870 ;;		wreg, status,2, status,0, cstack
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7876 ;;      Params:         0       2       0       0       0
  7877 ;;      Locals:         0       0       0       0       0
  7878 ;;      Temps:          0       0       0       0       0
  7879 ;;      Totals:         0       2       0       0       0
  7880 ;;Total ram usage:        2 bytes
  7881 ;; Hardware stack levels used:    1
  7882 ;; Hardware stack levels required when called:    1
  7883 ;; This function calls:
  7884 ;;		i2_in_high_int
  7885 ;; This function is called by:
  7886 ;;		_SleepIfOkay
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text51
  7891  0014E8                     __ptext51:
  7892                           	opt stack 0
  7893  0014E8                     i2_in_low_int:
  7894                           	opt stack 18
  7895                           
  7896                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  7897                           
  7898                           ;incstack = 0
  7899  0014E8  ACF2               	btfss	intcon,6,c	;volatile
  7900  0014EA  D008               	goto	i2l3513
  7901                           
  7902                           ;interrupts.c: 33: return (0);
  7903  0014EC  0E00               	movlw	0
  7904  0014EE  0100               	movlb	0	; () banked
  7905  0014F0  0100               	movlb	0	; () banked
  7906  0014F2  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
  7907  0014F4  0E00               	movlw	0
  7908  0014F6  0100               	movlb	0	; () banked
  7909  0014F8  6F82               	movwf	?i2_in_low_int& (0+255),b
  7910  0014FA  0012               	return	
  7911  0014FC                     i2l3513:
  7912  0014FC  EC5E  F00C         	call	i2_in_high_int	;wreg free
  7913  001500  0100               	movlb	0	; () banked
  7914  001502  0100               	movlb	0	; () banked
  7915  001504  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
  7916  001506  0100               	movlb	0	; () banked
  7917  001508  1180               	iorwf	?i2_in_high_int& (0+255),w,b
  7918  00150A  B4D8               	btfsc	status,2,c
  7919  00150C  D008               	goto	i2l3521
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;interrupts.c: 35: return (0);
  7923  00150E  0E00               	movlw	0
  7924  001510  0100               	movlb	0	; () banked
  7925  001512  0100               	movlb	0	; () banked
  7926  001514  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
  7927  001516  0E00               	movlw	0
  7928  001518  0100               	movlb	0	; () banked
  7929  00151A  6F82               	movwf	?i2_in_low_int& (0+255),b
  7930  00151C  0012               	return	
  7931  00151E                     i2l3521:
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;interrupts.c: 37: return (1);
  7935  00151E  0E00               	movlw	0
  7936  001520  0100               	movlb	0	; () banked
  7937  001522  0100               	movlb	0	; () banked
  7938  001524  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
  7939  001526  0E01               	movlw	1
  7940  001528  0100               	movlb	0	; () banked
  7941  00152A  6F82               	movwf	?i2_in_low_int& (0+255),b
  7942  00152C  0012               	return	
  7943  00152E                     __end_ofi2_in_low_int:
  7944                           	opt stack 0
  7945                           pclatu	equ	0xFFB
  7946                           pclath	equ	0xFFA
  7947                           tblptru	equ	0xFF8
  7948                           tblptrh	equ	0xFF7
  7949                           tblptrl	equ	0xFF6
  7950                           tablat	equ	0xFF5
  7951                           prodh	equ	0xFF4
  7952                           prodl	equ	0xFF3
  7953                           intcon	equ	0xFF2
  7954                           postinc0	equ	0xFEE
  7955                           fsr0h	equ	0xFEA
  7956                           fsr0l	equ	0xFE9
  7957                           wreg	equ	0xFE8
  7958                           indf1	equ	0xFE7
  7959                           postdec1	equ	0xFE5
  7960                           fsr1h	equ	0xFE2
  7961                           fsr1l	equ	0xFE1
  7962                           bsr	equ	0xFE0
  7963                           indf2	equ	0xFDF
  7964                           postinc2	equ	0xFDE
  7965                           postdec2	equ	0xFDD
  7966                           plusw2	equ	0xFDB
  7967                           fsr2h	equ	0xFDA
  7968                           fsr2l	equ	0xFD9
  7969                           status	equ	0xFD8
  7970                           
  7971 ;; *************** function i2_in_high_int *****************
  7972 ;; Defined at:
  7973 ;;		line 23 in file "../src/interrupts.c"
  7974 ;; Parameters:    Size  Location     Type
  7975 ;;		None
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;		None
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  2    0[BANK0 ] int 
  7980 ;; Registers used:
  7981 ;;		wreg, status,2
  7982 ;; Tracked objects:
  7983 ;;		On entry : 0/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7987 ;;      Params:         0       2       0       0       0
  7988 ;;      Locals:         0       0       0       0       0
  7989 ;;      Temps:          0       0       0       0       0
  7990 ;;      Totals:         0       2       0       0       0
  7991 ;;Total ram usage:        2 bytes
  7992 ;; Hardware stack levels used:    1
  7993 ;; This function calls:
  7994 ;;		Nothing
  7995 ;; This function is called by:
  7996 ;;		_SleepIfOkay
  7997 ;;		i2_in_low_int
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           	psect	text52
  8002  0018BC                     __ptext52:
  8003                           	opt stack 0
  8004  0018BC                     i2_in_high_int:
  8005                           	opt stack 18
  8006                           
  8007                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;incstack = 0
  8011  0018BC  0E00               	movlw	0
  8012  0018BE  AEF2               	btfss	intcon,7,c	;volatile
  8013  0018C0  0E01               	movlw	1
  8014  0018C2  0100               	movlb	0	; () banked
  8015  0018C4  0100               	movlb	0	; () banked
  8016  0018C6  6F80               	movwf	?i2_in_high_int& (0+255),b
  8017  0018C8  0100               	movlb	0	; () banked
  8018  0018CA  6B81               	clrf	(?i2_in_high_int+1)& (0+255),b
  8019  0018CC  0012               	return	
  8020  0018CE                     __end_ofi2_in_high_int:
  8021                           	opt stack 0
  8022                           pclatu	equ	0xFFB
  8023                           pclath	equ	0xFFA
  8024                           tblptru	equ	0xFF8
  8025                           tblptrh	equ	0xFF7
  8026                           tblptrl	equ	0xFF6
  8027                           tablat	equ	0xFF5
  8028                           prodh	equ	0xFF4
  8029                           prodl	equ	0xFF3
  8030                           intcon	equ	0xFF2
  8031                           postinc0	equ	0xFEE
  8032                           fsr0h	equ	0xFEA
  8033                           fsr0l	equ	0xFE9
  8034                           wreg	equ	0xFE8
  8035                           indf1	equ	0xFE7
  8036                           postdec1	equ	0xFE5
  8037                           fsr1h	equ	0xFE2
  8038                           fsr1l	equ	0xFE1
  8039                           bsr	equ	0xFE0
  8040                           indf2	equ	0xFDF
  8041                           postinc2	equ	0xFDE
  8042                           postdec2	equ	0xFDD
  8043                           plusw2	equ	0xFDB
  8044                           fsr2h	equ	0xFDA
  8045                           fsr2l	equ	0xFD9
  8046                           status	equ	0xFD8
  8047                           
  8048 ;; *************** function i2_check_msg *****************
  8049 ;; Defined at:
  8050 ;;		line 222 in file "../src/messages.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  8053 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;		None
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  1    wreg      unsigned char 
  8058 ;; Registers used:
  8059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8065 ;;      Params:         0       2       0       0       0
  8066 ;;      Locals:         0       0       0       0       0
  8067 ;;      Temps:          0       1       0       0       0
  8068 ;;      Totals:         0       3       0       0       0
  8069 ;;Total ram usage:        3 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; This function calls:
  8072 ;;		Nothing
  8073 ;; This function is called by:
  8074 ;;		_SleepIfOkay
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           	psect	text53
  8079  001710                     __ptext53:
  8080                           	opt stack 0
  8081  001710                     i2_check_msg:
  8082                           	opt stack 19
  8083                           
  8084                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;incstack = 0
  8088  001710  0100               	movlb	0	; () banked
  8089  001712  EE20 F07D          	lfsr	2,125
  8090  001716  0100               	movlb	0	; () banked
  8091  001718  5180               	movf	i2check_msg@qptr& (0+255),w,b
  8092  00171A  26D9               	addwf	fsr2l,f,c
  8093  00171C  0100               	movlb	0	; () banked
  8094  00171E  5181               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  8095  001720  22DA               	addwfc	fsr2h,f,c
  8096  001722  50DF               	movf	indf2,w,c
  8097  001724  0100               	movlb	0	; () banked
  8098  001726  6F82               	movwf	??i2_check_msg& (0+255),b
  8099  001728  0100               	movlb	0	; () banked
  8100  00172A  5182               	movf	??i2_check_msg& (0+255),w,b
  8101  00172C  0D1F               	mullw	31
  8102  00172E  50F3               	movf	prodl,w,c
  8103  001730  0100               	movlb	0	; () banked
  8104  001732  0100               	movlb	0	; () banked
  8105  001734  2580               	addwf	i2check_msg@qptr& (0+255),w,b
  8106  001736  6ED9               	movwf	fsr2l,c
  8107  001738  50F4               	movf	prodh,w,c
  8108  00173A  0100               	movlb	0	; () banked
  8109  00173C  0100               	movlb	0	; () banked
  8110  00173E  2181               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  8111  001740  6EDA               	movwf	fsr2h,c
  8112  001742  50DF               	movf	indf2,w,c
  8113  001744  0012               	return	
  8114  001746                     __end_ofi2_check_msg:
  8115                           	opt stack 0
  8116                           pclatu	equ	0xFFB
  8117                           pclath	equ	0xFFA
  8118                           tblptru	equ	0xFF8
  8119                           tblptrh	equ	0xFF7
  8120                           tblptrl	equ	0xFF6
  8121                           tablat	equ	0xFF5
  8122                           prodh	equ	0xFF4
  8123                           prodl	equ	0xFF3
  8124                           intcon	equ	0xFF2
  8125                           postinc0	equ	0xFEE
  8126                           fsr0h	equ	0xFEA
  8127                           fsr0l	equ	0xFE9
  8128                           wreg	equ	0xFE8
  8129                           indf1	equ	0xFE7
  8130                           postdec1	equ	0xFE5
  8131                           fsr1h	equ	0xFE2
  8132                           fsr1l	equ	0xFE1
  8133                           bsr	equ	0xFE0
  8134                           indf2	equ	0xFDF
  8135                           postinc2	equ	0xFDE
  8136                           postdec2	equ	0xFDD
  8137                           plusw2	equ	0xFDB
  8138                           fsr2h	equ	0xFDA
  8139                           fsr2l	equ	0xFD9
  8140                           status	equ	0xFD8
  8141                           
  8142 ;; *************** function _enter_sleep_mode *****************
  8143 ;; Defined at:
  8144 ;;		line 202 in file "../src/messages.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;		None
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;		None
  8149 ;; Return value:  Size  Location     Type
  8150 ;;		None               void
  8151 ;; Registers used:
  8152 ;;		None
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8158 ;;      Params:         0       0       0       0       0
  8159 ;;      Locals:         0       0       0       0       0
  8160 ;;      Temps:          0       0       0       0       0
  8161 ;;      Totals:         0       0       0       0       0
  8162 ;;Total ram usage:        0 bytes
  8163 ;; Hardware stack levels used:    1
  8164 ;; This function calls:
  8165 ;;		Nothing
  8166 ;; This function is called by:
  8167 ;;		_SleepIfOkay
  8168 ;; This function uses a non-reentrant model
  8169 ;;
  8170                           
  8171                           	psect	text54
  8172  0018F4                     __ptext54:
  8173                           	opt stack 0
  8174  0018F4                     _enter_sleep_mode:
  8175                           	opt stack 19
  8176                           
  8177                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8178                           
  8179                           ; BSR set to: 0
  8180                           ;incstack = 0
  8181  0018F4  8ED3               	bsf	4051,7,c	;volatile
  8182  0018F6  0003               	sleep		;# 
  8183  0018F8  0012               	return	
  8184  0018FA                     __end_of_enter_sleep_mode:
  8185                           	opt stack 0
  8186  0000                     pclatu	equ	0xFFB
  8187                           pclath	equ	0xFFA
  8188                           tblptru	equ	0xFF8
  8189                           tblptrh	equ	0xFF7
  8190                           tblptrl	equ	0xFF6
  8191                           tablat	equ	0xFF5
  8192                           prodh	equ	0xFF4
  8193                           prodl	equ	0xFF3
  8194                           intcon	equ	0xFF2
  8195                           postinc0	equ	0xFEE
  8196                           fsr0h	equ	0xFEA
  8197                           fsr0l	equ	0xFE9
  8198                           wreg	equ	0xFE8
  8199                           indf1	equ	0xFE7
  8200                           postdec1	equ	0xFE5
  8201                           fsr1h	equ	0xFE2
  8202                           fsr1l	equ	0xFE1
  8203                           bsr	equ	0xFE0
  8204                           indf2	equ	0xFDF
  8205                           postinc2	equ	0xFDE
  8206                           postdec2	equ	0xFDD
  8207                           plusw2	equ	0xFDB
  8208                           fsr2h	equ	0xFDA
  8209                           fsr2l	equ	0xFD9
  8210                           status	equ	0xFD8
  8211                           pclatu	equ	0xFFB
  8212                           pclath	equ	0xFFA
  8213                           tblptru	equ	0xFF8
  8214                           tblptrh	equ	0xFF7
  8215                           tblptrl	equ	0xFF6
  8216                           tablat	equ	0xFF5
  8217                           prodh	equ	0xFF4
  8218                           prodl	equ	0xFF3
  8219                           intcon	equ	0xFF2
  8220                           postinc0	equ	0xFEE
  8221                           fsr0h	equ	0xFEA
  8222                           fsr0l	equ	0xFE9
  8223                           wreg	equ	0xFE8
  8224                           indf1	equ	0xFE7
  8225                           postdec1	equ	0xFE5
  8226                           fsr1h	equ	0xFE2
  8227                           fsr1l	equ	0xFE1
  8228                           bsr	equ	0xFE0
  8229                           indf2	equ	0xFDF
  8230                           postinc2	equ	0xFDE
  8231                           postdec2	equ	0xFDD
  8232                           plusw2	equ	0xFDB
  8233                           fsr2h	equ	0xFDA
  8234                           fsr2l	equ	0xFD9
  8235                           status	equ	0xFD8
  8236                           
  8237                           	psect	param0
  8238  0000                     pclatu	equ	0xFFB
  8239                           pclath	equ	0xFFA
  8240                           tblptru	equ	0xFF8
  8241                           tblptrh	equ	0xFF7
  8242                           tblptrl	equ	0xFF6
  8243                           tablat	equ	0xFF5
  8244                           prodh	equ	0xFF4
  8245                           prodl	equ	0xFF3
  8246                           intcon	equ	0xFF2
  8247                           postinc0	equ	0xFEE
  8248                           fsr0h	equ	0xFEA
  8249                           fsr0l	equ	0xFE9
  8250                           wreg	equ	0xFE8
  8251                           indf1	equ	0xFE7
  8252                           postdec1	equ	0xFE5
  8253                           fsr1h	equ	0xFE2
  8254                           fsr1l	equ	0xFE1
  8255                           bsr	equ	0xFE0
  8256                           indf2	equ	0xFDF
  8257                           postinc2	equ	0xFDE
  8258                           postdec2	equ	0xFDD
  8259                           plusw2	equ	0xFDB
  8260                           fsr2h	equ	0xFDA
  8261                           fsr2l	equ	0xFD9
  8262                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         534
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     44      86
    BANK0           128     81      83
    BANK1           256    118     246
    BANK2           256      0     252
    BANK3           256      0     126

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 126
		 -> FromMainLow_MQ.queue(BANK2[124]), FromMainHigh_MQ.queue(BANK3[124]), ToMainHigh_MQ.queue(BANK2[124]), ToMainLow_MQ.queue(BANK1[124]), 
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 
		 -> main@msgbuffer(BANK1[29]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 126
		 -> FromMainLow_MQ.queue(BANK2[124]), FromMainHigh_MQ.queue(BANK3[124]), ToMainHigh_MQ.queue(BANK2[124]), ToMainLow_MQ.queue(BANK1[124]), 
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 
		 -> main@msgbuffer(BANK1[29]), 

    memcpy@s1	PTR const void  size(2) Largest target is 126
		 -> ToMainLow_MQ.data(BANK1[28]), ToMainHigh_MQ.data(BANK2[28]), FromMainLow_MQ.data(BANK2[28]), FromMainHigh_MQ.data(BANK3[28]), 
		 -> ToMainLow_MQ.queue.data(BANK1[28]), ToMainHigh_MQ.queue.data(BANK2[28]), FromMainHigh_MQ.queue.data(BANK3[28]), FromMainLow_MQ.queue.data(BANK2[28]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), 
		 -> ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), main@t1thread_data(BANK1[2]), main@ic(BANK1[65]), 
		 -> main@uc(BANK1[13]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 126
		 -> ToMainLow_MQ.data(BANK1[28]), ToMainHigh_MQ.data(BANK2[28]), FromMainLow_MQ.data(BANK2[28]), FromMainHigh_MQ.data(BANK3[28]), 
		 -> ToMainLow_MQ.queue.data(BANK1[28]), ToMainHigh_MQ.queue.data(BANK2[28]), FromMainHigh_MQ.queue.data(BANK3[28]), FromMainLow_MQ.queue.data(BANK2[28]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), 
		 -> ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), main@t1thread_data(BANK1[2]), main@ic(BANK1[65]), 
		 -> main@uc(BANK1[13]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    uart_trans@data	PTR unsigned char  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 13
		 -> main@uc(BANK1[13]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 65
		 -> main@ic(BANK1[65]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 65
		 -> NULL(NULL[0]), main@ic(BANK1[65]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 126
		 -> ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 65
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), main@ic(BANK1[65]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 126
		 -> FromMainLow_MQ.queue(BANK2[124]), FromMainHigh_MQ.queue(BANK3[124]), ToMainHigh_MQ.queue(BANK2[124]), ToMainLow_MQ.queue(BANK1[124]), 
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 126
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 

    sp__memcpy	PTR void  size(2) Largest target is 126
		 -> FromMainLow_MQ.queue(BANK2[124]), FromMainHigh_MQ.queue(BANK3[124]), ToMainHigh_MQ.queue(BANK2[124]), ToMainLow_MQ.queue(BANK1[124]), 
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 
		 -> main@msgbuffer(BANK1[29]), 

    send_msg@data	PTR void  size(2) Largest target is 65
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), main@t1thread_data(BANK1[2]), main@ic(BANK1[65]), 
		 -> main@uc(BANK1[13]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 126
		 -> FromMainLow_MQ.queue(BANK2[124]), FromMainHigh_MQ.queue(BANK3[124]), ToMainHigh_MQ.queue(BANK2[124]), ToMainLow_MQ.queue(BANK1[124]), 
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 126
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 126
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _timer0_int_handler->_WriteTimer0
    _i2c_int_handler->_i2c_master_int_handler
    _i2c_master_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               122   122      0    9584
                                              0 BANK1    118   118      0
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
               _i2c_configure_master
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                         _uart_trans
 ---------------------------------------------------------------------------------
 (1) _uart_trans                                           5     3      2      97
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2095
                                             71 BANK0     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     211
                                             45 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    1583
                                             67 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1411
                                             55 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             45 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             49 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      7     3      4     428
                                             45 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             51 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             49 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             47 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1813
                                             69 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1813
                                             69 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1641
                                             55 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     438
                                             45 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      22
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     260
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    2332
                                             27 COMRAM    17    17      0
                    _adc_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2244
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2221
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1943
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   0     0      0      88
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    3396
                                             31 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  0     0      0     121
                         _ConvertADC
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _ConvertADC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    2991
             _i2c_master_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_master_int_handler                              5     5      0    2991
                                             26 BANK0      5     5      0
                 _ToMainHigh_sendmsg
                    _i2c_master_recv
 ---------------------------------------------------------------------------------
 (13) _i2c_master_recv                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    2960
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2347
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_master
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_trans

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
   _timer1_int_handler
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_master_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
       _i2c_master_recv
   _timer0_int_handler
     _ConvertADC
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      7E      10       49.2%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      FC       8       98.4%
BITBANK1           100      0       0       5        0.0%
BANK1              100     76      F6       6       96.1%
BITBANK0            80      0       0       3        0.0%
BANK0               80     51      53       4       64.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2C      56       1       67.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     319      11        0.0%
DATA                 0      0     319      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Mar 03 23:11:05 2014

       _MQ_Main_Willing_to_block 0049                      _SSPSTATbits 000FC7  
      __end_of_ToMainLow_recvmsg 15B4                               bsr 000FE0  
      __end_of_ToMainLow_sendmsg 1796                     __CFG_CP0$OFF 000000  
                            l130 05FE                              l128 05D8  
                            l520 166A                              l517 1650  
                            l519 1668                              l560 0E3E  
                            l561 0E40                              l474 0F76  
                            l554 0E0E                              l493 176A  
                            l494 176C                              l558 0E2E  
                            l559 0E30                              l787 1850  
__size_of_uart_trans_int_handler 0068             __size_of_WriteTimer0 0012  
           __size_of_WriteTimer1 0012                   _FromMainLow_MQ 0200  
                            prod 000FF3                              wreg 000FE8  
                   __CFG_IESO$ON 000000                     ?_in_high_int 00AD  
               ??_init_uart_recv 00AF       i2c_slave_int_handler@F5127 004B  
     i2c_slave_int_handler@F5129 0050                             l1099 0EEC  
                           l2245 14D8                             l2237 14B6  
                           l3233 0586                             l3241 0626  
                           l3225 0544                             l2259 1562  
                           l2531 101A                             l3235 05DE  
                           l2445 1652                             l3253 06FE  
                           l3261 0748                             l2471 0DFA  
                           l2631 1408                             l2543 1072  
                           l3247 0664                             l3239 0602  
                           l2537 1046                             l2617 0A34  
                           l2553 0BF6                             l3257 0744  
                           l3249 06B6                             l2651 090E  
                           l2637 142C                             l2557 0C60  
                           l2479 0E10                             l2583 0804  
                           l2667 09D4                             l2579 0780  
                           l2599 10C2                             l2983 0ED8  
                           l2975 0E8A                             l2977 0E9C  
                           l2979 0EA4                             _LATA 000F89  
                           _LATB 000F8A                             u2687 1852  
                           i1l55 0080                  _FromMainHigh_MQ 0300  
                  __CFG_FCMEN$ON 000000           ?_block_on_To_msgqueues 0001  
                           _main 0470                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                      main@msgtype 01A4  
                     i1_send_msg 0C94                             pclat 000FFA  
                    i2_check_msg 1710                             prodh 000FF4  
                           prodl 000FF3                             start 00C6  
                  __CFG_FOSC2$ON 000000                 ?_adc_int_handler 0001  
                     i2_send_msg 0ADC    __size_of_i2c_configure_master 0020  
      ToMainHigh_recvmsg@msgtype 00C5                   send_msg@length 00B9  
                __end_of_OpenADC 0F7A      __size_of_timer0_int_handler 0018  
                    _Delay1KTCYx 184C                            ?_main 0001  
                          _T0CON 000FD5                            _T1CON 000FCD  
                          i1l411 137E                  __end_of___lwmod 0EF6  
                     i1memcpy@d1 0001                            i2l310 02D0  
                          i2l302 015E                            i2l303 0242  
                          i2l314 041C                            i2l307 025C  
                          i2l308 027A                            i1l572 1824  
                     i1memcpy@s1 0003                            _RCREG 000FAE  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _SPBRG 000FAF  
                          _PORTA 000F80                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TXREG 000FAD                            _TXSTA 000FAC  
                     i2memcpy@d1 0080                       i2memcpy@s1 0082  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
                __end_of_in_main 1572       ToMainLow_recvmsg@maxlength 00C9  
        timer0_lthread@msgbuffer 00B3                       _ConvertADC 18FA  
                          tablat 000FF5                            plusw2 000FDB  
                          status 000FD8           _uart_trans_int_handler 131A  
               __end_ofi1_memcpy 1636                 __end_ofi2_memcpy 14A2  
                __initialization 10F4                     __end_of_main 0762  
    __size_of_timer1_int_handler 000E       __size_of_ToMainLow_recvmsg 0042  
     __size_of_ToMainLow_sendmsg 0026            __size_ofi2_in_low_int 0046  
  __size_of_FromMainHigh_sendmsg 0036                           ??_main 017E  
                send_msg@msgtype 00BA                    __activetblptr 000002  
                send_msg@tlength 00BE                       _SetChanADC 17D8  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         _ADCON2 000FC0                           _ADRESH 000FC4  
        ??_uart_recv_int_handler 001B                           i1l3111 0066  
                         i1l3041 1608                           i1l1269 17A2  
                         i1l3117 0070                           i1l3047 1624  
                         i1l3071 0CCC                           i1l3099 0DBA  
                         i2l3133 0FB4                           i2l3151 12B6  
                         i2l3321 0398                       _OpenTimer0 1746  
                     _OpenTimer1 1636                           i2l3139 0FBE  
                 __CFG_WDTEN$OFF 000000                           i2l3521 151E  
                         i2l3513 14FC                           i2l3329 03EC  
                         i2l3337 0436                           i2l3283 00E6  
                         i2l3295 022A                           i2l3287 011A  
                         i2l3561 148A                           i2l3537 0B38  
                         i2l3555 1466                    ??_SleepIfOkay 0084  
             __size_of_ReadUSART 001E                           _OSCCON 000FD3  
                         _SPBRGH 000FB0                           _SSPADD 000FC8  
                         _SSPBUF 000FC9                      ?i1_send_msg 000B  
             timer0_lthread@tptr 00AD                        ??_OpenADC 00AF  
                   i2_in_low_int 14E8                      ?i2_send_msg 008A  
                 __CFG_XINST$OFF 000000               __size_of_OpenUSART 0092  
                _i2c_int_handler 18EE                  _i2c_master_recv 1382  
                _i2c_master_send 0762                 OpenTimer0@config 00AD  
                         _ic_ptr 00D1                        ??___lwmod 00B1  
                  main@msgbuffer 0182                 __end_of_init_i2c 12B0  
               OpenTimer1@config 00AD                           _memcpy 13E6  
                         clear_0 10FA                           clear_1 1106  
                         clear_2 1112                           clear_3 111E  
                         _uc_ptr 0055                           main@ic 01B3  
                         main@uc 01A5                 __end_of_recv_msg 09D8  
                      ??_in_main 00B3                 __end_of_send_msg 0ADC  
                   __pdataCOMRAM 004B                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 00B0         ToMainLow_recvmsg@msgtype 00C5  
           __size_of_in_high_int 0012                      ?_ConvertADC 0001  
                __CFG_FOSC$HSPLL 000000                       __accesstop 0080  
        __end_of__initialization 115C       __end_of_ToMainHigh_recvmsg 15F6  
     __end_of_ToMainHigh_sendmsg 1710      __end_of_init_timer1_lthread 1886  
            __end_of_SleepIfOkay 131A                   __pcstackCOMRAM 0001  
                   __pidataBANK1 18FE           __size_ofi2_in_high_int 0012  
             __size_of_check_msg 0036                __end_of_ReadUSART 1834  
                    ?_SetChanADC 0001              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 0FF4  
    __end_of_InterruptHandlerLow 00C6                        ?i2_memcpy 0080  
                  _ToMainHigh_MQ 027E                 _enter_sleep_mode 18F4  
            __size_ofi2_send_msg 0104             timer1_lthread@length 00CB  
                  ReadUSART@data 0001                __end_of_OpenUSART 0E6C  
                  check_msg@qptr 00AD             timer1_lthread@retval 00D0  
        ??_block_on_To_msgqueues 00B3             __size_of_init_queues 006E  
                     __pbssBANK1 0100                       __pbssBANK2 0200  
                     __pbssBANK3 0300                      ?_OpenTimer0 0001  
                    ?_OpenTimer1 0001                       __pnvCOMRAM 0055  
        __end_of_i2c_int_handler 18F4                     ?i2_check_msg 0080  
        __end_of_i2c_master_recv 13E6          __end_of_i2c_master_send 08A2  
             timer1_lthread@tptr 00C7         ??_i2c_master_int_handler 009A  
              recv_msg@maxlength 00B9                  recv_msg@msgtype 00BA  
                recv_msg@tlength 00C1                     ?_Delay1KTCYx 0001  
               WriteTimer0@timer 0082                          ?_memcpy 00AD  
               WriteTimer1@timer 0003                    ??_WriteTimer0 0082  
                  ??_WriteTimer1 0003              __size_of_ConvertADC 0004  
        __size_of_timer0_lthread 0012          __size_of_timer1_lthread 0072  
   __end_of_i2c_configure_master 17D8                       ??i1_memcpy 0007  
                     ??i2_memcpy 0086                 i1send_msg@length 000D  
                  i2_in_high_int 18BC                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
        ?_uart_trans_int_handler 0001                __end_of_check_msg 16DA  
                      ?_init_i2c 00AD                      _SleepIfOkay 12B0  
                      ?_recv_msg 00B7                          _OpenADC 0EF6  
                     _in_low_int 14A2                          __Hparam 0000  
            __size_of_SetChanADC 0020                        ?_send_msg 00B7  
                        __Lparam 0000       __end_of_timer0_int_handler 184C  
               init_uart_recv@uc 00AD                          ___lwmod 0E6C  
                __CFG_STVREN$OFF 000000                          __pcinit 10F4  
                __size_of_memcpy 005E         __size_of_adc_int_handler 0022  
                     _init_queue 107A                          __ramtop 0400  
            __size_of_OpenTimer0 002A              __size_of_OpenTimer1 0038  
                        __ptext0 0470                          __ptext1 0BE0  
                        __ptext2 1166                          __ptext3 0E6C  
                        __ptext4 166E                          __ptext5 09D8  
                        __ptext6 1862                          __ptext7 17F8  
                        __ptext8 1874                          __ptext9 11D8  
                      _T0CONbits 000FD5                          _in_main 152E  
                      _T1CONbits 000FCD              __end_of_WriteTimer0 18BC  
            __end_of_WriteTimer1 18AA                   ?i2_in_high_int 0080  
 __end_of_uart_trans_int_handler 1382                   OpenADC@config2 00AD  
                        main@msg 0180                   __pintcode_body 0F7A  
           end_of_initialization 115C          timer1_lthread@msgbuffer 00CD  
   __end_of_FromMainHigh_sendmsg 16A4   __size_of_uart_recv_int_handler 009C  
     FromMainHigh_sendmsg@length 00C6                          memcpy@d 00B3  
                        memcpy@n 00B1                          memcpy@s 00B5  
  __end_of_uart_recv_int_handler 0DDA                       ??_init_i2c 00AF  
                  __Lmediumconst 0000                          int_func 0F7A  
                   ??i1_send_msg 0011          __size_of_init_uart_recv 001E  
               ?_i2c_int_handler 0001                 ?_i2c_master_recv 0001  
               ?_i2c_master_send 00AD                       ??_recv_msg 00BE  
                   ??i2_send_msg 0090                       ??_send_msg 00BD  
__size_of_i2c_master_int_handler 03A6       __end_of_timer1_int_handler 18DC  
                      _RCSTAbits 000FAB                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 0096  
                     _uart_trans 0BE0               __end_ofi1_send_msg 0D3E  
    FromMainHigh_sendmsg@msgtype 00C3                        _TRISCbits 000F94  
             __end_ofi2_send_msg 0BE0                     ??_ConvertADC 0080  
                      _TXSTAbits 000FAC                       main@length 01B2  
                    ?_in_low_int 00AF            timer0_lthread@msgtype 00AF  
           _i2c_configure_master 17B8             __size_ofi2_check_msg 0036  
       __end_of_enter_sleep_mode 18FA               _ToMainHigh_recvmsg 15B4  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 16DA  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
      i2c_master_send@recvlength 00AD                    __pidataCOMRAM 18DC  
                 _timer0_lthread 1862                      ?_init_queue 00AD  
                      i2memcpy@d 0086                      _WriteTimer0 18AA  
                    _WriteTimer1 1898                        i2memcpy@n 0084  
                      i2memcpy@s 0088               __end_of_ConvertADC 18FE  
                 _timer1_lthread 1166                   __end_of_memcpy 1444  
              _enable_interrupts 18E6             __size_of_Delay1KTCYx 0016  
                   ??_SetChanADC 00AD        i2c_master_send@sendlength 00B3  
            ?_ToMainHigh_recvmsg 00C5                  ??i2_in_high_int 0082  
            ?_ToMainHigh_sendmsg 0096               ?_enable_interrupts 0001  
            start_initialization 10F4           _i2c_master_int_handler 00CA  
                  ??_in_high_int 00AF                        _ReadUSART 1816  
              ??_adc_int_handler 0001                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 005E        i2c_master_send@slave_addr 00B0  
            ??_enable_interrupts 00AD                     ??_OpenTimer0 00AD  
                   ??_OpenTimer1 00AD   __size_of_block_on_To_msgqueues 007E  
  __end_of_block_on_To_msgqueues 107A                        _OpenUSART 0DDA  
   __end_of_InterruptHandlerHigh 0FFC                       init_i2c@ic 00AD  
           ??_ToMainHigh_recvmsg 00C9             ??_ToMainHigh_sendmsg 0099  
          ?_i2c_configure_master 0001               __end_of_SetChanADC 17F8  
         __end_of_timer0_lthread 1874                      __pdataBANK1 01F4  
         __end_of_timer1_lthread 11D8        __end_of_enable_interrupts 18EE  
                       ??_memcpy 00B3            timer1_lthread@msgtype 00C9  
                    ?_uart_trans 00AD             _FromMainHigh_sendmsg 166E  
   __size_of_init_timer1_lthread 0012               __end_of_OpenTimer0 1770  
             __end_of_OpenTimer1 166E                      __pbssCOMRAM 002D  
                     ?_ReadUSART 0001                    ??_init_queues 00B1  
                  __pcstackBANK0 0080                    __pcstackBANK1 017E  
            __size_of_in_low_int 0046                        _adcbuffer 002D  
            __CFG_CCP2MX$DEFAULT 000000                  Delay1KTCYx@unit 00AD  
       ToMainLow_sendmsg@msgtype 0017     __size_of_InterruptHandlerLow 00AE  
            __end_of_in_high_int 1898                       ?_OpenUSART 00AD  
                   ?_SleepIfOkay 0001            ToMainLow_recvmsg@data 00C7  
                   _ToMainLow_MQ 0100              __size_of_init_queue 007A  
                 _init_uart_recv 17F8                        _check_msg 16A4  
                      __pnvBANK0 00D1                __size_of_init_i2c 006A  
              OpenADC@portconfig 00AE                         ?_OpenADC 00AD  
                   recv_msg@data 00BC                     recv_msg@qmsg 00C3  
                   recv_msg@slot 00C0                     recv_msg@qptr 00B7  
              __size_of_recv_msg 0136                        __pintcode 0008  
              __size_of_send_msg 0104                  ?_timer0_lthread 00AD  
                       ?___lwmod 00AD                  ?_timer1_lthread 00C7  
          ?_FromMainHigh_sendmsg 00C3                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 00C7                         ?_in_main 00B1  
              WriteTimer0@timer0 0080               _timer0_int_handler 1834  
              WriteTimer1@timer1 0001            ToMainLow_sendmsg@data 0018  
            ?_timer0_int_handler 0001           __end_of_init_uart_recv 1816  
            __end_of_init_queues 1246            i2c_master_recv@length 0080  
            __size_of_uart_trans 00B4                    OpenADC@config 00B1  
                       _LATBbits 000F8A           ??_i2c_configure_master 00AD  
                i2check_msg@qptr 0080                       ?_check_msg 00AD  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                  ?i2_in_low_int 0082                         _PIR1bits 000F9E  
         ToMainHigh_sendmsg@data 0097                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                        main@F5211 01F4  
           ??_timer0_int_handler 0084       __size_of_enable_interrupts 0008  
              i1send_msg@msgtype 000E                i1send_msg@tlength 0012  
                     _ADCON0bits 000FC2             timer0_lthread@length 00B1  
             _timer1_int_handler 18CE                         i1_memcpy 15F6  
           _InterruptHandlerHigh 0008                      ??_ReadUSART 0001  
                       i2_memcpy 1444             timer0_lthread@msgval 00B5  
                    _in_high_int 1886                     send_msg@data 00BB  
                   send_msg@qmsg 00C1                     send_msg@slot 00C0  
                   send_msg@qptr 00B7                        copy_data0 1150  
            ?_timer1_int_handler 0001                  ?_init_uart_recv 00AD  
                    ??_OpenUSART 00AF                  OpenUSART@config 00B2  
                 ??i2_in_low_int 0084                         __Hparam0 0000  
          _uart_recv_int_handler 0D3E                     ??_in_low_int 00B1  
                       __Lparam0 0000                 __size_of_OpenADC 0084  
              ?_enter_sleep_mode 0001           ??_FromMainHigh_sendmsg 00C6  
           ??_timer1_int_handler 0005                  _adc_int_handler 1796  
       __size_of_i2c_int_handler 0006               ??_enter_sleep_mode 0080  
       __size_of_i2c_master_recv 0064         __size_of_i2c_master_send 0140  
               __size_of___lwmod 008A                     ??_init_queue 00AF  
                   ?_WriteTimer0 0080                     ?_WriteTimer1 0001  
       FromMainHigh_sendmsg@data 00C4          ToMainLow_sendmsg@length 001A  
        ?_i2c_master_int_handler 0001                main@t0thread_data 01A0  
          ?_InterruptHandlerHigh 0001                 __size_of_in_main 0044  
              i2send_msg@msgtype 008D      ToMainHigh_recvmsg@maxlength 00C9  
              i2send_msg@tlength 0091          init_timer1_lthread@tptr 00AD  
                    _init_queues 11D8               __end_of_in_low_int 14E8  
                       __ptext10 107A                         __ptext11 1246  
                       __ptext20 184C                         __ptext12 0762  
                       __ptext21 1572                         __ptext13 17B8  
                       __ptext22 15B4                         __ptext14 18E6  
                       __ptext31 131A                         __ptext23 08A2  
                       __ptext15 0FFC                         __ptext32 0D3E  
                       __ptext24 13E6                         __ptext16 152E  
                       __ptext41 1834                         __ptext33 1770  
                       __ptext25 17D8                         __ptext17 14A2  
                       __ptext50 12B0                         __ptext42 18AA  
                       __ptext34 0C94                         __ptext26 0DDA  
                       __ptext18 1886                         __ptext51 14E8  
                       __ptext43 18FA                         __ptext35 15F6  
                       __ptext27 1636                         __ptext19 16A4  
                       __ptext52 18BC                         __ptext44 18EE  
                       __ptext36 1816                         __ptext28 1746  
                       __ptext53 1710                         __ptext45 00CA  
                       __ptext37 18CE                         __ptext29 0EF6  
                       __ptext54 18F4                         __ptext46 1382  
                       __ptext38 1898                         __ptext47 16DA  
                       __ptext39 1796                         __ptext48 0ADC  
                       __ptext49 1444                   i1send_msg@data 000F  
                 i1send_msg@qmsg 0015                   i1send_msg@slot 0014  
                 i1send_msg@qptr 000B                         _init_i2c 1246  
            _init_timer1_lthread 1874                    __size_of_main 02F2  
                  ??i2_check_msg 0082                main@t1thread_data 01A2  
                    ??_check_msg 00AF               __end_of_init_queue 10F4  
           __size_of_SleepIfOkay 006A                         _recv_msg 08A2  
                       _send_msg 09D8                   init_queue@qptr 00AD  
                  ??_Delay1KTCYx 00AD   __end_of_i2c_master_int_handler 0470  
               uart_trans@length 00B1                     ??_uart_trans 00AF  
            _InterruptHandlerLow 0018             ?_init_timer1_lthread 00AD  
       ??_uart_trans_int_handler 0001                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                   OpenUSART@spbrg 00AD  
                       memcpy@d1 00AD                         memcpy@s1 00AF  
          __end_ofi2_in_high_int 18CE                 i2send_msg@length 008C  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001                 ___lwmod@dividend 00AD  
         ?_uart_recv_int_handler 0001               __end_of_uart_trans 0C94  
              SetChanADC@channel 00AE            _block_on_To_msgqueues 0FFC  
               ??_timer0_lthread 00B5      __size_of_ToMainHigh_recvmsg 0042  
        __end_of_adc_int_handler 17B8      __size_of_ToMainHigh_sendmsg 0036  
                     _OSCCONbits 000FD3                 ??_timer1_lthread 00CF  
       ToMainHigh_sendmsg@length 0099              __end_ofi2_check_msg 1746  
          ??_init_timer1_lthread 00AF           ??_InterruptHandlerHigh 009F  
              _ToMainLow_recvmsg 1572                _ToMainLow_sendmsg 1770  
             main@last_reg_recvd 019F                  ___lwmod@divisor 00AF  
           __end_ofi2_in_low_int 152E               ?_ToMainLow_recvmsg 00C5  
            __end_of_Delay1KTCYx 1862                ??_i2c_int_handler 009F  
                ___lwmod@counter 00B2               ?_ToMainLow_sendmsg 0017  
              ??_i2c_master_recv 0080                ??_i2c_master_send 00B1  
             i2c_master_send@msg 00AE                   uart_trans@data 00AD  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                 i2send_msg@data 008E            ??_InterruptHandlerLow 001C  
            ??_ToMainLow_recvmsg 00C9                   i2send_msg@qmsg 0094  
                 i2send_msg@slot 0093                   i2send_msg@qptr 008A  
            ??_ToMainLow_sendmsg 001A                     _USART_Status 004A  
