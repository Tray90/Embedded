

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Mar 04 18:06:47 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    79  0000                     
    80                           	psect	idataBANK0
    81  001FEA                     __pidataBANK0:
    82                           	opt stack 0
    83                           
    84                           ;initializer for i2c_slave_int_handler@F5128
    85  001FEA  01                 	db	1
    86  001FEB  01                 	db	1
    87  001FEC  02                 	db	2
    88  001FED  03                 	db	3
    89  001FEE  06                 	db	6
    90                           
    91                           ;initializer for i2c_slave_int_handler@F5130
    92  001FEF  03                 	db	3
    93  001FF0  04                 	db	4
    94  001FF1  04                 	db	4
    95  001FF2  00                 	db	0
    96  001FF3  00                 	db	0
    97                           
    98                           	psect	idataBANK1
    99  002008                     __pidataBANK1:
   100                           	opt stack 0
   101                           
   102                           ;initializer for main@F5212
   103  002008  01                 	db	1
   104  002009  02                 	db	2
   105  0000                     _ADCON0	set	4034
   106  0000                     _ADCON0bits	set	4034
   107  0000                     _ADCON1	set	4033
   108  0000                     _ADCON2	set	4032
   109  0000                     _ADRESH	set	4036
   110  0000                     _INTCONbits	set	4082
   111  0000                     _IPR1bits	set	3999
   112  0000                     _LATA	set	3977
   113  0000                     _LATB	set	3978
   114  0000                     _LATBbits	set	3978
   115  0000                     _OSCCON	set	4051
   116  0000                     _OSCCONbits	set	4051
   117  0000                     _OSCTUNEbits	set	3995
   118  0000                     _PIE1bits	set	3997
   119  0000                     _PIR1bits	set	3998
   120  0000                     _PORTA	set	3968
   121  0000                     _RCONbits	set	4048
   122  0000                     _RCREG	set	4014
   123  0000                     _RCSTA	set	4011
   124  0000                     _RCSTAbits	set	4011
   125  0000                     _SPBRG	set	4015
   126  0000                     _SPBRGH	set	4016
   127  0000                     _SSPADD	set	4040
   128  0000                     _SSPBUF	set	4041
   129  0000                     _SSPCON1	set	4038
   130  0000                     _SSPCON1bits	set	4038
   131  0000                     _SSPCON2	set	4037
   132  0000                     _SSPCON2bits	set	4037
   133  0000                     _SSPSTAT	set	4039
   134  0000                     _SSPSTATbits	set	4039
   135  0000                     _T0CON	set	4053
   136  0000                     _T0CONbits	set	4053
   137  0000                     _T1CON	set	4045
   138  0000                     _T1CONbits	set	4045
   139  0000                     _TMR0H	set	4055
   140  0000                     _TMR0L	set	4054
   141  0000                     _TMR1H	set	4047
   142  0000                     _TMR1L	set	4046
   143  0000                     _TRISA	set	3986
   144  0000                     _TRISB	set	3987
   145  0000                     _TRISC	set	3988
   146  0000                     _TRISCbits	set	3988
   147  0000                     _TXREG	set	4013
   148  0000                     _TXSTA	set	4012
   149  0000                     _TXSTAbits	set	4012
   150                           
   151                           	psect	nvCOMRAM
   152  000052                     __pnvCOMRAM:
   153                           	opt stack 0
   154  000052                     _uc_ptr:
   155                           	opt stack 0
   156  000052                     	ds	2
   157                           
   158                           	psect	nvBANK0
   159  0000C5                     __pnvBANK0:
   160                           	opt stack 0
   161  0000C5                     _ic_ptr:
   162                           	opt stack 0
   163  0000C5                     	ds	2
   164                           
   165                           ; #config settings
   166  0000                     
   167                           	psect	cinit
   168  001A7E                     __pcinit:
   169                           	opt stack 0
   170  001A7E                     start_initialization:
   171                           	opt stack 0
   172  001A7E                     __initialization:
   173                           	opt stack 0
   174                           
   175                           ; Clear objects allocated to BANK2 (134 bytes)
   176  001A7E  EE02  F000         	lfsr	0,__pbssBANK2
   177  001A82  0E86               	movlw	134
   178  001A84                     clear_0:
   179  001A84  6AEE               	clrf	postinc0,c
   180  001A86  06E8               	decf	wreg,f,c
   181  001A88  E1FD               	bnz	clear_0
   182                           
   183                           ; Clear objects allocated to BANK1 (134 bytes)
   184  001A8A  EE01  F000         	lfsr	0,__pbssBANK1
   185  001A8E  0E86               	movlw	134
   186  001A90                     clear_1:
   187  001A90  6AEE               	clrf	postinc0,c
   188  001A92  06E8               	decf	wreg,f,c
   189  001A94  E1FD               	bnz	clear_1
   190                           
   191                           ; Clear objects allocated to COMRAM (32 bytes)
   192  001A96  EE00  F032         	lfsr	0,__pbssCOMRAM
   193  001A9A  0E20               	movlw	32
   194  001A9C                     clear_2:
   195  001A9C  6AEE               	clrf	postinc0,c
   196  001A9E  06E8               	decf	wreg,f,c
   197  001AA0  E1FD               	bnz	clear_2
   198                           
   199                           ; Initialize objects allocated to BANK1 (2 bytes)
   200                           ; load TBLPTR registers with __pidataBANK1
   201  001AA2  0E08               	movlw	low __pidataBANK1
   202  001AA4  6EF6               	movwf	tblptrl,c
   203  001AA6  0E20               	movlw	high __pidataBANK1
   204  001AA8  6EF7               	movwf	tblptrh,c
   205  001AAA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   206  001AAC  6EF8               	movwf	tblptru,c
   207  001AAE  0009               	tblrd		*+	;fetch initializer
   208  001AB0  CFF5 F1EA          	movff	tablat,__pdataBANK1
   209  001AB4  0009               	tblrd		*+	;fetch initializer
   210  001AB6  CFF5 F1EB          	movff	tablat,__pdataBANK1+1
   211                           
   212                           ; Initialize objects allocated to BANK0 (10 bytes)
   213                           ; load TBLPTR registers with __pidataBANK0
   214  001ABA  0EEA               	movlw	low __pidataBANK0
   215  001ABC  6EF6               	movwf	tblptrl,c
   216  001ABE  0E1F               	movlw	high __pidataBANK0
   217  001AC0  6EF7               	movwf	tblptrh,c
   218  001AC2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   219  001AC4  6EF8               	movwf	tblptru,c
   220  001AC6  EE00  F0BB         	lfsr	0,__pdataBANK0
   221  001ACA  EE10 F00A          	lfsr	1,10
   222  001ACE                     copy_data0:
   223  001ACE  0009               	tblrd		*+
   224  001AD0  CFF5 FFEE          	movff	tablat,postinc0
   225  001AD4  50E5               	movf	postdec1,w,c
   226  001AD6  50E1               	movf	fsr1l,w,c
   227  001AD8  E1FA               	bnz	copy_data0
   228  001ADA                     end_of_initialization:
   229                           	opt stack 0
   230  001ADA                     __end_of__initialization:
   231                           	opt stack 0
   232  001ADA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   233  001ADC  6EF8               	movwf	tblptru,c
   234  001ADE  0100               	movlb	0
   235  001AE0  EFCB  F003         	goto	_main	;jump to C main() function
   236                           tblptru	equ	0xFF8
   237                           tblptrh	equ	0xFF7
   238                           tblptrl	equ	0xFF6
   239                           tablat	equ	0xFF5
   240                           postinc0	equ	0xFEE
   241                           wreg	equ	0xFE8
   242                           postdec1	equ	0xFE5
   243                           fsr1l	equ	0xFE1
   244                           
   245                           	psect	bssCOMRAM
   246  000032                     __pbssCOMRAM:
   247                           	opt stack 0
   248  000032                     _adcbuffer:
   249                           	opt stack 0
   250  000032                     	ds	28
   251  00004E                     _UART_timeout:
   252                           	opt stack 0
   253  00004E                     	ds	2
   254  000050                     _MQ_Main_Willing_to_block:
   255                           	opt stack 0
   256  000050                     	ds	1
   257  000051                     _USART_Status:
   258                           	opt stack 0
   259  000051                     	ds	1
   260                           tblptru	equ	0xFF8
   261                           tblptrh	equ	0xFF7
   262                           tblptrl	equ	0xFF6
   263                           tablat	equ	0xFF5
   264                           postinc0	equ	0xFEE
   265                           wreg	equ	0xFE8
   266                           postdec1	equ	0xFE5
   267                           fsr1l	equ	0xFE1
   268                           
   269                           	psect	dataBANK0
   270  0000BB                     __pdataBANK0:
   271                           	opt stack 0
   272  0000BB                     i2c_slave_int_handler@F5128:
   273                           	opt stack 0
   274  0000BB                     	ds	5
   275  0000C0                     i2c_slave_int_handler@F5130:
   276                           	opt stack 0
   277  0000C0                     	ds	5
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           postdec1	equ	0xFE5
   285                           fsr1l	equ	0xFE1
   286                           
   287                           	psect	bssBANK1
   288  000100                     __pbssBANK1:
   289                           	opt stack 0
   290  000100                     _ToMainHigh_MQ:
   291                           	opt stack 0
   292  000100                     	ds	67
   293  000143                     _ToMainLow_MQ:
   294                           	opt stack 0
   295  000143                     	ds	67
   296                           tblptru	equ	0xFF8
   297                           tblptrh	equ	0xFF7
   298                           tblptrl	equ	0xFF6
   299                           tablat	equ	0xFF5
   300                           postinc0	equ	0xFEE
   301                           wreg	equ	0xFE8
   302                           postdec1	equ	0xFE5
   303                           fsr1l	equ	0xFE1
   304                           
   305                           	psect	dataBANK1
   306  0001EA                     __pdataBANK1:
   307                           	opt stack 0
   308  0001EA                     main@F5212:
   309                           	opt stack 0
   310  0001EA                     	ds	2
   311                           tblptru	equ	0xFF8
   312                           tblptrh	equ	0xFF7
   313                           tblptrl	equ	0xFF6
   314                           tablat	equ	0xFF5
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           postdec1	equ	0xFE5
   318                           fsr1l	equ	0xFE1
   319                           
   320                           	psect	bssBANK2
   321  000200                     __pbssBANK2:
   322                           	opt stack 0
   323  000200                     _FromMainHigh_MQ:
   324                           	opt stack 0
   325  000200                     	ds	67
   326  000243                     _FromMainLow_MQ:
   327                           	opt stack 0
   328  000243                     	ds	67
   329                           tblptru	equ	0xFF8
   330                           tblptrh	equ	0xFF7
   331                           tblptrl	equ	0xFF6
   332                           tablat	equ	0xFF5
   333                           postinc0	equ	0xFEE
   334                           wreg	equ	0xFE8
   335                           postdec1	equ	0xFE5
   336                           fsr1l	equ	0xFE1
   337                           
   338                           	psect	cstackBANK1
   339  000186                     __pcstackBANK1:
   340                           	opt stack 0
   341  000186                     ??_SetChanADC:
   342  000186                     ?_in_high_int:
   343                           	opt stack 0
   344  000186                     ?___awmod:
   345                           	opt stack 0
   346  000186                     ?___lwmod:
   347                           	opt stack 0
   348  000186                     i2c_master_send@recvlength:
   349                           	opt stack 0
   350  000186                     i2c_configure_slave@addr:
   351                           	opt stack 0
   352  000186                     OpenADC@config2:
   353                           	opt stack 0
   354  000186                     OpenTimer0@config:
   355                           	opt stack 0
   356  000186                     OpenTimer1@config:
   357                           	opt stack 0
   358  000186                     Delay1KTCYx@unit:
   359                           	opt stack 0
   360  000186                     init_queue@qptr:
   361                           	opt stack 0
   362  000186                     check_msg@qptr:
   363                           	opt stack 0
   364  000186                     init_i2c@ic:
   365                           	opt stack 0
   366  000186                     init_uart_recv@uc:
   367                           	opt stack 0
   368  000186                     uart_trans@data:
   369                           	opt stack 0
   370  000186                     timer0_lthread@tptr:
   371                           	opt stack 0
   372  000186                     init_timer1_lthread@tptr:
   373                           	opt stack 0
   374  000186                     OpenUSART@spbrg:
   375                           	opt stack 0
   376  000186                     ___awmod@dividend:
   377                           	opt stack 0
   378  000186                     ___lwmod@dividend:
   379                           	opt stack 0
   380  000186                     memcpy@d1:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x0
   384  000186                     	ds	1
   385  000187                     OpenADC@portconfig:
   386                           	opt stack 0
   387  000187                     SetChanADC@channel:
   388                           	opt stack 0
   389  000187                     i2c_master_send@msg:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x1
   393  000187                     	ds	1
   394  000188                     ??_OpenUSART:
   395  000188                     ??_OpenADC:
   396  000188                     ??_uart_trans:
   397  000188                     ??_init_queue:
   398  000188                     ??_check_msg:
   399  000188                     ?_in_low_int:
   400                           	opt stack 0
   401  000188                     timer0_lthread@msgtype:
   402                           	opt stack 0
   403  000188                     ___awmod@divisor:
   404                           	opt stack 0
   405  000188                     ___lwmod@divisor:
   406                           	opt stack 0
   407  000188                     memcpy@s1:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x2
   411  000188                     	ds	1
   412  000189                     init_queue@i:
   413                           	opt stack 0
   414  000189                     i2c_master_send@slave_addr:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x3
   418  000189                     	ds	1
   419  00018A                     ??_init_queues:
   420  00018A                     ??_i2c_master_send:
   421  00018A                     ??___awmod:
   422  00018A                     ??___lwmod:
   423  00018A                     ?_in_main:
   424                           	opt stack 0
   425  00018A                     uart_trans@length:
   426                           	opt stack 0
   427  00018A                     OpenADC@config:
   428                           	opt stack 0
   429  00018A                     timer0_lthread@length:
   430                           	opt stack 0
   431  00018A                     memcpy@n:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x4
   435  00018A                     	ds	1
   436  00018B                     OpenUSART@config:
   437                           	opt stack 0
   438  00018B                     ___awmod@counter:
   439                           	opt stack 0
   440  00018B                     ___lwmod@counter:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x5
   444  00018B                     	ds	1
   445  00018C                     ??_block_on_To_msgqueues:
   446  00018C                     i2c_master_send@sendlength:
   447                           	opt stack 0
   448  00018C                     ___awmod@sign:
   449                           	opt stack 0
   450  00018C                     timer0_lthread@msgbuffer:
   451                           	opt stack 0
   452  00018C                     memcpy@d:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x6
   456  00018C                     	ds	2
   457  00018E                     timer0_lthread@msgval:
   458                           	opt stack 0
   459  00018E                     memcpy@s:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x8
   463  00018E                     	ds	2
   464  000190                     send_msg@qptr:
   465                           	opt stack 0
   466  000190                     recv_msg@qptr:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0xA
   470  000190                     	ds	2
   471  000192                     send_msg@length:
   472                           	opt stack 0
   473  000192                     recv_msg@maxlength:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0xC
   477  000192                     	ds	1
   478  000193                     send_msg@msgtype:
   479                           	opt stack 0
   480  000193                     recv_msg@msgtype:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0xD
   484  000193                     	ds	1
   485  000194                     send_msg@data:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0xE
   489  000194                     	ds	1
   490  000195                     recv_msg@data:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0xF
   494  000195                     	ds	1
   495  000196                     ??_send_msg:
   496                           
   497                           ; 0 bytes @ 0x10
   498  000196                     	ds	1
   499  000197                     ??_recv_msg:
   500  000197                     send_msg@tlength:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x11
   504  000197                     	ds	2
   505  000199                     send_msg@slot:
   506                           	opt stack 0
   507  000199                     recv_msg@slot:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x13
   511  000199                     	ds	1
   512  00019A                     send_msg@qmsg:
   513                           	opt stack 0
   514  00019A                     recv_msg@tlength:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x14
   518  00019A                     	ds	2
   519  00019C                     FromMainHigh_sendmsg@msgtype:
   520                           	opt stack 0
   521  00019C                     recv_msg@qmsg:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x16
   525  00019C                     	ds	1
   526  00019D                     FromMainHigh_sendmsg@data:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x17
   530  00019D                     	ds	1
   531  00019E                     ToMainLow_recvmsg@msgtype:
   532                           	opt stack 0
   533  00019E                     ToMainHigh_recvmsg@msgtype:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x18
   537  00019E                     	ds	1
   538  00019F                     FromMainHigh_sendmsg@length:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0x19
   542  00019F                     	ds	1
   543  0001A0                     ToMainLow_recvmsg@data:
   544                           	opt stack 0
   545  0001A0                     ToMainHigh_recvmsg@data:
   546                           	opt stack 0
   547  0001A0                     timer1_lthread@tptr:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x1A
   551  0001A0                     	ds	2
   552  0001A2                     ToMainLow_recvmsg@maxlength:
   553                           	opt stack 0
   554  0001A2                     ToMainHigh_recvmsg@maxlength:
   555                           	opt stack 0
   556  0001A2                     timer1_lthread@msgtype:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x1C
   560  0001A2                     	ds	2
   561  0001A4                     timer1_lthread@length:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x1E
   565  0001A4                     	ds	2
   566  0001A6                     timer1_lthread@msgbuffer:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x20
   570  0001A6                     	ds	2
   571  0001A8                     ??_timer1_lthread:
   572                           
   573                           ; 0 bytes @ 0x22
   574  0001A8                     	ds	1
   575  0001A9                     timer1_lthread@retval:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x23
   579  0001A9                     	ds	1
   580  0001AA                     ??_main:
   581                           
   582                           ; 0 bytes @ 0x24
   583  0001AA                     	ds	2
   584  0001AC                     main@msg:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x26
   588  0001AC                     	ds	2
   589  0001AE                     main@last_reg_recvd:
   590                           	opt stack 0
   591                           
   592                           ; 1 bytes @ 0x28
   593  0001AE                     	ds	1
   594  0001AF                     main@msgbuffer:
   595                           	opt stack 0
   596                           
   597                           ; 11 bytes @ 0x29
   598  0001AF                     	ds	11
   599  0001BA                     main@t0thread_data:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x34
   603  0001BA                     	ds	2
   604  0001BC                     main@t1thread_data:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0x36
   608  0001BC                     	ds	2
   609  0001BE                     main@msgtype:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x38
   613  0001BE                     	ds	1
   614  0001BF                     main@length:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x39
   618  0001BF                     	ds	1
   619  0001C0                     main@uc:
   620                           	opt stack 0
   621                           
   622                           ; 13 bytes @ 0x3A
   623  0001C0                     	ds	13
   624  0001CD                     main@ic:
   625                           	opt stack 0
   626                           
   627                           ; 29 bytes @ 0x47
   628  0001CD                     	ds	29
   629                           tblptru	equ	0xFF8
   630                           tblptrh	equ	0xFF7
   631                           tblptrl	equ	0xFF6
   632                           tablat	equ	0xFF5
   633                           postinc0	equ	0xFEE
   634                           wreg	equ	0xFE8
   635                           postdec1	equ	0xFE5
   636                           fsr1l	equ	0xFE1
   637                           
   638                           	psect	cstackBANK0
   639  000080                     __pcstackBANK0:
   640                           	opt stack 0
   641  000080                     i2___awmod@counter:
   642                           	opt stack 0
   643  000080                     i2memcpy@d1:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x0
   647  000080                     	ds	1
   648  000081                     i2___awmod@sign:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x1
   652  000081                     	ds	1
   653  000082                     i2memcpy@s1:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x2
   657  000082                     	ds	2
   658  000084                     i2memcpy@n:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x4
   662  000084                     	ds	2
   663  000086                     i2send_msg@qptr:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0x6
   667  000086                     	ds	2
   668  000088                     i2send_msg@length:
   669                           	opt stack 0
   670                           
   671                           ; 1 bytes @ 0x8
   672  000088                     	ds	1
   673  000089                     i2send_msg@msgtype:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x9
   677  000089                     	ds	1
   678  00008A                     i2send_msg@data:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0xA
   682  00008A                     	ds	2
   683  00008C                     ??i2_send_msg:
   684                           
   685                           ; 0 bytes @ 0xC
   686  00008C                     	ds	1
   687  00008D                     i2send_msg@tlength:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0xD
   691  00008D                     	ds	2
   692  00008F                     i2send_msg@slot:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0xF
   696  00008F                     	ds	1
   697  000090                     i2send_msg@qmsg:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0x10
   701  000090                     	ds	2
   702  000092                     ToMainHigh_sendmsg@msgtype:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0x12
   706  000092                     	ds	1
   707  000093                     ToMainHigh_sendmsg@data:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x13
   711  000093                     	ds	2
   712  000095                     ToMainHigh_sendmsg@length:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0x15
   716  000095                     	ds	1
   717  000096                     ??_i2c_slave_int_handler:
   718                           
   719                           ; 0 bytes @ 0x16
   720  000096                     	ds	2
   721  000098                     i2c_slave_int_handler@sensormsg:
   722                           	opt stack 0
   723                           
   724                           ; 5 bytes @ 0x18
   725  000098                     	ds	5
   726  00009D                     i2c_slave_int_handler@motormsg:
   727                           	opt stack 0
   728                           
   729                           ; 5 bytes @ 0x1D
   730  00009D                     	ds	5
   731  0000A2                     i2c_slave_int_handler@error_buf:
   732                           	opt stack 0
   733                           
   734                           ; 3 bytes @ 0x22
   735  0000A2                     	ds	3
   736  0000A5                     i2c_slave_int_handler@data_written:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x25
   740  0000A5                     	ds	1
   741  0000A6                     i2c_slave_int_handler@overrun_error:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x26
   745  0000A6                     	ds	1
   746  0000A7                     i2c_slave_int_handler@i2c_data:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x27
   750  0000A7                     	ds	1
   751  0000A8                     i2c_slave_int_handler@msg_to_send:
   752                           	opt stack 0
   753                           
   754                           ; 1 bytes @ 0x28
   755  0000A8                     	ds	1
   756  0000A9                     i2c_slave_int_handler@length:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x29
   760  0000A9                     	ds	2
   761  0000AB                     i2c_slave_int_handler@msg_ready:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x2B
   765  0000AB                     	ds	1
   766  0000AC                     i2c_slave_int_handler@data_read:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x2C
   770  0000AC                     	ds	1
   771  0000AD                     ??_InterruptHandlerHigh:
   772                           
   773                           ; 0 bytes @ 0x2D
   774  0000AD                     	ds	14
   775                           tblptru	equ	0xFF8
   776                           tblptrh	equ	0xFF7
   777                           tblptrl	equ	0xFF6
   778                           tablat	equ	0xFF5
   779                           postinc0	equ	0xFEE
   780                           wreg	equ	0xFE8
   781                           postdec1	equ	0xFE5
   782                           fsr1l	equ	0xFE1
   783                           
   784                           	psect	cstackCOMRAM
   785  000001                     __pcstackCOMRAM:
   786                           	opt stack 0
   787  000001                     ??_uart_trans_int_handler:
   788  000001                     ?i1___awmod:
   789                           	opt stack 0
   790  000001                     ReadUSART@data:
   791                           	opt stack 0
   792  000001                     WriteTimer1@timer1:
   793                           	opt stack 0
   794  000001                     i1memcpy@d1:
   795                           	opt stack 0
   796  000001                     i1___awmod@dividend:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x0
   800  000001                     	ds	2
   801  000003                     WriteTimer1@timer:
   802                           	opt stack 0
   803  000003                     i1memcpy@s1:
   804                           	opt stack 0
   805  000003                     i1___awmod@divisor:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x2
   809  000003                     	ds	2
   810  000005                     ??i1___awmod:
   811  000005                     i1memcpy@n:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x4
   815  000005                     	ds	1
   816  000006                     i1___awmod@counter:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0x5
   820  000006                     	ds	1
   821  000007                     i1___awmod@sign:
   822                           	opt stack 0
   823  000007                     i1memcpy@d:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x6
   827  000007                     	ds	2
   828  000009                     i1memcpy@s:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x8
   832  000009                     	ds	2
   833  00000B                     i1send_msg@qptr:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0xA
   837  00000B                     	ds	2
   838  00000D                     i1send_msg@length:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0xC
   842  00000D                     	ds	1
   843  00000E                     i1send_msg@msgtype:
   844                           	opt stack 0
   845                           
   846                           ; 1 bytes @ 0xD
   847  00000E                     	ds	1
   848  00000F                     i1send_msg@data:
   849                           	opt stack 0
   850                           
   851                           ; 2 bytes @ 0xE
   852  00000F                     	ds	2
   853  000011                     ??i1_send_msg:
   854                           
   855                           ; 0 bytes @ 0x10
   856  000011                     	ds	1
   857  000012                     i1send_msg@tlength:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x11
   861  000012                     	ds	2
   862  000014                     i1send_msg@slot:
   863                           	opt stack 0
   864                           
   865                           ; 1 bytes @ 0x13
   866  000014                     	ds	1
   867  000015                     i1send_msg@qmsg:
   868                           	opt stack 0
   869                           
   870                           ; 2 bytes @ 0x14
   871  000015                     	ds	2
   872  000017                     ToMainLow_sendmsg@msgtype:
   873                           	opt stack 0
   874                           
   875                           ; 1 bytes @ 0x16
   876  000017                     	ds	1
   877  000018                     ToMainLow_sendmsg@data:
   878                           	opt stack 0
   879                           
   880                           ; 2 bytes @ 0x17
   881  000018                     	ds	2
   882  00001A                     ToMainLow_sendmsg@length:
   883                           	opt stack 0
   884                           
   885                           ; 1 bytes @ 0x19
   886  00001A                     	ds	1
   887  00001B                     ??_uart_recv_int_handler:
   888                           
   889                           ; 0 bytes @ 0x1A
   890  00001B                     	ds	1
   891  00001C                     ??_InterruptHandlerLow:
   892                           
   893                           ; 0 bytes @ 0x1B
   894  00001C                     	ds	17
   895  00002D                     ?i2_in_high_int:
   896                           	opt stack 0
   897  00002D                     ?i2___awmod:
   898                           	opt stack 0
   899  00002D                     handle_start@data_read:
   900                           	opt stack 0
   901  00002D                     start_i2c_slave_reply@msg:
   902                           	opt stack 0
   903  00002D                     WriteTimer0@timer0:
   904                           	opt stack 0
   905  00002D                     i2check_msg@qptr:
   906                           	opt stack 0
   907  00002D                     i2memcpy@d:
   908                           	opt stack 0
   909  00002D                     i2___awmod@dividend:
   910                           	opt stack 0
   911                           
   912                           ; 2 bytes @ 0x2C
   913  00002D                     	ds	2
   914  00002F                     ??_start_i2c_slave_reply:
   915  00002F                     ??i2_check_msg:
   916  00002F                     ?i2_in_low_int:
   917                           	opt stack 0
   918  00002F                     WriteTimer0@timer:
   919                           	opt stack 0
   920  00002F                     i2memcpy@s:
   921                           	opt stack 0
   922  00002F                     i2___awmod@divisor:
   923                           	opt stack 0
   924                           
   925                           ; 2 bytes @ 0x2E
   926  00002F                     	ds	2
   927  000031                     ??i2___awmod:
   928  000031                     start_i2c_slave_reply@length:
   929                           	opt stack 0
   930                           
   931                           ; 1 bytes @ 0x30
   932  000031                     	ds	1
   933  000032                     tblptru	equ	0xFF8
   934                           tblptrh	equ	0xFF7
   935                           tblptrl	equ	0xFF6
   936                           tablat	equ	0xFF5
   937                           postinc0	equ	0xFEE
   938                           wreg	equ	0xFE8
   939                           postdec1	equ	0xFE5
   940                           fsr1l	equ	0xFE1
   941                           
   942                           ; 0 bytes @ 0x31
   943 ;;
   944 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   945 ;;
   946 ;; *************** function _main *****************
   947 ;; Defined at:
   948 ;;		line 186 in file "../src/main.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  ic             29   71[BANK1 ] struct __i2c_comm
   953 ;;  uc             13   58[BANK1 ] struct __uart_comm
   954 ;;  msgbuffer      11   41[BANK1 ] unsigned char [11]
   955 ;;  t1thread_dat    2   54[BANK1 ] struct __timer1_thread_s
   956 ;;  t0thread_dat    2   52[BANK1 ] struct __timer0_thread_s
   957 ;;  msg             2   38[BANK1 ] unsigned char [2]
   958 ;;  uthread_data    2    0        struct __uart_thread_str
   959 ;;  length          1   57[BANK1 ] char 
   960 ;;  msgtype         1   56[BANK1 ] unsigned char 
   961 ;;  last_reg_rec    1   40[BANK1 ] unsigned char 
   962 ;;  i               1    0        unsigned char 
   963 ;;  c               1    0        unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;		None               void
   966 ;; Registers used:
   967 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   973 ;;      Params:         0       0       0       0       0
   974 ;;      Locals:         0       0      62       0       0
   975 ;;      Temps:          0       0       2       0       0
   976 ;;      Totals:         0       0      64       0       0
   977 ;;Total ram usage:       64 bytes
   978 ;; Hardware stack levels required when called:   15
   979 ;; This function calls:
   980 ;;		_OpenADC
   981 ;;		_OpenTimer0
   982 ;;		_OpenTimer1
   983 ;;		_OpenUSART
   984 ;;		_SetChanADC
   985 ;;		_ToMainHigh_recvmsg
   986 ;;		_ToMainLow_recvmsg
   987 ;;		_block_on_To_msgqueues
   988 ;;		_enable_interrupts
   989 ;;		_i2c_configure_slave
   990 ;;		_i2c_master_send
   991 ;;		_init_i2c
   992 ;;		_init_queues
   993 ;;		_init_timer1_lthread
   994 ;;		_init_uart_recv
   995 ;;		_timer0_lthread
   996 ;;		_timer1_lthread
   997 ;;		_uart_trans
   998 ;; This function is called by:
   999 ;;		Startup code after reset
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text0
  1004  000796                     __ptext0:
  1005                           	opt stack 0
  1006  000796                     _main:
  1007                           	opt stack 16
  1008                           
  1009                           ;main.c: 187: char c;
  1010                           ;main.c: 188: signed char length;
  1011                           ;main.c: 189: unsigned char msgtype;
  1012                           ;main.c: 190: unsigned char last_reg_recvd;
  1013                           ;main.c: 191: uart_comm uc;
  1014                           ;main.c: 192: i2c_comm ic;
  1015                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
  1016                           ;main.c: 194: unsigned char i;
  1017                           ;main.c: 195: uart_thread_struct uthread_data;
  1018                           ;main.c: 196: timer1_thread_struct t1thread_data;
  1019                           ;main.c: 197: timer0_thread_struct t0thread_data;
  1020                           ;main.c: 205: OSCCON = 0x82;
  1021                           
  1022                           ;incstack = 0
  1023  000796  0E82               	movlw	130
  1024  000798  6ED3               	movwf	4051,c	;volatile
  1025                           
  1026                           ;main.c: 206: OSCTUNEbits.PLLEN = 0;
  1027  00079A  9C9B               	bcf	3995,6,c	;volatile
  1028                           
  1029                           ;main.c: 224: init_uart_recv(&uc);
  1030  00079C  0101               	movlb	1	; () banked
  1031  00079E  0E01               	movlw	high main@uc
  1032  0007A0  0101               	movlb	1	; () banked
  1033  0007A2  0101               	movlb	1	; () banked
  1034  0007A4  6F87               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1035  0007A6  0101               	movlb	1	; () banked
  1036  0007A8  0EC0               	movlw	low main@uc
  1037  0007AA  0101               	movlb	1	; () banked
  1038  0007AC  0101               	movlb	1	; () banked
  1039  0007AE  6F86               	movwf	init_uart_recv@uc& (0+255),b
  1040  0007B0  EC89  F00F         	call	_init_uart_recv	;wreg free
  1041                           
  1042                           ;main.c: 227: init_i2c(&ic);
  1043  0007B4  0101               	movlb	1	; () banked
  1044  0007B6  0E01               	movlw	high main@ic
  1045  0007B8  0101               	movlb	1	; () banked
  1046  0007BA  0101               	movlb	1	; () banked
  1047  0007BC  6F87               	movwf	(init_i2c@ic+1)& (0+255),b
  1048  0007BE  0101               	movlb	1	; () banked
  1049  0007C0  0ECD               	movlw	low main@ic
  1050  0007C2  0101               	movlb	1	; () banked
  1051  0007C4  0101               	movlb	1	; () banked
  1052  0007C6  6F86               	movwf	init_i2c@ic& (0+255),b
  1053  0007C8  ECD6  F00C         	call	_init_i2c	;wreg free
  1054                           
  1055                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1056  0007CC  0101               	movlb	1	; () banked
  1057  0007CE  0E01               	movlw	high main@t1thread_data
  1058  0007D0  0101               	movlb	1	; () banked
  1059  0007D2  0101               	movlb	1	; () banked
  1060  0007D4  6F87               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1061  0007D6  0101               	movlb	1	; () banked
  1062  0007D8  0EBC               	movlw	low main@t1thread_data
  1063  0007DA  0101               	movlb	1	; () banked
  1064  0007DC  0101               	movlb	1	; () banked
  1065  0007DE  6F86               	movwf	init_timer1_lthread@tptr& (0+255),b
  1066  0007E0  ECBB  F00F         	call	_init_timer1_lthread	;wreg free
  1067                           
  1068                           ;main.c: 233: init_queues();
  1069  0007E4  EC9F  F00C         	call	_init_queues	;wreg free
  1070                           
  1071                           ;main.c: 237: TRISB = 0x0;
  1072  0007E8  0E00               	movlw	0
  1073  0007EA  6E93               	movwf	3987,c	;volatile
  1074                           
  1075                           ;main.c: 238: LATB = 0x0;
  1076  0007EC  0E00               	movlw	0
  1077  0007EE  6E8A               	movwf	3978,c	;volatile
  1078                           
  1079                           ;main.c: 240: PORTA = 0x0;
  1080  0007F0  0E00               	movlw	0
  1081  0007F2  6E80               	movwf	3968,c	;volatile
  1082                           
  1083                           ;main.c: 241: LATA = 0x0;
  1084  0007F4  0E00               	movlw	0
  1085  0007F6  6E89               	movwf	3977,c	;volatile
  1086                           
  1087                           ;main.c: 242: TRISA = 0x0F;
  1088  0007F8  0E0F               	movlw	15
  1089  0007FA  6E92               	movwf	3986,c	;volatile
  1090                           
  1091                           ;main.c: 255: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110101);
  1092  0007FC  0ED5               	movlw	213
  1093  0007FE  EC1A  F00F         	call	_OpenTimer0
  1094                           
  1095                           ;main.c: 264: OpenTimer1(0b11111111 & 0b10111111 & 0b11001111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1096  000802  0E85               	movlw	133
  1097  000804  EC96  F00E         	call	_OpenTimer1
  1098                           
  1099                           ;main.c: 272: IPR1bits.ADIP = 0;
  1100  000808  9C9F               	bcf	3999,6,c	;volatile
  1101                           
  1102                           ;main.c: 273: PIE1bits.ADIE = 1;
  1103  00080A  8C9D               	bsf	3997,6,c	;volatile
  1104                           
  1105                           ;main.c: 275: IPR1bits.TMR1IP = 0;
  1106  00080C  909F               	bcf	3999,0,c	;volatile
  1107                           
  1108                           ;main.c: 277: IPR1bits.RCIP = 0;
  1109  00080E  9A9F               	bcf	3999,5,c	;volatile
  1110                           
  1111                           ;main.c: 279: IPR1bits.TXIP = 0;
  1112  000810  989F               	bcf	3999,4,c	;volatile
  1113                           
  1114                           ;main.c: 281: IPR1bits.SSPIP = 1;
  1115  000812  869F               	bsf	3999,3,c	;volatile
  1116                           
  1117                           ;main.c: 298: i2c_configure_slave(0xBE);
  1118  000814  0EBE               	movlw	190
  1119  000816  EC2F  F00F         	call	_i2c_configure_slave
  1120                           
  1121                           ;main.c: 317: PIE1bits.SSPIE = 1;
  1122  00081A  869D               	bsf	3997,3,c	;volatile
  1123                           
  1124                           ;main.c: 328: OpenUSART(0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1125                           ;main.c: 329: 0b11111111 & 0b11111111, 38);
  1126  00081C  0E00               	movlw	0
  1127  00081E  0101               	movlb	1	; () banked
  1128  000820  0101               	movlb	1	; () banked
  1129  000822  6F87               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1130  000824  0E26               	movlw	38
  1131  000826  0101               	movlb	1	; () banked
  1132  000828  6F86               	movwf	OpenUSART@spbrg& (0+255),b
  1133  00082A  0EFC               	movlw	252
  1134  00082C  ECD9  F00A         	call	_OpenUSART
  1135                           
  1136                           ;main.c: 330: RCSTAbits.SPEN = 1;
  1137  000830  8EAB               	bsf	4011,7,c	;volatile
  1138                           
  1139                           ;main.c: 331: TRISC = 0xFF;
  1140  000832  6894               	setf	3988,c	;volatile
  1141                           
  1142                           ;main.c: 338: enable_interrupts();
  1143  000834  ECFA  F00F         	call	_enable_interrupts	;wreg free
  1144                           
  1145                           ;main.c: 352: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1146                           ;main.c: 353: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1147                           ;main.c: 354: 0b1011);
  1148  000838  0101               	movlb	1	; () banked
  1149  00083A  6FAA               	movwf	??_main& (0+255),b
  1150  00083C  0E0C               	movlw	12
  1151  00083E  0101               	movlb	1	; () banked
  1152  000840  0101               	movlb	1	; () banked
  1153  000842  6F86               	movwf	OpenADC@config2& (0+255),b
  1154  000844  0101               	movlb	1	; () banked
  1155  000846  51AA               	movf	??_main& (0+255),w,b
  1156  000848  0101               	movlb	1	; () banked
  1157  00084A  6FAB               	movwf	(??_main+1)& (0+255),b
  1158  00084C  0E0B               	movlw	11
  1159  00084E  0101               	movlb	1	; () banked
  1160  000850  0101               	movlb	1	; () banked
  1161  000852  6F87               	movwf	OpenADC@portconfig& (0+255),b
  1162  000854  0101               	movlb	1	; () banked
  1163  000856  51AB               	movf	(??_main+1)& (0+255),w,b
  1164  000858  0E53               	movlw	83
  1165  00085A  EC67  F00B         	call	_OpenADC
  1166                           
  1167                           ;main.c: 355: SetChanADC(0b10001111);
  1168  00085E  0E8F               	movlw	143
  1169  000860  EC79  F00F         	call	_SetChanADC
  1170                           
  1171                           ;main.c: 366: unsigned char msg[2] = {0x01, 0x02};
  1172  000864  C1EA  F1AC         	movff	main@F5212,main@msg
  1173  000868  C1EB  F1AD         	movff	main@F5212+1,main@msg+1
  1174  00086C                     l3645:
  1175                           
  1176                           ;main.c: 377: block_on_To_msgqueues();
  1177  00086C  ECEA  F00B         	call	_block_on_To_msgqueues	;wreg free
  1178                           
  1179                           ;main.c: 384: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1180  000870  0101               	movlb	1	; () banked
  1181  000872  0E01               	movlw	high main@msgtype
  1182  000874  0101               	movlb	1	; () banked
  1183  000876  0101               	movlb	1	; () banked
  1184  000878  6F9F               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1185  00087A  0101               	movlb	1	; () banked
  1186  00087C  0EBE               	movlw	low main@msgtype
  1187  00087E  0101               	movlb	1	; () banked
  1188  000880  0101               	movlb	1	; () banked
  1189  000882  6F9E               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1190  000884  0101               	movlb	1	; () banked
  1191  000886  0E01               	movlw	high main@msgbuffer
  1192  000888  0101               	movlb	1	; () banked
  1193  00088A  0101               	movlb	1	; () banked
  1194  00088C  6FA1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1195  00088E  0101               	movlb	1	; () banked
  1196  000890  0EAF               	movlw	low main@msgbuffer
  1197  000892  0101               	movlb	1	; () banked
  1198  000894  0101               	movlb	1	; () banked
  1199  000896  6FA0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1200  000898  0E0A               	movlw	10
  1201  00089A  EC55  F00E         	call	_ToMainHigh_recvmsg
  1202  00089E  0101               	movlb	1	; () banked
  1203  0008A0  0101               	movlb	1	; () banked
  1204  0008A2  6FBF               	movwf	main@length& (0+255),b
  1205                           
  1206                           ; BSR set to: 1
  1207                           ;main.c: 385: if (length < 0) {
  1208  0008A4  0101               	movlb	1	; () banked
  1209  0008A6  0101               	movlb	1	; () banked
  1210  0008A8  BFBF               	btfsc	main@length& (0+255),7,b
  1211  0008AA  D04D               	goto	l3661
  1212  0008AC  D03C               	goto	l3659
  1213  0008AE                     l3653:
  1214                           
  1215                           ; BSR set to: 1
  1216                           ;main.c: 393: {
  1217                           ;main.c: 394: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1218  0008AE  0101               	movlb	1	; () banked
  1219  0008B0  0E01               	movlw	high main@t0thread_data
  1220  0008B2  0101               	movlb	1	; () banked
  1221  0008B4  0101               	movlb	1	; () banked
  1222  0008B6  6F87               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1223  0008B8  0101               	movlb	1	; () banked
  1224  0008BA  0EBA               	movlw	low main@t0thread_data
  1225  0008BC  0101               	movlb	1	; () banked
  1226  0008BE  0101               	movlb	1	; () banked
  1227  0008C0  6F86               	movwf	timer0_lthread@tptr& (0+255),b
  1228  0008C2  0101               	movlb	1	; () banked
  1229  0008C4  0101               	movlb	1	; () banked
  1230  0008C6  C1BE  F188         	movff	main@msgtype,timer0_lthread@msgtype
  1231  0008CA  0101               	movlb	1	; () banked
  1232  0008CC  0101               	movlb	1	; () banked
  1233  0008CE  6B89               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1234  0008D0  0101               	movlb	1	; () banked
  1235  0008D2  0101               	movlb	1	; () banked
  1236  0008D4  51BF               	movf	main@length& (0+255),w,b
  1237  0008D6  0101               	movlb	1	; () banked
  1238  0008D8  0101               	movlb	1	; () banked
  1239  0008DA  6F8A               	movwf	timer0_lthread@length& (0+255),b
  1240  0008DC  0101               	movlb	1	; () banked
  1241  0008DE  6B8B               	clrf	(timer0_lthread@length+1)& (0+255),b
  1242  0008E0  0101               	movlb	1	; () banked
  1243  0008E2  BF8A               	btfsc	timer0_lthread@length& (0+255),7,b
  1244  0008E4  078B               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1245  0008E6  0101               	movlb	1	; () banked
  1246  0008E8  0E01               	movlw	high main@msgbuffer
  1247  0008EA  0101               	movlb	1	; () banked
  1248  0008EC  0101               	movlb	1	; () banked
  1249  0008EE  6F8D               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1250  0008F0  0101               	movlb	1	; () banked
  1251  0008F2  0EAF               	movlw	low main@msgbuffer
  1252  0008F4  0101               	movlb	1	; () banked
  1253  0008F6  0101               	movlb	1	; () banked
  1254  0008F8  6F8C               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1255  0008FA  ECB2  F00F         	call	_timer0_lthread	;wreg free
  1256                           
  1257                           ;main.c: 395: break;
  1258  0008FE  D023               	goto	l3661
  1259  000900                     l132:
  1260                           
  1261                           ;main.c: 398: case 41:
  1262                           ;main.c: 399: {
  1263                           ;main.c: 402: last_reg_recvd = msgbuffer[0];
  1264  000900  C1AF  F1AE         	movff	main@msgbuffer,main@last_reg_recvd
  1265                           
  1266                           ;main.c: 403: break;
  1267  000904  D020               	goto	l3661
  1268  000906                     l3655:
  1269                           
  1270                           ;main.c: 406: {
  1271                           ;main.c: 409: uart_trans(length, msgbuffer);
  1272  000906  0101               	movlb	1	; () banked
  1273  000908  0E01               	movlw	high main@msgbuffer
  1274  00090A  0101               	movlb	1	; () banked
  1275  00090C  0101               	movlb	1	; () banked
  1276  00090E  6F87               	movwf	(uart_trans@data+1)& (0+255),b
  1277  000910  0101               	movlb	1	; () banked
  1278  000912  0EAF               	movlw	low main@msgbuffer
  1279  000914  0101               	movlb	1	; () banked
  1280  000916  0101               	movlb	1	; () banked
  1281  000918  6F86               	movwf	uart_trans@data& (0+255),b
  1282  00091A  0101               	movlb	1	; () banked
  1283  00091C  0101               	movlb	1	; () banked
  1284  00091E  51BF               	movf	main@length& (0+255),w,b
  1285  000920  ECD7  F009         	call	_uart_trans
  1286                           
  1287                           ;main.c: 412: break;
  1288  000924  D010               	goto	l3661
  1289  000926                     l3659:
  1290  000926  0101               	movlb	1	; () banked
  1291  000928  0101               	movlb	1	; () banked
  1292  00092A  51BE               	movf	main@msgtype& (0+255),w,b
  1293                           
  1294                           ; Switch size 1, requested type "space"
  1295                           ; Number of cases is 5, Range of values is 10 to 46
  1296                           ; switch strategies available:
  1297                           ; Name         Instructions Cycles
  1298                           ; simple_byte           16     9 (average)
  1299                           ;	Chosen strategy is simple_byte
  1300  00092C  0A0A               	xorlw	10	; case 10
  1301  00092E  B4D8               	btfsc	status,2,c
  1302  000930  D7BE               	goto	l3653
  1303  000932  0A22               	xorlw	34	; case 40
  1304  000934  B4D8               	btfsc	status,2,c
  1305  000936  D7E4               	goto	l132
  1306  000938  0A01               	xorlw	1	; case 41
  1307  00093A  B4D8               	btfsc	status,2,c
  1308  00093C  D7E1               	goto	l132
  1309  00093E  0A04               	xorlw	4	; case 45
  1310  000940  B4D8               	btfsc	status,2,c
  1311  000942  D7E1               	goto	l3655
  1312  000944  0A03               	xorlw	3	; case 46
  1313  000946                     l3661:
  1314                           
  1315                           ;main.c: 427: }
  1316                           ;main.c: 430: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1317  000946  0101               	movlb	1	; () banked
  1318  000948  0E01               	movlw	high main@msgtype
  1319  00094A  0101               	movlb	1	; () banked
  1320  00094C  0101               	movlb	1	; () banked
  1321  00094E  6F9F               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1322  000950  0101               	movlb	1	; () banked
  1323  000952  0EBE               	movlw	low main@msgtype
  1324  000954  0101               	movlb	1	; () banked
  1325  000956  0101               	movlb	1	; () banked
  1326  000958  6F9E               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1327  00095A  0101               	movlb	1	; () banked
  1328  00095C  0E01               	movlw	high main@msgbuffer
  1329  00095E  0101               	movlb	1	; () banked
  1330  000960  0101               	movlb	1	; () banked
  1331  000962  6FA1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1332  000964  0101               	movlb	1	; () banked
  1333  000966  0EAF               	movlw	low main@msgbuffer
  1334  000968  0101               	movlb	1	; () banked
  1335  00096A  0101               	movlb	1	; () banked
  1336  00096C  6FA0               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1337  00096E  0E0A               	movlw	10
  1338  000970  EC34  F00E         	call	_ToMainLow_recvmsg
  1339  000974  0101               	movlb	1	; () banked
  1340  000976  0101               	movlb	1	; () banked
  1341  000978  6FBF               	movwf	main@length& (0+255),b
  1342                           
  1343                           ; BSR set to: 1
  1344                           ;main.c: 431: if (length < 0) {
  1345  00097A  0101               	movlb	1	; () banked
  1346  00097C  0101               	movlb	1	; () banked
  1347  00097E  BFBF               	btfsc	main@length& (0+255),7,b
  1348  000980  D775               	goto	l3645
  1349  000982  D072               	goto	l3681
  1350  000984                     l3667:
  1351                           
  1352                           ; BSR set to: 1
  1353                           ;main.c: 439: {
  1354                           ;main.c: 440: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1355  000984  0101               	movlb	1	; () banked
  1356  000986  0E01               	movlw	high main@t1thread_data
  1357  000988  0101               	movlb	1	; () banked
  1358  00098A  0101               	movlb	1	; () banked
  1359  00098C  6FA1               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1360  00098E  0101               	movlb	1	; () banked
  1361  000990  0EBC               	movlw	low main@t1thread_data
  1362  000992  0101               	movlb	1	; () banked
  1363  000994  0101               	movlb	1	; () banked
  1364  000996  6FA0               	movwf	timer1_lthread@tptr& (0+255),b
  1365  000998  0101               	movlb	1	; () banked
  1366  00099A  0101               	movlb	1	; () banked
  1367  00099C  C1BE  F1A2         	movff	main@msgtype,timer1_lthread@msgtype
  1368  0009A0  0101               	movlb	1	; () banked
  1369  0009A2  0101               	movlb	1	; () banked
  1370  0009A4  6BA3               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1371  0009A6  0101               	movlb	1	; () banked
  1372  0009A8  0101               	movlb	1	; () banked
  1373  0009AA  51BF               	movf	main@length& (0+255),w,b
  1374  0009AC  0101               	movlb	1	; () banked
  1375  0009AE  0101               	movlb	1	; () banked
  1376  0009B0  6FA4               	movwf	timer1_lthread@length& (0+255),b
  1377  0009B2  0101               	movlb	1	; () banked
  1378  0009B4  6BA5               	clrf	(timer1_lthread@length+1)& (0+255),b
  1379  0009B6  0101               	movlb	1	; () banked
  1380  0009B8  BFA4               	btfsc	timer1_lthread@length& (0+255),7,b
  1381  0009BA  07A5               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1382  0009BC  0101               	movlb	1	; () banked
  1383  0009BE  0E01               	movlw	high main@msgbuffer
  1384  0009C0  0101               	movlb	1	; () banked
  1385  0009C2  0101               	movlb	1	; () banked
  1386  0009C4  6FA7               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1387  0009C6  0101               	movlb	1	; () banked
  1388  0009C8  0EAF               	movlw	low main@msgbuffer
  1389  0009CA  0101               	movlb	1	; () banked
  1390  0009CC  0101               	movlb	1	; () banked
  1391  0009CE  6FA6               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1392  0009D0  EC66  F00C         	call	_timer1_lthread	;wreg free
  1393                           
  1394                           ;main.c: 441: break;
  1395  0009D4  D74B               	goto	l3645
  1396  0009D6                     l3669:
  1397                           
  1398                           ;main.c: 444: case 31:
  1399                           ;main.c: 445: {
  1400                           ;main.c: 446: if(msgbuffer[0] == 0xBA){
  1401  0009D6  0101               	movlb	1	; () banked
  1402  0009D8  0101               	movlb	1	; () banked
  1403  0009DA  51AF               	movf	main@msgbuffer& (0+255),w,b
  1404  0009DC  0ABA               	xorlw	186
  1405  0009DE  A4D8               	btfss	status,2,c
  1406  0009E0  D01E               	goto	l3673
  1407                           
  1408                           ; BSR set to: 1
  1409                           ;main.c: 448: i2c_master_send(5, 5, msgbuffer, 0xBE);
  1410  0009E2  0101               	movlb	1	; () banked
  1411  0009E4  6FAA               	movwf	??_main& (0+255),b
  1412  0009E6  0E05               	movlw	5
  1413  0009E8  0101               	movlb	1	; () banked
  1414  0009EA  0101               	movlb	1	; () banked
  1415  0009EC  6F86               	movwf	i2c_master_send@recvlength& (0+255),b
  1416  0009EE  0101               	movlb	1	; () banked
  1417  0009F0  51AA               	movf	??_main& (0+255),w,b
  1418  0009F2  0101               	movlb	1	; () banked
  1419  0009F4  0E01               	movlw	high main@msgbuffer
  1420  0009F6  0101               	movlb	1	; () banked
  1421  0009F8  0101               	movlb	1	; () banked
  1422  0009FA  6F88               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1423  0009FC  0101               	movlb	1	; () banked
  1424  0009FE  0EAF               	movlw	low main@msgbuffer
  1425  000A00  0101               	movlb	1	; () banked
  1426  000A02  0101               	movlb	1	; () banked
  1427  000A04  6F87               	movwf	i2c_master_send@msg& (0+255),b
  1428  000A06  0101               	movlb	1	; () banked
  1429  000A08  6FAB               	movwf	(??_main+1)& (0+255),b
  1430  000A0A  0EBE               	movlw	190
  1431  000A0C  0101               	movlb	1	; () banked
  1432  000A0E  0101               	movlb	1	; () banked
  1433  000A10  6F89               	movwf	i2c_master_send@slave_addr& (0+255),b
  1434  000A12  0101               	movlb	1	; () banked
  1435  000A14  51AB               	movf	(??_main+1)& (0+255),w,b
  1436  000A16  0E05               	movlw	5
  1437  000A18  ECF0  F005         	call	_i2c_master_send
  1438                           
  1439                           ;main.c: 449: } else if(msgbuffer[0] == 0xAA){
  1440  000A1C  D023               	goto	l3677
  1441  000A1E                     l3673:
  1442  000A1E  0101               	movlb	1	; () banked
  1443  000A20  0101               	movlb	1	; () banked
  1444  000A22  51AF               	movf	main@msgbuffer& (0+255),w,b
  1445  000A24  0AAA               	xorlw	170
  1446  000A26  A4D8               	btfss	status,2,c
  1447  000A28  D01D               	goto	l3677
  1448                           
  1449                           ; BSR set to: 1
  1450                           ;main.c: 451: i2c_master_send(1, 5, msgbuffer, 0x9E);
  1451  000A2A  0101               	movlb	1	; () banked
  1452  000A2C  6FAA               	movwf	??_main& (0+255),b
  1453  000A2E  0E05               	movlw	5
  1454  000A30  0101               	movlb	1	; () banked
  1455  000A32  0101               	movlb	1	; () banked
  1456  000A34  6F86               	movwf	i2c_master_send@recvlength& (0+255),b
  1457  000A36  0101               	movlb	1	; () banked
  1458  000A38  51AA               	movf	??_main& (0+255),w,b
  1459  000A3A  0101               	movlb	1	; () banked
  1460  000A3C  0E01               	movlw	high main@msgbuffer
  1461  000A3E  0101               	movlb	1	; () banked
  1462  000A40  0101               	movlb	1	; () banked
  1463  000A42  6F88               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1464  000A44  0101               	movlb	1	; () banked
  1465  000A46  0EAF               	movlw	low main@msgbuffer
  1466  000A48  0101               	movlb	1	; () banked
  1467  000A4A  0101               	movlb	1	; () banked
  1468  000A4C  6F87               	movwf	i2c_master_send@msg& (0+255),b
  1469  000A4E  0101               	movlb	1	; () banked
  1470  000A50  6FAB               	movwf	(??_main+1)& (0+255),b
  1471  000A52  0E9E               	movlw	158
  1472  000A54  0101               	movlb	1	; () banked
  1473  000A56  0101               	movlb	1	; () banked
  1474  000A58  6F89               	movwf	i2c_master_send@slave_addr& (0+255),b
  1475  000A5A  0101               	movlb	1	; () banked
  1476  000A5C  51AB               	movf	(??_main+1)& (0+255),w,b
  1477  000A5E  0E01               	movlw	1
  1478  000A60  ECF0  F005         	call	_i2c_master_send
  1479  000A64                     l3677:
  1480                           
  1481                           ;main.c: 452: }
  1482                           ;main.c: 454: LATBbits.LATB2 = 0;
  1483  000A64  948A               	bcf	3978,2,c	;volatile
  1484                           
  1485                           ;main.c: 456: break;
  1486  000A66  D702               	goto	l3645
  1487  000A68                     l3681:
  1488  000A68  0101               	movlb	1	; () banked
  1489  000A6A  0101               	movlb	1	; () banked
  1490  000A6C  51BE               	movf	main@msgtype& (0+255),w,b
  1491                           
  1492                           ; Switch size 1, requested type "space"
  1493                           ; Number of cases is 3, Range of values is 11 to 31
  1494                           ; switch strategies available:
  1495                           ; Name         Instructions Cycles
  1496                           ; simple_byte           10     6 (average)
  1497                           ;	Chosen strategy is simple_byte
  1498  000A6E  0A0B               	xorlw	11	; case 11
  1499  000A70  B4D8               	btfsc	status,2,c
  1500  000A72  D788               	goto	l3667
  1501  000A74  0A15               	xorlw	21	; case 30
  1502  000A76  B4D8               	btfsc	status,2,c
  1503  000A78  D7AE               	goto	l3669
  1504  000A7A  0A01               	xorlw	1	; case 31
  1505  000A7C  B4D8               	btfsc	status,2,c
  1506  000A7E  D7AB               	goto	l3669
  1507  000A80  D6F5               	goto	l3645
  1508  000A82                     __end_of_main:
  1509                           	opt stack 0
  1510                           tblptru	equ	0xFF8
  1511                           tblptrh	equ	0xFF7
  1512                           tblptrl	equ	0xFF6
  1513                           tablat	equ	0xFF5
  1514                           postinc0	equ	0xFEE
  1515                           wreg	equ	0xFE8
  1516                           postdec1	equ	0xFE5
  1517                           fsr1l	equ	0xFE1
  1518                           status	equ	0xFD8
  1519                           
  1520 ;; *************** function _uart_trans *****************
  1521 ;; Defined at:
  1522 ;;		line 61 in file "../src/my_uart.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  length          1    wreg     unsigned char 
  1525 ;;  data            2    0[BANK1 ] PTR unsigned char 
  1526 ;;		 -> main@msgbuffer(11), 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  length          1    4[BANK1 ] unsigned char 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;		None               void
  1531 ;; Registers used:
  1532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1538 ;;      Params:         0       0       2       0       0
  1539 ;;      Locals:         0       0       1       0       0
  1540 ;;      Temps:          0       0       2       0       0
  1541 ;;      Totals:         0       0       5       0       0
  1542 ;;Total ram usage:        5 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:   11
  1545 ;; This function calls:
  1546 ;;		Nothing
  1547 ;; This function is called by:
  1548 ;;		_main
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text1
  1553  0013AE                     __ptext1:
  1554                           	opt stack 0
  1555  0013AE                     _uart_trans:
  1556                           	opt stack 19
  1557                           
  1558                           ; BSR set to: 1
  1559                           ;incstack = 0
  1560                           ;uart_trans@length stored from wreg
  1561  0013AE  CFE8 F18A          	movff	wreg,uart_trans@length
  1562                           
  1563                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  1564  0013B2  EE20 F00B          	lfsr	2,11
  1565  0013B6  5052               	movf	_uc_ptr,w,c
  1566  0013B8  26D9               	addwf	fsr2l,f,c
  1567  0013BA  5053               	movf	_uc_ptr+1,w,c
  1568  0013BC  22DA               	addwfc	fsr2h,f,c
  1569  0013BE  0E00               	movlw	0
  1570  0013C0  6EDF               	movwf	indf2,c
  1571  0013C2  D035               	goto	l3853
  1572  0013C4                     l3849:
  1573                           
  1574                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  1575  0013C4  EE20 F00B          	lfsr	2,11
  1576  0013C8  5052               	movf	_uc_ptr,w,c
  1577  0013CA  26D9               	addwf	fsr2l,f,c
  1578  0013CC  5053               	movf	_uc_ptr+1,w,c
  1579  0013CE  22DA               	addwfc	fsr2h,f,c
  1580  0013D0  50DF               	movf	indf2,w,c
  1581  0013D2  0101               	movlb	1	; () banked
  1582  0013D4  6F88               	movwf	??_uart_trans& (0+255),b
  1583  0013D6  0101               	movlb	1	; () banked
  1584  0013D8  5188               	movf	??_uart_trans& (0+255),w,b
  1585  0013DA  0D01               	mullw	1
  1586  0013DC  50F3               	movf	prodl,w,c
  1587  0013DE  0101               	movlb	1	; () banked
  1588  0013E0  0101               	movlb	1	; () banked
  1589  0013E2  2586               	addwf	uart_trans@data& (0+255),w,b
  1590  0013E4  6ED9               	movwf	fsr2l,c
  1591  0013E6  50F4               	movf	prodh,w,c
  1592  0013E8  0101               	movlb	1	; () banked
  1593  0013EA  0101               	movlb	1	; () banked
  1594  0013EC  2187               	addwfc	(uart_trans@data+1)& (0+255),w,b
  1595  0013EE  6EDA               	movwf	fsr2h,c
  1596  0013F0  EE10 F00B          	lfsr	1,11
  1597  0013F4  5052               	movf	_uc_ptr,w,c
  1598  0013F6  26E1               	addwf	fsr1l,f,c
  1599  0013F8  5053               	movf	_uc_ptr+1,w,c
  1600  0013FA  22E2               	addwfc	fsr1h,f,c
  1601  0013FC  50E7               	movf	indf1,w,c
  1602  0013FE  0101               	movlb	1	; () banked
  1603  001400  6F89               	movwf	(??_uart_trans+1)& (0+255),b
  1604  001402  0101               	movlb	1	; () banked
  1605  001404  5189               	movf	(??_uart_trans+1)& (0+255),w,b
  1606  001406  0D01               	mullw	1
  1607  001408  0E06               	movlw	6
  1608  00140A  26F3               	addwf	prodl,f,c
  1609  00140C  0E00               	movlw	0
  1610  00140E  22F4               	addwfc	prodh,f,c
  1611  001410  50F3               	movf	prodl,w,c
  1612  001412  2452               	addwf	_uc_ptr,w,c
  1613  001414  6EE1               	movwf	fsr1l,c
  1614  001416  50F4               	movf	prodh,w,c
  1615  001418  2053               	addwfc	_uc_ptr+1,w,c
  1616  00141A  6EE2               	movwf	fsr1h,c
  1617  00141C  CFDF FFE7          	movff	indf2,indf1
  1618                           
  1619                           ; BSR set to: 1
  1620  001420  EE20 F00B          	lfsr	2,11
  1621  001424  5052               	movf	_uc_ptr,w,c
  1622  001426  26D9               	addwf	fsr2l,f,c
  1623  001428  5053               	movf	_uc_ptr+1,w,c
  1624  00142A  22DA               	addwfc	fsr2h,f,c
  1625  00142C  2ADF               	incf	indf2,f,c
  1626  00142E                     l3853:
  1627  00142E  EE20 F00B          	lfsr	2,11
  1628  001432  5052               	movf	_uc_ptr,w,c
  1629  001434  26D9               	addwf	fsr2l,f,c
  1630  001436  5053               	movf	_uc_ptr+1,w,c
  1631  001438  22DA               	addwfc	fsr2h,f,c
  1632  00143A  50DF               	movf	indf2,w,c
  1633  00143C  0101               	movlb	1	; () banked
  1634  00143E  6F88               	movwf	??_uart_trans& (0+255),b
  1635  001440  0101               	movlb	1	; () banked
  1636  001442  0101               	movlb	1	; () banked
  1637  001444  518A               	movf	uart_trans@length& (0+255),w,b
  1638  001446  0101               	movlb	1	; () banked
  1639  001448  5D88               	subwf	??_uart_trans& (0+255),w,b
  1640  00144A  A0D8               	btfss	status,0,c
  1641  00144C  D7BB               	goto	l3849
  1642                           
  1643                           ; BSR set to: 1
  1644                           ;my_uart.c: 67: }
  1645                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  1646                           
  1647                           ; BSR set to: 1
  1648  00144E  EE20 F00C          	lfsr	2,12
  1649  001452  5052               	movf	_uc_ptr,w,c
  1650  001454  26D9               	addwf	fsr2l,f,c
  1651  001456  5053               	movf	_uc_ptr+1,w,c
  1652  001458  22DA               	addwfc	fsr2h,f,c
  1653  00145A  0E00               	movlw	0
  1654  00145C  6EDF               	movwf	indf2,c
  1655                           
  1656                           ; BSR set to: 1
  1657                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  1658  00145E  889D               	bsf	3997,4,c	;volatile
  1659                           
  1660                           ; BSR set to: 1
  1661  001460  0012               	return	
  1662  001462                     __end_of_uart_trans:
  1663                           	opt stack 0
  1664                           tblptru	equ	0xFF8
  1665                           tblptrh	equ	0xFF7
  1666                           tblptrl	equ	0xFF6
  1667                           tablat	equ	0xFF5
  1668                           prodh	equ	0xFF4
  1669                           prodl	equ	0xFF3
  1670                           postinc0	equ	0xFEE
  1671                           wreg	equ	0xFE8
  1672                           indf1	equ	0xFE7
  1673                           postdec1	equ	0xFE5
  1674                           fsr1h	equ	0xFE2
  1675                           fsr1l	equ	0xFE1
  1676                           indf2	equ	0xFDF
  1677                           fsr2h	equ	0xFDA
  1678                           fsr2l	equ	0xFD9
  1679                           status	equ	0xFD8
  1680                           
  1681 ;; *************** function _timer1_lthread *****************
  1682 ;; Defined at:
  1683 ;;		line 14 in file "../src/timer1_thread.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  1686 ;;		 -> main@t1thread_data(2), 
  1687 ;;  msgtype         2   28[BANK1 ] int 
  1688 ;;  length          2   30[BANK1 ] int 
  1689 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1690 ;;		 -> main@msgbuffer(11), 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  retval          1   35[BANK1 ] char 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  2   26[BANK1 ] int 
  1695 ;; Registers used:
  1696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1702 ;;      Params:         0       0       8       0       0
  1703 ;;      Locals:         0       0       1       0       0
  1704 ;;      Temps:          0       0       1       0       0
  1705 ;;      Totals:         0       0      10       0       0
  1706 ;;Total ram usage:       10 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:   14
  1709 ;; This function calls:
  1710 ;;		_FromMainHigh_sendmsg
  1711 ;;		___lwmod
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text2
  1718  0018CC                     __ptext2:
  1719                           	opt stack 0
  1720  0018CC                     _timer1_lthread:
  1721                           	opt stack 16
  1722                           
  1723                           ;timer1_thread.c: 15: signed char retval;
  1724                           ;timer1_thread.c: 17: tptr->msgcount++;
  1725                           
  1726                           ; BSR set to: 1
  1727                           ;incstack = 0
  1728  0018CC  C1A0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1729  0018D0  C1A1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1730  0018D4  2ADE               	incf	postinc2,f,c
  1731  0018D6  0E00               	movlw	0
  1732  0018D8  22DD               	addwfc	postdec2,f,c
  1733                           
  1734                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1735  0018DA  C1A0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1736  0018DE  C1A1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1737  0018E2  0101               	movlb	1	; () banked
  1738  0018E4  CFDE F186          	movff	postinc2,___lwmod@dividend
  1739  0018E8  0101               	movlb	1	; () banked
  1740  0018EA  CFDD F187          	movff	postdec2,___lwmod@dividend+1
  1741  0018EE  0E00               	movlw	0
  1742  0018F0  0101               	movlb	1	; () banked
  1743  0018F2  0101               	movlb	1	; () banked
  1744  0018F4  6F89               	movwf	(___lwmod@divisor+1)& (0+255),b
  1745  0018F6  0E0A               	movlw	10
  1746  0018F8  0101               	movlb	1	; () banked
  1747  0018FA  6F88               	movwf	___lwmod@divisor& (0+255),b
  1748  0018FC  EC22  F00B         	call	___lwmod	;wreg free
  1749  001900  0101               	movlb	1	; () banked
  1750  001902  0101               	movlb	1	; () banked
  1751  001904  5186               	movf	?___lwmod& (0+255),w,b
  1752  001906  0A09               	xorlw	9
  1753  001908  0101               	movlb	1	; () banked
  1754  00190A  1187               	iorwf	(?___lwmod+1)& (0+255),w,b
  1755  00190C  A4D8               	btfss	status,2,c
  1756  00190E  0012               	return	
  1757                           
  1758                           ; BSR set to: 1
  1759                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1760  001910  0101               	movlb	1	; () banked
  1761  001912  6FA8               	movwf	??_timer1_lthread& (0+255),b
  1762  001914  0E14               	movlw	20
  1763  001916  0101               	movlb	1	; () banked
  1764  001918  0101               	movlb	1	; () banked
  1765  00191A  6F9C               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1766  00191C  0101               	movlb	1	; () banked
  1767  00191E  51A8               	movf	??_timer1_lthread& (0+255),w,b
  1768  001920  0101               	movlb	1	; () banked
  1769  001922  0101               	movlb	1	; () banked
  1770  001924  C1A1  F19E         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1771  001928  0101               	movlb	1	; () banked
  1772  00192A  0101               	movlb	1	; () banked
  1773  00192C  C1A0  F19D         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1774  001930  0E02               	movlw	2
  1775  001932  ECB2  F00E         	call	_FromMainHigh_sendmsg
  1776  001936  0101               	movlb	1	; () banked
  1777  001938  0101               	movlb	1	; () banked
  1778  00193A  6FA9               	movwf	timer1_lthread@retval& (0+255),b
  1779  00193C  0012               	return	
  1780  00193E                     __end_of_timer1_lthread:
  1781                           	opt stack 0
  1782                           tblptru	equ	0xFF8
  1783                           tblptrh	equ	0xFF7
  1784                           tblptrl	equ	0xFF6
  1785                           tablat	equ	0xFF5
  1786                           prodh	equ	0xFF4
  1787                           prodl	equ	0xFF3
  1788                           postinc0	equ	0xFEE
  1789                           wreg	equ	0xFE8
  1790                           indf1	equ	0xFE7
  1791                           postdec1	equ	0xFE5
  1792                           fsr1h	equ	0xFE2
  1793                           fsr1l	equ	0xFE1
  1794                           indf2	equ	0xFDF
  1795                           postinc2	equ	0xFDE
  1796                           postdec2	equ	0xFDD
  1797                           fsr2h	equ	0xFDA
  1798                           fsr2l	equ	0xFD9
  1799                           status	equ	0xFD8
  1800                           
  1801 ;; *************** function ___lwmod *****************
  1802 ;; Defined at:
  1803 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  dividend        2    0[BANK1 ] unsigned int 
  1806 ;;  divisor         2    2[BANK1 ] unsigned int 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  counter         1    5[BANK1 ] unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  2    0[BANK1 ] unsigned int 
  1811 ;; Registers used:
  1812 ;;		wreg, status,2, status,0
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1818 ;;      Params:         0       0       4       0       0
  1819 ;;      Locals:         0       0       1       0       0
  1820 ;;      Temps:          0       0       1       0       0
  1821 ;;      Totals:         0       0       6       0       0
  1822 ;;Total ram usage:        6 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:   11
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_timer1_lthread
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text3
  1833  001644                     __ptext3:
  1834                           	opt stack 0
  1835  001644                     ___lwmod:
  1836                           	opt stack 18
  1837                           
  1838                           ; BSR set to: 1
  1839                           ;incstack = 0
  1840  001644  0101               	movlb	1	; () banked
  1841  001646  0101               	movlb	1	; () banked
  1842  001648  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1843  00164A  1188               	iorwf	___lwmod@divisor& (0+255),w,b
  1844  00164C  B4D8               	btfsc	status,2,c
  1845  00164E  D03A               	goto	l1109
  1846                           
  1847                           ; BSR set to: 1
  1848  001650  0101               	movlb	1	; () banked
  1849  001652  6F8A               	movwf	??___lwmod& (0+255),b
  1850  001654  0E01               	movlw	1
  1851  001656  0101               	movlb	1	; () banked
  1852  001658  0101               	movlb	1	; () banked
  1853  00165A  6F8B               	movwf	___lwmod@counter& (0+255),b
  1854  00165C  0101               	movlb	1	; () banked
  1855  00165E  518A               	movf	??___lwmod& (0+255),w,b
  1856  001660  D009               	goto	l4257
  1857  001662                     l4255:
  1858                           
  1859                           ; BSR set to: 1
  1860  001662  0101               	movlb	1	; () banked
  1861  001664  0101               	movlb	1	; () banked
  1862  001666  0101               	movlb	1	; () banked
  1863  001668  90D8               	bcf	status,0,c
  1864  00166A  3788               	rlcf	___lwmod@divisor& (0+255),f,b
  1865  00166C  3789               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1866  00166E  0101               	movlb	1	; () banked
  1867  001670  0101               	movlb	1	; () banked
  1868  001672  2B8B               	incf	___lwmod@counter& (0+255),f,b
  1869  001674                     l4257:
  1870                           
  1871                           ; BSR set to: 1
  1872  001674  0101               	movlb	1	; () banked
  1873  001676  0101               	movlb	1	; () banked
  1874  001678  AF89               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1875  00167A  D7F3               	goto	l4255
  1876  00167C                     l4259:
  1877                           
  1878                           ; BSR set to: 1
  1879  00167C  0101               	movlb	1	; () banked
  1880  00167E  0101               	movlb	1	; () banked
  1881  001680  5188               	movf	___lwmod@divisor& (0+255),w,b
  1882  001682  0101               	movlb	1	; () banked
  1883  001684  0101               	movlb	1	; () banked
  1884  001686  5D86               	subwf	___lwmod@dividend& (0+255),w,b
  1885  001688  0101               	movlb	1	; () banked
  1886  00168A  0101               	movlb	1	; () banked
  1887  00168C  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1888  00168E  0101               	movlb	1	; () banked
  1889  001690  0101               	movlb	1	; () banked
  1890  001692  5987               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1891  001694  A0D8               	btfss	status,0,c
  1892  001696  D00C               	goto	l4263
  1893                           
  1894                           ; BSR set to: 1
  1895  001698  0101               	movlb	1	; () banked
  1896  00169A  0101               	movlb	1	; () banked
  1897  00169C  5188               	movf	___lwmod@divisor& (0+255),w,b
  1898  00169E  0101               	movlb	1	; () banked
  1899  0016A0  0101               	movlb	1	; () banked
  1900  0016A2  5F86               	subwf	___lwmod@dividend& (0+255),f,b
  1901  0016A4  0101               	movlb	1	; () banked
  1902  0016A6  0101               	movlb	1	; () banked
  1903  0016A8  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1904  0016AA  0101               	movlb	1	; () banked
  1905  0016AC  0101               	movlb	1	; () banked
  1906  0016AE  5B87               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1907  0016B0                     l4263:
  1908                           
  1909                           ; BSR set to: 1
  1910  0016B0  0101               	movlb	1	; () banked
  1911  0016B2  0101               	movlb	1	; () banked
  1912  0016B4  0101               	movlb	1	; () banked
  1913  0016B6  90D8               	bcf	status,0,c
  1914  0016B8  3389               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1915  0016BA  3388               	rrcf	___lwmod@divisor& (0+255),f,b
  1916                           
  1917                           ; BSR set to: 1
  1918  0016BC  0101               	movlb	1	; () banked
  1919  0016BE  0101               	movlb	1	; () banked
  1920  0016C0  2F8B               	decfsz	___lwmod@counter& (0+255),f,b
  1921  0016C2  D7DC               	goto	l4259
  1922  0016C4                     l1109:
  1923                           
  1924                           ; BSR set to: 1
  1925  0016C4  C186  F186         	movff	___lwmod@dividend,?___lwmod
  1926  0016C8  C187  F187         	movff	___lwmod@dividend+1,?___lwmod+1
  1927                           
  1928                           ; BSR set to: 1
  1929  0016CC  0012               	return	
  1930  0016CE                     __end_of___lwmod:
  1931                           	opt stack 0
  1932                           tblptru	equ	0xFF8
  1933                           tblptrh	equ	0xFF7
  1934                           tblptrl	equ	0xFF6
  1935                           tablat	equ	0xFF5
  1936                           prodh	equ	0xFF4
  1937                           prodl	equ	0xFF3
  1938                           postinc0	equ	0xFEE
  1939                           wreg	equ	0xFE8
  1940                           indf1	equ	0xFE7
  1941                           postdec1	equ	0xFE5
  1942                           fsr1h	equ	0xFE2
  1943                           fsr1l	equ	0xFE1
  1944                           indf2	equ	0xFDF
  1945                           postinc2	equ	0xFDE
  1946                           postdec2	equ	0xFDD
  1947                           fsr2h	equ	0xFDA
  1948                           fsr2l	equ	0xFD9
  1949                           status	equ	0xFD8
  1950                           
  1951 ;; *************** function _FromMainHigh_sendmsg *****************
  1952 ;; Defined at:
  1953 ;;		line 174 in file "../src/messages.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;  length          1    wreg     unsigned char 
  1956 ;;  msgtype         1   22[BANK1 ] unsigned char 
  1957 ;;  data            2   23[BANK1 ] PTR void 
  1958 ;;		 -> main@t1thread_data(2), 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  length          1   25[BANK1 ] unsigned char 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      char 
  1963 ;; Registers used:
  1964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1970 ;;      Params:         0       0       3       0       0
  1971 ;;      Locals:         0       0       1       0       0
  1972 ;;      Temps:          0       0       0       0       0
  1973 ;;      Totals:         0       0       4       0       0
  1974 ;;Total ram usage:        4 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:   13
  1977 ;; This function calls:
  1978 ;;		_send_msg
  1979 ;; This function is called by:
  1980 ;;		_timer1_lthread
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text4
  1985  001D64                     __ptext4:
  1986                           	opt stack 0
  1987  001D64                     _FromMainHigh_sendmsg:
  1988                           	opt stack 16
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;incstack = 0
  1992                           ;FromMainHigh_sendmsg@length stored from wreg
  1993  001D64  CFE8 F19F          	movff	wreg,FromMainHigh_sendmsg@length
  1994                           
  1995                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1996  001D68  0102               	movlb	2	; () banked
  1997  001D6A  0E02               	movlw	high _FromMainHigh_MQ
  1998  001D6C  0101               	movlb	1	; () banked
  1999  001D6E  0101               	movlb	1	; () banked
  2000  001D70  6F91               	movwf	(send_msg@qptr+1)& (0+255),b
  2001  001D72  0102               	movlb	2	; () banked
  2002  001D74  0E00               	movlw	low _FromMainHigh_MQ
  2003  001D76  0101               	movlb	1	; () banked
  2004  001D78  0101               	movlb	1	; () banked
  2005  001D7A  6F90               	movwf	send_msg@qptr& (0+255),b
  2006  001D7C  C19F  F192         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2007  001D80  C19C  F193         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2008  001D84  0101               	movlb	1	; () banked
  2009  001D86  0101               	movlb	1	; () banked
  2010  001D88  C19E  F195         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2011  001D8C  0101               	movlb	1	; () banked
  2012  001D8E  0101               	movlb	1	; () banked
  2013  001D90  C19D  F194         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2014  001D94  EC8F  F006         	call	_send_msg	;wreg free
  2015  001D98  0012               	return	
  2016  001D9A                     __end_of_FromMainHigh_sendmsg:
  2017                           	opt stack 0
  2018                           tblptru	equ	0xFF8
  2019                           tblptrh	equ	0xFF7
  2020                           tblptrl	equ	0xFF6
  2021                           tablat	equ	0xFF5
  2022                           prodh	equ	0xFF4
  2023                           prodl	equ	0xFF3
  2024                           postinc0	equ	0xFEE
  2025                           wreg	equ	0xFE8
  2026                           indf1	equ	0xFE7
  2027                           postdec1	equ	0xFE5
  2028                           fsr1h	equ	0xFE2
  2029                           fsr1l	equ	0xFE1
  2030                           indf2	equ	0xFDF
  2031                           postinc2	equ	0xFDE
  2032                           postdec2	equ	0xFDD
  2033                           fsr2h	equ	0xFDA
  2034                           fsr2l	equ	0xFD9
  2035                           status	equ	0xFD8
  2036                           
  2037 ;; *************** function _send_msg *****************
  2038 ;; Defined at:
  2039 ;;		line 24 in file "../src/messages.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2042 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2043 ;;  length          1   12[BANK1 ] unsigned char 
  2044 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2045 ;;  data            2   14[BANK1 ] PTR void 
  2046 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  2047 ;;		 -> main@uc(13), 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  2050 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  2051 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2052 ;;  tlength         2   17[BANK1 ] unsigned int 
  2053 ;;  slot            1   19[BANK1 ] unsigned char 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      char 
  2056 ;; Registers used:
  2057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2063 ;;      Params:         0       0       6       0       0
  2064 ;;      Locals:         0       0       5       0       0
  2065 ;;      Temps:          0       0       1       0       0
  2066 ;;      Totals:         0       0      12       0       0
  2067 ;;Total ram usage:       12 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:   12
  2070 ;; This function calls:
  2071 ;;		___awmod
  2072 ;;		_memcpy
  2073 ;; This function is called by:
  2074 ;;		_FromMainHigh_sendmsg
  2075 ;;		_FromMainLow_sendmsg
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text5
  2080  000D1E                     __ptext5:
  2081                           	opt stack 0
  2082  000D1E                     _send_msg:
  2083                           	opt stack 16
  2084                           
  2085                           ;messages.c: 25: unsigned char slot;
  2086                           ;messages.c: 27: msg *qmsg;
  2087                           ;messages.c: 28: size_t tlength = length;
  2088                           
  2089                           ;incstack = 0
  2090  000D1E  0101               	movlb	1	; () banked
  2091  000D20  0101               	movlb	1	; () banked
  2092  000D22  C192  F197         	movff	send_msg@length,send_msg@tlength
  2093  000D26  0101               	movlb	1	; () banked
  2094  000D28  0101               	movlb	1	; () banked
  2095  000D2A  6B98               	clrf	(send_msg@tlength+1)& (0+255),b
  2096                           
  2097                           ; BSR set to: 1
  2098                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2099  000D2C  0101               	movlb	1	; () banked
  2100  000D2E  EE20 F041          	lfsr	2,65
  2101  000D32  0101               	movlb	1	; () banked
  2102  000D34  5190               	movf	send_msg@qptr& (0+255),w,b
  2103  000D36  26D9               	addwf	fsr2l,f,c
  2104  000D38  0101               	movlb	1	; () banked
  2105  000D3A  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  2106  000D3C  22DA               	addwfc	fsr2h,f,c
  2107  000D3E  50DF               	movf	indf2,w,c
  2108  000D40  0101               	movlb	1	; () banked
  2109  000D42  0101               	movlb	1	; () banked
  2110  000D44  6F99               	movwf	send_msg@slot& (0+255),b
  2111                           
  2112                           ; BSR set to: 1
  2113                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2114  000D46  0101               	movlb	1	; () banked
  2115  000D48  0101               	movlb	1	; () banked
  2116  000D4A  5199               	movf	send_msg@slot& (0+255),w,b
  2117  000D4C  0D0D               	mullw	13
  2118  000D4E  50F3               	movf	prodl,w,c
  2119  000D50  0101               	movlb	1	; () banked
  2120  000D52  0101               	movlb	1	; () banked
  2121  000D54  2590               	addwf	send_msg@qptr& (0+255),w,b
  2122  000D56  0101               	movlb	1	; () banked
  2123  000D58  0101               	movlb	1	; () banked
  2124  000D5A  6F9A               	movwf	send_msg@qmsg& (0+255),b
  2125  000D5C  50F4               	movf	prodh,w,c
  2126  000D5E  0101               	movlb	1	; () banked
  2127  000D60  0101               	movlb	1	; () banked
  2128  000D62  2191               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2129  000D64  0101               	movlb	1	; () banked
  2130  000D66  6F9B               	movwf	(send_msg@qmsg+1)& (0+255),b
  2131                           
  2132                           ; BSR set to: 1
  2133                           ;messages.c: 41: if (qmsg->full != 0) {
  2134  000D68  C19A  FFD9         	movff	send_msg@qmsg,fsr2l
  2135  000D6C  C19B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2136  000D70  50DF               	movf	indf2,w,c
  2137  000D72  B4D8               	btfsc	status,2,c
  2138  000D74  D002               	goto	l3911
  2139                           
  2140                           ; BSR set to: 1
  2141                           ;messages.c: 42: return (-1);
  2142  000D76  0EFF               	movlw	255
  2143  000D78  0012               	return	
  2144  000D7A                     l3911:
  2145                           
  2146                           ; BSR set to: 1
  2147                           ;messages.c: 43: }
  2148                           ;messages.c: 46: qmsg->length = length;
  2149  000D7A  0101               	movlb	1	; () banked
  2150  000D7C  EE20 F001          	lfsr	2,1
  2151  000D80  0101               	movlb	1	; () banked
  2152  000D82  519A               	movf	send_msg@qmsg& (0+255),w,b
  2153  000D84  26D9               	addwf	fsr2l,f,c
  2154  000D86  0101               	movlb	1	; () banked
  2155  000D88  519B               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2156  000D8A  22DA               	addwfc	fsr2h,f,c
  2157  000D8C  0101               	movlb	1	; () banked
  2158  000D8E  C192  FFDF         	movff	send_msg@length,indf2
  2159                           
  2160                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2161  000D92  0101               	movlb	1	; () banked
  2162  000D94  EE20 F002          	lfsr	2,2
  2163  000D98  0101               	movlb	1	; () banked
  2164  000D9A  519A               	movf	send_msg@qmsg& (0+255),w,b
  2165  000D9C  26D9               	addwf	fsr2l,f,c
  2166  000D9E  0101               	movlb	1	; () banked
  2167  000DA0  519B               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2168  000DA2  22DA               	addwfc	fsr2h,f,c
  2169  000DA4  0101               	movlb	1	; () banked
  2170  000DA6  C193  FFDF         	movff	send_msg@msgtype,indf2
  2171                           
  2172                           ; BSR set to: 1
  2173                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2174  000DAA  0E03               	movlw	3
  2175  000DAC  0101               	movlb	1	; () banked
  2176  000DAE  0101               	movlb	1	; () banked
  2177  000DB0  259A               	addwf	send_msg@qmsg& (0+255),w,b
  2178  000DB2  0101               	movlb	1	; () banked
  2179  000DB4  0101               	movlb	1	; () banked
  2180  000DB6  6F86               	movwf	memcpy@d1& (0+255),b
  2181  000DB8  0E00               	movlw	0
  2182  000DBA  0101               	movlb	1	; () banked
  2183  000DBC  0101               	movlb	1	; () banked
  2184  000DBE  219B               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2185  000DC0  0101               	movlb	1	; () banked
  2186  000DC2  6F87               	movwf	(memcpy@d1+1)& (0+255),b
  2187  000DC4  0101               	movlb	1	; () banked
  2188  000DC6  0101               	movlb	1	; () banked
  2189  000DC8  C195  F189         	movff	send_msg@data+1,memcpy@s1+1
  2190  000DCC  0101               	movlb	1	; () banked
  2191  000DCE  0101               	movlb	1	; () banked
  2192  000DD0  C194  F188         	movff	send_msg@data,memcpy@s1
  2193  000DD4  C197  F18A         	movff	send_msg@tlength,memcpy@n
  2194  000DD8  C198  F18B         	movff	send_msg@tlength+1,memcpy@n+1
  2195  000DDC  EC72  F00D         	call	_memcpy	;wreg free
  2196                           
  2197                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  2198  000DE0  0101               	movlb	1	; () banked
  2199  000DE2  EE20 F041          	lfsr	2,65
  2200  000DE6  0101               	movlb	1	; () banked
  2201  000DE8  5190               	movf	send_msg@qptr& (0+255),w,b
  2202  000DEA  26D9               	addwf	fsr2l,f,c
  2203  000DEC  0101               	movlb	1	; () banked
  2204  000DEE  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  2205  000DF0  22DA               	addwfc	fsr2h,f,c
  2206  000DF2  0101               	movlb	1	; () banked
  2207  000DF4  EE10 F041          	lfsr	1,65
  2208  000DF8  0101               	movlb	1	; () banked
  2209  000DFA  5190               	movf	send_msg@qptr& (0+255),w,b
  2210  000DFC  26E1               	addwf	fsr1l,f,c
  2211  000DFE  0101               	movlb	1	; () banked
  2212  000E00  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  2213  000E02  22E2               	addwfc	fsr1h,f,c
  2214  000E04  50E7               	movf	indf1,w,c
  2215  000E06  0101               	movlb	1	; () banked
  2216  000E08  6F96               	movwf	??_send_msg& (0+255),b
  2217  000E0A  0E01               	movlw	1
  2218  000E0C  0101               	movlb	1	; () banked
  2219  000E0E  2596               	addwf	??_send_msg& (0+255),w,b
  2220  000E10  0101               	movlb	1	; () banked
  2221  000E12  0101               	movlb	1	; () banked
  2222  000E14  6F86               	movwf	___awmod@dividend& (0+255),b
  2223  000E16  0101               	movlb	1	; () banked
  2224  000E18  0101               	movlb	1	; () banked
  2225  000E1A  6B87               	clrf	(___awmod@dividend+1)& (0+255),b
  2226  000E1C  0E00               	movlw	0
  2227  000E1E  2387               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  2228  000E20  0E00               	movlw	0
  2229  000E22  0101               	movlb	1	; () banked
  2230  000E24  0101               	movlb	1	; () banked
  2231  000E26  6F89               	movwf	(___awmod@divisor+1)& (0+255),b
  2232  000E28  0E05               	movlw	5
  2233  000E2A  0101               	movlb	1	; () banked
  2234  000E2C  6F88               	movwf	___awmod@divisor& (0+255),b
  2235  000E2E  ECB2  F007         	call	___awmod	;wreg free
  2236  000E32  0101               	movlb	1	; () banked
  2237  000E34  0101               	movlb	1	; () banked
  2238  000E36  5186               	movf	?___awmod& (0+255),w,b
  2239  000E38  6EDF               	movwf	indf2,c
  2240                           
  2241                           ; BSR set to: 1
  2242                           ;messages.c: 59: qmsg->full = 1;
  2243  000E3A  C19A  FFD9         	movff	send_msg@qmsg,fsr2l
  2244  000E3E  C19B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2245  000E42  0E01               	movlw	1
  2246  000E44  6EDF               	movwf	indf2,c
  2247                           
  2248                           ; BSR set to: 1
  2249                           ;messages.c: 60: return (1);
  2250  000E46  0E01               	movlw	1
  2251  000E48  0012               	return	
  2252  000E4A                     __end_of_send_msg:
  2253                           	opt stack 0
  2254                           tblptru	equ	0xFF8
  2255                           tblptrh	equ	0xFF7
  2256                           tblptrl	equ	0xFF6
  2257                           tablat	equ	0xFF5
  2258                           prodh	equ	0xFF4
  2259                           prodl	equ	0xFF3
  2260                           postinc0	equ	0xFEE
  2261                           wreg	equ	0xFE8
  2262                           indf1	equ	0xFE7
  2263                           postdec1	equ	0xFE5
  2264                           fsr1h	equ	0xFE2
  2265                           fsr1l	equ	0xFE1
  2266                           indf2	equ	0xFDF
  2267                           postinc2	equ	0xFDE
  2268                           postdec2	equ	0xFDD
  2269                           fsr2h	equ	0xFDA
  2270                           fsr2l	equ	0xFD9
  2271                           status	equ	0xFD8
  2272                           
  2273 ;; *************** function _timer0_lthread *****************
  2274 ;; Defined at:
  2275 ;;		line 9 in file "../src/timer0_thread.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2278 ;;		 -> main@t0thread_data(2), 
  2279 ;;  msgtype         2    2[BANK1 ] int 
  2280 ;;  length          2    4[BANK1 ] int 
  2281 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2282 ;;		 -> main@msgbuffer(11), 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2285 ;;		 -> main@msgbuffer(11), 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  2    0[BANK1 ] int 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2295 ;;      Params:         0       0       8       0       0
  2296 ;;      Locals:         0       0       2       0       0
  2297 ;;      Temps:          0       0       0       0       0
  2298 ;;      Totals:         0       0      10       0       0
  2299 ;;Total ram usage:       10 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:   11
  2302 ;; This function calls:
  2303 ;;		Nothing
  2304 ;; This function is called by:
  2305 ;;		_main
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text6
  2310  001F64                     __ptext6:
  2311                           	opt stack 0
  2312  001F64                     _timer0_lthread:
  2313                           	opt stack 19
  2314                           
  2315                           ;timer0_thread.c: 10: unsigned int *msgval;
  2316                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2317                           
  2318                           ; BSR set to: 1
  2319                           ;incstack = 0
  2320  001F64  0101               	movlb	1	; () banked
  2321  001F66  0101               	movlb	1	; () banked
  2322  001F68  C18D  F18F         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2323  001F6C  0101               	movlb	1	; () banked
  2324  001F6E  0101               	movlb	1	; () banked
  2325  001F70  C18C  F18E         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2326                           
  2327                           ; BSR set to: 1
  2328  001F74  0012               	return	
  2329  001F76                     __end_of_timer0_lthread:
  2330                           	opt stack 0
  2331                           tblptru	equ	0xFF8
  2332                           tblptrh	equ	0xFF7
  2333                           tblptrl	equ	0xFF6
  2334                           tablat	equ	0xFF5
  2335                           prodh	equ	0xFF4
  2336                           prodl	equ	0xFF3
  2337                           postinc0	equ	0xFEE
  2338                           wreg	equ	0xFE8
  2339                           indf1	equ	0xFE7
  2340                           postdec1	equ	0xFE5
  2341                           fsr1h	equ	0xFE2
  2342                           fsr1l	equ	0xFE1
  2343                           indf2	equ	0xFDF
  2344                           postinc2	equ	0xFDE
  2345                           postdec2	equ	0xFDD
  2346                           fsr2h	equ	0xFDA
  2347                           fsr2l	equ	0xFD9
  2348                           status	equ	0xFD8
  2349                           
  2350 ;; *************** function _init_uart_recv *****************
  2351 ;; Defined at:
  2352 ;;		line 54 in file "../src/my_uart.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2355 ;;		 -> main@uc(13), 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;		None               void
  2360 ;; Registers used:
  2361 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2367 ;;      Params:         0       0       2       0       0
  2368 ;;      Locals:         0       0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0
  2370 ;;      Totals:         0       0       2       0       0
  2371 ;;Total ram usage:        2 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:   11
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text7
  2382  001F12                     __ptext7:
  2383                           	opt stack 0
  2384  001F12                     _init_uart_recv:
  2385                           	opt stack 19
  2386                           
  2387                           ;my_uart.c: 57: uc_ptr = uc;
  2388                           
  2389                           ; BSR set to: 1
  2390                           ;incstack = 0
  2391  001F12  0101               	movlb	1	; () banked
  2392  001F14  C187  F053         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2393  001F18  0101               	movlb	1	; () banked
  2394  001F1A  C186  F052         	movff	init_uart_recv@uc,_uc_ptr
  2395                           
  2396                           ; BSR set to: 1
  2397                           ;my_uart.c: 58: uc_ptr->buflen = 0;
  2398  001F1E  EE20 F005          	lfsr	2,5
  2399  001F22  5052               	movf	_uc_ptr,w,c
  2400  001F24  26D9               	addwf	fsr2l,f,c
  2401  001F26  5053               	movf	_uc_ptr+1,w,c
  2402  001F28  22DA               	addwfc	fsr2h,f,c
  2403  001F2A  0E00               	movlw	0
  2404  001F2C  6EDF               	movwf	indf2,c
  2405                           
  2406                           ; BSR set to: 1
  2407  001F2E  0012               	return	
  2408  001F30                     __end_of_init_uart_recv:
  2409                           	opt stack 0
  2410                           tblptru	equ	0xFF8
  2411                           tblptrh	equ	0xFF7
  2412                           tblptrl	equ	0xFF6
  2413                           tablat	equ	0xFF5
  2414                           prodh	equ	0xFF4
  2415                           prodl	equ	0xFF3
  2416                           postinc0	equ	0xFEE
  2417                           wreg	equ	0xFE8
  2418                           indf1	equ	0xFE7
  2419                           postdec1	equ	0xFE5
  2420                           fsr1h	equ	0xFE2
  2421                           fsr1l	equ	0xFE1
  2422                           indf2	equ	0xFDF
  2423                           postinc2	equ	0xFDE
  2424                           postdec2	equ	0xFDD
  2425                           fsr2h	equ	0xFDA
  2426                           fsr2l	equ	0xFD9
  2427                           status	equ	0xFD8
  2428                           
  2429 ;; *************** function _init_timer1_lthread *****************
  2430 ;; Defined at:
  2431 ;;		line 6 in file "../src/timer1_thread.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2434 ;;		 -> main@t1thread_data(2), 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;		None
  2437 ;; Return value:  Size  Location     Type
  2438 ;;		None               void
  2439 ;; Registers used:
  2440 ;;		wreg, fsr2l, fsr2h
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2446 ;;      Params:         0       0       2       0       0
  2447 ;;      Locals:         0       0       0       0       0
  2448 ;;      Temps:          0       0       0       0       0
  2449 ;;      Totals:         0       0       2       0       0
  2450 ;;Total ram usage:        2 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; Hardware stack levels required when called:   11
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_main
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text8
  2461  001F76                     __ptext8:
  2462                           	opt stack 0
  2463  001F76                     _init_timer1_lthread:
  2464                           	opt stack 19
  2465                           
  2466                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2467                           
  2468                           ; BSR set to: 1
  2469                           ;incstack = 0
  2470  001F76  C186  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2471  001F7A  C187  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2472  001F7E  0E00               	movlw	0
  2473  001F80  6EDE               	movwf	postinc2,c
  2474  001F82  0E00               	movlw	0
  2475  001F84  6EDD               	movwf	postdec2,c
  2476  001F86  0012               	return	
  2477  001F88                     __end_of_init_timer1_lthread:
  2478                           	opt stack 0
  2479                           tblptru	equ	0xFF8
  2480                           tblptrh	equ	0xFF7
  2481                           tblptrl	equ	0xFF6
  2482                           tablat	equ	0xFF5
  2483                           prodh	equ	0xFF4
  2484                           prodl	equ	0xFF3
  2485                           postinc0	equ	0xFEE
  2486                           wreg	equ	0xFE8
  2487                           indf1	equ	0xFE7
  2488                           postdec1	equ	0xFE5
  2489                           fsr1h	equ	0xFE2
  2490                           fsr1l	equ	0xFE1
  2491                           indf2	equ	0xFDF
  2492                           postinc2	equ	0xFDE
  2493                           postdec2	equ	0xFDD
  2494                           fsr2h	equ	0xFDA
  2495                           fsr2l	equ	0xFD9
  2496                           status	equ	0xFD8
  2497                           
  2498 ;; *************** function _init_queues *****************
  2499 ;; Defined at:
  2500 ;;		line 194 in file "../src/messages.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;		None               void
  2507 ;; Registers used:
  2508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2514 ;;      Params:         0       0       0       0       0
  2515 ;;      Locals:         0       0       0       0       0
  2516 ;;      Temps:          0       0       1       0       0
  2517 ;;      Totals:         0       0       1       0       0
  2518 ;;Total ram usage:        1 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:   12
  2521 ;; This function calls:
  2522 ;;		_init_queue
  2523 ;; This function is called by:
  2524 ;;		_main
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text9
  2529  00193E                     __ptext9:
  2530                           	opt stack 0
  2531  00193E                     _init_queues:
  2532                           	opt stack 18
  2533                           
  2534                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2535                           
  2536                           ;incstack = 0
  2537  00193E  0101               	movlb	1	; () banked
  2538  001940  6F8A               	movwf	??_init_queues& (0+255),b
  2539  001942  0E00               	movlw	0
  2540  001944  6E50               	movwf	_MQ_Main_Willing_to_block,c
  2541  001946  0101               	movlb	1	; () banked
  2542  001948  518A               	movf	??_init_queues& (0+255),w,b
  2543                           
  2544                           ; BSR set to: 1
  2545                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2546  00194A  0101               	movlb	1	; () banked
  2547  00194C  0E01               	movlw	high _ToMainLow_MQ
  2548  00194E  0101               	movlb	1	; () banked
  2549  001950  0101               	movlb	1	; () banked
  2550  001952  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2551  001954  0101               	movlb	1	; () banked
  2552  001956  0E43               	movlw	low _ToMainLow_MQ
  2553  001958  0101               	movlb	1	; () banked
  2554  00195A  0101               	movlb	1	; () banked
  2555  00195C  6F86               	movwf	init_queue@qptr& (0+255),b
  2556  00195E  EC29  F00C         	call	_init_queue	;wreg free
  2557                           
  2558                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2559  001962  0101               	movlb	1	; () banked
  2560  001964  0E01               	movlw	high _ToMainHigh_MQ
  2561  001966  0101               	movlb	1	; () banked
  2562  001968  0101               	movlb	1	; () banked
  2563  00196A  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2564  00196C  0101               	movlb	1	; () banked
  2565  00196E  0E00               	movlw	low _ToMainHigh_MQ
  2566  001970  0101               	movlb	1	; () banked
  2567  001972  0101               	movlb	1	; () banked
  2568  001974  6F86               	movwf	init_queue@qptr& (0+255),b
  2569  001976  EC29  F00C         	call	_init_queue	;wreg free
  2570                           
  2571                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2572  00197A  0102               	movlb	2	; () banked
  2573  00197C  0E02               	movlw	high _FromMainLow_MQ
  2574  00197E  0101               	movlb	1	; () banked
  2575  001980  0101               	movlb	1	; () banked
  2576  001982  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2577  001984  0102               	movlb	2	; () banked
  2578  001986  0E43               	movlw	low _FromMainLow_MQ
  2579  001988  0101               	movlb	1	; () banked
  2580  00198A  0101               	movlb	1	; () banked
  2581  00198C  6F86               	movwf	init_queue@qptr& (0+255),b
  2582  00198E  EC29  F00C         	call	_init_queue	;wreg free
  2583                           
  2584                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2585  001992  0102               	movlb	2	; () banked
  2586  001994  0E02               	movlw	high _FromMainHigh_MQ
  2587  001996  0101               	movlb	1	; () banked
  2588  001998  0101               	movlb	1	; () banked
  2589  00199A  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2590  00199C  0102               	movlb	2	; () banked
  2591  00199E  0E00               	movlw	low _FromMainHigh_MQ
  2592  0019A0  0101               	movlb	1	; () banked
  2593  0019A2  0101               	movlb	1	; () banked
  2594  0019A4  6F86               	movwf	init_queue@qptr& (0+255),b
  2595  0019A6  EC29  F00C         	call	_init_queue	;wreg free
  2596  0019AA  0012               	return	
  2597  0019AC                     __end_of_init_queues:
  2598                           	opt stack 0
  2599                           tblptru	equ	0xFF8
  2600                           tblptrh	equ	0xFF7
  2601                           tblptrl	equ	0xFF6
  2602                           tablat	equ	0xFF5
  2603                           prodh	equ	0xFF4
  2604                           prodl	equ	0xFF3
  2605                           postinc0	equ	0xFEE
  2606                           wreg	equ	0xFE8
  2607                           indf1	equ	0xFE7
  2608                           postdec1	equ	0xFE5
  2609                           fsr1h	equ	0xFE2
  2610                           fsr1l	equ	0xFE1
  2611                           indf2	equ	0xFDF
  2612                           postinc2	equ	0xFDE
  2613                           postdec2	equ	0xFDD
  2614                           fsr2h	equ	0xFDA
  2615                           fsr2l	equ	0xFD9
  2616                           status	equ	0xFD8
  2617                           
  2618 ;; *************** function _init_queue *****************
  2619 ;; Defined at:
  2620 ;;		line 14 in file "../src/messages.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2623 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  i               1    3[BANK1 ] unsigned char 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;		None               void
  2628 ;; Registers used:
  2629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2635 ;;      Params:         0       0       2       0       0
  2636 ;;      Locals:         0       0       1       0       0
  2637 ;;      Temps:          0       0       1       0       0
  2638 ;;      Totals:         0       0       4       0       0
  2639 ;;Total ram usage:        4 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:   11
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_init_queues
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text10
  2650  001852                     __ptext10:
  2651                           	opt stack 0
  2652  001852                     _init_queue:
  2653                           	opt stack 18
  2654                           
  2655                           ;messages.c: 15: unsigned char i;
  2656                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2657                           
  2658                           ;incstack = 0
  2659  001852  0101               	movlb	1	; () banked
  2660  001854  EE20 F041          	lfsr	2,65
  2661  001858  0101               	movlb	1	; () banked
  2662  00185A  5186               	movf	init_queue@qptr& (0+255),w,b
  2663  00185C  26D9               	addwf	fsr2l,f,c
  2664  00185E  0101               	movlb	1	; () banked
  2665  001860  5187               	movf	(init_queue@qptr+1)& (0+255),w,b
  2666  001862  22DA               	addwfc	fsr2h,f,c
  2667  001864  0E00               	movlw	0
  2668  001866  6EDF               	movwf	indf2,c
  2669                           
  2670                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2671  001868  0101               	movlb	1	; () banked
  2672  00186A  EE20 F042          	lfsr	2,66
  2673  00186E  0101               	movlb	1	; () banked
  2674  001870  5186               	movf	init_queue@qptr& (0+255),w,b
  2675  001872  26D9               	addwf	fsr2l,f,c
  2676  001874  0101               	movlb	1	; () banked
  2677  001876  5187               	movf	(init_queue@qptr+1)& (0+255),w,b
  2678  001878  22DA               	addwfc	fsr2h,f,c
  2679  00187A  0E00               	movlw	0
  2680  00187C  6EDF               	movwf	indf2,c
  2681                           
  2682                           ; BSR set to: 1
  2683                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2684  00187E  0101               	movlb	1	; () banked
  2685  001880  6F88               	movwf	??_init_queue& (0+255),b
  2686  001882  0E00               	movlw	0
  2687  001884  0101               	movlb	1	; () banked
  2688  001886  0101               	movlb	1	; () banked
  2689  001888  6F89               	movwf	init_queue@i& (0+255),b
  2690  00188A  0101               	movlb	1	; () banked
  2691  00188C  5188               	movf	??_init_queue& (0+255),w,b
  2692                           
  2693                           ; BSR set to: 1
  2694  00188E  0E04               	movlw	4
  2695  001890  0101               	movlb	1	; () banked
  2696  001892  0101               	movlb	1	; () banked
  2697  001894  6589               	cpfsgt	init_queue@i& (0+255),b
  2698  001896  D001               	goto	l3893
  2699  001898  0012               	return	
  2700  00189A                     l3893:
  2701                           
  2702                           ; BSR set to: 1
  2703                           ;messages.c: 20: qptr->queue[i].full = 0;
  2704  00189A  0101               	movlb	1	; () banked
  2705  00189C  0101               	movlb	1	; () banked
  2706  00189E  5189               	movf	init_queue@i& (0+255),w,b
  2707  0018A0  0D0D               	mullw	13
  2708  0018A2  50F3               	movf	prodl,w,c
  2709  0018A4  0101               	movlb	1	; () banked
  2710  0018A6  0101               	movlb	1	; () banked
  2711  0018A8  2586               	addwf	init_queue@qptr& (0+255),w,b
  2712  0018AA  6ED9               	movwf	fsr2l,c
  2713  0018AC  50F4               	movf	prodh,w,c
  2714  0018AE  0101               	movlb	1	; () banked
  2715  0018B0  0101               	movlb	1	; () banked
  2716  0018B2  2187               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2717  0018B4  6EDA               	movwf	fsr2h,c
  2718  0018B6  0E00               	movlw	0
  2719  0018B8  6EDF               	movwf	indf2,c
  2720                           
  2721                           ; BSR set to: 1
  2722  0018BA  0101               	movlb	1	; () banked
  2723  0018BC  0101               	movlb	1	; () banked
  2724  0018BE  2B89               	incf	init_queue@i& (0+255),f,b
  2725                           
  2726                           ; BSR set to: 1
  2727  0018C0  0E04               	movlw	4
  2728  0018C2  0101               	movlb	1	; () banked
  2729  0018C4  0101               	movlb	1	; () banked
  2730  0018C6  6589               	cpfsgt	init_queue@i& (0+255),b
  2731  0018C8  D7E8               	goto	l3893
  2732  0018CA  0012               	return	
  2733  0018CC                     __end_of_init_queue:
  2734                           	opt stack 0
  2735                           tblptru	equ	0xFF8
  2736                           tblptrh	equ	0xFF7
  2737                           tblptrl	equ	0xFF6
  2738                           tablat	equ	0xFF5
  2739                           prodh	equ	0xFF4
  2740                           prodl	equ	0xFF3
  2741                           postinc0	equ	0xFEE
  2742                           wreg	equ	0xFE8
  2743                           indf1	equ	0xFE7
  2744                           postdec1	equ	0xFE5
  2745                           fsr1h	equ	0xFE2
  2746                           fsr1l	equ	0xFE1
  2747                           indf2	equ	0xFDF
  2748                           postinc2	equ	0xFDE
  2749                           postdec2	equ	0xFDD
  2750                           fsr2h	equ	0xFDA
  2751                           fsr2l	equ	0xFD9
  2752                           status	equ	0xFD8
  2753                           
  2754 ;; *************** function _init_i2c *****************
  2755 ;; Defined at:
  2756 ;;		line 431 in file "../src/my_i2c.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  2759 ;;		 -> main@ic(29), 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;		None
  2762 ;; Return value:  Size  Location     Type
  2763 ;;		None               void
  2764 ;; Registers used:
  2765 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2771 ;;      Params:         0       0       2       0       0
  2772 ;;      Locals:         0       0       0       0       0
  2773 ;;      Temps:          0       0       0       0       0
  2774 ;;      Totals:         0       0       2       0       0
  2775 ;;Total ram usage:        2 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:   11
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_main
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text11
  2786  0019AC                     __ptext11:
  2787                           	opt stack 0
  2788  0019AC                     _init_i2c:
  2789                           	opt stack 19
  2790                           
  2791                           ;my_i2c.c: 432: ic_ptr = ic;
  2792                           
  2793                           ; BSR set to: 1
  2794                           ;incstack = 0
  2795  0019AC  0101               	movlb	1	; () banked
  2796  0019AE  0100               	movlb	0	; () banked
  2797  0019B0  C187  F0C6         	movff	init_i2c@ic+1,_ic_ptr+1
  2798  0019B4  0101               	movlb	1	; () banked
  2799  0019B6  0100               	movlb	0	; () banked
  2800  0019B8  C186  F0C5         	movff	init_i2c@ic,_ic_ptr
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;my_i2c.c: 433: ic_ptr->buflen = 0;
  2804  0019BC  0100               	movlb	0	; () banked
  2805  0019BE  EE20 F00A          	lfsr	2,10
  2806  0019C2  0100               	movlb	0	; () banked
  2807  0019C4  51C5               	movf	_ic_ptr& (0+255),w,b
  2808  0019C6  26D9               	addwf	fsr2l,f,c
  2809  0019C8  0100               	movlb	0	; () banked
  2810  0019CA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2811  0019CC  22DA               	addwfc	fsr2h,f,c
  2812  0019CE  0E00               	movlw	0
  2813  0019D0  6EDF               	movwf	indf2,c
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;my_i2c.c: 434: ic_ptr->event_count = 0;
  2817  0019D2  0100               	movlb	0	; () banked
  2818  0019D4  EE20 F00C          	lfsr	2,12
  2819  0019D8  0100               	movlb	0	; () banked
  2820  0019DA  51C5               	movf	_ic_ptr& (0+255),w,b
  2821  0019DC  26D9               	addwf	fsr2l,f,c
  2822  0019DE  0100               	movlb	0	; () banked
  2823  0019E0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2824  0019E2  22DA               	addwfc	fsr2h,f,c
  2825  0019E4  0E00               	movlw	0
  2826  0019E6  6EDF               	movwf	indf2,c
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;my_i2c.c: 435: ic_ptr->status = 0x5;
  2830  0019E8  0100               	movlb	0	; () banked
  2831  0019EA  EE20 F00D          	lfsr	2,13
  2832  0019EE  0100               	movlb	0	; () banked
  2833  0019F0  51C5               	movf	_ic_ptr& (0+255),w,b
  2834  0019F2  26D9               	addwf	fsr2l,f,c
  2835  0019F4  0100               	movlb	0	; () banked
  2836  0019F6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2837  0019F8  22DA               	addwfc	fsr2h,f,c
  2838  0019FA  0E05               	movlw	5
  2839  0019FC  6EDF               	movwf	indf2,c
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;my_i2c.c: 436: ic_ptr->error_count = 0;
  2843  0019FE  0100               	movlb	0	; () banked
  2844  001A00  EE20 F00F          	lfsr	2,15
  2845  001A04  0100               	movlb	0	; () banked
  2846  001A06  51C5               	movf	_ic_ptr& (0+255),w,b
  2847  001A08  26D9               	addwf	fsr2l,f,c
  2848  001A0A  0100               	movlb	0	; () banked
  2849  001A0C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2850  001A0E  22DA               	addwfc	fsr2h,f,c
  2851  001A10  0E00               	movlw	0
  2852  001A12  6EDF               	movwf	indf2,c
  2853                           
  2854                           ; BSR set to: 0
  2855  001A14  0012               	return	
  2856  001A16                     __end_of_init_i2c:
  2857                           	opt stack 0
  2858                           tblptru	equ	0xFF8
  2859                           tblptrh	equ	0xFF7
  2860                           tblptrl	equ	0xFF6
  2861                           tablat	equ	0xFF5
  2862                           prodh	equ	0xFF4
  2863                           prodl	equ	0xFF3
  2864                           postinc0	equ	0xFEE
  2865                           wreg	equ	0xFE8
  2866                           indf1	equ	0xFE7
  2867                           postdec1	equ	0xFE5
  2868                           fsr1h	equ	0xFE2
  2869                           fsr1l	equ	0xFE1
  2870                           indf2	equ	0xFDF
  2871                           postinc2	equ	0xFDE
  2872                           postdec2	equ	0xFDD
  2873                           fsr2h	equ	0xFDA
  2874                           fsr2l	equ	0xFD9
  2875                           status	equ	0xFD8
  2876                           
  2877 ;; *************** function _i2c_master_send *****************
  2878 ;; Defined at:
  2879 ;;		line 44 in file "../src/my_i2c.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  sendlength      1    wreg     unsigned char 
  2882 ;;  recvlength      1    0[BANK1 ] unsigned char 
  2883 ;;  msg             2    1[BANK1 ] PTR unsigned char 
  2884 ;;		 -> main@msgbuffer(11), 
  2885 ;;  slave_addr      1    3[BANK1 ] unsigned char 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  sendlength      1    6[BANK1 ] unsigned char 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      unsigned char 
  2890 ;; Registers used:
  2891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2897 ;;      Params:         0       0       4       0       0
  2898 ;;      Locals:         0       0       1       0       0
  2899 ;;      Temps:          0       0       2       0       0
  2900 ;;      Totals:         0       0       7       0       0
  2901 ;;Total ram usage:        7 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:   11
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_main
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text12
  2912  000BE0                     __ptext12:
  2913                           	opt stack 0
  2914  000BE0                     _i2c_master_send:
  2915                           	opt stack 19
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;incstack = 0
  2919                           ;i2c_master_send@sendlength stored from wreg
  2920  000BE0  CFE8 F18C          	movff	wreg,i2c_master_send@sendlength
  2921                           
  2922                           ;my_i2c.c: 46: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < sendlength; ic_ptr->outbu
      +                          flen++) {
  2923  000BE4  0100               	movlb	0	; () banked
  2924  000BE6  EE20 F01A          	lfsr	2,26
  2925  000BEA  0100               	movlb	0	; () banked
  2926  000BEC  51C5               	movf	_ic_ptr& (0+255),w,b
  2927  000BEE  26D9               	addwf	fsr2l,f,c
  2928  000BF0  0100               	movlb	0	; () banked
  2929  000BF2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2930  000BF4  22DA               	addwfc	fsr2h,f,c
  2931  000BF6  0E00               	movlw	0
  2932  000BF8  6EDF               	movwf	indf2,c
  2933  000BFA  D042               	goto	l3877
  2934  000BFC                     l3873:
  2935                           
  2936                           ;my_i2c.c: 47: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2937  000BFC  0100               	movlb	0	; () banked
  2938  000BFE  EE20 F01A          	lfsr	2,26
  2939  000C02  0100               	movlb	0	; () banked
  2940  000C04  51C5               	movf	_ic_ptr& (0+255),w,b
  2941  000C06  26D9               	addwf	fsr2l,f,c
  2942  000C08  0100               	movlb	0	; () banked
  2943  000C0A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2944  000C0C  22DA               	addwfc	fsr2h,f,c
  2945  000C0E  50DF               	movf	indf2,w,c
  2946  000C10  0101               	movlb	1	; () banked
  2947  000C12  6F8A               	movwf	??_i2c_master_send& (0+255),b
  2948  000C14  0101               	movlb	1	; () banked
  2949  000C16  518A               	movf	??_i2c_master_send& (0+255),w,b
  2950  000C18  0D01               	mullw	1
  2951  000C1A  50F3               	movf	prodl,w,c
  2952  000C1C  0101               	movlb	1	; () banked
  2953  000C1E  0101               	movlb	1	; () banked
  2954  000C20  2587               	addwf	i2c_master_send@msg& (0+255),w,b
  2955  000C22  6ED9               	movwf	fsr2l,c
  2956  000C24  50F4               	movf	prodh,w,c
  2957  000C26  0101               	movlb	1	; () banked
  2958  000C28  0101               	movlb	1	; () banked
  2959  000C2A  2188               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  2960  000C2C  6EDA               	movwf	fsr2h,c
  2961  000C2E  0100               	movlb	0	; () banked
  2962  000C30  EE10 F01A          	lfsr	1,26
  2963  000C34  0100               	movlb	0	; () banked
  2964  000C36  51C5               	movf	_ic_ptr& (0+255),w,b
  2965  000C38  26E1               	addwf	fsr1l,f,c
  2966  000C3A  0100               	movlb	0	; () banked
  2967  000C3C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2968  000C3E  22E2               	addwfc	fsr1h,f,c
  2969  000C40  50E7               	movf	indf1,w,c
  2970  000C42  0101               	movlb	1	; () banked
  2971  000C44  6F8B               	movwf	(??_i2c_master_send+1)& (0+255),b
  2972  000C46  0101               	movlb	1	; () banked
  2973  000C48  518B               	movf	(??_i2c_master_send+1)& (0+255),w,b
  2974  000C4A  0D01               	mullw	1
  2975  000C4C  0E10               	movlw	16
  2976  000C4E  26F3               	addwf	prodl,f,c
  2977  000C50  0E00               	movlw	0
  2978  000C52  22F4               	addwfc	prodh,f,c
  2979  000C54  50F3               	movf	prodl,w,c
  2980  000C56  0100               	movlb	0	; () banked
  2981  000C58  0100               	movlb	0	; () banked
  2982  000C5A  25C5               	addwf	_ic_ptr& (0+255),w,b
  2983  000C5C  6EE1               	movwf	fsr1l,c
  2984  000C5E  50F4               	movf	prodh,w,c
  2985  000C60  0100               	movlb	0	; () banked
  2986  000C62  0100               	movlb	0	; () banked
  2987  000C64  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2988  000C66  6EE2               	movwf	fsr1h,c
  2989  000C68  CFDF FFE7          	movff	indf2,indf1
  2990                           
  2991                           ; BSR set to: 0
  2992  000C6C  0100               	movlb	0	; () banked
  2993  000C6E  EE20 F01A          	lfsr	2,26
  2994  000C72  0100               	movlb	0	; () banked
  2995  000C74  51C5               	movf	_ic_ptr& (0+255),w,b
  2996  000C76  26D9               	addwf	fsr2l,f,c
  2997  000C78  0100               	movlb	0	; () banked
  2998  000C7A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  2999  000C7C  22DA               	addwfc	fsr2h,f,c
  3000  000C7E  2ADF               	incf	indf2,f,c
  3001  000C80                     l3877:
  3002                           
  3003                           ; BSR set to: 0
  3004  000C80  0100               	movlb	0	; () banked
  3005  000C82  EE20 F01A          	lfsr	2,26
  3006  000C86  0100               	movlb	0	; () banked
  3007  000C88  51C5               	movf	_ic_ptr& (0+255),w,b
  3008  000C8A  26D9               	addwf	fsr2l,f,c
  3009  000C8C  0100               	movlb	0	; () banked
  3010  000C8E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3011  000C90  22DA               	addwfc	fsr2h,f,c
  3012  000C92  50DF               	movf	indf2,w,c
  3013  000C94  0101               	movlb	1	; () banked
  3014  000C96  6F8A               	movwf	??_i2c_master_send& (0+255),b
  3015  000C98  0101               	movlb	1	; () banked
  3016  000C9A  0101               	movlb	1	; () banked
  3017  000C9C  518C               	movf	i2c_master_send@sendlength& (0+255),w,b
  3018  000C9E  0101               	movlb	1	; () banked
  3019  000CA0  5D8A               	subwf	??_i2c_master_send& (0+255),w,b
  3020  000CA2  A0D8               	btfss	status,0,c
  3021  000CA4  D7AB               	goto	l3873
  3022                           
  3023                           ; BSR set to: 1
  3024                           ;my_i2c.c: 48: }
  3025                           ;my_i2c.c: 50: ic_ptr->slave_addr = slave_addr;
  3026                           
  3027                           ; BSR set to: 1
  3028  000CA6  0100               	movlb	0	; () banked
  3029  000CA8  EE20 F01C          	lfsr	2,28
  3030  000CAC  0100               	movlb	0	; () banked
  3031  000CAE  51C5               	movf	_ic_ptr& (0+255),w,b
  3032  000CB0  26D9               	addwf	fsr2l,f,c
  3033  000CB2  0100               	movlb	0	; () banked
  3034  000CB4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3035  000CB6  22DA               	addwfc	fsr2h,f,c
  3036  000CB8  0101               	movlb	1	; () banked
  3037  000CBA  C189  FFDF         	movff	i2c_master_send@slave_addr,indf2
  3038                           
  3039                           ;my_i2c.c: 51: ic_ptr->outbuflen = sendlength;
  3040  000CBE  0100               	movlb	0	; () banked
  3041  000CC0  EE20 F01A          	lfsr	2,26
  3042  000CC4  0100               	movlb	0	; () banked
  3043  000CC6  51C5               	movf	_ic_ptr& (0+255),w,b
  3044  000CC8  26D9               	addwf	fsr2l,f,c
  3045  000CCA  0100               	movlb	0	; () banked
  3046  000CCC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3047  000CCE  22DA               	addwfc	fsr2h,f,c
  3048  000CD0  0101               	movlb	1	; () banked
  3049  000CD2  C18C  FFDF         	movff	i2c_master_send@sendlength,indf2
  3050                           
  3051                           ;my_i2c.c: 52: ic_ptr->buflen = recvlength;
  3052  000CD6  0100               	movlb	0	; () banked
  3053  000CD8  EE20 F00A          	lfsr	2,10
  3054  000CDC  0100               	movlb	0	; () banked
  3055  000CDE  51C5               	movf	_ic_ptr& (0+255),w,b
  3056  000CE0  26D9               	addwf	fsr2l,f,c
  3057  000CE2  0100               	movlb	0	; () banked
  3058  000CE4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3059  000CE6  22DA               	addwfc	fsr2h,f,c
  3060  000CE8  0101               	movlb	1	; () banked
  3061  000CEA  C186  FFDF         	movff	i2c_master_send@recvlength,indf2
  3062                           
  3063                           ;my_i2c.c: 53: ic_ptr->status = 0xA;
  3064  000CEE  0100               	movlb	0	; () banked
  3065  000CF0  EE20 F00D          	lfsr	2,13
  3066  000CF4  0100               	movlb	0	; () banked
  3067  000CF6  51C5               	movf	_ic_ptr& (0+255),w,b
  3068  000CF8  26D9               	addwf	fsr2l,f,c
  3069  000CFA  0100               	movlb	0	; () banked
  3070  000CFC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3071  000CFE  22DA               	addwfc	fsr2h,f,c
  3072  000D00  0E0A               	movlw	10
  3073  000D02  6EDF               	movwf	indf2,c
  3074                           
  3075                           ;my_i2c.c: 54: ic_ptr->outbufind = 0;
  3076  000D04  0100               	movlb	0	; () banked
  3077  000D06  EE20 F01B          	lfsr	2,27
  3078  000D0A  0100               	movlb	0	; () banked
  3079  000D0C  51C5               	movf	_ic_ptr& (0+255),w,b
  3080  000D0E  26D9               	addwf	fsr2l,f,c
  3081  000D10  0100               	movlb	0	; () banked
  3082  000D12  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3083  000D14  22DA               	addwfc	fsr2h,f,c
  3084  000D16  0E00               	movlw	0
  3085  000D18  6EDF               	movwf	indf2,c
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;my_i2c.c: 56: SSPCON2bits.SEN = 1;
  3089  000D1A  80C5               	bsf	4037,0,c	;volatile
  3090  000D1C  0012               	return	
  3091  000D1E                     __end_of_i2c_master_send:
  3092                           	opt stack 0
  3093                           tblptru	equ	0xFF8
  3094                           tblptrh	equ	0xFF7
  3095                           tblptrl	equ	0xFF6
  3096                           tablat	equ	0xFF5
  3097                           prodh	equ	0xFF4
  3098                           prodl	equ	0xFF3
  3099                           postinc0	equ	0xFEE
  3100                           wreg	equ	0xFE8
  3101                           indf1	equ	0xFE7
  3102                           postdec1	equ	0xFE5
  3103                           fsr1h	equ	0xFE2
  3104                           fsr1l	equ	0xFE1
  3105                           indf2	equ	0xFDF
  3106                           postinc2	equ	0xFDE
  3107                           postdec2	equ	0xFDD
  3108                           fsr2h	equ	0xFDA
  3109                           fsr2l	equ	0xFD9
  3110                           status	equ	0xFD8
  3111                           
  3112 ;; *************** function _i2c_configure_slave *****************
  3113 ;; Defined at:
  3114 ;;		line 442 in file "../src/my_i2c.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  addr            1    wreg     unsigned char 
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;  addr            1    0[BANK1 ] unsigned char 
  3119 ;; Return value:  Size  Location     Type
  3120 ;;		None               void
  3121 ;; Registers used:
  3122 ;;		wreg, status,2, status,0
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3128 ;;      Params:         0       0       0       0       0
  3129 ;;      Locals:         0       0       1       0       0
  3130 ;;      Temps:          0       0       0       0       0
  3131 ;;      Totals:         0       0       1       0       0
  3132 ;;Total ram usage:        1 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; Hardware stack levels required when called:   11
  3135 ;; This function calls:
  3136 ;;		Nothing
  3137 ;; This function is called by:
  3138 ;;		_main
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text13
  3143  001E5E                     __ptext13:
  3144                           	opt stack 0
  3145  001E5E                     _i2c_configure_slave:
  3146                           	opt stack 19
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;incstack = 0
  3150                           ;i2c_configure_slave@addr stored from wreg
  3151  001E5E  CFE8 F186          	movff	wreg,i2c_configure_slave@addr
  3152                           
  3153                           ;my_i2c.c: 454: TRISCbits.TRISC3 = 1;
  3154  001E62  8694               	bsf	3988,3,c	;volatile
  3155                           
  3156                           ;my_i2c.c: 455: TRISCbits.TRISC4 = 1;
  3157  001E64  8894               	bsf	3988,4,c	;volatile
  3158                           
  3159                           ;my_i2c.c: 460: SSPADD = addr;
  3160  001E66  C186  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3161                           
  3162                           ;my_i2c.c: 462: SSPSTAT = 0x0;
  3163  001E6A  0E00               	movlw	0
  3164  001E6C  6EC7               	movwf	4039,c	;volatile
  3165                           
  3166                           ;my_i2c.c: 463: SSPCON1 = 0x0;
  3167  001E6E  0E00               	movlw	0
  3168  001E70  6EC6               	movwf	4038,c	;volatile
  3169                           
  3170                           ;my_i2c.c: 464: SSPCON2 = 0x0;
  3171  001E72  0E00               	movlw	0
  3172  001E74  6EC5               	movwf	4037,c	;volatile
  3173                           
  3174                           ;my_i2c.c: 465: SSPCON1 |= 0x0E;
  3175  001E76  0E0E               	movlw	14
  3176  001E78  12C6               	iorwf	4038,f,c	;volatile
  3177                           
  3178                           ;my_i2c.c: 466: SSPSTAT |= 0b10000000;
  3179  001E7A  8EC7               	bsf	4039,7,c	;volatile
  3180                           
  3181                           ;my_i2c.c: 469: TRISCbits.TRISC3 = 1;
  3182  001E7C  8694               	bsf	3988,3,c	;volatile
  3183                           
  3184                           ;my_i2c.c: 470: TRISCbits.TRISC4 = 1;
  3185  001E7E  8894               	bsf	3988,4,c	;volatile
  3186                           
  3187                           ;my_i2c.c: 491: SSPCON2bits.SEN = 1;
  3188  001E80  80C5               	bsf	4037,0,c	;volatile
  3189                           
  3190                           ;my_i2c.c: 492: SSPCON1 |= 0b00100000;
  3191  001E82  8AC6               	bsf	4038,5,c	;volatile
  3192  001E84  0012               	return	
  3193  001E86                     __end_of_i2c_configure_slave:
  3194                           	opt stack 0
  3195                           tblptru	equ	0xFF8
  3196                           tblptrh	equ	0xFF7
  3197                           tblptrl	equ	0xFF6
  3198                           tablat	equ	0xFF5
  3199                           prodh	equ	0xFF4
  3200                           prodl	equ	0xFF3
  3201                           postinc0	equ	0xFEE
  3202                           wreg	equ	0xFE8
  3203                           indf1	equ	0xFE7
  3204                           postdec1	equ	0xFE5
  3205                           fsr1h	equ	0xFE2
  3206                           fsr1l	equ	0xFE1
  3207                           indf2	equ	0xFDF
  3208                           postinc2	equ	0xFDE
  3209                           postdec2	equ	0xFDD
  3210                           fsr2h	equ	0xFDA
  3211                           fsr2l	equ	0xFD9
  3212                           status	equ	0xFD8
  3213                           
  3214 ;; *************** function _enable_interrupts *****************
  3215 ;; Defined at:
  3216 ;;		line 15 in file "../src/interrupts.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;		None               void
  3223 ;; Registers used:
  3224 ;;		None
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3230 ;;      Params:         0       0       0       0       0
  3231 ;;      Locals:         0       0       0       0       0
  3232 ;;      Temps:          0       0       0       0       0
  3233 ;;      Totals:         0       0       0       0       0
  3234 ;;Total ram usage:        0 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:   11
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		_main
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text14
  3245  001FF4                     __ptext14:
  3246                           	opt stack 0
  3247  001FF4                     _enable_interrupts:
  3248                           	opt stack 19
  3249                           
  3250                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3251                           
  3252                           ;incstack = 0
  3253  001FF4  8ED0               	bsf	4048,7,c	;volatile
  3254                           
  3255                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3256  001FF6  8EF2               	bsf	intcon,7,c	;volatile
  3257                           
  3258                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3259  001FF8  8CF2               	bsf	intcon,6,c	;volatile
  3260  001FFA  0012               	return	
  3261  001FFC                     __end_of_enable_interrupts:
  3262                           	opt stack 0
  3263                           tblptru	equ	0xFF8
  3264                           tblptrh	equ	0xFF7
  3265                           tblptrl	equ	0xFF6
  3266                           tablat	equ	0xFF5
  3267                           prodh	equ	0xFF4
  3268                           prodl	equ	0xFF3
  3269                           intcon	equ	0xFF2
  3270                           postinc0	equ	0xFEE
  3271                           wreg	equ	0xFE8
  3272                           indf1	equ	0xFE7
  3273                           postdec1	equ	0xFE5
  3274                           fsr1h	equ	0xFE2
  3275                           fsr1l	equ	0xFE1
  3276                           indf2	equ	0xFDF
  3277                           postinc2	equ	0xFDE
  3278                           postdec2	equ	0xFDD
  3279                           fsr2h	equ	0xFDA
  3280                           fsr2l	equ	0xFD9
  3281                           status	equ	0xFD8
  3282                           
  3283 ;; *************** function _block_on_To_msgqueues *****************
  3284 ;; Defined at:
  3285 ;;		line 258 in file "../src/messages.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;		None               void
  3292 ;; Registers used:
  3293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3299 ;;      Params:         0       0       0       0       0
  3300 ;;      Locals:         0       0       0       0       0
  3301 ;;      Temps:          0       0       1       0       0
  3302 ;;      Totals:         0       0       1       0       0
  3303 ;;Total ram usage:        1 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:   14
  3306 ;; This function calls:
  3307 ;;		_Delay1KTCYx
  3308 ;;		_check_msg
  3309 ;;		_in_main
  3310 ;; This function is called by:
  3311 ;;		_main
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text15
  3316  0017D4                     __ptext15:
  3317                           	opt stack 0
  3318  0017D4                     _block_on_To_msgqueues:
  3319                           	opt stack 16
  3320                           
  3321                           ;messages.c: 259: if (!in_main()) {
  3322                           
  3323                           ;incstack = 0
  3324  0017D4  EC12  F00E         	call	_in_main	;wreg free
  3325  0017D8  0101               	movlb	1	; () banked
  3326  0017DA  0101               	movlb	1	; () banked
  3327  0017DC  518B               	movf	(?_in_main+1)& (0+255),w,b
  3328  0017DE  0101               	movlb	1	; () banked
  3329  0017E0  118A               	iorwf	?_in_main& (0+255),w,b
  3330  0017E2  B4D8               	btfsc	status,2,c
  3331  0017E4  0012               	return	
  3332                           
  3333                           ; BSR set to: 1
  3334                           ;messages.c: 261: }
  3335                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3336                           
  3337                           ; BSR set to: 1
  3338                           
  3339                           ; BSR set to: 1
  3340                           ;messages.c: 260: return;
  3341  0017E6  0101               	movlb	1	; () banked
  3342  0017E8  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  3343  0017EA  0E01               	movlw	1
  3344  0017EC  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3345  0017EE  0101               	movlb	1	; () banked
  3346  0017F0  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3347  0017F2                     l3827:
  3348                           
  3349                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3350  0017F2  0101               	movlb	1	; () banked
  3351  0017F4  0E01               	movlw	high _ToMainHigh_MQ
  3352  0017F6  0101               	movlb	1	; () banked
  3353  0017F8  0101               	movlb	1	; () banked
  3354  0017FA  6F87               	movwf	(check_msg@qptr+1)& (0+255),b
  3355  0017FC  0101               	movlb	1	; () banked
  3356  0017FE  0E00               	movlw	low _ToMainHigh_MQ
  3357  001800  0101               	movlb	1	; () banked
  3358  001802  0101               	movlb	1	; () banked
  3359  001804  6F86               	movwf	check_msg@qptr& (0+255),b
  3360  001806  ECCD  F00E         	call	_check_msg	;wreg free
  3361  00180A  0900               	iorlw	0
  3362  00180C  B4D8               	btfsc	status,2,c
  3363  00180E  D007               	goto	l3833
  3364                           
  3365                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3366  001810  0101               	movlb	1	; () banked
  3367  001812  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  3368  001814  0E00               	movlw	0
  3369  001816  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3370  001818  0101               	movlb	1	; () banked
  3371  00181A  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3372  00181C  0012               	return	
  3373  00181E                     l3833:
  3374                           
  3375                           ;messages.c: 271: }
  3376                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3377  00181E  0101               	movlb	1	; () banked
  3378  001820  0E01               	movlw	high _ToMainLow_MQ
  3379  001822  0101               	movlb	1	; () banked
  3380  001824  0101               	movlb	1	; () banked
  3381  001826  6F87               	movwf	(check_msg@qptr+1)& (0+255),b
  3382  001828  0101               	movlb	1	; () banked
  3383  00182A  0E43               	movlw	low _ToMainLow_MQ
  3384  00182C  0101               	movlb	1	; () banked
  3385  00182E  0101               	movlb	1	; () banked
  3386  001830  6F86               	movwf	check_msg@qptr& (0+255),b
  3387  001832  ECCD  F00E         	call	_check_msg	;wreg free
  3388  001836  0900               	iorlw	0
  3389  001838  B4D8               	btfsc	status,2,c
  3390  00183A  D007               	goto	l3839
  3391                           
  3392                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3393  00183C  0101               	movlb	1	; () banked
  3394  00183E  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  3395  001840  0E00               	movlw	0
  3396  001842  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3397  001844  0101               	movlb	1	; () banked
  3398  001846  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3399  001848  0012               	return	
  3400  00184A                     l3839:
  3401                           
  3402                           ;messages.c: 278: }
  3403                           ;messages.c: 279: Delay1KTCYx(10);
  3404  00184A  0E0A               	movlw	10
  3405  00184C  ECA7  F00F         	call	_Delay1KTCYx
  3406  001850  D7D0               	goto	l3827
  3407  001852                     __end_of_block_on_To_msgqueues:
  3408                           	opt stack 0
  3409                           tblptru	equ	0xFF8
  3410                           tblptrh	equ	0xFF7
  3411                           tblptrl	equ	0xFF6
  3412                           tablat	equ	0xFF5
  3413                           prodh	equ	0xFF4
  3414                           prodl	equ	0xFF3
  3415                           intcon	equ	0xFF2
  3416                           postinc0	equ	0xFEE
  3417                           wreg	equ	0xFE8
  3418                           indf1	equ	0xFE7
  3419                           postdec1	equ	0xFE5
  3420                           fsr1h	equ	0xFE2
  3421                           fsr1l	equ	0xFE1
  3422                           indf2	equ	0xFDF
  3423                           postinc2	equ	0xFDE
  3424                           postdec2	equ	0xFDD
  3425                           fsr2h	equ	0xFDA
  3426                           fsr2l	equ	0xFD9
  3427                           status	equ	0xFD8
  3428                           
  3429 ;; *************** function _in_main *****************
  3430 ;; Defined at:
  3431 ;;		line 41 in file "../src/interrupts.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;		None
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;		None
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  2    4[BANK1 ] int 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0, cstack
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3445 ;;      Params:         0       0       2       0       0
  3446 ;;      Locals:         0       0       0       0       0
  3447 ;;      Temps:          0       0       0       0       0
  3448 ;;      Totals:         0       0       2       0       0
  3449 ;;Total ram usage:        2 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; Hardware stack levels required when called:   13
  3452 ;; This function calls:
  3453 ;;		_in_high_int
  3454 ;;		_in_low_int
  3455 ;; This function is called by:
  3456 ;;		_block_on_To_msgqueues
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           	psect	text16
  3461  001C24                     __ptext16:
  3462                           	opt stack 0
  3463  001C24                     _in_main:
  3464                           	opt stack 16
  3465                           
  3466                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3467                           
  3468                           ;incstack = 0
  3469  001C24  ECEF  F00D         	call	_in_low_int	;wreg free
  3470  001C28  0101               	movlb	1	; () banked
  3471  001C2A  0101               	movlb	1	; () banked
  3472  001C2C  5189               	movf	(?_in_low_int+1)& (0+255),w,b
  3473  001C2E  0101               	movlb	1	; () banked
  3474  001C30  1188               	iorwf	?_in_low_int& (0+255),w,b
  3475  001C32  A4D8               	btfss	status,2,c
  3476  001C34  D011               	goto	l3569
  3477                           
  3478                           ; BSR set to: 1
  3479  001C36  ECC4  F00F         	call	_in_high_int	;wreg free
  3480  001C3A  0101               	movlb	1	; () banked
  3481  001C3C  0101               	movlb	1	; () banked
  3482  001C3E  5187               	movf	(?_in_high_int+1)& (0+255),w,b
  3483  001C40  0101               	movlb	1	; () banked
  3484  001C42  1186               	iorwf	?_in_high_int& (0+255),w,b
  3485  001C44  A4D8               	btfss	status,2,c
  3486  001C46  D008               	goto	l3569
  3487                           
  3488                           ; BSR set to: 1
  3489                           ;interrupts.c: 43: return (1);
  3490  001C48  0E00               	movlw	0
  3491  001C4A  0101               	movlb	1	; () banked
  3492  001C4C  0101               	movlb	1	; () banked
  3493  001C4E  6F8B               	movwf	(?_in_main+1)& (0+255),b
  3494  001C50  0E01               	movlw	1
  3495  001C52  0101               	movlb	1	; () banked
  3496  001C54  6F8A               	movwf	?_in_main& (0+255),b
  3497  001C56  0012               	return	
  3498  001C58                     l3569:
  3499                           
  3500                           ; BSR set to: 1
  3501                           ;interrupts.c: 45: return (0);
  3502  001C58  0E00               	movlw	0
  3503  001C5A  0101               	movlb	1	; () banked
  3504  001C5C  0101               	movlb	1	; () banked
  3505  001C5E  6F8B               	movwf	(?_in_main+1)& (0+255),b
  3506  001C60  0E00               	movlw	0
  3507  001C62  0101               	movlb	1	; () banked
  3508  001C64  6F8A               	movwf	?_in_main& (0+255),b
  3509  001C66  0012               	return	
  3510  001C68                     __end_of_in_main:
  3511                           	opt stack 0
  3512                           tblptru	equ	0xFF8
  3513                           tblptrh	equ	0xFF7
  3514                           tblptrl	equ	0xFF6
  3515                           tablat	equ	0xFF5
  3516                           prodh	equ	0xFF4
  3517                           prodl	equ	0xFF3
  3518                           intcon	equ	0xFF2
  3519                           postinc0	equ	0xFEE
  3520                           wreg	equ	0xFE8
  3521                           indf1	equ	0xFE7
  3522                           postdec1	equ	0xFE5
  3523                           fsr1h	equ	0xFE2
  3524                           fsr1l	equ	0xFE1
  3525                           indf2	equ	0xFDF
  3526                           postinc2	equ	0xFDE
  3527                           postdec2	equ	0xFDD
  3528                           fsr2h	equ	0xFDA
  3529                           fsr2l	equ	0xFD9
  3530                           status	equ	0xFD8
  3531                           
  3532 ;; *************** function _in_low_int *****************
  3533 ;; Defined at:
  3534 ;;		line 31 in file "../src/interrupts.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;		None
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  2    2[BANK1 ] int 
  3541 ;; Registers used:
  3542 ;;		wreg, status,2, status,0, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3548 ;;      Params:         0       0       2       0       0
  3549 ;;      Locals:         0       0       0       0       0
  3550 ;;      Temps:          0       0       0       0       0
  3551 ;;      Totals:         0       0       2       0       0
  3552 ;;Total ram usage:        2 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:   12
  3555 ;; This function calls:
  3556 ;;		_in_high_int
  3557 ;; This function is called by:
  3558 ;;		_in_main
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text17
  3563  001BDE                     __ptext17:
  3564                           	opt stack 0
  3565  001BDE                     _in_low_int:
  3566                           	opt stack 16
  3567                           
  3568                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3569                           
  3570                           ; BSR set to: 1
  3571                           ;incstack = 0
  3572  001BDE  ACF2               	btfss	intcon,6,c	;volatile
  3573  001BE0  D008               	goto	l3547
  3574                           
  3575                           ;interrupts.c: 33: return (0);
  3576  001BE2  0E00               	movlw	0
  3577  001BE4  0101               	movlb	1	; () banked
  3578  001BE6  0101               	movlb	1	; () banked
  3579  001BE8  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3580  001BEA  0E00               	movlw	0
  3581  001BEC  0101               	movlb	1	; () banked
  3582  001BEE  6F88               	movwf	?_in_low_int& (0+255),b
  3583  001BF0  0012               	return	
  3584  001BF2                     l3547:
  3585  001BF2  ECC4  F00F         	call	_in_high_int	;wreg free
  3586  001BF6  0101               	movlb	1	; () banked
  3587  001BF8  0101               	movlb	1	; () banked
  3588  001BFA  5187               	movf	(?_in_high_int+1)& (0+255),w,b
  3589  001BFC  0101               	movlb	1	; () banked
  3590  001BFE  1186               	iorwf	?_in_high_int& (0+255),w,b
  3591  001C00  B4D8               	btfsc	status,2,c
  3592  001C02  D008               	goto	l3555
  3593                           
  3594                           ; BSR set to: 1
  3595                           ;interrupts.c: 35: return (0);
  3596  001C04  0E00               	movlw	0
  3597  001C06  0101               	movlb	1	; () banked
  3598  001C08  0101               	movlb	1	; () banked
  3599  001C0A  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3600  001C0C  0E00               	movlw	0
  3601  001C0E  0101               	movlb	1	; () banked
  3602  001C10  6F88               	movwf	?_in_low_int& (0+255),b
  3603  001C12  0012               	return	
  3604  001C14                     l3555:
  3605                           
  3606                           ; BSR set to: 1
  3607                           ;interrupts.c: 37: return (1);
  3608  001C14  0E00               	movlw	0
  3609  001C16  0101               	movlb	1	; () banked
  3610  001C18  0101               	movlb	1	; () banked
  3611  001C1A  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3612  001C1C  0E01               	movlw	1
  3613  001C1E  0101               	movlb	1	; () banked
  3614  001C20  6F88               	movwf	?_in_low_int& (0+255),b
  3615  001C22  0012               	return	
  3616  001C24                     __end_of_in_low_int:
  3617                           	opt stack 0
  3618                           tblptru	equ	0xFF8
  3619                           tblptrh	equ	0xFF7
  3620                           tblptrl	equ	0xFF6
  3621                           tablat	equ	0xFF5
  3622                           prodh	equ	0xFF4
  3623                           prodl	equ	0xFF3
  3624                           intcon	equ	0xFF2
  3625                           postinc0	equ	0xFEE
  3626                           wreg	equ	0xFE8
  3627                           indf1	equ	0xFE7
  3628                           postdec1	equ	0xFE5
  3629                           fsr1h	equ	0xFE2
  3630                           fsr1l	equ	0xFE1
  3631                           indf2	equ	0xFDF
  3632                           postinc2	equ	0xFDE
  3633                           postdec2	equ	0xFDD
  3634                           fsr2h	equ	0xFDA
  3635                           fsr2l	equ	0xFD9
  3636                           status	equ	0xFD8
  3637                           
  3638 ;; *************** function _in_high_int *****************
  3639 ;; Defined at:
  3640 ;;		line 23 in file "../src/interrupts.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;		None
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  2    0[BANK1 ] int 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3654 ;;      Params:         0       0       2       0       0
  3655 ;;      Locals:         0       0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0
  3657 ;;      Totals:         0       0       2       0       0
  3658 ;;Total ram usage:        2 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:   11
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_in_low_int
  3665 ;;		_in_main
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text18
  3670  001F88                     __ptext18:
  3671                           	opt stack 0
  3672  001F88                     _in_high_int:
  3673                           	opt stack 16
  3674                           
  3675                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  3676                           
  3677                           ; BSR set to: 1
  3678                           ;incstack = 0
  3679  001F88  0E00               	movlw	0
  3680  001F8A  AEF2               	btfss	intcon,7,c	;volatile
  3681  001F8C  0E01               	movlw	1
  3682  001F8E  0101               	movlb	1	; () banked
  3683  001F90  0101               	movlb	1	; () banked
  3684  001F92  6F86               	movwf	?_in_high_int& (0+255),b
  3685  001F94  0101               	movlb	1	; () banked
  3686  001F96  6B87               	clrf	(?_in_high_int+1)& (0+255),b
  3687  001F98  0012               	return	
  3688  001F9A                     __end_of_in_high_int:
  3689                           	opt stack 0
  3690                           tblptru	equ	0xFF8
  3691                           tblptrh	equ	0xFF7
  3692                           tblptrl	equ	0xFF6
  3693                           tablat	equ	0xFF5
  3694                           prodh	equ	0xFF4
  3695                           prodl	equ	0xFF3
  3696                           intcon	equ	0xFF2
  3697                           postinc0	equ	0xFEE
  3698                           wreg	equ	0xFE8
  3699                           indf1	equ	0xFE7
  3700                           postdec1	equ	0xFE5
  3701                           fsr1h	equ	0xFE2
  3702                           fsr1l	equ	0xFE1
  3703                           indf2	equ	0xFDF
  3704                           postinc2	equ	0xFDE
  3705                           postdec2	equ	0xFDD
  3706                           fsr2h	equ	0xFDA
  3707                           fsr2l	equ	0xFD9
  3708                           status	equ	0xFD8
  3709                           
  3710 ;; *************** function _check_msg *****************
  3711 ;; Defined at:
  3712 ;;		line 222 in file "../src/messages.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3715 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      unsigned char 
  3720 ;; Registers used:
  3721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3727 ;;      Params:         0       0       2       0       0
  3728 ;;      Locals:         0       0       0       0       0
  3729 ;;      Temps:          0       0       1       0       0
  3730 ;;      Totals:         0       0       3       0       0
  3731 ;;Total ram usage:        3 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:   11
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_block_on_To_msgqueues
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text19
  3742  001D9A                     __ptext19:
  3743                           	opt stack 0
  3744  001D9A                     _check_msg:
  3745                           	opt stack 18
  3746                           
  3747                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3748                           
  3749                           ; BSR set to: 1
  3750                           ;incstack = 0
  3751  001D9A  0101               	movlb	1	; () banked
  3752  001D9C  EE20 F042          	lfsr	2,66
  3753  001DA0  0101               	movlb	1	; () banked
  3754  001DA2  5186               	movf	check_msg@qptr& (0+255),w,b
  3755  001DA4  26D9               	addwf	fsr2l,f,c
  3756  001DA6  0101               	movlb	1	; () banked
  3757  001DA8  5187               	movf	(check_msg@qptr+1)& (0+255),w,b
  3758  001DAA  22DA               	addwfc	fsr2h,f,c
  3759  001DAC  50DF               	movf	indf2,w,c
  3760  001DAE  0101               	movlb	1	; () banked
  3761  001DB0  6F88               	movwf	??_check_msg& (0+255),b
  3762  001DB2  0101               	movlb	1	; () banked
  3763  001DB4  5188               	movf	??_check_msg& (0+255),w,b
  3764  001DB6  0D0D               	mullw	13
  3765  001DB8  50F3               	movf	prodl,w,c
  3766  001DBA  0101               	movlb	1	; () banked
  3767  001DBC  0101               	movlb	1	; () banked
  3768  001DBE  2586               	addwf	check_msg@qptr& (0+255),w,b
  3769  001DC0  6ED9               	movwf	fsr2l,c
  3770  001DC2  50F4               	movf	prodh,w,c
  3771  001DC4  0101               	movlb	1	; () banked
  3772  001DC6  0101               	movlb	1	; () banked
  3773  001DC8  2187               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3774  001DCA  6EDA               	movwf	fsr2h,c
  3775  001DCC  50DF               	movf	indf2,w,c
  3776  001DCE  0012               	return	
  3777  001DD0                     __end_of_check_msg:
  3778                           	opt stack 0
  3779                           tblptru	equ	0xFF8
  3780                           tblptrh	equ	0xFF7
  3781                           tblptrl	equ	0xFF6
  3782                           tablat	equ	0xFF5
  3783                           prodh	equ	0xFF4
  3784                           prodl	equ	0xFF3
  3785                           intcon	equ	0xFF2
  3786                           postinc0	equ	0xFEE
  3787                           wreg	equ	0xFE8
  3788                           indf1	equ	0xFE7
  3789                           postdec1	equ	0xFE5
  3790                           fsr1h	equ	0xFE2
  3791                           fsr1l	equ	0xFE1
  3792                           indf2	equ	0xFDF
  3793                           postinc2	equ	0xFDE
  3794                           postdec2	equ	0xFDD
  3795                           fsr2h	equ	0xFDA
  3796                           fsr2l	equ	0xFD9
  3797                           status	equ	0xFD8
  3798                           
  3799 ;; *************** function _Delay1KTCYx *****************
  3800 ;; Defined at:
  3801 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  unit            1    wreg     unsigned char 
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;  unit            1    0[BANK1 ] unsigned char 
  3806 ;; Return value:  Size  Location     Type
  3807 ;;		None               void
  3808 ;; Registers used:
  3809 ;;		wreg
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3815 ;;      Params:         0       0       0       0       0
  3816 ;;      Locals:         0       0       1       0       0
  3817 ;;      Temps:          0       0       0       0       0
  3818 ;;      Totals:         0       0       1       0       0
  3819 ;;Total ram usage:        1 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; Hardware stack levels required when called:   11
  3822 ;; This function calls:
  3823 ;;		Nothing
  3824 ;; This function is called by:
  3825 ;;		_block_on_To_msgqueues
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text20
  3830  001F4E                     __ptext20:
  3831                           	opt stack 0
  3832  001F4E                     _Delay1KTCYx:
  3833                           	opt stack 18
  3834                           
  3835                           ; BSR set to: 1
  3836                           ;incstack = 0
  3837                           ;Delay1KTCYx@unit stored from wreg
  3838  001F4E  CFE8 F186          	movff	wreg,Delay1KTCYx@unit
  3839  001F52                     l797:
  3840  001F52  0EFA               	movlw	250
  3841  001F54                     u3707:
  3842  001F54  F000               	nop	
  3843  001F56  2EE8               	decfsz	wreg,f,c
  3844  001F58  D7FD               	goto	u3707
  3845  001F5A  0101               	movlb	1	; () banked
  3846  001F5C  0101               	movlb	1	; () banked
  3847  001F5E  2F86               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3848  001F60  D7F8               	goto	l797
  3849  001F62  0012               	return	
  3850  001F64                     __end_of_Delay1KTCYx:
  3851                           	opt stack 0
  3852                           tblptru	equ	0xFF8
  3853                           tblptrh	equ	0xFF7
  3854                           tblptrl	equ	0xFF6
  3855                           tablat	equ	0xFF5
  3856                           prodh	equ	0xFF4
  3857                           prodl	equ	0xFF3
  3858                           intcon	equ	0xFF2
  3859                           postinc0	equ	0xFEE
  3860                           wreg	equ	0xFE8
  3861                           indf1	equ	0xFE7
  3862                           postdec1	equ	0xFE5
  3863                           fsr1h	equ	0xFE2
  3864                           fsr1l	equ	0xFE1
  3865                           indf2	equ	0xFDF
  3866                           postinc2	equ	0xFDE
  3867                           postdec2	equ	0xFDD
  3868                           fsr2h	equ	0xFDA
  3869                           fsr2l	equ	0xFD9
  3870                           status	equ	0xFD8
  3871                           
  3872 ;; *************** function _ToMainLow_recvmsg *****************
  3873 ;; Defined at:
  3874 ;;		line 112 in file "../src/messages.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  maxlength       1    wreg     unsigned char 
  3877 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3878 ;;		 -> main@msgtype(1), 
  3879 ;;  data            2   26[BANK1 ] PTR void 
  3880 ;;		 -> main@msgbuffer(11), 
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      char 
  3885 ;; Registers used:
  3886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3892 ;;      Params:         0       0       4       0       0
  3893 ;;      Locals:         0       0       1       0       0
  3894 ;;      Temps:          0       0       0       0       0
  3895 ;;      Totals:         0       0       5       0       0
  3896 ;;Total ram usage:        5 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:   13
  3899 ;; This function calls:
  3900 ;;		_recv_msg
  3901 ;; This function is called by:
  3902 ;;		_main
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           	psect	text21
  3907  001C68                     __ptext21:
  3908                           	opt stack 0
  3909  001C68                     _ToMainLow_recvmsg:
  3910                           	opt stack 17
  3911                           
  3912                           ; BSR set to: 1
  3913                           ;incstack = 0
  3914                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3915  001C68  CFE8 F1A2          	movff	wreg,ToMainLow_recvmsg@maxlength
  3916                           
  3917                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3918  001C6C  0101               	movlb	1	; () banked
  3919  001C6E  0E01               	movlw	high _ToMainLow_MQ
  3920  001C70  0101               	movlb	1	; () banked
  3921  001C72  0101               	movlb	1	; () banked
  3922  001C74  6F91               	movwf	(recv_msg@qptr+1)& (0+255),b
  3923  001C76  0101               	movlb	1	; () banked
  3924  001C78  0E43               	movlw	low _ToMainLow_MQ
  3925  001C7A  0101               	movlb	1	; () banked
  3926  001C7C  0101               	movlb	1	; () banked
  3927  001C7E  6F90               	movwf	recv_msg@qptr& (0+255),b
  3928  001C80  C1A2  F192         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3929  001C84  0101               	movlb	1	; () banked
  3930  001C86  0101               	movlb	1	; () banked
  3931  001C88  C19F  F194         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3932  001C8C  0101               	movlb	1	; () banked
  3933  001C8E  0101               	movlb	1	; () banked
  3934  001C90  C19E  F193         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3935  001C94  0101               	movlb	1	; () banked
  3936  001C96  0101               	movlb	1	; () banked
  3937  001C98  C1A1  F196         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3938  001C9C  0101               	movlb	1	; () banked
  3939  001C9E  0101               	movlb	1	; () banked
  3940  001CA0  C1A0  F195         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3941  001CA4  EC41  F005         	call	_recv_msg	;wreg free
  3942  001CA8  0012               	return	
  3943  001CAA                     __end_of_ToMainLow_recvmsg:
  3944                           	opt stack 0
  3945                           tblptru	equ	0xFF8
  3946                           tblptrh	equ	0xFF7
  3947                           tblptrl	equ	0xFF6
  3948                           tablat	equ	0xFF5
  3949                           prodh	equ	0xFF4
  3950                           prodl	equ	0xFF3
  3951                           intcon	equ	0xFF2
  3952                           postinc0	equ	0xFEE
  3953                           wreg	equ	0xFE8
  3954                           indf1	equ	0xFE7
  3955                           postdec1	equ	0xFE5
  3956                           fsr1h	equ	0xFE2
  3957                           fsr1l	equ	0xFE1
  3958                           indf2	equ	0xFDF
  3959                           postinc2	equ	0xFDE
  3960                           postdec2	equ	0xFDD
  3961                           fsr2h	equ	0xFDA
  3962                           fsr2l	equ	0xFD9
  3963                           status	equ	0xFD8
  3964                           
  3965 ;; *************** function _ToMainHigh_recvmsg *****************
  3966 ;; Defined at:
  3967 ;;		line 135 in file "../src/messages.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  maxlength       1    wreg     unsigned char 
  3970 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3971 ;;		 -> main@msgtype(1), 
  3972 ;;  data            2   26[BANK1 ] PTR void 
  3973 ;;		 -> main@msgbuffer(11), 
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      char 
  3978 ;; Registers used:
  3979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3985 ;;      Params:         0       0       4       0       0
  3986 ;;      Locals:         0       0       1       0       0
  3987 ;;      Temps:          0       0       0       0       0
  3988 ;;      Totals:         0       0       5       0       0
  3989 ;;Total ram usage:        5 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; Hardware stack levels required when called:   13
  3992 ;; This function calls:
  3993 ;;		_recv_msg
  3994 ;; This function is called by:
  3995 ;;		_main
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text22
  4000  001CAA                     __ptext22:
  4001                           	opt stack 0
  4002  001CAA                     _ToMainHigh_recvmsg:
  4003                           	opt stack 17
  4004                           
  4005                           ;incstack = 0
  4006                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4007  001CAA  CFE8 F1A2          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4008                           
  4009                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4010  001CAE  0101               	movlb	1	; () banked
  4011  001CB0  0E01               	movlw	high _ToMainHigh_MQ
  4012  001CB2  0101               	movlb	1	; () banked
  4013  001CB4  0101               	movlb	1	; () banked
  4014  001CB6  6F91               	movwf	(recv_msg@qptr+1)& (0+255),b
  4015  001CB8  0101               	movlb	1	; () banked
  4016  001CBA  0E00               	movlw	low _ToMainHigh_MQ
  4017  001CBC  0101               	movlb	1	; () banked
  4018  001CBE  0101               	movlb	1	; () banked
  4019  001CC0  6F90               	movwf	recv_msg@qptr& (0+255),b
  4020  001CC2  C1A2  F192         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4021  001CC6  0101               	movlb	1	; () banked
  4022  001CC8  0101               	movlb	1	; () banked
  4023  001CCA  C19F  F194         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4024  001CCE  0101               	movlb	1	; () banked
  4025  001CD0  0101               	movlb	1	; () banked
  4026  001CD2  C19E  F193         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4027  001CD6  0101               	movlb	1	; () banked
  4028  001CD8  0101               	movlb	1	; () banked
  4029  001CDA  C1A1  F196         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4030  001CDE  0101               	movlb	1	; () banked
  4031  001CE0  0101               	movlb	1	; () banked
  4032  001CE2  C1A0  F195         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4033  001CE6  EC41  F005         	call	_recv_msg	;wreg free
  4034  001CEA  0012               	return	
  4035  001CEC                     __end_of_ToMainHigh_recvmsg:
  4036                           	opt stack 0
  4037                           tblptru	equ	0xFF8
  4038                           tblptrh	equ	0xFF7
  4039                           tblptrl	equ	0xFF6
  4040                           tablat	equ	0xFF5
  4041                           prodh	equ	0xFF4
  4042                           prodl	equ	0xFF3
  4043                           intcon	equ	0xFF2
  4044                           postinc0	equ	0xFEE
  4045                           wreg	equ	0xFE8
  4046                           indf1	equ	0xFE7
  4047                           postdec1	equ	0xFE5
  4048                           fsr1h	equ	0xFE2
  4049                           fsr1l	equ	0xFE1
  4050                           indf2	equ	0xFDF
  4051                           postinc2	equ	0xFDE
  4052                           postdec2	equ	0xFDD
  4053                           fsr2h	equ	0xFDA
  4054                           fsr2l	equ	0xFD9
  4055                           status	equ	0xFD8
  4056                           
  4057 ;; *************** function _recv_msg *****************
  4058 ;; Defined at:
  4059 ;;		line 63 in file "../src/messages.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4062 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4063 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4064 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  4065 ;;		 -> main@msgtype(1), 
  4066 ;;  data            2   15[BANK1 ] PTR void 
  4067 ;;		 -> main@msgbuffer(11), 
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  4070 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4071 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4072 ;;  tlength         2   20[BANK1 ] unsigned int 
  4073 ;;  slot            1   19[BANK1 ] unsigned char 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      char 
  4076 ;; Registers used:
  4077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4083 ;;      Params:         0       0       7       0       0
  4084 ;;      Locals:         0       0       5       0       0
  4085 ;;      Temps:          0       0       2       0       0
  4086 ;;      Totals:         0       0      14       0       0
  4087 ;;Total ram usage:       14 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:   12
  4090 ;; This function calls:
  4091 ;;		___awmod
  4092 ;;		_memcpy
  4093 ;; This function is called by:
  4094 ;;		_ToMainLow_recvmsg
  4095 ;;		_ToMainHigh_recvmsg
  4096 ;;		_FromMainLow_recvmsg
  4097 ;;		_FromMainHigh_recvmsg
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text23
  4102  000A82                     __ptext23:
  4103                           	opt stack 0
  4104  000A82                     _recv_msg:
  4105                           	opt stack 17
  4106                           
  4107                           ;messages.c: 64: unsigned char slot;
  4108                           ;messages.c: 68: msg *qmsg;
  4109                           ;messages.c: 69: size_t tlength;
  4110                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4111                           
  4112                           ;incstack = 0
  4113  000A82  0101               	movlb	1	; () banked
  4114  000A84  EE20 F042          	lfsr	2,66
  4115  000A88  0101               	movlb	1	; () banked
  4116  000A8A  5190               	movf	recv_msg@qptr& (0+255),w,b
  4117  000A8C  26D9               	addwf	fsr2l,f,c
  4118  000A8E  0101               	movlb	1	; () banked
  4119  000A90  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4120  000A92  22DA               	addwfc	fsr2h,f,c
  4121  000A94  50DF               	movf	indf2,w,c
  4122  000A96  0101               	movlb	1	; () banked
  4123  000A98  0101               	movlb	1	; () banked
  4124  000A9A  6F99               	movwf	recv_msg@slot& (0+255),b
  4125                           
  4126                           ; BSR set to: 1
  4127                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4128  000A9C  0101               	movlb	1	; () banked
  4129  000A9E  0101               	movlb	1	; () banked
  4130  000AA0  5199               	movf	recv_msg@slot& (0+255),w,b
  4131  000AA2  0D0D               	mullw	13
  4132  000AA4  50F3               	movf	prodl,w,c
  4133  000AA6  0101               	movlb	1	; () banked
  4134  000AA8  0101               	movlb	1	; () banked
  4135  000AAA  2590               	addwf	recv_msg@qptr& (0+255),w,b
  4136  000AAC  0101               	movlb	1	; () banked
  4137  000AAE  0101               	movlb	1	; () banked
  4138  000AB0  6F9C               	movwf	recv_msg@qmsg& (0+255),b
  4139  000AB2  50F4               	movf	prodh,w,c
  4140  000AB4  0101               	movlb	1	; () banked
  4141  000AB6  0101               	movlb	1	; () banked
  4142  000AB8  2191               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4143  000ABA  0101               	movlb	1	; () banked
  4144  000ABC  6F9D               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4145                           
  4146                           ; BSR set to: 1
  4147                           ;messages.c: 74: if (qmsg->full == 1) {
  4148  000ABE  0E01               	movlw	1
  4149  000AC0  C19C  FFD9         	movff	recv_msg@qmsg,fsr2l
  4150  000AC4  C19D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4151  000AC8  62DF               	cpfseq	indf2,c
  4152  000ACA  D088               	goto	l3961
  4153                           
  4154                           ; BSR set to: 1
  4155                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4156  000ACC  0101               	movlb	1	; () banked
  4157  000ACE  EE20 F001          	lfsr	2,1
  4158  000AD2  0101               	movlb	1	; () banked
  4159  000AD4  519C               	movf	recv_msg@qmsg& (0+255),w,b
  4160  000AD6  26D9               	addwf	fsr2l,f,c
  4161  000AD8  0101               	movlb	1	; () banked
  4162  000ADA  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4163  000ADC  22DA               	addwfc	fsr2h,f,c
  4164  000ADE  50DF               	movf	indf2,w,c
  4165  000AE0  0101               	movlb	1	; () banked
  4166  000AE2  0101               	movlb	1	; () banked
  4167  000AE4  5D92               	subwf	recv_msg@maxlength& (0+255),w,b
  4168  000AE6  B0D8               	btfsc	status,0,c
  4169  000AE8  D002               	goto	l3945
  4170                           
  4171                           ; BSR set to: 1
  4172                           ;messages.c: 77: return (-3);
  4173  000AEA  0EFD               	movlw	253
  4174  000AEC  0012               	return	
  4175  000AEE                     l3945:
  4176                           
  4177                           ; BSR set to: 1
  4178                           ;messages.c: 78: }
  4179                           ;messages.c: 80: tlength = qmsg->length;
  4180  000AEE  0101               	movlb	1	; () banked
  4181  000AF0  EE20 F001          	lfsr	2,1
  4182  000AF4  0101               	movlb	1	; () banked
  4183  000AF6  519C               	movf	recv_msg@qmsg& (0+255),w,b
  4184  000AF8  26D9               	addwf	fsr2l,f,c
  4185  000AFA  0101               	movlb	1	; () banked
  4186  000AFC  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4187  000AFE  22DA               	addwfc	fsr2h,f,c
  4188  000B00  50DF               	movf	indf2,w,c
  4189  000B02  0101               	movlb	1	; () banked
  4190  000B04  6F97               	movwf	??_recv_msg& (0+255),b
  4191  000B06  0101               	movlb	1	; () banked
  4192  000B08  5197               	movf	??_recv_msg& (0+255),w,b
  4193  000B0A  0101               	movlb	1	; () banked
  4194  000B0C  0101               	movlb	1	; () banked
  4195  000B0E  6F9A               	movwf	recv_msg@tlength& (0+255),b
  4196  000B10  0101               	movlb	1	; () banked
  4197  000B12  6B9B               	clrf	(recv_msg@tlength+1)& (0+255),b
  4198                           
  4199                           ; BSR set to: 1
  4200                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4201  000B14  0101               	movlb	1	; () banked
  4202  000B16  0101               	movlb	1	; () banked
  4203  000B18  C196  F187         	movff	recv_msg@data+1,memcpy@d1+1
  4204  000B1C  0101               	movlb	1	; () banked
  4205  000B1E  0101               	movlb	1	; () banked
  4206  000B20  C195  F186         	movff	recv_msg@data,memcpy@d1
  4207  000B24  0E03               	movlw	3
  4208  000B26  0101               	movlb	1	; () banked
  4209  000B28  0101               	movlb	1	; () banked
  4210  000B2A  259C               	addwf	recv_msg@qmsg& (0+255),w,b
  4211  000B2C  0101               	movlb	1	; () banked
  4212  000B2E  6F97               	movwf	??_recv_msg& (0+255),b
  4213  000B30  0E00               	movlw	0
  4214  000B32  0101               	movlb	1	; () banked
  4215  000B34  0101               	movlb	1	; () banked
  4216  000B36  219D               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4217  000B38  0101               	movlb	1	; () banked
  4218  000B3A  6F98               	movwf	(??_recv_msg+1)& (0+255),b
  4219  000B3C  C197  F188         	movff	??_recv_msg,memcpy@s1
  4220  000B40  C198  F189         	movff	??_recv_msg+1,memcpy@s1+1
  4221  000B44  C19A  F18A         	movff	recv_msg@tlength,memcpy@n
  4222  000B48  C19B  F18B         	movff	recv_msg@tlength+1,memcpy@n+1
  4223  000B4C  EC72  F00D         	call	_memcpy	;wreg free
  4224                           
  4225                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  4226  000B50  0101               	movlb	1	; () banked
  4227  000B52  EE20 F042          	lfsr	2,66
  4228  000B56  0101               	movlb	1	; () banked
  4229  000B58  5190               	movf	recv_msg@qptr& (0+255),w,b
  4230  000B5A  26D9               	addwf	fsr2l,f,c
  4231  000B5C  0101               	movlb	1	; () banked
  4232  000B5E  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4233  000B60  22DA               	addwfc	fsr2h,f,c
  4234  000B62  0101               	movlb	1	; () banked
  4235  000B64  EE10 F042          	lfsr	1,66
  4236  000B68  0101               	movlb	1	; () banked
  4237  000B6A  5190               	movf	recv_msg@qptr& (0+255),w,b
  4238  000B6C  26E1               	addwf	fsr1l,f,c
  4239  000B6E  0101               	movlb	1	; () banked
  4240  000B70  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4241  000B72  22E2               	addwfc	fsr1h,f,c
  4242  000B74  50E7               	movf	indf1,w,c
  4243  000B76  0101               	movlb	1	; () banked
  4244  000B78  6F97               	movwf	??_recv_msg& (0+255),b
  4245  000B7A  0E01               	movlw	1
  4246  000B7C  0101               	movlb	1	; () banked
  4247  000B7E  2597               	addwf	??_recv_msg& (0+255),w,b
  4248  000B80  0101               	movlb	1	; () banked
  4249  000B82  0101               	movlb	1	; () banked
  4250  000B84  6F86               	movwf	___awmod@dividend& (0+255),b
  4251  000B86  0101               	movlb	1	; () banked
  4252  000B88  0101               	movlb	1	; () banked
  4253  000B8A  6B87               	clrf	(___awmod@dividend+1)& (0+255),b
  4254  000B8C  0E00               	movlw	0
  4255  000B8E  2387               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4256  000B90  0E00               	movlw	0
  4257  000B92  0101               	movlb	1	; () banked
  4258  000B94  0101               	movlb	1	; () banked
  4259  000B96  6F89               	movwf	(___awmod@divisor+1)& (0+255),b
  4260  000B98  0E05               	movlw	5
  4261  000B9A  0101               	movlb	1	; () banked
  4262  000B9C  6F88               	movwf	___awmod@divisor& (0+255),b
  4263  000B9E  ECB2  F007         	call	___awmod	;wreg free
  4264  000BA2  0101               	movlb	1	; () banked
  4265  000BA4  0101               	movlb	1	; () banked
  4266  000BA6  5186               	movf	?___awmod& (0+255),w,b
  4267  000BA8  6EDF               	movwf	indf2,c
  4268                           
  4269                           ; BSR set to: 1
  4270                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4271  000BAA  0101               	movlb	1	; () banked
  4272  000BAC  EE20 F002          	lfsr	2,2
  4273  000BB0  0101               	movlb	1	; () banked
  4274  000BB2  519C               	movf	recv_msg@qmsg& (0+255),w,b
  4275  000BB4  26D9               	addwf	fsr2l,f,c
  4276  000BB6  0101               	movlb	1	; () banked
  4277  000BB8  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4278  000BBA  22DA               	addwfc	fsr2h,f,c
  4279  000BBC  C193  FFE1         	movff	recv_msg@msgtype,fsr1l
  4280  000BC0  C194  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4281  000BC4  CFDF FFE7          	movff	indf2,indf1
  4282                           
  4283                           ; BSR set to: 1
  4284                           ;messages.c: 91: qmsg->full = 0;
  4285  000BC8  C19C  FFD9         	movff	recv_msg@qmsg,fsr2l
  4286  000BCC  C19D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4287  000BD0  0E00               	movlw	0
  4288  000BD2  6EDF               	movwf	indf2,c
  4289                           
  4290                           ; BSR set to: 1
  4291                           ;messages.c: 92: return (tlength);
  4292  000BD4  0101               	movlb	1	; () banked
  4293  000BD6  0101               	movlb	1	; () banked
  4294  000BD8  519A               	movf	recv_msg@tlength& (0+255),w,b
  4295  000BDA  0012               	return	
  4296  000BDC                     l3961:
  4297                           
  4298                           ; BSR set to: 1
  4299                           ;messages.c: 94: return (-4);
  4300  000BDC  0EFC               	movlw	252
  4301  000BDE  0012               	return	
  4302  000BE0                     __end_of_recv_msg:
  4303                           	opt stack 0
  4304                           tblptru	equ	0xFF8
  4305                           tblptrh	equ	0xFF7
  4306                           tblptrl	equ	0xFF6
  4307                           tablat	equ	0xFF5
  4308                           prodh	equ	0xFF4
  4309                           prodl	equ	0xFF3
  4310                           intcon	equ	0xFF2
  4311                           postinc0	equ	0xFEE
  4312                           wreg	equ	0xFE8
  4313                           indf1	equ	0xFE7
  4314                           postdec1	equ	0xFE5
  4315                           fsr1h	equ	0xFE2
  4316                           fsr1l	equ	0xFE1
  4317                           indf2	equ	0xFDF
  4318                           postinc2	equ	0xFDE
  4319                           postdec2	equ	0xFDD
  4320                           fsr2h	equ	0xFDA
  4321                           fsr2l	equ	0xFD9
  4322                           status	equ	0xFD8
  4323                           
  4324 ;; *************** function _memcpy *****************
  4325 ;; Defined at:
  4326 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;  d1              2    0[BANK1 ] PTR void 
  4329 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4330 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4331 ;;		 -> main@msgbuffer(11), 
  4332 ;;  s1              2    2[BANK1 ] PTR const void 
  4333 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4334 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4335 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4336 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4337 ;;		 -> main@uc(13), 
  4338 ;;  n               2    4[BANK1 ] unsigned int 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4341 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4342 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4343 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4344 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4345 ;;		 -> main@uc(13), 
  4346 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4347 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4348 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4349 ;;		 -> main@msgbuffer(11), 
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  2    0[BANK1 ] PTR void 
  4352 ;; Registers used:
  4353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4359 ;;      Params:         0       0       6       0       0
  4360 ;;      Locals:         0       0       4       0       0
  4361 ;;      Temps:          0       0       0       0       0
  4362 ;;      Totals:         0       0      10       0       0
  4363 ;;Total ram usage:       10 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:   11
  4366 ;; This function calls:
  4367 ;;		Nothing
  4368 ;; This function is called by:
  4369 ;;		_send_msg
  4370 ;;		_recv_msg
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           	psect	text24
  4375  001AE4                     __ptext24:
  4376                           	opt stack 0
  4377  001AE4                     _memcpy:
  4378                           	opt stack 16
  4379                           
  4380                           ; BSR set to: 1
  4381                           ;incstack = 0
  4382  001AE4  0101               	movlb	1	; () banked
  4383  001AE6  0101               	movlb	1	; () banked
  4384  001AE8  C189  F18F         	movff	memcpy@s1+1,memcpy@s+1
  4385  001AEC  0101               	movlb	1	; () banked
  4386  001AEE  0101               	movlb	1	; () banked
  4387  001AF0  C188  F18E         	movff	memcpy@s1,memcpy@s
  4388  001AF4  0101               	movlb	1	; () banked
  4389  001AF6  0101               	movlb	1	; () banked
  4390  001AF8  C187  F18D         	movff	memcpy@d1+1,memcpy@d+1
  4391  001AFC  0101               	movlb	1	; () banked
  4392  001AFE  0101               	movlb	1	; () banked
  4393  001B00  C186  F18C         	movff	memcpy@d1,memcpy@d
  4394  001B04  D012               	goto	l3931
  4395  001B06                     l3925:
  4396                           
  4397                           ; BSR set to: 1
  4398  001B06  C18E  FFD9         	movff	memcpy@s,fsr2l
  4399  001B0A  C18F  FFDA         	movff	memcpy@s+1,fsr2h
  4400  001B0E  C18C  FFE1         	movff	memcpy@d,fsr1l
  4401  001B12  C18D  FFE2         	movff	memcpy@d+1,fsr1h
  4402  001B16  CFDF FFE7          	movff	indf2,indf1
  4403                           
  4404                           ; BSR set to: 1
  4405  001B1A  0101               	movlb	1	; () banked
  4406  001B1C  0101               	movlb	1	; () banked
  4407  001B1E  4B8E               	infsnz	memcpy@s& (0+255),f,b
  4408  001B20  2B8F               	incf	(memcpy@s+1)& (0+255),f,b
  4409                           
  4410                           ; BSR set to: 1
  4411  001B22  0101               	movlb	1	; () banked
  4412  001B24  0101               	movlb	1	; () banked
  4413  001B26  4B8C               	infsnz	memcpy@d& (0+255),f,b
  4414  001B28  2B8D               	incf	(memcpy@d+1)& (0+255),f,b
  4415  001B2A                     l3931:
  4416                           
  4417                           ; BSR set to: 1
  4418  001B2A  0101               	movlb	1	; () banked
  4419  001B2C  0101               	movlb	1	; () banked
  4420  001B2E  078A               	decf	memcpy@n& (0+255),f,b
  4421  001B30  A0D8               	btfss	status,0,c
  4422  001B32  078B               	decf	(memcpy@n+1)& (0+255),f,b
  4423  001B34  0101               	movlb	1	; () banked
  4424  001B36  298A               	incf	memcpy@n& (0+255),w,b
  4425  001B38  B4D8               	btfsc	status,2,c
  4426  001B3A  298B               	incf	(memcpy@n+1)& (0+255),w,b
  4427  001B3C  B4D8               	btfsc	status,2,c
  4428                           
  4429                           ; BSR set to: 1
  4430                           
  4431                           ; BSR set to: 1
  4432                           ;	Return value of _memcpy is never used
  4433  001B3E  0012               	return	
  4434  001B40  D7E2               	goto	l3925
  4435  001B42                     __end_of_memcpy:
  4436                           	opt stack 0
  4437                           tblptru	equ	0xFF8
  4438                           tblptrh	equ	0xFF7
  4439                           tblptrl	equ	0xFF6
  4440                           tablat	equ	0xFF5
  4441                           prodh	equ	0xFF4
  4442                           prodl	equ	0xFF3
  4443                           intcon	equ	0xFF2
  4444                           postinc0	equ	0xFEE
  4445                           wreg	equ	0xFE8
  4446                           indf1	equ	0xFE7
  4447                           postdec1	equ	0xFE5
  4448                           fsr1h	equ	0xFE2
  4449                           fsr1l	equ	0xFE1
  4450                           indf2	equ	0xFDF
  4451                           postinc2	equ	0xFDE
  4452                           postdec2	equ	0xFDD
  4453                           fsr2h	equ	0xFDA
  4454                           fsr2l	equ	0xFD9
  4455                           status	equ	0xFD8
  4456                           
  4457 ;; *************** function ___awmod *****************
  4458 ;; Defined at:
  4459 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  dividend        2    0[BANK1 ] int 
  4462 ;;  divisor         2    2[BANK1 ] int 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  sign            1    6[BANK1 ] unsigned char 
  4465 ;;  counter         1    5[BANK1 ] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  2    0[BANK1 ] int 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0, prodl
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4475 ;;      Params:         0       0       4       0       0
  4476 ;;      Locals:         0       0       2       0       0
  4477 ;;      Temps:          0       0       1       0       0
  4478 ;;      Totals:         0       0       7       0       0
  4479 ;;Total ram usage:        7 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:   11
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_send_msg
  4486 ;;		_recv_msg
  4487 ;;		i1_send_msg
  4488 ;;		i2_send_msg
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text25
  4493  000F64                     __ptext25:
  4494                           	opt stack 0
  4495  000F64                     ___awmod:
  4496                           	opt stack 16
  4497                           
  4498                           ; BSR set to: 1
  4499                           ;incstack = 0
  4500  000F64  0101               	movlb	1	; () banked
  4501  000F66  6F8A               	movwf	??___awmod& (0+255),b
  4502  000F68  0E00               	movlw	0
  4503  000F6A  0101               	movlb	1	; () banked
  4504  000F6C  0101               	movlb	1	; () banked
  4505  000F6E  6F8C               	movwf	___awmod@sign& (0+255),b
  4506  000F70  0101               	movlb	1	; () banked
  4507  000F72  518A               	movf	??___awmod& (0+255),w,b
  4508                           
  4509                           ; BSR set to: 1
  4510  000F74  0101               	movlb	1	; () banked
  4511  000F76  0101               	movlb	1	; () banked
  4512  000F78  5187               	movf	(___awmod@dividend+1)& (0+255),w,b
  4513  000F7A  0A80               	xorlw	128
  4514  000F7C  6EF3               	movwf	prodl,c
  4515  000F7E  0E80               	movlw	128
  4516  000F80  5CF3               	subwf	prodl,w,c
  4517  000F82  0E00               	movlw	0
  4518  000F84  B4D8               	btfsc	status,2,c
  4519  000F86  5D86               	subwf	___awmod@dividend& (0+255),w,b
  4520  000F88  B0D8               	btfsc	status,0,c
  4521  000F8A  D00F               	goto	l4223
  4522                           
  4523                           ; BSR set to: 1
  4524  000F8C  0101               	movlb	1	; () banked
  4525  000F8E  0101               	movlb	1	; () banked
  4526  000F90  6D86               	negf	___awmod@dividend& (0+255),b
  4527  000F92  0101               	movlb	1	; () banked
  4528  000F94  1F87               	comf	(___awmod@dividend+1)& (0+255),f,b
  4529  000F96  B0D8               	btfsc	status,0,c
  4530  000F98  2B87               	incf	(___awmod@dividend+1)& (0+255),f,b
  4531                           
  4532                           ; BSR set to: 1
  4533  000F9A  0101               	movlb	1	; () banked
  4534  000F9C  6F8A               	movwf	??___awmod& (0+255),b
  4535  000F9E  0E01               	movlw	1
  4536  000FA0  0101               	movlb	1	; () banked
  4537  000FA2  0101               	movlb	1	; () banked
  4538  000FA4  6F8C               	movwf	___awmod@sign& (0+255),b
  4539  000FA6  0101               	movlb	1	; () banked
  4540  000FA8  518A               	movf	??___awmod& (0+255),w,b
  4541  000FAA                     l4223:
  4542                           
  4543                           ; BSR set to: 1
  4544  000FAA  0101               	movlb	1	; () banked
  4545  000FAC  0101               	movlb	1	; () banked
  4546  000FAE  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4547  000FB0  0A80               	xorlw	128
  4548  000FB2  6EF3               	movwf	prodl,c
  4549  000FB4  0E80               	movlw	128
  4550  000FB6  5CF3               	subwf	prodl,w,c
  4551  000FB8  0E00               	movlw	0
  4552  000FBA  B4D8               	btfsc	status,2,c
  4553  000FBC  5D88               	subwf	___awmod@divisor& (0+255),w,b
  4554  000FBE  B0D8               	btfsc	status,0,c
  4555  000FC0  D007               	goto	l4227
  4556                           
  4557                           ; BSR set to: 1
  4558  000FC2  0101               	movlb	1	; () banked
  4559  000FC4  0101               	movlb	1	; () banked
  4560  000FC6  6D88               	negf	___awmod@divisor& (0+255),b
  4561  000FC8  0101               	movlb	1	; () banked
  4562  000FCA  1F89               	comf	(___awmod@divisor+1)& (0+255),f,b
  4563  000FCC  B0D8               	btfsc	status,0,c
  4564  000FCE  2B89               	incf	(___awmod@divisor+1)& (0+255),f,b
  4565  000FD0                     l4227:
  4566                           
  4567                           ; BSR set to: 1
  4568  000FD0  0101               	movlb	1	; () banked
  4569  000FD2  0101               	movlb	1	; () banked
  4570  000FD4  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4571  000FD6  1188               	iorwf	___awmod@divisor& (0+255),w,b
  4572  000FD8  B4D8               	btfsc	status,2,c
  4573  000FDA  D03A               	goto	l4243
  4574                           
  4575                           ; BSR set to: 1
  4576  000FDC  0101               	movlb	1	; () banked
  4577  000FDE  6F8A               	movwf	??___awmod& (0+255),b
  4578  000FE0  0E01               	movlw	1
  4579  000FE2  0101               	movlb	1	; () banked
  4580  000FE4  0101               	movlb	1	; () banked
  4581  000FE6  6F8B               	movwf	___awmod@counter& (0+255),b
  4582  000FE8  0101               	movlb	1	; () banked
  4583  000FEA  518A               	movf	??___awmod& (0+255),w,b
  4584  000FEC  D009               	goto	l4233
  4585  000FEE                     l4231:
  4586                           
  4587                           ; BSR set to: 1
  4588  000FEE  0101               	movlb	1	; () banked
  4589  000FF0  0101               	movlb	1	; () banked
  4590  000FF2  0101               	movlb	1	; () banked
  4591  000FF4  90D8               	bcf	status,0,c
  4592  000FF6  3788               	rlcf	___awmod@divisor& (0+255),f,b
  4593  000FF8  3789               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4594  000FFA  0101               	movlb	1	; () banked
  4595  000FFC  0101               	movlb	1	; () banked
  4596  000FFE  2B8B               	incf	___awmod@counter& (0+255),f,b
  4597  001000                     l4233:
  4598                           
  4599                           ; BSR set to: 1
  4600  001000  0101               	movlb	1	; () banked
  4601  001002  0101               	movlb	1	; () banked
  4602  001004  AF89               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4603  001006  D7F3               	goto	l4231
  4604  001008                     l4235:
  4605                           
  4606                           ; BSR set to: 1
  4607  001008  0101               	movlb	1	; () banked
  4608  00100A  0101               	movlb	1	; () banked
  4609  00100C  5188               	movf	___awmod@divisor& (0+255),w,b
  4610  00100E  0101               	movlb	1	; () banked
  4611  001010  0101               	movlb	1	; () banked
  4612  001012  5D86               	subwf	___awmod@dividend& (0+255),w,b
  4613  001014  0101               	movlb	1	; () banked
  4614  001016  0101               	movlb	1	; () banked
  4615  001018  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4616  00101A  0101               	movlb	1	; () banked
  4617  00101C  0101               	movlb	1	; () banked
  4618  00101E  5987               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4619  001020  A0D8               	btfss	status,0,c
  4620  001022  D00C               	goto	l4239
  4621                           
  4622                           ; BSR set to: 1
  4623  001024  0101               	movlb	1	; () banked
  4624  001026  0101               	movlb	1	; () banked
  4625  001028  5188               	movf	___awmod@divisor& (0+255),w,b
  4626  00102A  0101               	movlb	1	; () banked
  4627  00102C  0101               	movlb	1	; () banked
  4628  00102E  5F86               	subwf	___awmod@dividend& (0+255),f,b
  4629  001030  0101               	movlb	1	; () banked
  4630  001032  0101               	movlb	1	; () banked
  4631  001034  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4632  001036  0101               	movlb	1	; () banked
  4633  001038  0101               	movlb	1	; () banked
  4634  00103A  5B87               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4635  00103C                     l4239:
  4636                           
  4637                           ; BSR set to: 1
  4638  00103C  0101               	movlb	1	; () banked
  4639  00103E  0101               	movlb	1	; () banked
  4640  001040  0101               	movlb	1	; () banked
  4641  001042  90D8               	bcf	status,0,c
  4642  001044  3389               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4643  001046  3388               	rrcf	___awmod@divisor& (0+255),f,b
  4644                           
  4645                           ; BSR set to: 1
  4646  001048  0101               	movlb	1	; () banked
  4647  00104A  0101               	movlb	1	; () banked
  4648  00104C  2F8B               	decfsz	___awmod@counter& (0+255),f,b
  4649  00104E  D7DC               	goto	l4235
  4650  001050                     l4243:
  4651                           
  4652                           ; BSR set to: 1
  4653  001050  0101               	movlb	1	; () banked
  4654  001052  0101               	movlb	1	; () banked
  4655  001054  518C               	movf	___awmod@sign& (0+255),w,b
  4656  001056  B4D8               	btfsc	status,2,c
  4657  001058  D007               	goto	l4247
  4658                           
  4659                           ; BSR set to: 1
  4660  00105A  0101               	movlb	1	; () banked
  4661  00105C  0101               	movlb	1	; () banked
  4662  00105E  6D86               	negf	___awmod@dividend& (0+255),b
  4663  001060  0101               	movlb	1	; () banked
  4664  001062  1F87               	comf	(___awmod@dividend+1)& (0+255),f,b
  4665  001064  B0D8               	btfsc	status,0,c
  4666  001066  2B87               	incf	(___awmod@dividend+1)& (0+255),f,b
  4667  001068                     l4247:
  4668                           
  4669                           ; BSR set to: 1
  4670  001068  C186  F186         	movff	___awmod@dividend,?___awmod
  4671  00106C  C187  F187         	movff	___awmod@dividend+1,?___awmod+1
  4672  001070  0012               	return	
  4673  001072                     __end_of___awmod:
  4674                           	opt stack 0
  4675                           tblptru	equ	0xFF8
  4676                           tblptrh	equ	0xFF7
  4677                           tblptrl	equ	0xFF6
  4678                           tablat	equ	0xFF5
  4679                           prodh	equ	0xFF4
  4680                           prodl	equ	0xFF3
  4681                           intcon	equ	0xFF2
  4682                           postinc0	equ	0xFEE
  4683                           wreg	equ	0xFE8
  4684                           indf1	equ	0xFE7
  4685                           postdec1	equ	0xFE5
  4686                           fsr1h	equ	0xFE2
  4687                           fsr1l	equ	0xFE1
  4688                           indf2	equ	0xFDF
  4689                           postinc2	equ	0xFDE
  4690                           postdec2	equ	0xFDD
  4691                           fsr2h	equ	0xFDA
  4692                           fsr2l	equ	0xFD9
  4693                           status	equ	0xFD8
  4694                           
  4695 ;; *************** function _SetChanADC *****************
  4696 ;; Defined at:
  4697 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;  channel         1    wreg     unsigned char 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;  channel         1    1[BANK1 ] unsigned char 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;		None               void
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4711 ;;      Params:         0       0       0       0       0
  4712 ;;      Locals:         0       0       1       0       0
  4713 ;;      Temps:          0       0       1       0       0
  4714 ;;      Totals:         0       0       2       0       0
  4715 ;;Total ram usage:        2 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:   11
  4718 ;; This function calls:
  4719 ;;		Nothing
  4720 ;; This function is called by:
  4721 ;;		_main
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text26
  4726  001EF2                     __ptext26:
  4727                           	opt stack 0
  4728  001EF2                     _SetChanADC:
  4729                           	opt stack 19
  4730                           
  4731                           ; BSR set to: 1
  4732                           ;incstack = 0
  4733                           ;SetChanADC@channel stored from wreg
  4734  001EF2  CFE8 F187          	movff	wreg,SetChanADC@channel
  4735  001EF6  CFC2 F186          	movff	4034,??_SetChanADC	;volatile
  4736  001EFA  0EC3               	movlw	195
  4737  001EFC  0101               	movlb	1	; () banked
  4738  001EFE  1786               	andwf	??_SetChanADC& (0+255),f,b
  4739  001F00  0101               	movlb	1	; () banked
  4740  001F02  0101               	movlb	1	; () banked
  4741  001F04  90D8               	bcf	status,0,c
  4742  001F06  3187               	rrcf	SetChanADC@channel& (0+255),w,b
  4743  001F08  0B3C               	andlw	60
  4744  001F0A  0101               	movlb	1	; () banked
  4745  001F0C  1186               	iorwf	??_SetChanADC& (0+255),w,b
  4746  001F0E  6EC2               	movwf	4034,c	;volatile
  4747                           
  4748                           ; BSR set to: 1
  4749  001F10  0012               	return	
  4750  001F12                     __end_of_SetChanADC:
  4751                           	opt stack 0
  4752                           tblptru	equ	0xFF8
  4753                           tblptrh	equ	0xFF7
  4754                           tblptrl	equ	0xFF6
  4755                           tablat	equ	0xFF5
  4756                           prodh	equ	0xFF4
  4757                           prodl	equ	0xFF3
  4758                           intcon	equ	0xFF2
  4759                           postinc0	equ	0xFEE
  4760                           wreg	equ	0xFE8
  4761                           indf1	equ	0xFE7
  4762                           postdec1	equ	0xFE5
  4763                           fsr1h	equ	0xFE2
  4764                           fsr1l	equ	0xFE1
  4765                           indf2	equ	0xFDF
  4766                           postinc2	equ	0xFDE
  4767                           postdec2	equ	0xFDD
  4768                           fsr2h	equ	0xFDA
  4769                           fsr2l	equ	0xFD9
  4770                           status	equ	0xFD8
  4771                           
  4772 ;; *************** function _OpenUSART *****************
  4773 ;; Defined at:
  4774 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  config          1    wreg     unsigned char 
  4777 ;;  spbrg           2    0[BANK1 ] unsigned int 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;  config          1    5[BANK1 ] unsigned char 
  4780 ;; Return value:  Size  Location     Type
  4781 ;;		None               void
  4782 ;; Registers used:
  4783 ;;		wreg, status,2
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4789 ;;      Params:         0       0       2       0       0
  4790 ;;      Locals:         0       0       1       0       0
  4791 ;;      Temps:          0       0       3       0       0
  4792 ;;      Totals:         0       0       6       0       0
  4793 ;;Total ram usage:        6 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; Hardware stack levels required when called:   11
  4796 ;; This function calls:
  4797 ;;		Nothing
  4798 ;; This function is called by:
  4799 ;;		_main
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           	psect	text27
  4804  0015B2                     __ptext27:
  4805                           	opt stack 0
  4806  0015B2                     _OpenUSART:
  4807                           	opt stack 19
  4808                           
  4809                           ; BSR set to: 1
  4810                           ;incstack = 0
  4811                           ;OpenUSART@config stored from wreg
  4812  0015B2  CFE8 F18B          	movff	wreg,OpenUSART@config
  4813  0015B6  0E00               	movlw	0
  4814  0015B8  6EAC               	movwf	4012,c	;volatile
  4815  0015BA  0E00               	movlw	0
  4816  0015BC  6EAB               	movwf	4011,c	;volatile
  4817  0015BE  0101               	movlb	1	; () banked
  4818  0015C0  0101               	movlb	1	; () banked
  4819  0015C2  B18B               	btfsc	OpenUSART@config& (0+255),0,b
  4820                           
  4821                           ; BSR set to: 1
  4822  0015C4  88AC               	bsf	4012,4,c	;volatile
  4823                           
  4824                           ; BSR set to: 1
  4825                           
  4826                           ; BSR set to: 1
  4827  0015C6  0101               	movlb	1	; () banked
  4828  0015C8  0101               	movlb	1	; () banked
  4829  0015CA  A38B               	btfss	OpenUSART@config& (0+255),1,b
  4830  0015CC  D002               	goto	l3767
  4831                           
  4832                           ; BSR set to: 1
  4833  0015CE  8CAC               	bsf	4012,6,c	;volatile
  4834  0015D0  8CAB               	bsf	4011,6,c	;volatile
  4835  0015D2                     l3767:
  4836                           
  4837                           ; BSR set to: 1
  4838  0015D2  0101               	movlb	1	; () banked
  4839  0015D4  0101               	movlb	1	; () banked
  4840  0015D6  B58B               	btfsc	OpenUSART@config& (0+255),2,b
  4841                           
  4842                           ; BSR set to: 1
  4843  0015D8  8EAC               	bsf	4012,7,c	;volatile
  4844                           
  4845                           ; BSR set to: 1
  4846                           
  4847                           ; BSR set to: 1
  4848  0015DA  0101               	movlb	1	; () banked
  4849  0015DC  0101               	movlb	1	; () banked
  4850  0015DE  A78B               	btfss	OpenUSART@config& (0+255),3,b
  4851  0015E0  D002               	goto	l564
  4852                           
  4853                           ; BSR set to: 1
  4854  0015E2  88AB               	bsf	4011,4,c	;volatile
  4855  0015E4  D001               	goto	l3775
  4856  0015E6                     l564:
  4857                           
  4858                           ; BSR set to: 1
  4859  0015E6  8AAB               	bsf	4011,5,c	;volatile
  4860  0015E8                     l3775:
  4861                           
  4862                           ; BSR set to: 1
  4863  0015E8  0101               	movlb	1	; () banked
  4864  0015EA  0101               	movlb	1	; () banked
  4865  0015EC  B98B               	btfsc	OpenUSART@config& (0+255),4,b
  4866                           
  4867                           ; BSR set to: 1
  4868  0015EE  84AC               	bsf	4012,2,c	;volatile
  4869                           
  4870                           ; BSR set to: 1
  4871  0015F0  989E               	bcf	3998,4,c	;volatile
  4872                           
  4873                           ; BSR set to: 1
  4874  0015F2  0101               	movlb	1	; () banked
  4875  0015F4  0101               	movlb	1	; () banked
  4876  0015F6  BB8B               	btfsc	OpenUSART@config& (0+255),5,b
  4877                           
  4878                           ; BSR set to: 1
  4879  0015F8  86AB               	bsf	4011,3,c	;volatile
  4880                           
  4881                           ; BSR set to: 1
  4882                           
  4883                           ; BSR set to: 1
  4884  0015FA  0101               	movlb	1	; () banked
  4885  0015FC  0101               	movlb	1	; () banked
  4886  0015FE  AD8B               	btfss	OpenUSART@config& (0+255),6,b
  4887  001600  D002               	goto	l568
  4888                           
  4889                           ; BSR set to: 1
  4890  001602  8A9D               	bsf	3997,5,c	;volatile
  4891  001604  D001               	goto	l569
  4892  001606                     l568:
  4893                           
  4894                           ; BSR set to: 1
  4895  001606  9A9D               	bcf	3997,5,c	;volatile
  4896  001608                     l569:
  4897                           
  4898                           ; BSR set to: 1
  4899  001608  9A9E               	bcf	3998,5,c	;volatile
  4900                           
  4901                           ; BSR set to: 1
  4902  00160A  0101               	movlb	1	; () banked
  4903  00160C  0101               	movlb	1	; () banked
  4904  00160E  AF8B               	btfss	OpenUSART@config& (0+255),7,b
  4905  001610  D002               	goto	l570
  4906                           
  4907                           ; BSR set to: 1
  4908  001612  889D               	bsf	3997,4,c	;volatile
  4909  001614  D001               	goto	l571
  4910  001616                     l570:
  4911                           
  4912                           ; BSR set to: 1
  4913  001616  989D               	bcf	3997,4,c	;volatile
  4914  001618                     l571:
  4915                           
  4916                           ; BSR set to: 1
  4917  001618  C186  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4918                           
  4919                           ; BSR set to: 1
  4920  00161C  0101               	movlb	1	; () banked
  4921  00161E  C187  F188         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4922  001622  C188  F189         	movff	??_OpenUSART,??_OpenUSART+1
  4923  001626  0101               	movlb	1	; () banked
  4924  001628  6B8A               	clrf	(??_OpenUSART+2)& (0+255),b
  4925  00162A  0101               	movlb	1	; () banked
  4926  00162C  5189               	movf	(??_OpenUSART+1)& (0+255),w,b
  4927  00162E  6EB0               	movwf	4016,c	;volatile
  4928                           
  4929                           ; BSR set to: 1
  4930  001630  8AAC               	bsf	4012,5,c	;volatile
  4931                           
  4932                           ; BSR set to: 1
  4933  001632  8EAB               	bsf	4011,7,c	;volatile
  4934                           
  4935                           ; BSR set to: 1
  4936  001634  9C94               	bcf	3988,6,c	;volatile
  4937                           
  4938                           ; BSR set to: 1
  4939  001636  8E94               	bsf	3988,7,c	;volatile
  4940                           
  4941                           ; BSR set to: 1
  4942  001638  A8AC               	btfss	4012,4,c	;volatile
  4943  00163A  0012               	return	
  4944                           
  4945                           ; BSR set to: 1
  4946  00163C  BEAC               	btfsc	4012,7,c	;volatile
  4947  00163E  0012               	return	
  4948                           
  4949                           ; BSR set to: 1
  4950  001640  8C94               	bsf	3988,6,c	;volatile
  4951  001642  0012               	return	
  4952  001644                     __end_of_OpenUSART:
  4953                           	opt stack 0
  4954                           tblptru	equ	0xFF8
  4955                           tblptrh	equ	0xFF7
  4956                           tblptrl	equ	0xFF6
  4957                           tablat	equ	0xFF5
  4958                           prodh	equ	0xFF4
  4959                           prodl	equ	0xFF3
  4960                           intcon	equ	0xFF2
  4961                           postinc0	equ	0xFEE
  4962                           wreg	equ	0xFE8
  4963                           indf1	equ	0xFE7
  4964                           postdec1	equ	0xFE5
  4965                           fsr1h	equ	0xFE2
  4966                           fsr1l	equ	0xFE1
  4967                           indf2	equ	0xFDF
  4968                           postinc2	equ	0xFDE
  4969                           postdec2	equ	0xFDD
  4970                           fsr2h	equ	0xFDA
  4971                           fsr2l	equ	0xFD9
  4972                           status	equ	0xFD8
  4973                           
  4974 ;; *************** function _OpenTimer1 *****************
  4975 ;; Defined at:
  4976 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;  config          1    wreg     unsigned char 
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;  config          1    0[BANK1 ] unsigned char 
  4981 ;; Return value:  Size  Location     Type
  4982 ;;		None               void
  4983 ;; Registers used:
  4984 ;;		wreg, status,2, status,0
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4990 ;;      Params:         0       0       0       0       0
  4991 ;;      Locals:         0       0       1       0       0
  4992 ;;      Temps:          0       0       0       0       0
  4993 ;;      Totals:         0       0       1       0       0
  4994 ;;Total ram usage:        1 bytes
  4995 ;; Hardware stack levels used:    1
  4996 ;; Hardware stack levels required when called:   11
  4997 ;; This function calls:
  4998 ;;		Nothing
  4999 ;; This function is called by:
  5000 ;;		_main
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           	psect	text28
  5005  001D2C                     __ptext28:
  5006                           	opt stack 0
  5007  001D2C                     _OpenTimer1:
  5008                           	opt stack 19
  5009                           
  5010                           ; BSR set to: 1
  5011                           ;incstack = 0
  5012                           ;OpenTimer1@config stored from wreg
  5013  001D2C  CFE8 F186          	movff	wreg,OpenTimer1@config
  5014  001D30  0101               	movlb	1	; () banked
  5015  001D32  0101               	movlb	1	; () banked
  5016  001D34  5186               	movf	OpenTimer1@config& (0+255),w,b
  5017  001D36  0B7E               	andlw	126
  5018  001D38  6ECD               	movwf	4045,c	;volatile
  5019                           
  5020                           ; BSR set to: 1
  5021  001D3A  0101               	movlb	1	; () banked
  5022  001D3C  0101               	movlb	1	; () banked
  5023  001D3E  AD86               	btfss	OpenTimer1@config& (0+255),6,b
  5024  001D40  D002               	goto	l527
  5025                           
  5026                           ; BSR set to: 1
  5027  001D42  8ECD               	bsf	4045,7,c	;volatile
  5028  001D44  D001               	goto	l3727
  5029  001D46                     l527:
  5030                           
  5031                           ; BSR set to: 1
  5032  001D46  9ECD               	bcf	4045,7,c	;volatile
  5033  001D48                     l3727:
  5034                           
  5035                           ; BSR set to: 1
  5036  001D48  0E00               	movlw	0
  5037  001D4A  6ECF               	movwf	4047,c	;volatile
  5038  001D4C  0E00               	movlw	0
  5039  001D4E  6ECE               	movwf	4046,c	;volatile
  5040                           
  5041                           ; BSR set to: 1
  5042  001D50  909E               	bcf	3998,0,c	;volatile
  5043                           
  5044                           ; BSR set to: 1
  5045  001D52  0101               	movlb	1	; () banked
  5046  001D54  0101               	movlb	1	; () banked
  5047  001D56  AF86               	btfss	OpenTimer1@config& (0+255),7,b
  5048  001D58  D002               	goto	l529
  5049                           
  5050                           ; BSR set to: 1
  5051  001D5A  809D               	bsf	3997,0,c	;volatile
  5052  001D5C  D001               	goto	l530
  5053  001D5E                     l529:
  5054                           
  5055                           ; BSR set to: 1
  5056  001D5E  909D               	bcf	3997,0,c	;volatile
  5057  001D60                     l530:
  5058                           
  5059                           ; BSR set to: 1
  5060  001D60  80CD               	bsf	4045,0,c	;volatile
  5061                           
  5062                           ; BSR set to: 1
  5063  001D62  0012               	return	
  5064  001D64                     __end_of_OpenTimer1:
  5065                           	opt stack 0
  5066                           tblptru	equ	0xFF8
  5067                           tblptrh	equ	0xFF7
  5068                           tblptrl	equ	0xFF6
  5069                           tablat	equ	0xFF5
  5070                           prodh	equ	0xFF4
  5071                           prodl	equ	0xFF3
  5072                           intcon	equ	0xFF2
  5073                           postinc0	equ	0xFEE
  5074                           wreg	equ	0xFE8
  5075                           indf1	equ	0xFE7
  5076                           postdec1	equ	0xFE5
  5077                           fsr1h	equ	0xFE2
  5078                           fsr1l	equ	0xFE1
  5079                           indf2	equ	0xFDF
  5080                           postinc2	equ	0xFDE
  5081                           postdec2	equ	0xFDD
  5082                           fsr2h	equ	0xFDA
  5083                           fsr2l	equ	0xFD9
  5084                           status	equ	0xFD8
  5085                           
  5086 ;; *************** function _OpenTimer0 *****************
  5087 ;; Defined at:
  5088 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;  config          1    wreg     unsigned char 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  config          1    0[BANK1 ] unsigned char 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;		None               void
  5095 ;; Registers used:
  5096 ;;		wreg, status,2, status,0
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5102 ;;      Params:         0       0       0       0       0
  5103 ;;      Locals:         0       0       1       0       0
  5104 ;;      Temps:          0       0       0       0       0
  5105 ;;      Totals:         0       0       1       0       0
  5106 ;;Total ram usage:        1 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; Hardware stack levels required when called:   11
  5109 ;; This function calls:
  5110 ;;		Nothing
  5111 ;; This function is called by:
  5112 ;;		_main
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           	psect	text29
  5117  001E34                     __ptext29:
  5118                           	opt stack 0
  5119  001E34                     _OpenTimer0:
  5120                           	opt stack 19
  5121                           
  5122                           ; BSR set to: 1
  5123                           ;incstack = 0
  5124                           ;OpenTimer0@config stored from wreg
  5125  001E34  CFE8 F186          	movff	wreg,OpenTimer0@config
  5126  001E38  0101               	movlb	1	; () banked
  5127  001E3A  0101               	movlb	1	; () banked
  5128  001E3C  5186               	movf	OpenTimer0@config& (0+255),w,b
  5129  001E3E  0B7F               	andlw	127
  5130  001E40  6ED5               	movwf	4053,c	;volatile
  5131                           
  5132                           ; BSR set to: 1
  5133  001E42  0E00               	movlw	0
  5134  001E44  6ED7               	movwf	4055,c	;volatile
  5135                           
  5136                           ; BSR set to: 1
  5137  001E46  0E00               	movlw	0
  5138  001E48  6ED6               	movwf	4054,c	;volatile
  5139                           
  5140                           ; BSR set to: 1
  5141  001E4A  94F2               	bcf	intcon,2,c	;volatile
  5142                           
  5143                           ; BSR set to: 1
  5144  001E4C  0101               	movlb	1	; () banked
  5145  001E4E  0101               	movlb	1	; () banked
  5146  001E50  AF86               	btfss	OpenTimer0@config& (0+255),7,b
  5147  001E52  D002               	goto	l503
  5148                           
  5149                           ; BSR set to: 1
  5150  001E54  8AF2               	bsf	intcon,5,c	;volatile
  5151  001E56  D001               	goto	l504
  5152  001E58                     l503:
  5153                           
  5154                           ; BSR set to: 1
  5155  001E58  9AF2               	bcf	intcon,5,c	;volatile
  5156  001E5A                     l504:
  5157                           
  5158                           ; BSR set to: 1
  5159  001E5A  8ED5               	bsf	4053,7,c	;volatile
  5160                           
  5161                           ; BSR set to: 1
  5162  001E5C  0012               	return	
  5163  001E5E                     __end_of_OpenTimer0:
  5164                           	opt stack 0
  5165                           tblptru	equ	0xFF8
  5166                           tblptrh	equ	0xFF7
  5167                           tblptrl	equ	0xFF6
  5168                           tablat	equ	0xFF5
  5169                           prodh	equ	0xFF4
  5170                           prodl	equ	0xFF3
  5171                           intcon	equ	0xFF2
  5172                           postinc0	equ	0xFEE
  5173                           wreg	equ	0xFE8
  5174                           indf1	equ	0xFE7
  5175                           postdec1	equ	0xFE5
  5176                           fsr1h	equ	0xFE2
  5177                           fsr1l	equ	0xFE1
  5178                           indf2	equ	0xFDF
  5179                           postinc2	equ	0xFDE
  5180                           postdec2	equ	0xFDD
  5181                           fsr2h	equ	0xFDA
  5182                           fsr2l	equ	0xFD9
  5183                           status	equ	0xFD8
  5184                           
  5185 ;; *************** function _OpenADC *****************
  5186 ;; Defined at:
  5187 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;  config          1    wreg     unsigned char 
  5190 ;;  config2         1    0[BANK1 ] unsigned char 
  5191 ;;  portconfig      1    1[BANK1 ] unsigned char 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  config          1    4[BANK1 ] unsigned char 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;		None               void
  5196 ;; Registers used:
  5197 ;;		wreg, status,2, status,0
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5203 ;;      Params:         0       0       2       0       0
  5204 ;;      Locals:         0       0       1       0       0
  5205 ;;      Temps:          0       0       2       0       0
  5206 ;;      Totals:         0       0       5       0       0
  5207 ;;Total ram usage:        5 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; Hardware stack levels required when called:   11
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_main
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text30
  5218  0016CE                     __ptext30:
  5219                           	opt stack 0
  5220  0016CE                     _OpenADC:
  5221                           	opt stack 19
  5222                           
  5223                           ; BSR set to: 1
  5224                           ;incstack = 0
  5225                           ;OpenADC@config stored from wreg
  5226  0016CE  CFE8 F18A          	movff	wreg,OpenADC@config
  5227  0016D2  0E00               	movlw	0
  5228  0016D4  6EC2               	movwf	4034,c	;volatile
  5229  0016D6  0E00               	movlw	0
  5230  0016D8  6EC0               	movwf	4032,c	;volatile
  5231  0016DA  0101               	movlb	1	; () banked
  5232  0016DC  0101               	movlb	1	; () banked
  5233  0016DE  90D8               	bcf	status,0,c
  5234  0016E0  3186               	rrcf	OpenADC@config2& (0+255),w,b
  5235  0016E2  0B3C               	andlw	60
  5236  0016E4  6EC2               	movwf	4034,c	;volatile
  5237                           
  5238                           ; BSR set to: 1
  5239  0016E6  C186  F188         	movff	OpenADC@config2,??_OpenADC
  5240  0016EA  0101               	movlb	1	; () banked
  5241  0016EC  3B88               	swapf	??_OpenADC& (0+255),f,b
  5242  0016EE  0EF0               	movlw	240
  5243  0016F0  1788               	andwf	??_OpenADC& (0+255),f,b
  5244  0016F2  0E30               	movlw	48
  5245  0016F4  0101               	movlb	1	; () banked
  5246  0016F6  1788               	andwf	??_OpenADC& (0+255),f,b
  5247  0016F8  0101               	movlb	1	; () banked
  5248  0016FA  0101               	movlb	1	; () banked
  5249  0016FC  5187               	movf	OpenADC@portconfig& (0+255),w,b
  5250  0016FE  0B0F               	andlw	15
  5251  001700  0101               	movlb	1	; () banked
  5252  001702  1188               	iorwf	??_OpenADC& (0+255),w,b
  5253  001704  6EC1               	movwf	4033,c	;volatile
  5254                           
  5255                           ; BSR set to: 1
  5256  001706  C18A  F188         	movff	OpenADC@config,??_OpenADC
  5257  00170A  0101               	movlb	1	; () banked
  5258  00170C  90D8               	bcf	status,0,c
  5259  00170E  3788               	rlcf	??_OpenADC& (0+255),f,b
  5260  001710  0101               	movlb	1	; () banked
  5261  001712  90D8               	bcf	status,0,c
  5262  001714  3788               	rlcf	??_OpenADC& (0+255),f,b
  5263  001716  0E38               	movlw	56
  5264  001718  0101               	movlb	1	; () banked
  5265  00171A  1788               	andwf	??_OpenADC& (0+255),f,b
  5266  00171C  C18A  F189         	movff	OpenADC@config,??_OpenADC+1
  5267  001720  0101               	movlb	1	; () banked
  5268  001722  3B89               	swapf	(??_OpenADC+1)& (0+255),f,b
  5269  001724  0E0F               	movlw	15
  5270  001726  1789               	andwf	(??_OpenADC+1)& (0+255),f,b
  5271  001728  0E07               	movlw	7
  5272  00172A  0101               	movlb	1	; () banked
  5273  00172C  1789               	andwf	(??_OpenADC+1)& (0+255),f,b
  5274  00172E  0101               	movlb	1	; () banked
  5275  001730  0101               	movlb	1	; () banked
  5276  001732  518A               	movf	OpenADC@config& (0+255),w,b
  5277  001734  0B80               	andlw	128
  5278  001736  0101               	movlb	1	; () banked
  5279  001738  1189               	iorwf	(??_OpenADC+1)& (0+255),w,b
  5280  00173A  0101               	movlb	1	; () banked
  5281  00173C  1188               	iorwf	??_OpenADC& (0+255),w,b
  5282  00173E  6EC0               	movwf	4032,c	;volatile
  5283                           
  5284                           ; BSR set to: 1
  5285  001740  0101               	movlb	1	; () banked
  5286  001742  0101               	movlb	1	; () banked
  5287  001744  AF86               	btfss	OpenADC@config2& (0+255),7,b
  5288  001746  D003               	goto	l484
  5289                           
  5290                           ; BSR set to: 1
  5291  001748  9C9E               	bcf	3998,6,c	;volatile
  5292  00174A  8C9D               	bsf	3997,6,c	;volatile
  5293  00174C  8CF2               	bsf	intcon,6,c	;volatile
  5294  00174E                     l484:
  5295                           
  5296                           ; BSR set to: 1
  5297  00174E  80C2               	bsf	4034,0,c	;volatile
  5298                           
  5299                           ; BSR set to: 1
  5300  001750  0012               	return	
  5301  001752                     __end_of_OpenADC:
  5302                           	opt stack 0
  5303                           tblptru	equ	0xFF8
  5304                           tblptrh	equ	0xFF7
  5305                           tblptrl	equ	0xFF6
  5306                           tablat	equ	0xFF5
  5307                           prodh	equ	0xFF4
  5308                           prodl	equ	0xFF3
  5309                           intcon	equ	0xFF2
  5310                           postinc0	equ	0xFEE
  5311                           wreg	equ	0xFE8
  5312                           indf1	equ	0xFE7
  5313                           postdec1	equ	0xFE5
  5314                           fsr1h	equ	0xFE2
  5315                           fsr1l	equ	0xFE1
  5316                           indf2	equ	0xFDF
  5317                           postinc2	equ	0xFDE
  5318                           postdec2	equ	0xFDD
  5319                           fsr2h	equ	0xFDA
  5320                           fsr2l	equ	0xFD9
  5321                           status	equ	0xFD8
  5322                           
  5323 ;; *************** function _InterruptHandlerLow *****************
  5324 ;; Defined at:
  5325 ;;		line 126 in file "../src/interrupts.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;		None
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;		None
  5330 ;; Return value:  Size  Location     Type
  5331 ;;		None               void
  5332 ;; Registers used:
  5333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5339 ;;      Params:         0       0       0       0       0
  5340 ;;      Locals:         0       0       0       0       0
  5341 ;;      Temps:         17       0       0       0       0
  5342 ;;      Totals:        17       0       0       0       0
  5343 ;;Total ram usage:       17 bytes
  5344 ;; Hardware stack levels used:    1
  5345 ;; Hardware stack levels required when called:   10
  5346 ;; This function calls:
  5347 ;;		_adc_int_handler
  5348 ;;		_timer1_int_handler
  5349 ;;		_uart_recv_int_handler
  5350 ;;		_uart_trans_int_handler
  5351 ;; This function is called by:
  5352 ;;		Interrupt level 1
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           	psect	intcodelo
  5357  000018                     __pintcodelo:
  5358                           	opt stack 0
  5359  000018                     _InterruptHandlerLow:
  5360                           	opt stack 16
  5361                           
  5362                           ; BSR set to: 1
  5363                           ;incstack = 0
  5364  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  5365  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  5366  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  5367  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  5368  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  5369  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  5370  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  5371  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  5372  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  5373  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  5374  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  5375  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  5376  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  5377  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  5378  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  5379  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  5380  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  5381                           
  5382                           ;interrupts.c: 128: if(PIR1bits.ADIF){
  5383  00005C  AC9E               	btfss	3998,6,c	;volatile
  5384  00005E  D003               	goto	i1l4395
  5385                           
  5386                           ;interrupts.c: 130: PIR1bits.ADIF = 0;
  5387  000060  9C9E               	bcf	3998,6,c	;volatile
  5388                           
  5389                           ;interrupts.c: 131: adc_int_handler();
  5390  000062  EC68  F00F         	call	_adc_int_handler	;wreg free
  5391  000066                     i1l4395:
  5392                           
  5393                           ;interrupts.c: 132: }
  5394                           ;interrupts.c: 135: if (PIR1bits.TMR1IF) {
  5395  000066  A09E               	btfss	3998,0,c	;volatile
  5396  000068  D003               	goto	i1l4401
  5397                           
  5398                           ;interrupts.c: 136: PIR1bits.TMR1IF = 0;
  5399  00006A  909E               	bcf	3998,0,c	;volatile
  5400                           
  5401                           ;interrupts.c: 137: timer1_int_handler();
  5402  00006C  ECE8  F00F         	call	_timer1_int_handler	;wreg free
  5403  000070                     i1l4401:
  5404                           
  5405                           ;interrupts.c: 139: }
  5406                           ;interrupts.c: 141: if (PIR1bits.TXIF) {
  5407  000070  B89E               	btfsc	3998,4,c	;volatile
  5408                           
  5409                           ;interrupts.c: 143: uart_trans_int_handler();
  5410  000072  EC0B  F00D         	call	_uart_trans_int_handler	;wreg free
  5411                           
  5412                           ;interrupts.c: 144: }
  5413                           ;interrupts.c: 146: if (PIR1bits.RCIF) {
  5414  000076  AA9E               	btfss	3998,5,c	;volatile
  5415  000078  D003               	goto	i1l57
  5416                           
  5417                           ;interrupts.c: 147: PIR1bits.RCIF = 0;
  5418  00007A  9A9E               	bcf	3998,5,c	;volatile
  5419                           
  5420                           ;interrupts.c: 149: uart_recv_int_handler();
  5421  00007C  EC17  F009         	call	_uart_recv_int_handler	;wreg free
  5422  000080                     i1l57:
  5423  000080  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5424  000084  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5425  000088  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5426  00008C  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5427  000090  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5428  000094  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5429  000098  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5430  00009C  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5431  0000A0  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5432  0000A4  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5433  0000A8  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5434  0000AC  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5435  0000B0  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5436  0000B4  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5437  0000B8  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5438  0000BC  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5439  0000C0  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5440  0000C4  0010               	retfie	
  5441  0000C6                     __end_of_InterruptHandlerLow:
  5442                           	opt stack 0
  5443                           pclatu	equ	0xFFB
  5444                           pclath	equ	0xFFA
  5445                           tblptru	equ	0xFF8
  5446                           tblptrh	equ	0xFF7
  5447                           tblptrl	equ	0xFF6
  5448                           tablat	equ	0xFF5
  5449                           prodh	equ	0xFF4
  5450                           prodl	equ	0xFF3
  5451                           intcon	equ	0xFF2
  5452                           postinc0	equ	0xFEE
  5453                           fsr0h	equ	0xFEA
  5454                           fsr0l	equ	0xFE9
  5455                           wreg	equ	0xFE8
  5456                           indf1	equ	0xFE7
  5457                           postdec1	equ	0xFE5
  5458                           fsr1h	equ	0xFE2
  5459                           fsr1l	equ	0xFE1
  5460                           bsr	equ	0xFE0
  5461                           indf2	equ	0xFDF
  5462                           postinc2	equ	0xFDE
  5463                           postdec2	equ	0xFDD
  5464                           fsr2h	equ	0xFDA
  5465                           fsr2l	equ	0xFD9
  5466                           status	equ	0xFD8
  5467                           
  5468 ;; *************** function _uart_trans_int_handler *****************
  5469 ;; Defined at:
  5470 ;;		line 73 in file "../src/my_uart.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;		None
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;		None
  5475 ;; Return value:  Size  Location     Type
  5476 ;;		None               void
  5477 ;; Registers used:
  5478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5484 ;;      Params:         0       0       0       0       0
  5485 ;;      Locals:         0       0       0       0       0
  5486 ;;      Temps:          1       0       0       0       0
  5487 ;;      Totals:         1       0       0       0       0
  5488 ;;Total ram usage:        1 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    6
  5491 ;; This function calls:
  5492 ;;		Nothing
  5493 ;; This function is called by:
  5494 ;;		_InterruptHandlerLow
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text32
  5499  001A16                     __ptext32:
  5500                           	opt stack 0
  5501  001A16                     _uart_trans_int_handler:
  5502                           	opt stack 19
  5503                           
  5504                           ;my_uart.c: 75: if(TXSTAbits.TRMT){
  5505                           
  5506                           ;incstack = 0
  5507  001A16  A2AC               	btfss	4012,1,c	;volatile
  5508  001A18  0012               	return	
  5509                           
  5510                           ;my_uart.c: 76: if(uc_ptr->txBufind < uc_ptr->txBuflen){
  5511  001A1A  EE20 F00C          	lfsr	2,12
  5512  001A1E  5052               	movf	_uc_ptr,w,c
  5513  001A20  26D9               	addwf	fsr2l,f,c
  5514  001A22  5053               	movf	_uc_ptr+1,w,c
  5515  001A24  22DA               	addwfc	fsr2h,f,c
  5516  001A26  50DF               	movf	indf2,w,c
  5517  001A28  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5518  001A2A  EE20 F00B          	lfsr	2,11
  5519  001A2E  5052               	movf	_uc_ptr,w,c
  5520  001A30  26D9               	addwf	fsr2l,f,c
  5521  001A32  5053               	movf	_uc_ptr+1,w,c
  5522  001A34  22DA               	addwfc	fsr2h,f,c
  5523  001A36  50DF               	movf	indf2,w,c
  5524  001A38  5C01               	subwf	??_uart_trans_int_handler,w,c
  5525  001A3A  B0D8               	btfsc	status,0,c
  5526  001A3C  D01E               	goto	i1l424
  5527                           
  5528                           ;my_uart.c: 77: TXREG = uc_ptr->txBuff[uc_ptr->txBufind];
  5529  001A3E  EE20 F00C          	lfsr	2,12
  5530  001A42  5052               	movf	_uc_ptr,w,c
  5531  001A44  26D9               	addwf	fsr2l,f,c
  5532  001A46  5053               	movf	_uc_ptr+1,w,c
  5533  001A48  22DA               	addwfc	fsr2h,f,c
  5534  001A4A  50DF               	movf	indf2,w,c
  5535  001A4C  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5536  001A4E  5001               	movf	??_uart_trans_int_handler,w,c
  5537  001A50  0D01               	mullw	1
  5538  001A52  0E06               	movlw	6
  5539  001A54  26F3               	addwf	prodl,f,c
  5540  001A56  0E00               	movlw	0
  5541  001A58  22F4               	addwfc	prodh,f,c
  5542  001A5A  50F3               	movf	prodl,w,c
  5543  001A5C  2452               	addwf	_uc_ptr,w,c
  5544  001A5E  6ED9               	movwf	fsr2l,c
  5545  001A60  50F4               	movf	prodh,w,c
  5546  001A62  2053               	addwfc	_uc_ptr+1,w,c
  5547  001A64  6EDA               	movwf	fsr2h,c
  5548  001A66  50DF               	movf	indf2,w,c
  5549  001A68  6EAD               	movwf	4013,c	;volatile
  5550                           
  5551                           ;my_uart.c: 79: uc_ptr->txBufind++;
  5552  001A6A  EE20 F00C          	lfsr	2,12
  5553  001A6E  5052               	movf	_uc_ptr,w,c
  5554  001A70  26D9               	addwf	fsr2l,f,c
  5555  001A72  5053               	movf	_uc_ptr+1,w,c
  5556  001A74  22DA               	addwfc	fsr2h,f,c
  5557  001A76  2ADF               	incf	indf2,f,c
  5558                           
  5559                           ;my_uart.c: 80: } else
  5560  001A78  0012               	return	
  5561  001A7A                     i1l424:
  5562                           
  5563                           ;my_uart.c: 81: PIE1bits.TX1IE = 0;
  5564  001A7A  989D               	bcf	3997,4,c	;volatile
  5565  001A7C  0012               	return	
  5566  001A7E                     __end_of_uart_trans_int_handler:
  5567                           	opt stack 0
  5568                           pclatu	equ	0xFFB
  5569                           pclath	equ	0xFFA
  5570                           tblptru	equ	0xFF8
  5571                           tblptrh	equ	0xFF7
  5572                           tblptrl	equ	0xFF6
  5573                           tablat	equ	0xFF5
  5574                           prodh	equ	0xFF4
  5575                           prodl	equ	0xFF3
  5576                           intcon	equ	0xFF2
  5577                           postinc0	equ	0xFEE
  5578                           fsr0h	equ	0xFEA
  5579                           fsr0l	equ	0xFE9
  5580                           wreg	equ	0xFE8
  5581                           indf1	equ	0xFE7
  5582                           postdec1	equ	0xFE5
  5583                           fsr1h	equ	0xFE2
  5584                           fsr1l	equ	0xFE1
  5585                           bsr	equ	0xFE0
  5586                           indf2	equ	0xFDF
  5587                           postinc2	equ	0xFDE
  5588                           postdec2	equ	0xFDD
  5589                           fsr2h	equ	0xFDA
  5590                           fsr2l	equ	0xFD9
  5591                           status	equ	0xFD8
  5592                           
  5593 ;; *************** function _uart_recv_int_handler *****************
  5594 ;; Defined at:
  5595 ;;		line 11 in file "../src/my_uart.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;		None
  5600 ;; Return value:  Size  Location     Type
  5601 ;;		None               void
  5602 ;; Registers used:
  5603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5609 ;;      Params:         0       0       0       0       0
  5610 ;;      Locals:         0       0       0       0       0
  5611 ;;      Temps:          1       0       0       0       0
  5612 ;;      Totals:         1       0       0       0       0
  5613 ;;Total ram usage:        1 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; Hardware stack levels required when called:    9
  5616 ;; This function calls:
  5617 ;;		_ReadUSART
  5618 ;;		_ToMainLow_sendmsg
  5619 ;; This function is called by:
  5620 ;;		_InterruptHandlerLow
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text33
  5625  00122E                     __ptext33:
  5626                           	opt stack 0
  5627  00122E                     _uart_recv_int_handler:
  5628                           	opt stack 16
  5629                           
  5630                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  5631                           
  5632                           ;incstack = 0
  5633  00122E  AA9E               	btfss	3998,5,c	;volatile
  5634  001230  D04E               	goto	i1l4383
  5635                           
  5636                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5637  001232  EE20 F005          	lfsr	2,5
  5638  001236  5052               	movf	_uc_ptr,w,c
  5639  001238  26D9               	addwf	fsr2l,f,c
  5640  00123A  5053               	movf	_uc_ptr+1,w,c
  5641  00123C  22DA               	addwfc	fsr2h,f,c
  5642  00123E  50DF               	movf	indf2,w,c
  5643  001240  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5644  001242  501B               	movf	??_uart_recv_int_handler,w,c
  5645  001244  0D01               	mullw	1
  5646  001246  50F3               	movf	prodl,w,c
  5647  001248  2452               	addwf	_uc_ptr,w,c
  5648  00124A  6ED9               	movwf	fsr2l,c
  5649  00124C  50F4               	movf	prodh,w,c
  5650  00124E  2053               	addwfc	_uc_ptr+1,w,c
  5651  001250  6EDA               	movwf	fsr2h,c
  5652  001252  EC98  F00F         	call	_ReadUSART	;wreg free
  5653  001256  6EDF               	movwf	indf2,c
  5654                           
  5655                           ;my_uart.c: 25: uc_ptr->buflen++;
  5656  001258  EE20 F005          	lfsr	2,5
  5657  00125C  5052               	movf	_uc_ptr,w,c
  5658  00125E  26D9               	addwf	fsr2l,f,c
  5659  001260  5053               	movf	_uc_ptr+1,w,c
  5660  001262  22DA               	addwfc	fsr2h,f,c
  5661  001264  2ADF               	incf	indf2,f,c
  5662                           
  5663                           ;my_uart.c: 26: if(UART_timeout > 200){
  5664  001266  0EC9               	movlw	201
  5665  001268  5C4E               	subwf	_UART_timeout,w,c
  5666  00126A  0E00               	movlw	0
  5667  00126C  584F               	subwfb	_UART_timeout+1,w,c
  5668  00126E  A0D8               	btfss	status,0,c
  5669  001270  D00C               	goto	i1l4377
  5670                           
  5671                           ;my_uart.c: 27: uc_ptr->buflen = 1;
  5672  001272  EE20 F005          	lfsr	2,5
  5673  001276  5052               	movf	_uc_ptr,w,c
  5674  001278  26D9               	addwf	fsr2l,f,c
  5675  00127A  5053               	movf	_uc_ptr+1,w,c
  5676  00127C  22DA               	addwfc	fsr2h,f,c
  5677  00127E  0E01               	movlw	1
  5678  001280  6EDF               	movwf	indf2,c
  5679                           
  5680                           ;my_uart.c: 28: UART_timeout = 0;
  5681  001282  0E00               	movlw	0
  5682  001284  6E4F               	movwf	_UART_timeout+1,c
  5683  001286  0E00               	movlw	0
  5684  001288  6E4E               	movwf	_UART_timeout,c
  5685  00128A                     i1l4377:
  5686                           
  5687                           ;my_uart.c: 29: }
  5688                           ;my_uart.c: 32: if (uc_ptr->buflen == 5) {
  5689  00128A  EE20 F005          	lfsr	2,5
  5690  00128E  5052               	movf	_uc_ptr,w,c
  5691  001290  26D9               	addwf	fsr2l,f,c
  5692  001292  5053               	movf	_uc_ptr+1,w,c
  5693  001294  22DA               	addwfc	fsr2h,f,c
  5694  001296  0E05               	movlw	5
  5695  001298  62DF               	cpfseq	indf2,c
  5696  00129A  D019               	goto	i1l4383
  5697                           
  5698                           ;my_uart.c: 33: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5699  00129C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5700  00129E  0E1F               	movlw	31
  5701  0012A0  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5702  0012A2  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5703  0012A4  C053  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5704  0012A8  C052  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5705  0012AC  EE20 F005          	lfsr	2,5
  5706  0012B0  5052               	movf	_uc_ptr,w,c
  5707  0012B2  26D9               	addwf	fsr2l,f,c
  5708  0012B4  5053               	movf	_uc_ptr+1,w,c
  5709  0012B6  22DA               	addwfc	fsr2h,f,c
  5710  0012B8  50DF               	movf	indf2,w,c
  5711  0012BA  EC43  F00F         	call	_ToMainLow_sendmsg
  5712                           
  5713                           ;my_uart.c: 34: uc_ptr->buflen = 0;
  5714  0012BE  EE20 F005          	lfsr	2,5
  5715  0012C2  5052               	movf	_uc_ptr,w,c
  5716  0012C4  26D9               	addwf	fsr2l,f,c
  5717  0012C6  5053               	movf	_uc_ptr+1,w,c
  5718  0012C8  22DA               	addwfc	fsr2h,f,c
  5719  0012CA  0E00               	movlw	0
  5720  0012CC  6EDF               	movwf	indf2,c
  5721  0012CE                     i1l4383:
  5722                           
  5723                           ;my_uart.c: 35: }
  5724                           ;my_uart.c: 36: }
  5725                           ;my_uart.c: 43: if (USART_Status.OVERRUN_ERROR == 1) {
  5726  0012CE  A651               	btfss	_USART_Status,3,c
  5727  0012D0  0012               	return	
  5728                           
  5729                           ;my_uart.c: 48: RCSTAbits.CREN = 0;
  5730  0012D2  98AB               	bcf	4011,4,c	;volatile
  5731                           
  5732                           ;my_uart.c: 49: RCSTAbits.CREN = 1;
  5733  0012D4  88AB               	bsf	4011,4,c	;volatile
  5734                           
  5735                           ;my_uart.c: 50: ToMainLow_sendmsg(0, 30, (void *) 0);
  5736  0012D6  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5737  0012D8  0E1E               	movlw	30
  5738  0012DA  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5739  0012DC  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5740  0012DE  0E00               	movlw	0
  5741  0012E0  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5742  0012E2  0E00               	movlw	0
  5743  0012E4  6E18               	movwf	ToMainLow_sendmsg@data,c
  5744  0012E6  0E00               	movlw	0
  5745  0012E8  EC43  F00F         	call	_ToMainLow_sendmsg
  5746  0012EC  0012               	return	
  5747  0012EE                     __end_of_uart_recv_int_handler:
  5748                           	opt stack 0
  5749                           pclatu	equ	0xFFB
  5750                           pclath	equ	0xFFA
  5751                           tblptru	equ	0xFF8
  5752                           tblptrh	equ	0xFF7
  5753                           tblptrl	equ	0xFF6
  5754                           tablat	equ	0xFF5
  5755                           prodh	equ	0xFF4
  5756                           prodl	equ	0xFF3
  5757                           intcon	equ	0xFF2
  5758                           postinc0	equ	0xFEE
  5759                           fsr0h	equ	0xFEA
  5760                           fsr0l	equ	0xFE9
  5761                           wreg	equ	0xFE8
  5762                           indf1	equ	0xFE7
  5763                           postdec1	equ	0xFE5
  5764                           fsr1h	equ	0xFE2
  5765                           fsr1l	equ	0xFE1
  5766                           bsr	equ	0xFE0
  5767                           indf2	equ	0xFDF
  5768                           postinc2	equ	0xFDE
  5769                           postdec2	equ	0xFDD
  5770                           fsr2h	equ	0xFDA
  5771                           fsr2l	equ	0xFD9
  5772                           status	equ	0xFD8
  5773                           
  5774 ;; *************** function _ToMainLow_sendmsg *****************
  5775 ;; Defined at:
  5776 ;;		line 103 in file "../src/messages.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  length          1    wreg     unsigned char 
  5779 ;;  msgtype         1   22[COMRAM] unsigned char 
  5780 ;;  data            2   23[COMRAM] PTR void 
  5781 ;;		 -> NULL(0), main@uc(13), 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;  length          1   25[COMRAM] unsigned char 
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      char 
  5786 ;; Registers used:
  5787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5793 ;;      Params:         3       0       0       0       0
  5794 ;;      Locals:         1       0       0       0       0
  5795 ;;      Temps:          0       0       0       0       0
  5796 ;;      Totals:         4       0       0       0       0
  5797 ;;Total ram usage:        4 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; Hardware stack levels required when called:    8
  5800 ;; This function calls:
  5801 ;;		i1_send_msg
  5802 ;; This function is called by:
  5803 ;;		_uart_recv_int_handler
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text34
  5808  001E86                     __ptext34:
  5809                           	opt stack 0
  5810  001E86                     _ToMainLow_sendmsg:
  5811                           	opt stack 16
  5812                           
  5813                           ;incstack = 0
  5814                           ;ToMainLow_sendmsg@length stored from wreg
  5815  001E86  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5816                           
  5817                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5818                           ;	Return value of _ToMainLow_sendmsg is never used
  5819  001E8A  0101               	movlb	1	; () banked
  5820  001E8C  0E01               	movlw	high _ToMainLow_MQ
  5821  001E8E  6E0C               	movwf	i1send_msg@qptr+1,c
  5822  001E90  0101               	movlb	1	; () banked
  5823  001E92  0E43               	movlw	low _ToMainLow_MQ
  5824  001E94  6E0B               	movwf	i1send_msg@qptr,c
  5825  001E96  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5826  001E9A  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5827  001E9E  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5828  001EA2  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5829  001EA6  EC77  F009         	call	i1_send_msg	;wreg free
  5830  001EAA  0012               	return	
  5831  001EAC                     __end_of_ToMainLow_sendmsg:
  5832                           	opt stack 0
  5833                           pclatu	equ	0xFFB
  5834                           pclath	equ	0xFFA
  5835                           tblptru	equ	0xFF8
  5836                           tblptrh	equ	0xFF7
  5837                           tblptrl	equ	0xFF6
  5838                           tablat	equ	0xFF5
  5839                           prodh	equ	0xFF4
  5840                           prodl	equ	0xFF3
  5841                           intcon	equ	0xFF2
  5842                           postinc0	equ	0xFEE
  5843                           fsr0h	equ	0xFEA
  5844                           fsr0l	equ	0xFE9
  5845                           wreg	equ	0xFE8
  5846                           indf1	equ	0xFE7
  5847                           postdec1	equ	0xFE5
  5848                           fsr1h	equ	0xFE2
  5849                           fsr1l	equ	0xFE1
  5850                           bsr	equ	0xFE0
  5851                           indf2	equ	0xFDF
  5852                           postinc2	equ	0xFDE
  5853                           postdec2	equ	0xFDD
  5854                           fsr2h	equ	0xFDA
  5855                           fsr2l	equ	0xFD9
  5856                           status	equ	0xFD8
  5857                           
  5858 ;; *************** function i1_send_msg *****************
  5859 ;; Defined at:
  5860 ;;		line 24 in file "../src/messages.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5863 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5864 ;;  length          1   12[COMRAM] unsigned char 
  5865 ;;  msgtype         1   13[COMRAM] unsigned char 
  5866 ;;  data            2   14[COMRAM] PTR void 
  5867 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  5868 ;;		 -> main@uc(13), 
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5871 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  5872 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5873 ;;  send_msg        2   17[COMRAM] unsigned int 
  5874 ;;  send_msg        1   19[COMRAM] unsigned char 
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  1    wreg      char 
  5877 ;; Registers used:
  5878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5884 ;;      Params:         6       0       0       0       0
  5885 ;;      Locals:         5       0       0       0       0
  5886 ;;      Temps:          1       0       0       0       0
  5887 ;;      Totals:        12       0       0       0       0
  5888 ;;Total ram usage:       12 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; Hardware stack levels required when called:    7
  5891 ;; This function calls:
  5892 ;;		i1___awmod
  5893 ;;		i1_memcpy
  5894 ;; This function is called by:
  5895 ;;		_ToMainLow_sendmsg
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           	psect	text35
  5900  0012EE                     __ptext35:
  5901                           	opt stack 0
  5902  0012EE                     i1_send_msg:
  5903                           	opt stack 16
  5904                           
  5905                           ;messages.c: 25: unsigned char slot;
  5906                           ;messages.c: 27: msg *qmsg;
  5907                           ;messages.c: 28: size_t tlength = length;
  5908                           
  5909                           ;incstack = 0
  5910  0012EE  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5911  0012F2  6A13               	clrf	i1send_msg@tlength+1,c
  5912                           
  5913                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5914  0012F4  EE20 F041          	lfsr	2,65
  5915  0012F8  500B               	movf	i1send_msg@qptr,w,c
  5916  0012FA  26D9               	addwf	fsr2l,f,c
  5917  0012FC  500C               	movf	i1send_msg@qptr+1,w,c
  5918  0012FE  22DA               	addwfc	fsr2h,f,c
  5919  001300  50DF               	movf	indf2,w,c
  5920  001302  6E14               	movwf	i1send_msg@slot,c
  5921                           
  5922                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5923  001304  5014               	movf	i1send_msg@slot,w,c
  5924  001306  0D0D               	mullw	13
  5925  001308  50F3               	movf	prodl,w,c
  5926  00130A  240B               	addwf	i1send_msg@qptr,w,c
  5927  00130C  6E15               	movwf	i1send_msg@qmsg,c
  5928  00130E  50F4               	movf	prodh,w,c
  5929  001310  200C               	addwfc	i1send_msg@qptr+1,w,c
  5930  001312  6E16               	movwf	i1send_msg@qmsg+1,c
  5931                           
  5932                           ;messages.c: 41: if (qmsg->full != 0) {
  5933  001314  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5934  001318  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5935  00131C  50DF               	movf	indf2,w,c
  5936  00131E  B4D8               	btfsc	status,2,c
  5937  001320  D002               	goto	i1l4349
  5938                           
  5939                           ;messages.c: 42: return (-1);
  5940  001322  0EFF               	movlw	255
  5941  001324  0012               	return	
  5942  001326                     i1l4349:
  5943                           
  5944                           ;messages.c: 43: }
  5945                           ;messages.c: 46: qmsg->length = length;
  5946  001326  EE20 F001          	lfsr	2,1
  5947  00132A  5015               	movf	i1send_msg@qmsg,w,c
  5948  00132C  26D9               	addwf	fsr2l,f,c
  5949  00132E  5016               	movf	i1send_msg@qmsg+1,w,c
  5950  001330  22DA               	addwfc	fsr2h,f,c
  5951  001332  C00D  FFDF         	movff	i1send_msg@length,indf2
  5952                           
  5953                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5954  001336  EE20 F002          	lfsr	2,2
  5955  00133A  5015               	movf	i1send_msg@qmsg,w,c
  5956  00133C  26D9               	addwf	fsr2l,f,c
  5957  00133E  5016               	movf	i1send_msg@qmsg+1,w,c
  5958  001340  22DA               	addwfc	fsr2h,f,c
  5959  001342  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5960                           
  5961                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5962  001346  0E03               	movlw	3
  5963  001348  2415               	addwf	i1send_msg@qmsg,w,c
  5964  00134A  6E01               	movwf	i1memcpy@d1,c
  5965  00134C  0E00               	movlw	0
  5966  00134E  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5967  001350  6E02               	movwf	i1memcpy@d1+1,c
  5968  001352  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5969  001356  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5970  00135A  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5971  00135E  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5972  001362  EC76  F00E         	call	i1_memcpy	;wreg free
  5973                           
  5974                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  5975  001366  EE20 F041          	lfsr	2,65
  5976  00136A  500B               	movf	i1send_msg@qptr,w,c
  5977  00136C  26D9               	addwf	fsr2l,f,c
  5978  00136E  500C               	movf	i1send_msg@qptr+1,w,c
  5979  001370  22DA               	addwfc	fsr2h,f,c
  5980  001372  EE10 F041          	lfsr	1,65
  5981  001376  500B               	movf	i1send_msg@qptr,w,c
  5982  001378  26E1               	addwf	fsr1l,f,c
  5983  00137A  500C               	movf	i1send_msg@qptr+1,w,c
  5984  00137C  22E2               	addwfc	fsr1h,f,c
  5985  00137E  50E7               	movf	indf1,w,c
  5986  001380  6E11               	movwf	??i1_send_msg& (0+255),c
  5987  001382  0E01               	movlw	1
  5988  001384  2411               	addwf	??i1_send_msg,w,c
  5989  001386  6E01               	movwf	i1___awmod@dividend,c
  5990  001388  6A02               	clrf	i1___awmod@dividend+1,c
  5991  00138A  0E00               	movlw	0
  5992  00138C  2202               	addwfc	i1___awmod@dividend+1,f,c
  5993  00138E  0E00               	movlw	0
  5994  001390  6E04               	movwf	i1___awmod@divisor+1,c
  5995  001392  0E05               	movlw	5
  5996  001394  6E03               	movwf	i1___awmod@divisor,c
  5997  001396  EC8B  F00A         	call	i1___awmod	;wreg free
  5998  00139A  5001               	movf	?i1___awmod,w,c
  5999  00139C  6EDF               	movwf	indf2,c
  6000                           
  6001                           ;messages.c: 59: qmsg->full = 1;
  6002  00139E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6003  0013A2  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6004  0013A6  0E01               	movlw	1
  6005  0013A8  6EDF               	movwf	indf2,c
  6006                           
  6007                           ;messages.c: 60: return (1);
  6008  0013AA  0E01               	movlw	1
  6009  0013AC  0012               	return	
  6010  0013AE                     __end_ofi1_send_msg:
  6011                           	opt stack 0
  6012                           pclatu	equ	0xFFB
  6013                           pclath	equ	0xFFA
  6014                           tblptru	equ	0xFF8
  6015                           tblptrh	equ	0xFF7
  6016                           tblptrl	equ	0xFF6
  6017                           tablat	equ	0xFF5
  6018                           prodh	equ	0xFF4
  6019                           prodl	equ	0xFF3
  6020                           intcon	equ	0xFF2
  6021                           postinc0	equ	0xFEE
  6022                           fsr0h	equ	0xFEA
  6023                           fsr0l	equ	0xFE9
  6024                           wreg	equ	0xFE8
  6025                           indf1	equ	0xFE7
  6026                           postdec1	equ	0xFE5
  6027                           fsr1h	equ	0xFE2
  6028                           fsr1l	equ	0xFE1
  6029                           bsr	equ	0xFE0
  6030                           indf2	equ	0xFDF
  6031                           postinc2	equ	0xFDE
  6032                           postdec2	equ	0xFDD
  6033                           fsr2h	equ	0xFDA
  6034                           fsr2l	equ	0xFD9
  6035                           status	equ	0xFD8
  6036                           
  6037 ;; *************** function i1_memcpy *****************
  6038 ;; Defined at:
  6039 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  d1              2    0[COMRAM] PTR void 
  6042 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6043 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6044 ;;		 -> main@msgbuffer(11), 
  6045 ;;  s1              2    2[COMRAM] PTR const void 
  6046 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6047 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6048 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6049 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6050 ;;		 -> main@uc(13), 
  6051 ;;  n               2    4[COMRAM] unsigned int 
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6054 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6055 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6056 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6057 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6058 ;;		 -> main@uc(13), 
  6059 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6060 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6061 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6062 ;;		 -> main@msgbuffer(11), 
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  2    0[COMRAM] PTR void 
  6065 ;; Registers used:
  6066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6072 ;;      Params:         6       0       0       0       0
  6073 ;;      Locals:         4       0       0       0       0
  6074 ;;      Temps:          0       0       0       0       0
  6075 ;;      Totals:        10       0       0       0       0
  6076 ;;Total ram usage:       10 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; Hardware stack levels required when called:    6
  6079 ;; This function calls:
  6080 ;;		Nothing
  6081 ;; This function is called by:
  6082 ;;		i1_send_msg
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           	psect	text36
  6087  001CEC                     __ptext36:
  6088                           	opt stack 0
  6089  001CEC                     i1_memcpy:
  6090                           	opt stack 16
  6091                           
  6092                           ;incstack = 0
  6093  001CEC  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6094  001CF0  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6095  001CF4  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6096  001CF8  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6097  001CFC  D00E               	goto	i1l3365
  6098  001CFE                     i1l3359:
  6099  001CFE  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6100  001D02  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6101  001D06  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6102  001D0A  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6103  001D0E  CFDF FFE7          	movff	indf2,indf1
  6104  001D12  4A09               	infsnz	i1memcpy@s,f,c
  6105  001D14  2A0A               	incf	i1memcpy@s+1,f,c
  6106  001D16  4A07               	infsnz	i1memcpy@d,f,c
  6107  001D18  2A08               	incf	i1memcpy@d+1,f,c
  6108  001D1A                     i1l3365:
  6109  001D1A  0605               	decf	i1memcpy@n,f,c
  6110  001D1C  A0D8               	btfss	status,0,c
  6111  001D1E  0606               	decf	i1memcpy@n+1,f,c
  6112  001D20  2805               	incf	i1memcpy@n& (0+255),w,c
  6113  001D22  B4D8               	btfsc	status,2,c
  6114  001D24  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6115  001D26  B4D8               	btfsc	status,2,c
  6116                           
  6117                           ;	Return value of i1_memcpy is never used
  6118  001D28  0012               	return	
  6119  001D2A  D7E9               	goto	i1l3359
  6120  001D2C                     __end_ofi1_memcpy:
  6121                           	opt stack 0
  6122                           pclatu	equ	0xFFB
  6123                           pclath	equ	0xFFA
  6124                           tblptru	equ	0xFF8
  6125                           tblptrh	equ	0xFF7
  6126                           tblptrl	equ	0xFF6
  6127                           tablat	equ	0xFF5
  6128                           prodh	equ	0xFF4
  6129                           prodl	equ	0xFF3
  6130                           intcon	equ	0xFF2
  6131                           postinc0	equ	0xFEE
  6132                           fsr0h	equ	0xFEA
  6133                           fsr0l	equ	0xFE9
  6134                           wreg	equ	0xFE8
  6135                           indf1	equ	0xFE7
  6136                           postdec1	equ	0xFE5
  6137                           fsr1h	equ	0xFE2
  6138                           fsr1l	equ	0xFE1
  6139                           bsr	equ	0xFE0
  6140                           indf2	equ	0xFDF
  6141                           postinc2	equ	0xFDE
  6142                           postdec2	equ	0xFDD
  6143                           fsr2h	equ	0xFDA
  6144                           fsr2l	equ	0xFD9
  6145                           status	equ	0xFD8
  6146                           
  6147 ;; *************** function i1___awmod *****************
  6148 ;; Defined at:
  6149 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;  dividend        2    0[COMRAM] int 
  6152 ;;  divisor         2    2[COMRAM] int 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;  __awmod         1    6[COMRAM] unsigned char 
  6155 ;;  __awmod         1    5[COMRAM] unsigned char 
  6156 ;; Return value:  Size  Location     Type
  6157 ;;                  2    0[COMRAM] int 
  6158 ;; Registers used:
  6159 ;;		wreg, status,2, status,0, prodl
  6160 ;; Tracked objects:
  6161 ;;		On entry : 0/0
  6162 ;;		On exit  : 0/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6165 ;;      Params:         4       0       0       0       0
  6166 ;;      Locals:         2       0       0       0       0
  6167 ;;      Temps:          1       0       0       0       0
  6168 ;;      Totals:         7       0       0       0       0
  6169 ;;Total ram usage:        7 bytes
  6170 ;; Hardware stack levels used:    1
  6171 ;; Hardware stack levels required when called:    6
  6172 ;; This function calls:
  6173 ;;		Nothing
  6174 ;; This function is called by:
  6175 ;;		i1_send_msg
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text37
  6180  001516                     __ptext37:
  6181                           	opt stack 0
  6182  001516                     i1___awmod:
  6183                           	opt stack 16
  6184                           
  6185                           ;incstack = 0
  6186  001516  6E05               	movwf	??i1___awmod& (0+255),c
  6187  001518  0E00               	movlw	0
  6188  00151A  6E07               	movwf	i1___awmod@sign,c
  6189  00151C  5005               	movf	??i1___awmod& (0+255),w,c
  6190  00151E  5002               	movf	i1___awmod@dividend+1,w,c
  6191  001520  0A80               	xorlw	128
  6192  001522  6EF3               	movwf	prodl,c
  6193  001524  0E80               	movlw	128
  6194  001526  5CF3               	subwf	prodl,w,c
  6195  001528  0E00               	movlw	0
  6196  00152A  B4D8               	btfsc	status,2,c
  6197  00152C  5C01               	subwf	i1___awmod@dividend,w,c
  6198  00152E  B0D8               	btfsc	status,0,c
  6199  001530  D008               	goto	i1l3385
  6200  001532  6C01               	negf	i1___awmod@dividend,c
  6201  001534  1E02               	comf	i1___awmod@dividend+1,f,c
  6202  001536  B0D8               	btfsc	status,0,c
  6203  001538  2A02               	incf	i1___awmod@dividend+1,f,c
  6204  00153A  6E05               	movwf	??i1___awmod& (0+255),c
  6205  00153C  0E01               	movlw	1
  6206  00153E  6E07               	movwf	i1___awmod@sign,c
  6207  001540  5005               	movf	??i1___awmod& (0+255),w,c
  6208  001542                     i1l3385:
  6209  001542  5004               	movf	i1___awmod@divisor+1,w,c
  6210  001544  0A80               	xorlw	128
  6211  001546  6EF3               	movwf	prodl,c
  6212  001548  0E80               	movlw	128
  6213  00154A  5CF3               	subwf	prodl,w,c
  6214  00154C  0E00               	movlw	0
  6215  00154E  B4D8               	btfsc	status,2,c
  6216  001550  5C03               	subwf	i1___awmod@divisor,w,c
  6217  001552  B0D8               	btfsc	status,0,c
  6218  001554  D004               	goto	i1l3389
  6219  001556  6C03               	negf	i1___awmod@divisor,c
  6220  001558  1E04               	comf	i1___awmod@divisor+1,f,c
  6221  00155A  B0D8               	btfsc	status,0,c
  6222  00155C  2A04               	incf	i1___awmod@divisor+1,f,c
  6223  00155E                     i1l3389:
  6224  00155E  5004               	movf	i1___awmod@divisor+1,w,c
  6225  001560  1003               	iorwf	i1___awmod@divisor,w,c
  6226  001562  B4D8               	btfsc	status,2,c
  6227  001564  D01A               	goto	i1l3405
  6228  001566  6E05               	movwf	??i1___awmod& (0+255),c
  6229  001568  0E01               	movlw	1
  6230  00156A  6E06               	movwf	i1___awmod@counter,c
  6231  00156C  5005               	movf	??i1___awmod& (0+255),w,c
  6232  00156E  D004               	goto	i1l3395
  6233  001570                     i1l3393:
  6234  001570  90D8               	bcf	status,0,c
  6235  001572  3603               	rlcf	i1___awmod@divisor,f,c
  6236  001574  3604               	rlcf	i1___awmod@divisor+1,f,c
  6237  001576  2A06               	incf	i1___awmod@counter,f,c
  6238  001578                     i1l3395:
  6239  001578  AE04               	btfss	i1___awmod@divisor+1,7,c
  6240  00157A  D7FA               	goto	i1l3393
  6241  00157C                     i1l3397:
  6242  00157C  5003               	movf	i1___awmod@divisor,w,c
  6243  00157E  5C01               	subwf	i1___awmod@dividend,w,c
  6244  001580  5004               	movf	i1___awmod@divisor+1,w,c
  6245  001582  5802               	subwfb	i1___awmod@dividend+1,w,c
  6246  001584  A0D8               	btfss	status,0,c
  6247  001586  D004               	goto	i1l3401
  6248  001588  5003               	movf	i1___awmod@divisor,w,c
  6249  00158A  5E01               	subwf	i1___awmod@dividend,f,c
  6250  00158C  5004               	movf	i1___awmod@divisor+1,w,c
  6251  00158E  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6252  001590                     i1l3401:
  6253  001590  90D8               	bcf	status,0,c
  6254  001592  3204               	rrcf	i1___awmod@divisor+1,f,c
  6255  001594  3203               	rrcf	i1___awmod@divisor,f,c
  6256  001596  2E06               	decfsz	i1___awmod@counter,f,c
  6257  001598  D7F1               	goto	i1l3397
  6258  00159A                     i1l3405:
  6259  00159A  5007               	movf	i1___awmod@sign,w,c
  6260  00159C  B4D8               	btfsc	status,2,c
  6261  00159E  D004               	goto	i1l3409
  6262  0015A0  6C01               	negf	i1___awmod@dividend,c
  6263  0015A2  1E02               	comf	i1___awmod@dividend+1,f,c
  6264  0015A4  B0D8               	btfsc	status,0,c
  6265  0015A6  2A02               	incf	i1___awmod@dividend+1,f,c
  6266  0015A8                     i1l3409:
  6267  0015A8  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6268  0015AC  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6269  0015B0  0012               	return	
  6270  0015B2                     __end_ofi1___awmod:
  6271                           	opt stack 0
  6272                           pclatu	equ	0xFFB
  6273                           pclath	equ	0xFFA
  6274                           tblptru	equ	0xFF8
  6275                           tblptrh	equ	0xFF7
  6276                           tblptrl	equ	0xFF6
  6277                           tablat	equ	0xFF5
  6278                           prodh	equ	0xFF4
  6279                           prodl	equ	0xFF3
  6280                           intcon	equ	0xFF2
  6281                           postinc0	equ	0xFEE
  6282                           fsr0h	equ	0xFEA
  6283                           fsr0l	equ	0xFE9
  6284                           wreg	equ	0xFE8
  6285                           indf1	equ	0xFE7
  6286                           postdec1	equ	0xFE5
  6287                           fsr1h	equ	0xFE2
  6288                           fsr1l	equ	0xFE1
  6289                           bsr	equ	0xFE0
  6290                           indf2	equ	0xFDF
  6291                           postinc2	equ	0xFDE
  6292                           postdec2	equ	0xFDD
  6293                           fsr2h	equ	0xFDA
  6294                           fsr2l	equ	0xFD9
  6295                           status	equ	0xFD8
  6296                           
  6297 ;; *************** function _ReadUSART *****************
  6298 ;; Defined at:
  6299 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;		None
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;  data            1    0[COMRAM] unsigned char 
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  1    wreg      unsigned char 
  6306 ;; Registers used:
  6307 ;;		wreg, status,2, status,0
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6313 ;;      Params:         0       0       0       0       0
  6314 ;;      Locals:         1       0       0       0       0
  6315 ;;      Temps:          0       0       0       0       0
  6316 ;;      Totals:         1       0       0       0       0
  6317 ;;Total ram usage:        1 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; Hardware stack levels required when called:    6
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_uart_recv_int_handler
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           	psect	text38
  6328  001F30                     __ptext38:
  6329                           	opt stack 0
  6330  001F30                     _ReadUSART:
  6331                           	opt stack 18
  6332                           
  6333                           ;incstack = 0
  6334  001F30  0EF2               	movlw	242
  6335  001F32  1651               	andwf	_USART_Status,f,c
  6336  001F34  ACAB               	btfss	4011,6,c	;volatile
  6337  001F36  D003               	goto	i1l582
  6338  001F38  9051               	bcf	_USART_Status,0,c
  6339  001F3A  B0AB               	btfsc	4011,0,c	;volatile
  6340  001F3C  8051               	bsf	_USART_Status,0,c
  6341  001F3E                     i1l582:
  6342  001F3E  B4AB               	btfsc	4011,2,c	;volatile
  6343  001F40  8451               	bsf	_USART_Status,2,c
  6344  001F42  B2AB               	btfsc	4011,1,c	;volatile
  6345  001F44  8651               	bsf	_USART_Status,3,c
  6346  001F46  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6347  001F4A  5001               	movf	ReadUSART@data,w,c
  6348  001F4C  0012               	return	
  6349  001F4E                     __end_of_ReadUSART:
  6350                           	opt stack 0
  6351                           pclatu	equ	0xFFB
  6352                           pclath	equ	0xFFA
  6353                           tblptru	equ	0xFF8
  6354                           tblptrh	equ	0xFF7
  6355                           tblptrl	equ	0xFF6
  6356                           tablat	equ	0xFF5
  6357                           prodh	equ	0xFF4
  6358                           prodl	equ	0xFF3
  6359                           intcon	equ	0xFF2
  6360                           postinc0	equ	0xFEE
  6361                           fsr0h	equ	0xFEA
  6362                           fsr0l	equ	0xFE9
  6363                           wreg	equ	0xFE8
  6364                           indf1	equ	0xFE7
  6365                           postdec1	equ	0xFE5
  6366                           fsr1h	equ	0xFE2
  6367                           fsr1l	equ	0xFE1
  6368                           bsr	equ	0xFE0
  6369                           indf2	equ	0xFDF
  6370                           postinc2	equ	0xFDE
  6371                           postdec2	equ	0xFDD
  6372                           fsr2h	equ	0xFDA
  6373                           fsr2l	equ	0xFD9
  6374                           status	equ	0xFD8
  6375                           
  6376 ;; *************** function _timer1_int_handler *****************
  6377 ;; Defined at:
  6378 ;;		line 46 in file "../src/user_interrupts.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;		None
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;		None
  6383 ;; Return value:  Size  Location     Type
  6384 ;;		None               void
  6385 ;; Registers used:
  6386 ;;		wreg, status,2, cstack
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6392 ;;      Params:         0       0       0       0       0
  6393 ;;      Locals:         0       0       0       0       0
  6394 ;;      Temps:          0       0       0       0       0
  6395 ;;      Totals:         0       0       0       0       0
  6396 ;;Total ram usage:        0 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:    7
  6399 ;; This function calls:
  6400 ;;		_WriteTimer1
  6401 ;; This function is called by:
  6402 ;;		_InterruptHandlerLow
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           	psect	text39
  6407  001FD0                     __ptext39:
  6408                           	opt stack 0
  6409  001FD0                     _timer1_int_handler:
  6410                           	opt stack 18
  6411                           
  6412                           ;user_interrupts.c: 58: WriteTimer1(0);
  6413                           
  6414                           ;incstack = 0
  6415  001FD0  0E00               	movlw	0
  6416  001FD2  6E02               	movwf	WriteTimer1@timer1+1,c
  6417  001FD4  0E00               	movlw	0
  6418  001FD6  6E01               	movwf	WriteTimer1@timer1,c
  6419  001FD8  ECCD  F00F         	call	_WriteTimer1	;wreg free
  6420  001FDC  0012               	return	
  6421  001FDE                     __end_of_timer1_int_handler:
  6422                           	opt stack 0
  6423                           pclatu	equ	0xFFB
  6424                           pclath	equ	0xFFA
  6425                           tblptru	equ	0xFF8
  6426                           tblptrh	equ	0xFF7
  6427                           tblptrl	equ	0xFF6
  6428                           tablat	equ	0xFF5
  6429                           prodh	equ	0xFF4
  6430                           prodl	equ	0xFF3
  6431                           intcon	equ	0xFF2
  6432                           postinc0	equ	0xFEE
  6433                           fsr0h	equ	0xFEA
  6434                           fsr0l	equ	0xFE9
  6435                           wreg	equ	0xFE8
  6436                           indf1	equ	0xFE7
  6437                           postdec1	equ	0xFE5
  6438                           fsr1h	equ	0xFE2
  6439                           fsr1l	equ	0xFE1
  6440                           bsr	equ	0xFE0
  6441                           indf2	equ	0xFDF
  6442                           postinc2	equ	0xFDE
  6443                           postdec2	equ	0xFDD
  6444                           fsr2h	equ	0xFDA
  6445                           fsr2l	equ	0xFD9
  6446                           status	equ	0xFD8
  6447                           
  6448 ;; *************** function _WriteTimer1 *****************
  6449 ;; Defined at:
  6450 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  timer1          2    0[COMRAM] unsigned int 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  timer           2    2[COMRAM] struct Timers
  6455 ;; Return value:  Size  Location     Type
  6456 ;;		None               void
  6457 ;; Registers used:
  6458 ;;		None
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 0/0
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6464 ;;      Params:         2       0       0       0       0
  6465 ;;      Locals:         2       0       0       0       0
  6466 ;;      Temps:          0       0       0       0       0
  6467 ;;      Totals:         4       0       0       0       0
  6468 ;;Total ram usage:        4 bytes
  6469 ;; Hardware stack levels used:    1
  6470 ;; Hardware stack levels required when called:    6
  6471 ;; This function calls:
  6472 ;;		Nothing
  6473 ;; This function is called by:
  6474 ;;		_timer1_int_handler
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           	psect	text40
  6479  001F9A                     __ptext40:
  6480                           	opt stack 0
  6481  001F9A                     _WriteTimer1:
  6482                           	opt stack 18
  6483                           
  6484                           ;incstack = 0
  6485  001F9A  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6486  001F9E  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6487  001FA2  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6488  001FA6  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6489  001FAA  0012               	return	
  6490  001FAC                     __end_of_WriteTimer1:
  6491                           	opt stack 0
  6492                           pclatu	equ	0xFFB
  6493                           pclath	equ	0xFFA
  6494                           tblptru	equ	0xFF8
  6495                           tblptrh	equ	0xFF7
  6496                           tblptrl	equ	0xFF6
  6497                           tablat	equ	0xFF5
  6498                           prodh	equ	0xFF4
  6499                           prodl	equ	0xFF3
  6500                           intcon	equ	0xFF2
  6501                           postinc0	equ	0xFEE
  6502                           fsr0h	equ	0xFEA
  6503                           fsr0l	equ	0xFE9
  6504                           wreg	equ	0xFE8
  6505                           indf1	equ	0xFE7
  6506                           postdec1	equ	0xFE5
  6507                           fsr1h	equ	0xFE2
  6508                           fsr1l	equ	0xFE1
  6509                           bsr	equ	0xFE0
  6510                           indf2	equ	0xFDF
  6511                           postinc2	equ	0xFDE
  6512                           postdec2	equ	0xFDD
  6513                           fsr2h	equ	0xFDA
  6514                           fsr2l	equ	0xFD9
  6515                           status	equ	0xFD8
  6516                           
  6517 ;; *************** function _adc_int_handler *****************
  6518 ;; Defined at:
  6519 ;;		line 61 in file "../src/user_interrupts.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;		None               void
  6526 ;; Registers used:
  6527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6533 ;;      Params:         0       0       0       0       0
  6534 ;;      Locals:         0       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0
  6536 ;;      Totals:         0       0       0       0       0
  6537 ;;Total ram usage:        0 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    6
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_InterruptHandlerLow
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           	psect	text41
  6548  001ED0                     __ptext41:
  6549                           	opt stack 0
  6550  001ED0                     _adc_int_handler:
  6551                           	opt stack 19
  6552                           
  6553                           ;user_interrupts.c: 63: if(adcbuffer[0] < 27)
  6554                           
  6555                           ;incstack = 0
  6556  001ED0  0E1B               	movlw	27
  6557  001ED2  5C32               	subwf	_adcbuffer,w,c
  6558  001ED4  B0D8               	btfsc	status,0,c
  6559  001ED6  D002               	goto	i1l1341
  6560                           
  6561                           ;user_interrupts.c: 64: adcbuffer[0] = adcbuffer[0] + 1;
  6562  001ED8  2832               	incf	_adcbuffer,w,c
  6563  001EDA  6E32               	movwf	_adcbuffer,c
  6564  001EDC                     i1l1341:
  6565                           
  6566                           ;user_interrupts.c: 71: adcbuffer[adcbuffer[0]] = ADRESH;
  6567  001EDC  5032               	movf	_adcbuffer,w,c
  6568  001EDE  0D01               	mullw	1
  6569  001EE0  0E32               	movlw	low _adcbuffer
  6570  001EE2  24F3               	addwf	prodl,w,c
  6571  001EE4  6ED9               	movwf	fsr2l,c
  6572  001EE6  0E00               	movlw	high _adcbuffer
  6573  001EE8  20F4               	addwfc	prodh,w,c
  6574  001EEA  6EDA               	movwf	fsr2h,c
  6575  001EEC  CFC4 FFDF          	movff	4036,indf2	;volatile
  6576  001EF0  0012               	return	
  6577  001EF2                     __end_of_adc_int_handler:
  6578                           	opt stack 0
  6579                           pclatu	equ	0xFFB
  6580                           pclath	equ	0xFFA
  6581                           tblptru	equ	0xFF8
  6582                           tblptrh	equ	0xFF7
  6583                           tblptrl	equ	0xFF6
  6584                           tablat	equ	0xFF5
  6585                           prodh	equ	0xFF4
  6586                           prodl	equ	0xFF3
  6587                           intcon	equ	0xFF2
  6588                           postinc0	equ	0xFEE
  6589                           fsr0h	equ	0xFEA
  6590                           fsr0l	equ	0xFE9
  6591                           wreg	equ	0xFE8
  6592                           indf1	equ	0xFE7
  6593                           postdec1	equ	0xFE5
  6594                           fsr1h	equ	0xFE2
  6595                           fsr1l	equ	0xFE1
  6596                           bsr	equ	0xFE0
  6597                           indf2	equ	0xFDF
  6598                           postinc2	equ	0xFDE
  6599                           postdec2	equ	0xFDD
  6600                           fsr2h	equ	0xFDA
  6601                           fsr2l	equ	0xFD9
  6602                           status	equ	0xFD8
  6603                           
  6604 ;; *************** function _InterruptHandlerHigh *****************
  6605 ;; Defined at:
  6606 ;;		line 84 in file "../src/interrupts.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;		None
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;		None
  6611 ;; Return value:  Size  Location     Type
  6612 ;;		None               void
  6613 ;; Registers used:
  6614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6620 ;;      Params:         0       0       0       0       0
  6621 ;;      Locals:         0       0       0       0       0
  6622 ;;      Temps:          0      14       0       0       0
  6623 ;;      Totals:         0      14       0       0       0
  6624 ;;Total ram usage:       14 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    5
  6627 ;; This function calls:
  6628 ;;		_SleepIfOkay
  6629 ;;		_i2c_int_handler
  6630 ;;		_timer0_int_handler
  6631 ;; This function is called by:
  6632 ;;		Interrupt level 2
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           	psect	intcode
  6637  000008                     __pintcode:
  6638                           	opt stack 0
  6639  000008                     _InterruptHandlerHigh:
  6640                           	opt stack 16
  6641                           
  6642                           ;incstack = 0
  6643  000008  CFFA F0AD          	movff	pclath,??_InterruptHandlerHigh
  6644  00000C  CFFB F0AE          	movff	pclatu,??_InterruptHandlerHigh+1
  6645  000010  EFA9  F00B         	goto	int_func
  6646                           pclatu	equ	0xFFB
  6647                           pclath	equ	0xFFA
  6648                           tblptru	equ	0xFF8
  6649                           tblptrh	equ	0xFF7
  6650                           tblptrl	equ	0xFF6
  6651                           tablat	equ	0xFF5
  6652                           prodh	equ	0xFF4
  6653                           prodl	equ	0xFF3
  6654                           intcon	equ	0xFF2
  6655                           postinc0	equ	0xFEE
  6656                           fsr0h	equ	0xFEA
  6657                           fsr0l	equ	0xFE9
  6658                           wreg	equ	0xFE8
  6659                           indf1	equ	0xFE7
  6660                           postdec1	equ	0xFE5
  6661                           fsr1h	equ	0xFE2
  6662                           fsr1l	equ	0xFE1
  6663                           bsr	equ	0xFE0
  6664                           indf2	equ	0xFDF
  6665                           postinc2	equ	0xFDE
  6666                           postdec2	equ	0xFDD
  6667                           fsr2h	equ	0xFDA
  6668                           fsr2l	equ	0xFD9
  6669                           status	equ	0xFD8
  6670                           
  6671                           	psect	intcode_body
  6672  001752                     __pintcode_body:
  6673                           	opt stack 16
  6674  001752                     int_func:
  6675                           	opt stack 16
  6676  001752  CFE9 F0AF          	movff	fsr0l,??_InterruptHandlerHigh+2
  6677  001756  CFEA F0B0          	movff	fsr0h,??_InterruptHandlerHigh+3
  6678  00175A  CFE1 F0B1          	movff	fsr1l,??_InterruptHandlerHigh+4
  6679  00175E  CFE2 F0B2          	movff	fsr1h,??_InterruptHandlerHigh+5
  6680  001762  CFD9 F0B3          	movff	fsr2l,??_InterruptHandlerHigh+6
  6681  001766  CFDA F0B4          	movff	fsr2h,??_InterruptHandlerHigh+7
  6682  00176A  CFF3 F0B5          	movff	prodl,??_InterruptHandlerHigh+8
  6683  00176E  CFF4 F0B6          	movff	prodh,??_InterruptHandlerHigh+9
  6684  001772  CFF6 F0B7          	movff	tblptrl,??_InterruptHandlerHigh+10
  6685  001776  CFF7 F0B8          	movff	tblptrh,??_InterruptHandlerHigh+11
  6686  00177A  CFF8 F0B9          	movff	tblptru,??_InterruptHandlerHigh+12
  6687  00177E  CFF5 F0BA          	movff	tablat,??_InterruptHandlerHigh+13
  6688                           
  6689                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  6690  001782  A69E               	btfss	3998,3,c	;volatile
  6691  001784  D003               	goto	i2l3579
  6692                           
  6693                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  6694  001786  969E               	bcf	3998,3,c	;volatile
  6695                           
  6696                           ;interrupts.c: 94: i2c_int_handler();
  6697  001788  ECFE  F00F         	call	_i2c_int_handler	;wreg free
  6698  00178C                     i2l3579:
  6699                           
  6700                           ;interrupts.c: 96: }
  6701                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  6702  00178C  A4F2               	btfss	intcon,2,c	;volatile
  6703  00178E  D003               	goto	i2l3585
  6704                           
  6705                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  6706  001790  94F2               	bcf	intcon,2,c	;volatile
  6707                           
  6708                           ;interrupts.c: 103: timer0_int_handler();
  6709  001792  ECD6  F00F         	call	_timer0_int_handler	;wreg free
  6710  001796                     i2l3585:
  6711                           
  6712                           ;interrupts.c: 104: }
  6713                           ;interrupts.c: 113: SleepIfOkay();
  6714  001796  ECC8  F00D         	call	_SleepIfOkay	;wreg free
  6715  00179A  C0BA  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6716  00179E  C0B9  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6717  0017A2  C0B8  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6718  0017A6  C0B7  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6719  0017AA  C0B6  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6720  0017AE  C0B5  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6721  0017B2  C0B4  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6722  0017B6  C0B3  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6723  0017BA  C0B2  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6724  0017BE  C0B1  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6725  0017C2  C0B0  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6726  0017C6  C0AF  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6727  0017CA  C0AE  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6728  0017CE  C0AD  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6729  0017D2  0011               	retfie		f
  6730  0017D4                     __end_of_InterruptHandlerHigh:
  6731                           	opt stack 0
  6732                           pclatu	equ	0xFFB
  6733                           pclath	equ	0xFFA
  6734                           tblptru	equ	0xFF8
  6735                           tblptrh	equ	0xFF7
  6736                           tblptrl	equ	0xFF6
  6737                           tablat	equ	0xFF5
  6738                           prodh	equ	0xFF4
  6739                           prodl	equ	0xFF3
  6740                           intcon	equ	0xFF2
  6741                           postinc0	equ	0xFEE
  6742                           fsr0h	equ	0xFEA
  6743                           fsr0l	equ	0xFE9
  6744                           wreg	equ	0xFE8
  6745                           indf1	equ	0xFE7
  6746                           postdec1	equ	0xFE5
  6747                           fsr1h	equ	0xFE2
  6748                           fsr1l	equ	0xFE1
  6749                           bsr	equ	0xFE0
  6750                           indf2	equ	0xFDF
  6751                           postinc2	equ	0xFDE
  6752                           postdec2	equ	0xFDD
  6753                           fsr2h	equ	0xFDA
  6754                           fsr2l	equ	0xFD9
  6755                           status	equ	0xFD8
  6756                           
  6757 ;; *************** function _timer0_int_handler *****************
  6758 ;; Defined at:
  6759 ;;		line 16 in file "../src/user_interrupts.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;		None
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;		None
  6764 ;; Return value:  Size  Location     Type
  6765 ;;		None               void
  6766 ;; Registers used:
  6767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6773 ;;      Params:         0       0       0       0       0
  6774 ;;      Locals:         0       0       0       0       0
  6775 ;;      Temps:          0       0       0       0       0
  6776 ;;      Totals:         0       0       0       0       0
  6777 ;;Total ram usage:        0 bytes
  6778 ;; Hardware stack levels used:    1
  6779 ;; Hardware stack levels required when called:    1
  6780 ;; This function calls:
  6781 ;;		_WriteTimer0
  6782 ;; This function is called by:
  6783 ;;		_InterruptHandlerHigh
  6784 ;; This function uses a non-reentrant model
  6785 ;;
  6786                           
  6787                           	psect	text43
  6788  001FAC                     __ptext43:
  6789                           	opt stack 0
  6790  001FAC                     _timer0_int_handler:
  6791                           	opt stack 19
  6792                           
  6793                           ;user_interrupts.c: 17: WriteTimer0(0);
  6794                           
  6795                           ;incstack = 0
  6796  001FAC  0E00               	movlw	0
  6797  001FAE  6E2E               	movwf	WriteTimer0@timer0+1,c
  6798  001FB0  0E00               	movlw	0
  6799  001FB2  6E2D               	movwf	WriteTimer0@timer0,c
  6800  001FB4  ECDF  F00F         	call	_WriteTimer0	;wreg free
  6801                           
  6802                           ;user_interrupts.c: 33: UART_timeout++;
  6803  001FB8  4A4E               	infsnz	_UART_timeout,f,c
  6804  001FBA  2A4F               	incf	_UART_timeout+1,f,c
  6805  001FBC  0012               	return	
  6806  001FBE                     __end_of_timer0_int_handler:
  6807                           	opt stack 0
  6808                           pclatu	equ	0xFFB
  6809                           pclath	equ	0xFFA
  6810                           tblptru	equ	0xFF8
  6811                           tblptrh	equ	0xFF7
  6812                           tblptrl	equ	0xFF6
  6813                           tablat	equ	0xFF5
  6814                           prodh	equ	0xFF4
  6815                           prodl	equ	0xFF3
  6816                           intcon	equ	0xFF2
  6817                           postinc0	equ	0xFEE
  6818                           fsr0h	equ	0xFEA
  6819                           fsr0l	equ	0xFE9
  6820                           wreg	equ	0xFE8
  6821                           indf1	equ	0xFE7
  6822                           postdec1	equ	0xFE5
  6823                           fsr1h	equ	0xFE2
  6824                           fsr1l	equ	0xFE1
  6825                           bsr	equ	0xFE0
  6826                           indf2	equ	0xFDF
  6827                           postinc2	equ	0xFDE
  6828                           postdec2	equ	0xFDD
  6829                           fsr2h	equ	0xFDA
  6830                           fsr2l	equ	0xFD9
  6831                           status	equ	0xFD8
  6832                           
  6833 ;; *************** function _WriteTimer0 *****************
  6834 ;; Defined at:
  6835 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  timer0          2   44[COMRAM] unsigned int 
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;  timer           2   46[COMRAM] struct Timers
  6840 ;; Return value:  Size  Location     Type
  6841 ;;		None               void
  6842 ;; Registers used:
  6843 ;;		None
  6844 ;; Tracked objects:
  6845 ;;		On entry : 0/0
  6846 ;;		On exit  : 0/0
  6847 ;;		Unchanged: 0/0
  6848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6849 ;;      Params:         2       0       0       0       0
  6850 ;;      Locals:         2       0       0       0       0
  6851 ;;      Temps:          0       0       0       0       0
  6852 ;;      Totals:         4       0       0       0       0
  6853 ;;Total ram usage:        4 bytes
  6854 ;; Hardware stack levels used:    1
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_timer0_int_handler
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text44
  6863  001FBE                     __ptext44:
  6864                           	opt stack 0
  6865  001FBE                     _WriteTimer0:
  6866                           	opt stack 19
  6867                           
  6868                           ;incstack = 0
  6869  001FBE  C02D  F02F         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6870  001FC2  C02E  F030         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6871  001FC6  C030  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6872  001FCA  C02F  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6873  001FCE  0012               	return	
  6874  001FD0                     __end_of_WriteTimer0:
  6875                           	opt stack 0
  6876                           pclatu	equ	0xFFB
  6877                           pclath	equ	0xFFA
  6878                           tblptru	equ	0xFF8
  6879                           tblptrh	equ	0xFF7
  6880                           tblptrl	equ	0xFF6
  6881                           tablat	equ	0xFF5
  6882                           prodh	equ	0xFF4
  6883                           prodl	equ	0xFF3
  6884                           intcon	equ	0xFF2
  6885                           postinc0	equ	0xFEE
  6886                           fsr0h	equ	0xFEA
  6887                           fsr0l	equ	0xFE9
  6888                           wreg	equ	0xFE8
  6889                           indf1	equ	0xFE7
  6890                           postdec1	equ	0xFE5
  6891                           fsr1h	equ	0xFE2
  6892                           fsr1l	equ	0xFE1
  6893                           bsr	equ	0xFE0
  6894                           indf2	equ	0xFDF
  6895                           postinc2	equ	0xFDE
  6896                           postdec2	equ	0xFDD
  6897                           fsr2h	equ	0xFDA
  6898                           fsr2l	equ	0xFD9
  6899                           status	equ	0xFD8
  6900                           
  6901 ;; *************** function _i2c_int_handler *****************
  6902 ;; Defined at:
  6903 ;;		line 139 in file "../src/my_i2c.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;		None
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;		None
  6908 ;; Return value:  Size  Location     Type
  6909 ;;		None               void
  6910 ;; Registers used:
  6911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6917 ;;      Params:         0       0       0       0       0
  6918 ;;      Locals:         0       0       0       0       0
  6919 ;;      Temps:          0       0       0       0       0
  6920 ;;      Totals:         0       0       0       0       0
  6921 ;;Total ram usage:        0 bytes
  6922 ;; Hardware stack levels used:    1
  6923 ;; Hardware stack levels required when called:    4
  6924 ;; This function calls:
  6925 ;;		_i2c_slave_int_handler
  6926 ;; This function is called by:
  6927 ;;		_InterruptHandlerHigh
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           	psect	text45
  6932  001FFC                     __ptext45:
  6933                           	opt stack 0
  6934  001FFC                     _i2c_int_handler:
  6935                           	opt stack 16
  6936                           
  6937                           ;my_i2c.c: 143: i2c_slave_int_handler();
  6938                           
  6939                           ;incstack = 0
  6940  001FFC  EC65  F000         	call	_i2c_slave_int_handler	;wreg free
  6941  002000  0012               	return	
  6942  002002                     __end_of_i2c_int_handler:
  6943                           	opt stack 0
  6944                           pclatu	equ	0xFFB
  6945                           pclath	equ	0xFFA
  6946                           tblptru	equ	0xFF8
  6947                           tblptrh	equ	0xFF7
  6948                           tblptrl	equ	0xFF6
  6949                           tablat	equ	0xFF5
  6950                           prodh	equ	0xFF4
  6951                           prodl	equ	0xFF3
  6952                           intcon	equ	0xFF2
  6953                           postinc0	equ	0xFEE
  6954                           fsr0h	equ	0xFEA
  6955                           fsr0l	equ	0xFE9
  6956                           wreg	equ	0xFE8
  6957                           indf1	equ	0xFE7
  6958                           postdec1	equ	0xFE5
  6959                           fsr1h	equ	0xFE2
  6960                           fsr1l	equ	0xFE1
  6961                           bsr	equ	0xFE0
  6962                           indf2	equ	0xFDF
  6963                           postinc2	equ	0xFDE
  6964                           postdec2	equ	0xFDD
  6965                           fsr2h	equ	0xFDA
  6966                           fsr2l	equ	0xFD9
  6967                           status	equ	0xFD8
  6968                           
  6969 ;; *************** function _i2c_slave_int_handler *****************
  6970 ;; Defined at:
  6971 ;;		line 248 in file "../src/my_i2c.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;		None
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;  motormsg        5   29[BANK0 ] unsigned char [5]
  6976 ;;  sensormsg       5   24[BANK0 ] unsigned char [5]
  6977 ;;  length          2   41[BANK0 ] int 
  6978 ;;  error_buf       3   34[BANK0 ] unsigned char [3]
  6979 ;;  data_read       1   44[BANK0 ] unsigned char 
  6980 ;;  msg_ready       1   43[BANK0 ] unsigned char 
  6981 ;;  msg_to_send     1   40[BANK0 ] unsigned char 
  6982 ;;  i2c_data        1   39[BANK0 ] unsigned char 
  6983 ;;  overrun_erro    1   38[BANK0 ] unsigned char 
  6984 ;;  data_written    1   37[BANK0 ] unsigned char 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;		None               void
  6987 ;; Registers used:
  6988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6994 ;;      Params:         0       0       0       0       0
  6995 ;;      Locals:         0      21       0       0       0
  6996 ;;      Temps:          0       2       0       0       0
  6997 ;;      Totals:         0      23       0       0       0
  6998 ;;Total ram usage:       23 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    3
  7001 ;; This function calls:
  7002 ;;		_ToMainHigh_sendmsg
  7003 ;;		_handle_start
  7004 ;;		_start_i2c_slave_reply
  7005 ;; This function is called by:
  7006 ;;		_i2c_int_handler
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           	psect	text46
  7011  0000CA                     __ptext46:
  7012                           	opt stack 0
  7013  0000CA                     _i2c_slave_int_handler:
  7014                           	opt stack 16
  7015                           
  7016                           ;my_i2c.c: 249: unsigned char i2c_data;
  7017                           ;my_i2c.c: 250: unsigned char data_read = 0;
  7018                           
  7019                           ;incstack = 0
  7020  0000CA  0100               	movlb	0	; () banked
  7021  0000CC  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7022  0000CE  0E00               	movlw	0
  7023  0000D0  0100               	movlb	0	; () banked
  7024  0000D2  0100               	movlb	0	; () banked
  7025  0000D4  6FAC               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7026  0000D6  0100               	movlb	0	; () banked
  7027  0000D8  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7028                           
  7029                           ;my_i2c.c: 251: unsigned char data_written = 0;
  7030  0000DA  0100               	movlb	0	; () banked
  7031  0000DC  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7032  0000DE  0E00               	movlw	0
  7033  0000E0  0100               	movlb	0	; () banked
  7034  0000E2  0100               	movlb	0	; () banked
  7035  0000E4  6FA5               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7036  0000E6  0100               	movlb	0	; () banked
  7037  0000E8  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7038                           
  7039                           ;my_i2c.c: 252: unsigned char msg_ready = 0;
  7040  0000EA  0100               	movlb	0	; () banked
  7041  0000EC  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7042  0000EE  0E00               	movlw	0
  7043  0000F0  0100               	movlb	0	; () banked
  7044  0000F2  0100               	movlb	0	; () banked
  7045  0000F4  6FAB               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7046  0000F6  0100               	movlb	0	; () banked
  7047  0000F8  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7048                           
  7049                           ;my_i2c.c: 253: unsigned char msg_to_send = 0;
  7050  0000FA  0100               	movlb	0	; () banked
  7051  0000FC  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7052  0000FE  0E00               	movlw	0
  7053  000100  0100               	movlb	0	; () banked
  7054  000102  0100               	movlb	0	; () banked
  7055  000104  6FA8               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7056  000106  0100               	movlb	0	; () banked
  7057  000108  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7058                           
  7059                           ;my_i2c.c: 254: unsigned char overrun_error = 0;
  7060  00010A  0100               	movlb	0	; () banked
  7061  00010C  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7062  00010E  0E00               	movlw	0
  7063  000110  0100               	movlb	0	; () banked
  7064  000112  0100               	movlb	0	; () banked
  7065  000114  6FA6               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7066  000116  0100               	movlb	0	; () banked
  7067  000118  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;my_i2c.c: 255: unsigned char error_buf[3];
  7071                           ;my_i2c.c: 258: if (SSPCON1bits.SSPOV == 1) {
  7072  00011A  ACC6               	btfss	4038,6,c	;volatile
  7073  00011C  D029               	goto	i2l4007
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;my_i2c.c: 259: SSPCON1bits.SSPOV = 0;
  7077  00011E  9CC6               	bcf	4038,6,c	;volatile
  7078                           
  7079                           ; BSR set to: 0
  7080                           ;my_i2c.c: 263: ic_ptr->status = 0x5;
  7081  000120  0100               	movlb	0	; () banked
  7082  000122  EE20 F00D          	lfsr	2,13
  7083  000126  0100               	movlb	0	; () banked
  7084  000128  51C5               	movf	_ic_ptr& (0+255),w,b
  7085  00012A  26D9               	addwf	fsr2l,f,c
  7086  00012C  0100               	movlb	0	; () banked
  7087  00012E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7088  000130  22DA               	addwfc	fsr2h,f,c
  7089  000132  0E05               	movlw	5
  7090  000134  6EDF               	movwf	indf2,c
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;my_i2c.c: 264: overrun_error = 1;
  7094  000136  0100               	movlb	0	; () banked
  7095  000138  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7096  00013A  0E01               	movlw	1
  7097  00013C  0100               	movlb	0	; () banked
  7098  00013E  0100               	movlb	0	; () banked
  7099  000140  6FA6               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7100  000142  0100               	movlb	0	; () banked
  7101  000144  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;my_i2c.c: 265: ic_ptr->error_count++;
  7105  000146  0100               	movlb	0	; () banked
  7106  000148  EE20 F00F          	lfsr	2,15
  7107  00014C  0100               	movlb	0	; () banked
  7108  00014E  51C5               	movf	_ic_ptr& (0+255),w,b
  7109  000150  26D9               	addwf	fsr2l,f,c
  7110  000152  0100               	movlb	0	; () banked
  7111  000154  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7112  000156  22DA               	addwfc	fsr2h,f,c
  7113  000158  2ADF               	incf	indf2,f,c
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;my_i2c.c: 266: ic_ptr->error_code = 0x4;
  7117  00015A  0100               	movlb	0	; () banked
  7118  00015C  EE20 F00E          	lfsr	2,14
  7119  000160  0100               	movlb	0	; () banked
  7120  000162  51C5               	movf	_ic_ptr& (0+255),w,b
  7121  000164  26D9               	addwf	fsr2l,f,c
  7122  000166  0100               	movlb	0	; () banked
  7123  000168  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7124  00016A  22DA               	addwfc	fsr2h,f,c
  7125  00016C  0E04               	movlw	4
  7126  00016E  6EDF               	movwf	indf2,c
  7127  000170                     i2l4007:
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;my_i2c.c: 267: }
  7131                           ;my_i2c.c: 269: if (SSPSTATbits.BF == 1) {
  7132  000170  A0C7               	btfss	4039,0,c	;volatile
  7133  000172  D00A               	goto	i2l4013
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;my_i2c.c: 270: i2c_data = SSPBUF;
  7137  000174  CFC9 F0A7          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;my_i2c.c: 271: data_read = 1;
  7141  000178  0100               	movlb	0	; () banked
  7142  00017A  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7143  00017C  0E01               	movlw	1
  7144  00017E  0100               	movlb	0	; () banked
  7145  000180  0100               	movlb	0	; () banked
  7146  000182  6FAC               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7147  000184  0100               	movlb	0	; () banked
  7148  000186  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7149  000188                     i2l4013:
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;my_i2c.c: 272: }
  7153                           ;my_i2c.c: 274: if (!overrun_error) {
  7154  000188  0100               	movlb	0	; () banked
  7155  00018A  0100               	movlb	0	; () banked
  7156  00018C  67A6               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  7157  00018E  D1CE               	goto	i2l330
  7158  000190  D1B7               	goto	i2l4101
  7159  000192                     i2l332:
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;my_i2c.c: 277: {
  7163                           ;my_i2c.c: 279: if (SSPSTATbits.S == 1) {
  7164  000192  A6C7               	btfss	4039,3,c	;volatile
  7165  000194  D1CB               	goto	i2l330
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;my_i2c.c: 280: handle_start(data_read);
  7169  000196  0100               	movlb	0	; () banked
  7170  000198  0100               	movlb	0	; () banked
  7171  00019A  51AC               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7172  00019C  ECB3  F008         	call	_handle_start
  7173                           
  7174                           ;my_i2c.c: 282: if (ic_ptr->status == 0x8) {
  7175  0001A0  0100               	movlb	0	; () banked
  7176  0001A2  EE20 F00D          	lfsr	2,13
  7177  0001A6  0100               	movlb	0	; () banked
  7178  0001A8  51C5               	movf	_ic_ptr& (0+255),w,b
  7179  0001AA  26D9               	addwf	fsr2l,f,c
  7180  0001AC  0100               	movlb	0	; () banked
  7181  0001AE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7182  0001B0  22DA               	addwfc	fsr2h,f,c
  7183  0001B2  0E08               	movlw	8
  7184  0001B4  62DF               	cpfseq	indf2,c
  7185  0001B6  D1BA               	goto	i2l330
  7186                           
  7187                           ; BSR set to: 0
  7188                           ;my_i2c.c: 283: data_read = 0;
  7189  0001B8  0100               	movlb	0	; () banked
  7190  0001BA  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7191  0001BC  0E00               	movlw	0
  7192  0001BE  0100               	movlb	0	; () banked
  7193  0001C0  0100               	movlb	0	; () banked
  7194  0001C2  6FAC               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7195  0001C4  0100               	movlb	0	; () banked
  7196  0001C6  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7197                           
  7198                           ;my_i2c.c: 284: msg_to_send = 1;
  7199  0001C8  0100               	movlb	0	; () banked
  7200  0001CA  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7201  0001CC  0E01               	movlw	1
  7202  0001CE  0100               	movlb	0	; () banked
  7203  0001D0  0100               	movlb	0	; () banked
  7204  0001D2  6FA8               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7205  0001D4  D187               	goto	L6
  7206  0001D6                     i2l336:
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;my_i2c.c: 290: {
  7210                           ;my_i2c.c: 292: if (SSPSTATbits.P == 1) {
  7211  0001D6  A8C7               	btfss	4039,4,c	;volatile
  7212  0001D8  D030               	goto	i2l4033
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;my_i2c.c: 295: ic_ptr->event_count++;
  7216  0001DA  0100               	movlb	0	; () banked
  7217  0001DC  EE20 F00C          	lfsr	2,12
  7218  0001E0  0100               	movlb	0	; () banked
  7219  0001E2  51C5               	movf	_ic_ptr& (0+255),w,b
  7220  0001E4  26D9               	addwf	fsr2l,f,c
  7221  0001E6  0100               	movlb	0	; () banked
  7222  0001E8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7223  0001EA  22DA               	addwfc	fsr2h,f,c
  7224  0001EC  2ADF               	incf	indf2,f,c
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;my_i2c.c: 296: if (data_read) {
  7228  0001EE  0100               	movlb	0	; () banked
  7229  0001F0  0100               	movlb	0	; () banked
  7230  0001F2  51AC               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7231  0001F4  B4D8               	btfsc	status,2,c
  7232  0001F6  D179               	goto	L8
  7233                           
  7234                           ; BSR set to: 0
  7235                           ;my_i2c.c: 297: if (SSPSTATbits.D_A == 0) {
  7236  0001F8  BAC7               	btfsc	4039,5,c	;volatile
  7237  0001FA  D009               	goto	i2l4031
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;my_i2c.c: 298: msg_ready = 1;
  7241  0001FC  0100               	movlb	0	; () banked
  7242  0001FE  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7243  000200  0E01               	movlw	1
  7244  000202  0100               	movlb	0	; () banked
  7245  000204  0100               	movlb	0	; () banked
  7246  000206  6FAB               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7247  000208  0100               	movlb	0	; () banked
  7248  00020A  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7249                           
  7250                           ;my_i2c.c: 299: } else {
  7251  00020C  D16E               	goto	L8
  7252  00020E                     i2l4031:
  7253                           
  7254                           ; BSR set to: 0
  7255                           ;my_i2c.c: 300: ic_ptr->error_count++;
  7256  00020E  0100               	movlb	0	; () banked
  7257  000210  EE20 F00F          	lfsr	2,15
  7258  000214  0100               	movlb	0	; () banked
  7259  000216  51C5               	movf	_ic_ptr& (0+255),w,b
  7260  000218  26D9               	addwf	fsr2l,f,c
  7261  00021A  0100               	movlb	0	; () banked
  7262  00021C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7263  00021E  22DA               	addwfc	fsr2h,f,c
  7264  000220  2ADF               	incf	indf2,f,c
  7265                           
  7266                           ;my_i2c.c: 301: ic_ptr->error_code = 0x6;
  7267  000222  0100               	movlb	0	; () banked
  7268  000224  EE20 F00E          	lfsr	2,14
  7269  000228  0100               	movlb	0	; () banked
  7270  00022A  51C5               	movf	_ic_ptr& (0+255),w,b
  7271  00022C  26D9               	addwf	fsr2l,f,c
  7272  00022E  0100               	movlb	0	; () banked
  7273  000230  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7274  000232  22DA               	addwfc	fsr2h,f,c
  7275  000234  0E06               	movlw	6
  7276  000236  6EDF               	movwf	indf2,c
  7277                           
  7278                           ; BSR set to: 0
  7279  000238  D158               	goto	L8
  7280  00023A                     i2l4033:
  7281                           
  7282                           ; BSR set to: 0
  7283  00023A  0100               	movlb	0	; () banked
  7284  00023C  0100               	movlb	0	; () banked
  7285  00023E  51AC               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7286  000240  B4D8               	btfsc	status,2,c
  7287  000242  D174               	goto	i2l330
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;my_i2c.c: 306: ic_ptr->event_count++;
  7291  000244  0100               	movlb	0	; () banked
  7292  000246  EE20 F00C          	lfsr	2,12
  7293  00024A  0100               	movlb	0	; () banked
  7294  00024C  51C5               	movf	_ic_ptr& (0+255),w,b
  7295  00024E  26D9               	addwf	fsr2l,f,c
  7296  000250  0100               	movlb	0	; () banked
  7297  000252  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7298  000254  22DA               	addwfc	fsr2h,f,c
  7299  000256  2ADF               	incf	indf2,f,c
  7300                           
  7301                           ; BSR set to: 0
  7302                           ;my_i2c.c: 307: if (SSPSTATbits.D_A == 0) {
  7303  000258  BAC7               	btfsc	4039,5,c	;volatile
  7304  00025A  D019               	goto	i2l4049
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;my_i2c.c: 308: if (SSPSTATbits.R_W == 0) {
  7308  00025C  B4C7               	btfsc	4039,2,c	;volatile
  7309  00025E  D00B               	goto	i2l4043
  7310                           
  7311                           ; BSR set to: 0
  7312                           ;my_i2c.c: 309: ic_ptr->status = 0x7;
  7313  000260  0100               	movlb	0	; () banked
  7314  000262  EE20 F00D          	lfsr	2,13
  7315  000266  0100               	movlb	0	; () banked
  7316  000268  51C5               	movf	_ic_ptr& (0+255),w,b
  7317  00026A  26D9               	addwf	fsr2l,f,c
  7318  00026C  0100               	movlb	0	; () banked
  7319  00026E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7320  000270  22DA               	addwfc	fsr2h,f,c
  7321  000272  0E07               	movlw	7
  7322  000274  D076               	goto	L5
  7323  000276                     i2l4043:
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;my_i2c.c: 311: ic_ptr->status = 0x8;
  7327  000276  0100               	movlb	0	; () banked
  7328  000278  EE20 F00D          	lfsr	2,13
  7329  00027C  0100               	movlb	0	; () banked
  7330  00027E  51C5               	movf	_ic_ptr& (0+255),w,b
  7331  000280  26D9               	addwf	fsr2l,f,c
  7332  000282  0100               	movlb	0	; () banked
  7333  000284  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7334  000286  22DA               	addwfc	fsr2h,f,c
  7335  000288  0E08               	movlw	8
  7336  00028A  6EDF               	movwf	indf2,c
  7337  00028C  D11D               	goto	L9
  7338  00028E                     i2l4049:
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;my_i2c.c: 317: ic_ptr->error_count++;
  7342  00028E  0100               	movlb	0	; () banked
  7343  000290  EE20 F00F          	lfsr	2,15
  7344  000294  0100               	movlb	0	; () banked
  7345  000296  51C5               	movf	_ic_ptr& (0+255),w,b
  7346  000298  26D9               	addwf	fsr2l,f,c
  7347  00029A  0100               	movlb	0	; () banked
  7348  00029C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7349  00029E  22DA               	addwfc	fsr2h,f,c
  7350  0002A0  2ADF               	incf	indf2,f,c
  7351                           
  7352                           ;my_i2c.c: 318: ic_ptr->status = 0x5;
  7353  0002A2  0100               	movlb	0	; () banked
  7354  0002A4  EE20 F00D          	lfsr	2,13
  7355  0002A8  0100               	movlb	0	; () banked
  7356  0002AA  51C5               	movf	_ic_ptr& (0+255),w,b
  7357  0002AC  26D9               	addwf	fsr2l,f,c
  7358  0002AE  0100               	movlb	0	; () banked
  7359  0002B0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7360  0002B2  22DA               	addwfc	fsr2h,f,c
  7361  0002B4  0E05               	movlw	5
  7362  0002B6  6EDF               	movwf	indf2,c
  7363                           
  7364                           ;my_i2c.c: 319: ic_ptr->error_code = 0x6;
  7365  0002B8  0100               	movlb	0	; () banked
  7366  0002BA  EE20 F00E          	lfsr	2,14
  7367  0002BE  0100               	movlb	0	; () banked
  7368  0002C0  51C5               	movf	_ic_ptr& (0+255),w,b
  7369  0002C2  26D9               	addwf	fsr2l,f,c
  7370  0002C4  0100               	movlb	0	; () banked
  7371  0002C6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7372  0002C8  22DA               	addwfc	fsr2h,f,c
  7373  0002CA  0E06               	movlw	6
  7374  0002CC  D04A               	goto	L5
  7375  0002CE                     i2l4051:
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;my_i2c.c: 325: {
  7379                           ;my_i2c.c: 326: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7380  0002CE  0100               	movlb	0	; () banked
  7381  0002D0  EE20 F01B          	lfsr	2,27
  7382  0002D4  0100               	movlb	0	; () banked
  7383  0002D6  51C5               	movf	_ic_ptr& (0+255),w,b
  7384  0002D8  26D9               	addwf	fsr2l,f,c
  7385  0002DA  0100               	movlb	0	; () banked
  7386  0002DC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7387  0002DE  22DA               	addwfc	fsr2h,f,c
  7388  0002E0  50DF               	movf	indf2,w,c
  7389  0002E2  0100               	movlb	0	; () banked
  7390  0002E4  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7391  0002E6  0100               	movlb	0	; () banked
  7392  0002E8  EE20 F01A          	lfsr	2,26
  7393  0002EC  0100               	movlb	0	; () banked
  7394  0002EE  51C5               	movf	_ic_ptr& (0+255),w,b
  7395  0002F0  26D9               	addwf	fsr2l,f,c
  7396  0002F2  0100               	movlb	0	; () banked
  7397  0002F4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7398  0002F6  22DA               	addwfc	fsr2h,f,c
  7399  0002F8  50DF               	movf	indf2,w,c
  7400  0002FA  0100               	movlb	0	; () banked
  7401  0002FC  5D96               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  7402  0002FE  B0D8               	btfsc	status,0,c
  7403  000300  D0F4               	goto	L8
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;my_i2c.c: 327: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7407  000302  0100               	movlb	0	; () banked
  7408  000304  EE20 F01B          	lfsr	2,27
  7409  000308  0100               	movlb	0	; () banked
  7410  00030A  51C5               	movf	_ic_ptr& (0+255),w,b
  7411  00030C  26D9               	addwf	fsr2l,f,c
  7412  00030E  0100               	movlb	0	; () banked
  7413  000310  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7414  000312  22DA               	addwfc	fsr2h,f,c
  7415  000314  50DF               	movf	indf2,w,c
  7416  000316  0100               	movlb	0	; () banked
  7417  000318  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7418  00031A  0100               	movlb	0	; () banked
  7419  00031C  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7420  00031E  0D01               	mullw	1
  7421  000320  0E10               	movlw	16
  7422  000322  26F3               	addwf	prodl,f,c
  7423  000324  0E00               	movlw	0
  7424  000326  22F4               	addwfc	prodh,f,c
  7425  000328  50F3               	movf	prodl,w,c
  7426  00032A  0100               	movlb	0	; () banked
  7427  00032C  0100               	movlb	0	; () banked
  7428  00032E  25C5               	addwf	_ic_ptr& (0+255),w,b
  7429  000330  6ED9               	movwf	fsr2l,c
  7430  000332  50F4               	movf	prodh,w,c
  7431  000334  0100               	movlb	0	; () banked
  7432  000336  0100               	movlb	0	; () banked
  7433  000338  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7434  00033A  6EDA               	movwf	fsr2h,c
  7435  00033C  50DF               	movf	indf2,w,c
  7436  00033E  6EC9               	movwf	4041,c	;volatile
  7437                           
  7438                           ; BSR set to: 0
  7439                           ;my_i2c.c: 328: ic_ptr->outbufind++;
  7440  000340  0100               	movlb	0	; () banked
  7441  000342  EE20 F01B          	lfsr	2,27
  7442  000346  0100               	movlb	0	; () banked
  7443  000348  51C5               	movf	_ic_ptr& (0+255),w,b
  7444  00034A  26D9               	addwf	fsr2l,f,c
  7445  00034C  0100               	movlb	0	; () banked
  7446  00034E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7447  000350  22DA               	addwfc	fsr2h,f,c
  7448  000352  2ADF               	incf	indf2,f,c
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;my_i2c.c: 329: data_written = 1;
  7452  000354  0100               	movlb	0	; () banked
  7453  000356  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7454  000358  0E01               	movlw	1
  7455  00035A  0100               	movlb	0	; () banked
  7456  00035C  0100               	movlb	0	; () banked
  7457  00035E  6FA5               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7458  000360  D0C1               	goto	L6
  7459  000362                     L5:
  7460  000362  6EDF               	movwf	indf2,c
  7461  000364  D0E3               	goto	i2l330
  7462  000366                     i2l350:
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;my_i2c.c: 337: {
  7466                           ;my_i2c.c: 339: if (SSPSTATbits.P == 1) {
  7467  000366  A8C7               	btfss	4039,4,c	;volatile
  7468  000368  D062               	goto	i2l4079
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;my_i2c.c: 341: ic_ptr->event_count++;
  7472  00036A  0100               	movlb	0	; () banked
  7473  00036C  EE20 F00C          	lfsr	2,12
  7474  000370  0100               	movlb	0	; () banked
  7475  000372  51C5               	movf	_ic_ptr& (0+255),w,b
  7476  000374  26D9               	addwf	fsr2l,f,c
  7477  000376  0100               	movlb	0	; () banked
  7478  000378  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7479  00037A  22DA               	addwfc	fsr2h,f,c
  7480  00037C  2ADF               	incf	indf2,f,c
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;my_i2c.c: 342: if (data_read) {
  7484  00037E  0100               	movlb	0	; () banked
  7485  000380  0100               	movlb	0	; () banked
  7486  000382  51AC               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7487  000384  B4D8               	btfsc	status,2,c
  7488  000386  D04A               	goto	i2l4075
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;my_i2c.c: 343: if (SSPSTATbits.D_A == 1) {
  7492  000388  AAC7               	btfss	4039,5,c	;volatile
  7493  00038A  D027               	goto	i2l4073
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;my_i2c.c: 344: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7497  00038C  0100               	movlb	0	; () banked
  7498  00038E  EE20 F00A          	lfsr	2,10
  7499  000392  0100               	movlb	0	; () banked
  7500  000394  51C5               	movf	_ic_ptr& (0+255),w,b
  7501  000396  26D9               	addwf	fsr2l,f,c
  7502  000398  0100               	movlb	0	; () banked
  7503  00039A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7504  00039C  22DA               	addwfc	fsr2h,f,c
  7505  00039E  50DF               	movf	indf2,w,c
  7506  0003A0  0100               	movlb	0	; () banked
  7507  0003A2  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7508  0003A4  0100               	movlb	0	; () banked
  7509  0003A6  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7510  0003A8  0D01               	mullw	1
  7511  0003AA  50F3               	movf	prodl,w,c
  7512  0003AC  0100               	movlb	0	; () banked
  7513  0003AE  0100               	movlb	0	; () banked
  7514  0003B0  25C5               	addwf	_ic_ptr& (0+255),w,b
  7515  0003B2  6ED9               	movwf	fsr2l,c
  7516  0003B4  50F4               	movf	prodh,w,c
  7517  0003B6  0100               	movlb	0	; () banked
  7518  0003B8  0100               	movlb	0	; () banked
  7519  0003BA  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7520  0003BC  6EDA               	movwf	fsr2h,c
  7521  0003BE  0100               	movlb	0	; () banked
  7522  0003C0  C0A7  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;my_i2c.c: 345: ic_ptr->buflen++;
  7526  0003C4  0100               	movlb	0	; () banked
  7527  0003C6  EE20 F00A          	lfsr	2,10
  7528  0003CA  0100               	movlb	0	; () banked
  7529  0003CC  51C5               	movf	_ic_ptr& (0+255),w,b
  7530  0003CE  26D9               	addwf	fsr2l,f,c
  7531  0003D0  0100               	movlb	0	; () banked
  7532  0003D2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7533  0003D4  22DA               	addwfc	fsr2h,f,c
  7534  0003D6  2ADF               	incf	indf2,f,c
  7535  0003D8  D021               	goto	i2l4075
  7536  0003DA                     i2l4073:
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;my_i2c.c: 348: ic_ptr->error_count++;
  7540  0003DA  0100               	movlb	0	; () banked
  7541  0003DC  EE20 F00F          	lfsr	2,15
  7542  0003E0  0100               	movlb	0	; () banked
  7543  0003E2  51C5               	movf	_ic_ptr& (0+255),w,b
  7544  0003E4  26D9               	addwf	fsr2l,f,c
  7545  0003E6  0100               	movlb	0	; () banked
  7546  0003E8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7547  0003EA  22DA               	addwfc	fsr2h,f,c
  7548  0003EC  2ADF               	incf	indf2,f,c
  7549                           
  7550                           ;my_i2c.c: 349: ic_ptr->error_code = 0x6;
  7551  0003EE  0100               	movlb	0	; () banked
  7552  0003F0  EE20 F00E          	lfsr	2,14
  7553  0003F4  0100               	movlb	0	; () banked
  7554  0003F6  51C5               	movf	_ic_ptr& (0+255),w,b
  7555  0003F8  26D9               	addwf	fsr2l,f,c
  7556  0003FA  0100               	movlb	0	; () banked
  7557  0003FC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7558  0003FE  22DA               	addwfc	fsr2h,f,c
  7559  000400  0E06               	movlw	6
  7560  000402  6EDF               	movwf	indf2,c
  7561                           
  7562                           ;my_i2c.c: 350: ic_ptr->status = 0x5;
  7563  000404  0100               	movlb	0	; () banked
  7564  000406  EE20 F00D          	lfsr	2,13
  7565  00040A  0100               	movlb	0	; () banked
  7566  00040C  51C5               	movf	_ic_ptr& (0+255),w,b
  7567  00040E  26D9               	addwf	fsr2l,f,c
  7568  000410  0100               	movlb	0	; () banked
  7569  000412  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7570  000414  22DA               	addwfc	fsr2h,f,c
  7571  000416  0E05               	movlw	5
  7572  000418  6EDF               	movwf	indf2,c
  7573  00041A  D067               	goto	L8
  7574  00041C                     i2l4075:
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;my_i2c.c: 353: msg_ready = 1;
  7578  00041C  0100               	movlb	0	; () banked
  7579  00041E  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7580  000420  0E01               	movlw	1
  7581  000422  0100               	movlb	0	; () banked
  7582  000424  0100               	movlb	0	; () banked
  7583  000426  6FAB               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7584  000428  0100               	movlb	0	; () banked
  7585  00042A  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7586                           
  7587                           ; BSR set to: 0
  7588  00042C  D05E               	goto	L8
  7589  00042E                     i2l4079:
  7590                           
  7591                           ; BSR set to: 0
  7592  00042E  0100               	movlb	0	; () banked
  7593  000430  0100               	movlb	0	; () banked
  7594  000432  51AC               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7595  000434  B4D8               	btfsc	status,2,c
  7596  000436  D07A               	goto	i2l330
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;my_i2c.c: 357: ic_ptr->event_count++;
  7600  000438  0100               	movlb	0	; () banked
  7601  00043A  EE20 F00C          	lfsr	2,12
  7602  00043E  0100               	movlb	0	; () banked
  7603  000440  51C5               	movf	_ic_ptr& (0+255),w,b
  7604  000442  26D9               	addwf	fsr2l,f,c
  7605  000444  0100               	movlb	0	; () banked
  7606  000446  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7607  000448  22DA               	addwfc	fsr2h,f,c
  7608  00044A  2ADF               	incf	indf2,f,c
  7609                           
  7610                           ; BSR set to: 0
  7611                           ;my_i2c.c: 358: if (SSPSTATbits.D_A == 1) {
  7612  00044C  AAC7               	btfss	4039,5,c	;volatile
  7613  00044E  D027               	goto	i2l358
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;my_i2c.c: 359: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7617  000450  0100               	movlb	0	; () banked
  7618  000452  EE20 F00A          	lfsr	2,10
  7619  000456  0100               	movlb	0	; () banked
  7620  000458  51C5               	movf	_ic_ptr& (0+255),w,b
  7621  00045A  26D9               	addwf	fsr2l,f,c
  7622  00045C  0100               	movlb	0	; () banked
  7623  00045E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7624  000460  22DA               	addwfc	fsr2h,f,c
  7625  000462  50DF               	movf	indf2,w,c
  7626  000464  0100               	movlb	0	; () banked
  7627  000466  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7628  000468  0100               	movlb	0	; () banked
  7629  00046A  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7630  00046C  0D01               	mullw	1
  7631  00046E  50F3               	movf	prodl,w,c
  7632  000470  0100               	movlb	0	; () banked
  7633  000472  0100               	movlb	0	; () banked
  7634  000474  25C5               	addwf	_ic_ptr& (0+255),w,b
  7635  000476  6ED9               	movwf	fsr2l,c
  7636  000478  50F4               	movf	prodh,w,c
  7637  00047A  0100               	movlb	0	; () banked
  7638  00047C  0100               	movlb	0	; () banked
  7639  00047E  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7640  000480  6EDA               	movwf	fsr2h,c
  7641  000482  0100               	movlb	0	; () banked
  7642  000484  C0A7  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;my_i2c.c: 360: ic_ptr->buflen++;
  7646  000488  0100               	movlb	0	; () banked
  7647  00048A  EE20 F00A          	lfsr	2,10
  7648  00048E  0100               	movlb	0	; () banked
  7649  000490  51C5               	movf	_ic_ptr& (0+255),w,b
  7650  000492  26D9               	addwf	fsr2l,f,c
  7651  000494  0100               	movlb	0	; () banked
  7652  000496  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7653  000498  22DA               	addwfc	fsr2h,f,c
  7654  00049A  2ADF               	incf	indf2,f,c
  7655                           
  7656                           ;my_i2c.c: 361: } else {
  7657  00049C  D047               	goto	i2l330
  7658  00049E                     i2l358:
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;my_i2c.c: 362: if (SSPSTATbits.R_W == 1) {
  7662  00049E  A4C7               	btfss	4039,2,c	;volatile
  7663  0004A0  D6B6               	goto	i2l4031
  7664                           
  7665                           ; BSR set to: 0
  7666                           ;my_i2c.c: 363: ic_ptr->status = 0x8;
  7667  0004A2  0100               	movlb	0	; () banked
  7668  0004A4  EE20 F00D          	lfsr	2,13
  7669  0004A8  0100               	movlb	0	; () banked
  7670  0004AA  51C5               	movf	_ic_ptr& (0+255),w,b
  7671  0004AC  26D9               	addwf	fsr2l,f,c
  7672  0004AE  0100               	movlb	0	; () banked
  7673  0004B0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7674  0004B2  22DA               	addwfc	fsr2h,f,c
  7675  0004B4  0E08               	movlw	8
  7676  0004B6  6EDF               	movwf	indf2,c
  7677                           
  7678                           ; BSR set to: 0
  7679                           ;my_i2c.c: 364: msg_ready = 1;
  7680  0004B8  0100               	movlb	0	; () banked
  7681  0004BA  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7682  0004BC  0E01               	movlw	1
  7683  0004BE  0100               	movlb	0	; () banked
  7684  0004C0  0100               	movlb	0	; () banked
  7685  0004C2  6FAB               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7686  0004C4  0100               	movlb	0	; () banked
  7687  0004C6  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7688  0004C8                     L9:
  7689                           
  7690                           ; BSR set to: 0
  7691                           ;my_i2c.c: 365: msg_to_send = 1;
  7692  0004C8  0100               	movlb	0	; () banked
  7693  0004CA  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7694  0004CC  0E01               	movlw	1
  7695  0004CE  0100               	movlb	0	; () banked
  7696  0004D0  0100               	movlb	0	; () banked
  7697  0004D2  6FA8               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7698  0004D4  0100               	movlb	0	; () banked
  7699  0004D6  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7700                           
  7701                           ; BSR set to: 0
  7702                           ;my_i2c.c: 367: data_read = 0;
  7703  0004D8  0100               	movlb	0	; () banked
  7704  0004DA  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7705  0004DC  0E00               	movlw	0
  7706  0004DE  0100               	movlb	0	; () banked
  7707  0004E0  0100               	movlb	0	; () banked
  7708  0004E2  6FAC               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7709  0004E4                     L6:
  7710  0004E4  0100               	movlb	0	; () banked
  7711  0004E6  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7712                           
  7713                           ;my_i2c.c: 368: } else {
  7714  0004E8  D021               	goto	i2l330
  7715  0004EA                     L8:
  7716                           
  7717                           ;my_i2c.c: 371: ic_ptr->status = 0x5;
  7718  0004EA  0100               	movlb	0	; () banked
  7719  0004EC  EE20 F00D          	lfsr	2,13
  7720  0004F0  0100               	movlb	0	; () banked
  7721  0004F2  51C5               	movf	_ic_ptr& (0+255),w,b
  7722  0004F4  26D9               	addwf	fsr2l,f,c
  7723  0004F6  0100               	movlb	0	; () banked
  7724  0004F8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7725  0004FA  22DA               	addwfc	fsr2h,f,c
  7726  0004FC  0E05               	movlw	5
  7727  0004FE  D731               	goto	L5
  7728  000500                     i2l4101:
  7729                           
  7730                           ; BSR set to: 0
  7731  000500  0100               	movlb	0	; () banked
  7732  000502  EE20 F00D          	lfsr	2,13
  7733  000506  0100               	movlb	0	; () banked
  7734  000508  51C5               	movf	_ic_ptr& (0+255),w,b
  7735  00050A  26D9               	addwf	fsr2l,f,c
  7736  00050C  0100               	movlb	0	; () banked
  7737  00050E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7738  000510  22DA               	addwfc	fsr2h,f,c
  7739  000512  50DF               	movf	indf2,w,c
  7740                           
  7741                           ; Switch size 1, requested type "space"
  7742                           ; Number of cases is 4, Range of values is 5 to 8
  7743                           ; switch strategies available:
  7744                           ; Name         Instructions Cycles
  7745                           ; simple_byte           13     7 (average)
  7746                           ;	Chosen strategy is simple_byte
  7747  000514  0A05               	xorlw	5	; case 5
  7748  000516  B4D8               	btfsc	status,2,c
  7749  000518  D63C               	goto	i2l332
  7750  00051A  0A03               	xorlw	3	; case 6
  7751  00051C  B4D8               	btfsc	status,2,c
  7752  00051E  D65B               	goto	i2l336
  7753  000520  0A01               	xorlw	1	; case 7
  7754  000522  B4D8               	btfsc	status,2,c
  7755  000524  D720               	goto	i2l350
  7756  000526  0A0F               	xorlw	15	; case 8
  7757  000528  B4D8               	btfsc	status,2,c
  7758  00052A  D6D1               	goto	i2l4051
  7759  00052C                     i2l330:
  7760                           
  7761                           ; BSR set to: 0
  7762                           ;my_i2c.c: 378: }
  7763                           ;my_i2c.c: 381: if (data_read || data_written) {
  7764  00052C  0100               	movlb	0	; () banked
  7765  00052E  0100               	movlb	0	; () banked
  7766  000530  67AC               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  7767  000532  D005               	goto	i2l364
  7768                           
  7769                           ; BSR set to: 0
  7770  000534  0100               	movlb	0	; () banked
  7771  000536  0100               	movlb	0	; () banked
  7772  000538  51A5               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  7773  00053A  B4D8               	btfsc	status,2,c
  7774  00053C  D002               	goto	i2l4107
  7775  00053E                     i2l364:
  7776                           
  7777                           ; BSR set to: 0
  7778                           ;my_i2c.c: 383: if (SSPCON1bits.CKP == 0) {
  7779  00053E  A8C6               	btfss	4038,4,c	;volatile
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;my_i2c.c: 384: SSPCON1bits.CKP = 1;
  7783  000540  88C6               	bsf	4038,4,c	;volatile
  7784  000542                     i2l4107:
  7785                           
  7786                           ; BSR set to: 0
  7787                           ;my_i2c.c: 385: }
  7788                           ;my_i2c.c: 386: }
  7789                           ;my_i2c.c: 389: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7790  000542  0100               	movlb	0	; () banked
  7791  000544  EE20 F00A          	lfsr	2,10
  7792  000548  0100               	movlb	0	; () banked
  7793  00054A  51C5               	movf	_ic_ptr& (0+255),w,b
  7794  00054C  26D9               	addwf	fsr2l,f,c
  7795  00054E  0100               	movlb	0	; () banked
  7796  000550  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7797  000552  22DA               	addwfc	fsr2h,f,c
  7798  000554  0E08               	movlw	8
  7799  000556  64DF               	cpfsgt	indf2,c
  7800  000558  D024               	goto	i2l4113
  7801                           
  7802                           ; BSR set to: 0
  7803  00055A  0100               	movlb	0	; () banked
  7804  00055C  0100               	movlb	0	; () banked
  7805  00055E  67AB               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  7806  000560  D020               	goto	i2l4113
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;my_i2c.c: 390: ic_ptr->status = 0x5;
  7810  000562  0100               	movlb	0	; () banked
  7811  000564  EE20 F00D          	lfsr	2,13
  7812  000568  0100               	movlb	0	; () banked
  7813  00056A  51C5               	movf	_ic_ptr& (0+255),w,b
  7814  00056C  26D9               	addwf	fsr2l,f,c
  7815  00056E  0100               	movlb	0	; () banked
  7816  000570  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7817  000572  22DA               	addwfc	fsr2h,f,c
  7818  000574  0E05               	movlw	5
  7819  000576  6EDF               	movwf	indf2,c
  7820                           
  7821                           ;my_i2c.c: 391: ic_ptr->error_count++;
  7822  000578  0100               	movlb	0	; () banked
  7823  00057A  EE20 F00F          	lfsr	2,15
  7824  00057E  0100               	movlb	0	; () banked
  7825  000580  51C5               	movf	_ic_ptr& (0+255),w,b
  7826  000582  26D9               	addwf	fsr2l,f,c
  7827  000584  0100               	movlb	0	; () banked
  7828  000586  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7829  000588  22DA               	addwfc	fsr2h,f,c
  7830  00058A  2ADF               	incf	indf2,f,c
  7831                           
  7832                           ;my_i2c.c: 392: ic_ptr->error_code = 0x7;
  7833  00058C  0100               	movlb	0	; () banked
  7834  00058E  EE20 F00E          	lfsr	2,14
  7835  000592  0100               	movlb	0	; () banked
  7836  000594  51C5               	movf	_ic_ptr& (0+255),w,b
  7837  000596  26D9               	addwf	fsr2l,f,c
  7838  000598  0100               	movlb	0	; () banked
  7839  00059A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7840  00059C  22DA               	addwfc	fsr2h,f,c
  7841  00059E  0E07               	movlw	7
  7842  0005A0  6EDF               	movwf	indf2,c
  7843  0005A2                     i2l4113:
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;my_i2c.c: 393: }
  7847                           ;my_i2c.c: 395: if (msg_ready) {
  7848  0005A2  0100               	movlb	0	; () banked
  7849  0005A4  0100               	movlb	0	; () banked
  7850  0005A6  51AB               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  7851  0005A8  B4D8               	btfsc	status,2,c
  7852  0005AA  D048               	goto	i2l4121
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;my_i2c.c: 396: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7856  0005AC  0100               	movlb	0	; () banked
  7857  0005AE  EE20 F00C          	lfsr	2,12
  7858  0005B2  0100               	movlb	0	; () banked
  7859  0005B4  51C5               	movf	_ic_ptr& (0+255),w,b
  7860  0005B6  26D9               	addwf	fsr2l,f,c
  7861  0005B8  0100               	movlb	0	; () banked
  7862  0005BA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7863  0005BC  22DA               	addwfc	fsr2h,f,c
  7864  0005BE  0100               	movlb	0	; () banked
  7865  0005C0  EE10 F00A          	lfsr	1,10
  7866  0005C4  0100               	movlb	0	; () banked
  7867  0005C6  51C5               	movf	_ic_ptr& (0+255),w,b
  7868  0005C8  26E1               	addwf	fsr1l,f,c
  7869  0005CA  0100               	movlb	0	; () banked
  7870  0005CC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7871  0005CE  22E2               	addwfc	fsr1h,f,c
  7872  0005D0  50E7               	movf	indf1,w,c
  7873  0005D2  0100               	movlb	0	; () banked
  7874  0005D4  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7875  0005D6  0100               	movlb	0	; () banked
  7876  0005D8  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7877  0005DA  0D01               	mullw	1
  7878  0005DC  50F3               	movf	prodl,w,c
  7879  0005DE  0100               	movlb	0	; () banked
  7880  0005E0  0100               	movlb	0	; () banked
  7881  0005E2  25C5               	addwf	_ic_ptr& (0+255),w,b
  7882  0005E4  6EE1               	movwf	fsr1l,c
  7883  0005E6  50F4               	movf	prodh,w,c
  7884  0005E8  0100               	movlb	0	; () banked
  7885  0005EA  0100               	movlb	0	; () banked
  7886  0005EC  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7887  0005EE  6EE2               	movwf	fsr1h,c
  7888  0005F0  CFDF FFE7          	movff	indf2,indf1
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;my_i2c.c: 397: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7892  0005F4  0100               	movlb	0	; () banked
  7893  0005F6  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7894  0005F8  0E28               	movlw	40
  7895  0005FA  0100               	movlb	0	; () banked
  7896  0005FC  0100               	movlb	0	; () banked
  7897  0005FE  6F92               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7898  000600  0100               	movlb	0	; () banked
  7899  000602  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7900  000604  0100               	movlb	0	; () banked
  7901  000606  0100               	movlb	0	; () banked
  7902  000608  C0C6  F094         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7903  00060C  0100               	movlb	0	; () banked
  7904  00060E  0100               	movlb	0	; () banked
  7905  000610  C0C5  F093         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7906  000614  0100               	movlb	0	; () banked
  7907  000616  EE20 F00A          	lfsr	2,10
  7908  00061A  0100               	movlb	0	; () banked
  7909  00061C  51C5               	movf	_ic_ptr& (0+255),w,b
  7910  00061E  26D9               	addwf	fsr2l,f,c
  7911  000620  0100               	movlb	0	; () banked
  7912  000622  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7913  000624  22DA               	addwfc	fsr2h,f,c
  7914  000626  50DF               	movf	indf2,w,c
  7915  000628  0100               	movlb	0	; () banked
  7916  00062A  6F97               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  7917  00062C  0100               	movlb	0	; () banked
  7918  00062E  2997               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  7919  000630  ECE8  F00E         	call	_ToMainHigh_sendmsg
  7920                           
  7921                           ;my_i2c.c: 398: ic_ptr->buflen = 0;
  7922  000634  0100               	movlb	0	; () banked
  7923  000636  EE20 F00A          	lfsr	2,10
  7924  00063A  D04B               	goto	L7
  7925  00063C                     i2l4121:
  7926                           
  7927                           ; BSR set to: 0
  7928  00063C  0100               	movlb	0	; () banked
  7929  00063E  EE20 F00F          	lfsr	2,15
  7930  000642  0100               	movlb	0	; () banked
  7931  000644  51C5               	movf	_ic_ptr& (0+255),w,b
  7932  000646  26D9               	addwf	fsr2l,f,c
  7933  000648  0100               	movlb	0	; () banked
  7934  00064A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7935  00064C  22DA               	addwfc	fsr2h,f,c
  7936  00064E  50DF               	movf	indf2,w,c
  7937  000650  B4D8               	btfsc	status,2,c
  7938  000652  D047               	goto	i2l4129
  7939                           
  7940                           ; BSR set to: 0
  7941                           ;my_i2c.c: 400: error_buf[0] = ic_ptr->error_count;
  7942  000654  0100               	movlb	0	; () banked
  7943  000656  EE20 F00F          	lfsr	2,15
  7944  00065A  0100               	movlb	0	; () banked
  7945  00065C  51C5               	movf	_ic_ptr& (0+255),w,b
  7946  00065E  26D9               	addwf	fsr2l,f,c
  7947  000660  0100               	movlb	0	; () banked
  7948  000662  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7949  000664  22DA               	addwfc	fsr2h,f,c
  7950  000666  50DF               	movf	indf2,w,c
  7951  000668  0100               	movlb	0	; () banked
  7952  00066A  0100               	movlb	0	; () banked
  7953  00066C  6FA2               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  7954                           
  7955                           ;my_i2c.c: 401: error_buf[1] = ic_ptr->error_code;
  7956  00066E  0100               	movlb	0	; () banked
  7957  000670  EE20 F00E          	lfsr	2,14
  7958  000674  0100               	movlb	0	; () banked
  7959  000676  51C5               	movf	_ic_ptr& (0+255),w,b
  7960  000678  26D9               	addwf	fsr2l,f,c
  7961  00067A  0100               	movlb	0	; () banked
  7962  00067C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7963  00067E  22DA               	addwfc	fsr2h,f,c
  7964  000680  50DF               	movf	indf2,w,c
  7965  000682  0100               	movlb	0	; () banked
  7966  000684  0100               	movlb	0	; () banked
  7967  000686  6FA3               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  7968                           
  7969                           ;my_i2c.c: 402: error_buf[2] = ic_ptr->event_count;
  7970  000688  0100               	movlb	0	; () banked
  7971  00068A  EE20 F00C          	lfsr	2,12
  7972  00068E  0100               	movlb	0	; () banked
  7973  000690  51C5               	movf	_ic_ptr& (0+255),w,b
  7974  000692  26D9               	addwf	fsr2l,f,c
  7975  000694  0100               	movlb	0	; () banked
  7976  000696  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  7977  000698  22DA               	addwfc	fsr2h,f,c
  7978  00069A  50DF               	movf	indf2,w,c
  7979  00069C  0100               	movlb	0	; () banked
  7980  00069E  0100               	movlb	0	; () banked
  7981  0006A0  6FA4               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  7982                           
  7983                           ; BSR set to: 0
  7984                           ;my_i2c.c: 403: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7985  0006A2  0100               	movlb	0	; () banked
  7986  0006A4  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7987  0006A6  0E29               	movlw	41
  7988  0006A8  0100               	movlb	0	; () banked
  7989  0006AA  0100               	movlb	0	; () banked
  7990  0006AC  6F92               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7991  0006AE  0100               	movlb	0	; () banked
  7992  0006B0  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7993  0006B2  0100               	movlb	0	; () banked
  7994  0006B4  0E00               	movlw	high i2c_slave_int_handler@error_buf
  7995  0006B6  0100               	movlb	0	; () banked
  7996  0006B8  0100               	movlb	0	; () banked
  7997  0006BA  6F94               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7998  0006BC  0100               	movlb	0	; () banked
  7999  0006BE  0EA2               	movlw	low i2c_slave_int_handler@error_buf
  8000  0006C0  0100               	movlb	0	; () banked
  8001  0006C2  0100               	movlb	0	; () banked
  8002  0006C4  6F93               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8003  0006C6  0E03               	movlw	3
  8004  0006C8  ECE8  F00E         	call	_ToMainHigh_sendmsg
  8005                           
  8006                           ;my_i2c.c: 404: ic_ptr->error_count = 0;
  8007  0006CC  0100               	movlb	0	; () banked
  8008  0006CE  EE20 F00F          	lfsr	2,15
  8009  0006D2                     L7:
  8010  0006D2  0100               	movlb	0	; () banked
  8011  0006D4  51C5               	movf	_ic_ptr& (0+255),w,b
  8012  0006D6  26D9               	addwf	fsr2l,f,c
  8013  0006D8  0100               	movlb	0	; () banked
  8014  0006DA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8015  0006DC  22DA               	addwfc	fsr2h,f,c
  8016  0006DE  0E00               	movlw	0
  8017  0006E0  6EDF               	movwf	indf2,c
  8018  0006E2                     i2l4129:
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;my_i2c.c: 405: }
  8022                           ;my_i2c.c: 406: if (msg_to_send) {
  8023  0006E2  0100               	movlb	0	; () banked
  8024  0006E4  0100               	movlb	0	; () banked
  8025  0006E6  51A8               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  8026  0006E8  B4D8               	btfsc	status,2,c
  8027  0006EA  0012               	return	
  8028                           
  8029                           ; BSR set to: 0
  8030                           ;my_i2c.c: 407: int length = 0;
  8031  0006EC  0E00               	movlw	0
  8032  0006EE  0100               	movlb	0	; () banked
  8033  0006F0  0100               	movlb	0	; () banked
  8034  0006F2  6FAA               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  8035  0006F4  0E00               	movlw	0
  8036  0006F6  0100               	movlb	0	; () banked
  8037  0006F8  6FA9               	movwf	i2c_slave_int_handler@length& (0+255),b
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;my_i2c.c: 411: if(ic_ptr->buffer[0] == 0xAA){
  8041  0006FA  0EAA               	movlw	170
  8042  0006FC  C0C5  FFD9         	movff	_ic_ptr,fsr2l
  8043  000700  C0C6  FFDA         	movff	_ic_ptr+1,fsr2h
  8044  000704  62DF               	cpfseq	indf2,c
  8045  000706  D01C               	goto	i2l4141
  8046                           
  8047                           ; BSR set to: 0
  8048                           ;my_i2c.c: 412: length = 5;
  8049  000708  0E00               	movlw	0
  8050  00070A  0100               	movlb	0	; () banked
  8051  00070C  0100               	movlb	0	; () banked
  8052  00070E  6FAA               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  8053  000710  0E05               	movlw	5
  8054  000712  0100               	movlb	0	; () banked
  8055  000714  6FA9               	movwf	i2c_slave_int_handler@length& (0+255),b
  8056                           
  8057                           ; BSR set to: 0
  8058                           ;my_i2c.c: 414: unsigned char sensormsg[5] = {0x01, 0x01, 0x02, 0x03, ((0x01 + 0x02 + 0x
      +                          03) & 0x17)};
  8059  000716  EE20  F0BB         	lfsr	2,i2c_slave_int_handler@F5128
  8060  00071A  EE10  F098         	lfsr	1,i2c_slave_int_handler@sensormsg
  8061  00071E  0E05               	movlw	5
  8062  000720                     i2u333_41:
  8063  000720  CFDE FFE6          	movff	postinc2,postinc1
  8064  000724  2EE8               	decfsz	wreg,f,c
  8065  000726  D7FC               	goto	i2u333_41
  8066                           
  8067                           ; BSR set to: 0
  8068                           ;my_i2c.c: 415: start_i2c_slave_reply(length, sensormsg);
  8069  000728  0100               	movlb	0	; () banked
  8070  00072A  0E00               	movlw	high i2c_slave_int_handler@sensormsg
  8071  00072C  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  8072  00072E  0100               	movlb	0	; () banked
  8073  000730  0E98               	movlw	low i2c_slave_int_handler@sensormsg
  8074  000732  6E2D               	movwf	start_i2c_slave_reply@msg,c
  8075  000734  0100               	movlb	0	; () banked
  8076  000736  0100               	movlb	0	; () banked
  8077  000738  51A9               	movf	i2c_slave_int_handler@length& (0+255),w,b
  8078  00073A  EC39  F008         	call	_start_i2c_slave_reply
  8079                           
  8080                           ;my_i2c.c: 417: } else if(ic_ptr->buffer[0] == 0xBA){
  8081  00073E  D022               	goto	i2l4149
  8082  000740                     i2l4141:
  8083  000740  0EBA               	movlw	186
  8084  000742  C0C5  FFD9         	movff	_ic_ptr,fsr2l
  8085  000746  C0C6  FFDA         	movff	_ic_ptr+1,fsr2h
  8086  00074A  62DF               	cpfseq	indf2,c
  8087  00074C  D01B               	goto	i2l4149
  8088                           
  8089                           ;my_i2c.c: 419: length = 5;
  8090  00074E  0E00               	movlw	0
  8091  000750  0100               	movlb	0	; () banked
  8092  000752  0100               	movlb	0	; () banked
  8093  000754  6FAA               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  8094  000756  0E05               	movlw	5
  8095  000758  0100               	movlb	0	; () banked
  8096  00075A  6FA9               	movwf	i2c_slave_int_handler@length& (0+255),b
  8097                           
  8098                           ; BSR set to: 0
  8099                           ;my_i2c.c: 421: unsigned char motormsg[5] = {0x03, 0x04, ((0x04) & 0x17), 0x00, 0x00};
  8100  00075C  EE20  F0C0         	lfsr	2,i2c_slave_int_handler@F5130
  8101  000760  EE10  F09D         	lfsr	1,i2c_slave_int_handler@motormsg
  8102  000764  0E05               	movlw	5
  8103  000766                     i2u335_41:
  8104  000766  CFDE FFE6          	movff	postinc2,postinc1
  8105  00076A  2EE8               	decfsz	wreg,f,c
  8106  00076C  D7FC               	goto	i2u335_41
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;my_i2c.c: 422: start_i2c_slave_reply(length, motormsg);
  8110  00076E  0100               	movlb	0	; () banked
  8111  000770  0E00               	movlw	high i2c_slave_int_handler@motormsg
  8112  000772  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  8113  000774  0100               	movlb	0	; () banked
  8114  000776  0E9D               	movlw	low i2c_slave_int_handler@motormsg
  8115  000778  6E2D               	movwf	start_i2c_slave_reply@msg,c
  8116  00077A  0100               	movlb	0	; () banked
  8117  00077C  0100               	movlb	0	; () banked
  8118  00077E  51A9               	movf	i2c_slave_int_handler@length& (0+255),w,b
  8119  000780  EC39  F008         	call	_start_i2c_slave_reply
  8120  000784                     i2l4149:
  8121                           
  8122                           ;my_i2c.c: 423: }
  8123                           ;my_i2c.c: 424: msg_to_send = 0;
  8124  000784  0100               	movlb	0	; () banked
  8125  000786  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  8126  000788  0E00               	movlw	0
  8127  00078A  0100               	movlb	0	; () banked
  8128  00078C  0100               	movlb	0	; () banked
  8129  00078E  6FA8               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  8130  000790  0100               	movlb	0	; () banked
  8131  000792  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8132  000794  0012               	return	
  8133  000796                     __end_of_i2c_slave_int_handler:
  8134                           	opt stack 0
  8135                           pclatu	equ	0xFFB
  8136                           pclath	equ	0xFFA
  8137                           tblptru	equ	0xFF8
  8138                           tblptrh	equ	0xFF7
  8139                           tblptrl	equ	0xFF6
  8140                           tablat	equ	0xFF5
  8141                           prodh	equ	0xFF4
  8142                           prodl	equ	0xFF3
  8143                           intcon	equ	0xFF2
  8144                           postinc0	equ	0xFEE
  8145                           fsr0h	equ	0xFEA
  8146                           fsr0l	equ	0xFE9
  8147                           wreg	equ	0xFE8
  8148                           indf1	equ	0xFE7
  8149                           postinc1	equ	0xFE6
  8150                           postdec1	equ	0xFE5
  8151                           fsr1h	equ	0xFE2
  8152                           fsr1l	equ	0xFE1
  8153                           bsr	equ	0xFE0
  8154                           indf2	equ	0xFDF
  8155                           postinc2	equ	0xFDE
  8156                           postdec2	equ	0xFDD
  8157                           fsr2h	equ	0xFDA
  8158                           fsr2l	equ	0xFD9
  8159                           status	equ	0xFD8
  8160                           
  8161 ;; *************** function _start_i2c_slave_reply *****************
  8162 ;; Defined at:
  8163 ;;		line 92 in file "../src/my_i2c.c"
  8164 ;; Parameters:    Size  Location     Type
  8165 ;;  length          1    wreg     unsigned char 
  8166 ;;  msg             2   44[COMRAM] PTR unsigned char 
  8167 ;;		 -> i2c_slave_int_handler@motormsg(5), i2c_slave_int_handler@sensormsg(5), 
  8168 ;; Auto vars:     Size  Location     Type
  8169 ;;  length          1   48[COMRAM] unsigned char 
  8170 ;; Return value:  Size  Location     Type
  8171 ;;		None               void
  8172 ;; Registers used:
  8173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8174 ;; Tracked objects:
  8175 ;;		On entry : 0/0
  8176 ;;		On exit  : 0/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8179 ;;      Params:         2       0       0       0       0
  8180 ;;      Locals:         1       0       0       0       0
  8181 ;;      Temps:          2       0       0       0       0
  8182 ;;      Totals:         5       0       0       0       0
  8183 ;;Total ram usage:        5 bytes
  8184 ;; Hardware stack levels used:    1
  8185 ;; This function calls:
  8186 ;;		Nothing
  8187 ;; This function is called by:
  8188 ;;		_i2c_slave_int_handler
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           	psect	text47
  8193  001072                     __ptext47:
  8194                           	opt stack 0
  8195  001072                     _start_i2c_slave_reply:
  8196                           	opt stack 18
  8197                           
  8198                           ; BSR set to: 0
  8199                           ;incstack = 0
  8200                           ;start_i2c_slave_reply@length stored from wreg
  8201  001072  CFE8 F031          	movff	wreg,start_i2c_slave_reply@length
  8202                           
  8203                           ;my_i2c.c: 94: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  8204  001076  0100               	movlb	0	; () banked
  8205  001078  EE20 F01A          	lfsr	2,26
  8206  00107C  0100               	movlb	0	; () banked
  8207  00107E  51C5               	movf	_ic_ptr& (0+255),w,b
  8208  001080  26D9               	addwf	fsr2l,f,c
  8209  001082  0100               	movlb	0	; () banked
  8210  001084  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8211  001086  22DA               	addwfc	fsr2h,f,c
  8212  001088  0E00               	movlw	0
  8213  00108A  6EDF               	movwf	indf2,c
  8214  00108C  D03A               	goto	i2l2995
  8215  00108E                     i2l2991:
  8216                           
  8217                           ; BSR set to: 0
  8218                           ;my_i2c.c: 95: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  8219  00108E  0100               	movlb	0	; () banked
  8220  001090  EE20 F01A          	lfsr	2,26
  8221  001094  0100               	movlb	0	; () banked
  8222  001096  51C5               	movf	_ic_ptr& (0+255),w,b
  8223  001098  26D9               	addwf	fsr2l,f,c
  8224  00109A  0100               	movlb	0	; () banked
  8225  00109C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8226  00109E  22DA               	addwfc	fsr2h,f,c
  8227  0010A0  50DF               	movf	indf2,w,c
  8228  0010A2  6E2F               	movwf	??_start_i2c_slave_reply& (0+255),c
  8229  0010A4  502F               	movf	??_start_i2c_slave_reply,w,c
  8230  0010A6  0D01               	mullw	1
  8231  0010A8  50F3               	movf	prodl,w,c
  8232  0010AA  242D               	addwf	start_i2c_slave_reply@msg,w,c
  8233  0010AC  6ED9               	movwf	fsr2l,c
  8234  0010AE  50F4               	movf	prodh,w,c
  8235  0010B0  202E               	addwfc	start_i2c_slave_reply@msg+1,w,c
  8236  0010B2  6EDA               	movwf	fsr2h,c
  8237  0010B4  0100               	movlb	0	; () banked
  8238  0010B6  EE10 F01A          	lfsr	1,26
  8239  0010BA  0100               	movlb	0	; () banked
  8240  0010BC  51C5               	movf	_ic_ptr& (0+255),w,b
  8241  0010BE  26E1               	addwf	fsr1l,f,c
  8242  0010C0  0100               	movlb	0	; () banked
  8243  0010C2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8244  0010C4  22E2               	addwfc	fsr1h,f,c
  8245  0010C6  50E7               	movf	indf1,w,c
  8246  0010C8  6E30               	movwf	(??_start_i2c_slave_reply+1)& (0+255),c
  8247  0010CA  5030               	movf	??_start_i2c_slave_reply+1,w,c
  8248  0010CC  0D01               	mullw	1
  8249  0010CE  0E10               	movlw	16
  8250  0010D0  26F3               	addwf	prodl,f,c
  8251  0010D2  0E00               	movlw	0
  8252  0010D4  22F4               	addwfc	prodh,f,c
  8253  0010D6  50F3               	movf	prodl,w,c
  8254  0010D8  0100               	movlb	0	; () banked
  8255  0010DA  0100               	movlb	0	; () banked
  8256  0010DC  25C5               	addwf	_ic_ptr& (0+255),w,b
  8257  0010DE  6EE1               	movwf	fsr1l,c
  8258  0010E0  50F4               	movf	prodh,w,c
  8259  0010E2  0100               	movlb	0	; () banked
  8260  0010E4  0100               	movlb	0	; () banked
  8261  0010E6  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8262  0010E8  6EE2               	movwf	fsr1h,c
  8263  0010EA  CFDF FFE7          	movff	indf2,indf1
  8264                           
  8265                           ; BSR set to: 0
  8266  0010EE  0100               	movlb	0	; () banked
  8267  0010F0  EE20 F01A          	lfsr	2,26
  8268  0010F4  0100               	movlb	0	; () banked
  8269  0010F6  51C5               	movf	_ic_ptr& (0+255),w,b
  8270  0010F8  26D9               	addwf	fsr2l,f,c
  8271  0010FA  0100               	movlb	0	; () banked
  8272  0010FC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8273  0010FE  22DA               	addwfc	fsr2h,f,c
  8274  001100  2ADF               	incf	indf2,f,c
  8275  001102                     i2l2995:
  8276                           
  8277                           ; BSR set to: 0
  8278  001102  0100               	movlb	0	; () banked
  8279  001104  EE20 F01A          	lfsr	2,26
  8280  001108  0100               	movlb	0	; () banked
  8281  00110A  51C5               	movf	_ic_ptr& (0+255),w,b
  8282  00110C  26D9               	addwf	fsr2l,f,c
  8283  00110E  0100               	movlb	0	; () banked
  8284  001110  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8285  001112  22DA               	addwfc	fsr2h,f,c
  8286  001114  50DF               	movf	indf2,w,c
  8287  001116  6E2F               	movwf	??_start_i2c_slave_reply& (0+255),c
  8288  001118  5031               	movf	start_i2c_slave_reply@length,w,c
  8289  00111A  5C2F               	subwf	??_start_i2c_slave_reply,w,c
  8290  00111C  A0D8               	btfss	status,0,c
  8291  00111E  D7B7               	goto	i2l2991
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;my_i2c.c: 96: }
  8295                           ;my_i2c.c: 97: ic_ptr->outbuflen = length;
  8296                           
  8297                           ; BSR set to: 0
  8298  001120  0100               	movlb	0	; () banked
  8299  001122  EE20 F01A          	lfsr	2,26
  8300  001126  0100               	movlb	0	; () banked
  8301  001128  51C5               	movf	_ic_ptr& (0+255),w,b
  8302  00112A  26D9               	addwf	fsr2l,f,c
  8303  00112C  0100               	movlb	0	; () banked
  8304  00112E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8305  001130  22DA               	addwfc	fsr2h,f,c
  8306  001132  C031  FFDF         	movff	start_i2c_slave_reply@length,indf2
  8307                           
  8308                           ;my_i2c.c: 98: ic_ptr->outbufind = 1;
  8309  001136  0100               	movlb	0	; () banked
  8310  001138  EE20 F01B          	lfsr	2,27
  8311  00113C  0100               	movlb	0	; () banked
  8312  00113E  51C5               	movf	_ic_ptr& (0+255),w,b
  8313  001140  26D9               	addwf	fsr2l,f,c
  8314  001142  0100               	movlb	0	; () banked
  8315  001144  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8316  001146  22DA               	addwfc	fsr2h,f,c
  8317  001148  0E01               	movlw	1
  8318  00114A  6EDF               	movwf	indf2,c
  8319                           
  8320                           ;my_i2c.c: 101: SSPBUF = ic_ptr->outbuffer[0];
  8321  00114C  0100               	movlb	0	; () banked
  8322  00114E  EE20 F010          	lfsr	2,16
  8323  001152  0100               	movlb	0	; () banked
  8324  001154  51C5               	movf	_ic_ptr& (0+255),w,b
  8325  001156  26D9               	addwf	fsr2l,f,c
  8326  001158  0100               	movlb	0	; () banked
  8327  00115A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8328  00115C  22DA               	addwfc	fsr2h,f,c
  8329  00115E  50DF               	movf	indf2,w,c
  8330  001160  6EC9               	movwf	4041,c	;volatile
  8331                           
  8332                           ; BSR set to: 0
  8333                           ;my_i2c.c: 104: SSPCON1bits.CKP = 1;
  8334  001162  88C6               	bsf	4038,4,c	;volatile
  8335                           
  8336                           ; BSR set to: 0
  8337  001164  0012               	return	
  8338  001166                     __end_of_start_i2c_slave_reply:
  8339                           	opt stack 0
  8340                           pclatu	equ	0xFFB
  8341                           pclath	equ	0xFFA
  8342                           tblptru	equ	0xFF8
  8343                           tblptrh	equ	0xFF7
  8344                           tblptrl	equ	0xFF6
  8345                           tablat	equ	0xFF5
  8346                           prodh	equ	0xFF4
  8347                           prodl	equ	0xFF3
  8348                           intcon	equ	0xFF2
  8349                           postinc0	equ	0xFEE
  8350                           fsr0h	equ	0xFEA
  8351                           fsr0l	equ	0xFE9
  8352                           wreg	equ	0xFE8
  8353                           indf1	equ	0xFE7
  8354                           postinc1	equ	0xFE6
  8355                           postdec1	equ	0xFE5
  8356                           fsr1h	equ	0xFE2
  8357                           fsr1l	equ	0xFE1
  8358                           bsr	equ	0xFE0
  8359                           indf2	equ	0xFDF
  8360                           postinc2	equ	0xFDE
  8361                           postdec2	equ	0xFDD
  8362                           fsr2h	equ	0xFDA
  8363                           fsr2l	equ	0xFD9
  8364                           status	equ	0xFD8
  8365                           
  8366 ;; *************** function _handle_start *****************
  8367 ;; Defined at:
  8368 ;;		line 110 in file "../src/my_i2c.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;  data_read       1    wreg     unsigned char 
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;  data_read       1   44[COMRAM] unsigned char 
  8373 ;; Return value:  Size  Location     Type
  8374 ;;		None               void
  8375 ;; Registers used:
  8376 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8377 ;; Tracked objects:
  8378 ;;		On entry : 0/0
  8379 ;;		On exit  : 0/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8382 ;;      Params:         0       0       0       0       0
  8383 ;;      Locals:         1       0       0       0       0
  8384 ;;      Temps:          0       0       0       0       0
  8385 ;;      Totals:         1       0       0       0       0
  8386 ;;Total ram usage:        1 bytes
  8387 ;; Hardware stack levels used:    1
  8388 ;; This function calls:
  8389 ;;		Nothing
  8390 ;; This function is called by:
  8391 ;;		_i2c_slave_int_handler
  8392 ;; This function uses a non-reentrant model
  8393 ;;
  8394                           
  8395                           	psect	text48
  8396  001166                     __ptext48:
  8397                           	opt stack 0
  8398  001166                     _handle_start:
  8399                           	opt stack 18
  8400                           
  8401                           ; BSR set to: 0
  8402                           ;incstack = 0
  8403                           ;handle_start@data_read stored from wreg
  8404  001166  CFE8 F02D          	movff	wreg,handle_start@data_read
  8405                           
  8406                           ;my_i2c.c: 111: ic_ptr->event_count = 1;
  8407  00116A  0100               	movlb	0	; () banked
  8408  00116C  EE20 F00C          	lfsr	2,12
  8409  001170  0100               	movlb	0	; () banked
  8410  001172  51C5               	movf	_ic_ptr& (0+255),w,b
  8411  001174  26D9               	addwf	fsr2l,f,c
  8412  001176  0100               	movlb	0	; () banked
  8413  001178  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8414  00117A  22DA               	addwfc	fsr2h,f,c
  8415  00117C  0E01               	movlw	1
  8416  00117E  6EDF               	movwf	indf2,c
  8417                           
  8418                           ;my_i2c.c: 112: ic_ptr->buflen = 0;
  8419  001180  0100               	movlb	0	; () banked
  8420  001182  EE20 F00A          	lfsr	2,10
  8421  001186  0100               	movlb	0	; () banked
  8422  001188  51C5               	movf	_ic_ptr& (0+255),w,b
  8423  00118A  26D9               	addwf	fsr2l,f,c
  8424  00118C  0100               	movlb	0	; () banked
  8425  00118E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8426  001190  22DA               	addwfc	fsr2h,f,c
  8427  001192  0E00               	movlw	0
  8428  001194  6EDF               	movwf	indf2,c
  8429                           
  8430                           ; BSR set to: 0
  8431                           ;my_i2c.c: 114: if (data_read) {
  8432  001196  502D               	movf	handle_start@data_read,w,c
  8433  001198  B4D8               	btfsc	status,2,c
  8434  00119A  D03D               	goto	i2l3013
  8435                           
  8436                           ; BSR set to: 0
  8437                           ;my_i2c.c: 115: if (SSPSTATbits.D_A == 1) {
  8438  00119C  AAC7               	btfss	4039,5,c	;volatile
  8439  00119E  D021               	goto	i2l293
  8440                           
  8441                           ; BSR set to: 0
  8442                           ;my_i2c.c: 118: ic_ptr->status = 0x5;
  8443  0011A0  0100               	movlb	0	; () banked
  8444  0011A2  EE20 F00D          	lfsr	2,13
  8445  0011A6  0100               	movlb	0	; () banked
  8446  0011A8  51C5               	movf	_ic_ptr& (0+255),w,b
  8447  0011AA  26D9               	addwf	fsr2l,f,c
  8448  0011AC  0100               	movlb	0	; () banked
  8449  0011AE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8450  0011B0  22DA               	addwfc	fsr2h,f,c
  8451  0011B2  0E05               	movlw	5
  8452  0011B4  6EDF               	movwf	indf2,c
  8453                           
  8454                           ;my_i2c.c: 119: ic_ptr->error_count++;
  8455  0011B6  0100               	movlb	0	; () banked
  8456  0011B8  EE20 F00F          	lfsr	2,15
  8457  0011BC  0100               	movlb	0	; () banked
  8458  0011BE  51C5               	movf	_ic_ptr& (0+255),w,b
  8459  0011C0  26D9               	addwf	fsr2l,f,c
  8460  0011C2  0100               	movlb	0	; () banked
  8461  0011C4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8462  0011C6  22DA               	addwfc	fsr2h,f,c
  8463  0011C8  2ADF               	incf	indf2,f,c
  8464                           
  8465                           ;my_i2c.c: 120: ic_ptr->error_code = 0x5;
  8466  0011CA  0100               	movlb	0	; () banked
  8467  0011CC  EE20 F00E          	lfsr	2,14
  8468  0011D0  0100               	movlb	0	; () banked
  8469  0011D2  51C5               	movf	_ic_ptr& (0+255),w,b
  8470  0011D4  26D9               	addwf	fsr2l,f,c
  8471  0011D6  0100               	movlb	0	; () banked
  8472  0011D8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8473  0011DA  22DA               	addwfc	fsr2h,f,c
  8474  0011DC  0E05               	movlw	5
  8475  0011DE  6EDF               	movwf	indf2,c
  8476                           
  8477                           ;my_i2c.c: 121: } else {
  8478  0011E0  0012               	return	
  8479  0011E2                     i2l293:
  8480                           
  8481                           ; BSR set to: 0
  8482                           ;my_i2c.c: 122: if (SSPSTATbits.R_W == 1) {
  8483  0011E2  A4C7               	btfss	4039,2,c	;volatile
  8484  0011E4  D00C               	goto	i2l3011
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;my_i2c.c: 123: ic_ptr->status = 0x8;
  8488  0011E6  0100               	movlb	0	; () banked
  8489  0011E8  EE20 F00D          	lfsr	2,13
  8490  0011EC  0100               	movlb	0	; () banked
  8491  0011EE  51C5               	movf	_ic_ptr& (0+255),w,b
  8492  0011F0  26D9               	addwf	fsr2l,f,c
  8493  0011F2  0100               	movlb	0	; () banked
  8494  0011F4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8495  0011F6  22DA               	addwfc	fsr2h,f,c
  8496  0011F8  0E08               	movlw	8
  8497  0011FA  6EDF               	movwf	indf2,c
  8498                           
  8499                           ;my_i2c.c: 124: } else {
  8500  0011FC  0012               	return	
  8501  0011FE                     i2l3011:
  8502                           
  8503                           ; BSR set to: 0
  8504                           ;my_i2c.c: 125: ic_ptr->status = 0x7;
  8505  0011FE  0100               	movlb	0	; () banked
  8506  001200  EE20 F00D          	lfsr	2,13
  8507  001204  0100               	movlb	0	; () banked
  8508  001206  51C5               	movf	_ic_ptr& (0+255),w,b
  8509  001208  26D9               	addwf	fsr2l,f,c
  8510  00120A  0100               	movlb	0	; () banked
  8511  00120C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8512  00120E  22DA               	addwfc	fsr2h,f,c
  8513  001210  0E07               	movlw	7
  8514  001212  6EDF               	movwf	indf2,c
  8515  001214  0012               	return	
  8516  001216                     i2l3013:
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;my_i2c.c: 129: ic_ptr->status = 0x6;
  8520  001216  0100               	movlb	0	; () banked
  8521  001218  EE20 F00D          	lfsr	2,13
  8522  00121C  0100               	movlb	0	; () banked
  8523  00121E  51C5               	movf	_ic_ptr& (0+255),w,b
  8524  001220  26D9               	addwf	fsr2l,f,c
  8525  001222  0100               	movlb	0	; () banked
  8526  001224  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  8527  001226  22DA               	addwfc	fsr2h,f,c
  8528  001228  0E06               	movlw	6
  8529  00122A  6EDF               	movwf	indf2,c
  8530  00122C  0012               	return	
  8531  00122E                     __end_of_handle_start:
  8532                           	opt stack 0
  8533                           pclatu	equ	0xFFB
  8534                           pclath	equ	0xFFA
  8535                           tblptru	equ	0xFF8
  8536                           tblptrh	equ	0xFF7
  8537                           tblptrl	equ	0xFF6
  8538                           tablat	equ	0xFF5
  8539                           prodh	equ	0xFF4
  8540                           prodl	equ	0xFF3
  8541                           intcon	equ	0xFF2
  8542                           postinc0	equ	0xFEE
  8543                           fsr0h	equ	0xFEA
  8544                           fsr0l	equ	0xFE9
  8545                           wreg	equ	0xFE8
  8546                           indf1	equ	0xFE7
  8547                           postinc1	equ	0xFE6
  8548                           postdec1	equ	0xFE5
  8549                           fsr1h	equ	0xFE2
  8550                           fsr1l	equ	0xFE1
  8551                           bsr	equ	0xFE0
  8552                           indf2	equ	0xFDF
  8553                           postinc2	equ	0xFDE
  8554                           postdec2	equ	0xFDD
  8555                           fsr2h	equ	0xFDA
  8556                           fsr2l	equ	0xFD9
  8557                           status	equ	0xFD8
  8558                           
  8559 ;; *************** function _ToMainHigh_sendmsg *****************
  8560 ;; Defined at:
  8561 ;;		line 126 in file "../src/messages.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;  length          1    wreg     unsigned char 
  8564 ;;  msgtype         1   18[BANK0 ] unsigned char 
  8565 ;;  data            2   19[BANK0 ] PTR void 
  8566 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), 
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;  length          1   21[BANK0 ] unsigned char 
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  1    wreg      char 
  8571 ;; Registers used:
  8572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8578 ;;      Params:         0       3       0       0       0
  8579 ;;      Locals:         0       1       0       0       0
  8580 ;;      Temps:          0       0       0       0       0
  8581 ;;      Totals:         0       4       0       0       0
  8582 ;;Total ram usage:        4 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:    2
  8585 ;; This function calls:
  8586 ;;		i2_send_msg
  8587 ;; This function is called by:
  8588 ;;		_i2c_slave_int_handler
  8589 ;;		_i2c_master_int_handler
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           
  8593                           	psect	text49
  8594  001DD0                     __ptext49:
  8595                           	opt stack 0
  8596  001DD0                     _ToMainHigh_sendmsg:
  8597                           	opt stack 16
  8598                           
  8599                           ; BSR set to: 0
  8600                           ;incstack = 0
  8601                           ;ToMainHigh_sendmsg@length stored from wreg
  8602  001DD0  CFE8 F095          	movff	wreg,ToMainHigh_sendmsg@length
  8603                           
  8604                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8605                           ;	Return value of _ToMainHigh_sendmsg is never used
  8606  001DD4  0101               	movlb	1	; () banked
  8607  001DD6  0E01               	movlw	high _ToMainHigh_MQ
  8608  001DD8  0100               	movlb	0	; () banked
  8609  001DDA  0100               	movlb	0	; () banked
  8610  001DDC  6F87               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8611  001DDE  0101               	movlb	1	; () banked
  8612  001DE0  0E00               	movlw	low _ToMainHigh_MQ
  8613  001DE2  0100               	movlb	0	; () banked
  8614  001DE4  0100               	movlb	0	; () banked
  8615  001DE6  6F86               	movwf	i2send_msg@qptr& (0+255),b
  8616  001DE8  C095  F088         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8617  001DEC  C092  F089         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8618  001DF0  0100               	movlb	0	; () banked
  8619  001DF2  0100               	movlb	0	; () banked
  8620  001DF4  C094  F08B         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8621  001DF8  0100               	movlb	0	; () banked
  8622  001DFA  0100               	movlb	0	; () banked
  8623  001DFC  C093  F08A         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8624  001E00  EC25  F007         	call	i2_send_msg	;wreg free
  8625  001E04  0012               	return	
  8626  001E06                     __end_of_ToMainHigh_sendmsg:
  8627                           	opt stack 0
  8628                           pclatu	equ	0xFFB
  8629                           pclath	equ	0xFFA
  8630                           tblptru	equ	0xFF8
  8631                           tblptrh	equ	0xFF7
  8632                           tblptrl	equ	0xFF6
  8633                           tablat	equ	0xFF5
  8634                           prodh	equ	0xFF4
  8635                           prodl	equ	0xFF3
  8636                           intcon	equ	0xFF2
  8637                           postinc0	equ	0xFEE
  8638                           fsr0h	equ	0xFEA
  8639                           fsr0l	equ	0xFE9
  8640                           wreg	equ	0xFE8
  8641                           indf1	equ	0xFE7
  8642                           postinc1	equ	0xFE6
  8643                           postdec1	equ	0xFE5
  8644                           fsr1h	equ	0xFE2
  8645                           fsr1l	equ	0xFE1
  8646                           bsr	equ	0xFE0
  8647                           indf2	equ	0xFDF
  8648                           postinc2	equ	0xFDE
  8649                           postdec2	equ	0xFDD
  8650                           fsr2h	equ	0xFDA
  8651                           fsr2l	equ	0xFD9
  8652                           status	equ	0xFD8
  8653                           
  8654 ;; *************** function i2_send_msg *****************
  8655 ;; Defined at:
  8656 ;;		line 24 in file "../src/messages.c"
  8657 ;; Parameters:    Size  Location     Type
  8658 ;;  qptr            2    6[BANK0 ] PTR struct __msg_queue
  8659 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8660 ;;  length          1    8[BANK0 ] unsigned char 
  8661 ;;  msgtype         1    9[BANK0 ] unsigned char 
  8662 ;;  data            2   10[BANK0 ] PTR void 
  8663 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  8664 ;;		 -> main@uc(13), 
  8665 ;; Auto vars:     Size  Location     Type
  8666 ;;  send_msg        2   16[BANK0 ] PTR struct __msg
  8667 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8668 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8669 ;;  send_msg        2   13[BANK0 ] unsigned int 
  8670 ;;  send_msg        1   15[BANK0 ] unsigned char 
  8671 ;; Return value:  Size  Location     Type
  8672 ;;                  1    wreg      char 
  8673 ;; Registers used:
  8674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8675 ;; Tracked objects:
  8676 ;;		On entry : 0/0
  8677 ;;		On exit  : 0/0
  8678 ;;		Unchanged: 0/0
  8679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8680 ;;      Params:         0       6       0       0       0
  8681 ;;      Locals:         0       5       0       0       0
  8682 ;;      Temps:          0       1       0       0       0
  8683 ;;      Totals:         0      12       0       0       0
  8684 ;;Total ram usage:       12 bytes
  8685 ;; Hardware stack levels used:    1
  8686 ;; Hardware stack levels required when called:    1
  8687 ;; This function calls:
  8688 ;;		i2___awmod
  8689 ;;		i2_memcpy
  8690 ;; This function is called by:
  8691 ;;		_ToMainHigh_sendmsg
  8692 ;; This function uses a non-reentrant model
  8693 ;;
  8694                           
  8695                           	psect	text50
  8696  000E4A                     __ptext50:
  8697                           	opt stack 0
  8698  000E4A                     i2_send_msg:
  8699                           	opt stack 16
  8700                           
  8701                           ;messages.c: 25: unsigned char slot;
  8702                           ;messages.c: 27: msg *qmsg;
  8703                           ;messages.c: 28: size_t tlength = length;
  8704                           
  8705                           ;incstack = 0
  8706  000E4A  0100               	movlb	0	; () banked
  8707  000E4C  0100               	movlb	0	; () banked
  8708  000E4E  C088  F08D         	movff	i2send_msg@length,i2send_msg@tlength
  8709  000E52  0100               	movlb	0	; () banked
  8710  000E54  0100               	movlb	0	; () banked
  8711  000E56  6B8E               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8715  000E58  0100               	movlb	0	; () banked
  8716  000E5A  EE20 F041          	lfsr	2,65
  8717  000E5E  0100               	movlb	0	; () banked
  8718  000E60  5186               	movf	i2send_msg@qptr& (0+255),w,b
  8719  000E62  26D9               	addwf	fsr2l,f,c
  8720  000E64  0100               	movlb	0	; () banked
  8721  000E66  5187               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8722  000E68  22DA               	addwfc	fsr2h,f,c
  8723  000E6A  50DF               	movf	indf2,w,c
  8724  000E6C  0100               	movlb	0	; () banked
  8725  000E6E  0100               	movlb	0	; () banked
  8726  000E70  6F8F               	movwf	i2send_msg@slot& (0+255),b
  8727                           
  8728                           ; BSR set to: 0
  8729                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8730  000E72  0100               	movlb	0	; () banked
  8731  000E74  0100               	movlb	0	; () banked
  8732  000E76  518F               	movf	i2send_msg@slot& (0+255),w,b
  8733  000E78  0D0D               	mullw	13
  8734  000E7A  50F3               	movf	prodl,w,c
  8735  000E7C  0100               	movlb	0	; () banked
  8736  000E7E  0100               	movlb	0	; () banked
  8737  000E80  2586               	addwf	i2send_msg@qptr& (0+255),w,b
  8738  000E82  0100               	movlb	0	; () banked
  8739  000E84  0100               	movlb	0	; () banked
  8740  000E86  6F90               	movwf	i2send_msg@qmsg& (0+255),b
  8741  000E88  50F4               	movf	prodh,w,c
  8742  000E8A  0100               	movlb	0	; () banked
  8743  000E8C  0100               	movlb	0	; () banked
  8744  000E8E  2187               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8745  000E90  0100               	movlb	0	; () banked
  8746  000E92  6F91               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;messages.c: 41: if (qmsg->full != 0) {
  8750  000E94  C090  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8751  000E98  C091  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8752  000E9C  50DF               	movf	indf2,w,c
  8753  000E9E  B4D8               	btfsc	status,2,c
  8754  000EA0  D002               	goto	i2l4279
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;messages.c: 42: return (-1);
  8758  000EA2  0EFF               	movlw	255
  8759  000EA4  0012               	return	
  8760  000EA6                     i2l4279:
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;messages.c: 43: }
  8764                           ;messages.c: 46: qmsg->length = length;
  8765  000EA6  0100               	movlb	0	; () banked
  8766  000EA8  EE20 F001          	lfsr	2,1
  8767  000EAC  0100               	movlb	0	; () banked
  8768  000EAE  5190               	movf	i2send_msg@qmsg& (0+255),w,b
  8769  000EB0  26D9               	addwf	fsr2l,f,c
  8770  000EB2  0100               	movlb	0	; () banked
  8771  000EB4  5191               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8772  000EB6  22DA               	addwfc	fsr2h,f,c
  8773  000EB8  0100               	movlb	0	; () banked
  8774  000EBA  C088  FFDF         	movff	i2send_msg@length,indf2
  8775                           
  8776                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8777  000EBE  0100               	movlb	0	; () banked
  8778  000EC0  EE20 F002          	lfsr	2,2
  8779  000EC4  0100               	movlb	0	; () banked
  8780  000EC6  5190               	movf	i2send_msg@qmsg& (0+255),w,b
  8781  000EC8  26D9               	addwf	fsr2l,f,c
  8782  000ECA  0100               	movlb	0	; () banked
  8783  000ECC  5191               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8784  000ECE  22DA               	addwfc	fsr2h,f,c
  8785  000ED0  0100               	movlb	0	; () banked
  8786  000ED2  C089  FFDF         	movff	i2send_msg@msgtype,indf2
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8790  000ED6  0E03               	movlw	3
  8791  000ED8  0100               	movlb	0	; () banked
  8792  000EDA  0100               	movlb	0	; () banked
  8793  000EDC  2590               	addwf	i2send_msg@qmsg& (0+255),w,b
  8794  000EDE  0100               	movlb	0	; () banked
  8795  000EE0  0100               	movlb	0	; () banked
  8796  000EE2  6F80               	movwf	i2memcpy@d1& (0+255),b
  8797  000EE4  0E00               	movlw	0
  8798  000EE6  0100               	movlb	0	; () banked
  8799  000EE8  0100               	movlb	0	; () banked
  8800  000EEA  2191               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8801  000EEC  0100               	movlb	0	; () banked
  8802  000EEE  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  8803  000EF0  0100               	movlb	0	; () banked
  8804  000EF2  0100               	movlb	0	; () banked
  8805  000EF4  C08B  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8806  000EF8  0100               	movlb	0	; () banked
  8807  000EFA  0100               	movlb	0	; () banked
  8808  000EFC  C08A  F082         	movff	i2send_msg@data,i2memcpy@s1
  8809  000F00  C08D  F084         	movff	i2send_msg@tlength,i2memcpy@n
  8810  000F04  C08E  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8811  000F08  ECA1  F00D         	call	i2_memcpy	;wreg free
  8812                           
  8813                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  8814  000F0C  0100               	movlb	0	; () banked
  8815  000F0E  EE20 F041          	lfsr	2,65
  8816  000F12  0100               	movlb	0	; () banked
  8817  000F14  5186               	movf	i2send_msg@qptr& (0+255),w,b
  8818  000F16  26D9               	addwf	fsr2l,f,c
  8819  000F18  0100               	movlb	0	; () banked
  8820  000F1A  5187               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8821  000F1C  22DA               	addwfc	fsr2h,f,c
  8822  000F1E  0100               	movlb	0	; () banked
  8823  000F20  EE10 F041          	lfsr	1,65
  8824  000F24  0100               	movlb	0	; () banked
  8825  000F26  5186               	movf	i2send_msg@qptr& (0+255),w,b
  8826  000F28  26E1               	addwf	fsr1l,f,c
  8827  000F2A  0100               	movlb	0	; () banked
  8828  000F2C  5187               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8829  000F2E  22E2               	addwfc	fsr1h,f,c
  8830  000F30  50E7               	movf	indf1,w,c
  8831  000F32  0100               	movlb	0	; () banked
  8832  000F34  6F8C               	movwf	??i2_send_msg& (0+255),b
  8833  000F36  0E01               	movlw	1
  8834  000F38  0100               	movlb	0	; () banked
  8835  000F3A  258C               	addwf	??i2_send_msg& (0+255),w,b
  8836  000F3C  6E2D               	movwf	i2___awmod@dividend,c
  8837  000F3E  6A2E               	clrf	i2___awmod@dividend+1,c
  8838  000F40  0E00               	movlw	0
  8839  000F42  222E               	addwfc	i2___awmod@dividend+1,f,c
  8840  000F44  0E00               	movlw	0
  8841  000F46  6E30               	movwf	i2___awmod@divisor+1,c
  8842  000F48  0E05               	movlw	5
  8843  000F4A  6E2F               	movwf	i2___awmod@divisor,c
  8844  000F4C  EC31  F00A         	call	i2___awmod	;wreg free
  8845  000F50  502D               	movf	?i2___awmod,w,c
  8846  000F52  6EDF               	movwf	indf2,c
  8847                           
  8848                           ;messages.c: 59: qmsg->full = 1;
  8849  000F54  C090  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8850  000F58  C091  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8851  000F5C  0E01               	movlw	1
  8852  000F5E  6EDF               	movwf	indf2,c
  8853                           
  8854                           ;messages.c: 60: return (1);
  8855  000F60  0E01               	movlw	1
  8856  000F62  0012               	return	
  8857  000F64                     __end_ofi2_send_msg:
  8858                           	opt stack 0
  8859                           pclatu	equ	0xFFB
  8860                           pclath	equ	0xFFA
  8861                           tblptru	equ	0xFF8
  8862                           tblptrh	equ	0xFF7
  8863                           tblptrl	equ	0xFF6
  8864                           tablat	equ	0xFF5
  8865                           prodh	equ	0xFF4
  8866                           prodl	equ	0xFF3
  8867                           intcon	equ	0xFF2
  8868                           postinc0	equ	0xFEE
  8869                           fsr0h	equ	0xFEA
  8870                           fsr0l	equ	0xFE9
  8871                           wreg	equ	0xFE8
  8872                           indf1	equ	0xFE7
  8873                           postinc1	equ	0xFE6
  8874                           postdec1	equ	0xFE5
  8875                           fsr1h	equ	0xFE2
  8876                           fsr1l	equ	0xFE1
  8877                           bsr	equ	0xFE0
  8878                           indf2	equ	0xFDF
  8879                           postinc2	equ	0xFDE
  8880                           postdec2	equ	0xFDD
  8881                           fsr2h	equ	0xFDA
  8882                           fsr2l	equ	0xFD9
  8883                           status	equ	0xFD8
  8884                           
  8885 ;; *************** function i2_memcpy *****************
  8886 ;; Defined at:
  8887 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;  d1              2    0[BANK0 ] PTR void 
  8890 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8891 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8892 ;;		 -> main@msgbuffer(11), 
  8893 ;;  s1              2    2[BANK0 ] PTR const void 
  8894 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8895 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8896 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  8897 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  8898 ;;		 -> main@uc(13), 
  8899 ;;  n               2    4[BANK0 ] unsigned int 
  8900 ;; Auto vars:     Size  Location     Type
  8901 ;;  memcpy          2   46[COMRAM] PTR const unsigned char 
  8902 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8903 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8904 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  8905 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  8906 ;;		 -> main@uc(13), 
  8907 ;;  memcpy          2   44[COMRAM] PTR unsigned char 
  8908 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8909 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8910 ;;		 -> main@msgbuffer(11), 
  8911 ;; Return value:  Size  Location     Type
  8912 ;;                  2    0[BANK0 ] PTR void 
  8913 ;; Registers used:
  8914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8915 ;; Tracked objects:
  8916 ;;		On entry : 0/0
  8917 ;;		On exit  : 0/0
  8918 ;;		Unchanged: 0/0
  8919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8920 ;;      Params:         0       6       0       0       0
  8921 ;;      Locals:         4       0       0       0       0
  8922 ;;      Temps:          0       0       0       0       0
  8923 ;;      Totals:         4       6       0       0       0
  8924 ;;Total ram usage:       10 bytes
  8925 ;; Hardware stack levels used:    1
  8926 ;; This function calls:
  8927 ;;		Nothing
  8928 ;; This function is called by:
  8929 ;;		i2_send_msg
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           	psect	text51
  8934  001B42                     __ptext51:
  8935                           	opt stack 0
  8936  001B42                     i2_memcpy:
  8937                           	opt stack 16
  8938                           
  8939                           ;incstack = 0
  8940  001B42  0100               	movlb	0	; () banked
  8941  001B44  C083  F030         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8942  001B48  0100               	movlb	0	; () banked
  8943  001B4A  C082  F02F         	movff	i2memcpy@s1,i2memcpy@s
  8944  001B4E  0100               	movlb	0	; () banked
  8945  001B50  C081  F02E         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8946  001B54  0100               	movlb	0	; () banked
  8947  001B56  C080  F02D         	movff	i2memcpy@d1,i2memcpy@d
  8948  001B5A  D00E               	goto	i2l4299
  8949  001B5C                     i2l4293:
  8950                           
  8951                           ; BSR set to: 0
  8952  001B5C  C02F  FFD9         	movff	i2memcpy@s,fsr2l
  8953  001B60  C030  FFDA         	movff	i2memcpy@s+1,fsr2h
  8954  001B64  C02D  FFE1         	movff	i2memcpy@d,fsr1l
  8955  001B68  C02E  FFE2         	movff	i2memcpy@d+1,fsr1h
  8956  001B6C  CFDF FFE7          	movff	indf2,indf1
  8957                           
  8958                           ; BSR set to: 0
  8959  001B70  4A2F               	infsnz	i2memcpy@s,f,c
  8960  001B72  2A30               	incf	i2memcpy@s+1,f,c
  8961                           
  8962                           ; BSR set to: 0
  8963  001B74  4A2D               	infsnz	i2memcpy@d,f,c
  8964  001B76  2A2E               	incf	i2memcpy@d+1,f,c
  8965  001B78                     i2l4299:
  8966                           
  8967                           ; BSR set to: 0
  8968  001B78  0100               	movlb	0	; () banked
  8969  001B7A  0100               	movlb	0	; () banked
  8970  001B7C  0784               	decf	i2memcpy@n& (0+255),f,b
  8971  001B7E  A0D8               	btfss	status,0,c
  8972  001B80  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  8973  001B82  0100               	movlb	0	; () banked
  8974  001B84  2984               	incf	i2memcpy@n& (0+255),w,b
  8975  001B86  B4D8               	btfsc	status,2,c
  8976  001B88  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  8977  001B8A  B4D8               	btfsc	status,2,c
  8978                           
  8979                           ; BSR set to: 0
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;	Return value of i2_memcpy is never used
  8983  001B8C  0012               	return	
  8984  001B8E  D7E6               	goto	i2l4293
  8985  001B90                     __end_ofi2_memcpy:
  8986                           	opt stack 0
  8987                           pclatu	equ	0xFFB
  8988                           pclath	equ	0xFFA
  8989                           tblptru	equ	0xFF8
  8990                           tblptrh	equ	0xFF7
  8991                           tblptrl	equ	0xFF6
  8992                           tablat	equ	0xFF5
  8993                           prodh	equ	0xFF4
  8994                           prodl	equ	0xFF3
  8995                           intcon	equ	0xFF2
  8996                           postinc0	equ	0xFEE
  8997                           fsr0h	equ	0xFEA
  8998                           fsr0l	equ	0xFE9
  8999                           wreg	equ	0xFE8
  9000                           indf1	equ	0xFE7
  9001                           postinc1	equ	0xFE6
  9002                           postdec1	equ	0xFE5
  9003                           fsr1h	equ	0xFE2
  9004                           fsr1l	equ	0xFE1
  9005                           bsr	equ	0xFE0
  9006                           indf2	equ	0xFDF
  9007                           postinc2	equ	0xFDE
  9008                           postdec2	equ	0xFDD
  9009                           fsr2h	equ	0xFDA
  9010                           fsr2l	equ	0xFD9
  9011                           status	equ	0xFD8
  9012                           
  9013 ;; *************** function i2___awmod *****************
  9014 ;; Defined at:
  9015 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;  dividend        2   44[COMRAM] int 
  9018 ;;  divisor         2   46[COMRAM] int 
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;  __awmod         1    1[BANK0 ] unsigned char 
  9021 ;;  __awmod         1    0[BANK0 ] unsigned char 
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  2   44[COMRAM] int 
  9024 ;; Registers used:
  9025 ;;		wreg, status,2, status,0, prodl
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9031 ;;      Params:         4       0       0       0       0
  9032 ;;      Locals:         0       2       0       0       0
  9033 ;;      Temps:          1       0       0       0       0
  9034 ;;      Totals:         5       2       0       0       0
  9035 ;;Total ram usage:        7 bytes
  9036 ;; Hardware stack levels used:    1
  9037 ;; This function calls:
  9038 ;;		Nothing
  9039 ;; This function is called by:
  9040 ;;		i2_send_msg
  9041 ;; This function uses a non-reentrant model
  9042 ;;
  9043                           
  9044                           	psect	text52
  9045  001462                     __ptext52:
  9046                           	opt stack 0
  9047  001462                     i2___awmod:
  9048                           	opt stack 16
  9049                           
  9050                           ; BSR set to: 0
  9051                           ;incstack = 0
  9052  001462  6E31               	movwf	??i2___awmod& (0+255),c
  9053  001464  0E00               	movlw	0
  9054  001466  0100               	movlb	0	; () banked
  9055  001468  0100               	movlb	0	; () banked
  9056  00146A  6F81               	movwf	i2___awmod@sign& (0+255),b
  9057  00146C  5031               	movf	??i2___awmod& (0+255),w,c
  9058                           
  9059                           ; BSR set to: 0
  9060  00146E  502E               	movf	i2___awmod@dividend+1,w,c
  9061  001470  0A80               	xorlw	128
  9062  001472  6EF3               	movwf	prodl,c
  9063  001474  0E80               	movlw	128
  9064  001476  5CF3               	subwf	prodl,w,c
  9065  001478  0E00               	movlw	0
  9066  00147A  B4D8               	btfsc	status,2,c
  9067  00147C  5C2D               	subwf	i2___awmod@dividend,w,c
  9068  00147E  B0D8               	btfsc	status,0,c
  9069  001480  D00A               	goto	i2l4309
  9070                           
  9071                           ; BSR set to: 0
  9072  001482  6C2D               	negf	i2___awmod@dividend,c
  9073  001484  1E2E               	comf	i2___awmod@dividend+1,f,c
  9074  001486  B0D8               	btfsc	status,0,c
  9075  001488  2A2E               	incf	i2___awmod@dividend+1,f,c
  9076                           
  9077                           ; BSR set to: 0
  9078  00148A  6E31               	movwf	??i2___awmod& (0+255),c
  9079  00148C  0E01               	movlw	1
  9080  00148E  0100               	movlb	0	; () banked
  9081  001490  0100               	movlb	0	; () banked
  9082  001492  6F81               	movwf	i2___awmod@sign& (0+255),b
  9083  001494  5031               	movf	??i2___awmod& (0+255),w,c
  9084  001496                     i2l4309:
  9085                           
  9086                           ; BSR set to: 0
  9087  001496  5030               	movf	i2___awmod@divisor+1,w,c
  9088  001498  0A80               	xorlw	128
  9089  00149A  6EF3               	movwf	prodl,c
  9090  00149C  0E80               	movlw	128
  9091  00149E  5CF3               	subwf	prodl,w,c
  9092  0014A0  0E00               	movlw	0
  9093  0014A2  B4D8               	btfsc	status,2,c
  9094  0014A4  5C2F               	subwf	i2___awmod@divisor,w,c
  9095  0014A6  B0D8               	btfsc	status,0,c
  9096  0014A8  D004               	goto	i2l4313
  9097                           
  9098                           ; BSR set to: 0
  9099  0014AA  6C2F               	negf	i2___awmod@divisor,c
  9100  0014AC  1E30               	comf	i2___awmod@divisor+1,f,c
  9101  0014AE  B0D8               	btfsc	status,0,c
  9102  0014B0  2A30               	incf	i2___awmod@divisor+1,f,c
  9103  0014B2                     i2l4313:
  9104                           
  9105                           ; BSR set to: 0
  9106  0014B2  5030               	movf	i2___awmod@divisor+1,w,c
  9107  0014B4  102F               	iorwf	i2___awmod@divisor,w,c
  9108  0014B6  B4D8               	btfsc	status,2,c
  9109  0014B8  D020               	goto	i2l4329
  9110                           
  9111                           ; BSR set to: 0
  9112  0014BA  6E31               	movwf	??i2___awmod& (0+255),c
  9113  0014BC  0E01               	movlw	1
  9114  0014BE  0100               	movlb	0	; () banked
  9115  0014C0  0100               	movlb	0	; () banked
  9116  0014C2  6F80               	movwf	i2___awmod@counter& (0+255),b
  9117  0014C4  5031               	movf	??i2___awmod& (0+255),w,c
  9118  0014C6  D006               	goto	i2l4319
  9119  0014C8                     i2l4317:
  9120                           
  9121                           ; BSR set to: 0
  9122  0014C8  90D8               	bcf	status,0,c
  9123  0014CA  362F               	rlcf	i2___awmod@divisor,f,c
  9124  0014CC  3630               	rlcf	i2___awmod@divisor+1,f,c
  9125  0014CE  0100               	movlb	0	; () banked
  9126  0014D0  0100               	movlb	0	; () banked
  9127  0014D2  2B80               	incf	i2___awmod@counter& (0+255),f,b
  9128  0014D4                     i2l4319:
  9129                           
  9130                           ; BSR set to: 0
  9131  0014D4  AE30               	btfss	i2___awmod@divisor+1,7,c
  9132  0014D6  D7F8               	goto	i2l4317
  9133  0014D8                     i2l4321:
  9134                           
  9135                           ; BSR set to: 0
  9136  0014D8  502F               	movf	i2___awmod@divisor,w,c
  9137  0014DA  5C2D               	subwf	i2___awmod@dividend,w,c
  9138  0014DC  5030               	movf	i2___awmod@divisor+1,w,c
  9139  0014DE  582E               	subwfb	i2___awmod@dividend+1,w,c
  9140  0014E0  A0D8               	btfss	status,0,c
  9141  0014E2  D004               	goto	i2l4325
  9142                           
  9143                           ; BSR set to: 0
  9144  0014E4  502F               	movf	i2___awmod@divisor,w,c
  9145  0014E6  5E2D               	subwf	i2___awmod@dividend,f,c
  9146  0014E8  5030               	movf	i2___awmod@divisor+1,w,c
  9147  0014EA  5A2E               	subwfb	i2___awmod@dividend+1,f,c
  9148  0014EC                     i2l4325:
  9149                           
  9150                           ; BSR set to: 0
  9151  0014EC  90D8               	bcf	status,0,c
  9152  0014EE  3230               	rrcf	i2___awmod@divisor+1,f,c
  9153  0014F0  322F               	rrcf	i2___awmod@divisor,f,c
  9154                           
  9155                           ; BSR set to: 0
  9156  0014F2  0100               	movlb	0	; () banked
  9157  0014F4  0100               	movlb	0	; () banked
  9158  0014F6  2F80               	decfsz	i2___awmod@counter& (0+255),f,b
  9159  0014F8  D7EF               	goto	i2l4321
  9160  0014FA                     i2l4329:
  9161                           
  9162                           ; BSR set to: 0
  9163  0014FA  0100               	movlb	0	; () banked
  9164  0014FC  0100               	movlb	0	; () banked
  9165  0014FE  5181               	movf	i2___awmod@sign& (0+255),w,b
  9166  001500  B4D8               	btfsc	status,2,c
  9167  001502  D004               	goto	i2l4333
  9168                           
  9169                           ; BSR set to: 0
  9170  001504  6C2D               	negf	i2___awmod@dividend,c
  9171  001506  1E2E               	comf	i2___awmod@dividend+1,f,c
  9172  001508  B0D8               	btfsc	status,0,c
  9173  00150A  2A2E               	incf	i2___awmod@dividend+1,f,c
  9174  00150C                     i2l4333:
  9175                           
  9176                           ; BSR set to: 0
  9177  00150C  C02D  F02D         	movff	i2___awmod@dividend,?i2___awmod
  9178  001510  C02E  F02E         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9179  001514  0012               	return	
  9180  001516                     __end_ofi2___awmod:
  9181                           	opt stack 0
  9182                           pclatu	equ	0xFFB
  9183                           pclath	equ	0xFFA
  9184                           tblptru	equ	0xFF8
  9185                           tblptrh	equ	0xFF7
  9186                           tblptrl	equ	0xFF6
  9187                           tablat	equ	0xFF5
  9188                           prodh	equ	0xFF4
  9189                           prodl	equ	0xFF3
  9190                           intcon	equ	0xFF2
  9191                           postinc0	equ	0xFEE
  9192                           fsr0h	equ	0xFEA
  9193                           fsr0l	equ	0xFE9
  9194                           wreg	equ	0xFE8
  9195                           indf1	equ	0xFE7
  9196                           postinc1	equ	0xFE6
  9197                           postdec1	equ	0xFE5
  9198                           fsr1h	equ	0xFE2
  9199                           fsr1l	equ	0xFE1
  9200                           bsr	equ	0xFE0
  9201                           indf2	equ	0xFDF
  9202                           postinc2	equ	0xFDE
  9203                           postdec2	equ	0xFDD
  9204                           fsr2h	equ	0xFDA
  9205                           fsr2l	equ	0xFD9
  9206                           status	equ	0xFD8
  9207                           
  9208 ;; *************** function _SleepIfOkay *****************
  9209 ;; Defined at:
  9210 ;;		line 228 in file "../src/messages.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;		None
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;		None
  9215 ;; Return value:  Size  Location     Type
  9216 ;;		None               void
  9217 ;; Registers used:
  9218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9224 ;;      Params:         0       0       0       0       0
  9225 ;;      Locals:         0       0       0       0       0
  9226 ;;      Temps:          0       0       0       0       0
  9227 ;;      Totals:         0       0       0       0       0
  9228 ;;Total ram usage:        0 bytes
  9229 ;; Hardware stack levels used:    1
  9230 ;; Hardware stack levels required when called:    2
  9231 ;; This function calls:
  9232 ;;		_enter_sleep_mode
  9233 ;;		i2_check_msg
  9234 ;;		i2_in_high_int
  9235 ;;		i2_in_low_int
  9236 ;; This function is called by:
  9237 ;;		_InterruptHandlerHigh
  9238 ;; This function uses a non-reentrant model
  9239 ;;
  9240                           
  9241                           	psect	text53
  9242  001B90                     __ptext53:
  9243                           	opt stack 0
  9244  001B90                     _SleepIfOkay:
  9245                           	opt stack 18
  9246                           
  9247                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;incstack = 0
  9251  001B90  6650               	tstfsz	_MQ_Main_Willing_to_block,c
  9252  001B92  D001               	goto	i2l2547
  9253  001B94  0012               	return	
  9254  001B96                     i2l2547:
  9255                           
  9256                           ;messages.c: 232: }
  9257                           ;messages.c: 235: if (in_low_int()) {
  9258  001B96  EC03  F00F         	call	i2_in_low_int	;wreg free
  9259  001B9A  5030               	movf	?i2_in_low_int+1,w,c
  9260  001B9C  102F               	iorwf	?i2_in_low_int,w,c
  9261  001B9E  A4D8               	btfss	status,2,c
  9262  001BA0  0012               	return	
  9263                           
  9264                           ;messages.c: 237: }
  9265                           ;messages.c: 240: if (!in_high_int()) {
  9266                           
  9267                           ;messages.c: 236: return;
  9268  001BA2  ECEF  F00F         	call	i2_in_high_int	;wreg free
  9269  001BA6  502E               	movf	?i2_in_high_int+1,w,c
  9270  001BA8  102D               	iorwf	?i2_in_high_int,w,c
  9271  001BAA  B4D8               	btfsc	status,2,c
  9272  001BAC  0012               	return	
  9273                           
  9274                           ;messages.c: 242: }
  9275                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  9276                           
  9277                           ;messages.c: 241: return;
  9278  001BAE  0101               	movlb	1	; () banked
  9279  001BB0  0E01               	movlw	high _ToMainHigh_MQ
  9280  001BB2  6E2E               	movwf	i2check_msg@qptr+1,c
  9281  001BB4  0101               	movlb	1	; () banked
  9282  001BB6  0E00               	movlw	low _ToMainHigh_MQ
  9283  001BB8  6E2D               	movwf	i2check_msg@qptr,c
  9284  001BBA  EC56  F00F         	call	i2_check_msg	;wreg free
  9285  001BBE  0900               	iorlw	0
  9286  001BC0  A4D8               	btfss	status,2,c
  9287  001BC2  0012               	return	
  9288                           
  9289                           ;messages.c: 249: }
  9290                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  9291                           
  9292                           ;messages.c: 248: return;
  9293  001BC4  0101               	movlb	1	; () banked
  9294  001BC6  0E01               	movlw	high _ToMainLow_MQ
  9295  001BC8  6E2E               	movwf	i2check_msg@qptr+1,c
  9296  001BCA  0101               	movlb	1	; () banked
  9297  001BCC  0E43               	movlw	low _ToMainLow_MQ
  9298  001BCE  6E2D               	movwf	i2check_msg@qptr,c
  9299  001BD0  EC56  F00F         	call	i2_check_msg	;wreg free
  9300  001BD4  0900               	iorlw	0
  9301  001BD6  B4D8               	btfsc	status,2,c
  9302                           
  9303                           ;messages.c: 252: }
  9304                           ;messages.c: 253: enter_sleep_mode();
  9305                           
  9306                           ;messages.c: 251: return;
  9307  001BD8  EC01  F010         	call	_enter_sleep_mode	;wreg free
  9308  001BDC  0012               	return	
  9309  001BDE                     __end_of_SleepIfOkay:
  9310                           	opt stack 0
  9311                           pclatu	equ	0xFFB
  9312                           pclath	equ	0xFFA
  9313                           tblptru	equ	0xFF8
  9314                           tblptrh	equ	0xFF7
  9315                           tblptrl	equ	0xFF6
  9316                           tablat	equ	0xFF5
  9317                           prodh	equ	0xFF4
  9318                           prodl	equ	0xFF3
  9319                           intcon	equ	0xFF2
  9320                           postinc0	equ	0xFEE
  9321                           fsr0h	equ	0xFEA
  9322                           fsr0l	equ	0xFE9
  9323                           wreg	equ	0xFE8
  9324                           indf1	equ	0xFE7
  9325                           postinc1	equ	0xFE6
  9326                           postdec1	equ	0xFE5
  9327                           fsr1h	equ	0xFE2
  9328                           fsr1l	equ	0xFE1
  9329                           bsr	equ	0xFE0
  9330                           indf2	equ	0xFDF
  9331                           postinc2	equ	0xFDE
  9332                           postdec2	equ	0xFDD
  9333                           fsr2h	equ	0xFDA
  9334                           fsr2l	equ	0xFD9
  9335                           status	equ	0xFD8
  9336                           
  9337 ;; *************** function i2_in_low_int *****************
  9338 ;; Defined at:
  9339 ;;		line 31 in file "../src/interrupts.c"
  9340 ;; Parameters:    Size  Location     Type
  9341 ;;		None
  9342 ;; Auto vars:     Size  Location     Type
  9343 ;;		None
  9344 ;; Return value:  Size  Location     Type
  9345 ;;                  2   46[COMRAM] int 
  9346 ;; Registers used:
  9347 ;;		wreg, status,2, status,0, cstack
  9348 ;; Tracked objects:
  9349 ;;		On entry : 0/0
  9350 ;;		On exit  : 0/0
  9351 ;;		Unchanged: 0/0
  9352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9353 ;;      Params:         2       0       0       0       0
  9354 ;;      Locals:         0       0       0       0       0
  9355 ;;      Temps:          0       0       0       0       0
  9356 ;;      Totals:         2       0       0       0       0
  9357 ;;Total ram usage:        2 bytes
  9358 ;; Hardware stack levels used:    1
  9359 ;; Hardware stack levels required when called:    1
  9360 ;; This function calls:
  9361 ;;		i2_in_high_int
  9362 ;; This function is called by:
  9363 ;;		_SleepIfOkay
  9364 ;; This function uses a non-reentrant model
  9365 ;;
  9366                           
  9367                           	psect	text54
  9368  001E06                     __ptext54:
  9369                           	opt stack 0
  9370  001E06                     i2_in_low_int:
  9371                           	opt stack 18
  9372                           
  9373                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  9374                           
  9375                           ;incstack = 0
  9376  001E06  ACF2               	btfss	intcon,6,c	;volatile
  9377  001E08  D005               	goto	i2l3317
  9378                           
  9379                           ;interrupts.c: 33: return (0);
  9380  001E0A  0E00               	movlw	0
  9381  001E0C  6E30               	movwf	?i2_in_low_int+1,c
  9382  001E0E  0E00               	movlw	0
  9383  001E10  6E2F               	movwf	?i2_in_low_int,c
  9384  001E12  0012               	return	
  9385  001E14                     i2l3317:
  9386  001E14  ECEF  F00F         	call	i2_in_high_int	;wreg free
  9387  001E18  502E               	movf	?i2_in_high_int+1,w,c
  9388  001E1A  102D               	iorwf	?i2_in_high_int,w,c
  9389  001E1C  B4D8               	btfsc	status,2,c
  9390  001E1E  D005               	goto	i2l3325
  9391                           
  9392                           ;interrupts.c: 35: return (0);
  9393  001E20  0E00               	movlw	0
  9394  001E22  6E30               	movwf	?i2_in_low_int+1,c
  9395  001E24  0E00               	movlw	0
  9396  001E26  6E2F               	movwf	?i2_in_low_int,c
  9397  001E28  0012               	return	
  9398  001E2A                     i2l3325:
  9399                           
  9400                           ;interrupts.c: 37: return (1);
  9401  001E2A  0E00               	movlw	0
  9402  001E2C  6E30               	movwf	?i2_in_low_int+1,c
  9403  001E2E  0E01               	movlw	1
  9404  001E30  6E2F               	movwf	?i2_in_low_int,c
  9405  001E32  0012               	return	
  9406  001E34                     __end_ofi2_in_low_int:
  9407                           	opt stack 0
  9408                           pclatu	equ	0xFFB
  9409                           pclath	equ	0xFFA
  9410                           tblptru	equ	0xFF8
  9411                           tblptrh	equ	0xFF7
  9412                           tblptrl	equ	0xFF6
  9413                           tablat	equ	0xFF5
  9414                           prodh	equ	0xFF4
  9415                           prodl	equ	0xFF3
  9416                           intcon	equ	0xFF2
  9417                           postinc0	equ	0xFEE
  9418                           fsr0h	equ	0xFEA
  9419                           fsr0l	equ	0xFE9
  9420                           wreg	equ	0xFE8
  9421                           indf1	equ	0xFE7
  9422                           postinc1	equ	0xFE6
  9423                           postdec1	equ	0xFE5
  9424                           fsr1h	equ	0xFE2
  9425                           fsr1l	equ	0xFE1
  9426                           bsr	equ	0xFE0
  9427                           indf2	equ	0xFDF
  9428                           postinc2	equ	0xFDE
  9429                           postdec2	equ	0xFDD
  9430                           fsr2h	equ	0xFDA
  9431                           fsr2l	equ	0xFD9
  9432                           status	equ	0xFD8
  9433                           
  9434 ;; *************** function i2_in_high_int *****************
  9435 ;; Defined at:
  9436 ;;		line 23 in file "../src/interrupts.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;		None
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;		None
  9441 ;; Return value:  Size  Location     Type
  9442 ;;                  2   44[COMRAM] int 
  9443 ;; Registers used:
  9444 ;;		wreg, status,2
  9445 ;; Tracked objects:
  9446 ;;		On entry : 0/0
  9447 ;;		On exit  : 0/0
  9448 ;;		Unchanged: 0/0
  9449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9450 ;;      Params:         2       0       0       0       0
  9451 ;;      Locals:         0       0       0       0       0
  9452 ;;      Temps:          0       0       0       0       0
  9453 ;;      Totals:         2       0       0       0       0
  9454 ;;Total ram usage:        2 bytes
  9455 ;; Hardware stack levels used:    1
  9456 ;; This function calls:
  9457 ;;		Nothing
  9458 ;; This function is called by:
  9459 ;;		_SleepIfOkay
  9460 ;;		i2_in_low_int
  9461 ;; This function uses a non-reentrant model
  9462 ;;
  9463                           
  9464                           	psect	text55
  9465  001FDE                     __ptext55:
  9466                           	opt stack 0
  9467  001FDE                     i2_in_high_int:
  9468                           	opt stack 18
  9469                           
  9470                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  9471                           
  9472                           ;incstack = 0
  9473  001FDE  0E00               	movlw	0
  9474  001FE0  AEF2               	btfss	intcon,7,c	;volatile
  9475  001FE2  0E01               	movlw	1
  9476  001FE4  6E2D               	movwf	?i2_in_high_int,c
  9477  001FE6  6A2E               	clrf	?i2_in_high_int+1,c
  9478  001FE8  0012               	return	
  9479  001FEA                     __end_ofi2_in_high_int:
  9480                           	opt stack 0
  9481                           pclatu	equ	0xFFB
  9482                           pclath	equ	0xFFA
  9483                           tblptru	equ	0xFF8
  9484                           tblptrh	equ	0xFF7
  9485                           tblptrl	equ	0xFF6
  9486                           tablat	equ	0xFF5
  9487                           prodh	equ	0xFF4
  9488                           prodl	equ	0xFF3
  9489                           intcon	equ	0xFF2
  9490                           postinc0	equ	0xFEE
  9491                           fsr0h	equ	0xFEA
  9492                           fsr0l	equ	0xFE9
  9493                           wreg	equ	0xFE8
  9494                           indf1	equ	0xFE7
  9495                           postinc1	equ	0xFE6
  9496                           postdec1	equ	0xFE5
  9497                           fsr1h	equ	0xFE2
  9498                           fsr1l	equ	0xFE1
  9499                           bsr	equ	0xFE0
  9500                           indf2	equ	0xFDF
  9501                           postinc2	equ	0xFDE
  9502                           postdec2	equ	0xFDD
  9503                           fsr2h	equ	0xFDA
  9504                           fsr2l	equ	0xFD9
  9505                           status	equ	0xFD8
  9506                           
  9507 ;; *************** function i2_check_msg *****************
  9508 ;; Defined at:
  9509 ;;		line 222 in file "../src/messages.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;  qptr            2   44[COMRAM] PTR struct __msg_queue
  9512 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9513 ;; Auto vars:     Size  Location     Type
  9514 ;;		None
  9515 ;; Return value:  Size  Location     Type
  9516 ;;                  1    wreg      unsigned char 
  9517 ;; Registers used:
  9518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9519 ;; Tracked objects:
  9520 ;;		On entry : 0/0
  9521 ;;		On exit  : 0/0
  9522 ;;		Unchanged: 0/0
  9523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9524 ;;      Params:         2       0       0       0       0
  9525 ;;      Locals:         0       0       0       0       0
  9526 ;;      Temps:          1       0       0       0       0
  9527 ;;      Totals:         3       0       0       0       0
  9528 ;;Total ram usage:        3 bytes
  9529 ;; Hardware stack levels used:    1
  9530 ;; This function calls:
  9531 ;;		Nothing
  9532 ;; This function is called by:
  9533 ;;		_SleepIfOkay
  9534 ;; This function uses a non-reentrant model
  9535 ;;
  9536                           
  9537                           	psect	text56
  9538  001EAC                     __ptext56:
  9539                           	opt stack 0
  9540  001EAC                     i2_check_msg:
  9541                           	opt stack 19
  9542                           
  9543                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9544                           
  9545                           ;incstack = 0
  9546  001EAC  EE20 F042          	lfsr	2,66
  9547  001EB0  502D               	movf	i2check_msg@qptr,w,c
  9548  001EB2  26D9               	addwf	fsr2l,f,c
  9549  001EB4  502E               	movf	i2check_msg@qptr+1,w,c
  9550  001EB6  22DA               	addwfc	fsr2h,f,c
  9551  001EB8  50DF               	movf	indf2,w,c
  9552  001EBA  6E2F               	movwf	??i2_check_msg& (0+255),c
  9553  001EBC  502F               	movf	??i2_check_msg,w,c
  9554  001EBE  0D0D               	mullw	13
  9555  001EC0  50F3               	movf	prodl,w,c
  9556  001EC2  242D               	addwf	i2check_msg@qptr,w,c
  9557  001EC4  6ED9               	movwf	fsr2l,c
  9558  001EC6  50F4               	movf	prodh,w,c
  9559  001EC8  202E               	addwfc	i2check_msg@qptr+1,w,c
  9560  001ECA  6EDA               	movwf	fsr2h,c
  9561  001ECC  50DF               	movf	indf2,w,c
  9562  001ECE  0012               	return	
  9563  001ED0                     __end_ofi2_check_msg:
  9564                           	opt stack 0
  9565                           pclatu	equ	0xFFB
  9566                           pclath	equ	0xFFA
  9567                           tblptru	equ	0xFF8
  9568                           tblptrh	equ	0xFF7
  9569                           tblptrl	equ	0xFF6
  9570                           tablat	equ	0xFF5
  9571                           prodh	equ	0xFF4
  9572                           prodl	equ	0xFF3
  9573                           intcon	equ	0xFF2
  9574                           postinc0	equ	0xFEE
  9575                           fsr0h	equ	0xFEA
  9576                           fsr0l	equ	0xFE9
  9577                           wreg	equ	0xFE8
  9578                           indf1	equ	0xFE7
  9579                           postinc1	equ	0xFE6
  9580                           postdec1	equ	0xFE5
  9581                           fsr1h	equ	0xFE2
  9582                           fsr1l	equ	0xFE1
  9583                           bsr	equ	0xFE0
  9584                           indf2	equ	0xFDF
  9585                           postinc2	equ	0xFDE
  9586                           postdec2	equ	0xFDD
  9587                           fsr2h	equ	0xFDA
  9588                           fsr2l	equ	0xFD9
  9589                           status	equ	0xFD8
  9590                           
  9591 ;; *************** function _enter_sleep_mode *****************
  9592 ;; Defined at:
  9593 ;;		line 202 in file "../src/messages.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;		None
  9596 ;; Auto vars:     Size  Location     Type
  9597 ;;		None
  9598 ;; Return value:  Size  Location     Type
  9599 ;;		None               void
  9600 ;; Registers used:
  9601 ;;		None
  9602 ;; Tracked objects:
  9603 ;;		On entry : 0/0
  9604 ;;		On exit  : 0/0
  9605 ;;		Unchanged: 0/0
  9606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9607 ;;      Params:         0       0       0       0       0
  9608 ;;      Locals:         0       0       0       0       0
  9609 ;;      Temps:          0       0       0       0       0
  9610 ;;      Totals:         0       0       0       0       0
  9611 ;;Total ram usage:        0 bytes
  9612 ;; Hardware stack levels used:    1
  9613 ;; This function calls:
  9614 ;;		Nothing
  9615 ;; This function is called by:
  9616 ;;		_SleepIfOkay
  9617 ;; This function uses a non-reentrant model
  9618 ;;
  9619                           
  9620                           	psect	text57
  9621  002002                     __ptext57:
  9622                           	opt stack 0
  9623  002002                     _enter_sleep_mode:
  9624                           	opt stack 19
  9625                           
  9626                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9627                           
  9628                           ;incstack = 0
  9629  002002  8ED3               	bsf	4051,7,c	;volatile
  9630  002004  0003               	sleep		;# 
  9631  002006  0012               	return	
  9632  002008                     __end_of_enter_sleep_mode:
  9633                           	opt stack 0
  9634  0000                     pclatu	equ	0xFFB
  9635                           pclath	equ	0xFFA
  9636                           tblptru	equ	0xFF8
  9637                           tblptrh	equ	0xFF7
  9638                           tblptrl	equ	0xFF6
  9639                           tablat	equ	0xFF5
  9640                           prodh	equ	0xFF4
  9641                           prodl	equ	0xFF3
  9642                           intcon	equ	0xFF2
  9643                           postinc0	equ	0xFEE
  9644                           fsr0h	equ	0xFEA
  9645                           fsr0l	equ	0xFE9
  9646                           wreg	equ	0xFE8
  9647                           indf1	equ	0xFE7
  9648                           postinc1	equ	0xFE6
  9649                           postdec1	equ	0xFE5
  9650                           fsr1h	equ	0xFE2
  9651                           fsr1l	equ	0xFE1
  9652                           bsr	equ	0xFE0
  9653                           indf2	equ	0xFDF
  9654                           postinc2	equ	0xFDE
  9655                           postdec2	equ	0xFDD
  9656                           fsr2h	equ	0xFDA
  9657                           fsr2l	equ	0xFD9
  9658                           status	equ	0xFD8
  9659                           pclatu	equ	0xFFB
  9660                           pclath	equ	0xFFA
  9661                           tblptru	equ	0xFF8
  9662                           tblptrh	equ	0xFF7
  9663                           tblptrl	equ	0xFF6
  9664                           tablat	equ	0xFF5
  9665                           prodh	equ	0xFF4
  9666                           prodl	equ	0xFF3
  9667                           intcon	equ	0xFF2
  9668                           postinc0	equ	0xFEE
  9669                           fsr0h	equ	0xFEA
  9670                           fsr0l	equ	0xFE9
  9671                           wreg	equ	0xFE8
  9672                           indf1	equ	0xFE7
  9673                           postinc1	equ	0xFE6
  9674                           postdec1	equ	0xFE5
  9675                           fsr1h	equ	0xFE2
  9676                           fsr1l	equ	0xFE1
  9677                           bsr	equ	0xFE0
  9678                           indf2	equ	0xFDF
  9679                           postinc2	equ	0xFDE
  9680                           postdec2	equ	0xFDD
  9681                           fsr2h	equ	0xFDA
  9682                           fsr2l	equ	0xFD9
  9683                           status	equ	0xFD8
  9684                           
  9685                           	psect	rparam
  9686  0000                     pclatu	equ	0xFFB
  9687                           pclath	equ	0xFFA
  9688                           tblptru	equ	0xFF8
  9689                           tblptrh	equ	0xFF7
  9690                           tblptrl	equ	0xFF6
  9691                           tablat	equ	0xFF5
  9692                           prodh	equ	0xFF4
  9693                           prodl	equ	0xFF3
  9694                           intcon	equ	0xFF2
  9695                           postinc0	equ	0xFEE
  9696                           fsr0h	equ	0xFEA
  9697                           fsr0l	equ	0xFE9
  9698                           wreg	equ	0xFE8
  9699                           indf1	equ	0xFE7
  9700                           postinc1	equ	0xFE6
  9701                           postdec1	equ	0xFE5
  9702                           fsr1h	equ	0xFE2
  9703                           fsr1l	equ	0xFE1
  9704                           bsr	equ	0xFE0
  9705                           indf2	equ	0xFDF
  9706                           postinc2	equ	0xFDE
  9707                           postdec2	equ	0xFDD
  9708                           fsr2h	equ	0xFDA
  9709                           fsr2l	equ	0xFD9
  9710                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         300
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     49      83
    BANK0           128     59      71
    BANK1           256    100     236
    BANK2           256      0     134
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_trans@data	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 13
		 -> main@uc(BANK1[13]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK1[29]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 5
		 -> i2c_slave_int_handler@motormsg(BANK0[5]), i2c_slave_int_handler@sensormsg(BANK0[5]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK1[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@ic(BANK1[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_WriteTimer0
    _i2c_slave_int_handler->_start_i2c_slave_reply
    i2_send_msg->i2___awmod
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0   13866
                                             36 BANK1     64    64      0
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                         _uart_trans
 ---------------------------------------------------------------------------------
 (1) _uart_trans                                           5     3      2     127
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3347
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2658
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2435
                                             10 BANK1     12     6      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      7     3      4     545
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2969
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2969
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2746
                                             10 BANK1     14     7      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     637
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     347
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    3486
                                             27 COMRAM    17    17      0
                    _adc_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3398
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    3375
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    3022
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     809
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   0     0      0      88
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    5241
                                             45 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  0     0      0      88
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      88
                                             44 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    4917
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_slave_int_handler                              23    23      0    4917
                                             22 BANK0     23    23      0
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     3      2     172
                                             44 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    3994
                                             18 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    3381
                                              6 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                             44 COMRAM     4     4      0
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           7     3      4    1034
                                             44 COMRAM     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             46 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             44 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
   _uart_trans

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
   _timer1_int_handler
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_trans_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_slave_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2___awmod
           i2_memcpy
       _handle_start
       _start_i2c_slave_reply
   _timer0_int_handler
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      86       8       52.3%
BITBANK1           100      0       0       5        0.0%
BANK1              100     64      EC       6       92.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80     3B      47       4       55.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     31      53       1       65.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     20C      11        0.0%
DATA                 0      0     20C      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Mar 04 18:06:47 2014

          _MQ_Main_Willing_to_block 0050                         _SSPSTATbits 000FC7  
         __end_of_ToMainLow_recvmsg 1CAA                                  bsr 000FE0  
         __end_of_ToMainLow_sendmsg 1EAC                        __CFG_CP0$OFF 000000  
                               l132 0900                                 l503 1E58  
                               l504 1E5A                                 l530 1D60  
                               l527 1D46                                 l529 1D5E  
                               l570 1616                                 l571 1618  
                               l484 174E                                 l564 15E6  
                               l568 1606                                 l569 1608  
                               l797 1F52     __size_of_uart_trans_int_handler 0068  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                      ___awmod@sign 018C                      _FromMainLow_MQ 0243  
                               prod 000FF3                                 wreg 000FE8  
                      __CFG_IESO$ON 000000                        ?_in_high_int 0186  
                  ??_init_uart_recv 0188          i2c_slave_int_handler@F5130 00C0  
        i2c_slave_int_handler@F5128 00BB                                l1109 16C4  
                              l4231 0FEE                                l4223 0FAA  
                              l4233 1000                                l4235 1008  
                              l4243 1050                                l4227 0FD0  
                              l4247 1068                                l4239 103C  
                              l4263 16B0                                l4255 1662  
                              l4257 1674                                l3555 1C14  
                              l3547 1BF2                                l4259 167C  
                              l3653 08AE                                l3661 0946  
                              l3645 086C                                l3727 1D48  
                              l3911 0D7A                                l3655 0906  
                              l3569 1C58                                l3833 181E  
                              l3673 0A1E                                l3681 0A68  
                              l3931 1B2A                                l3827 17F2  
                              l3667 0984                                l3659 0926  
                              l3925 1B06                                l3853 142E  
                              l3677 0A64                                l3669 09D6  
                              l3775 15E8                                l3767 15D2  
                              l3839 184A                                l3945 0AEE  
                              l3961 0BDC                                l3873 0BFC  
                              l3849 13C4                                l3877 0C80  
                              l3893 189A                                _LATA 000F89  
                              _LATB 000F8A                                u3707 1F54  
                              i1l57 0080                     _FromMainHigh_MQ 0200  
                     __CFG_FCMEN$ON 000000              ?_block_on_To_msgqueues 0001  
                              _main 0796                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr0l 000FE9  
                              fsr2h 000FDA                                indf1 000FE7  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                         main@msgtype 01BE  
                        i1_send_msg 12EE                                pclat 000FFA  
                       i2_check_msg 1EAC                                prodh 000FF4  
                              prodl 000FF3               handle_start@data_read 002D  
                              start 00C6                       __CFG_FOSC2$ON 000000  
                  ?_adc_int_handler 0001                          i2_send_msg 0E4A  
         ToMainHigh_recvmsg@msgtype 019E       i2c_slave_int_handler@motormsg 009D  
                    send_msg@length 0192                     __end_of_OpenADC 1752  
       __size_of_timer0_int_handler 0012             ??_i2c_slave_int_handler 0096  
                       _Delay1KTCYx 1F4E                               ?_main 0001  
                   __end_of___awmod 1072                               _T0CON 000FD5  
                             _T1CON 000FCD                               i1l424 1A7A  
                   __end_of___lwmod 16CE                          i1memcpy@d1 0001  
                             i2l330 052C                               i2l332 0192  
                             i2l350 0366                               i1l582 1F3E  
                             i2l336 01D6                               i2l364 053E  
                             i2l293 11E2                               i2l358 049E  
                        i1memcpy@s1 0003                               _RCREG 000FAE  
                             _RCSTA 000FAB                               _TMR0H 000FD7  
                             _TMR1H 000FCF                               _TMR0L 000FD6  
                             _TMR1L 000FCE                               _SPBRG 000FAF  
                             _PORTA 000F80                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                        i2memcpy@d1 0080                          i2memcpy@s1 0082  
                      ?_init_queues 0001           __size_of_enter_sleep_mode 0006  
                    i1___awmod@sign 0007                     __end_of_in_main 1C68  
        ToMainLow_recvmsg@maxlength 01A2             timer0_lthread@msgbuffer 018C  
           i2c_configure_slave@addr 0186                               tablat 000FF5  
                             status 000FD8              _uart_trans_int_handler 1A16  
                  __end_ofi1_memcpy 1D2C                  __size_ofi1___awmod 009C  
                  __end_ofi2_memcpy 1B90                  __size_ofi2___awmod 00B4  
                   __initialization 1A7E                        __end_of_main 0A82  
       __size_of_timer1_int_handler 000E          __size_of_ToMainLow_recvmsg 0042  
        __size_of_ToMainLow_sendmsg 0026               __size_ofi2_in_low_int 002E  
     __size_of_FromMainHigh_sendmsg 0036                              ??_main 01AA  
                   send_msg@msgtype 0193                       __activetblptr 000002  
                   send_msg@tlength 0197                          _SetChanADC 1EF2  
              __end_of_handle_start 122E                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADCON2 000FC0  
                            _ADRESH 000FC4             ??_uart_recv_int_handler 001B  
                            i1l1341 1EDC                              i1l3401 1590  
                            i1l3405 159A                              i1l3409 15A8  
                            i1l4401 0070                              i1l3365 1D1A  
                            i1l3359 1CFE                              i1l3393 1570  
                            i1l3385 1542                              i2l3011 11FE  
                            i1l3395 1578                              i2l3013 1216  
                            i1l3397 157C                              i1l3389 155E  
                            i1l4349 1326                              i1l4383 12CE  
                            i1l4377 128A                              i1l4395 0066  
                            i2l4101 0500                              i2l4013 0188  
                            i2l4031 020E                              i2l4007 0170  
                            i2l4121 063C                              i2l4113 05A2  
                            i2l4033 023A                          _OpenTimer0 1E34  
                        _OpenTimer1 1D2C                              i2l4107 0542  
                            i2l4051 02CE                              i2l4043 0276  
                            i2l3325 1E2A                              i2l3317 1E14  
                            i2l4141 0740                      __CFG_WDTEN$OFF 000000  
                            i2l4321 14D8                              i2l4313 14B2  
                            i2l4129 06E2                              i2l4073 03DA  
                            i2l4049 028E                              i2l2547 1B96  
                            i2l4075 041C                              i2l4333 150C  
                            i2l4325 14EC                              i2l4317 14C8  
                            i2l4309 1496                              i2l4149 0784  
                            i2l4319 14D4                              i2l4079 042E  
                            i2l4329 14FA                              i2l4293 1B5C  
                            i2l4279 0EA6                              i2l3585 1796  
                            i2l4299 1B78                              i2l3579 178C  
                            i2l2991 108E                              i2l2995 1102  
       __end_of_i2c_configure_slave 1E86                       ??_SleepIfOkay 0031  
                __size_of_ReadUSART 001E                              _OSCCON 000FD3  
                            _SPBRGH 000FB0                              _SSPADD 000FC8  
                            _SSPBUF 000FC9      __size_of_start_i2c_slave_reply 00F4  
                       ?i1_send_msg 000B       __end_of_start_i2c_slave_reply 1166  
                timer0_lthread@tptr 0186                           ??_OpenADC 0188  
                      i2_in_low_int 1E06                         ?i2_send_msg 0086  
                    __CFG_XINST$OFF 000000                  __size_of_OpenUSART 0092  
                   _i2c_int_handler 1FFC                           ??___awmod 018A  
 i2c_slave_int_handler@data_written 00A5                     _i2c_master_send 0BE0  
                  OpenTimer0@config 0186                              _ic_ptr 00C5  
                         ??___lwmod 018A                       main@msgbuffer 01AF  
                  __end_of_init_i2c 1A16                    OpenTimer1@config 0186  
                            _memcpy 1AE4                              clear_0 1A84  
                            clear_1 1A90                              clear_2 1A9C  
                   ___awmod@divisor 0188                              _uc_ptr 0052  
                   ___awmod@counter 018B                              main@ic 01CD  
                            main@uc 01C0                    __end_of_recv_msg 0BE0  
       start_i2c_slave_reply@length 0031                           ??_in_main 018C  
                 __end_ofi1___awmod 15B2                    __end_of_send_msg 0E4A  
                 __end_ofi2___awmod 1516                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                       init_queue@i 0189                      i2___awmod@sign 0081  
          ToMainLow_recvmsg@msgtype 019E                __size_of_in_high_int 0012  
                   __CFG_FOSC$HSPLL 000000                          __accesstop 0080  
           __end_of__initialization 1ADA          __end_of_ToMainHigh_recvmsg 1CEC  
        __end_of_ToMainHigh_sendmsg 1E06         __end_of_init_timer1_lthread 1F88  
               __end_of_SleepIfOkay 1BDE                      __pcstackCOMRAM 0001  
                      __pidataBANK0 1FEA                        __pidataBANK1 2008  
            __size_ofi2_in_high_int 000C                  __size_of_check_msg 0036  
                 __end_of_ReadUSART 1F4E                         ?_SetChanADC 0001  
               __size_ofi1_send_msg 00C0                           ?i1_memcpy 0001  
     __size_of_InterruptHandlerHigh 17CC         __end_of_InterruptHandlerLow 00C6  
                         ?i2_memcpy 0080                       _ToMainHigh_MQ 0100  
                  _enter_sleep_mode 2002                 __size_ofi2_send_msg 011A  
              timer1_lthread@length 01A4                       ReadUSART@data 0001  
                 __end_of_OpenUSART 1644                       check_msg@qptr 0186  
              timer1_lthread@retval 01A9             ??_block_on_To_msgqueues 018C  
              __size_of_init_queues 006E                          __pbssBANK1 0100  
                        __pbssBANK2 0200                         ?_OpenTimer0 0001  
                       ?_OpenTimer1 0001                          __pnvCOMRAM 0052  
           __end_of_i2c_int_handler 2002                        ?i2_check_msg 002D  
           __end_of_i2c_master_send 0D1E                  timer1_lthread@tptr 01A0  
                 recv_msg@maxlength 0192                     recv_msg@msgtype 0193  
                   recv_msg@tlength 019A               __size_of_handle_start 00C8  
                      ?_Delay1KTCYx 0001                    WriteTimer0@timer 002F  
                           ?_memcpy 0186                    WriteTimer1@timer 0003  
                     ??_WriteTimer0 002F                       ??_WriteTimer1 0003  
    __size_of_i2c_slave_int_handler 06CC             __size_of_timer0_lthread 0012  
     __end_of_i2c_slave_int_handler 0796             __size_of_timer1_lthread 0072  
                        ??i1_memcpy 0007                          ??i2_memcpy 002D  
                  i1send_msg@length 000D                       i2_in_high_int 1FDE  
                           _SSPCON1 000FC6                             _SSPCON2 000FC5  
                           _SSPSTAT 000FC7             ?_uart_trans_int_handler 0001  
                 __end_of_check_msg 1DD0                           ?_init_i2c 0186  
                       _SleepIfOkay 1B90                           ?_recv_msg 0190  
                           _OpenADC 16CE                          _in_low_int 1BDE  
                      _handle_start 1166                             __Hparam 0000  
               __size_of_SetChanADC 0020                           ?_send_msg 0190  
                           __Lparam 0000          __end_of_timer0_int_handler 1FBE  
                  init_uart_recv@uc 0186                             ___awmod 0F64  
                           ___lwmod 1644                     __CFG_STVREN$OFF 000000  
i2c_slave_int_handler@overrun_error 00A6                             __pcinit 1A7E  
                   __size_of_memcpy 005E            __size_of_adc_int_handler 0022  
                        _init_queue 1852                             __ramtop 0400  
               __size_of_OpenTimer0 002A                 __size_of_OpenTimer1 0038  
                           __ptext0 0796                             __ptext1 13AE  
                           __ptext2 18CC                             __ptext3 1644  
                           __ptext4 1D64                             __ptext5 0D1E  
                           __ptext6 1F64                             __ptext7 1F12  
                           __ptext8 1F76                             __ptext9 193E  
                         _T0CONbits 000FD5                             _in_main 1C24  
                         _T1CONbits 000FCD                    ___awmod@dividend 0186  
               __end_of_WriteTimer0 1FD0                 __end_of_WriteTimer1 1FAC  
                    ?i2_in_high_int 002D      __end_of_uart_trans_int_handler 1A7E  
                    OpenADC@config2 0186                             main@msg 01AC  
                    __pintcode_body 1752                end_of_initialization 1ADA  
           timer1_lthread@msgbuffer 01A6        __end_of_FromMainHigh_sendmsg 1D9A  
    __size_of_uart_recv_int_handler 00C0          FromMainHigh_sendmsg@length 019F  
                           memcpy@d 018C                             memcpy@n 018A  
                           memcpy@s 018E       __end_of_uart_recv_int_handler 12EE  
                        ??_init_i2c 0188                       __Lmediumconst 0000  
                           int_func 1752                        ??i1_send_msg 0011  
           __size_of_init_uart_recv 001E                    ?_i2c_int_handler 0001  
                  ?_i2c_master_send 0186                          ??_recv_msg 0197  
                      ??i2_send_msg 008C                          ??_send_msg 0196  
        __end_of_timer1_int_handler 1FDE                           _RCSTAbits 000FAB  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 0092  
                        _uart_trans 13AE                  __end_ofi1_send_msg 13AE  
       FromMainHigh_sendmsg@msgtype 019C                           _TRISCbits 000F94  
                         i1___awmod 1516                  __end_ofi2_send_msg 0F64  
                         i2___awmod 1462                           _TXSTAbits 000FAC  
                        main@length 01BF                         ?_in_low_int 0188  
             timer0_lthread@msgtype 0188               _start_i2c_slave_reply 1072  
      __size_of_i2c_configure_slave 0028                __size_ofi2_check_msg 0024  
          __end_of_enter_sleep_mode 2008                  _ToMainHigh_recvmsg 1CAA  
                         i1memcpy@d 0007                  _ToMainHigh_sendmsg 1DD0  
                         i1memcpy@n 0005                           i1memcpy@s 0009  
         i2c_master_send@recvlength 0186                      _timer0_lthread 1F64  
                       ?_init_queue 0186                           i2memcpy@d 002D  
                       _WriteTimer0 1FBE                         _WriteTimer1 1F9A  
                         i2memcpy@n 0084                           i2memcpy@s 002F  
                    _timer1_lthread 18CC                      __end_of_memcpy 1B42  
                 _enable_interrupts 1FF4                __size_of_Delay1KTCYx 0016  
                      ??_SetChanADC 0186           i2c_master_send@sendlength 018C  
               ?_ToMainHigh_recvmsg 019E                     ??i2_in_high_int 002F  
               ?_ToMainHigh_sendmsg 0092                  ?_enable_interrupts 0001  
               start_initialization 1A7E                       ??_in_high_int 0188  
                         _ReadUSART 1F30                   ??_adc_int_handler 0001  
                        ?i1___awmod 0001                   __size_ofi1_memcpy 0040  
                 __size_ofi2_memcpy 004E           i2c_master_send@slave_addr 0189  
                        ?i2___awmod 002D                 ??_enable_interrupts 0186  
                      ??_OpenTimer0 0186                        ??_OpenTimer1 0186  
    __size_of_block_on_To_msgqueues 007E       __end_of_block_on_To_msgqueues 1852  
                         _OpenUSART 15B2        __end_of_InterruptHandlerHigh 17D4  
                        init_i2c@ic 0186                ??_ToMainHigh_recvmsg 01A2  
              ??_ToMainHigh_sendmsg 0032                  __end_of_SetChanADC 1F12  
            __end_of_timer0_lthread 1F76                         __pdataBANK0 00BB  
                       __pdataBANK1 01EA              __end_of_timer1_lthread 193E  
                i1___awmod@dividend 0001           __end_of_enable_interrupts 1FFC  
                          ??_memcpy 018C               timer1_lthread@msgtype 01A2  
                       ?_uart_trans 0186                _FromMainHigh_sendmsg 1D64  
      __size_of_init_timer1_lthread 0012                  __end_of_OpenTimer0 1E5E  
                __end_of_OpenTimer1 1D64                         __pbssCOMRAM 0032  
                        ?_ReadUSART 0001                       ??_init_queues 018A  
                     __pcstackBANK0 0080                       __pcstackBANK1 0186  
               __size_of_in_low_int 0046            start_i2c_slave_reply@msg 002D  
                         _adcbuffer 0032                 __CFG_CCP2MX$DEFAULT 000000  
                   Delay1KTCYx@unit 0186            ToMainLow_sendmsg@msgtype 0017  
      __size_of_InterruptHandlerLow 00AE      i2c_slave_int_handler@data_read 00AC  
               __end_of_in_high_int 1F9A                          ?_OpenUSART 0186  
                      ?_SleepIfOkay 0001               ToMainLow_recvmsg@data 01A0  
                      _ToMainLow_MQ 0143                 __size_of_init_queue 007A  
                    _init_uart_recv 1F12                           _check_msg 1D9A  
                         __pnvBANK0 00C5              ?_start_i2c_slave_reply 002D  
                 __size_of_init_i2c 006A                   OpenADC@portconfig 0187  
                          ?_OpenADC 0186                        recv_msg@data 0195  
                      recv_msg@qmsg 019C                        recv_msg@slot 0199  
                      recv_msg@qptr 0190                   __size_of_recv_msg 015E  
                         __pintcode 0008                   __size_of_send_msg 012C  
                          ?___awmod 0186                     ?_timer0_lthread 0186  
                          ?___lwmod 0186                     ?_timer1_lthread 01A0  
             ?_FromMainHigh_sendmsg 019C                         __pintcodelo 0018  
            ToMainHigh_recvmsg@data 01A0                            ?_in_main 018A  
                 WriteTimer0@timer0 002D                  _timer0_int_handler 1FAC  
                 WriteTimer1@timer1 0001               _i2c_slave_int_handler 00CA  
    i2c_slave_int_handler@error_buf 00A2                         ??i1___awmod 0005  
             ToMainLow_sendmsg@data 0018                         ??i2___awmod 0031  
               ?_timer0_int_handler 0001      i2c_slave_int_handler@msg_ready 00AB  
            __end_of_init_uart_recv 1F30                 __end_of_init_queues 19AC  
       i2c_slave_int_handler@length 00A9                 __size_of_uart_trans 00B4  
                     OpenADC@config 018A                            _LATBbits 000F8A  
                   i2check_msg@qptr 002D                          ?_check_msg 0186  
                          _IPR1bits 000F9F                            _PIE1bits 000F9D  
                     ?i2_in_low_int 002F      i2c_slave_int_handler@sensormsg 0098  
                          i2u333_41 0720                            i2u335_41 0766  
                          _PIR1bits 000F9E              ToMainHigh_sendmsg@data 0093  
                          _RCONbits 000FD0                    __CFG_WDTPS$32768 000000  
                         main@F5212 01EA                ??_timer0_int_handler 0031  
        __size_of_enable_interrupts 0008                   i1send_msg@msgtype 000E  
                 i1send_msg@tlength 0012                          _ADCON0bits 000FC2  
              timer0_lthread@length 018A                  _timer1_int_handler 1FD0  
                          i1_memcpy 1CEC                _InterruptHandlerHigh 0008  
                       ??_ReadUSART 0001                            i2_memcpy 1B42  
              timer0_lthread@msgval 018E                         _in_high_int 1F88  
                      send_msg@data 0194                 _i2c_configure_slave 1E5E  
                      send_msg@qmsg 019A                        send_msg@slot 0199  
                      send_msg@qptr 0190                           copy_data0 1ACE  
               ?_timer1_int_handler 0001                  i2___awmod@dividend 002D  
                   ?_init_uart_recv 0186                         ??_OpenUSART 0188  
                   OpenUSART@config 018B                      ??i2_in_low_int 0031  
             _uart_recv_int_handler 122E                        ??_in_low_int 018A  
                          __Hrparam 0000                    __size_of_OpenADC 0084  
              ?_i2c_configure_slave 0001                            __Lrparam 0000  
                 ?_enter_sleep_mode 0001              ??_FromMainHigh_sendmsg 019F  
                 i1___awmod@divisor 0003                ??_timer1_int_handler 0005  
                 i1___awmod@counter 0006                     _adc_int_handler 1ED0  
          __size_of_i2c_int_handler 0006                    __size_of___awmod 010E  
                ??_enter_sleep_mode 002D            __size_of_i2c_master_send 013E  
                  __size_of___lwmod 008A                        ??_init_queue 0188  
                      ?_WriteTimer0 002D                        ?_WriteTimer1 0001  
          FromMainHigh_sendmsg@data 019D             ToMainLow_sendmsg@length 001A  
            ?_i2c_slave_int_handler 0001                   main@t0thread_data 01BA  
             ?_InterruptHandlerHigh 0001                    __size_of_in_main 0044  
                 i2send_msg@msgtype 0089         ToMainHigh_recvmsg@maxlength 01A2  
                 i2send_msg@tlength 008D             init_timer1_lthread@tptr 0186  
                       _init_queues 193E                  __end_of_in_low_int 1C24  
                          __ptext10 1852                            __ptext11 19AC  
                          __ptext20 1F4E                            __ptext12 0BE0  
                          __ptext21 1C68                            __ptext13 1E5E  
                          __ptext30 16CE                            __ptext22 1CAA  
                          __ptext14 1FF4                            __ptext23 0A82  
                          __ptext15 17D4                            __ptext40 1F9A  
                          __ptext32 1A16                            __ptext24 1AE4  
                          __ptext16 1C24                            __ptext41 1ED0  
                          __ptext33 122E                            __ptext25 0F64  
                          __ptext17 1BDE                            __ptext50 0E4A  
                          __ptext34 1E86                            __ptext26 1EF2  
                          __ptext18 1F88                            __ptext51 1B42  
                          __ptext43 1FAC                            __ptext35 12EE  
                          __ptext27 15B2                            __ptext19 1D9A  
                          __ptext52 1462                            __ptext44 1FBE  
                          __ptext36 1CEC                            __ptext28 1D2C  
                          __ptext53 1B90                            __ptext45 1FFC  
                          __ptext37 1516                            __ptext29 1E34  
                          __ptext54 1E06                            __ptext46 00CA  
                          __ptext38 1F30                            __ptext55 1FDE  
                          __ptext47 1072                            __ptext39 1FD0  
                          __ptext56 1EAC                            __ptext48 1166  
                          __ptext57 2002                            __ptext49 1DD0  
                    i1send_msg@data 000F                      i1send_msg@qmsg 0015  
                    i1send_msg@slot 0014                      i1send_msg@qptr 000B  
                          _init_i2c 19AC                 _init_timer1_lthread 1F76  
                     __size_of_main 02EC                       ??i2_check_msg 002F  
                 main@t1thread_data 01BC                         ??_check_msg 0188  
                __end_of_init_queue 18CC                __size_of_SleepIfOkay 004E  
                          _recv_msg 0A82    i2c_slave_int_handler@msg_to_send 00A8  
             ??_i2c_configure_slave 0186                            _send_msg 0D1E  
                    init_queue@qptr 0186                       ??_Delay1KTCYx 0186  
                  uart_trans@length 018A                        ??_uart_trans 0188  
               _InterruptHandlerLow 0018                ?_init_timer1_lthread 0186  
          ??_uart_trans_int_handler 0001                   i2___awmod@divisor 002F  
                 i2___awmod@counter 0080                         _OSCTUNEbits 000F9B  
                        _INTCONbits 000FF2                        _UART_timeout 004E  
                    OpenUSART@spbrg 0186                            memcpy@d1 0186  
                          memcpy@s1 0188               __end_ofi2_in_high_int 1FEA  
                  i2send_msg@length 0088                            intlevel1 0000  
                          intlevel2 0000                ?_InterruptHandlerLow 0001  
           ??_start_i2c_slave_reply 002F                    ___lwmod@dividend 0186  
            ?_uart_recv_int_handler 0001                  __end_of_uart_trans 1462  
                 SetChanADC@channel 0187               _block_on_To_msgqueues 17D4  
                     ?_handle_start 0001                    ??_timer0_lthread 018E  
       __size_of_ToMainHigh_recvmsg 0042             __end_of_adc_int_handler 1EF2  
       __size_of_ToMainHigh_sendmsg 0036                          _OSCCONbits 000FD3  
                  ??_timer1_lthread 01A8            ToMainHigh_sendmsg@length 0095  
               __end_ofi2_check_msg 1ED0               ??_init_timer1_lthread 0188  
            ??_InterruptHandlerHigh 00AD                   _ToMainLow_recvmsg 1C68  
                 _ToMainLow_sendmsg 1E86                  main@last_reg_recvd 01AE  
                   ___lwmod@divisor 0188                __end_ofi2_in_low_int 1E34  
                ?_ToMainLow_recvmsg 019E                 __end_of_Delay1KTCYx 1F64  
                 ??_i2c_int_handler 0032                     ___lwmod@counter 018B  
                ?_ToMainLow_sendmsg 0017                   ??_i2c_master_send 018A  
                i2c_master_send@msg 0187                      uart_trans@data 0186  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
                    i2send_msg@data 008A               ??_InterruptHandlerLow 001C  
               ??_ToMainLow_recvmsg 01A2                      i2send_msg@qmsg 0090  
                    i2send_msg@slot 008F                      i2send_msg@qptr 0086  
               ??_ToMainLow_sendmsg 001A       i2c_slave_int_handler@i2c_data 00A7  
                    ??_handle_start 002D                        _USART_Status 0051  
