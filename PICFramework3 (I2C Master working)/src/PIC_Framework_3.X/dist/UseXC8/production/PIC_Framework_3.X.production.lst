

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Mar 03 23:50:24 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    79                           	psect	param0,global,class=BANK0,space=1,delta=1
    80  0000                     
    81                           	psect	idataCOMRAM
    82  001C26                     __pidataCOMRAM:
    83                           	opt stack 0
    84                           
    85                           ;initializer for i2c_slave_int_handler@F5127
    86  001C26  01                 	db	1
    87  001C27  01                 	db	1
    88  001C28  02                 	db	2
    89  001C29  03                 	db	3
    90  001C2A  07                 	db	7
    91                           
    92                           ;initializer for i2c_slave_int_handler@F5129
    93  001C2B  02                 	db	2
    94  001C2C  03                 	db	3
    95  001C2D  04                 	db	4
    96  001C2E  09                 	db	9
    97  001C2F  00                 	db	0
    98                           
    99                           	psect	idataBANK0
   100  001C48                     __pidataBANK0:
   101                           	opt stack 0
   102                           
   103                           ;initializer for main@F5211
   104  001C48  01                 	db	1
   105  001C49  02                 	db	2
   106  0000                     _ADCON0	set	4034
   107  0000                     _ADCON0bits	set	4034
   108  0000                     _ADCON1	set	4033
   109  0000                     _ADCON2	set	4032
   110  0000                     _ADRESH	set	4036
   111  0000                     _INTCONbits	set	4082
   112  0000                     _IPR1bits	set	3999
   113  0000                     _LATA	set	3977
   114  0000                     _LATB	set	3978
   115  0000                     _LATBbits	set	3978
   116  0000                     _OSCCON	set	4051
   117  0000                     _OSCCONbits	set	4051
   118  0000                     _OSCTUNEbits	set	3995
   119  0000                     _PIE1bits	set	3997
   120  0000                     _PIR1bits	set	3998
   121  0000                     _PORTA	set	3968
   122  0000                     _RCONbits	set	4048
   123  0000                     _RCREG	set	4014
   124  0000                     _RCSTA	set	4011
   125  0000                     _RCSTAbits	set	4011
   126  0000                     _SPBRG	set	4015
   127  0000                     _SPBRGH	set	4016
   128  0000                     _SSPADD	set	4040
   129  0000                     _SSPBUF	set	4041
   130  0000                     _SSPCON1	set	4038
   131  0000                     _SSPCON1bits	set	4038
   132  0000                     _SSPCON2	set	4037
   133  0000                     _SSPCON2bits	set	4037
   134  0000                     _SSPSTAT	set	4039
   135  0000                     _SSPSTATbits	set	4039
   136  0000                     _T0CON	set	4053
   137  0000                     _T0CONbits	set	4053
   138  0000                     _T1CON	set	4045
   139  0000                     _T1CONbits	set	4045
   140  0000                     _TMR0H	set	4055
   141  0000                     _TMR0L	set	4054
   142  0000                     _TMR1H	set	4047
   143  0000                     _TMR1L	set	4046
   144  0000                     _TRISA	set	3986
   145  0000                     _TRISB	set	3987
   146  0000                     _TRISC	set	3988
   147  0000                     _TRISCbits	set	3988
   148  0000                     _TXREG	set	4013
   149  0000                     _TXSTA	set	4012
   150  0000                     _TXSTAbits	set	4012
   151                           
   152                           	psect	nvCOMRAM
   153  000055                     __pnvCOMRAM:
   154                           	opt stack 0
   155  000055                     _uc_ptr:
   156                           	opt stack 0
   157  000055                     	ds	2
   158                           
   159                           	psect	nvBANK0
   160  0000CF                     __pnvBANK0:
   161                           	opt stack 0
   162  0000CF                     _ic_ptr:
   163                           	opt stack 0
   164  0000CF                     	ds	2
   165                           
   166                           ; #config settings
   167  0000                     
   168                           	psect	cinit
   169  001666                     __pcinit:
   170                           	opt stack 0
   171  001666                     start_initialization:
   172                           	opt stack 0
   173  001666                     __initialization:
   174                           	opt stack 0
   175                           
   176                           ; Clear objects allocated to BANK2 (67 bytes)
   177  001666  EE02  F000         	lfsr	0,__pbssBANK2
   178  00166A  0E43               	movlw	67
   179  00166C                     clear_0:
   180  00166C  6AEE               	clrf	postinc0,c
   181  00166E  06E8               	decf	wreg,f,c
   182  001670  E1FD               	bnz	clear_0
   183                           
   184                           ; Clear objects allocated to BANK1 (201 bytes)
   185  001672  EE01  F000         	lfsr	0,__pbssBANK1
   186  001676  0EC9               	movlw	201
   187  001678                     clear_1:
   188  001678  6AEE               	clrf	postinc0,c
   189  00167A  06E8               	decf	wreg,f,c
   190  00167C  E1FD               	bnz	clear_1
   191                           
   192                           ; Clear objects allocated to COMRAM (30 bytes)
   193  00167E  EE00  F02D         	lfsr	0,__pbssCOMRAM
   194  001682  0E1E               	movlw	30
   195  001684                     clear_2:
   196  001684  6AEE               	clrf	postinc0,c
   197  001686  06E8               	decf	wreg,f,c
   198  001688  E1FD               	bnz	clear_2
   199                           
   200                           ; Initialize objects allocated to BANK0 (2 bytes)
   201                           ; load TBLPTR registers with __pidataBANK0
   202  00168A  0E48               	movlw	low __pidataBANK0
   203  00168C  6EF6               	movwf	tblptrl,c
   204  00168E  0E1C               	movlw	high __pidataBANK0
   205  001690  6EF7               	movwf	tblptrh,c
   206  001692  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   207  001694  6EF8               	movwf	tblptru,c
   208  001696  0009               	tblrd		*+	;fetch initializer
   209  001698  CFF5 F0D1          	movff	tablat,__pdataBANK0
   210  00169C  0009               	tblrd		*+	;fetch initializer
   211  00169E  CFF5 F0D2          	movff	tablat,__pdataBANK0+1
   212                           
   213                           ; Initialize objects allocated to COMRAM (10 bytes)
   214                           ; load TBLPTR registers with __pidataCOMRAM
   215  0016A2  0E26               	movlw	low __pidataCOMRAM
   216  0016A4  6EF6               	movwf	tblptrl,c
   217  0016A6  0E1C               	movlw	high __pidataCOMRAM
   218  0016A8  6EF7               	movwf	tblptrh,c
   219  0016AA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   220  0016AC  6EF8               	movwf	tblptru,c
   221  0016AE  EE00  F04B         	lfsr	0,__pdataCOMRAM
   222  0016B2  EE10 F00A          	lfsr	1,10
   223  0016B6                     copy_data0:
   224  0016B6  0009               	tblrd		*+
   225  0016B8  CFF5 FFEE          	movff	tablat,postinc0
   226  0016BC  50E5               	movf	postdec1,w,c
   227  0016BE  50E1               	movf	fsr1l,w,c
   228  0016C0  E1FA               	bnz	copy_data0
   229  0016C2                     end_of_initialization:
   230                           	opt stack 0
   231  0016C2                     __end_of__initialization:
   232                           	opt stack 0
   233  0016C2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   234  0016C4  6EF8               	movwf	tblptru,c
   235  0016C6  0100               	movlb	0
   236  0016C8  EF45  F002         	goto	_main	;jump to C main() function
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           tblptrl	equ	0xFF6
   240                           tablat	equ	0xFF5
   241                           postinc0	equ	0xFEE
   242                           wreg	equ	0xFE8
   243                           postdec1	equ	0xFE5
   244                           fsr1l	equ	0xFE1
   245                           
   246                           	psect	bssCOMRAM
   247  00002D                     __pbssCOMRAM:
   248                           	opt stack 0
   249  00002D                     _adcbuffer:
   250                           	opt stack 0
   251  00002D                     	ds	28
   252  000049                     _MQ_Main_Willing_to_block:
   253                           	opt stack 0
   254  000049                     	ds	1
   255  00004A                     _USART_Status:
   256                           	opt stack 0
   257  00004A                     	ds	1
   258                           tblptru	equ	0xFF8
   259                           tblptrh	equ	0xFF7
   260                           tblptrl	equ	0xFF6
   261                           tablat	equ	0xFF5
   262                           postinc0	equ	0xFEE
   263                           wreg	equ	0xFE8
   264                           postdec1	equ	0xFE5
   265                           fsr1l	equ	0xFE1
   266                           
   267                           	psect	dataCOMRAM
   268  00004B                     __pdataCOMRAM:
   269                           	opt stack 0
   270  00004B                     i2c_slave_int_handler@F5127:
   271                           	opt stack 0
   272  00004B                     	ds	5
   273  000050                     i2c_slave_int_handler@F5129:
   274                           	opt stack 0
   275  000050                     	ds	5
   276                           tblptru	equ	0xFF8
   277                           tblptrh	equ	0xFF7
   278                           tblptrl	equ	0xFF6
   279                           tablat	equ	0xFF5
   280                           postinc0	equ	0xFEE
   281                           wreg	equ	0xFE8
   282                           postdec1	equ	0xFE5
   283                           fsr1l	equ	0xFE1
   284                           
   285                           	psect	dataBANK0
   286  0000D1                     __pdataBANK0:
   287                           	opt stack 0
   288  0000D1                     main@F5211:
   289                           	opt stack 0
   290  0000D1                     	ds	2
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           postdec1	equ	0xFE5
   298                           fsr1l	equ	0xFE1
   299                           
   300                           	psect	bssBANK1
   301  000100                     __pbssBANK1:
   302                           	opt stack 0
   303  000100                     _FromMainLow_MQ:
   304                           	opt stack 0
   305  000100                     	ds	67
   306  000143                     _ToMainHigh_MQ:
   307                           	opt stack 0
   308  000143                     	ds	67
   309  000186                     _ToMainLow_MQ:
   310                           	opt stack 0
   311  000186                     	ds	67
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           postdec1	equ	0xFE5
   319                           fsr1l	equ	0xFE1
   320                           
   321                           	psect	bssBANK2
   322  000200                     __pbssBANK2:
   323                           	opt stack 0
   324  000200                     _FromMainHigh_MQ:
   325                           	opt stack 0
   326  000200                     	ds	67
   327                           tblptru	equ	0xFF8
   328                           tblptrh	equ	0xFF7
   329                           tblptrl	equ	0xFF6
   330                           tablat	equ	0xFF5
   331                           postinc0	equ	0xFEE
   332                           wreg	equ	0xFE8
   333                           postdec1	equ	0xFE5
   334                           fsr1l	equ	0xFE1
   335                           
   336                           	psect	cstackBANK2
   337  000243                     __pcstackBANK2:
   338                           	opt stack 0
   339  000243                     main@msg:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x0
   343  000243                     	ds	2
   344  000245                     main@last_reg_recvd:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x2
   348  000245                     	ds	1
   349  000246                     main@msgbuffer:
   350                           	opt stack 0
   351                           
   352                           ; 11 bytes @ 0x3
   353  000246                     	ds	11
   354  000251                     main@t0thread_data:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0xE
   358  000251                     	ds	2
   359  000253                     main@t1thread_data:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x10
   363  000253                     	ds	2
   364  000255                     main@msgtype:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x12
   368  000255                     	ds	1
   369  000256                     main@length:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x13
   373  000256                     	ds	1
   374  000257                     main@uc:
   375                           	opt stack 0
   376                           
   377                           ; 13 bytes @ 0x14
   378  000257                     	ds	13
   379  000264                     main@ic:
   380                           	opt stack 0
   381                           
   382                           ; 29 bytes @ 0x21
   383  000264                     	ds	29
   384                           tblptru	equ	0xFF8
   385                           tblptrh	equ	0xFF7
   386                           tblptrl	equ	0xFF6
   387                           tablat	equ	0xFF5
   388                           postinc0	equ	0xFEE
   389                           wreg	equ	0xFE8
   390                           postdec1	equ	0xFE5
   391                           fsr1l	equ	0xFE1
   392                           
   393                           	psect	cstackBANK1
   394  0001C9                     __pcstackBANK1:
   395                           	opt stack 0
   396  0001C9                     ??_timer1_lthread:
   397                           
   398                           ; 0 bytes @ 0x0
   399  0001C9                     	ds	1
   400  0001CA                     timer1_lthread@retval:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x1
   404  0001CA                     	ds	1
   405  0001CB                     ??_main:
   406                           
   407                           ; 0 bytes @ 0x2
   408  0001CB                     	ds	2
   409                           tblptru	equ	0xFF8
   410                           tblptrh	equ	0xFF7
   411                           tblptrl	equ	0xFF6
   412                           tablat	equ	0xFF5
   413                           postinc0	equ	0xFEE
   414                           wreg	equ	0xFE8
   415                           postdec1	equ	0xFE5
   416                           fsr1l	equ	0xFE1
   417                           
   418                           	psect	cstackBANK0
   419  000080                     __pcstackBANK0:
   420                           	opt stack 0
   421  000080                     ?i2_in_high_int:
   422                           	opt stack 0
   423  000080                     ?i2___awmod:
   424                           	opt stack 0
   425  000080                     i2c_master_recv@length:
   426                           	opt stack 0
   427  000080                     WriteTimer0@timer0:
   428                           	opt stack 0
   429  000080                     i2check_msg@qptr:
   430                           	opt stack 0
   431  000080                     i2memcpy@d1:
   432                           	opt stack 0
   433  000080                     i2___awmod@dividend:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x0
   437  000080                     	ds	2
   438  000082                     ??i2_check_msg:
   439  000082                     ?i2_in_low_int:
   440                           	opt stack 0
   441  000082                     WriteTimer0@timer:
   442                           	opt stack 0
   443  000082                     i2memcpy@s1:
   444                           	opt stack 0
   445  000082                     i2___awmod@divisor:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x2
   449  000082                     	ds	2
   450  000084                     ??i2___awmod:
   451  000084                     i2memcpy@n:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x4
   455  000084                     	ds	1
   456  000085                     i2___awmod@counter:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x5
   460  000085                     	ds	1
   461  000086                     i2___awmod@sign:
   462                           	opt stack 0
   463  000086                     i2memcpy@d:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x6
   467  000086                     	ds	2
   468  000088                     i2memcpy@s:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x8
   472  000088                     	ds	2
   473  00008A                     i2send_msg@qptr:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0xA
   477  00008A                     	ds	2
   478  00008C                     i2send_msg@length:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0xC
   482  00008C                     	ds	1
   483  00008D                     i2send_msg@msgtype:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0xD
   487  00008D                     	ds	1
   488  00008E                     i2send_msg@data:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0xE
   492  00008E                     	ds	2
   493  000090                     ??i2_send_msg:
   494                           
   495                           ; 0 bytes @ 0x10
   496  000090                     	ds	1
   497  000091                     i2send_msg@tlength:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x11
   501  000091                     	ds	2
   502  000093                     i2send_msg@slot:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x13
   506  000093                     	ds	1
   507  000094                     i2send_msg@qmsg:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x14
   511  000094                     	ds	2
   512  000096                     ToMainHigh_sendmsg@msgtype:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x16
   516  000096                     	ds	1
   517  000097                     ToMainHigh_sendmsg@data:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x17
   521  000097                     	ds	2
   522  000099                     ToMainHigh_sendmsg@length:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x19
   526  000099                     	ds	1
   527  00009A                     ??_i2c_master_int_handler:
   528                           
   529                           ; 0 bytes @ 0x1A
   530  00009A                     	ds	5
   531  00009F                     ??_InterruptHandlerHigh:
   532                           
   533                           ; 0 bytes @ 0x1F
   534  00009F                     	ds	14
   535  0000AD                     ??_SetChanADC:
   536  0000AD                     ?_in_high_int:
   537                           	opt stack 0
   538  0000AD                     ?___awmod:
   539                           	opt stack 0
   540  0000AD                     ?___lwmod:
   541                           	opt stack 0
   542  0000AD                     i2c_master_send@recvlength:
   543                           	opt stack 0
   544  0000AD                     OpenADC@config2:
   545                           	opt stack 0
   546  0000AD                     OpenTimer0@config:
   547                           	opt stack 0
   548  0000AD                     OpenTimer1@config:
   549                           	opt stack 0
   550  0000AD                     Delay1KTCYx@unit:
   551                           	opt stack 0
   552  0000AD                     init_queue@qptr:
   553                           	opt stack 0
   554  0000AD                     check_msg@qptr:
   555                           	opt stack 0
   556  0000AD                     init_i2c@ic:
   557                           	opt stack 0
   558  0000AD                     init_uart_recv@uc:
   559                           	opt stack 0
   560  0000AD                     uart_trans@data:
   561                           	opt stack 0
   562  0000AD                     timer0_lthread@tptr:
   563                           	opt stack 0
   564  0000AD                     init_timer1_lthread@tptr:
   565                           	opt stack 0
   566  0000AD                     OpenUSART@spbrg:
   567                           	opt stack 0
   568  0000AD                     ___awmod@dividend:
   569                           	opt stack 0
   570  0000AD                     ___lwmod@dividend:
   571                           	opt stack 0
   572  0000AD                     memcpy@d1:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x2D
   576  0000AD                     	ds	1
   577  0000AE                     OpenADC@portconfig:
   578                           	opt stack 0
   579  0000AE                     SetChanADC@channel:
   580                           	opt stack 0
   581  0000AE                     i2c_master_send@msg:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x2E
   585  0000AE                     	ds	1
   586  0000AF                     ??_OpenUSART:
   587  0000AF                     ??_OpenADC:
   588  0000AF                     ??_uart_trans:
   589  0000AF                     ??_init_queue:
   590  0000AF                     ??_check_msg:
   591  0000AF                     ?_in_low_int:
   592                           	opt stack 0
   593  0000AF                     timer0_lthread@msgtype:
   594                           	opt stack 0
   595  0000AF                     ___awmod@divisor:
   596                           	opt stack 0
   597  0000AF                     ___lwmod@divisor:
   598                           	opt stack 0
   599  0000AF                     memcpy@s1:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x2F
   603  0000AF                     	ds	1
   604  0000B0                     init_queue@i:
   605                           	opt stack 0
   606  0000B0                     i2c_master_send@slave_addr:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x30
   610  0000B0                     	ds	1
   611  0000B1                     ??_init_queues:
   612  0000B1                     ??_i2c_master_send:
   613  0000B1                     ??___awmod:
   614  0000B1                     ??___lwmod:
   615  0000B1                     ?_in_main:
   616                           	opt stack 0
   617  0000B1                     uart_trans@length:
   618                           	opt stack 0
   619  0000B1                     OpenADC@config:
   620                           	opt stack 0
   621  0000B1                     timer0_lthread@length:
   622                           	opt stack 0
   623  0000B1                     memcpy@n:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x31
   627  0000B1                     	ds	1
   628  0000B2                     OpenUSART@config:
   629                           	opt stack 0
   630  0000B2                     ___awmod@counter:
   631                           	opt stack 0
   632  0000B2                     ___lwmod@counter:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x32
   636  0000B2                     	ds	1
   637  0000B3                     ??_block_on_To_msgqueues:
   638  0000B3                     i2c_master_send@sendlength:
   639                           	opt stack 0
   640  0000B3                     ___awmod@sign:
   641                           	opt stack 0
   642  0000B3                     timer0_lthread@msgbuffer:
   643                           	opt stack 0
   644  0000B3                     memcpy@d:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x33
   648  0000B3                     	ds	2
   649  0000B5                     timer0_lthread@msgval:
   650                           	opt stack 0
   651  0000B5                     memcpy@s:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x35
   655  0000B5                     	ds	2
   656  0000B7                     send_msg@qptr:
   657                           	opt stack 0
   658  0000B7                     recv_msg@qptr:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x37
   662  0000B7                     	ds	2
   663  0000B9                     send_msg@length:
   664                           	opt stack 0
   665  0000B9                     recv_msg@maxlength:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0x39
   669  0000B9                     	ds	1
   670  0000BA                     send_msg@msgtype:
   671                           	opt stack 0
   672  0000BA                     recv_msg@msgtype:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x3A
   676  0000BA                     	ds	1
   677  0000BB                     send_msg@data:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x3B
   681  0000BB                     	ds	1
   682  0000BC                     recv_msg@data:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x3C
   686  0000BC                     	ds	1
   687  0000BD                     ??_send_msg:
   688                           
   689                           ; 0 bytes @ 0x3D
   690  0000BD                     	ds	1
   691  0000BE                     ??_recv_msg:
   692  0000BE                     send_msg@tlength:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x3E
   696  0000BE                     	ds	2
   697  0000C0                     send_msg@slot:
   698                           	opt stack 0
   699  0000C0                     recv_msg@slot:
   700                           	opt stack 0
   701                           
   702                           ; 1 bytes @ 0x40
   703  0000C0                     	ds	1
   704  0000C1                     send_msg@qmsg:
   705                           	opt stack 0
   706  0000C1                     recv_msg@tlength:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0x41
   710  0000C1                     	ds	2
   711  0000C3                     FromMainHigh_sendmsg@msgtype:
   712                           	opt stack 0
   713  0000C3                     recv_msg@qmsg:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x43
   717  0000C3                     	ds	1
   718  0000C4                     FromMainHigh_sendmsg@data:
   719                           	opt stack 0
   720                           
   721                           ; 2 bytes @ 0x44
   722  0000C4                     	ds	1
   723  0000C5                     ToMainLow_recvmsg@msgtype:
   724                           	opt stack 0
   725  0000C5                     ToMainHigh_recvmsg@msgtype:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x45
   729  0000C5                     	ds	1
   730  0000C6                     FromMainHigh_sendmsg@length:
   731                           	opt stack 0
   732                           
   733                           ; 1 bytes @ 0x46
   734  0000C6                     	ds	1
   735  0000C7                     ToMainLow_recvmsg@data:
   736                           	opt stack 0
   737  0000C7                     ToMainHigh_recvmsg@data:
   738                           	opt stack 0
   739  0000C7                     timer1_lthread@tptr:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x47
   743  0000C7                     	ds	2
   744  0000C9                     ToMainLow_recvmsg@maxlength:
   745                           	opt stack 0
   746  0000C9                     ToMainHigh_recvmsg@maxlength:
   747                           	opt stack 0
   748  0000C9                     timer1_lthread@msgtype:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x49
   752  0000C9                     	ds	2
   753  0000CB                     timer1_lthread@length:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x4B
   757  0000CB                     	ds	2
   758  0000CD                     timer1_lthread@msgbuffer:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x4D
   762  0000CD                     	ds	2
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           postdec1	equ	0xFE5
   770                           fsr1l	equ	0xFE1
   771                           
   772                           	psect	cstackCOMRAM
   773  000001                     __pcstackCOMRAM:
   774                           	opt stack 0
   775  000001                     ??_uart_trans_int_handler:
   776  000001                     ?i1___awmod:
   777                           	opt stack 0
   778  000001                     ReadUSART@data:
   779                           	opt stack 0
   780  000001                     WriteTimer1@timer1:
   781                           	opt stack 0
   782  000001                     i1memcpy@d1:
   783                           	opt stack 0
   784  000001                     i1___awmod@dividend:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0x0
   788  000001                     	ds	2
   789  000003                     WriteTimer1@timer:
   790                           	opt stack 0
   791  000003                     i1memcpy@s1:
   792                           	opt stack 0
   793  000003                     i1___awmod@divisor:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0x2
   797  000003                     	ds	2
   798  000005                     ??i1___awmod:
   799  000005                     i1memcpy@n:
   800                           	opt stack 0
   801                           
   802                           ; 2 bytes @ 0x4
   803  000005                     	ds	1
   804  000006                     i1___awmod@counter:
   805                           	opt stack 0
   806                           
   807                           ; 1 bytes @ 0x5
   808  000006                     	ds	1
   809  000007                     i1___awmod@sign:
   810                           	opt stack 0
   811  000007                     i1memcpy@d:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x6
   815  000007                     	ds	2
   816  000009                     i1memcpy@s:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x8
   820  000009                     	ds	2
   821  00000B                     i1send_msg@qptr:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0xA
   825  00000B                     	ds	2
   826  00000D                     i1send_msg@length:
   827                           	opt stack 0
   828                           
   829                           ; 1 bytes @ 0xC
   830  00000D                     	ds	1
   831  00000E                     i1send_msg@msgtype:
   832                           	opt stack 0
   833                           
   834                           ; 1 bytes @ 0xD
   835  00000E                     	ds	1
   836  00000F                     i1send_msg@data:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0xE
   840  00000F                     	ds	2
   841  000011                     ??i1_send_msg:
   842                           
   843                           ; 0 bytes @ 0x10
   844  000011                     	ds	1
   845  000012                     i1send_msg@tlength:
   846                           	opt stack 0
   847                           
   848                           ; 2 bytes @ 0x11
   849  000012                     	ds	2
   850  000014                     i1send_msg@slot:
   851                           	opt stack 0
   852                           
   853                           ; 1 bytes @ 0x13
   854  000014                     	ds	1
   855  000015                     i1send_msg@qmsg:
   856                           	opt stack 0
   857                           
   858                           ; 2 bytes @ 0x14
   859  000015                     	ds	2
   860  000017                     ToMainLow_sendmsg@msgtype:
   861                           	opt stack 0
   862                           
   863                           ; 1 bytes @ 0x16
   864  000017                     	ds	1
   865  000018                     ToMainLow_sendmsg@data:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0x17
   869  000018                     	ds	2
   870  00001A                     ToMainLow_sendmsg@length:
   871                           	opt stack 0
   872                           
   873                           ; 1 bytes @ 0x19
   874  00001A                     	ds	1
   875  00001B                     ??_uart_recv_int_handler:
   876                           
   877                           ; 0 bytes @ 0x1A
   878  00001B                     	ds	1
   879  00001C                     ??_InterruptHandlerLow:
   880                           
   881                           ; 0 bytes @ 0x1B
   882  00001C                     	ds	17
   883                           tblptru	equ	0xFF8
   884                           tblptrh	equ	0xFF7
   885                           tblptrl	equ	0xFF6
   886                           tablat	equ	0xFF5
   887                           postinc0	equ	0xFEE
   888                           wreg	equ	0xFE8
   889                           postdec1	equ	0xFE5
   890                           fsr1l	equ	0xFE1
   891                           
   892 ;;
   893 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   894 ;;
   895 ;; *************** function _main *****************
   896 ;; Defined at:
   897 ;;		line 186 in file "../src/main.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  ic             29   33[BANK2 ] struct __i2c_comm
   902 ;;  uc             13   20[BANK2 ] struct __uart_comm
   903 ;;  msgbuffer      11    3[BANK2 ] unsigned char [11]
   904 ;;  t1thread_dat    2   16[BANK2 ] struct __timer1_thread_s
   905 ;;  t0thread_dat    2   14[BANK2 ] struct __timer0_thread_s
   906 ;;  msg             2    0[BANK2 ] unsigned char [2]
   907 ;;  uthread_data    2    0        struct __uart_thread_str
   908 ;;  length          1   19[BANK2 ] char 
   909 ;;  msgtype         1   18[BANK2 ] unsigned char 
   910 ;;  last_reg_rec    1    2[BANK2 ] unsigned char 
   911 ;;  i               1    0        unsigned char 
   912 ;;  c               1    0        unsigned char 
   913 ;; Return value:  Size  Location     Type
   914 ;;		None               void
   915 ;; Registers used:
   916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   922 ;;      Params:         0       0       0       0       0
   923 ;;      Locals:         0       0       0      62       0
   924 ;;      Temps:          0       0       2       0       0
   925 ;;      Totals:         0       0       2      62       0
   926 ;;Total ram usage:       64 bytes
   927 ;; Hardware stack levels required when called:   15
   928 ;; This function calls:
   929 ;;		_OpenADC
   930 ;;		_OpenTimer0
   931 ;;		_OpenTimer1
   932 ;;		_OpenUSART
   933 ;;		_SetChanADC
   934 ;;		_ToMainHigh_recvmsg
   935 ;;		_ToMainLow_recvmsg
   936 ;;		_block_on_To_msgqueues
   937 ;;		_enable_interrupts
   938 ;;		_i2c_configure_master
   939 ;;		_i2c_master_send
   940 ;;		_init_i2c
   941 ;;		_init_queues
   942 ;;		_init_timer1_lthread
   943 ;;		_init_uart_recv
   944 ;;		_timer0_lthread
   945 ;;		_timer1_lthread
   946 ;;		_uart_trans
   947 ;; This function is called by:
   948 ;;		Startup code after reset
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text0
   953  00048A                     __ptext0:
   954                           	opt stack 0
   955  00048A                     _main:
   956                           	opt stack 16
   957                           
   958                           ;main.c: 187: char c;
   959                           ;main.c: 188: signed char length;
   960                           ;main.c: 189: unsigned char msgtype;
   961                           ;main.c: 190: unsigned char last_reg_recvd;
   962                           ;main.c: 191: uart_comm uc;
   963                           ;main.c: 192: i2c_comm ic;
   964                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
   965                           ;main.c: 194: unsigned char i;
   966                           ;main.c: 195: uart_thread_struct uthread_data;
   967                           ;main.c: 196: timer1_thread_struct t1thread_data;
   968                           ;main.c: 197: timer0_thread_struct t0thread_data;
   969                           ;main.c: 205: OSCCON = 0x82;
   970                           
   971                           ;incstack = 0
   972  00048A  0E82               	movlw	130
   973  00048C  6ED3               	movwf	4051,c	;volatile
   974                           
   975                           ;main.c: 206: OSCTUNEbits.PLLEN = 0;
   976  00048E  9C9B               	bcf	3995,6,c	;volatile
   977                           
   978                           ;main.c: 224: init_uart_recv(&uc);
   979  000490  0102               	movlb	2	; () banked
   980  000492  0E02               	movlw	high main@uc
   981  000494  0100               	movlb	0	; () banked
   982  000496  0100               	movlb	0	; () banked
   983  000498  6FAE               	movwf	(init_uart_recv@uc+1)& (0+255),b
   984  00049A  0102               	movlb	2	; () banked
   985  00049C  0E57               	movlw	low main@uc
   986  00049E  0100               	movlb	0	; () banked
   987  0004A0  0100               	movlb	0	; () banked
   988  0004A2  6FAD               	movwf	init_uart_recv@uc& (0+255),b
   989  0004A4  ECA1  F00D         	call	_init_uart_recv	;wreg free
   990                           
   991                           ;main.c: 227: init_i2c(&ic);
   992  0004A8  0102               	movlb	2	; () banked
   993  0004AA  0E02               	movlw	high main@ic
   994  0004AC  0100               	movlb	0	; () banked
   995  0004AE  0100               	movlb	0	; () banked
   996  0004B0  6FAE               	movwf	(init_i2c@ic+1)& (0+255),b
   997  0004B2  0102               	movlb	2	; () banked
   998  0004B4  0E64               	movlw	low main@ic
   999  0004B6  0100               	movlb	0	; () banked
  1000  0004B8  0100               	movlb	0	; () banked
  1001  0004BA  6FAD               	movwf	init_i2c@ic& (0+255),b
  1002  0004BC  EC95  F00A         	call	_init_i2c	;wreg free
  1003                           
  1004                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1005  0004C0  0102               	movlb	2	; () banked
  1006  0004C2  0E02               	movlw	high main@t1thread_data
  1007  0004C4  0100               	movlb	0	; () banked
  1008  0004C6  0100               	movlb	0	; () banked
  1009  0004C8  6FAE               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1010  0004CA  0102               	movlb	2	; () banked
  1011  0004CC  0E53               	movlw	low main@t1thread_data
  1012  0004CE  0100               	movlb	0	; () banked
  1013  0004D0  0100               	movlb	0	; () banked
  1014  0004D2  6FAD               	movwf	init_timer1_lthread@tptr& (0+255),b
  1015  0004D4  ECDF  F00D         	call	_init_timer1_lthread	;wreg free
  1016                           
  1017                           ;main.c: 233: init_queues();
  1018  0004D8  EC5E  F00A         	call	_init_queues	;wreg free
  1019                           
  1020                           ;main.c: 237: TRISB = 0x0;
  1021  0004DC  0E00               	movlw	0
  1022  0004DE  6E93               	movwf	3987,c	;volatile
  1023                           
  1024                           ;main.c: 238: LATB = 0x0;
  1025  0004E0  0E00               	movlw	0
  1026  0004E2  6E8A               	movwf	3978,c	;volatile
  1027                           
  1028                           ;main.c: 240: PORTA = 0x0;
  1029  0004E4  0E00               	movlw	0
  1030  0004E6  6E80               	movwf	3968,c	;volatile
  1031                           
  1032                           ;main.c: 241: LATA = 0x0;
  1033  0004E8  0E00               	movlw	0
  1034  0004EA  6E89               	movwf	3977,c	;volatile
  1035                           
  1036                           ;main.c: 242: TRISA = 0x0F;
  1037  0004EC  0E0F               	movlw	15
  1038  0004EE  6E92               	movwf	3986,c	;volatile
  1039                           
  1040                           ;main.c: 255: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110101);
  1041  0004F0  0ED5               	movlw	213
  1042  0004F2  EC48  F00D         	call	_OpenTimer0
  1043                           
  1044                           ;main.c: 264: OpenTimer1(0b11111111 & 0b10111111 & 0b11001111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1045  0004F6  0E85               	movlw	133
  1046  0004F8  ECC0  F00C         	call	_OpenTimer1
  1047                           
  1048                           ;main.c: 272: IPR1bits.ADIP = 0;
  1049  0004FC  9C9F               	bcf	3999,6,c	;volatile
  1050                           
  1051                           ;main.c: 273: PIE1bits.ADIE = 1;
  1052  0004FE  8C9D               	bsf	3997,6,c	;volatile
  1053                           
  1054                           ;main.c: 275: IPR1bits.TMR1IP = 0;
  1055  000500  909F               	bcf	3999,0,c	;volatile
  1056                           
  1057                           ;main.c: 277: IPR1bits.RCIP = 0;
  1058  000502  9A9F               	bcf	3999,5,c	;volatile
  1059                           
  1060                           ;main.c: 279: IPR1bits.TXIP = 0;
  1061  000504  989F               	bcf	3999,4,c	;volatile
  1062                           
  1063                           ;main.c: 281: IPR1bits.SSPIP = 1;
  1064  000506  869F               	bsf	3999,3,c	;volatile
  1065                           
  1066                           ;main.c: 292: i2c_configure_master();
  1067  000508  EC81  F00D         	call	_i2c_configure_master	;wreg free
  1068                           
  1069                           ;main.c: 317: PIE1bits.SSPIE = 1;
  1070  00050C  869D               	bsf	3997,3,c	;volatile
  1071                           
  1072                           ;main.c: 328: OpenUSART(0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1073                           ;main.c: 329: 0b11111111 & 0b11111111, 38);
  1074  00050E  0E00               	movlw	0
  1075  000510  0100               	movlb	0	; () banked
  1076  000512  0100               	movlb	0	; () banked
  1077  000514  6FAE               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1078  000516  0E26               	movlw	38
  1079  000518  0100               	movlb	0	; () banked
  1080  00051A  6FAD               	movwf	OpenUSART@spbrg& (0+255),b
  1081  00051C  0EFC               	movlw	252
  1082  00051E  EC98  F008         	call	_OpenUSART
  1083                           
  1084                           ;main.c: 330: RCSTAbits.SPEN = 1;
  1085  000522  8EAB               	bsf	4011,7,c	;volatile
  1086                           
  1087                           ;main.c: 331: TRISC = 0xFF;
  1088  000524  6894               	setf	3988,c	;volatile
  1089                           
  1090                           ;main.c: 338: enable_interrupts();
  1091  000526  EC18  F00E         	call	_enable_interrupts	;wreg free
  1092                           
  1093                           ;main.c: 352: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1094                           ;main.c: 353: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1095                           ;main.c: 354: 0b1011);
  1096  00052A  0101               	movlb	1	; () banked
  1097  00052C  6FCB               	movwf	??_main& (0+255),b
  1098  00052E  0E0C               	movlw	12
  1099  000530  0100               	movlb	0	; () banked
  1100  000532  0100               	movlb	0	; () banked
  1101  000534  6FAD               	movwf	OpenADC@config2& (0+255),b
  1102  000536  0101               	movlb	1	; () banked
  1103  000538  51CB               	movf	??_main& (0+255),w,b
  1104  00053A  0101               	movlb	1	; () banked
  1105  00053C  6FCC               	movwf	(??_main+1)& (0+255),b
  1106  00053E  0E0B               	movlw	11
  1107  000540  0100               	movlb	0	; () banked
  1108  000542  0100               	movlb	0	; () banked
  1109  000544  6FAE               	movwf	OpenADC@portconfig& (0+255),b
  1110  000546  0101               	movlb	1	; () banked
  1111  000548  51CC               	movf	(??_main+1)& (0+255),w,b
  1112  00054A  0E53               	movlw	83
  1113  00054C  EC26  F009         	call	_OpenADC
  1114                           
  1115                           ;main.c: 355: SetChanADC(0b10001111);
  1116  000550  0E8F               	movlw	143
  1117  000552  EC91  F00D         	call	_SetChanADC
  1118                           
  1119                           ;main.c: 366: unsigned char msg[2] = {0x01, 0x02};
  1120  000556  C0D1  F243         	movff	main@F5211,main@msg
  1121  00055A  C0D2  F244         	movff	main@F5211+1,main@msg+1
  1122  00055E                     l3645:
  1123                           
  1124                           ;main.c: 377: block_on_To_msgqueues();
  1125  00055E  ECA9  F009         	call	_block_on_To_msgqueues	;wreg free
  1126                           
  1127                           ;main.c: 384: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1128  000562  0102               	movlb	2	; () banked
  1129  000564  0E02               	movlw	high main@msgtype
  1130  000566  0100               	movlb	0	; () banked
  1131  000568  0100               	movlb	0	; () banked
  1132  00056A  6FC6               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1133  00056C  0102               	movlb	2	; () banked
  1134  00056E  0E55               	movlw	low main@msgtype
  1135  000570  0100               	movlb	0	; () banked
  1136  000572  0100               	movlb	0	; () banked
  1137  000574  6FC5               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1138  000576  0102               	movlb	2	; () banked
  1139  000578  0E02               	movlw	high main@msgbuffer
  1140  00057A  0100               	movlb	0	; () banked
  1141  00057C  0100               	movlb	0	; () banked
  1142  00057E  6FC8               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1143  000580  0102               	movlb	2	; () banked
  1144  000582  0E46               	movlw	low main@msgbuffer
  1145  000584  0100               	movlb	0	; () banked
  1146  000586  0100               	movlb	0	; () banked
  1147  000588  6FC7               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1148  00058A  0E0A               	movlw	10
  1149  00058C  EC7F  F00C         	call	_ToMainHigh_recvmsg
  1150  000590  0102               	movlb	2	; () banked
  1151  000592  0102               	movlb	2	; () banked
  1152  000594  6F56               	movwf	main@length& (0+255),b
  1153                           
  1154                           ; BSR set to: 2
  1155                           ;main.c: 385: if (length < 0) {
  1156  000596  0102               	movlb	2	; () banked
  1157  000598  0102               	movlb	2	; () banked
  1158  00059A  BF56               	btfsc	main@length& (0+255),7,b
  1159  00059C  D04D               	goto	l3661
  1160  00059E  D03C               	goto	l3659
  1161  0005A0                     l3653:
  1162                           
  1163                           ; BSR set to: 2
  1164                           ;main.c: 393: {
  1165                           ;main.c: 394: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1166  0005A0  0102               	movlb	2	; () banked
  1167  0005A2  0E02               	movlw	high main@t0thread_data
  1168  0005A4  0100               	movlb	0	; () banked
  1169  0005A6  0100               	movlb	0	; () banked
  1170  0005A8  6FAE               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1171  0005AA  0102               	movlb	2	; () banked
  1172  0005AC  0E51               	movlw	low main@t0thread_data
  1173  0005AE  0100               	movlb	0	; () banked
  1174  0005B0  0100               	movlb	0	; () banked
  1175  0005B2  6FAD               	movwf	timer0_lthread@tptr& (0+255),b
  1176  0005B4  0102               	movlb	2	; () banked
  1177  0005B6  0100               	movlb	0	; () banked
  1178  0005B8  C255  F0AF         	movff	main@msgtype,timer0_lthread@msgtype
  1179  0005BC  0100               	movlb	0	; () banked
  1180  0005BE  0100               	movlb	0	; () banked
  1181  0005C0  6BB0               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1182  0005C2  0102               	movlb	2	; () banked
  1183  0005C4  0102               	movlb	2	; () banked
  1184  0005C6  5156               	movf	main@length& (0+255),w,b
  1185  0005C8  0100               	movlb	0	; () banked
  1186  0005CA  0100               	movlb	0	; () banked
  1187  0005CC  6FB1               	movwf	timer0_lthread@length& (0+255),b
  1188  0005CE  0100               	movlb	0	; () banked
  1189  0005D0  6BB2               	clrf	(timer0_lthread@length+1)& (0+255),b
  1190  0005D2  0100               	movlb	0	; () banked
  1191  0005D4  BFB1               	btfsc	timer0_lthread@length& (0+255),7,b
  1192  0005D6  07B2               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1193  0005D8  0102               	movlb	2	; () banked
  1194  0005DA  0E02               	movlw	high main@msgbuffer
  1195  0005DC  0100               	movlb	0	; () banked
  1196  0005DE  0100               	movlb	0	; () banked
  1197  0005E0  6FB4               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1198  0005E2  0102               	movlb	2	; () banked
  1199  0005E4  0E46               	movlw	low main@msgbuffer
  1200  0005E6  0100               	movlb	0	; () banked
  1201  0005E8  0100               	movlb	0	; () banked
  1202  0005EA  6FB3               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1203  0005EC  ECD6  F00D         	call	_timer0_lthread	;wreg free
  1204                           
  1205                           ;main.c: 395: break;
  1206  0005F0  D023               	goto	l3661
  1207  0005F2                     l128:
  1208                           
  1209                           ;main.c: 398: case 41:
  1210                           ;main.c: 399: {
  1211                           ;main.c: 402: last_reg_recvd = msgbuffer[0];
  1212  0005F2  C246  F245         	movff	main@msgbuffer,main@last_reg_recvd
  1213                           
  1214                           ;main.c: 403: break;
  1215  0005F6  D020               	goto	l3661
  1216  0005F8                     l3655:
  1217                           
  1218                           ;main.c: 406: {
  1219                           ;main.c: 409: uart_trans(length, msgbuffer);
  1220  0005F8  0102               	movlb	2	; () banked
  1221  0005FA  0E02               	movlw	high main@msgbuffer
  1222  0005FC  0100               	movlb	0	; () banked
  1223  0005FE  0100               	movlb	0	; () banked
  1224  000600  6FAE               	movwf	(uart_trans@data+1)& (0+255),b
  1225  000602  0102               	movlb	2	; () banked
  1226  000604  0E46               	movlw	low main@msgbuffer
  1227  000606  0100               	movlb	0	; () banked
  1228  000608  0100               	movlb	0	; () banked
  1229  00060A  6FAD               	movwf	uart_trans@data& (0+255),b
  1230  00060C  0102               	movlb	2	; () banked
  1231  00060E  0102               	movlb	2	; () banked
  1232  000610  5156               	movf	main@length& (0+255),w,b
  1233  000612  ECA2  F007         	call	_uart_trans
  1234                           
  1235                           ;main.c: 412: break;
  1236  000616  D010               	goto	l3661
  1237  000618                     l3659:
  1238  000618  0102               	movlb	2	; () banked
  1239  00061A  0102               	movlb	2	; () banked
  1240  00061C  5155               	movf	main@msgtype& (0+255),w,b
  1241                           
  1242                           ; Switch size 1, requested type "space"
  1243                           ; Number of cases is 5, Range of values is 10 to 46
  1244                           ; switch strategies available:
  1245                           ; Name         Instructions Cycles
  1246                           ; simple_byte           16     9 (average)
  1247                           ;	Chosen strategy is simple_byte
  1248  00061E  0A0A               	xorlw	10	; case 10
  1249  000620  B4D8               	btfsc	status,2,c
  1250  000622  D7BE               	goto	l3653
  1251  000624  0A22               	xorlw	34	; case 40
  1252  000626  B4D8               	btfsc	status,2,c
  1253  000628  D7E4               	goto	l128
  1254  00062A  0A01               	xorlw	1	; case 41
  1255  00062C  B4D8               	btfsc	status,2,c
  1256  00062E  D7E1               	goto	l128
  1257  000630  0A04               	xorlw	4	; case 45
  1258  000632  B4D8               	btfsc	status,2,c
  1259  000634  D7E1               	goto	l3655
  1260  000636  0A03               	xorlw	3	; case 46
  1261  000638                     l3661:
  1262                           
  1263                           ;main.c: 427: }
  1264                           ;main.c: 430: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1265  000638  0102               	movlb	2	; () banked
  1266  00063A  0E02               	movlw	high main@msgtype
  1267  00063C  0100               	movlb	0	; () banked
  1268  00063E  0100               	movlb	0	; () banked
  1269  000640  6FC6               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1270  000642  0102               	movlb	2	; () banked
  1271  000644  0E55               	movlw	low main@msgtype
  1272  000646  0100               	movlb	0	; () banked
  1273  000648  0100               	movlb	0	; () banked
  1274  00064A  6FC5               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1275  00064C  0102               	movlb	2	; () banked
  1276  00064E  0E02               	movlw	high main@msgbuffer
  1277  000650  0100               	movlb	0	; () banked
  1278  000652  0100               	movlb	0	; () banked
  1279  000654  6FC8               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1280  000656  0102               	movlb	2	; () banked
  1281  000658  0E46               	movlw	low main@msgbuffer
  1282  00065A  0100               	movlb	0	; () banked
  1283  00065C  0100               	movlb	0	; () banked
  1284  00065E  6FC7               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1285  000660  0E0A               	movlw	10
  1286  000662  EC5E  F00C         	call	_ToMainLow_recvmsg
  1287  000666  0102               	movlb	2	; () banked
  1288  000668  0102               	movlb	2	; () banked
  1289  00066A  6F56               	movwf	main@length& (0+255),b
  1290                           
  1291                           ; BSR set to: 2
  1292                           ;main.c: 431: if (length < 0) {
  1293  00066C  0102               	movlb	2	; () banked
  1294  00066E  0102               	movlb	2	; () banked
  1295  000670  BF56               	btfsc	main@length& (0+255),7,b
  1296  000672  D775               	goto	l3645
  1297  000674  D072               	goto	l3681
  1298  000676                     l3667:
  1299                           
  1300                           ; BSR set to: 2
  1301                           ;main.c: 439: {
  1302                           ;main.c: 440: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1303  000676  0102               	movlb	2	; () banked
  1304  000678  0E02               	movlw	high main@t1thread_data
  1305  00067A  0100               	movlb	0	; () banked
  1306  00067C  0100               	movlb	0	; () banked
  1307  00067E  6FC8               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1308  000680  0102               	movlb	2	; () banked
  1309  000682  0E53               	movlw	low main@t1thread_data
  1310  000684  0100               	movlb	0	; () banked
  1311  000686  0100               	movlb	0	; () banked
  1312  000688  6FC7               	movwf	timer1_lthread@tptr& (0+255),b
  1313  00068A  0102               	movlb	2	; () banked
  1314  00068C  0100               	movlb	0	; () banked
  1315  00068E  C255  F0C9         	movff	main@msgtype,timer1_lthread@msgtype
  1316  000692  0100               	movlb	0	; () banked
  1317  000694  0100               	movlb	0	; () banked
  1318  000696  6BCA               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1319  000698  0102               	movlb	2	; () banked
  1320  00069A  0102               	movlb	2	; () banked
  1321  00069C  5156               	movf	main@length& (0+255),w,b
  1322  00069E  0100               	movlb	0	; () banked
  1323  0006A0  0100               	movlb	0	; () banked
  1324  0006A2  6FCB               	movwf	timer1_lthread@length& (0+255),b
  1325  0006A4  0100               	movlb	0	; () banked
  1326  0006A6  6BCC               	clrf	(timer1_lthread@length+1)& (0+255),b
  1327  0006A8  0100               	movlb	0	; () banked
  1328  0006AA  BFCB               	btfsc	timer1_lthread@length& (0+255),7,b
  1329  0006AC  07CC               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1330  0006AE  0102               	movlb	2	; () banked
  1331  0006B0  0E02               	movlw	high main@msgbuffer
  1332  0006B2  0100               	movlb	0	; () banked
  1333  0006B4  0100               	movlb	0	; () banked
  1334  0006B6  6FCE               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1335  0006B8  0102               	movlb	2	; () banked
  1336  0006BA  0E46               	movlw	low main@msgbuffer
  1337  0006BC  0100               	movlb	0	; () banked
  1338  0006BE  0100               	movlb	0	; () banked
  1339  0006C0  6FCD               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1340  0006C2  EC25  F00A         	call	_timer1_lthread	;wreg free
  1341                           
  1342                           ;main.c: 441: break;
  1343  0006C6  D74B               	goto	l3645
  1344  0006C8                     l3669:
  1345                           
  1346                           ;main.c: 444: case 31:
  1347                           ;main.c: 445: {
  1348                           ;main.c: 446: if(msgbuffer[0] == 0xBA){
  1349  0006C8  0102               	movlb	2	; () banked
  1350  0006CA  0102               	movlb	2	; () banked
  1351  0006CC  5146               	movf	main@msgbuffer& (0+255),w,b
  1352  0006CE  0ABA               	xorlw	186
  1353  0006D0  A4D8               	btfss	status,2,c
  1354  0006D2  D01E               	goto	l3673
  1355                           
  1356                           ; BSR set to: 2
  1357                           ;main.c: 448: i2c_master_send(5, 5, msgbuffer, 0xBE);
  1358  0006D4  0101               	movlb	1	; () banked
  1359  0006D6  6FCB               	movwf	??_main& (0+255),b
  1360  0006D8  0E05               	movlw	5
  1361  0006DA  0100               	movlb	0	; () banked
  1362  0006DC  0100               	movlb	0	; () banked
  1363  0006DE  6FAD               	movwf	i2c_master_send@recvlength& (0+255),b
  1364  0006E0  0101               	movlb	1	; () banked
  1365  0006E2  51CB               	movf	??_main& (0+255),w,b
  1366  0006E4  0102               	movlb	2	; () banked
  1367  0006E6  0E02               	movlw	high main@msgbuffer
  1368  0006E8  0100               	movlb	0	; () banked
  1369  0006EA  0100               	movlb	0	; () banked
  1370  0006EC  6FAF               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1371  0006EE  0102               	movlb	2	; () banked
  1372  0006F0  0E46               	movlw	low main@msgbuffer
  1373  0006F2  0100               	movlb	0	; () banked
  1374  0006F4  0100               	movlb	0	; () banked
  1375  0006F6  6FAE               	movwf	i2c_master_send@msg& (0+255),b
  1376  0006F8  0101               	movlb	1	; () banked
  1377  0006FA  6FCC               	movwf	(??_main+1)& (0+255),b
  1378  0006FC  0EBE               	movlw	190
  1379  0006FE  0100               	movlb	0	; () banked
  1380  000700  0100               	movlb	0	; () banked
  1381  000702  6FB0               	movwf	i2c_master_send@slave_addr& (0+255),b
  1382  000704  0101               	movlb	1	; () banked
  1383  000706  51CC               	movf	(??_main+1)& (0+255),w,b
  1384  000708  0E05               	movlw	5
  1385  00070A  EC69  F004         	call	_i2c_master_send
  1386                           
  1387                           ;main.c: 449: } else if(msgbuffer[0] == 0xAA){
  1388  00070E  D023               	goto	l3677
  1389  000710                     l3673:
  1390  000710  0102               	movlb	2	; () banked
  1391  000712  0102               	movlb	2	; () banked
  1392  000714  5146               	movf	main@msgbuffer& (0+255),w,b
  1393  000716  0AAA               	xorlw	170
  1394  000718  A4D8               	btfss	status,2,c
  1395  00071A  D01D               	goto	l3677
  1396                           
  1397                           ; BSR set to: 2
  1398                           ;main.c: 451: i2c_master_send(1, 5, msgbuffer, 0x9E);
  1399  00071C  0101               	movlb	1	; () banked
  1400  00071E  6FCB               	movwf	??_main& (0+255),b
  1401  000720  0E05               	movlw	5
  1402  000722  0100               	movlb	0	; () banked
  1403  000724  0100               	movlb	0	; () banked
  1404  000726  6FAD               	movwf	i2c_master_send@recvlength& (0+255),b
  1405  000728  0101               	movlb	1	; () banked
  1406  00072A  51CB               	movf	??_main& (0+255),w,b
  1407  00072C  0102               	movlb	2	; () banked
  1408  00072E  0E02               	movlw	high main@msgbuffer
  1409  000730  0100               	movlb	0	; () banked
  1410  000732  0100               	movlb	0	; () banked
  1411  000734  6FAF               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1412  000736  0102               	movlb	2	; () banked
  1413  000738  0E46               	movlw	low main@msgbuffer
  1414  00073A  0100               	movlb	0	; () banked
  1415  00073C  0100               	movlb	0	; () banked
  1416  00073E  6FAE               	movwf	i2c_master_send@msg& (0+255),b
  1417  000740  0101               	movlb	1	; () banked
  1418  000742  6FCC               	movwf	(??_main+1)& (0+255),b
  1419  000744  0E9E               	movlw	158
  1420  000746  0100               	movlb	0	; () banked
  1421  000748  0100               	movlb	0	; () banked
  1422  00074A  6FB0               	movwf	i2c_master_send@slave_addr& (0+255),b
  1423  00074C  0101               	movlb	1	; () banked
  1424  00074E  51CC               	movf	(??_main+1)& (0+255),w,b
  1425  000750  0E01               	movlw	1
  1426  000752  EC69  F004         	call	_i2c_master_send
  1427  000756                     l3677:
  1428                           
  1429                           ;main.c: 452: }
  1430                           ;main.c: 454: LATBbits.LATB2 = 0;
  1431  000756  948A               	bcf	3978,2,c	;volatile
  1432                           
  1433                           ;main.c: 456: break;
  1434  000758  D702               	goto	l3645
  1435  00075A                     l3681:
  1436  00075A  0102               	movlb	2	; () banked
  1437  00075C  0102               	movlb	2	; () banked
  1438  00075E  5155               	movf	main@msgtype& (0+255),w,b
  1439                           
  1440                           ; Switch size 1, requested type "space"
  1441                           ; Number of cases is 3, Range of values is 11 to 31
  1442                           ; switch strategies available:
  1443                           ; Name         Instructions Cycles
  1444                           ; simple_byte           10     6 (average)
  1445                           ;	Chosen strategy is simple_byte
  1446  000760  0A0B               	xorlw	11	; case 11
  1447  000762  B4D8               	btfsc	status,2,c
  1448  000764  D788               	goto	l3667
  1449  000766  0A15               	xorlw	21	; case 30
  1450  000768  B4D8               	btfsc	status,2,c
  1451  00076A  D7AE               	goto	l3669
  1452  00076C  0A01               	xorlw	1	; case 31
  1453  00076E  B4D8               	btfsc	status,2,c
  1454  000770  D7AB               	goto	l3669
  1455  000772  D6F5               	goto	l3645
  1456  000774                     __end_of_main:
  1457                           	opt stack 0
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           postinc0	equ	0xFEE
  1463                           wreg	equ	0xFE8
  1464                           postdec1	equ	0xFE5
  1465                           fsr1l	equ	0xFE1
  1466                           status	equ	0xFD8
  1467                           
  1468 ;; *************** function _uart_trans *****************
  1469 ;; Defined at:
  1470 ;;		line 56 in file "../src/my_uart.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  length          1    wreg     unsigned char 
  1473 ;;  data            2   45[BANK0 ] PTR unsigned char 
  1474 ;;		 -> main@msgbuffer(11), 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  length          1   49[BANK0 ] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;		None               void
  1479 ;; Registers used:
  1480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1486 ;;      Params:         0       2       0       0       0
  1487 ;;      Locals:         0       1       0       0       0
  1488 ;;      Temps:          0       2       0       0       0
  1489 ;;      Totals:         0       5       0       0       0
  1490 ;;Total ram usage:        5 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:   11
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text1
  1501  000F44                     __ptext1:
  1502                           	opt stack 0
  1503  000F44                     _uart_trans:
  1504                           	opt stack 19
  1505                           
  1506                           ; BSR set to: 2
  1507                           ;incstack = 0
  1508                           ;uart_trans@length stored from wreg
  1509  000F44  CFE8 F0B1          	movff	wreg,uart_trans@length
  1510                           
  1511                           ;my_uart.c: 58: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  1512  000F48  EE20 F00B          	lfsr	2,11
  1513  000F4C  5055               	movf	_uc_ptr,w,c
  1514  000F4E  26D9               	addwf	fsr2l,f,c
  1515  000F50  5056               	movf	_uc_ptr+1,w,c
  1516  000F52  22DA               	addwfc	fsr2h,f,c
  1517  000F54  0E00               	movlw	0
  1518  000F56  6EDF               	movwf	indf2,c
  1519  000F58  D035               	goto	l3839
  1520  000F5A                     l3835:
  1521                           
  1522                           ;my_uart.c: 60: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  1523  000F5A  EE20 F00B          	lfsr	2,11
  1524  000F5E  5055               	movf	_uc_ptr,w,c
  1525  000F60  26D9               	addwf	fsr2l,f,c
  1526  000F62  5056               	movf	_uc_ptr+1,w,c
  1527  000F64  22DA               	addwfc	fsr2h,f,c
  1528  000F66  50DF               	movf	indf2,w,c
  1529  000F68  0100               	movlb	0	; () banked
  1530  000F6A  6FAF               	movwf	??_uart_trans& (0+255),b
  1531  000F6C  0100               	movlb	0	; () banked
  1532  000F6E  51AF               	movf	??_uart_trans& (0+255),w,b
  1533  000F70  0D01               	mullw	1
  1534  000F72  50F3               	movf	prodl,w,c
  1535  000F74  0100               	movlb	0	; () banked
  1536  000F76  0100               	movlb	0	; () banked
  1537  000F78  25AD               	addwf	uart_trans@data& (0+255),w,b
  1538  000F7A  6ED9               	movwf	fsr2l,c
  1539  000F7C  50F4               	movf	prodh,w,c
  1540  000F7E  0100               	movlb	0	; () banked
  1541  000F80  0100               	movlb	0	; () banked
  1542  000F82  21AE               	addwfc	(uart_trans@data+1)& (0+255),w,b
  1543  000F84  6EDA               	movwf	fsr2h,c
  1544  000F86  EE10 F00B          	lfsr	1,11
  1545  000F8A  5055               	movf	_uc_ptr,w,c
  1546  000F8C  26E1               	addwf	fsr1l,f,c
  1547  000F8E  5056               	movf	_uc_ptr+1,w,c
  1548  000F90  22E2               	addwfc	fsr1h,f,c
  1549  000F92  50E7               	movf	indf1,w,c
  1550  000F94  0100               	movlb	0	; () banked
  1551  000F96  6FB0               	movwf	(??_uart_trans+1)& (0+255),b
  1552  000F98  0100               	movlb	0	; () banked
  1553  000F9A  51B0               	movf	(??_uart_trans+1)& (0+255),w,b
  1554  000F9C  0D01               	mullw	1
  1555  000F9E  0E06               	movlw	6
  1556  000FA0  26F3               	addwf	prodl,f,c
  1557  000FA2  0E00               	movlw	0
  1558  000FA4  22F4               	addwfc	prodh,f,c
  1559  000FA6  50F3               	movf	prodl,w,c
  1560  000FA8  2455               	addwf	_uc_ptr,w,c
  1561  000FAA  6EE1               	movwf	fsr1l,c
  1562  000FAC  50F4               	movf	prodh,w,c
  1563  000FAE  2056               	addwfc	_uc_ptr+1,w,c
  1564  000FB0  6EE2               	movwf	fsr1h,c
  1565  000FB2  CFDF FFE7          	movff	indf2,indf1
  1566                           
  1567                           ; BSR set to: 0
  1568  000FB6  EE20 F00B          	lfsr	2,11
  1569  000FBA  5055               	movf	_uc_ptr,w,c
  1570  000FBC  26D9               	addwf	fsr2l,f,c
  1571  000FBE  5056               	movf	_uc_ptr+1,w,c
  1572  000FC0  22DA               	addwfc	fsr2h,f,c
  1573  000FC2  2ADF               	incf	indf2,f,c
  1574  000FC4                     l3839:
  1575  000FC4  EE20 F00B          	lfsr	2,11
  1576  000FC8  5055               	movf	_uc_ptr,w,c
  1577  000FCA  26D9               	addwf	fsr2l,f,c
  1578  000FCC  5056               	movf	_uc_ptr+1,w,c
  1579  000FCE  22DA               	addwfc	fsr2h,f,c
  1580  000FD0  50DF               	movf	indf2,w,c
  1581  000FD2  0100               	movlb	0	; () banked
  1582  000FD4  6FAF               	movwf	??_uart_trans& (0+255),b
  1583  000FD6  0100               	movlb	0	; () banked
  1584  000FD8  0100               	movlb	0	; () banked
  1585  000FDA  51B1               	movf	uart_trans@length& (0+255),w,b
  1586  000FDC  0100               	movlb	0	; () banked
  1587  000FDE  5DAF               	subwf	??_uart_trans& (0+255),w,b
  1588  000FE0  A0D8               	btfss	status,0,c
  1589  000FE2  D7BB               	goto	l3835
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;my_uart.c: 62: }
  1593                           ;my_uart.c: 63: uc_ptr->txBufind = 0;
  1594                           
  1595                           ; BSR set to: 0
  1596  000FE4  EE20 F00C          	lfsr	2,12
  1597  000FE8  5055               	movf	_uc_ptr,w,c
  1598  000FEA  26D9               	addwf	fsr2l,f,c
  1599  000FEC  5056               	movf	_uc_ptr+1,w,c
  1600  000FEE  22DA               	addwfc	fsr2h,f,c
  1601  000FF0  0E00               	movlw	0
  1602  000FF2  6EDF               	movwf	indf2,c
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;my_uart.c: 64: PIE1bits.TX1IE = 1;
  1606  000FF4  889D               	bsf	3997,4,c	;volatile
  1607                           
  1608                           ; BSR set to: 0
  1609  000FF6  0012               	return	
  1610  000FF8                     __end_of_uart_trans:
  1611                           	opt stack 0
  1612                           tblptru	equ	0xFF8
  1613                           tblptrh	equ	0xFF7
  1614                           tblptrl	equ	0xFF6
  1615                           tablat	equ	0xFF5
  1616                           prodh	equ	0xFF4
  1617                           prodl	equ	0xFF3
  1618                           postinc0	equ	0xFEE
  1619                           wreg	equ	0xFE8
  1620                           indf1	equ	0xFE7
  1621                           postdec1	equ	0xFE5
  1622                           fsr1h	equ	0xFE2
  1623                           fsr1l	equ	0xFE1
  1624                           indf2	equ	0xFDF
  1625                           fsr2h	equ	0xFDA
  1626                           fsr2l	equ	0xFD9
  1627                           status	equ	0xFD8
  1628                           
  1629 ;; *************** function _timer1_lthread *****************
  1630 ;; Defined at:
  1631 ;;		line 14 in file "../src/timer1_thread.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  tptr            2   71[BANK0 ] PTR struct __timer1_thre
  1634 ;;		 -> main@t1thread_data(2), 
  1635 ;;  msgtype         2   73[BANK0 ] int 
  1636 ;;  length          2   75[BANK0 ] int 
  1637 ;;  msgbuffer       2   77[BANK0 ] PTR unsigned char 
  1638 ;;		 -> main@msgbuffer(11), 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  retval          1    1[BANK1 ] char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  2   71[BANK0 ] int 
  1643 ;; Registers used:
  1644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1650 ;;      Params:         0       8       0       0       0
  1651 ;;      Locals:         0       0       1       0       0
  1652 ;;      Temps:          0       0       1       0       0
  1653 ;;      Totals:         0       8       2       0       0
  1654 ;;Total ram usage:       10 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:   14
  1657 ;; This function calls:
  1658 ;;		_FromMainHigh_sendmsg
  1659 ;;		___lwmod
  1660 ;; This function is called by:
  1661 ;;		_main
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text2
  1666  00144A                     __ptext2:
  1667                           	opt stack 0
  1668  00144A                     _timer1_lthread:
  1669                           	opt stack 16
  1670                           
  1671                           ;timer1_thread.c: 15: signed char retval;
  1672                           ;timer1_thread.c: 17: tptr->msgcount++;
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;incstack = 0
  1676  00144A  C0C7  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1677  00144E  C0C8  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1678  001452  2ADE               	incf	postinc2,f,c
  1679  001454  0E00               	movlw	0
  1680  001456  22DD               	addwfc	postdec2,f,c
  1681                           
  1682                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1683  001458  C0C7  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1684  00145C  C0C8  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1685  001460  0100               	movlb	0	; () banked
  1686  001462  CFDE F0AD          	movff	postinc2,___lwmod@dividend
  1687  001466  0100               	movlb	0	; () banked
  1688  001468  CFDD F0AE          	movff	postdec2,___lwmod@dividend+1
  1689  00146C  0E00               	movlw	0
  1690  00146E  0100               	movlb	0	; () banked
  1691  001470  0100               	movlb	0	; () banked
  1692  001472  6FB0               	movwf	(___lwmod@divisor+1)& (0+255),b
  1693  001474  0E0A               	movlw	10
  1694  001476  0100               	movlb	0	; () banked
  1695  001478  6FAF               	movwf	___lwmod@divisor& (0+255),b
  1696  00147A  ECE1  F008         	call	___lwmod	;wreg free
  1697  00147E  0100               	movlb	0	; () banked
  1698  001480  0100               	movlb	0	; () banked
  1699  001482  51AD               	movf	?___lwmod& (0+255),w,b
  1700  001484  0A09               	xorlw	9
  1701  001486  0100               	movlb	0	; () banked
  1702  001488  11AE               	iorwf	(?___lwmod+1)& (0+255),w,b
  1703  00148A  A4D8               	btfss	status,2,c
  1704  00148C  0012               	return	
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1708  00148E  0101               	movlb	1	; () banked
  1709  001490  6FC9               	movwf	??_timer1_lthread& (0+255),b
  1710  001492  0E14               	movlw	20
  1711  001494  0100               	movlb	0	; () banked
  1712  001496  0100               	movlb	0	; () banked
  1713  001498  6FC3               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1714  00149A  0101               	movlb	1	; () banked
  1715  00149C  51C9               	movf	??_timer1_lthread& (0+255),w,b
  1716  00149E  0100               	movlb	0	; () banked
  1717  0014A0  0100               	movlb	0	; () banked
  1718  0014A2  C0C8  F0C5         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1719  0014A6  0100               	movlb	0	; () banked
  1720  0014A8  0100               	movlb	0	; () banked
  1721  0014AA  C0C7  F0C4         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1722  0014AE  0E02               	movlw	2
  1723  0014B0  ECDC  F00C         	call	_FromMainHigh_sendmsg
  1724  0014B4  0101               	movlb	1	; () banked
  1725  0014B6  0101               	movlb	1	; () banked
  1726  0014B8  6FCA               	movwf	timer1_lthread@retval& (0+255),b
  1727  0014BA  0012               	return	
  1728  0014BC                     __end_of_timer1_lthread:
  1729                           	opt stack 0
  1730                           tblptru	equ	0xFF8
  1731                           tblptrh	equ	0xFF7
  1732                           tblptrl	equ	0xFF6
  1733                           tablat	equ	0xFF5
  1734                           prodh	equ	0xFF4
  1735                           prodl	equ	0xFF3
  1736                           postinc0	equ	0xFEE
  1737                           wreg	equ	0xFE8
  1738                           indf1	equ	0xFE7
  1739                           postdec1	equ	0xFE5
  1740                           fsr1h	equ	0xFE2
  1741                           fsr1l	equ	0xFE1
  1742                           indf2	equ	0xFDF
  1743                           postinc2	equ	0xFDE
  1744                           postdec2	equ	0xFDD
  1745                           fsr2h	equ	0xFDA
  1746                           fsr2l	equ	0xFD9
  1747                           status	equ	0xFD8
  1748                           
  1749 ;; *************** function ___lwmod *****************
  1750 ;; Defined at:
  1751 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  dividend        2   45[BANK0 ] unsigned int 
  1754 ;;  divisor         2   47[BANK0 ] unsigned int 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  counter         1   50[BANK0 ] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  2   45[BANK0 ] unsigned int 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1766 ;;      Params:         0       4       0       0       0
  1767 ;;      Locals:         0       1       0       0       0
  1768 ;;      Temps:          0       1       0       0       0
  1769 ;;      Totals:         0       6       0       0       0
  1770 ;;Total ram usage:        6 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; Hardware stack levels required when called:   11
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_timer1_lthread
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text3
  1781  0011C2                     __ptext3:
  1782                           	opt stack 0
  1783  0011C2                     ___lwmod:
  1784                           	opt stack 18
  1785                           
  1786                           ;incstack = 0
  1787  0011C2  0100               	movlb	0	; () banked
  1788  0011C4  0100               	movlb	0	; () banked
  1789  0011C6  51B0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1790  0011C8  11AF               	iorwf	___lwmod@divisor& (0+255),w,b
  1791  0011CA  B4D8               	btfsc	status,2,c
  1792  0011CC  D03A               	goto	l1101
  1793                           
  1794                           ; BSR set to: 0
  1795  0011CE  0100               	movlb	0	; () banked
  1796  0011D0  6FB1               	movwf	??___lwmod& (0+255),b
  1797  0011D2  0E01               	movlw	1
  1798  0011D4  0100               	movlb	0	; () banked
  1799  0011D6  0100               	movlb	0	; () banked
  1800  0011D8  6FB2               	movwf	___lwmod@counter& (0+255),b
  1801  0011DA  0100               	movlb	0	; () banked
  1802  0011DC  51B1               	movf	??___lwmod& (0+255),w,b
  1803  0011DE  D009               	goto	l4301
  1804  0011E0                     l4299:
  1805                           
  1806                           ; BSR set to: 0
  1807  0011E0  0100               	movlb	0	; () banked
  1808  0011E2  0100               	movlb	0	; () banked
  1809  0011E4  0100               	movlb	0	; () banked
  1810  0011E6  90D8               	bcf	status,0,c
  1811  0011E8  37AF               	rlcf	___lwmod@divisor& (0+255),f,b
  1812  0011EA  37B0               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1813  0011EC  0100               	movlb	0	; () banked
  1814  0011EE  0100               	movlb	0	; () banked
  1815  0011F0  2BB2               	incf	___lwmod@counter& (0+255),f,b
  1816  0011F2                     l4301:
  1817                           
  1818                           ; BSR set to: 0
  1819  0011F2  0100               	movlb	0	; () banked
  1820  0011F4  0100               	movlb	0	; () banked
  1821  0011F6  AFB0               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1822  0011F8  D7F3               	goto	l4299
  1823  0011FA                     l4303:
  1824                           
  1825                           ; BSR set to: 0
  1826  0011FA  0100               	movlb	0	; () banked
  1827  0011FC  0100               	movlb	0	; () banked
  1828  0011FE  51AF               	movf	___lwmod@divisor& (0+255),w,b
  1829  001200  0100               	movlb	0	; () banked
  1830  001202  0100               	movlb	0	; () banked
  1831  001204  5DAD               	subwf	___lwmod@dividend& (0+255),w,b
  1832  001206  0100               	movlb	0	; () banked
  1833  001208  0100               	movlb	0	; () banked
  1834  00120A  51B0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1835  00120C  0100               	movlb	0	; () banked
  1836  00120E  0100               	movlb	0	; () banked
  1837  001210  59AE               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1838  001212  A0D8               	btfss	status,0,c
  1839  001214  D00C               	goto	l4307
  1840                           
  1841                           ; BSR set to: 0
  1842  001216  0100               	movlb	0	; () banked
  1843  001218  0100               	movlb	0	; () banked
  1844  00121A  51AF               	movf	___lwmod@divisor& (0+255),w,b
  1845  00121C  0100               	movlb	0	; () banked
  1846  00121E  0100               	movlb	0	; () banked
  1847  001220  5FAD               	subwf	___lwmod@dividend& (0+255),f,b
  1848  001222  0100               	movlb	0	; () banked
  1849  001224  0100               	movlb	0	; () banked
  1850  001226  51B0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1851  001228  0100               	movlb	0	; () banked
  1852  00122A  0100               	movlb	0	; () banked
  1853  00122C  5BAE               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1854  00122E                     l4307:
  1855                           
  1856                           ; BSR set to: 0
  1857  00122E  0100               	movlb	0	; () banked
  1858  001230  0100               	movlb	0	; () banked
  1859  001232  0100               	movlb	0	; () banked
  1860  001234  90D8               	bcf	status,0,c
  1861  001236  33B0               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1862  001238  33AF               	rrcf	___lwmod@divisor& (0+255),f,b
  1863                           
  1864                           ; BSR set to: 0
  1865  00123A  0100               	movlb	0	; () banked
  1866  00123C  0100               	movlb	0	; () banked
  1867  00123E  2FB2               	decfsz	___lwmod@counter& (0+255),f,b
  1868  001240  D7DC               	goto	l4303
  1869  001242                     l1101:
  1870                           
  1871                           ; BSR set to: 0
  1872  001242  C0AD  F0AD         	movff	___lwmod@dividend,?___lwmod
  1873  001246  C0AE  F0AE         	movff	___lwmod@dividend+1,?___lwmod+1
  1874                           
  1875                           ; BSR set to: 0
  1876  00124A  0012               	return	
  1877  00124C                     __end_of___lwmod:
  1878                           	opt stack 0
  1879                           tblptru	equ	0xFF8
  1880                           tblptrh	equ	0xFF7
  1881                           tblptrl	equ	0xFF6
  1882                           tablat	equ	0xFF5
  1883                           prodh	equ	0xFF4
  1884                           prodl	equ	0xFF3
  1885                           postinc0	equ	0xFEE
  1886                           wreg	equ	0xFE8
  1887                           indf1	equ	0xFE7
  1888                           postdec1	equ	0xFE5
  1889                           fsr1h	equ	0xFE2
  1890                           fsr1l	equ	0xFE1
  1891                           indf2	equ	0xFDF
  1892                           postinc2	equ	0xFDE
  1893                           postdec2	equ	0xFDD
  1894                           fsr2h	equ	0xFDA
  1895                           fsr2l	equ	0xFD9
  1896                           status	equ	0xFD8
  1897                           
  1898 ;; *************** function _FromMainHigh_sendmsg *****************
  1899 ;; Defined at:
  1900 ;;		line 174 in file "../src/messages.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  length          1    wreg     unsigned char 
  1903 ;;  msgtype         1   67[BANK0 ] unsigned char 
  1904 ;;  data            2   68[BANK0 ] PTR void 
  1905 ;;		 -> main@t1thread_data(2), 
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  length          1   70[BANK0 ] unsigned char 
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      char 
  1910 ;; Registers used:
  1911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1917 ;;      Params:         0       3       0       0       0
  1918 ;;      Locals:         0       1       0       0       0
  1919 ;;      Temps:          0       0       0       0       0
  1920 ;;      Totals:         0       4       0       0       0
  1921 ;;Total ram usage:        4 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:   13
  1924 ;; This function calls:
  1925 ;;		_send_msg
  1926 ;; This function is called by:
  1927 ;;		_timer1_lthread
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text4
  1932  0019B8                     __ptext4:
  1933                           	opt stack 0
  1934  0019B8                     _FromMainHigh_sendmsg:
  1935                           	opt stack 16
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;incstack = 0
  1939                           ;FromMainHigh_sendmsg@length stored from wreg
  1940  0019B8  CFE8 F0C6          	movff	wreg,FromMainHigh_sendmsg@length
  1941                           
  1942                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1943  0019BC  0102               	movlb	2	; () banked
  1944  0019BE  0E02               	movlw	high _FromMainHigh_MQ
  1945  0019C0  0100               	movlb	0	; () banked
  1946  0019C2  0100               	movlb	0	; () banked
  1947  0019C4  6FB8               	movwf	(send_msg@qptr+1)& (0+255),b
  1948  0019C6  0102               	movlb	2	; () banked
  1949  0019C8  0E00               	movlw	low _FromMainHigh_MQ
  1950  0019CA  0100               	movlb	0	; () banked
  1951  0019CC  0100               	movlb	0	; () banked
  1952  0019CE  6FB7               	movwf	send_msg@qptr& (0+255),b
  1953  0019D0  C0C6  F0B9         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1954  0019D4  C0C3  F0BA         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1955  0019D8  0100               	movlb	0	; () banked
  1956  0019DA  0100               	movlb	0	; () banked
  1957  0019DC  C0C5  F0BC         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1958  0019E0  0100               	movlb	0	; () banked
  1959  0019E2  0100               	movlb	0	; () banked
  1960  0019E4  C0C4  F0BB         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1961  0019E8  EC08  F005         	call	_send_msg	;wreg free
  1962  0019EC  0012               	return	
  1963  0019EE                     __end_of_FromMainHigh_sendmsg:
  1964                           	opt stack 0
  1965                           tblptru	equ	0xFF8
  1966                           tblptrh	equ	0xFF7
  1967                           tblptrl	equ	0xFF6
  1968                           tablat	equ	0xFF5
  1969                           prodh	equ	0xFF4
  1970                           prodl	equ	0xFF3
  1971                           postinc0	equ	0xFEE
  1972                           wreg	equ	0xFE8
  1973                           indf1	equ	0xFE7
  1974                           postdec1	equ	0xFE5
  1975                           fsr1h	equ	0xFE2
  1976                           fsr1l	equ	0xFE1
  1977                           indf2	equ	0xFDF
  1978                           postinc2	equ	0xFDE
  1979                           postdec2	equ	0xFDD
  1980                           fsr2h	equ	0xFDA
  1981                           fsr2l	equ	0xFD9
  1982                           status	equ	0xFD8
  1983                           
  1984 ;; *************** function _send_msg *****************
  1985 ;; Defined at:
  1986 ;;		line 24 in file "../src/messages.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  qptr            2   55[BANK0 ] PTR struct __msg_queue
  1989 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  1990 ;;  length          1   57[BANK0 ] unsigned char 
  1991 ;;  msgtype         1   58[BANK0 ] unsigned char 
  1992 ;;  data            2   59[BANK0 ] PTR void 
  1993 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  1994 ;;		 -> main@uc(13), 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  qmsg            2   65[BANK0 ] PTR struct __msg
  1997 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  1998 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  1999 ;;  tlength         2   62[BANK0 ] unsigned int 
  2000 ;;  slot            1   64[BANK0 ] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      char 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2010 ;;      Params:         0       6       0       0       0
  2011 ;;      Locals:         0       5       0       0       0
  2012 ;;      Temps:          0       1       0       0       0
  2013 ;;      Totals:         0      12       0       0       0
  2014 ;;Total ram usage:       12 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:   12
  2017 ;; This function calls:
  2018 ;;		___awmod
  2019 ;;		_memcpy
  2020 ;; This function is called by:
  2021 ;;		_FromMainHigh_sendmsg
  2022 ;;		_FromMainLow_sendmsg
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text5
  2027  000A10                     __ptext5:
  2028                           	opt stack 0
  2029  000A10                     _send_msg:
  2030                           	opt stack 16
  2031                           
  2032                           ;messages.c: 25: unsigned char slot;
  2033                           ;messages.c: 27: msg *qmsg;
  2034                           ;messages.c: 28: size_t tlength = length;
  2035                           
  2036                           ;incstack = 0
  2037  000A10  0100               	movlb	0	; () banked
  2038  000A12  0100               	movlb	0	; () banked
  2039  000A14  C0B9  F0BE         	movff	send_msg@length,send_msg@tlength
  2040  000A18  0100               	movlb	0	; () banked
  2041  000A1A  0100               	movlb	0	; () banked
  2042  000A1C  6BBF               	clrf	(send_msg@tlength+1)& (0+255),b
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2046  000A1E  0100               	movlb	0	; () banked
  2047  000A20  EE20 F041          	lfsr	2,65
  2048  000A24  0100               	movlb	0	; () banked
  2049  000A26  51B7               	movf	send_msg@qptr& (0+255),w,b
  2050  000A28  26D9               	addwf	fsr2l,f,c
  2051  000A2A  0100               	movlb	0	; () banked
  2052  000A2C  51B8               	movf	(send_msg@qptr+1)& (0+255),w,b
  2053  000A2E  22DA               	addwfc	fsr2h,f,c
  2054  000A30  50DF               	movf	indf2,w,c
  2055  000A32  0100               	movlb	0	; () banked
  2056  000A34  0100               	movlb	0	; () banked
  2057  000A36  6FC0               	movwf	send_msg@slot& (0+255),b
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2061  000A38  0100               	movlb	0	; () banked
  2062  000A3A  0100               	movlb	0	; () banked
  2063  000A3C  51C0               	movf	send_msg@slot& (0+255),w,b
  2064  000A3E  0D0D               	mullw	13
  2065  000A40  50F3               	movf	prodl,w,c
  2066  000A42  0100               	movlb	0	; () banked
  2067  000A44  0100               	movlb	0	; () banked
  2068  000A46  25B7               	addwf	send_msg@qptr& (0+255),w,b
  2069  000A48  0100               	movlb	0	; () banked
  2070  000A4A  0100               	movlb	0	; () banked
  2071  000A4C  6FC1               	movwf	send_msg@qmsg& (0+255),b
  2072  000A4E  50F4               	movf	prodh,w,c
  2073  000A50  0100               	movlb	0	; () banked
  2074  000A52  0100               	movlb	0	; () banked
  2075  000A54  21B8               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2076  000A56  0100               	movlb	0	; () banked
  2077  000A58  6FC2               	movwf	(send_msg@qmsg+1)& (0+255),b
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;messages.c: 41: if (qmsg->full != 0) {
  2081  000A5A  C0C1  FFD9         	movff	send_msg@qmsg,fsr2l
  2082  000A5E  C0C2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2083  000A62  50DF               	movf	indf2,w,c
  2084  000A64  B4D8               	btfsc	status,2,c
  2085  000A66  D002               	goto	l3897
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;messages.c: 42: return (-1);
  2089  000A68  0EFF               	movlw	255
  2090  000A6A  0012               	return	
  2091  000A6C                     l3897:
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;messages.c: 43: }
  2095                           ;messages.c: 46: qmsg->length = length;
  2096  000A6C  0100               	movlb	0	; () banked
  2097  000A6E  EE20 F001          	lfsr	2,1
  2098  000A72  0100               	movlb	0	; () banked
  2099  000A74  51C1               	movf	send_msg@qmsg& (0+255),w,b
  2100  000A76  26D9               	addwf	fsr2l,f,c
  2101  000A78  0100               	movlb	0	; () banked
  2102  000A7A  51C2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2103  000A7C  22DA               	addwfc	fsr2h,f,c
  2104  000A7E  0100               	movlb	0	; () banked
  2105  000A80  C0B9  FFDF         	movff	send_msg@length,indf2
  2106                           
  2107                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2108  000A84  0100               	movlb	0	; () banked
  2109  000A86  EE20 F002          	lfsr	2,2
  2110  000A8A  0100               	movlb	0	; () banked
  2111  000A8C  51C1               	movf	send_msg@qmsg& (0+255),w,b
  2112  000A8E  26D9               	addwf	fsr2l,f,c
  2113  000A90  0100               	movlb	0	; () banked
  2114  000A92  51C2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2115  000A94  22DA               	addwfc	fsr2h,f,c
  2116  000A96  0100               	movlb	0	; () banked
  2117  000A98  C0BA  FFDF         	movff	send_msg@msgtype,indf2
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2121  000A9C  0E03               	movlw	3
  2122  000A9E  0100               	movlb	0	; () banked
  2123  000AA0  0100               	movlb	0	; () banked
  2124  000AA2  25C1               	addwf	send_msg@qmsg& (0+255),w,b
  2125  000AA4  0100               	movlb	0	; () banked
  2126  000AA6  0100               	movlb	0	; () banked
  2127  000AA8  6FAD               	movwf	memcpy@d1& (0+255),b
  2128  000AAA  0E00               	movlw	0
  2129  000AAC  0100               	movlb	0	; () banked
  2130  000AAE  0100               	movlb	0	; () banked
  2131  000AB0  21C2               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2132  000AB2  0100               	movlb	0	; () banked
  2133  000AB4  6FAE               	movwf	(memcpy@d1+1)& (0+255),b
  2134  000AB6  0100               	movlb	0	; () banked
  2135  000AB8  0100               	movlb	0	; () banked
  2136  000ABA  C0BC  F0B0         	movff	send_msg@data+1,memcpy@s1+1
  2137  000ABE  0100               	movlb	0	; () banked
  2138  000AC0  0100               	movlb	0	; () banked
  2139  000AC2  C0BB  F0AF         	movff	send_msg@data,memcpy@s1
  2140  000AC6  C0BE  F0B1         	movff	send_msg@tlength,memcpy@n
  2141  000ACA  C0BF  F0B2         	movff	send_msg@tlength+1,memcpy@n+1
  2142  000ACE  EC98  F00B         	call	_memcpy	;wreg free
  2143                           
  2144                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  2145  000AD2  0100               	movlb	0	; () banked
  2146  000AD4  EE20 F041          	lfsr	2,65
  2147  000AD8  0100               	movlb	0	; () banked
  2148  000ADA  51B7               	movf	send_msg@qptr& (0+255),w,b
  2149  000ADC  26D9               	addwf	fsr2l,f,c
  2150  000ADE  0100               	movlb	0	; () banked
  2151  000AE0  51B8               	movf	(send_msg@qptr+1)& (0+255),w,b
  2152  000AE2  22DA               	addwfc	fsr2h,f,c
  2153  000AE4  0100               	movlb	0	; () banked
  2154  000AE6  EE10 F041          	lfsr	1,65
  2155  000AEA  0100               	movlb	0	; () banked
  2156  000AEC  51B7               	movf	send_msg@qptr& (0+255),w,b
  2157  000AEE  26E1               	addwf	fsr1l,f,c
  2158  000AF0  0100               	movlb	0	; () banked
  2159  000AF2  51B8               	movf	(send_msg@qptr+1)& (0+255),w,b
  2160  000AF4  22E2               	addwfc	fsr1h,f,c
  2161  000AF6  50E7               	movf	indf1,w,c
  2162  000AF8  0100               	movlb	0	; () banked
  2163  000AFA  6FBD               	movwf	??_send_msg& (0+255),b
  2164  000AFC  0E01               	movlw	1
  2165  000AFE  0100               	movlb	0	; () banked
  2166  000B00  25BD               	addwf	??_send_msg& (0+255),w,b
  2167  000B02  0100               	movlb	0	; () banked
  2168  000B04  0100               	movlb	0	; () banked
  2169  000B06  6FAD               	movwf	___awmod@dividend& (0+255),b
  2170  000B08  0100               	movlb	0	; () banked
  2171  000B0A  0100               	movlb	0	; () banked
  2172  000B0C  6BAE               	clrf	(___awmod@dividend+1)& (0+255),b
  2173  000B0E  0E00               	movlw	0
  2174  000B10  23AE               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  2175  000B12  0E00               	movlw	0
  2176  000B14  0100               	movlb	0	; () banked
  2177  000B16  0100               	movlb	0	; () banked
  2178  000B18  6FB0               	movwf	(___awmod@divisor+1)& (0+255),b
  2179  000B1A  0E05               	movlw	5
  2180  000B1C  0100               	movlb	0	; () banked
  2181  000B1E  6FAF               	movwf	___awmod@divisor& (0+255),b
  2182  000B20  EC34  F006         	call	___awmod	;wreg free
  2183  000B24  0100               	movlb	0	; () banked
  2184  000B26  0100               	movlb	0	; () banked
  2185  000B28  51AD               	movf	?___awmod& (0+255),w,b
  2186  000B2A  6EDF               	movwf	indf2,c
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;messages.c: 59: qmsg->full = 1;
  2190  000B2C  C0C1  FFD9         	movff	send_msg@qmsg,fsr2l
  2191  000B30  C0C2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2192  000B34  0E01               	movlw	1
  2193  000B36  6EDF               	movwf	indf2,c
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;messages.c: 60: return (1);
  2197  000B38  0E01               	movlw	1
  2198  000B3A  0012               	return	
  2199  000B3C                     __end_of_send_msg:
  2200                           	opt stack 0
  2201                           tblptru	equ	0xFF8
  2202                           tblptrh	equ	0xFF7
  2203                           tblptrl	equ	0xFF6
  2204                           tablat	equ	0xFF5
  2205                           prodh	equ	0xFF4
  2206                           prodl	equ	0xFF3
  2207                           postinc0	equ	0xFEE
  2208                           wreg	equ	0xFE8
  2209                           indf1	equ	0xFE7
  2210                           postdec1	equ	0xFE5
  2211                           fsr1h	equ	0xFE2
  2212                           fsr1l	equ	0xFE1
  2213                           indf2	equ	0xFDF
  2214                           postinc2	equ	0xFDE
  2215                           postdec2	equ	0xFDD
  2216                           fsr2h	equ	0xFDA
  2217                           fsr2l	equ	0xFD9
  2218                           status	equ	0xFD8
  2219                           
  2220 ;; *************** function _timer0_lthread *****************
  2221 ;; Defined at:
  2222 ;;		line 9 in file "../src/timer0_thread.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  tptr            2   45[BANK0 ] PTR struct __timer0_thre
  2225 ;;		 -> main@t0thread_data(2), 
  2226 ;;  msgtype         2   47[BANK0 ] int 
  2227 ;;  length          2   49[BANK0 ] int 
  2228 ;;  msgbuffer       2   51[BANK0 ] PTR unsigned char 
  2229 ;;		 -> main@msgbuffer(11), 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  msgval          2   53[BANK0 ] PTR unsigned int 
  2232 ;;		 -> main@msgbuffer(11), 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  2   45[BANK0 ] int 
  2235 ;; Registers used:
  2236 ;;		wreg, status,2, status,0
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2242 ;;      Params:         0       8       0       0       0
  2243 ;;      Locals:         0       2       0       0       0
  2244 ;;      Temps:          0       0       0       0       0
  2245 ;;      Totals:         0      10       0       0       0
  2246 ;;Total ram usage:       10 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:   11
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_main
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text6
  2257  001BAC                     __ptext6:
  2258                           	opt stack 0
  2259  001BAC                     _timer0_lthread:
  2260                           	opt stack 19
  2261                           
  2262                           ;timer0_thread.c: 10: unsigned int *msgval;
  2263                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;incstack = 0
  2267  001BAC  0100               	movlb	0	; () banked
  2268  001BAE  0100               	movlb	0	; () banked
  2269  001BB0  C0B4  F0B6         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2270  001BB4  0100               	movlb	0	; () banked
  2271  001BB6  0100               	movlb	0	; () banked
  2272  001BB8  C0B3  F0B5         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2273                           
  2274                           ; BSR set to: 0
  2275  001BBC  0012               	return	
  2276  001BBE                     __end_of_timer0_lthread:
  2277                           	opt stack 0
  2278                           tblptru	equ	0xFF8
  2279                           tblptrh	equ	0xFF7
  2280                           tblptrl	equ	0xFF6
  2281                           tablat	equ	0xFF5
  2282                           prodh	equ	0xFF4
  2283                           prodl	equ	0xFF3
  2284                           postinc0	equ	0xFEE
  2285                           wreg	equ	0xFE8
  2286                           indf1	equ	0xFE7
  2287                           postdec1	equ	0xFE5
  2288                           fsr1h	equ	0xFE2
  2289                           fsr1l	equ	0xFE1
  2290                           indf2	equ	0xFDF
  2291                           postinc2	equ	0xFDE
  2292                           postdec2	equ	0xFDD
  2293                           fsr2h	equ	0xFDA
  2294                           fsr2l	equ	0xFD9
  2295                           status	equ	0xFD8
  2296                           
  2297 ;; *************** function _init_uart_recv *****************
  2298 ;; Defined at:
  2299 ;;		line 49 in file "../src/my_uart.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  uc              2   45[BANK0 ] PTR struct __uart_comm
  2302 ;;		 -> main@uc(13), 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;		None
  2305 ;; Return value:  Size  Location     Type
  2306 ;;		None               void
  2307 ;; Registers used:
  2308 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2314 ;;      Params:         0       2       0       0       0
  2315 ;;      Locals:         0       0       0       0       0
  2316 ;;      Temps:          0       0       0       0       0
  2317 ;;      Totals:         0       2       0       0       0
  2318 ;;Total ram usage:        2 bytes
  2319 ;; Hardware stack levels used:    1
  2320 ;; Hardware stack levels required when called:   11
  2321 ;; This function calls:
  2322 ;;		Nothing
  2323 ;; This function is called by:
  2324 ;;		_main
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text7
  2329  001B42                     __ptext7:
  2330                           	opt stack 0
  2331  001B42                     _init_uart_recv:
  2332                           	opt stack 19
  2333                           
  2334                           ;my_uart.c: 52: uc_ptr = uc;
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;incstack = 0
  2338  001B42  0100               	movlb	0	; () banked
  2339  001B44  C0AE  F056         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2340  001B48  0100               	movlb	0	; () banked
  2341  001B4A  C0AD  F055         	movff	init_uart_recv@uc,_uc_ptr
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;my_uart.c: 53: uc_ptr->buflen = 0;
  2345  001B4E  EE20 F005          	lfsr	2,5
  2346  001B52  5055               	movf	_uc_ptr,w,c
  2347  001B54  26D9               	addwf	fsr2l,f,c
  2348  001B56  5056               	movf	_uc_ptr+1,w,c
  2349  001B58  22DA               	addwfc	fsr2h,f,c
  2350  001B5A  0E00               	movlw	0
  2351  001B5C  6EDF               	movwf	indf2,c
  2352                           
  2353                           ; BSR set to: 0
  2354  001B5E  0012               	return	
  2355  001B60                     __end_of_init_uart_recv:
  2356                           	opt stack 0
  2357                           tblptru	equ	0xFF8
  2358                           tblptrh	equ	0xFF7
  2359                           tblptrl	equ	0xFF6
  2360                           tablat	equ	0xFF5
  2361                           prodh	equ	0xFF4
  2362                           prodl	equ	0xFF3
  2363                           postinc0	equ	0xFEE
  2364                           wreg	equ	0xFE8
  2365                           indf1	equ	0xFE7
  2366                           postdec1	equ	0xFE5
  2367                           fsr1h	equ	0xFE2
  2368                           fsr1l	equ	0xFE1
  2369                           indf2	equ	0xFDF
  2370                           postinc2	equ	0xFDE
  2371                           postdec2	equ	0xFDD
  2372                           fsr2h	equ	0xFDA
  2373                           fsr2l	equ	0xFD9
  2374                           status	equ	0xFD8
  2375                           
  2376 ;; *************** function _init_timer1_lthread *****************
  2377 ;; Defined at:
  2378 ;;		line 6 in file "../src/timer1_thread.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  tptr            2   45[BANK0 ] PTR struct __timer1_thre
  2381 ;;		 -> main@t1thread_data(2), 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;		None
  2384 ;; Return value:  Size  Location     Type
  2385 ;;		None               void
  2386 ;; Registers used:
  2387 ;;		wreg, fsr2l, fsr2h
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2393 ;;      Params:         0       2       0       0       0
  2394 ;;      Locals:         0       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0
  2396 ;;      Totals:         0       2       0       0       0
  2397 ;;Total ram usage:        2 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:   11
  2400 ;; This function calls:
  2401 ;;		Nothing
  2402 ;; This function is called by:
  2403 ;;		_main
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           	psect	text8
  2408  001BBE                     __ptext8:
  2409                           	opt stack 0
  2410  001BBE                     _init_timer1_lthread:
  2411                           	opt stack 19
  2412                           
  2413                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;incstack = 0
  2417  001BBE  C0AD  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2418  001BC2  C0AE  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2419  001BC6  0E00               	movlw	0
  2420  001BC8  6EDE               	movwf	postinc2,c
  2421  001BCA  0E00               	movlw	0
  2422  001BCC  6EDD               	movwf	postdec2,c
  2423  001BCE  0012               	return	
  2424  001BD0                     __end_of_init_timer1_lthread:
  2425                           	opt stack 0
  2426                           tblptru	equ	0xFF8
  2427                           tblptrh	equ	0xFF7
  2428                           tblptrl	equ	0xFF6
  2429                           tablat	equ	0xFF5
  2430                           prodh	equ	0xFF4
  2431                           prodl	equ	0xFF3
  2432                           postinc0	equ	0xFEE
  2433                           wreg	equ	0xFE8
  2434                           indf1	equ	0xFE7
  2435                           postdec1	equ	0xFE5
  2436                           fsr1h	equ	0xFE2
  2437                           fsr1l	equ	0xFE1
  2438                           indf2	equ	0xFDF
  2439                           postinc2	equ	0xFDE
  2440                           postdec2	equ	0xFDD
  2441                           fsr2h	equ	0xFDA
  2442                           fsr2l	equ	0xFD9
  2443                           status	equ	0xFD8
  2444                           
  2445 ;; *************** function _init_queues *****************
  2446 ;; Defined at:
  2447 ;;		line 194 in file "../src/messages.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;		None
  2452 ;; Return value:  Size  Location     Type
  2453 ;;		None               void
  2454 ;; Registers used:
  2455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2461 ;;      Params:         0       0       0       0       0
  2462 ;;      Locals:         0       0       0       0       0
  2463 ;;      Temps:          0       1       0       0       0
  2464 ;;      Totals:         0       1       0       0       0
  2465 ;;Total ram usage:        1 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:   12
  2468 ;; This function calls:
  2469 ;;		_init_queue
  2470 ;; This function is called by:
  2471 ;;		_main
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text9
  2476  0014BC                     __ptext9:
  2477                           	opt stack 0
  2478  0014BC                     _init_queues:
  2479                           	opt stack 18
  2480                           
  2481                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2482                           
  2483                           ;incstack = 0
  2484  0014BC  0100               	movlb	0	; () banked
  2485  0014BE  6FB1               	movwf	??_init_queues& (0+255),b
  2486  0014C0  0E00               	movlw	0
  2487  0014C2  6E49               	movwf	_MQ_Main_Willing_to_block,c
  2488  0014C4  0100               	movlb	0	; () banked
  2489  0014C6  51B1               	movf	??_init_queues& (0+255),w,b
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2493  0014C8  0101               	movlb	1	; () banked
  2494  0014CA  0E01               	movlw	high _ToMainLow_MQ
  2495  0014CC  0100               	movlb	0	; () banked
  2496  0014CE  0100               	movlb	0	; () banked
  2497  0014D0  6FAE               	movwf	(init_queue@qptr+1)& (0+255),b
  2498  0014D2  0101               	movlb	1	; () banked
  2499  0014D4  0E86               	movlw	low _ToMainLow_MQ
  2500  0014D6  0100               	movlb	0	; () banked
  2501  0014D8  0100               	movlb	0	; () banked
  2502  0014DA  6FAD               	movwf	init_queue@qptr& (0+255),b
  2503  0014DC  ECE8  F009         	call	_init_queue	;wreg free
  2504                           
  2505                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2506  0014E0  0101               	movlb	1	; () banked
  2507  0014E2  0E01               	movlw	high _ToMainHigh_MQ
  2508  0014E4  0100               	movlb	0	; () banked
  2509  0014E6  0100               	movlb	0	; () banked
  2510  0014E8  6FAE               	movwf	(init_queue@qptr+1)& (0+255),b
  2511  0014EA  0101               	movlb	1	; () banked
  2512  0014EC  0E43               	movlw	low _ToMainHigh_MQ
  2513  0014EE  0100               	movlb	0	; () banked
  2514  0014F0  0100               	movlb	0	; () banked
  2515  0014F2  6FAD               	movwf	init_queue@qptr& (0+255),b
  2516  0014F4  ECE8  F009         	call	_init_queue	;wreg free
  2517                           
  2518                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2519  0014F8  0101               	movlb	1	; () banked
  2520  0014FA  0E01               	movlw	high _FromMainLow_MQ
  2521  0014FC  0100               	movlb	0	; () banked
  2522  0014FE  0100               	movlb	0	; () banked
  2523  001500  6FAE               	movwf	(init_queue@qptr+1)& (0+255),b
  2524  001502  0101               	movlb	1	; () banked
  2525  001504  0E00               	movlw	low _FromMainLow_MQ
  2526  001506  0100               	movlb	0	; () banked
  2527  001508  0100               	movlb	0	; () banked
  2528  00150A  6FAD               	movwf	init_queue@qptr& (0+255),b
  2529  00150C  ECE8  F009         	call	_init_queue	;wreg free
  2530                           
  2531                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2532  001510  0102               	movlb	2	; () banked
  2533  001512  0E02               	movlw	high _FromMainHigh_MQ
  2534  001514  0100               	movlb	0	; () banked
  2535  001516  0100               	movlb	0	; () banked
  2536  001518  6FAE               	movwf	(init_queue@qptr+1)& (0+255),b
  2537  00151A  0102               	movlb	2	; () banked
  2538  00151C  0E00               	movlw	low _FromMainHigh_MQ
  2539  00151E  0100               	movlb	0	; () banked
  2540  001520  0100               	movlb	0	; () banked
  2541  001522  6FAD               	movwf	init_queue@qptr& (0+255),b
  2542  001524  ECE8  F009         	call	_init_queue	;wreg free
  2543  001528  0012               	return	
  2544  00152A                     __end_of_init_queues:
  2545                           	opt stack 0
  2546                           tblptru	equ	0xFF8
  2547                           tblptrh	equ	0xFF7
  2548                           tblptrl	equ	0xFF6
  2549                           tablat	equ	0xFF5
  2550                           prodh	equ	0xFF4
  2551                           prodl	equ	0xFF3
  2552                           postinc0	equ	0xFEE
  2553                           wreg	equ	0xFE8
  2554                           indf1	equ	0xFE7
  2555                           postdec1	equ	0xFE5
  2556                           fsr1h	equ	0xFE2
  2557                           fsr1l	equ	0xFE1
  2558                           indf2	equ	0xFDF
  2559                           postinc2	equ	0xFDE
  2560                           postdec2	equ	0xFDD
  2561                           fsr2h	equ	0xFDA
  2562                           fsr2l	equ	0xFD9
  2563                           status	equ	0xFD8
  2564                           
  2565 ;; *************** function _init_queue *****************
  2566 ;; Defined at:
  2567 ;;		line 14 in file "../src/messages.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  qptr            2   45[BANK0 ] PTR struct __msg_queue
  2570 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  i               1   48[BANK0 ] unsigned char 
  2573 ;; Return value:  Size  Location     Type
  2574 ;;		None               void
  2575 ;; Registers used:
  2576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2582 ;;      Params:         0       2       0       0       0
  2583 ;;      Locals:         0       1       0       0       0
  2584 ;;      Temps:          0       1       0       0       0
  2585 ;;      Totals:         0       4       0       0       0
  2586 ;;Total ram usage:        4 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:   11
  2589 ;; This function calls:
  2590 ;;		Nothing
  2591 ;; This function is called by:
  2592 ;;		_init_queues
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text10
  2597  0013D0                     __ptext10:
  2598                           	opt stack 0
  2599  0013D0                     _init_queue:
  2600                           	opt stack 18
  2601                           
  2602                           ;messages.c: 15: unsigned char i;
  2603                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2604                           
  2605                           ;incstack = 0
  2606  0013D0  0100               	movlb	0	; () banked
  2607  0013D2  EE20 F041          	lfsr	2,65
  2608  0013D6  0100               	movlb	0	; () banked
  2609  0013D8  51AD               	movf	init_queue@qptr& (0+255),w,b
  2610  0013DA  26D9               	addwf	fsr2l,f,c
  2611  0013DC  0100               	movlb	0	; () banked
  2612  0013DE  51AE               	movf	(init_queue@qptr+1)& (0+255),w,b
  2613  0013E0  22DA               	addwfc	fsr2h,f,c
  2614  0013E2  0E00               	movlw	0
  2615  0013E4  6EDF               	movwf	indf2,c
  2616                           
  2617                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2618  0013E6  0100               	movlb	0	; () banked
  2619  0013E8  EE20 F042          	lfsr	2,66
  2620  0013EC  0100               	movlb	0	; () banked
  2621  0013EE  51AD               	movf	init_queue@qptr& (0+255),w,b
  2622  0013F0  26D9               	addwf	fsr2l,f,c
  2623  0013F2  0100               	movlb	0	; () banked
  2624  0013F4  51AE               	movf	(init_queue@qptr+1)& (0+255),w,b
  2625  0013F6  22DA               	addwfc	fsr2h,f,c
  2626  0013F8  0E00               	movlw	0
  2627  0013FA  6EDF               	movwf	indf2,c
  2628                           
  2629                           ; BSR set to: 0
  2630                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2631  0013FC  0100               	movlb	0	; () banked
  2632  0013FE  6FAF               	movwf	??_init_queue& (0+255),b
  2633  001400  0E00               	movlw	0
  2634  001402  0100               	movlb	0	; () banked
  2635  001404  0100               	movlb	0	; () banked
  2636  001406  6FB0               	movwf	init_queue@i& (0+255),b
  2637  001408  0100               	movlb	0	; () banked
  2638  00140A  51AF               	movf	??_init_queue& (0+255),w,b
  2639                           
  2640                           ; BSR set to: 0
  2641  00140C  0E04               	movlw	4
  2642  00140E  0100               	movlb	0	; () banked
  2643  001410  0100               	movlb	0	; () banked
  2644  001412  65B0               	cpfsgt	init_queue@i& (0+255),b
  2645  001414  D001               	goto	l3879
  2646  001416  0012               	return	
  2647  001418                     l3879:
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;messages.c: 20: qptr->queue[i].full = 0;
  2651  001418  0100               	movlb	0	; () banked
  2652  00141A  0100               	movlb	0	; () banked
  2653  00141C  51B0               	movf	init_queue@i& (0+255),w,b
  2654  00141E  0D0D               	mullw	13
  2655  001420  50F3               	movf	prodl,w,c
  2656  001422  0100               	movlb	0	; () banked
  2657  001424  0100               	movlb	0	; () banked
  2658  001426  25AD               	addwf	init_queue@qptr& (0+255),w,b
  2659  001428  6ED9               	movwf	fsr2l,c
  2660  00142A  50F4               	movf	prodh,w,c
  2661  00142C  0100               	movlb	0	; () banked
  2662  00142E  0100               	movlb	0	; () banked
  2663  001430  21AE               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2664  001432  6EDA               	movwf	fsr2h,c
  2665  001434  0E00               	movlw	0
  2666  001436  6EDF               	movwf	indf2,c
  2667                           
  2668                           ; BSR set to: 0
  2669  001438  0100               	movlb	0	; () banked
  2670  00143A  0100               	movlb	0	; () banked
  2671  00143C  2BB0               	incf	init_queue@i& (0+255),f,b
  2672                           
  2673                           ; BSR set to: 0
  2674  00143E  0E04               	movlw	4
  2675  001440  0100               	movlb	0	; () banked
  2676  001442  0100               	movlb	0	; () banked
  2677  001444  65B0               	cpfsgt	init_queue@i& (0+255),b
  2678  001446  D7E8               	goto	l3879
  2679  001448  0012               	return	
  2680  00144A                     __end_of_init_queue:
  2681                           	opt stack 0
  2682                           tblptru	equ	0xFF8
  2683                           tblptrh	equ	0xFF7
  2684                           tblptrl	equ	0xFF6
  2685                           tablat	equ	0xFF5
  2686                           prodh	equ	0xFF4
  2687                           prodl	equ	0xFF3
  2688                           postinc0	equ	0xFEE
  2689                           wreg	equ	0xFE8
  2690                           indf1	equ	0xFE7
  2691                           postdec1	equ	0xFE5
  2692                           fsr1h	equ	0xFE2
  2693                           fsr1l	equ	0xFE1
  2694                           indf2	equ	0xFDF
  2695                           postinc2	equ	0xFDE
  2696                           postdec2	equ	0xFDD
  2697                           fsr2h	equ	0xFDA
  2698                           fsr2l	equ	0xFD9
  2699                           status	equ	0xFD8
  2700                           
  2701 ;; *************** function _init_i2c *****************
  2702 ;; Defined at:
  2703 ;;		line 429 in file "../src/my_i2c.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  ic              2   45[BANK0 ] PTR struct __i2c_comm
  2706 ;;		 -> main@ic(29), 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;		None               void
  2711 ;; Registers used:
  2712 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2718 ;;      Params:         0       2       0       0       0
  2719 ;;      Locals:         0       0       0       0       0
  2720 ;;      Temps:          0       0       0       0       0
  2721 ;;      Totals:         0       2       0       0       0
  2722 ;;Total ram usage:        2 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:   11
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text11
  2733  00152A                     __ptext11:
  2734                           	opt stack 0
  2735  00152A                     _init_i2c:
  2736                           	opt stack 19
  2737                           
  2738                           ;my_i2c.c: 430: ic_ptr = ic;
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;incstack = 0
  2742  00152A  0100               	movlb	0	; () banked
  2743  00152C  0100               	movlb	0	; () banked
  2744  00152E  C0AE  F0D0         	movff	init_i2c@ic+1,_ic_ptr+1
  2745  001532  0100               	movlb	0	; () banked
  2746  001534  0100               	movlb	0	; () banked
  2747  001536  C0AD  F0CF         	movff	init_i2c@ic,_ic_ptr
  2748                           
  2749                           ; BSR set to: 0
  2750                           ;my_i2c.c: 431: ic_ptr->buflen = 0;
  2751  00153A  0100               	movlb	0	; () banked
  2752  00153C  EE20 F00A          	lfsr	2,10
  2753  001540  0100               	movlb	0	; () banked
  2754  001542  51CF               	movf	_ic_ptr& (0+255),w,b
  2755  001544  26D9               	addwf	fsr2l,f,c
  2756  001546  0100               	movlb	0	; () banked
  2757  001548  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2758  00154A  22DA               	addwfc	fsr2h,f,c
  2759  00154C  0E00               	movlw	0
  2760  00154E  6EDF               	movwf	indf2,c
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;my_i2c.c: 432: ic_ptr->event_count = 0;
  2764  001550  0100               	movlb	0	; () banked
  2765  001552  EE20 F00C          	lfsr	2,12
  2766  001556  0100               	movlb	0	; () banked
  2767  001558  51CF               	movf	_ic_ptr& (0+255),w,b
  2768  00155A  26D9               	addwf	fsr2l,f,c
  2769  00155C  0100               	movlb	0	; () banked
  2770  00155E  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2771  001560  22DA               	addwfc	fsr2h,f,c
  2772  001562  0E00               	movlw	0
  2773  001564  6EDF               	movwf	indf2,c
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;my_i2c.c: 433: ic_ptr->status = 0x5;
  2777  001566  0100               	movlb	0	; () banked
  2778  001568  EE20 F00D          	lfsr	2,13
  2779  00156C  0100               	movlb	0	; () banked
  2780  00156E  51CF               	movf	_ic_ptr& (0+255),w,b
  2781  001570  26D9               	addwf	fsr2l,f,c
  2782  001572  0100               	movlb	0	; () banked
  2783  001574  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2784  001576  22DA               	addwfc	fsr2h,f,c
  2785  001578  0E05               	movlw	5
  2786  00157A  6EDF               	movwf	indf2,c
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;my_i2c.c: 434: ic_ptr->error_count = 0;
  2790  00157C  0100               	movlb	0	; () banked
  2791  00157E  EE20 F00F          	lfsr	2,15
  2792  001582  0100               	movlb	0	; () banked
  2793  001584  51CF               	movf	_ic_ptr& (0+255),w,b
  2794  001586  26D9               	addwf	fsr2l,f,c
  2795  001588  0100               	movlb	0	; () banked
  2796  00158A  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2797  00158C  22DA               	addwfc	fsr2h,f,c
  2798  00158E  0E00               	movlw	0
  2799  001590  6EDF               	movwf	indf2,c
  2800                           
  2801                           ; BSR set to: 0
  2802  001592  0012               	return	
  2803  001594                     __end_of_init_i2c:
  2804                           	opt stack 0
  2805                           tblptru	equ	0xFF8
  2806                           tblptrh	equ	0xFF7
  2807                           tblptrl	equ	0xFF6
  2808                           tablat	equ	0xFF5
  2809                           prodh	equ	0xFF4
  2810                           prodl	equ	0xFF3
  2811                           postinc0	equ	0xFEE
  2812                           wreg	equ	0xFE8
  2813                           indf1	equ	0xFE7
  2814                           postdec1	equ	0xFE5
  2815                           fsr1h	equ	0xFE2
  2816                           fsr1l	equ	0xFE1
  2817                           indf2	equ	0xFDF
  2818                           postinc2	equ	0xFDE
  2819                           postdec2	equ	0xFDD
  2820                           fsr2h	equ	0xFDA
  2821                           fsr2l	equ	0xFD9
  2822                           status	equ	0xFD8
  2823                           
  2824 ;; *************** function _i2c_master_send *****************
  2825 ;; Defined at:
  2826 ;;		line 44 in file "../src/my_i2c.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  sendlength      1    wreg     unsigned char 
  2829 ;;  recvlength      1   45[BANK0 ] unsigned char 
  2830 ;;  msg             2   46[BANK0 ] PTR unsigned char 
  2831 ;;		 -> main@msgbuffer(11), 
  2832 ;;  slave_addr      1   48[BANK0 ] unsigned char 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  sendlength      1   51[BANK0 ] unsigned char 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      unsigned char 
  2837 ;; Registers used:
  2838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2844 ;;      Params:         0       4       0       0       0
  2845 ;;      Locals:         0       1       0       0       0
  2846 ;;      Temps:          0       2       0       0       0
  2847 ;;      Totals:         0       7       0       0       0
  2848 ;;Total ram usage:        7 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; Hardware stack levels required when called:   11
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		_main
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text12
  2859  0008D2                     __ptext12:
  2860                           	opt stack 0
  2861  0008D2                     _i2c_master_send:
  2862                           	opt stack 19
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;incstack = 0
  2866                           ;i2c_master_send@sendlength stored from wreg
  2867  0008D2  CFE8 F0B3          	movff	wreg,i2c_master_send@sendlength
  2868                           
  2869                           ;my_i2c.c: 46: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < sendlength; ic_ptr->outbu
      +                          flen++) {
  2870  0008D6  0100               	movlb	0	; () banked
  2871  0008D8  EE20 F01A          	lfsr	2,26
  2872  0008DC  0100               	movlb	0	; () banked
  2873  0008DE  51CF               	movf	_ic_ptr& (0+255),w,b
  2874  0008E0  26D9               	addwf	fsr2l,f,c
  2875  0008E2  0100               	movlb	0	; () banked
  2876  0008E4  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2877  0008E6  22DA               	addwfc	fsr2h,f,c
  2878  0008E8  0E00               	movlw	0
  2879  0008EA  6EDF               	movwf	indf2,c
  2880  0008EC  D042               	goto	l3863
  2881  0008EE                     l3859:
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;my_i2c.c: 47: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2885  0008EE  0100               	movlb	0	; () banked
  2886  0008F0  EE20 F01A          	lfsr	2,26
  2887  0008F4  0100               	movlb	0	; () banked
  2888  0008F6  51CF               	movf	_ic_ptr& (0+255),w,b
  2889  0008F8  26D9               	addwf	fsr2l,f,c
  2890  0008FA  0100               	movlb	0	; () banked
  2891  0008FC  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2892  0008FE  22DA               	addwfc	fsr2h,f,c
  2893  000900  50DF               	movf	indf2,w,c
  2894  000902  0100               	movlb	0	; () banked
  2895  000904  6FB1               	movwf	??_i2c_master_send& (0+255),b
  2896  000906  0100               	movlb	0	; () banked
  2897  000908  51B1               	movf	??_i2c_master_send& (0+255),w,b
  2898  00090A  0D01               	mullw	1
  2899  00090C  50F3               	movf	prodl,w,c
  2900  00090E  0100               	movlb	0	; () banked
  2901  000910  0100               	movlb	0	; () banked
  2902  000912  25AE               	addwf	i2c_master_send@msg& (0+255),w,b
  2903  000914  6ED9               	movwf	fsr2l,c
  2904  000916  50F4               	movf	prodh,w,c
  2905  000918  0100               	movlb	0	; () banked
  2906  00091A  0100               	movlb	0	; () banked
  2907  00091C  21AF               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  2908  00091E  6EDA               	movwf	fsr2h,c
  2909  000920  0100               	movlb	0	; () banked
  2910  000922  EE10 F01A          	lfsr	1,26
  2911  000926  0100               	movlb	0	; () banked
  2912  000928  51CF               	movf	_ic_ptr& (0+255),w,b
  2913  00092A  26E1               	addwf	fsr1l,f,c
  2914  00092C  0100               	movlb	0	; () banked
  2915  00092E  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2916  000930  22E2               	addwfc	fsr1h,f,c
  2917  000932  50E7               	movf	indf1,w,c
  2918  000934  0100               	movlb	0	; () banked
  2919  000936  6FB2               	movwf	(??_i2c_master_send+1)& (0+255),b
  2920  000938  0100               	movlb	0	; () banked
  2921  00093A  51B2               	movf	(??_i2c_master_send+1)& (0+255),w,b
  2922  00093C  0D01               	mullw	1
  2923  00093E  0E10               	movlw	16
  2924  000940  26F3               	addwf	prodl,f,c
  2925  000942  0E00               	movlw	0
  2926  000944  22F4               	addwfc	prodh,f,c
  2927  000946  50F3               	movf	prodl,w,c
  2928  000948  0100               	movlb	0	; () banked
  2929  00094A  0100               	movlb	0	; () banked
  2930  00094C  25CF               	addwf	_ic_ptr& (0+255),w,b
  2931  00094E  6EE1               	movwf	fsr1l,c
  2932  000950  50F4               	movf	prodh,w,c
  2933  000952  0100               	movlb	0	; () banked
  2934  000954  0100               	movlb	0	; () banked
  2935  000956  21D0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2936  000958  6EE2               	movwf	fsr1h,c
  2937  00095A  CFDF FFE7          	movff	indf2,indf1
  2938                           
  2939                           ; BSR set to: 0
  2940  00095E  0100               	movlb	0	; () banked
  2941  000960  EE20 F01A          	lfsr	2,26
  2942  000964  0100               	movlb	0	; () banked
  2943  000966  51CF               	movf	_ic_ptr& (0+255),w,b
  2944  000968  26D9               	addwf	fsr2l,f,c
  2945  00096A  0100               	movlb	0	; () banked
  2946  00096C  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2947  00096E  22DA               	addwfc	fsr2h,f,c
  2948  000970  2ADF               	incf	indf2,f,c
  2949  000972                     l3863:
  2950                           
  2951                           ; BSR set to: 0
  2952  000972  0100               	movlb	0	; () banked
  2953  000974  EE20 F01A          	lfsr	2,26
  2954  000978  0100               	movlb	0	; () banked
  2955  00097A  51CF               	movf	_ic_ptr& (0+255),w,b
  2956  00097C  26D9               	addwf	fsr2l,f,c
  2957  00097E  0100               	movlb	0	; () banked
  2958  000980  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2959  000982  22DA               	addwfc	fsr2h,f,c
  2960  000984  50DF               	movf	indf2,w,c
  2961  000986  0100               	movlb	0	; () banked
  2962  000988  6FB1               	movwf	??_i2c_master_send& (0+255),b
  2963  00098A  0100               	movlb	0	; () banked
  2964  00098C  0100               	movlb	0	; () banked
  2965  00098E  51B3               	movf	i2c_master_send@sendlength& (0+255),w,b
  2966  000990  0100               	movlb	0	; () banked
  2967  000992  5DB1               	subwf	??_i2c_master_send& (0+255),w,b
  2968  000994  A0D8               	btfss	status,0,c
  2969  000996  D7AB               	goto	l3859
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;my_i2c.c: 48: }
  2973                           ;my_i2c.c: 50: ic_ptr->slave_addr = slave_addr;
  2974                           
  2975                           ; BSR set to: 0
  2976  000998  0100               	movlb	0	; () banked
  2977  00099A  EE20 F01C          	lfsr	2,28
  2978  00099E  0100               	movlb	0	; () banked
  2979  0009A0  51CF               	movf	_ic_ptr& (0+255),w,b
  2980  0009A2  26D9               	addwf	fsr2l,f,c
  2981  0009A4  0100               	movlb	0	; () banked
  2982  0009A6  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2983  0009A8  22DA               	addwfc	fsr2h,f,c
  2984  0009AA  0100               	movlb	0	; () banked
  2985  0009AC  C0B0  FFDF         	movff	i2c_master_send@slave_addr,indf2
  2986                           
  2987                           ;my_i2c.c: 51: ic_ptr->outbuflen = sendlength;
  2988  0009B0  0100               	movlb	0	; () banked
  2989  0009B2  EE20 F01A          	lfsr	2,26
  2990  0009B6  0100               	movlb	0	; () banked
  2991  0009B8  51CF               	movf	_ic_ptr& (0+255),w,b
  2992  0009BA  26D9               	addwf	fsr2l,f,c
  2993  0009BC  0100               	movlb	0	; () banked
  2994  0009BE  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  2995  0009C0  22DA               	addwfc	fsr2h,f,c
  2996  0009C2  0100               	movlb	0	; () banked
  2997  0009C4  C0B3  FFDF         	movff	i2c_master_send@sendlength,indf2
  2998                           
  2999                           ;my_i2c.c: 52: ic_ptr->buflen = recvlength;
  3000  0009C8  0100               	movlb	0	; () banked
  3001  0009CA  EE20 F00A          	lfsr	2,10
  3002  0009CE  0100               	movlb	0	; () banked
  3003  0009D0  51CF               	movf	_ic_ptr& (0+255),w,b
  3004  0009D2  26D9               	addwf	fsr2l,f,c
  3005  0009D4  0100               	movlb	0	; () banked
  3006  0009D6  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  3007  0009D8  22DA               	addwfc	fsr2h,f,c
  3008  0009DA  0100               	movlb	0	; () banked
  3009  0009DC  C0AD  FFDF         	movff	i2c_master_send@recvlength,indf2
  3010                           
  3011                           ;my_i2c.c: 53: ic_ptr->status = 0xA;
  3012  0009E0  0100               	movlb	0	; () banked
  3013  0009E2  EE20 F00D          	lfsr	2,13
  3014  0009E6  0100               	movlb	0	; () banked
  3015  0009E8  51CF               	movf	_ic_ptr& (0+255),w,b
  3016  0009EA  26D9               	addwf	fsr2l,f,c
  3017  0009EC  0100               	movlb	0	; () banked
  3018  0009EE  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  3019  0009F0  22DA               	addwfc	fsr2h,f,c
  3020  0009F2  0E0A               	movlw	10
  3021  0009F4  6EDF               	movwf	indf2,c
  3022                           
  3023                           ;my_i2c.c: 54: ic_ptr->outbufind = 0;
  3024  0009F6  0100               	movlb	0	; () banked
  3025  0009F8  EE20 F01B          	lfsr	2,27
  3026  0009FC  0100               	movlb	0	; () banked
  3027  0009FE  51CF               	movf	_ic_ptr& (0+255),w,b
  3028  000A00  26D9               	addwf	fsr2l,f,c
  3029  000A02  0100               	movlb	0	; () banked
  3030  000A04  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  3031  000A06  22DA               	addwfc	fsr2h,f,c
  3032  000A08  0E00               	movlw	0
  3033  000A0A  6EDF               	movwf	indf2,c
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;my_i2c.c: 56: SSPCON2bits.SEN = 1;
  3037  000A0C  80C5               	bsf	4037,0,c	;volatile
  3038  000A0E  0012               	return	
  3039  000A10                     __end_of_i2c_master_send:
  3040                           	opt stack 0
  3041                           tblptru	equ	0xFF8
  3042                           tblptrh	equ	0xFF7
  3043                           tblptrl	equ	0xFF6
  3044                           tablat	equ	0xFF5
  3045                           prodh	equ	0xFF4
  3046                           prodl	equ	0xFF3
  3047                           postinc0	equ	0xFEE
  3048                           wreg	equ	0xFE8
  3049                           indf1	equ	0xFE7
  3050                           postdec1	equ	0xFE5
  3051                           fsr1h	equ	0xFE2
  3052                           fsr1l	equ	0xFE1
  3053                           indf2	equ	0xFDF
  3054                           postinc2	equ	0xFDE
  3055                           postdec2	equ	0xFDD
  3056                           fsr2h	equ	0xFDA
  3057                           fsr2l	equ	0xFD9
  3058                           status	equ	0xFD8
  3059                           
  3060 ;; *************** function _i2c_configure_master *****************
  3061 ;; Defined at:
  3062 ;;		line 15 in file "../src/my_i2c.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;		None
  3067 ;; Return value:  Size  Location     Type
  3068 ;;		None               void
  3069 ;; Registers used:
  3070 ;;		wreg, status,2
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3076 ;;      Params:         0       0       0       0       0
  3077 ;;      Locals:         0       0       0       0       0
  3078 ;;      Temps:          0       0       0       0       0
  3079 ;;      Totals:         0       0       0       0       0
  3080 ;;Total ram usage:        0 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:   11
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_main
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text13
  3091  001B02                     __ptext13:
  3092                           	opt stack 0
  3093  001B02                     _i2c_configure_master:
  3094                           	opt stack 19
  3095                           
  3096                           ;my_i2c.c: 18: SSPSTAT = 0x0;
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;incstack = 0
  3100  001B02  0E00               	movlw	0
  3101  001B04  6EC7               	movwf	4039,c	;volatile
  3102                           
  3103                           ;my_i2c.c: 19: SSPCON1 = 0x0;
  3104  001B06  0E00               	movlw	0
  3105  001B08  6EC6               	movwf	4038,c	;volatile
  3106                           
  3107                           ;my_i2c.c: 20: SSPCON2 = 0x0;
  3108  001B0A  0E00               	movlw	0
  3109  001B0C  6EC5               	movwf	4037,c	;volatile
  3110                           
  3111                           ;my_i2c.c: 22: TRISCbits.TRISC3 = 1;
  3112  001B0E  8694               	bsf	3988,3,c	;volatile
  3113                           
  3114                           ;my_i2c.c: 23: TRISCbits.TRISC4 = 1;
  3115  001B10  8894               	bsf	3988,4,c	;volatile
  3116                           
  3117                           ;my_i2c.c: 24: SSPADD = 29;
  3118  001B12  0E1D               	movlw	29
  3119  001B14  6EC8               	movwf	4040,c	;volatile
  3120                           
  3121                           ;my_i2c.c: 27: SSPCON1bits.SSPM = 0x8;
  3122  001B16  50C6               	movf	4038,w,c	;volatile
  3123  001B18  0BF0               	andlw	-16
  3124  001B1A  0908               	iorlw	8
  3125  001B1C  6EC6               	movwf	4038,c	;volatile
  3126                           
  3127                           ;my_i2c.c: 28: SSPCON1bits.SSPEN = 1;
  3128  001B1E  8AC6               	bsf	4038,5,c	;volatile
  3129  001B20  0012               	return	
  3130  001B22                     __end_of_i2c_configure_master:
  3131                           	opt stack 0
  3132                           tblptru	equ	0xFF8
  3133                           tblptrh	equ	0xFF7
  3134                           tblptrl	equ	0xFF6
  3135                           tablat	equ	0xFF5
  3136                           prodh	equ	0xFF4
  3137                           prodl	equ	0xFF3
  3138                           postinc0	equ	0xFEE
  3139                           wreg	equ	0xFE8
  3140                           indf1	equ	0xFE7
  3141                           postdec1	equ	0xFE5
  3142                           fsr1h	equ	0xFE2
  3143                           fsr1l	equ	0xFE1
  3144                           indf2	equ	0xFDF
  3145                           postinc2	equ	0xFDE
  3146                           postdec2	equ	0xFDD
  3147                           fsr2h	equ	0xFDA
  3148                           fsr2l	equ	0xFD9
  3149                           status	equ	0xFD8
  3150                           
  3151 ;; *************** function _enable_interrupts *****************
  3152 ;; Defined at:
  3153 ;;		line 15 in file "../src/interrupts.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;		None
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;		None
  3158 ;; Return value:  Size  Location     Type
  3159 ;;		None               void
  3160 ;; Registers used:
  3161 ;;		None
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3167 ;;      Params:         0       0       0       0       0
  3168 ;;      Locals:         0       0       0       0       0
  3169 ;;      Temps:          0       0       0       0       0
  3170 ;;      Totals:         0       0       0       0       0
  3171 ;;Total ram usage:        0 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:   11
  3174 ;; This function calls:
  3175 ;;		Nothing
  3176 ;; This function is called by:
  3177 ;;		_main
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text14
  3182  001C30                     __ptext14:
  3183                           	opt stack 0
  3184  001C30                     _enable_interrupts:
  3185                           	opt stack 19
  3186                           
  3187                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3188                           
  3189                           ;incstack = 0
  3190  001C30  8ED0               	bsf	4048,7,c	;volatile
  3191                           
  3192                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3193  001C32  8EF2               	bsf	intcon,7,c	;volatile
  3194                           
  3195                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3196  001C34  8CF2               	bsf	intcon,6,c	;volatile
  3197  001C36  0012               	return	
  3198  001C38                     __end_of_enable_interrupts:
  3199                           	opt stack 0
  3200                           tblptru	equ	0xFF8
  3201                           tblptrh	equ	0xFF7
  3202                           tblptrl	equ	0xFF6
  3203                           tablat	equ	0xFF5
  3204                           prodh	equ	0xFF4
  3205                           prodl	equ	0xFF3
  3206                           intcon	equ	0xFF2
  3207                           postinc0	equ	0xFEE
  3208                           wreg	equ	0xFE8
  3209                           indf1	equ	0xFE7
  3210                           postdec1	equ	0xFE5
  3211                           fsr1h	equ	0xFE2
  3212                           fsr1l	equ	0xFE1
  3213                           indf2	equ	0xFDF
  3214                           postinc2	equ	0xFDE
  3215                           postdec2	equ	0xFDD
  3216                           fsr2h	equ	0xFDA
  3217                           fsr2l	equ	0xFD9
  3218                           status	equ	0xFD8
  3219                           
  3220 ;; *************** function _block_on_To_msgqueues *****************
  3221 ;; Defined at:
  3222 ;;		line 258 in file "../src/messages.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;		None               void
  3229 ;; Registers used:
  3230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3236 ;;      Params:         0       0       0       0       0
  3237 ;;      Locals:         0       0       0       0       0
  3238 ;;      Temps:          0       1       0       0       0
  3239 ;;      Totals:         0       1       0       0       0
  3240 ;;Total ram usage:        1 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:   14
  3243 ;; This function calls:
  3244 ;;		_Delay1KTCYx
  3245 ;;		_check_msg
  3246 ;;		_in_main
  3247 ;; This function is called by:
  3248 ;;		_main
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text15
  3253  001352                     __ptext15:
  3254                           	opt stack 0
  3255  001352                     _block_on_To_msgqueues:
  3256                           	opt stack 16
  3257                           
  3258                           ;messages.c: 259: if (!in_main()) {
  3259                           
  3260                           ;incstack = 0
  3261  001352  EC3C  F00C         	call	_in_main	;wreg free
  3262  001356  0100               	movlb	0	; () banked
  3263  001358  0100               	movlb	0	; () banked
  3264  00135A  51B2               	movf	(?_in_main+1)& (0+255),w,b
  3265  00135C  0100               	movlb	0	; () banked
  3266  00135E  11B1               	iorwf	?_in_main& (0+255),w,b
  3267  001360  B4D8               	btfsc	status,2,c
  3268  001362  0012               	return	
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;messages.c: 261: }
  3272                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3273                           
  3274                           ; BSR set to: 0
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;messages.c: 260: return;
  3278  001364  0100               	movlb	0	; () banked
  3279  001366  6FB3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3280  001368  0E01               	movlw	1
  3281  00136A  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3282  00136C  0100               	movlb	0	; () banked
  3283  00136E  51B3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3284  001370                     l3813:
  3285                           
  3286                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3287  001370  0101               	movlb	1	; () banked
  3288  001372  0E01               	movlw	high _ToMainHigh_MQ
  3289  001374  0100               	movlb	0	; () banked
  3290  001376  0100               	movlb	0	; () banked
  3291  001378  6FAE               	movwf	(check_msg@qptr+1)& (0+255),b
  3292  00137A  0101               	movlb	1	; () banked
  3293  00137C  0E43               	movlw	low _ToMainHigh_MQ
  3294  00137E  0100               	movlb	0	; () banked
  3295  001380  0100               	movlb	0	; () banked
  3296  001382  6FAD               	movwf	check_msg@qptr& (0+255),b
  3297  001384  ECF7  F00C         	call	_check_msg	;wreg free
  3298  001388  0900               	iorlw	0
  3299  00138A  B4D8               	btfsc	status,2,c
  3300  00138C  D007               	goto	l3819
  3301                           
  3302                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3303  00138E  0100               	movlb	0	; () banked
  3304  001390  6FB3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3305  001392  0E00               	movlw	0
  3306  001394  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3307  001396  0100               	movlb	0	; () banked
  3308  001398  51B3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3309  00139A  0012               	return	
  3310  00139C                     l3819:
  3311                           
  3312                           ;messages.c: 271: }
  3313                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3314  00139C  0101               	movlb	1	; () banked
  3315  00139E  0E01               	movlw	high _ToMainLow_MQ
  3316  0013A0  0100               	movlb	0	; () banked
  3317  0013A2  0100               	movlb	0	; () banked
  3318  0013A4  6FAE               	movwf	(check_msg@qptr+1)& (0+255),b
  3319  0013A6  0101               	movlb	1	; () banked
  3320  0013A8  0E86               	movlw	low _ToMainLow_MQ
  3321  0013AA  0100               	movlb	0	; () banked
  3322  0013AC  0100               	movlb	0	; () banked
  3323  0013AE  6FAD               	movwf	check_msg@qptr& (0+255),b
  3324  0013B0  ECF7  F00C         	call	_check_msg	;wreg free
  3325  0013B4  0900               	iorlw	0
  3326  0013B6  B4D8               	btfsc	status,2,c
  3327  0013B8  D007               	goto	l3825
  3328                           
  3329                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3330  0013BA  0100               	movlb	0	; () banked
  3331  0013BC  6FB3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3332  0013BE  0E00               	movlw	0
  3333  0013C0  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3334  0013C2  0100               	movlb	0	; () banked
  3335  0013C4  51B3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3336  0013C6  0012               	return	
  3337  0013C8                     l3825:
  3338                           
  3339                           ;messages.c: 278: }
  3340                           ;messages.c: 279: Delay1KTCYx(10);
  3341  0013C8  0E0A               	movlw	10
  3342  0013CA  ECCB  F00D         	call	_Delay1KTCYx
  3343  0013CE  D7D0               	goto	l3813
  3344  0013D0                     __end_of_block_on_To_msgqueues:
  3345                           	opt stack 0
  3346                           tblptru	equ	0xFF8
  3347                           tblptrh	equ	0xFF7
  3348                           tblptrl	equ	0xFF6
  3349                           tablat	equ	0xFF5
  3350                           prodh	equ	0xFF4
  3351                           prodl	equ	0xFF3
  3352                           intcon	equ	0xFF2
  3353                           postinc0	equ	0xFEE
  3354                           wreg	equ	0xFE8
  3355                           indf1	equ	0xFE7
  3356                           postdec1	equ	0xFE5
  3357                           fsr1h	equ	0xFE2
  3358                           fsr1l	equ	0xFE1
  3359                           indf2	equ	0xFDF
  3360                           postinc2	equ	0xFDE
  3361                           postdec2	equ	0xFDD
  3362                           fsr2h	equ	0xFDA
  3363                           fsr2l	equ	0xFD9
  3364                           status	equ	0xFD8
  3365                           
  3366 ;; *************** function _in_main *****************
  3367 ;; Defined at:
  3368 ;;		line 41 in file "../src/interrupts.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  2   49[BANK0 ] int 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3382 ;;      Params:         0       2       0       0       0
  3383 ;;      Locals:         0       0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0
  3385 ;;      Totals:         0       2       0       0       0
  3386 ;;Total ram usage:        2 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:   13
  3389 ;; This function calls:
  3390 ;;		_in_high_int
  3391 ;;		_in_low_int
  3392 ;; This function is called by:
  3393 ;;		_block_on_To_msgqueues
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text16
  3398  001878                     __ptext16:
  3399                           	opt stack 0
  3400  001878                     _in_main:
  3401                           	opt stack 16
  3402                           
  3403                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3404                           
  3405                           ;incstack = 0
  3406  001878  ECF6  F00B         	call	_in_low_int	;wreg free
  3407  00187C  0100               	movlb	0	; () banked
  3408  00187E  0100               	movlb	0	; () banked
  3409  001880  51B0               	movf	(?_in_low_int+1)& (0+255),w,b
  3410  001882  0100               	movlb	0	; () banked
  3411  001884  11AF               	iorwf	?_in_low_int& (0+255),w,b
  3412  001886  A4D8               	btfss	status,2,c
  3413  001888  D011               	goto	l3535
  3414                           
  3415                           ; BSR set to: 0
  3416  00188A  ECE8  F00D         	call	_in_high_int	;wreg free
  3417  00188E  0100               	movlb	0	; () banked
  3418  001890  0100               	movlb	0	; () banked
  3419  001892  51AE               	movf	(?_in_high_int+1)& (0+255),w,b
  3420  001894  0100               	movlb	0	; () banked
  3421  001896  11AD               	iorwf	?_in_high_int& (0+255),w,b
  3422  001898  A4D8               	btfss	status,2,c
  3423  00189A  D008               	goto	l3535
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;interrupts.c: 43: return (1);
  3427  00189C  0E00               	movlw	0
  3428  00189E  0100               	movlb	0	; () banked
  3429  0018A0  0100               	movlb	0	; () banked
  3430  0018A2  6FB2               	movwf	(?_in_main+1)& (0+255),b
  3431  0018A4  0E01               	movlw	1
  3432  0018A6  0100               	movlb	0	; () banked
  3433  0018A8  6FB1               	movwf	?_in_main& (0+255),b
  3434  0018AA  0012               	return	
  3435  0018AC                     l3535:
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;interrupts.c: 45: return (0);
  3439  0018AC  0E00               	movlw	0
  3440  0018AE  0100               	movlb	0	; () banked
  3441  0018B0  0100               	movlb	0	; () banked
  3442  0018B2  6FB2               	movwf	(?_in_main+1)& (0+255),b
  3443  0018B4  0E00               	movlw	0
  3444  0018B6  0100               	movlb	0	; () banked
  3445  0018B8  6FB1               	movwf	?_in_main& (0+255),b
  3446  0018BA  0012               	return	
  3447  0018BC                     __end_of_in_main:
  3448                           	opt stack 0
  3449                           tblptru	equ	0xFF8
  3450                           tblptrh	equ	0xFF7
  3451                           tblptrl	equ	0xFF6
  3452                           tablat	equ	0xFF5
  3453                           prodh	equ	0xFF4
  3454                           prodl	equ	0xFF3
  3455                           intcon	equ	0xFF2
  3456                           postinc0	equ	0xFEE
  3457                           wreg	equ	0xFE8
  3458                           indf1	equ	0xFE7
  3459                           postdec1	equ	0xFE5
  3460                           fsr1h	equ	0xFE2
  3461                           fsr1l	equ	0xFE1
  3462                           indf2	equ	0xFDF
  3463                           postinc2	equ	0xFDE
  3464                           postdec2	equ	0xFDD
  3465                           fsr2h	equ	0xFDA
  3466                           fsr2l	equ	0xFD9
  3467                           status	equ	0xFD8
  3468                           
  3469 ;; *************** function _in_low_int *****************
  3470 ;; Defined at:
  3471 ;;		line 31 in file "../src/interrupts.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;		None
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;		None
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  2   47[BANK0 ] int 
  3478 ;; Registers used:
  3479 ;;		wreg, status,2, status,0, cstack
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3485 ;;      Params:         0       2       0       0       0
  3486 ;;      Locals:         0       0       0       0       0
  3487 ;;      Temps:          0       0       0       0       0
  3488 ;;      Totals:         0       2       0       0       0
  3489 ;;Total ram usage:        2 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; Hardware stack levels required when called:   12
  3492 ;; This function calls:
  3493 ;;		_in_high_int
  3494 ;; This function is called by:
  3495 ;;		_in_main
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499                           	psect	text17
  3500  0017EC                     __ptext17:
  3501                           	opt stack 0
  3502  0017EC                     _in_low_int:
  3503                           	opt stack 16
  3504                           
  3505                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;incstack = 0
  3509  0017EC  ACF2               	btfss	intcon,6,c	;volatile
  3510  0017EE  D008               	goto	l3513
  3511                           
  3512                           ;interrupts.c: 33: return (0);
  3513  0017F0  0E00               	movlw	0
  3514  0017F2  0100               	movlb	0	; () banked
  3515  0017F4  0100               	movlb	0	; () banked
  3516  0017F6  6FB0               	movwf	(?_in_low_int+1)& (0+255),b
  3517  0017F8  0E00               	movlw	0
  3518  0017FA  0100               	movlb	0	; () banked
  3519  0017FC  6FAF               	movwf	?_in_low_int& (0+255),b
  3520  0017FE  0012               	return	
  3521  001800                     l3513:
  3522  001800  ECE8  F00D         	call	_in_high_int	;wreg free
  3523  001804  0100               	movlb	0	; () banked
  3524  001806  0100               	movlb	0	; () banked
  3525  001808  51AE               	movf	(?_in_high_int+1)& (0+255),w,b
  3526  00180A  0100               	movlb	0	; () banked
  3527  00180C  11AD               	iorwf	?_in_high_int& (0+255),w,b
  3528  00180E  B4D8               	btfsc	status,2,c
  3529  001810  D008               	goto	l3521
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;interrupts.c: 35: return (0);
  3533  001812  0E00               	movlw	0
  3534  001814  0100               	movlb	0	; () banked
  3535  001816  0100               	movlb	0	; () banked
  3536  001818  6FB0               	movwf	(?_in_low_int+1)& (0+255),b
  3537  00181A  0E00               	movlw	0
  3538  00181C  0100               	movlb	0	; () banked
  3539  00181E  6FAF               	movwf	?_in_low_int& (0+255),b
  3540  001820  0012               	return	
  3541  001822                     l3521:
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;interrupts.c: 37: return (1);
  3545  001822  0E00               	movlw	0
  3546  001824  0100               	movlb	0	; () banked
  3547  001826  0100               	movlb	0	; () banked
  3548  001828  6FB0               	movwf	(?_in_low_int+1)& (0+255),b
  3549  00182A  0E01               	movlw	1
  3550  00182C  0100               	movlb	0	; () banked
  3551  00182E  6FAF               	movwf	?_in_low_int& (0+255),b
  3552  001830  0012               	return	
  3553  001832                     __end_of_in_low_int:
  3554                           	opt stack 0
  3555                           tblptru	equ	0xFF8
  3556                           tblptrh	equ	0xFF7
  3557                           tblptrl	equ	0xFF6
  3558                           tablat	equ	0xFF5
  3559                           prodh	equ	0xFF4
  3560                           prodl	equ	0xFF3
  3561                           intcon	equ	0xFF2
  3562                           postinc0	equ	0xFEE
  3563                           wreg	equ	0xFE8
  3564                           indf1	equ	0xFE7
  3565                           postdec1	equ	0xFE5
  3566                           fsr1h	equ	0xFE2
  3567                           fsr1l	equ	0xFE1
  3568                           indf2	equ	0xFDF
  3569                           postinc2	equ	0xFDE
  3570                           postdec2	equ	0xFDD
  3571                           fsr2h	equ	0xFDA
  3572                           fsr2l	equ	0xFD9
  3573                           status	equ	0xFD8
  3574                           
  3575 ;; *************** function _in_high_int *****************
  3576 ;; Defined at:
  3577 ;;		line 23 in file "../src/interrupts.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  2   45[BANK0 ] int 
  3584 ;; Registers used:
  3585 ;;		wreg, status,2
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3591 ;;      Params:         0       2       0       0       0
  3592 ;;      Locals:         0       0       0       0       0
  3593 ;;      Temps:          0       0       0       0       0
  3594 ;;      Totals:         0       2       0       0       0
  3595 ;;Total ram usage:        2 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:   11
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_in_low_int
  3602 ;;		_in_main
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text18
  3607  001BD0                     __ptext18:
  3608                           	opt stack 0
  3609  001BD0                     _in_high_int:
  3610                           	opt stack 16
  3611                           
  3612                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;incstack = 0
  3616  001BD0  0E00               	movlw	0
  3617  001BD2  AEF2               	btfss	intcon,7,c	;volatile
  3618  001BD4  0E01               	movlw	1
  3619  001BD6  0100               	movlb	0	; () banked
  3620  001BD8  0100               	movlb	0	; () banked
  3621  001BDA  6FAD               	movwf	?_in_high_int& (0+255),b
  3622  001BDC  0100               	movlb	0	; () banked
  3623  001BDE  6BAE               	clrf	(?_in_high_int+1)& (0+255),b
  3624  001BE0  0012               	return	
  3625  001BE2                     __end_of_in_high_int:
  3626                           	opt stack 0
  3627                           tblptru	equ	0xFF8
  3628                           tblptrh	equ	0xFF7
  3629                           tblptrl	equ	0xFF6
  3630                           tablat	equ	0xFF5
  3631                           prodh	equ	0xFF4
  3632                           prodl	equ	0xFF3
  3633                           intcon	equ	0xFF2
  3634                           postinc0	equ	0xFEE
  3635                           wreg	equ	0xFE8
  3636                           indf1	equ	0xFE7
  3637                           postdec1	equ	0xFE5
  3638                           fsr1h	equ	0xFE2
  3639                           fsr1l	equ	0xFE1
  3640                           indf2	equ	0xFDF
  3641                           postinc2	equ	0xFDE
  3642                           postdec2	equ	0xFDD
  3643                           fsr2h	equ	0xFDA
  3644                           fsr2l	equ	0xFD9
  3645                           status	equ	0xFD8
  3646                           
  3647 ;; *************** function _check_msg *****************
  3648 ;; Defined at:
  3649 ;;		line 222 in file "../src/messages.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  qptr            2   45[BANK0 ] PTR struct __msg_queue
  3652 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;		None
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      unsigned char 
  3657 ;; Registers used:
  3658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3664 ;;      Params:         0       2       0       0       0
  3665 ;;      Locals:         0       0       0       0       0
  3666 ;;      Temps:          0       1       0       0       0
  3667 ;;      Totals:         0       3       0       0       0
  3668 ;;Total ram usage:        3 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:   11
  3671 ;; This function calls:
  3672 ;;		Nothing
  3673 ;; This function is called by:
  3674 ;;		_block_on_To_msgqueues
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text19
  3679  0019EE                     __ptext19:
  3680                           	opt stack 0
  3681  0019EE                     _check_msg:
  3682                           	opt stack 18
  3683                           
  3684                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;incstack = 0
  3688  0019EE  0100               	movlb	0	; () banked
  3689  0019F0  EE20 F042          	lfsr	2,66
  3690  0019F4  0100               	movlb	0	; () banked
  3691  0019F6  51AD               	movf	check_msg@qptr& (0+255),w,b
  3692  0019F8  26D9               	addwf	fsr2l,f,c
  3693  0019FA  0100               	movlb	0	; () banked
  3694  0019FC  51AE               	movf	(check_msg@qptr+1)& (0+255),w,b
  3695  0019FE  22DA               	addwfc	fsr2h,f,c
  3696  001A00  50DF               	movf	indf2,w,c
  3697  001A02  0100               	movlb	0	; () banked
  3698  001A04  6FAF               	movwf	??_check_msg& (0+255),b
  3699  001A06  0100               	movlb	0	; () banked
  3700  001A08  51AF               	movf	??_check_msg& (0+255),w,b
  3701  001A0A  0D0D               	mullw	13
  3702  001A0C  50F3               	movf	prodl,w,c
  3703  001A0E  0100               	movlb	0	; () banked
  3704  001A10  0100               	movlb	0	; () banked
  3705  001A12  25AD               	addwf	check_msg@qptr& (0+255),w,b
  3706  001A14  6ED9               	movwf	fsr2l,c
  3707  001A16  50F4               	movf	prodh,w,c
  3708  001A18  0100               	movlb	0	; () banked
  3709  001A1A  0100               	movlb	0	; () banked
  3710  001A1C  21AE               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3711  001A1E  6EDA               	movwf	fsr2h,c
  3712  001A20  50DF               	movf	indf2,w,c
  3713  001A22  0012               	return	
  3714  001A24                     __end_of_check_msg:
  3715                           	opt stack 0
  3716                           tblptru	equ	0xFF8
  3717                           tblptrh	equ	0xFF7
  3718                           tblptrl	equ	0xFF6
  3719                           tablat	equ	0xFF5
  3720                           prodh	equ	0xFF4
  3721                           prodl	equ	0xFF3
  3722                           intcon	equ	0xFF2
  3723                           postinc0	equ	0xFEE
  3724                           wreg	equ	0xFE8
  3725                           indf1	equ	0xFE7
  3726                           postdec1	equ	0xFE5
  3727                           fsr1h	equ	0xFE2
  3728                           fsr1l	equ	0xFE1
  3729                           indf2	equ	0xFDF
  3730                           postinc2	equ	0xFDE
  3731                           postdec2	equ	0xFDD
  3732                           fsr2h	equ	0xFDA
  3733                           fsr2l	equ	0xFD9
  3734                           status	equ	0xFD8
  3735                           
  3736 ;; *************** function _Delay1KTCYx *****************
  3737 ;; Defined at:
  3738 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  unit            1    wreg     unsigned char 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  unit            1   45[BANK0 ] unsigned char 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;		None               void
  3745 ;; Registers used:
  3746 ;;		wreg
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3752 ;;      Params:         0       0       0       0       0
  3753 ;;      Locals:         0       1       0       0       0
  3754 ;;      Temps:          0       0       0       0       0
  3755 ;;      Totals:         0       1       0       0       0
  3756 ;;Total ram usage:        1 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; Hardware stack levels required when called:   11
  3759 ;; This function calls:
  3760 ;;		Nothing
  3761 ;; This function is called by:
  3762 ;;		_block_on_To_msgqueues
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           	psect	text20
  3767  001B96                     __ptext20:
  3768                           	opt stack 0
  3769  001B96                     _Delay1KTCYx:
  3770                           	opt stack 18
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;incstack = 0
  3774                           ;Delay1KTCYx@unit stored from wreg
  3775  001B96  CFE8 F0AD          	movff	wreg,Delay1KTCYx@unit
  3776  001B9A                     l789:
  3777  001B9A  0EFA               	movlw	250
  3778  001B9C                     u3927:
  3779  001B9C  F000               	nop	
  3780  001B9E  2EE8               	decfsz	wreg,f,c
  3781  001BA0  D7FD               	goto	u3927
  3782  001BA2  0100               	movlb	0	; () banked
  3783  001BA4  0100               	movlb	0	; () banked
  3784  001BA6  2FAD               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3785  001BA8  D7F8               	goto	l789
  3786  001BAA  0012               	return	
  3787  001BAC                     __end_of_Delay1KTCYx:
  3788                           	opt stack 0
  3789                           tblptru	equ	0xFF8
  3790                           tblptrh	equ	0xFF7
  3791                           tblptrl	equ	0xFF6
  3792                           tablat	equ	0xFF5
  3793                           prodh	equ	0xFF4
  3794                           prodl	equ	0xFF3
  3795                           intcon	equ	0xFF2
  3796                           postinc0	equ	0xFEE
  3797                           wreg	equ	0xFE8
  3798                           indf1	equ	0xFE7
  3799                           postdec1	equ	0xFE5
  3800                           fsr1h	equ	0xFE2
  3801                           fsr1l	equ	0xFE1
  3802                           indf2	equ	0xFDF
  3803                           postinc2	equ	0xFDE
  3804                           postdec2	equ	0xFDD
  3805                           fsr2h	equ	0xFDA
  3806                           fsr2l	equ	0xFD9
  3807                           status	equ	0xFD8
  3808                           
  3809 ;; *************** function _ToMainLow_recvmsg *****************
  3810 ;; Defined at:
  3811 ;;		line 112 in file "../src/messages.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  maxlength       1    wreg     unsigned char 
  3814 ;;  msgtype         2   69[BANK0 ] PTR unsigned char 
  3815 ;;		 -> main@msgtype(1), 
  3816 ;;  data            2   71[BANK0 ] PTR void 
  3817 ;;		 -> main@msgbuffer(11), 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  maxlength       1   73[BANK0 ] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      char 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3829 ;;      Params:         0       4       0       0       0
  3830 ;;      Locals:         0       1       0       0       0
  3831 ;;      Temps:          0       0       0       0       0
  3832 ;;      Totals:         0       5       0       0       0
  3833 ;;Total ram usage:        5 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:   13
  3836 ;; This function calls:
  3837 ;;		_recv_msg
  3838 ;; This function is called by:
  3839 ;;		_main
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text21
  3844  0018BC                     __ptext21:
  3845                           	opt stack 0
  3846  0018BC                     _ToMainLow_recvmsg:
  3847                           	opt stack 17
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;incstack = 0
  3851                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3852  0018BC  CFE8 F0C9          	movff	wreg,ToMainLow_recvmsg@maxlength
  3853                           
  3854                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3855  0018C0  0101               	movlb	1	; () banked
  3856  0018C2  0E01               	movlw	high _ToMainLow_MQ
  3857  0018C4  0100               	movlb	0	; () banked
  3858  0018C6  0100               	movlb	0	; () banked
  3859  0018C8  6FB8               	movwf	(recv_msg@qptr+1)& (0+255),b
  3860  0018CA  0101               	movlb	1	; () banked
  3861  0018CC  0E86               	movlw	low _ToMainLow_MQ
  3862  0018CE  0100               	movlb	0	; () banked
  3863  0018D0  0100               	movlb	0	; () banked
  3864  0018D2  6FB7               	movwf	recv_msg@qptr& (0+255),b
  3865  0018D4  C0C9  F0B9         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3866  0018D8  0100               	movlb	0	; () banked
  3867  0018DA  0100               	movlb	0	; () banked
  3868  0018DC  C0C6  F0BB         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3869  0018E0  0100               	movlb	0	; () banked
  3870  0018E2  0100               	movlb	0	; () banked
  3871  0018E4  C0C5  F0BA         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3872  0018E8  0100               	movlb	0	; () banked
  3873  0018EA  0100               	movlb	0	; () banked
  3874  0018EC  C0C8  F0BD         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3875  0018F0  0100               	movlb	0	; () banked
  3876  0018F2  0100               	movlb	0	; () banked
  3877  0018F4  C0C7  F0BC         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3878  0018F8  ECBA  F003         	call	_recv_msg	;wreg free
  3879  0018FC  0012               	return	
  3880  0018FE                     __end_of_ToMainLow_recvmsg:
  3881                           	opt stack 0
  3882                           tblptru	equ	0xFF8
  3883                           tblptrh	equ	0xFF7
  3884                           tblptrl	equ	0xFF6
  3885                           tablat	equ	0xFF5
  3886                           prodh	equ	0xFF4
  3887                           prodl	equ	0xFF3
  3888                           intcon	equ	0xFF2
  3889                           postinc0	equ	0xFEE
  3890                           wreg	equ	0xFE8
  3891                           indf1	equ	0xFE7
  3892                           postdec1	equ	0xFE5
  3893                           fsr1h	equ	0xFE2
  3894                           fsr1l	equ	0xFE1
  3895                           indf2	equ	0xFDF
  3896                           postinc2	equ	0xFDE
  3897                           postdec2	equ	0xFDD
  3898                           fsr2h	equ	0xFDA
  3899                           fsr2l	equ	0xFD9
  3900                           status	equ	0xFD8
  3901                           
  3902 ;; *************** function _ToMainHigh_recvmsg *****************
  3903 ;; Defined at:
  3904 ;;		line 135 in file "../src/messages.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;  maxlength       1    wreg     unsigned char 
  3907 ;;  msgtype         2   69[BANK0 ] PTR unsigned char 
  3908 ;;		 -> main@msgtype(1), 
  3909 ;;  data            2   71[BANK0 ] PTR void 
  3910 ;;		 -> main@msgbuffer(11), 
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;  maxlength       1   73[BANK0 ] unsigned char 
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1    wreg      char 
  3915 ;; Registers used:
  3916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3922 ;;      Params:         0       4       0       0       0
  3923 ;;      Locals:         0       1       0       0       0
  3924 ;;      Temps:          0       0       0       0       0
  3925 ;;      Totals:         0       5       0       0       0
  3926 ;;Total ram usage:        5 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:   13
  3929 ;; This function calls:
  3930 ;;		_recv_msg
  3931 ;; This function is called by:
  3932 ;;		_main
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           	psect	text22
  3937  0018FE                     __ptext22:
  3938                           	opt stack 0
  3939  0018FE                     _ToMainHigh_recvmsg:
  3940                           	opt stack 17
  3941                           
  3942                           ;incstack = 0
  3943                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3944  0018FE  CFE8 F0C9          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3945                           
  3946                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3947  001902  0101               	movlb	1	; () banked
  3948  001904  0E01               	movlw	high _ToMainHigh_MQ
  3949  001906  0100               	movlb	0	; () banked
  3950  001908  0100               	movlb	0	; () banked
  3951  00190A  6FB8               	movwf	(recv_msg@qptr+1)& (0+255),b
  3952  00190C  0101               	movlb	1	; () banked
  3953  00190E  0E43               	movlw	low _ToMainHigh_MQ
  3954  001910  0100               	movlb	0	; () banked
  3955  001912  0100               	movlb	0	; () banked
  3956  001914  6FB7               	movwf	recv_msg@qptr& (0+255),b
  3957  001916  C0C9  F0B9         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3958  00191A  0100               	movlb	0	; () banked
  3959  00191C  0100               	movlb	0	; () banked
  3960  00191E  C0C6  F0BB         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3961  001922  0100               	movlb	0	; () banked
  3962  001924  0100               	movlb	0	; () banked
  3963  001926  C0C5  F0BA         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3964  00192A  0100               	movlb	0	; () banked
  3965  00192C  0100               	movlb	0	; () banked
  3966  00192E  C0C8  F0BD         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3967  001932  0100               	movlb	0	; () banked
  3968  001934  0100               	movlb	0	; () banked
  3969  001936  C0C7  F0BC         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3970  00193A  ECBA  F003         	call	_recv_msg	;wreg free
  3971  00193E  0012               	return	
  3972  001940                     __end_of_ToMainHigh_recvmsg:
  3973                           	opt stack 0
  3974                           tblptru	equ	0xFF8
  3975                           tblptrh	equ	0xFF7
  3976                           tblptrl	equ	0xFF6
  3977                           tablat	equ	0xFF5
  3978                           prodh	equ	0xFF4
  3979                           prodl	equ	0xFF3
  3980                           intcon	equ	0xFF2
  3981                           postinc0	equ	0xFEE
  3982                           wreg	equ	0xFE8
  3983                           indf1	equ	0xFE7
  3984                           postdec1	equ	0xFE5
  3985                           fsr1h	equ	0xFE2
  3986                           fsr1l	equ	0xFE1
  3987                           indf2	equ	0xFDF
  3988                           postinc2	equ	0xFDE
  3989                           postdec2	equ	0xFDD
  3990                           fsr2h	equ	0xFDA
  3991                           fsr2l	equ	0xFD9
  3992                           status	equ	0xFD8
  3993                           
  3994 ;; *************** function _recv_msg *****************
  3995 ;; Defined at:
  3996 ;;		line 63 in file "../src/messages.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  qptr            2   55[BANK0 ] PTR struct __msg_queue
  3999 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4000 ;;  maxlength       1   57[BANK0 ] unsigned char 
  4001 ;;  msgtype         2   58[BANK0 ] PTR unsigned char 
  4002 ;;		 -> main@msgtype(1), 
  4003 ;;  data            2   60[BANK0 ] PTR void 
  4004 ;;		 -> main@msgbuffer(11), 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  qmsg            2   67[BANK0 ] PTR struct __msg
  4007 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4008 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4009 ;;  tlength         2   65[BANK0 ] unsigned int 
  4010 ;;  slot            1   64[BANK0 ] unsigned char 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      char 
  4013 ;; Registers used:
  4014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4020 ;;      Params:         0       7       0       0       0
  4021 ;;      Locals:         0       5       0       0       0
  4022 ;;      Temps:          0       2       0       0       0
  4023 ;;      Totals:         0      14       0       0       0
  4024 ;;Total ram usage:       14 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:   12
  4027 ;; This function calls:
  4028 ;;		___awmod
  4029 ;;		_memcpy
  4030 ;; This function is called by:
  4031 ;;		_ToMainLow_recvmsg
  4032 ;;		_ToMainHigh_recvmsg
  4033 ;;		_FromMainLow_recvmsg
  4034 ;;		_FromMainHigh_recvmsg
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text23
  4039  000774                     __ptext23:
  4040                           	opt stack 0
  4041  000774                     _recv_msg:
  4042                           	opt stack 17
  4043                           
  4044                           ;messages.c: 64: unsigned char slot;
  4045                           ;messages.c: 68: msg *qmsg;
  4046                           ;messages.c: 69: size_t tlength;
  4047                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4048                           
  4049                           ;incstack = 0
  4050  000774  0100               	movlb	0	; () banked
  4051  000776  EE20 F042          	lfsr	2,66
  4052  00077A  0100               	movlb	0	; () banked
  4053  00077C  51B7               	movf	recv_msg@qptr& (0+255),w,b
  4054  00077E  26D9               	addwf	fsr2l,f,c
  4055  000780  0100               	movlb	0	; () banked
  4056  000782  51B8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4057  000784  22DA               	addwfc	fsr2h,f,c
  4058  000786  50DF               	movf	indf2,w,c
  4059  000788  0100               	movlb	0	; () banked
  4060  00078A  0100               	movlb	0	; () banked
  4061  00078C  6FC0               	movwf	recv_msg@slot& (0+255),b
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4065  00078E  0100               	movlb	0	; () banked
  4066  000790  0100               	movlb	0	; () banked
  4067  000792  51C0               	movf	recv_msg@slot& (0+255),w,b
  4068  000794  0D0D               	mullw	13
  4069  000796  50F3               	movf	prodl,w,c
  4070  000798  0100               	movlb	0	; () banked
  4071  00079A  0100               	movlb	0	; () banked
  4072  00079C  25B7               	addwf	recv_msg@qptr& (0+255),w,b
  4073  00079E  0100               	movlb	0	; () banked
  4074  0007A0  0100               	movlb	0	; () banked
  4075  0007A2  6FC3               	movwf	recv_msg@qmsg& (0+255),b
  4076  0007A4  50F4               	movf	prodh,w,c
  4077  0007A6  0100               	movlb	0	; () banked
  4078  0007A8  0100               	movlb	0	; () banked
  4079  0007AA  21B8               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4080  0007AC  0100               	movlb	0	; () banked
  4081  0007AE  6FC4               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;messages.c: 74: if (qmsg->full == 1) {
  4085  0007B0  0E01               	movlw	1
  4086  0007B2  C0C3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4087  0007B6  C0C4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4088  0007BA  62DF               	cpfseq	indf2,c
  4089  0007BC  D088               	goto	l3947
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4093  0007BE  0100               	movlb	0	; () banked
  4094  0007C0  EE20 F001          	lfsr	2,1
  4095  0007C4  0100               	movlb	0	; () banked
  4096  0007C6  51C3               	movf	recv_msg@qmsg& (0+255),w,b
  4097  0007C8  26D9               	addwf	fsr2l,f,c
  4098  0007CA  0100               	movlb	0	; () banked
  4099  0007CC  51C4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4100  0007CE  22DA               	addwfc	fsr2h,f,c
  4101  0007D0  50DF               	movf	indf2,w,c
  4102  0007D2  0100               	movlb	0	; () banked
  4103  0007D4  0100               	movlb	0	; () banked
  4104  0007D6  5DB9               	subwf	recv_msg@maxlength& (0+255),w,b
  4105  0007D8  B0D8               	btfsc	status,0,c
  4106  0007DA  D002               	goto	l3931
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;messages.c: 77: return (-3);
  4110  0007DC  0EFD               	movlw	253
  4111  0007DE  0012               	return	
  4112  0007E0                     l3931:
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;messages.c: 78: }
  4116                           ;messages.c: 80: tlength = qmsg->length;
  4117  0007E0  0100               	movlb	0	; () banked
  4118  0007E2  EE20 F001          	lfsr	2,1
  4119  0007E6  0100               	movlb	0	; () banked
  4120  0007E8  51C3               	movf	recv_msg@qmsg& (0+255),w,b
  4121  0007EA  26D9               	addwf	fsr2l,f,c
  4122  0007EC  0100               	movlb	0	; () banked
  4123  0007EE  51C4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4124  0007F0  22DA               	addwfc	fsr2h,f,c
  4125  0007F2  50DF               	movf	indf2,w,c
  4126  0007F4  0100               	movlb	0	; () banked
  4127  0007F6  6FBE               	movwf	??_recv_msg& (0+255),b
  4128  0007F8  0100               	movlb	0	; () banked
  4129  0007FA  51BE               	movf	??_recv_msg& (0+255),w,b
  4130  0007FC  0100               	movlb	0	; () banked
  4131  0007FE  0100               	movlb	0	; () banked
  4132  000800  6FC1               	movwf	recv_msg@tlength& (0+255),b
  4133  000802  0100               	movlb	0	; () banked
  4134  000804  6BC2               	clrf	(recv_msg@tlength+1)& (0+255),b
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4138  000806  0100               	movlb	0	; () banked
  4139  000808  0100               	movlb	0	; () banked
  4140  00080A  C0BD  F0AE         	movff	recv_msg@data+1,memcpy@d1+1
  4141  00080E  0100               	movlb	0	; () banked
  4142  000810  0100               	movlb	0	; () banked
  4143  000812  C0BC  F0AD         	movff	recv_msg@data,memcpy@d1
  4144  000816  0E03               	movlw	3
  4145  000818  0100               	movlb	0	; () banked
  4146  00081A  0100               	movlb	0	; () banked
  4147  00081C  25C3               	addwf	recv_msg@qmsg& (0+255),w,b
  4148  00081E  0100               	movlb	0	; () banked
  4149  000820  6FBE               	movwf	??_recv_msg& (0+255),b
  4150  000822  0E00               	movlw	0
  4151  000824  0100               	movlb	0	; () banked
  4152  000826  0100               	movlb	0	; () banked
  4153  000828  21C4               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4154  00082A  0100               	movlb	0	; () banked
  4155  00082C  6FBF               	movwf	(??_recv_msg+1)& (0+255),b
  4156  00082E  C0BE  F0AF         	movff	??_recv_msg,memcpy@s1
  4157  000832  C0BF  F0B0         	movff	??_recv_msg+1,memcpy@s1+1
  4158  000836  C0C1  F0B1         	movff	recv_msg@tlength,memcpy@n
  4159  00083A  C0C2  F0B2         	movff	recv_msg@tlength+1,memcpy@n+1
  4160  00083E  EC98  F00B         	call	_memcpy	;wreg free
  4161                           
  4162                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  4163  000842  0100               	movlb	0	; () banked
  4164  000844  EE20 F042          	lfsr	2,66
  4165  000848  0100               	movlb	0	; () banked
  4166  00084A  51B7               	movf	recv_msg@qptr& (0+255),w,b
  4167  00084C  26D9               	addwf	fsr2l,f,c
  4168  00084E  0100               	movlb	0	; () banked
  4169  000850  51B8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4170  000852  22DA               	addwfc	fsr2h,f,c
  4171  000854  0100               	movlb	0	; () banked
  4172  000856  EE10 F042          	lfsr	1,66
  4173  00085A  0100               	movlb	0	; () banked
  4174  00085C  51B7               	movf	recv_msg@qptr& (0+255),w,b
  4175  00085E  26E1               	addwf	fsr1l,f,c
  4176  000860  0100               	movlb	0	; () banked
  4177  000862  51B8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4178  000864  22E2               	addwfc	fsr1h,f,c
  4179  000866  50E7               	movf	indf1,w,c
  4180  000868  0100               	movlb	0	; () banked
  4181  00086A  6FBE               	movwf	??_recv_msg& (0+255),b
  4182  00086C  0E01               	movlw	1
  4183  00086E  0100               	movlb	0	; () banked
  4184  000870  25BE               	addwf	??_recv_msg& (0+255),w,b
  4185  000872  0100               	movlb	0	; () banked
  4186  000874  0100               	movlb	0	; () banked
  4187  000876  6FAD               	movwf	___awmod@dividend& (0+255),b
  4188  000878  0100               	movlb	0	; () banked
  4189  00087A  0100               	movlb	0	; () banked
  4190  00087C  6BAE               	clrf	(___awmod@dividend+1)& (0+255),b
  4191  00087E  0E00               	movlw	0
  4192  000880  23AE               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4193  000882  0E00               	movlw	0
  4194  000884  0100               	movlb	0	; () banked
  4195  000886  0100               	movlb	0	; () banked
  4196  000888  6FB0               	movwf	(___awmod@divisor+1)& (0+255),b
  4197  00088A  0E05               	movlw	5
  4198  00088C  0100               	movlb	0	; () banked
  4199  00088E  6FAF               	movwf	___awmod@divisor& (0+255),b
  4200  000890  EC34  F006         	call	___awmod	;wreg free
  4201  000894  0100               	movlb	0	; () banked
  4202  000896  0100               	movlb	0	; () banked
  4203  000898  51AD               	movf	?___awmod& (0+255),w,b
  4204  00089A  6EDF               	movwf	indf2,c
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4208  00089C  0100               	movlb	0	; () banked
  4209  00089E  EE20 F002          	lfsr	2,2
  4210  0008A2  0100               	movlb	0	; () banked
  4211  0008A4  51C3               	movf	recv_msg@qmsg& (0+255),w,b
  4212  0008A6  26D9               	addwf	fsr2l,f,c
  4213  0008A8  0100               	movlb	0	; () banked
  4214  0008AA  51C4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4215  0008AC  22DA               	addwfc	fsr2h,f,c
  4216  0008AE  C0BA  FFE1         	movff	recv_msg@msgtype,fsr1l
  4217  0008B2  C0BB  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4218  0008B6  CFDF FFE7          	movff	indf2,indf1
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;messages.c: 91: qmsg->full = 0;
  4222  0008BA  C0C3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4223  0008BE  C0C4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4224  0008C2  0E00               	movlw	0
  4225  0008C4  6EDF               	movwf	indf2,c
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;messages.c: 92: return (tlength);
  4229  0008C6  0100               	movlb	0	; () banked
  4230  0008C8  0100               	movlb	0	; () banked
  4231  0008CA  51C1               	movf	recv_msg@tlength& (0+255),w,b
  4232  0008CC  0012               	return	
  4233  0008CE                     l3947:
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;messages.c: 94: return (-4);
  4237  0008CE  0EFC               	movlw	252
  4238  0008D0  0012               	return	
  4239  0008D2                     __end_of_recv_msg:
  4240                           	opt stack 0
  4241                           tblptru	equ	0xFF8
  4242                           tblptrh	equ	0xFF7
  4243                           tblptrl	equ	0xFF6
  4244                           tablat	equ	0xFF5
  4245                           prodh	equ	0xFF4
  4246                           prodl	equ	0xFF3
  4247                           intcon	equ	0xFF2
  4248                           postinc0	equ	0xFEE
  4249                           wreg	equ	0xFE8
  4250                           indf1	equ	0xFE7
  4251                           postdec1	equ	0xFE5
  4252                           fsr1h	equ	0xFE2
  4253                           fsr1l	equ	0xFE1
  4254                           indf2	equ	0xFDF
  4255                           postinc2	equ	0xFDE
  4256                           postdec2	equ	0xFDD
  4257                           fsr2h	equ	0xFDA
  4258                           fsr2l	equ	0xFD9
  4259                           status	equ	0xFD8
  4260                           
  4261 ;; *************** function _memcpy *****************
  4262 ;; Defined at:
  4263 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  d1              2   45[BANK0 ] PTR void 
  4266 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4267 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4268 ;;		 -> main@msgbuffer(11), 
  4269 ;;  s1              2   47[BANK0 ] PTR const void 
  4270 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4271 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4272 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4273 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4274 ;;		 -> main@uc(13), 
  4275 ;;  n               2   49[BANK0 ] unsigned int 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  s               2   53[BANK0 ] PTR const unsigned char 
  4278 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4279 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4280 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4281 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4282 ;;		 -> main@uc(13), 
  4283 ;;  d               2   51[BANK0 ] PTR unsigned char 
  4284 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4285 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4286 ;;		 -> main@msgbuffer(11), 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  2   45[BANK0 ] PTR void 
  4289 ;; Registers used:
  4290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4296 ;;      Params:         0       6       0       0       0
  4297 ;;      Locals:         0       4       0       0       0
  4298 ;;      Temps:          0       0       0       0       0
  4299 ;;      Totals:         0      10       0       0       0
  4300 ;;Total ram usage:       10 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:   11
  4303 ;; This function calls:
  4304 ;;		Nothing
  4305 ;; This function is called by:
  4306 ;;		_send_msg
  4307 ;;		_recv_msg
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text24
  4312  001730                     __ptext24:
  4313                           	opt stack 0
  4314  001730                     _memcpy:
  4315                           	opt stack 16
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;incstack = 0
  4319  001730  0100               	movlb	0	; () banked
  4320  001732  0100               	movlb	0	; () banked
  4321  001734  C0B0  F0B6         	movff	memcpy@s1+1,memcpy@s+1
  4322  001738  0100               	movlb	0	; () banked
  4323  00173A  0100               	movlb	0	; () banked
  4324  00173C  C0AF  F0B5         	movff	memcpy@s1,memcpy@s
  4325  001740  0100               	movlb	0	; () banked
  4326  001742  0100               	movlb	0	; () banked
  4327  001744  C0AE  F0B4         	movff	memcpy@d1+1,memcpy@d+1
  4328  001748  0100               	movlb	0	; () banked
  4329  00174A  0100               	movlb	0	; () banked
  4330  00174C  C0AD  F0B3         	movff	memcpy@d1,memcpy@d
  4331  001750  D012               	goto	l3917
  4332  001752                     l3911:
  4333                           
  4334                           ; BSR set to: 0
  4335  001752  C0B5  FFD9         	movff	memcpy@s,fsr2l
  4336  001756  C0B6  FFDA         	movff	memcpy@s+1,fsr2h
  4337  00175A  C0B3  FFE1         	movff	memcpy@d,fsr1l
  4338  00175E  C0B4  FFE2         	movff	memcpy@d+1,fsr1h
  4339  001762  CFDF FFE7          	movff	indf2,indf1
  4340                           
  4341                           ; BSR set to: 0
  4342  001766  0100               	movlb	0	; () banked
  4343  001768  0100               	movlb	0	; () banked
  4344  00176A  4BB5               	infsnz	memcpy@s& (0+255),f,b
  4345  00176C  2BB6               	incf	(memcpy@s+1)& (0+255),f,b
  4346                           
  4347                           ; BSR set to: 0
  4348  00176E  0100               	movlb	0	; () banked
  4349  001770  0100               	movlb	0	; () banked
  4350  001772  4BB3               	infsnz	memcpy@d& (0+255),f,b
  4351  001774  2BB4               	incf	(memcpy@d+1)& (0+255),f,b
  4352  001776                     l3917:
  4353                           
  4354                           ; BSR set to: 0
  4355  001776  0100               	movlb	0	; () banked
  4356  001778  0100               	movlb	0	; () banked
  4357  00177A  07B1               	decf	memcpy@n& (0+255),f,b
  4358  00177C  A0D8               	btfss	status,0,c
  4359  00177E  07B2               	decf	(memcpy@n+1)& (0+255),f,b
  4360  001780  0100               	movlb	0	; () banked
  4361  001782  29B1               	incf	memcpy@n& (0+255),w,b
  4362  001784  B4D8               	btfsc	status,2,c
  4363  001786  29B2               	incf	(memcpy@n+1)& (0+255),w,b
  4364  001788  B4D8               	btfsc	status,2,c
  4365                           
  4366                           ; BSR set to: 0
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;	Return value of _memcpy is never used
  4370  00178A  0012               	return	
  4371  00178C  D7E2               	goto	l3911
  4372  00178E                     __end_of_memcpy:
  4373                           	opt stack 0
  4374                           tblptru	equ	0xFF8
  4375                           tblptrh	equ	0xFF7
  4376                           tblptrl	equ	0xFF6
  4377                           tablat	equ	0xFF5
  4378                           prodh	equ	0xFF4
  4379                           prodl	equ	0xFF3
  4380                           intcon	equ	0xFF2
  4381                           postinc0	equ	0xFEE
  4382                           wreg	equ	0xFE8
  4383                           indf1	equ	0xFE7
  4384                           postdec1	equ	0xFE5
  4385                           fsr1h	equ	0xFE2
  4386                           fsr1l	equ	0xFE1
  4387                           indf2	equ	0xFDF
  4388                           postinc2	equ	0xFDE
  4389                           postdec2	equ	0xFDD
  4390                           fsr2h	equ	0xFDA
  4391                           fsr2l	equ	0xFD9
  4392                           status	equ	0xFD8
  4393                           
  4394 ;; *************** function ___awmod *****************
  4395 ;; Defined at:
  4396 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;  dividend        2   45[BANK0 ] int 
  4399 ;;  divisor         2   47[BANK0 ] int 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;  sign            1   51[BANK0 ] unsigned char 
  4402 ;;  counter         1   50[BANK0 ] unsigned char 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  2   45[BANK0 ] int 
  4405 ;; Registers used:
  4406 ;;		wreg, status,2, status,0, prodl
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4412 ;;      Params:         0       4       0       0       0
  4413 ;;      Locals:         0       2       0       0       0
  4414 ;;      Temps:          0       1       0       0       0
  4415 ;;      Totals:         0       7       0       0       0
  4416 ;;Total ram usage:        7 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:   11
  4419 ;; This function calls:
  4420 ;;		Nothing
  4421 ;; This function is called by:
  4422 ;;		_send_msg
  4423 ;;		_recv_msg
  4424 ;;		i1_send_msg
  4425 ;;		i2_send_msg
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text25
  4430  000C68                     __ptext25:
  4431                           	opt stack 0
  4432  000C68                     ___awmod:
  4433                           	opt stack 16
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;incstack = 0
  4437  000C68  0100               	movlb	0	; () banked
  4438  000C6A  6FB1               	movwf	??___awmod& (0+255),b
  4439  000C6C  0E00               	movlw	0
  4440  000C6E  0100               	movlb	0	; () banked
  4441  000C70  0100               	movlb	0	; () banked
  4442  000C72  6FB3               	movwf	___awmod@sign& (0+255),b
  4443  000C74  0100               	movlb	0	; () banked
  4444  000C76  51B1               	movf	??___awmod& (0+255),w,b
  4445                           
  4446                           ; BSR set to: 0
  4447  000C78  0100               	movlb	0	; () banked
  4448  000C7A  0100               	movlb	0	; () banked
  4449  000C7C  51AE               	movf	(___awmod@dividend+1)& (0+255),w,b
  4450  000C7E  0A80               	xorlw	128
  4451  000C80  6EF3               	movwf	prodl,c
  4452  000C82  0E80               	movlw	128
  4453  000C84  5CF3               	subwf	prodl,w,c
  4454  000C86  0E00               	movlw	0
  4455  000C88  B4D8               	btfsc	status,2,c
  4456  000C8A  5DAD               	subwf	___awmod@dividend& (0+255),w,b
  4457  000C8C  B0D8               	btfsc	status,0,c
  4458  000C8E  D00F               	goto	l4267
  4459                           
  4460                           ; BSR set to: 0
  4461  000C90  0100               	movlb	0	; () banked
  4462  000C92  0100               	movlb	0	; () banked
  4463  000C94  6DAD               	negf	___awmod@dividend& (0+255),b
  4464  000C96  0100               	movlb	0	; () banked
  4465  000C98  1FAE               	comf	(___awmod@dividend+1)& (0+255),f,b
  4466  000C9A  B0D8               	btfsc	status,0,c
  4467  000C9C  2BAE               	incf	(___awmod@dividend+1)& (0+255),f,b
  4468                           
  4469                           ; BSR set to: 0
  4470  000C9E  0100               	movlb	0	; () banked
  4471  000CA0  6FB1               	movwf	??___awmod& (0+255),b
  4472  000CA2  0E01               	movlw	1
  4473  000CA4  0100               	movlb	0	; () banked
  4474  000CA6  0100               	movlb	0	; () banked
  4475  000CA8  6FB3               	movwf	___awmod@sign& (0+255),b
  4476  000CAA  0100               	movlb	0	; () banked
  4477  000CAC  51B1               	movf	??___awmod& (0+255),w,b
  4478  000CAE                     l4267:
  4479                           
  4480                           ; BSR set to: 0
  4481  000CAE  0100               	movlb	0	; () banked
  4482  000CB0  0100               	movlb	0	; () banked
  4483  000CB2  51B0               	movf	(___awmod@divisor+1)& (0+255),w,b
  4484  000CB4  0A80               	xorlw	128
  4485  000CB6  6EF3               	movwf	prodl,c
  4486  000CB8  0E80               	movlw	128
  4487  000CBA  5CF3               	subwf	prodl,w,c
  4488  000CBC  0E00               	movlw	0
  4489  000CBE  B4D8               	btfsc	status,2,c
  4490  000CC0  5DAF               	subwf	___awmod@divisor& (0+255),w,b
  4491  000CC2  B0D8               	btfsc	status,0,c
  4492  000CC4  D007               	goto	l4271
  4493                           
  4494                           ; BSR set to: 0
  4495  000CC6  0100               	movlb	0	; () banked
  4496  000CC8  0100               	movlb	0	; () banked
  4497  000CCA  6DAF               	negf	___awmod@divisor& (0+255),b
  4498  000CCC  0100               	movlb	0	; () banked
  4499  000CCE  1FB0               	comf	(___awmod@divisor+1)& (0+255),f,b
  4500  000CD0  B0D8               	btfsc	status,0,c
  4501  000CD2  2BB0               	incf	(___awmod@divisor+1)& (0+255),f,b
  4502  000CD4                     l4271:
  4503                           
  4504                           ; BSR set to: 0
  4505  000CD4  0100               	movlb	0	; () banked
  4506  000CD6  0100               	movlb	0	; () banked
  4507  000CD8  51B0               	movf	(___awmod@divisor+1)& (0+255),w,b
  4508  000CDA  11AF               	iorwf	___awmod@divisor& (0+255),w,b
  4509  000CDC  B4D8               	btfsc	status,2,c
  4510  000CDE  D03A               	goto	l4287
  4511                           
  4512                           ; BSR set to: 0
  4513  000CE0  0100               	movlb	0	; () banked
  4514  000CE2  6FB1               	movwf	??___awmod& (0+255),b
  4515  000CE4  0E01               	movlw	1
  4516  000CE6  0100               	movlb	0	; () banked
  4517  000CE8  0100               	movlb	0	; () banked
  4518  000CEA  6FB2               	movwf	___awmod@counter& (0+255),b
  4519  000CEC  0100               	movlb	0	; () banked
  4520  000CEE  51B1               	movf	??___awmod& (0+255),w,b
  4521  000CF0  D009               	goto	l4277
  4522  000CF2                     l4275:
  4523                           
  4524                           ; BSR set to: 0
  4525  000CF2  0100               	movlb	0	; () banked
  4526  000CF4  0100               	movlb	0	; () banked
  4527  000CF6  0100               	movlb	0	; () banked
  4528  000CF8  90D8               	bcf	status,0,c
  4529  000CFA  37AF               	rlcf	___awmod@divisor& (0+255),f,b
  4530  000CFC  37B0               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4531  000CFE  0100               	movlb	0	; () banked
  4532  000D00  0100               	movlb	0	; () banked
  4533  000D02  2BB2               	incf	___awmod@counter& (0+255),f,b
  4534  000D04                     l4277:
  4535                           
  4536                           ; BSR set to: 0
  4537  000D04  0100               	movlb	0	; () banked
  4538  000D06  0100               	movlb	0	; () banked
  4539  000D08  AFB0               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4540  000D0A  D7F3               	goto	l4275
  4541  000D0C                     l4279:
  4542                           
  4543                           ; BSR set to: 0
  4544  000D0C  0100               	movlb	0	; () banked
  4545  000D0E  0100               	movlb	0	; () banked
  4546  000D10  51AF               	movf	___awmod@divisor& (0+255),w,b
  4547  000D12  0100               	movlb	0	; () banked
  4548  000D14  0100               	movlb	0	; () banked
  4549  000D16  5DAD               	subwf	___awmod@dividend& (0+255),w,b
  4550  000D18  0100               	movlb	0	; () banked
  4551  000D1A  0100               	movlb	0	; () banked
  4552  000D1C  51B0               	movf	(___awmod@divisor+1)& (0+255),w,b
  4553  000D1E  0100               	movlb	0	; () banked
  4554  000D20  0100               	movlb	0	; () banked
  4555  000D22  59AE               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4556  000D24  A0D8               	btfss	status,0,c
  4557  000D26  D00C               	goto	l4283
  4558                           
  4559                           ; BSR set to: 0
  4560  000D28  0100               	movlb	0	; () banked
  4561  000D2A  0100               	movlb	0	; () banked
  4562  000D2C  51AF               	movf	___awmod@divisor& (0+255),w,b
  4563  000D2E  0100               	movlb	0	; () banked
  4564  000D30  0100               	movlb	0	; () banked
  4565  000D32  5FAD               	subwf	___awmod@dividend& (0+255),f,b
  4566  000D34  0100               	movlb	0	; () banked
  4567  000D36  0100               	movlb	0	; () banked
  4568  000D38  51B0               	movf	(___awmod@divisor+1)& (0+255),w,b
  4569  000D3A  0100               	movlb	0	; () banked
  4570  000D3C  0100               	movlb	0	; () banked
  4571  000D3E  5BAE               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4572  000D40                     l4283:
  4573                           
  4574                           ; BSR set to: 0
  4575  000D40  0100               	movlb	0	; () banked
  4576  000D42  0100               	movlb	0	; () banked
  4577  000D44  0100               	movlb	0	; () banked
  4578  000D46  90D8               	bcf	status,0,c
  4579  000D48  33B0               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4580  000D4A  33AF               	rrcf	___awmod@divisor& (0+255),f,b
  4581                           
  4582                           ; BSR set to: 0
  4583  000D4C  0100               	movlb	0	; () banked
  4584  000D4E  0100               	movlb	0	; () banked
  4585  000D50  2FB2               	decfsz	___awmod@counter& (0+255),f,b
  4586  000D52  D7DC               	goto	l4279
  4587  000D54                     l4287:
  4588                           
  4589                           ; BSR set to: 0
  4590  000D54  0100               	movlb	0	; () banked
  4591  000D56  0100               	movlb	0	; () banked
  4592  000D58  51B3               	movf	___awmod@sign& (0+255),w,b
  4593  000D5A  B4D8               	btfsc	status,2,c
  4594  000D5C  D007               	goto	l4291
  4595                           
  4596                           ; BSR set to: 0
  4597  000D5E  0100               	movlb	0	; () banked
  4598  000D60  0100               	movlb	0	; () banked
  4599  000D62  6DAD               	negf	___awmod@dividend& (0+255),b
  4600  000D64  0100               	movlb	0	; () banked
  4601  000D66  1FAE               	comf	(___awmod@dividend+1)& (0+255),f,b
  4602  000D68  B0D8               	btfsc	status,0,c
  4603  000D6A  2BAE               	incf	(___awmod@dividend+1)& (0+255),f,b
  4604  000D6C                     l4291:
  4605                           
  4606                           ; BSR set to: 0
  4607  000D6C  C0AD  F0AD         	movff	___awmod@dividend,?___awmod
  4608  000D70  C0AE  F0AE         	movff	___awmod@dividend+1,?___awmod+1
  4609  000D74  0012               	return	
  4610  000D76                     __end_of___awmod:
  4611                           	opt stack 0
  4612                           tblptru	equ	0xFF8
  4613                           tblptrh	equ	0xFF7
  4614                           tblptrl	equ	0xFF6
  4615                           tablat	equ	0xFF5
  4616                           prodh	equ	0xFF4
  4617                           prodl	equ	0xFF3
  4618                           intcon	equ	0xFF2
  4619                           postinc0	equ	0xFEE
  4620                           wreg	equ	0xFE8
  4621                           indf1	equ	0xFE7
  4622                           postdec1	equ	0xFE5
  4623                           fsr1h	equ	0xFE2
  4624                           fsr1l	equ	0xFE1
  4625                           indf2	equ	0xFDF
  4626                           postinc2	equ	0xFDE
  4627                           postdec2	equ	0xFDD
  4628                           fsr2h	equ	0xFDA
  4629                           fsr2l	equ	0xFD9
  4630                           status	equ	0xFD8
  4631                           
  4632 ;; *************** function _SetChanADC *****************
  4633 ;; Defined at:
  4634 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  channel         1    wreg     unsigned char 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  channel         1   46[BANK0 ] unsigned char 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;		None               void
  4641 ;; Registers used:
  4642 ;;		wreg, status,2, status,0
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4648 ;;      Params:         0       0       0       0       0
  4649 ;;      Locals:         0       1       0       0       0
  4650 ;;      Temps:          0       1       0       0       0
  4651 ;;      Totals:         0       2       0       0       0
  4652 ;;Total ram usage:        2 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:   11
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_main
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text26
  4663  001B22                     __ptext26:
  4664                           	opt stack 0
  4665  001B22                     _SetChanADC:
  4666                           	opt stack 19
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;incstack = 0
  4670                           ;SetChanADC@channel stored from wreg
  4671  001B22  CFE8 F0AE          	movff	wreg,SetChanADC@channel
  4672  001B26  CFC2 F0AD          	movff	4034,??_SetChanADC	;volatile
  4673  001B2A  0EC3               	movlw	195
  4674  001B2C  0100               	movlb	0	; () banked
  4675  001B2E  17AD               	andwf	??_SetChanADC& (0+255),f,b
  4676  001B30  0100               	movlb	0	; () banked
  4677  001B32  0100               	movlb	0	; () banked
  4678  001B34  90D8               	bcf	status,0,c
  4679  001B36  31AE               	rrcf	SetChanADC@channel& (0+255),w,b
  4680  001B38  0B3C               	andlw	60
  4681  001B3A  0100               	movlb	0	; () banked
  4682  001B3C  11AD               	iorwf	??_SetChanADC& (0+255),w,b
  4683  001B3E  6EC2               	movwf	4034,c	;volatile
  4684                           
  4685                           ; BSR set to: 0
  4686  001B40  0012               	return	
  4687  001B42                     __end_of_SetChanADC:
  4688                           	opt stack 0
  4689                           tblptru	equ	0xFF8
  4690                           tblptrh	equ	0xFF7
  4691                           tblptrl	equ	0xFF6
  4692                           tablat	equ	0xFF5
  4693                           prodh	equ	0xFF4
  4694                           prodl	equ	0xFF3
  4695                           intcon	equ	0xFF2
  4696                           postinc0	equ	0xFEE
  4697                           wreg	equ	0xFE8
  4698                           indf1	equ	0xFE7
  4699                           postdec1	equ	0xFE5
  4700                           fsr1h	equ	0xFE2
  4701                           fsr1l	equ	0xFE1
  4702                           indf2	equ	0xFDF
  4703                           postinc2	equ	0xFDE
  4704                           postdec2	equ	0xFDD
  4705                           fsr2h	equ	0xFDA
  4706                           fsr2l	equ	0xFD9
  4707                           status	equ	0xFD8
  4708                           
  4709 ;; *************** function _OpenUSART *****************
  4710 ;; Defined at:
  4711 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  config          1    wreg     unsigned char 
  4714 ;;  spbrg           2   45[BANK0 ] unsigned int 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  config          1   50[BANK0 ] unsigned char 
  4717 ;; Return value:  Size  Location     Type
  4718 ;;		None               void
  4719 ;; Registers used:
  4720 ;;		wreg, status,2
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4726 ;;      Params:         0       2       0       0       0
  4727 ;;      Locals:         0       1       0       0       0
  4728 ;;      Temps:          0       3       0       0       0
  4729 ;;      Totals:         0       6       0       0       0
  4730 ;;Total ram usage:        6 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:   11
  4733 ;; This function calls:
  4734 ;;		Nothing
  4735 ;; This function is called by:
  4736 ;;		_main
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           	psect	text27
  4741  001130                     __ptext27:
  4742                           	opt stack 0
  4743  001130                     _OpenUSART:
  4744                           	opt stack 19
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;incstack = 0
  4748                           ;OpenUSART@config stored from wreg
  4749  001130  CFE8 F0B2          	movff	wreg,OpenUSART@config
  4750  001134  0E00               	movlw	0
  4751  001136  6EAC               	movwf	4012,c	;volatile
  4752  001138  0E00               	movlw	0
  4753  00113A  6EAB               	movwf	4011,c	;volatile
  4754  00113C  0100               	movlb	0	; () banked
  4755  00113E  0100               	movlb	0	; () banked
  4756  001140  B1B2               	btfsc	OpenUSART@config& (0+255),0,b
  4757                           
  4758                           ; BSR set to: 0
  4759  001142  88AC               	bsf	4012,4,c	;volatile
  4760                           
  4761                           ; BSR set to: 0
  4762                           
  4763                           ; BSR set to: 0
  4764  001144  0100               	movlb	0	; () banked
  4765  001146  0100               	movlb	0	; () banked
  4766  001148  A3B2               	btfss	OpenUSART@config& (0+255),1,b
  4767  00114A  D002               	goto	l3753
  4768                           
  4769                           ; BSR set to: 0
  4770  00114C  8CAC               	bsf	4012,6,c	;volatile
  4771  00114E  8CAB               	bsf	4011,6,c	;volatile
  4772  001150                     l3753:
  4773                           
  4774                           ; BSR set to: 0
  4775  001150  0100               	movlb	0	; () banked
  4776  001152  0100               	movlb	0	; () banked
  4777  001154  B5B2               	btfsc	OpenUSART@config& (0+255),2,b
  4778                           
  4779                           ; BSR set to: 0
  4780  001156  8EAC               	bsf	4012,7,c	;volatile
  4781                           
  4782                           ; BSR set to: 0
  4783                           
  4784                           ; BSR set to: 0
  4785  001158  0100               	movlb	0	; () banked
  4786  00115A  0100               	movlb	0	; () banked
  4787  00115C  A7B2               	btfss	OpenUSART@config& (0+255),3,b
  4788  00115E  D002               	goto	l556
  4789                           
  4790                           ; BSR set to: 0
  4791  001160  88AB               	bsf	4011,4,c	;volatile
  4792  001162  D001               	goto	l3761
  4793  001164                     l556:
  4794                           
  4795                           ; BSR set to: 0
  4796  001164  8AAB               	bsf	4011,5,c	;volatile
  4797  001166                     l3761:
  4798                           
  4799                           ; BSR set to: 0
  4800  001166  0100               	movlb	0	; () banked
  4801  001168  0100               	movlb	0	; () banked
  4802  00116A  B9B2               	btfsc	OpenUSART@config& (0+255),4,b
  4803                           
  4804                           ; BSR set to: 0
  4805  00116C  84AC               	bsf	4012,2,c	;volatile
  4806                           
  4807                           ; BSR set to: 0
  4808  00116E  989E               	bcf	3998,4,c	;volatile
  4809                           
  4810                           ; BSR set to: 0
  4811  001170  0100               	movlb	0	; () banked
  4812  001172  0100               	movlb	0	; () banked
  4813  001174  BBB2               	btfsc	OpenUSART@config& (0+255),5,b
  4814                           
  4815                           ; BSR set to: 0
  4816  001176  86AB               	bsf	4011,3,c	;volatile
  4817                           
  4818                           ; BSR set to: 0
  4819                           
  4820                           ; BSR set to: 0
  4821  001178  0100               	movlb	0	; () banked
  4822  00117A  0100               	movlb	0	; () banked
  4823  00117C  ADB2               	btfss	OpenUSART@config& (0+255),6,b
  4824  00117E  D002               	goto	l560
  4825                           
  4826                           ; BSR set to: 0
  4827  001180  8A9D               	bsf	3997,5,c	;volatile
  4828  001182  D001               	goto	l561
  4829  001184                     l560:
  4830                           
  4831                           ; BSR set to: 0
  4832  001184  9A9D               	bcf	3997,5,c	;volatile
  4833  001186                     l561:
  4834                           
  4835                           ; BSR set to: 0
  4836  001186  9A9E               	bcf	3998,5,c	;volatile
  4837                           
  4838                           ; BSR set to: 0
  4839  001188  0100               	movlb	0	; () banked
  4840  00118A  0100               	movlb	0	; () banked
  4841  00118C  AFB2               	btfss	OpenUSART@config& (0+255),7,b
  4842  00118E  D002               	goto	l562
  4843                           
  4844                           ; BSR set to: 0
  4845  001190  889D               	bsf	3997,4,c	;volatile
  4846  001192  D001               	goto	l563
  4847  001194                     l562:
  4848                           
  4849                           ; BSR set to: 0
  4850  001194  989D               	bcf	3997,4,c	;volatile
  4851  001196                     l563:
  4852                           
  4853                           ; BSR set to: 0
  4854  001196  C0AD  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4855                           
  4856                           ; BSR set to: 0
  4857  00119A  0100               	movlb	0	; () banked
  4858  00119C  C0AE  F0AF         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4859  0011A0  C0AF  F0B0         	movff	??_OpenUSART,??_OpenUSART+1
  4860  0011A4  0100               	movlb	0	; () banked
  4861  0011A6  6BB1               	clrf	(??_OpenUSART+2)& (0+255),b
  4862  0011A8  0100               	movlb	0	; () banked
  4863  0011AA  51B0               	movf	(??_OpenUSART+1)& (0+255),w,b
  4864  0011AC  6EB0               	movwf	4016,c	;volatile
  4865                           
  4866                           ; BSR set to: 0
  4867  0011AE  8AAC               	bsf	4012,5,c	;volatile
  4868                           
  4869                           ; BSR set to: 0
  4870  0011B0  8EAB               	bsf	4011,7,c	;volatile
  4871                           
  4872                           ; BSR set to: 0
  4873  0011B2  9C94               	bcf	3988,6,c	;volatile
  4874                           
  4875                           ; BSR set to: 0
  4876  0011B4  8E94               	bsf	3988,7,c	;volatile
  4877                           
  4878                           ; BSR set to: 0
  4879  0011B6  A8AC               	btfss	4012,4,c	;volatile
  4880  0011B8  0012               	return	
  4881                           
  4882                           ; BSR set to: 0
  4883  0011BA  BEAC               	btfsc	4012,7,c	;volatile
  4884  0011BC  0012               	return	
  4885                           
  4886                           ; BSR set to: 0
  4887  0011BE  8C94               	bsf	3988,6,c	;volatile
  4888  0011C0  0012               	return	
  4889  0011C2                     __end_of_OpenUSART:
  4890                           	opt stack 0
  4891                           tblptru	equ	0xFF8
  4892                           tblptrh	equ	0xFF7
  4893                           tblptrl	equ	0xFF6
  4894                           tablat	equ	0xFF5
  4895                           prodh	equ	0xFF4
  4896                           prodl	equ	0xFF3
  4897                           intcon	equ	0xFF2
  4898                           postinc0	equ	0xFEE
  4899                           wreg	equ	0xFE8
  4900                           indf1	equ	0xFE7
  4901                           postdec1	equ	0xFE5
  4902                           fsr1h	equ	0xFE2
  4903                           fsr1l	equ	0xFE1
  4904                           indf2	equ	0xFDF
  4905                           postinc2	equ	0xFDE
  4906                           postdec2	equ	0xFDD
  4907                           fsr2h	equ	0xFDA
  4908                           fsr2l	equ	0xFD9
  4909                           status	equ	0xFD8
  4910                           
  4911 ;; *************** function _OpenTimer1 *****************
  4912 ;; Defined at:
  4913 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;  config          1    wreg     unsigned char 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  config          1   45[BANK0 ] unsigned char 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;		None               void
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, status,0
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4927 ;;      Params:         0       0       0       0       0
  4928 ;;      Locals:         0       1       0       0       0
  4929 ;;      Temps:          0       0       0       0       0
  4930 ;;      Totals:         0       1       0       0       0
  4931 ;;Total ram usage:        1 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:   11
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_main
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text28
  4942  001980                     __ptext28:
  4943                           	opt stack 0
  4944  001980                     _OpenTimer1:
  4945                           	opt stack 19
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;incstack = 0
  4949                           ;OpenTimer1@config stored from wreg
  4950  001980  CFE8 F0AD          	movff	wreg,OpenTimer1@config
  4951  001984  0100               	movlb	0	; () banked
  4952  001986  0100               	movlb	0	; () banked
  4953  001988  51AD               	movf	OpenTimer1@config& (0+255),w,b
  4954  00198A  0B7E               	andlw	126
  4955  00198C  6ECD               	movwf	4045,c	;volatile
  4956                           
  4957                           ; BSR set to: 0
  4958  00198E  0100               	movlb	0	; () banked
  4959  001990  0100               	movlb	0	; () banked
  4960  001992  ADAD               	btfss	OpenTimer1@config& (0+255),6,b
  4961  001994  D002               	goto	l519
  4962                           
  4963                           ; BSR set to: 0
  4964  001996  8ECD               	bsf	4045,7,c	;volatile
  4965  001998  D001               	goto	l3727
  4966  00199A                     l519:
  4967                           
  4968                           ; BSR set to: 0
  4969  00199A  9ECD               	bcf	4045,7,c	;volatile
  4970  00199C                     l3727:
  4971                           
  4972                           ; BSR set to: 0
  4973  00199C  0E00               	movlw	0
  4974  00199E  6ECF               	movwf	4047,c	;volatile
  4975  0019A0  0E00               	movlw	0
  4976  0019A2  6ECE               	movwf	4046,c	;volatile
  4977                           
  4978                           ; BSR set to: 0
  4979  0019A4  909E               	bcf	3998,0,c	;volatile
  4980                           
  4981                           ; BSR set to: 0
  4982  0019A6  0100               	movlb	0	; () banked
  4983  0019A8  0100               	movlb	0	; () banked
  4984  0019AA  AFAD               	btfss	OpenTimer1@config& (0+255),7,b
  4985  0019AC  D002               	goto	l521
  4986                           
  4987                           ; BSR set to: 0
  4988  0019AE  809D               	bsf	3997,0,c	;volatile
  4989  0019B0  D001               	goto	l522
  4990  0019B2                     l521:
  4991                           
  4992                           ; BSR set to: 0
  4993  0019B2  909D               	bcf	3997,0,c	;volatile
  4994  0019B4                     l522:
  4995                           
  4996                           ; BSR set to: 0
  4997  0019B4  80CD               	bsf	4045,0,c	;volatile
  4998                           
  4999                           ; BSR set to: 0
  5000  0019B6  0012               	return	
  5001  0019B8                     __end_of_OpenTimer1:
  5002                           	opt stack 0
  5003                           tblptru	equ	0xFF8
  5004                           tblptrh	equ	0xFF7
  5005                           tblptrl	equ	0xFF6
  5006                           tablat	equ	0xFF5
  5007                           prodh	equ	0xFF4
  5008                           prodl	equ	0xFF3
  5009                           intcon	equ	0xFF2
  5010                           postinc0	equ	0xFEE
  5011                           wreg	equ	0xFE8
  5012                           indf1	equ	0xFE7
  5013                           postdec1	equ	0xFE5
  5014                           fsr1h	equ	0xFE2
  5015                           fsr1l	equ	0xFE1
  5016                           indf2	equ	0xFDF
  5017                           postinc2	equ	0xFDE
  5018                           postdec2	equ	0xFDD
  5019                           fsr2h	equ	0xFDA
  5020                           fsr2l	equ	0xFD9
  5021                           status	equ	0xFD8
  5022                           
  5023 ;; *************** function _OpenTimer0 *****************
  5024 ;; Defined at:
  5025 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;  config          1    wreg     unsigned char 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  config          1   45[BANK0 ] unsigned char 
  5030 ;; Return value:  Size  Location     Type
  5031 ;;		None               void
  5032 ;; Registers used:
  5033 ;;		wreg, status,2, status,0
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5039 ;;      Params:         0       0       0       0       0
  5040 ;;      Locals:         0       1       0       0       0
  5041 ;;      Temps:          0       0       0       0       0
  5042 ;;      Totals:         0       1       0       0       0
  5043 ;;Total ram usage:        1 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:   11
  5046 ;; This function calls:
  5047 ;;		Nothing
  5048 ;; This function is called by:
  5049 ;;		_main
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           	psect	text29
  5054  001A90                     __ptext29:
  5055                           	opt stack 0
  5056  001A90                     _OpenTimer0:
  5057                           	opt stack 19
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;incstack = 0
  5061                           ;OpenTimer0@config stored from wreg
  5062  001A90  CFE8 F0AD          	movff	wreg,OpenTimer0@config
  5063  001A94  0100               	movlb	0	; () banked
  5064  001A96  0100               	movlb	0	; () banked
  5065  001A98  51AD               	movf	OpenTimer0@config& (0+255),w,b
  5066  001A9A  0B7F               	andlw	127
  5067  001A9C  6ED5               	movwf	4053,c	;volatile
  5068                           
  5069                           ; BSR set to: 0
  5070  001A9E  0E00               	movlw	0
  5071  001AA0  6ED7               	movwf	4055,c	;volatile
  5072                           
  5073                           ; BSR set to: 0
  5074  001AA2  0E00               	movlw	0
  5075  001AA4  6ED6               	movwf	4054,c	;volatile
  5076                           
  5077                           ; BSR set to: 0
  5078  001AA6  94F2               	bcf	intcon,2,c	;volatile
  5079                           
  5080                           ; BSR set to: 0
  5081  001AA8  0100               	movlb	0	; () banked
  5082  001AAA  0100               	movlb	0	; () banked
  5083  001AAC  AFAD               	btfss	OpenTimer0@config& (0+255),7,b
  5084  001AAE  D002               	goto	l495
  5085                           
  5086                           ; BSR set to: 0
  5087  001AB0  8AF2               	bsf	intcon,5,c	;volatile
  5088  001AB2  D001               	goto	l496
  5089  001AB4                     l495:
  5090                           
  5091                           ; BSR set to: 0
  5092  001AB4  9AF2               	bcf	intcon,5,c	;volatile
  5093  001AB6                     l496:
  5094                           
  5095                           ; BSR set to: 0
  5096  001AB6  8ED5               	bsf	4053,7,c	;volatile
  5097                           
  5098                           ; BSR set to: 0
  5099  001AB8  0012               	return	
  5100  001ABA                     __end_of_OpenTimer0:
  5101                           	opt stack 0
  5102                           tblptru	equ	0xFF8
  5103                           tblptrh	equ	0xFF7
  5104                           tblptrl	equ	0xFF6
  5105                           tablat	equ	0xFF5
  5106                           prodh	equ	0xFF4
  5107                           prodl	equ	0xFF3
  5108                           intcon	equ	0xFF2
  5109                           postinc0	equ	0xFEE
  5110                           wreg	equ	0xFE8
  5111                           indf1	equ	0xFE7
  5112                           postdec1	equ	0xFE5
  5113                           fsr1h	equ	0xFE2
  5114                           fsr1l	equ	0xFE1
  5115                           indf2	equ	0xFDF
  5116                           postinc2	equ	0xFDE
  5117                           postdec2	equ	0xFDD
  5118                           fsr2h	equ	0xFDA
  5119                           fsr2l	equ	0xFD9
  5120                           status	equ	0xFD8
  5121                           
  5122 ;; *************** function _OpenADC *****************
  5123 ;; Defined at:
  5124 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  config          1    wreg     unsigned char 
  5127 ;;  config2         1   45[BANK0 ] unsigned char 
  5128 ;;  portconfig      1   46[BANK0 ] unsigned char 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  config          1   49[BANK0 ] unsigned char 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;		None               void
  5133 ;; Registers used:
  5134 ;;		wreg, status,2, status,0
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5140 ;;      Params:         0       2       0       0       0
  5141 ;;      Locals:         0       1       0       0       0
  5142 ;;      Temps:          0       2       0       0       0
  5143 ;;      Totals:         0       5       0       0       0
  5144 ;;Total ram usage:        5 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:   11
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_main
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text30
  5155  00124C                     __ptext30:
  5156                           	opt stack 0
  5157  00124C                     _OpenADC:
  5158                           	opt stack 19
  5159                           
  5160                           ; BSR set to: 0
  5161                           ;incstack = 0
  5162                           ;OpenADC@config stored from wreg
  5163  00124C  CFE8 F0B1          	movff	wreg,OpenADC@config
  5164  001250  0E00               	movlw	0
  5165  001252  6EC2               	movwf	4034,c	;volatile
  5166  001254  0E00               	movlw	0
  5167  001256  6EC0               	movwf	4032,c	;volatile
  5168  001258  0100               	movlb	0	; () banked
  5169  00125A  0100               	movlb	0	; () banked
  5170  00125C  90D8               	bcf	status,0,c
  5171  00125E  31AD               	rrcf	OpenADC@config2& (0+255),w,b
  5172  001260  0B3C               	andlw	60
  5173  001262  6EC2               	movwf	4034,c	;volatile
  5174                           
  5175                           ; BSR set to: 0
  5176  001264  C0AD  F0AF         	movff	OpenADC@config2,??_OpenADC
  5177  001268  0100               	movlb	0	; () banked
  5178  00126A  3BAF               	swapf	??_OpenADC& (0+255),f,b
  5179  00126C  0EF0               	movlw	240
  5180  00126E  17AF               	andwf	??_OpenADC& (0+255),f,b
  5181  001270  0E30               	movlw	48
  5182  001272  0100               	movlb	0	; () banked
  5183  001274  17AF               	andwf	??_OpenADC& (0+255),f,b
  5184  001276  0100               	movlb	0	; () banked
  5185  001278  0100               	movlb	0	; () banked
  5186  00127A  51AE               	movf	OpenADC@portconfig& (0+255),w,b
  5187  00127C  0B0F               	andlw	15
  5188  00127E  0100               	movlb	0	; () banked
  5189  001280  11AF               	iorwf	??_OpenADC& (0+255),w,b
  5190  001282  6EC1               	movwf	4033,c	;volatile
  5191                           
  5192                           ; BSR set to: 0
  5193  001284  C0B1  F0AF         	movff	OpenADC@config,??_OpenADC
  5194  001288  0100               	movlb	0	; () banked
  5195  00128A  90D8               	bcf	status,0,c
  5196  00128C  37AF               	rlcf	??_OpenADC& (0+255),f,b
  5197  00128E  0100               	movlb	0	; () banked
  5198  001290  90D8               	bcf	status,0,c
  5199  001292  37AF               	rlcf	??_OpenADC& (0+255),f,b
  5200  001294  0E38               	movlw	56
  5201  001296  0100               	movlb	0	; () banked
  5202  001298  17AF               	andwf	??_OpenADC& (0+255),f,b
  5203  00129A  C0B1  F0B0         	movff	OpenADC@config,??_OpenADC+1
  5204  00129E  0100               	movlb	0	; () banked
  5205  0012A0  3BB0               	swapf	(??_OpenADC+1)& (0+255),f,b
  5206  0012A2  0E0F               	movlw	15
  5207  0012A4  17B0               	andwf	(??_OpenADC+1)& (0+255),f,b
  5208  0012A6  0E07               	movlw	7
  5209  0012A8  0100               	movlb	0	; () banked
  5210  0012AA  17B0               	andwf	(??_OpenADC+1)& (0+255),f,b
  5211  0012AC  0100               	movlb	0	; () banked
  5212  0012AE  0100               	movlb	0	; () banked
  5213  0012B0  51B1               	movf	OpenADC@config& (0+255),w,b
  5214  0012B2  0B80               	andlw	128
  5215  0012B4  0100               	movlb	0	; () banked
  5216  0012B6  11B0               	iorwf	(??_OpenADC+1)& (0+255),w,b
  5217  0012B8  0100               	movlb	0	; () banked
  5218  0012BA  11AF               	iorwf	??_OpenADC& (0+255),w,b
  5219  0012BC  6EC0               	movwf	4032,c	;volatile
  5220                           
  5221                           ; BSR set to: 0
  5222  0012BE  0100               	movlb	0	; () banked
  5223  0012C0  0100               	movlb	0	; () banked
  5224  0012C2  AFAD               	btfss	OpenADC@config2& (0+255),7,b
  5225  0012C4  D003               	goto	l476
  5226                           
  5227                           ; BSR set to: 0
  5228  0012C6  9C9E               	bcf	3998,6,c	;volatile
  5229  0012C8  8C9D               	bsf	3997,6,c	;volatile
  5230  0012CA  8CF2               	bsf	intcon,6,c	;volatile
  5231  0012CC                     l476:
  5232                           
  5233                           ; BSR set to: 0
  5234  0012CC  80C2               	bsf	4034,0,c	;volatile
  5235                           
  5236                           ; BSR set to: 0
  5237  0012CE  0012               	return	
  5238  0012D0                     __end_of_OpenADC:
  5239                           	opt stack 0
  5240                           tblptru	equ	0xFF8
  5241                           tblptrh	equ	0xFF7
  5242                           tblptrl	equ	0xFF6
  5243                           tablat	equ	0xFF5
  5244                           prodh	equ	0xFF4
  5245                           prodl	equ	0xFF3
  5246                           intcon	equ	0xFF2
  5247                           postinc0	equ	0xFEE
  5248                           wreg	equ	0xFE8
  5249                           indf1	equ	0xFE7
  5250                           postdec1	equ	0xFE5
  5251                           fsr1h	equ	0xFE2
  5252                           fsr1l	equ	0xFE1
  5253                           indf2	equ	0xFDF
  5254                           postinc2	equ	0xFDE
  5255                           postdec2	equ	0xFDD
  5256                           fsr2h	equ	0xFDA
  5257                           fsr2l	equ	0xFD9
  5258                           status	equ	0xFD8
  5259                           
  5260 ;; *************** function _InterruptHandlerLow *****************
  5261 ;; Defined at:
  5262 ;;		line 126 in file "../src/interrupts.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;		None
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;		None               void
  5269 ;; Registers used:
  5270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5276 ;;      Params:         0       0       0       0       0
  5277 ;;      Locals:         0       0       0       0       0
  5278 ;;      Temps:         17       0       0       0       0
  5279 ;;      Totals:        17       0       0       0       0
  5280 ;;Total ram usage:       17 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:   10
  5283 ;; This function calls:
  5284 ;;		_adc_int_handler
  5285 ;;		_timer1_int_handler
  5286 ;;		_uart_recv_int_handler
  5287 ;;		_uart_trans_int_handler
  5288 ;; This function is called by:
  5289 ;;		Interrupt level 1
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           	psect	intcodelo
  5294  000018                     __pintcodelo:
  5295                           	opt stack 0
  5296  000018                     _InterruptHandlerLow:
  5297                           	opt stack 16
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;incstack = 0
  5301  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  5302  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  5303  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  5304  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  5305  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  5306  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  5307  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  5308  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  5309  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  5310  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  5311  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  5312  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  5313  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  5314  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  5315  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  5316  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  5317  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  5318                           
  5319                           ;interrupts.c: 128: if(PIR1bits.ADIF){
  5320  00005C  AC9E               	btfss	3998,6,c	;volatile
  5321  00005E  D003               	goto	i1l4507
  5322                           
  5323                           ;interrupts.c: 130: PIR1bits.ADIF = 0;
  5324  000060  9C9E               	bcf	3998,6,c	;volatile
  5325                           
  5326                           ;interrupts.c: 131: adc_int_handler();
  5327  000062  EC70  F00D         	call	_adc_int_handler	;wreg free
  5328  000066                     i1l4507:
  5329                           
  5330                           ;interrupts.c: 132: }
  5331                           ;interrupts.c: 135: if (PIR1bits.TMR1IF) {
  5332  000066  A09E               	btfss	3998,0,c	;volatile
  5333  000068  D003               	goto	i1l4513
  5334                           
  5335                           ;interrupts.c: 136: PIR1bits.TMR1IF = 0;
  5336  00006A  909E               	bcf	3998,0,c	;volatile
  5337                           
  5338                           ;interrupts.c: 137: timer1_int_handler();
  5339  00006C  EC0C  F00E         	call	_timer1_int_handler	;wreg free
  5340  000070                     i1l4513:
  5341                           
  5342                           ;interrupts.c: 139: }
  5343                           ;interrupts.c: 141: if (PIR1bits.TXIF) {
  5344  000070  B89E               	btfsc	3998,4,c	;volatile
  5345                           
  5346                           ;interrupts.c: 143: uart_trans_int_handler();
  5347  000072  ECFF  F00A         	call	_uart_trans_int_handler	;wreg free
  5348                           
  5349                           ;interrupts.c: 144: }
  5350                           ;interrupts.c: 146: if (PIR1bits.RCIF) {
  5351  000076  AA9E               	btfss	3998,5,c	;volatile
  5352  000078  D003               	goto	i1l55
  5353                           
  5354                           ;interrupts.c: 147: PIR1bits.RCIF = 0;
  5355  00007A  9A9E               	bcf	3998,5,c	;volatile
  5356                           
  5357                           ;interrupts.c: 149: uart_recv_int_handler();
  5358  00007C  ECFC  F007         	call	_uart_recv_int_handler	;wreg free
  5359  000080                     i1l55:
  5360  000080  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5361  000084  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5362  000088  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5363  00008C  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5364  000090  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5365  000094  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5366  000098  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5367  00009C  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5368  0000A0  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5369  0000A4  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5370  0000A8  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5371  0000AC  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5372  0000B0  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5373  0000B4  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5374  0000B8  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5375  0000BC  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5376  0000C0  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5377  0000C4  0010               	retfie	
  5378  0000C6                     __end_of_InterruptHandlerLow:
  5379                           	opt stack 0
  5380                           pclatu	equ	0xFFB
  5381                           pclath	equ	0xFFA
  5382                           tblptru	equ	0xFF8
  5383                           tblptrh	equ	0xFF7
  5384                           tblptrl	equ	0xFF6
  5385                           tablat	equ	0xFF5
  5386                           prodh	equ	0xFF4
  5387                           prodl	equ	0xFF3
  5388                           intcon	equ	0xFF2
  5389                           postinc0	equ	0xFEE
  5390                           fsr0h	equ	0xFEA
  5391                           fsr0l	equ	0xFE9
  5392                           wreg	equ	0xFE8
  5393                           indf1	equ	0xFE7
  5394                           postdec1	equ	0xFE5
  5395                           fsr1h	equ	0xFE2
  5396                           fsr1l	equ	0xFE1
  5397                           bsr	equ	0xFE0
  5398                           indf2	equ	0xFDF
  5399                           postinc2	equ	0xFDE
  5400                           postdec2	equ	0xFDD
  5401                           fsr2h	equ	0xFDA
  5402                           fsr2l	equ	0xFD9
  5403                           status	equ	0xFD8
  5404                           
  5405 ;; *************** function _uart_trans_int_handler *****************
  5406 ;; Defined at:
  5407 ;;		line 68 in file "../src/my_uart.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;		None
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;		None
  5412 ;; Return value:  Size  Location     Type
  5413 ;;		None               void
  5414 ;; Registers used:
  5415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5421 ;;      Params:         0       0       0       0       0
  5422 ;;      Locals:         0       0       0       0       0
  5423 ;;      Temps:          1       0       0       0       0
  5424 ;;      Totals:         1       0       0       0       0
  5425 ;;Total ram usage:        1 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; Hardware stack levels required when called:    6
  5428 ;; This function calls:
  5429 ;;		Nothing
  5430 ;; This function is called by:
  5431 ;;		_InterruptHandlerLow
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text32
  5436  0015FE                     __ptext32:
  5437                           	opt stack 0
  5438  0015FE                     _uart_trans_int_handler:
  5439                           	opt stack 19
  5440                           
  5441                           ;my_uart.c: 70: if(TXSTAbits.TRMT){
  5442                           
  5443                           ;incstack = 0
  5444  0015FE  A2AC               	btfss	4012,1,c	;volatile
  5445  001600  0012               	return	
  5446                           
  5447                           ;my_uart.c: 71: if(uc_ptr->txBufind < uc_ptr->txBuflen){
  5448  001602  EE20 F00C          	lfsr	2,12
  5449  001606  5055               	movf	_uc_ptr,w,c
  5450  001608  26D9               	addwf	fsr2l,f,c
  5451  00160A  5056               	movf	_uc_ptr+1,w,c
  5452  00160C  22DA               	addwfc	fsr2h,f,c
  5453  00160E  50DF               	movf	indf2,w,c
  5454  001610  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5455  001612  EE20 F00B          	lfsr	2,11
  5456  001616  5055               	movf	_uc_ptr,w,c
  5457  001618  26D9               	addwf	fsr2l,f,c
  5458  00161A  5056               	movf	_uc_ptr+1,w,c
  5459  00161C  22DA               	addwfc	fsr2h,f,c
  5460  00161E  50DF               	movf	indf2,w,c
  5461  001620  5C01               	subwf	??_uart_trans_int_handler,w,c
  5462  001622  B0D8               	btfsc	status,0,c
  5463  001624  D01E               	goto	i1l413
  5464                           
  5465                           ;my_uart.c: 72: TXREG = uc_ptr->txBuff[uc_ptr->txBufind];
  5466  001626  EE20 F00C          	lfsr	2,12
  5467  00162A  5055               	movf	_uc_ptr,w,c
  5468  00162C  26D9               	addwf	fsr2l,f,c
  5469  00162E  5056               	movf	_uc_ptr+1,w,c
  5470  001630  22DA               	addwfc	fsr2h,f,c
  5471  001632  50DF               	movf	indf2,w,c
  5472  001634  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5473  001636  5001               	movf	??_uart_trans_int_handler,w,c
  5474  001638  0D01               	mullw	1
  5475  00163A  0E06               	movlw	6
  5476  00163C  26F3               	addwf	prodl,f,c
  5477  00163E  0E00               	movlw	0
  5478  001640  22F4               	addwfc	prodh,f,c
  5479  001642  50F3               	movf	prodl,w,c
  5480  001644  2455               	addwf	_uc_ptr,w,c
  5481  001646  6ED9               	movwf	fsr2l,c
  5482  001648  50F4               	movf	prodh,w,c
  5483  00164A  2056               	addwfc	_uc_ptr+1,w,c
  5484  00164C  6EDA               	movwf	fsr2h,c
  5485  00164E  50DF               	movf	indf2,w,c
  5486  001650  6EAD               	movwf	4013,c	;volatile
  5487                           
  5488                           ;my_uart.c: 74: uc_ptr->txBufind++;
  5489  001652  EE20 F00C          	lfsr	2,12
  5490  001656  5055               	movf	_uc_ptr,w,c
  5491  001658  26D9               	addwf	fsr2l,f,c
  5492  00165A  5056               	movf	_uc_ptr+1,w,c
  5493  00165C  22DA               	addwfc	fsr2h,f,c
  5494  00165E  2ADF               	incf	indf2,f,c
  5495                           
  5496                           ;my_uart.c: 75: } else
  5497  001660  0012               	return	
  5498  001662                     i1l413:
  5499                           
  5500                           ;my_uart.c: 76: PIE1bits.TX1IE = 0;
  5501  001662  989D               	bcf	3997,4,c	;volatile
  5502  001664  0012               	return	
  5503  001666                     __end_of_uart_trans_int_handler:
  5504                           	opt stack 0
  5505                           pclatu	equ	0xFFB
  5506                           pclath	equ	0xFFA
  5507                           tblptru	equ	0xFF8
  5508                           tblptrh	equ	0xFF7
  5509                           tblptrl	equ	0xFF6
  5510                           tablat	equ	0xFF5
  5511                           prodh	equ	0xFF4
  5512                           prodl	equ	0xFF3
  5513                           intcon	equ	0xFF2
  5514                           postinc0	equ	0xFEE
  5515                           fsr0h	equ	0xFEA
  5516                           fsr0l	equ	0xFE9
  5517                           wreg	equ	0xFE8
  5518                           indf1	equ	0xFE7
  5519                           postdec1	equ	0xFE5
  5520                           fsr1h	equ	0xFE2
  5521                           fsr1l	equ	0xFE1
  5522                           bsr	equ	0xFE0
  5523                           indf2	equ	0xFDF
  5524                           postinc2	equ	0xFDE
  5525                           postdec2	equ	0xFDD
  5526                           fsr2h	equ	0xFDA
  5527                           fsr2l	equ	0xFD9
  5528                           status	equ	0xFD8
  5529                           
  5530 ;; *************** function _uart_recv_int_handler *****************
  5531 ;; Defined at:
  5532 ;;		line 11 in file "../src/my_uart.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;		None
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;		None
  5537 ;; Return value:  Size  Location     Type
  5538 ;;		None               void
  5539 ;; Registers used:
  5540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5546 ;;      Params:         0       0       0       0       0
  5547 ;;      Locals:         0       0       0       0       0
  5548 ;;      Temps:          1       0       0       0       0
  5549 ;;      Totals:         1       0       0       0       0
  5550 ;;Total ram usage:        1 bytes
  5551 ;; Hardware stack levels used:    1
  5552 ;; Hardware stack levels required when called:    9
  5553 ;; This function calls:
  5554 ;;		_ReadUSART
  5555 ;;		_ToMainLow_sendmsg
  5556 ;; This function is called by:
  5557 ;;		_InterruptHandlerLow
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           	psect	text33
  5562  000FF8                     __ptext33:
  5563                           	opt stack 0
  5564  000FF8                     _uart_recv_int_handler:
  5565                           	opt stack 16
  5566                           
  5567                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  5568                           
  5569                           ;incstack = 0
  5570  000FF8  AA9E               	btfss	3998,5,c	;volatile
  5571  000FFA  D03C               	goto	i1l4495
  5572                           
  5573                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5574  000FFC  EE20 F005          	lfsr	2,5
  5575  001000  5055               	movf	_uc_ptr,w,c
  5576  001002  26D9               	addwf	fsr2l,f,c
  5577  001004  5056               	movf	_uc_ptr+1,w,c
  5578  001006  22DA               	addwfc	fsr2h,f,c
  5579  001008  50DF               	movf	indf2,w,c
  5580  00100A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5581  00100C  501B               	movf	??_uart_recv_int_handler,w,c
  5582  00100E  0D01               	mullw	1
  5583  001010  50F3               	movf	prodl,w,c
  5584  001012  2455               	addwf	_uc_ptr,w,c
  5585  001014  6ED9               	movwf	fsr2l,c
  5586  001016  50F4               	movf	prodh,w,c
  5587  001018  2056               	addwfc	_uc_ptr+1,w,c
  5588  00101A  6EDA               	movwf	fsr2h,c
  5589  00101C  ECB0  F00D         	call	_ReadUSART	;wreg free
  5590  001020  6EDF               	movwf	indf2,c
  5591                           
  5592                           ;my_uart.c: 25: uc_ptr->buflen++;
  5593  001022  EE20 F005          	lfsr	2,5
  5594  001026  5055               	movf	_uc_ptr,w,c
  5595  001028  26D9               	addwf	fsr2l,f,c
  5596  00102A  5056               	movf	_uc_ptr+1,w,c
  5597  00102C  22DA               	addwfc	fsr2h,f,c
  5598  00102E  2ADF               	incf	indf2,f,c
  5599                           
  5600                           ;my_uart.c: 27: if (uc_ptr->buflen == 5) {
  5601  001030  EE20 F005          	lfsr	2,5
  5602  001034  5055               	movf	_uc_ptr,w,c
  5603  001036  26D9               	addwf	fsr2l,f,c
  5604  001038  5056               	movf	_uc_ptr+1,w,c
  5605  00103A  22DA               	addwfc	fsr2h,f,c
  5606  00103C  0E05               	movlw	5
  5607  00103E  62DF               	cpfseq	indf2,c
  5608  001040  D019               	goto	i1l4495
  5609                           
  5610                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5611  001042  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5612  001044  0E1F               	movlw	31
  5613  001046  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5614  001048  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5615  00104A  C056  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5616  00104E  C055  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5617  001052  EE20 F005          	lfsr	2,5
  5618  001056  5055               	movf	_uc_ptr,w,c
  5619  001058  26D9               	addwf	fsr2l,f,c
  5620  00105A  5056               	movf	_uc_ptr+1,w,c
  5621  00105C  22DA               	addwfc	fsr2h,f,c
  5622  00105E  50DF               	movf	indf2,w,c
  5623  001060  EC5D  F00D         	call	_ToMainLow_sendmsg
  5624                           
  5625                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  5626  001064  EE20 F005          	lfsr	2,5
  5627  001068  5055               	movf	_uc_ptr,w,c
  5628  00106A  26D9               	addwf	fsr2l,f,c
  5629  00106C  5056               	movf	_uc_ptr+1,w,c
  5630  00106E  22DA               	addwfc	fsr2h,f,c
  5631  001070  0E00               	movlw	0
  5632  001072  6EDF               	movwf	indf2,c
  5633  001074                     i1l4495:
  5634                           
  5635                           ;my_uart.c: 30: }
  5636                           ;my_uart.c: 31: }
  5637                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  5638  001074  A64A               	btfss	_USART_Status,3,c
  5639  001076  0012               	return	
  5640                           
  5641                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  5642  001078  98AB               	bcf	4011,4,c	;volatile
  5643                           
  5644                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  5645  00107A  88AB               	bsf	4011,4,c	;volatile
  5646                           
  5647                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  5648  00107C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5649  00107E  0E1E               	movlw	30
  5650  001080  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5651  001082  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5652  001084  0E00               	movlw	0
  5653  001086  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5654  001088  0E00               	movlw	0
  5655  00108A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5656  00108C  0E00               	movlw	0
  5657  00108E  EC5D  F00D         	call	_ToMainLow_sendmsg
  5658  001092  0012               	return	
  5659  001094                     __end_of_uart_recv_int_handler:
  5660                           	opt stack 0
  5661                           pclatu	equ	0xFFB
  5662                           pclath	equ	0xFFA
  5663                           tblptru	equ	0xFF8
  5664                           tblptrh	equ	0xFF7
  5665                           tblptrl	equ	0xFF6
  5666                           tablat	equ	0xFF5
  5667                           prodh	equ	0xFF4
  5668                           prodl	equ	0xFF3
  5669                           intcon	equ	0xFF2
  5670                           postinc0	equ	0xFEE
  5671                           fsr0h	equ	0xFEA
  5672                           fsr0l	equ	0xFE9
  5673                           wreg	equ	0xFE8
  5674                           indf1	equ	0xFE7
  5675                           postdec1	equ	0xFE5
  5676                           fsr1h	equ	0xFE2
  5677                           fsr1l	equ	0xFE1
  5678                           bsr	equ	0xFE0
  5679                           indf2	equ	0xFDF
  5680                           postinc2	equ	0xFDE
  5681                           postdec2	equ	0xFDD
  5682                           fsr2h	equ	0xFDA
  5683                           fsr2l	equ	0xFD9
  5684                           status	equ	0xFD8
  5685                           
  5686 ;; *************** function _ToMainLow_sendmsg *****************
  5687 ;; Defined at:
  5688 ;;		line 103 in file "../src/messages.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;  length          1    wreg     unsigned char 
  5691 ;;  msgtype         1   22[COMRAM] unsigned char 
  5692 ;;  data            2   23[COMRAM] PTR void 
  5693 ;;		 -> NULL(0), main@uc(13), 
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;  length          1   25[COMRAM] unsigned char 
  5696 ;; Return value:  Size  Location     Type
  5697 ;;                  1    wreg      char 
  5698 ;; Registers used:
  5699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5700 ;; Tracked objects:
  5701 ;;		On entry : 0/0
  5702 ;;		On exit  : 0/0
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5705 ;;      Params:         3       0       0       0       0
  5706 ;;      Locals:         1       0       0       0       0
  5707 ;;      Temps:          0       0       0       0       0
  5708 ;;      Totals:         4       0       0       0       0
  5709 ;;Total ram usage:        4 bytes
  5710 ;; Hardware stack levels used:    1
  5711 ;; Hardware stack levels required when called:    8
  5712 ;; This function calls:
  5713 ;;		i1_send_msg
  5714 ;; This function is called by:
  5715 ;;		_uart_recv_int_handler
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           	psect	text34
  5720  001ABA                     __ptext34:
  5721                           	opt stack 0
  5722  001ABA                     _ToMainLow_sendmsg:
  5723                           	opt stack 16
  5724                           
  5725                           ;incstack = 0
  5726                           ;ToMainLow_sendmsg@length stored from wreg
  5727  001ABA  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5728                           
  5729                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5730                           ;	Return value of _ToMainLow_sendmsg is never used
  5731  001ABE  0101               	movlb	1	; () banked
  5732  001AC0  0E01               	movlw	high _ToMainLow_MQ
  5733  001AC2  6E0C               	movwf	i1send_msg@qptr+1,c
  5734  001AC4  0101               	movlb	1	; () banked
  5735  001AC6  0E86               	movlw	low _ToMainLow_MQ
  5736  001AC8  6E0B               	movwf	i1send_msg@qptr,c
  5737  001ACA  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5738  001ACE  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5739  001AD2  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5740  001AD6  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5741  001ADA  EC42  F007         	call	i1_send_msg	;wreg free
  5742  001ADE  0012               	return	
  5743  001AE0                     __end_of_ToMainLow_sendmsg:
  5744                           	opt stack 0
  5745                           pclatu	equ	0xFFB
  5746                           pclath	equ	0xFFA
  5747                           tblptru	equ	0xFF8
  5748                           tblptrh	equ	0xFF7
  5749                           tblptrl	equ	0xFF6
  5750                           tablat	equ	0xFF5
  5751                           prodh	equ	0xFF4
  5752                           prodl	equ	0xFF3
  5753                           intcon	equ	0xFF2
  5754                           postinc0	equ	0xFEE
  5755                           fsr0h	equ	0xFEA
  5756                           fsr0l	equ	0xFE9
  5757                           wreg	equ	0xFE8
  5758                           indf1	equ	0xFE7
  5759                           postdec1	equ	0xFE5
  5760                           fsr1h	equ	0xFE2
  5761                           fsr1l	equ	0xFE1
  5762                           bsr	equ	0xFE0
  5763                           indf2	equ	0xFDF
  5764                           postinc2	equ	0xFDE
  5765                           postdec2	equ	0xFDD
  5766                           fsr2h	equ	0xFDA
  5767                           fsr2l	equ	0xFD9
  5768                           status	equ	0xFD8
  5769                           
  5770 ;; *************** function i1_send_msg *****************
  5771 ;; Defined at:
  5772 ;;		line 24 in file "../src/messages.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5775 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5776 ;;  length          1   12[COMRAM] unsigned char 
  5777 ;;  msgtype         1   13[COMRAM] unsigned char 
  5778 ;;  data            2   14[COMRAM] PTR void 
  5779 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  5780 ;;		 -> main@uc(13), 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5783 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  5784 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5785 ;;  send_msg        2   17[COMRAM] unsigned int 
  5786 ;;  send_msg        1   19[COMRAM] unsigned char 
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  1    wreg      char 
  5789 ;; Registers used:
  5790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5796 ;;      Params:         6       0       0       0       0
  5797 ;;      Locals:         5       0       0       0       0
  5798 ;;      Temps:          1       0       0       0       0
  5799 ;;      Totals:        12       0       0       0       0
  5800 ;;Total ram usage:       12 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; Hardware stack levels required when called:    7
  5803 ;; This function calls:
  5804 ;;		i1___awmod
  5805 ;;		i1_memcpy
  5806 ;; This function is called by:
  5807 ;;		_ToMainLow_sendmsg
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           	psect	text35
  5812  000E84                     __ptext35:
  5813                           	opt stack 0
  5814  000E84                     i1_send_msg:
  5815                           	opt stack 16
  5816                           
  5817                           ;messages.c: 25: unsigned char slot;
  5818                           ;messages.c: 27: msg *qmsg;
  5819                           ;messages.c: 28: size_t tlength = length;
  5820                           
  5821                           ;incstack = 0
  5822  000E84  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5823  000E88  6A13               	clrf	i1send_msg@tlength+1,c
  5824                           
  5825                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5826  000E8A  EE20 F041          	lfsr	2,65
  5827  000E8E  500B               	movf	i1send_msg@qptr,w,c
  5828  000E90  26D9               	addwf	fsr2l,f,c
  5829  000E92  500C               	movf	i1send_msg@qptr+1,w,c
  5830  000E94  22DA               	addwfc	fsr2h,f,c
  5831  000E96  50DF               	movf	indf2,w,c
  5832  000E98  6E14               	movwf	i1send_msg@slot,c
  5833                           
  5834                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5835  000E9A  5014               	movf	i1send_msg@slot,w,c
  5836  000E9C  0D0D               	mullw	13
  5837  000E9E  50F3               	movf	prodl,w,c
  5838  000EA0  240B               	addwf	i1send_msg@qptr,w,c
  5839  000EA2  6E15               	movwf	i1send_msg@qmsg,c
  5840  000EA4  50F4               	movf	prodh,w,c
  5841  000EA6  200C               	addwfc	i1send_msg@qptr+1,w,c
  5842  000EA8  6E16               	movwf	i1send_msg@qmsg+1,c
  5843                           
  5844                           ;messages.c: 41: if (qmsg->full != 0) {
  5845  000EAA  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5846  000EAE  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5847  000EB2  50DF               	movf	indf2,w,c
  5848  000EB4  B4D8               	btfsc	status,2,c
  5849  000EB6  D002               	goto	i1l4467
  5850                           
  5851                           ;messages.c: 42: return (-1);
  5852  000EB8  0EFF               	movlw	255
  5853  000EBA  0012               	return	
  5854  000EBC                     i1l4467:
  5855                           
  5856                           ;messages.c: 43: }
  5857                           ;messages.c: 46: qmsg->length = length;
  5858  000EBC  EE20 F001          	lfsr	2,1
  5859  000EC0  5015               	movf	i1send_msg@qmsg,w,c
  5860  000EC2  26D9               	addwf	fsr2l,f,c
  5861  000EC4  5016               	movf	i1send_msg@qmsg+1,w,c
  5862  000EC6  22DA               	addwfc	fsr2h,f,c
  5863  000EC8  C00D  FFDF         	movff	i1send_msg@length,indf2
  5864                           
  5865                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5866  000ECC  EE20 F002          	lfsr	2,2
  5867  000ED0  5015               	movf	i1send_msg@qmsg,w,c
  5868  000ED2  26D9               	addwf	fsr2l,f,c
  5869  000ED4  5016               	movf	i1send_msg@qmsg+1,w,c
  5870  000ED6  22DA               	addwfc	fsr2h,f,c
  5871  000ED8  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5872                           
  5873                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5874  000EDC  0E03               	movlw	3
  5875  000EDE  2415               	addwf	i1send_msg@qmsg,w,c
  5876  000EE0  6E01               	movwf	i1memcpy@d1,c
  5877  000EE2  0E00               	movlw	0
  5878  000EE4  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5879  000EE6  6E02               	movwf	i1memcpy@d1+1,c
  5880  000EE8  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5881  000EEC  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5882  000EF0  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5883  000EF4  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5884  000EF8  ECA0  F00C         	call	i1_memcpy	;wreg free
  5885                           
  5886                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  5887  000EFC  EE20 F041          	lfsr	2,65
  5888  000F00  500B               	movf	i1send_msg@qptr,w,c
  5889  000F02  26D9               	addwf	fsr2l,f,c
  5890  000F04  500C               	movf	i1send_msg@qptr+1,w,c
  5891  000F06  22DA               	addwfc	fsr2h,f,c
  5892  000F08  EE10 F041          	lfsr	1,65
  5893  000F0C  500B               	movf	i1send_msg@qptr,w,c
  5894  000F0E  26E1               	addwf	fsr1l,f,c
  5895  000F10  500C               	movf	i1send_msg@qptr+1,w,c
  5896  000F12  22E2               	addwfc	fsr1h,f,c
  5897  000F14  50E7               	movf	indf1,w,c
  5898  000F16  6E11               	movwf	??i1_send_msg& (0+255),c
  5899  000F18  0E01               	movlw	1
  5900  000F1A  2411               	addwf	??i1_send_msg,w,c
  5901  000F1C  6E01               	movwf	i1___awmod@dividend,c
  5902  000F1E  6A02               	clrf	i1___awmod@dividend+1,c
  5903  000F20  0E00               	movlw	0
  5904  000F22  2202               	addwfc	i1___awmod@dividend+1,f,c
  5905  000F24  0E00               	movlw	0
  5906  000F26  6E04               	movwf	i1___awmod@divisor+1,c
  5907  000F28  0E05               	movlw	5
  5908  000F2A  6E03               	movwf	i1___awmod@divisor,c
  5909  000F2C  EC4A  F008         	call	i1___awmod	;wreg free
  5910  000F30  5001               	movf	?i1___awmod,w,c
  5911  000F32  6EDF               	movwf	indf2,c
  5912                           
  5913                           ;messages.c: 59: qmsg->full = 1;
  5914  000F34  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5915  000F38  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5916  000F3C  0E01               	movlw	1
  5917  000F3E  6EDF               	movwf	indf2,c
  5918                           
  5919                           ;messages.c: 60: return (1);
  5920  000F40  0E01               	movlw	1
  5921  000F42  0012               	return	
  5922  000F44                     __end_ofi1_send_msg:
  5923                           	opt stack 0
  5924                           pclatu	equ	0xFFB
  5925                           pclath	equ	0xFFA
  5926                           tblptru	equ	0xFF8
  5927                           tblptrh	equ	0xFF7
  5928                           tblptrl	equ	0xFF6
  5929                           tablat	equ	0xFF5
  5930                           prodh	equ	0xFF4
  5931                           prodl	equ	0xFF3
  5932                           intcon	equ	0xFF2
  5933                           postinc0	equ	0xFEE
  5934                           fsr0h	equ	0xFEA
  5935                           fsr0l	equ	0xFE9
  5936                           wreg	equ	0xFE8
  5937                           indf1	equ	0xFE7
  5938                           postdec1	equ	0xFE5
  5939                           fsr1h	equ	0xFE2
  5940                           fsr1l	equ	0xFE1
  5941                           bsr	equ	0xFE0
  5942                           indf2	equ	0xFDF
  5943                           postinc2	equ	0xFDE
  5944                           postdec2	equ	0xFDD
  5945                           fsr2h	equ	0xFDA
  5946                           fsr2l	equ	0xFD9
  5947                           status	equ	0xFD8
  5948                           
  5949 ;; *************** function i1_memcpy *****************
  5950 ;; Defined at:
  5951 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;  d1              2    0[COMRAM] PTR void 
  5954 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  5955 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5956 ;;		 -> main@msgbuffer(11), 
  5957 ;;  s1              2    2[COMRAM] PTR const void 
  5958 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5959 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5960 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  5961 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  5962 ;;		 -> main@uc(13), 
  5963 ;;  n               2    4[COMRAM] unsigned int 
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5966 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5967 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5968 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  5969 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  5970 ;;		 -> main@uc(13), 
  5971 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5972 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  5973 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5974 ;;		 -> main@msgbuffer(11), 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  2    0[COMRAM] PTR void 
  5977 ;; Registers used:
  5978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5984 ;;      Params:         6       0       0       0       0
  5985 ;;      Locals:         4       0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0
  5987 ;;      Totals:        10       0       0       0       0
  5988 ;;Total ram usage:       10 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    6
  5991 ;; This function calls:
  5992 ;;		Nothing
  5993 ;; This function is called by:
  5994 ;;		i1_send_msg
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text36
  5999  001940                     __ptext36:
  6000                           	opt stack 0
  6001  001940                     i1_memcpy:
  6002                           	opt stack 16
  6003                           
  6004                           ;incstack = 0
  6005  001940  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6006  001944  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6007  001948  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6008  00194C  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6009  001950  D00E               	goto	i1l4371
  6010  001952                     i1l4365:
  6011  001952  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6012  001956  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6013  00195A  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6014  00195E  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6015  001962  CFDF FFE7          	movff	indf2,indf1
  6016  001966  4A09               	infsnz	i1memcpy@s,f,c
  6017  001968  2A0A               	incf	i1memcpy@s+1,f,c
  6018  00196A  4A07               	infsnz	i1memcpy@d,f,c
  6019  00196C  2A08               	incf	i1memcpy@d+1,f,c
  6020  00196E                     i1l4371:
  6021  00196E  0605               	decf	i1memcpy@n,f,c
  6022  001970  A0D8               	btfss	status,0,c
  6023  001972  0606               	decf	i1memcpy@n+1,f,c
  6024  001974  2805               	incf	i1memcpy@n& (0+255),w,c
  6025  001976  B4D8               	btfsc	status,2,c
  6026  001978  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6027  00197A  B4D8               	btfsc	status,2,c
  6028                           
  6029                           ;	Return value of i1_memcpy is never used
  6030  00197C  0012               	return	
  6031  00197E  D7E9               	goto	i1l4365
  6032  001980                     __end_ofi1_memcpy:
  6033                           	opt stack 0
  6034                           pclatu	equ	0xFFB
  6035                           pclath	equ	0xFFA
  6036                           tblptru	equ	0xFF8
  6037                           tblptrh	equ	0xFF7
  6038                           tblptrl	equ	0xFF6
  6039                           tablat	equ	0xFF5
  6040                           prodh	equ	0xFF4
  6041                           prodl	equ	0xFF3
  6042                           intcon	equ	0xFF2
  6043                           postinc0	equ	0xFEE
  6044                           fsr0h	equ	0xFEA
  6045                           fsr0l	equ	0xFE9
  6046                           wreg	equ	0xFE8
  6047                           indf1	equ	0xFE7
  6048                           postdec1	equ	0xFE5
  6049                           fsr1h	equ	0xFE2
  6050                           fsr1l	equ	0xFE1
  6051                           bsr	equ	0xFE0
  6052                           indf2	equ	0xFDF
  6053                           postinc2	equ	0xFDE
  6054                           postdec2	equ	0xFDD
  6055                           fsr2h	equ	0xFDA
  6056                           fsr2l	equ	0xFD9
  6057                           status	equ	0xFD8
  6058                           
  6059 ;; *************** function i1___awmod *****************
  6060 ;; Defined at:
  6061 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;  dividend        2    0[COMRAM] int 
  6064 ;;  divisor         2    2[COMRAM] int 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  __awmod         1    6[COMRAM] unsigned char 
  6067 ;;  __awmod         1    5[COMRAM] unsigned char 
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  2    0[COMRAM] int 
  6070 ;; Registers used:
  6071 ;;		wreg, status,2, status,0, prodl
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6077 ;;      Params:         4       0       0       0       0
  6078 ;;      Locals:         2       0       0       0       0
  6079 ;;      Temps:          1       0       0       0       0
  6080 ;;      Totals:         7       0       0       0       0
  6081 ;;Total ram usage:        7 bytes
  6082 ;; Hardware stack levels used:    1
  6083 ;; Hardware stack levels required when called:    6
  6084 ;; This function calls:
  6085 ;;		Nothing
  6086 ;; This function is called by:
  6087 ;;		i1_send_msg
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           	psect	text37
  6092  001094                     __ptext37:
  6093                           	opt stack 0
  6094  001094                     i1___awmod:
  6095                           	opt stack 16
  6096                           
  6097                           ;incstack = 0
  6098  001094  6E05               	movwf	??i1___awmod& (0+255),c
  6099  001096  0E00               	movlw	0
  6100  001098  6E07               	movwf	i1___awmod@sign,c
  6101  00109A  5005               	movf	??i1___awmod& (0+255),w,c
  6102  00109C  5002               	movf	i1___awmod@dividend+1,w,c
  6103  00109E  0A80               	xorlw	128
  6104  0010A0  6EF3               	movwf	prodl,c
  6105  0010A2  0E80               	movlw	128
  6106  0010A4  5CF3               	subwf	prodl,w,c
  6107  0010A6  0E00               	movlw	0
  6108  0010A8  B4D8               	btfsc	status,2,c
  6109  0010AA  5C01               	subwf	i1___awmod@dividend,w,c
  6110  0010AC  B0D8               	btfsc	status,0,c
  6111  0010AE  D008               	goto	i1l4391
  6112  0010B0  6C01               	negf	i1___awmod@dividend,c
  6113  0010B2  1E02               	comf	i1___awmod@dividend+1,f,c
  6114  0010B4  B0D8               	btfsc	status,0,c
  6115  0010B6  2A02               	incf	i1___awmod@dividend+1,f,c
  6116  0010B8  6E05               	movwf	??i1___awmod& (0+255),c
  6117  0010BA  0E01               	movlw	1
  6118  0010BC  6E07               	movwf	i1___awmod@sign,c
  6119  0010BE  5005               	movf	??i1___awmod& (0+255),w,c
  6120  0010C0                     i1l4391:
  6121  0010C0  5004               	movf	i1___awmod@divisor+1,w,c
  6122  0010C2  0A80               	xorlw	128
  6123  0010C4  6EF3               	movwf	prodl,c
  6124  0010C6  0E80               	movlw	128
  6125  0010C8  5CF3               	subwf	prodl,w,c
  6126  0010CA  0E00               	movlw	0
  6127  0010CC  B4D8               	btfsc	status,2,c
  6128  0010CE  5C03               	subwf	i1___awmod@divisor,w,c
  6129  0010D0  B0D8               	btfsc	status,0,c
  6130  0010D2  D004               	goto	i1l4395
  6131  0010D4  6C03               	negf	i1___awmod@divisor,c
  6132  0010D6  1E04               	comf	i1___awmod@divisor+1,f,c
  6133  0010D8  B0D8               	btfsc	status,0,c
  6134  0010DA  2A04               	incf	i1___awmod@divisor+1,f,c
  6135  0010DC                     i1l4395:
  6136  0010DC  5004               	movf	i1___awmod@divisor+1,w,c
  6137  0010DE  1003               	iorwf	i1___awmod@divisor,w,c
  6138  0010E0  B4D8               	btfsc	status,2,c
  6139  0010E2  D01A               	goto	i1l4411
  6140  0010E4  6E05               	movwf	??i1___awmod& (0+255),c
  6141  0010E6  0E01               	movlw	1
  6142  0010E8  6E06               	movwf	i1___awmod@counter,c
  6143  0010EA  5005               	movf	??i1___awmod& (0+255),w,c
  6144  0010EC  D004               	goto	i1l4401
  6145  0010EE                     i1l4399:
  6146  0010EE  90D8               	bcf	status,0,c
  6147  0010F0  3603               	rlcf	i1___awmod@divisor,f,c
  6148  0010F2  3604               	rlcf	i1___awmod@divisor+1,f,c
  6149  0010F4  2A06               	incf	i1___awmod@counter,f,c
  6150  0010F6                     i1l4401:
  6151  0010F6  AE04               	btfss	i1___awmod@divisor+1,7,c
  6152  0010F8  D7FA               	goto	i1l4399
  6153  0010FA                     i1l4403:
  6154  0010FA  5003               	movf	i1___awmod@divisor,w,c
  6155  0010FC  5C01               	subwf	i1___awmod@dividend,w,c
  6156  0010FE  5004               	movf	i1___awmod@divisor+1,w,c
  6157  001100  5802               	subwfb	i1___awmod@dividend+1,w,c
  6158  001102  A0D8               	btfss	status,0,c
  6159  001104  D004               	goto	i1l4407
  6160  001106  5003               	movf	i1___awmod@divisor,w,c
  6161  001108  5E01               	subwf	i1___awmod@dividend,f,c
  6162  00110A  5004               	movf	i1___awmod@divisor+1,w,c
  6163  00110C  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6164  00110E                     i1l4407:
  6165  00110E  90D8               	bcf	status,0,c
  6166  001110  3204               	rrcf	i1___awmod@divisor+1,f,c
  6167  001112  3203               	rrcf	i1___awmod@divisor,f,c
  6168  001114  2E06               	decfsz	i1___awmod@counter,f,c
  6169  001116  D7F1               	goto	i1l4403
  6170  001118                     i1l4411:
  6171  001118  5007               	movf	i1___awmod@sign,w,c
  6172  00111A  B4D8               	btfsc	status,2,c
  6173  00111C  D004               	goto	i1l4415
  6174  00111E  6C01               	negf	i1___awmod@dividend,c
  6175  001120  1E02               	comf	i1___awmod@dividend+1,f,c
  6176  001122  B0D8               	btfsc	status,0,c
  6177  001124  2A02               	incf	i1___awmod@dividend+1,f,c
  6178  001126                     i1l4415:
  6179  001126  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6180  00112A  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6181  00112E  0012               	return	
  6182  001130                     __end_ofi1___awmod:
  6183                           	opt stack 0
  6184                           pclatu	equ	0xFFB
  6185                           pclath	equ	0xFFA
  6186                           tblptru	equ	0xFF8
  6187                           tblptrh	equ	0xFF7
  6188                           tblptrl	equ	0xFF6
  6189                           tablat	equ	0xFF5
  6190                           prodh	equ	0xFF4
  6191                           prodl	equ	0xFF3
  6192                           intcon	equ	0xFF2
  6193                           postinc0	equ	0xFEE
  6194                           fsr0h	equ	0xFEA
  6195                           fsr0l	equ	0xFE9
  6196                           wreg	equ	0xFE8
  6197                           indf1	equ	0xFE7
  6198                           postdec1	equ	0xFE5
  6199                           fsr1h	equ	0xFE2
  6200                           fsr1l	equ	0xFE1
  6201                           bsr	equ	0xFE0
  6202                           indf2	equ	0xFDF
  6203                           postinc2	equ	0xFDE
  6204                           postdec2	equ	0xFDD
  6205                           fsr2h	equ	0xFDA
  6206                           fsr2l	equ	0xFD9
  6207                           status	equ	0xFD8
  6208                           
  6209 ;; *************** function _ReadUSART *****************
  6210 ;; Defined at:
  6211 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;		None
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;  data            1    0[COMRAM] unsigned char 
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  1    wreg      unsigned char 
  6218 ;; Registers used:
  6219 ;;		wreg, status,2, status,0
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6225 ;;      Params:         0       0       0       0       0
  6226 ;;      Locals:         1       0       0       0       0
  6227 ;;      Temps:          0       0       0       0       0
  6228 ;;      Totals:         1       0       0       0       0
  6229 ;;Total ram usage:        1 bytes
  6230 ;; Hardware stack levels used:    1
  6231 ;; Hardware stack levels required when called:    6
  6232 ;; This function calls:
  6233 ;;		Nothing
  6234 ;; This function is called by:
  6235 ;;		_uart_recv_int_handler
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text38
  6240  001B60                     __ptext38:
  6241                           	opt stack 0
  6242  001B60                     _ReadUSART:
  6243                           	opt stack 18
  6244                           
  6245                           ;incstack = 0
  6246  001B60  0EF2               	movlw	242
  6247  001B62  164A               	andwf	_USART_Status,f,c
  6248  001B64  ACAB               	btfss	4011,6,c	;volatile
  6249  001B66  D003               	goto	i1l574
  6250  001B68  904A               	bcf	_USART_Status,0,c
  6251  001B6A  B0AB               	btfsc	4011,0,c	;volatile
  6252  001B6C  804A               	bsf	_USART_Status,0,c
  6253  001B6E                     i1l574:
  6254  001B6E  B4AB               	btfsc	4011,2,c	;volatile
  6255  001B70  844A               	bsf	_USART_Status,2,c
  6256  001B72  B2AB               	btfsc	4011,1,c	;volatile
  6257  001B74  864A               	bsf	_USART_Status,3,c
  6258  001B76  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6259  001B7A  5001               	movf	ReadUSART@data,w,c
  6260  001B7C  0012               	return	
  6261  001B7E                     __end_of_ReadUSART:
  6262                           	opt stack 0
  6263                           pclatu	equ	0xFFB
  6264                           pclath	equ	0xFFA
  6265                           tblptru	equ	0xFF8
  6266                           tblptrh	equ	0xFF7
  6267                           tblptrl	equ	0xFF6
  6268                           tablat	equ	0xFF5
  6269                           prodh	equ	0xFF4
  6270                           prodl	equ	0xFF3
  6271                           intcon	equ	0xFF2
  6272                           postinc0	equ	0xFEE
  6273                           fsr0h	equ	0xFEA
  6274                           fsr0l	equ	0xFE9
  6275                           wreg	equ	0xFE8
  6276                           indf1	equ	0xFE7
  6277                           postdec1	equ	0xFE5
  6278                           fsr1h	equ	0xFE2
  6279                           fsr1l	equ	0xFE1
  6280                           bsr	equ	0xFE0
  6281                           indf2	equ	0xFDF
  6282                           postinc2	equ	0xFDE
  6283                           postdec2	equ	0xFDD
  6284                           fsr2h	equ	0xFDA
  6285                           fsr2l	equ	0xFD9
  6286                           status	equ	0xFD8
  6287                           
  6288 ;; *************** function _timer1_int_handler *****************
  6289 ;; Defined at:
  6290 ;;		line 46 in file "../src/user_interrupts.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;		None
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;		None
  6295 ;; Return value:  Size  Location     Type
  6296 ;;		None               void
  6297 ;; Registers used:
  6298 ;;		wreg, status,2, cstack
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6304 ;;      Params:         0       0       0       0       0
  6305 ;;      Locals:         0       0       0       0       0
  6306 ;;      Temps:          0       0       0       0       0
  6307 ;;      Totals:         0       0       0       0       0
  6308 ;;Total ram usage:        0 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; Hardware stack levels required when called:    7
  6311 ;; This function calls:
  6312 ;;		_WriteTimer1
  6313 ;; This function is called by:
  6314 ;;		_InterruptHandlerLow
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           	psect	text39
  6319  001C18                     __ptext39:
  6320                           	opt stack 0
  6321  001C18                     _timer1_int_handler:
  6322                           	opt stack 18
  6323                           
  6324                           ;user_interrupts.c: 58: WriteTimer1(0);
  6325                           
  6326                           ;incstack = 0
  6327  001C18  0E00               	movlw	0
  6328  001C1A  6E02               	movwf	WriteTimer1@timer1+1,c
  6329  001C1C  0E00               	movlw	0
  6330  001C1E  6E01               	movwf	WriteTimer1@timer1,c
  6331  001C20  ECF1  F00D         	call	_WriteTimer1	;wreg free
  6332  001C24  0012               	return	
  6333  001C26                     __end_of_timer1_int_handler:
  6334                           	opt stack 0
  6335                           pclatu	equ	0xFFB
  6336                           pclath	equ	0xFFA
  6337                           tblptru	equ	0xFF8
  6338                           tblptrh	equ	0xFF7
  6339                           tblptrl	equ	0xFF6
  6340                           tablat	equ	0xFF5
  6341                           prodh	equ	0xFF4
  6342                           prodl	equ	0xFF3
  6343                           intcon	equ	0xFF2
  6344                           postinc0	equ	0xFEE
  6345                           fsr0h	equ	0xFEA
  6346                           fsr0l	equ	0xFE9
  6347                           wreg	equ	0xFE8
  6348                           indf1	equ	0xFE7
  6349                           postdec1	equ	0xFE5
  6350                           fsr1h	equ	0xFE2
  6351                           fsr1l	equ	0xFE1
  6352                           bsr	equ	0xFE0
  6353                           indf2	equ	0xFDF
  6354                           postinc2	equ	0xFDE
  6355                           postdec2	equ	0xFDD
  6356                           fsr2h	equ	0xFDA
  6357                           fsr2l	equ	0xFD9
  6358                           status	equ	0xFD8
  6359                           
  6360 ;; *************** function _WriteTimer1 *****************
  6361 ;; Defined at:
  6362 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;  timer1          2    0[COMRAM] unsigned int 
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;  timer           2    2[COMRAM] struct Timers
  6367 ;; Return value:  Size  Location     Type
  6368 ;;		None               void
  6369 ;; Registers used:
  6370 ;;		None
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6376 ;;      Params:         2       0       0       0       0
  6377 ;;      Locals:         2       0       0       0       0
  6378 ;;      Temps:          0       0       0       0       0
  6379 ;;      Totals:         4       0       0       0       0
  6380 ;;Total ram usage:        4 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:    6
  6383 ;; This function calls:
  6384 ;;		Nothing
  6385 ;; This function is called by:
  6386 ;;		_timer1_int_handler
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text40
  6391  001BE2                     __ptext40:
  6392                           	opt stack 0
  6393  001BE2                     _WriteTimer1:
  6394                           	opt stack 18
  6395                           
  6396                           ;incstack = 0
  6397  001BE2  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6398  001BE6  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6399  001BEA  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6400  001BEE  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6401  001BF2  0012               	return	
  6402  001BF4                     __end_of_WriteTimer1:
  6403                           	opt stack 0
  6404                           pclatu	equ	0xFFB
  6405                           pclath	equ	0xFFA
  6406                           tblptru	equ	0xFF8
  6407                           tblptrh	equ	0xFF7
  6408                           tblptrl	equ	0xFF6
  6409                           tablat	equ	0xFF5
  6410                           prodh	equ	0xFF4
  6411                           prodl	equ	0xFF3
  6412                           intcon	equ	0xFF2
  6413                           postinc0	equ	0xFEE
  6414                           fsr0h	equ	0xFEA
  6415                           fsr0l	equ	0xFE9
  6416                           wreg	equ	0xFE8
  6417                           indf1	equ	0xFE7
  6418                           postdec1	equ	0xFE5
  6419                           fsr1h	equ	0xFE2
  6420                           fsr1l	equ	0xFE1
  6421                           bsr	equ	0xFE0
  6422                           indf2	equ	0xFDF
  6423                           postinc2	equ	0xFDE
  6424                           postdec2	equ	0xFDD
  6425                           fsr2h	equ	0xFDA
  6426                           fsr2l	equ	0xFD9
  6427                           status	equ	0xFD8
  6428                           
  6429 ;; *************** function _adc_int_handler *****************
  6430 ;; Defined at:
  6431 ;;		line 61 in file "../src/user_interrupts.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;		None
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;		None
  6436 ;; Return value:  Size  Location     Type
  6437 ;;		None               void
  6438 ;; Registers used:
  6439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6445 ;;      Params:         0       0       0       0       0
  6446 ;;      Locals:         0       0       0       0       0
  6447 ;;      Temps:          0       0       0       0       0
  6448 ;;      Totals:         0       0       0       0       0
  6449 ;;Total ram usage:        0 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:    6
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_InterruptHandlerLow
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           	psect	text41
  6460  001AE0                     __ptext41:
  6461                           	opt stack 0
  6462  001AE0                     _adc_int_handler:
  6463                           	opt stack 19
  6464                           
  6465                           ;user_interrupts.c: 63: if(adcbuffer[0] < 27)
  6466                           
  6467                           ;incstack = 0
  6468  001AE0  0E1B               	movlw	27
  6469  001AE2  5C2D               	subwf	_adcbuffer,w,c
  6470  001AE4  B0D8               	btfsc	status,0,c
  6471  001AE6  D002               	goto	i1l1331
  6472                           
  6473                           ;user_interrupts.c: 64: adcbuffer[0] = adcbuffer[0] + 1;
  6474  001AE8  282D               	incf	_adcbuffer,w,c
  6475  001AEA  6E2D               	movwf	_adcbuffer,c
  6476  001AEC                     i1l1331:
  6477                           
  6478                           ;user_interrupts.c: 71: adcbuffer[adcbuffer[0]] = ADRESH;
  6479  001AEC  502D               	movf	_adcbuffer,w,c
  6480  001AEE  0D01               	mullw	1
  6481  001AF0  0E2D               	movlw	low _adcbuffer
  6482  001AF2  24F3               	addwf	prodl,w,c
  6483  001AF4  6ED9               	movwf	fsr2l,c
  6484  001AF6  0E00               	movlw	high _adcbuffer
  6485  001AF8  20F4               	addwfc	prodh,w,c
  6486  001AFA  6EDA               	movwf	fsr2h,c
  6487  001AFC  CFC4 FFDF          	movff	4036,indf2	;volatile
  6488  001B00  0012               	return	
  6489  001B02                     __end_of_adc_int_handler:
  6490                           	opt stack 0
  6491                           pclatu	equ	0xFFB
  6492                           pclath	equ	0xFFA
  6493                           tblptru	equ	0xFF8
  6494                           tblptrh	equ	0xFF7
  6495                           tblptrl	equ	0xFF6
  6496                           tablat	equ	0xFF5
  6497                           prodh	equ	0xFF4
  6498                           prodl	equ	0xFF3
  6499                           intcon	equ	0xFF2
  6500                           postinc0	equ	0xFEE
  6501                           fsr0h	equ	0xFEA
  6502                           fsr0l	equ	0xFE9
  6503                           wreg	equ	0xFE8
  6504                           indf1	equ	0xFE7
  6505                           postdec1	equ	0xFE5
  6506                           fsr1h	equ	0xFE2
  6507                           fsr1l	equ	0xFE1
  6508                           bsr	equ	0xFE0
  6509                           indf2	equ	0xFDF
  6510                           postinc2	equ	0xFDE
  6511                           postdec2	equ	0xFDD
  6512                           fsr2h	equ	0xFDA
  6513                           fsr2l	equ	0xFD9
  6514                           status	equ	0xFD8
  6515                           
  6516 ;; *************** function _InterruptHandlerHigh *****************
  6517 ;; Defined at:
  6518 ;;		line 84 in file "../src/interrupts.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;		None
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;		None
  6523 ;; Return value:  Size  Location     Type
  6524 ;;		None               void
  6525 ;; Registers used:
  6526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6532 ;;      Params:         0       0       0       0       0
  6533 ;;      Locals:         0       0       0       0       0
  6534 ;;      Temps:          0      14       0       0       0
  6535 ;;      Totals:         0      14       0       0       0
  6536 ;;Total ram usage:       14 bytes
  6537 ;; Hardware stack levels used:    1
  6538 ;; Hardware stack levels required when called:    5
  6539 ;; This function calls:
  6540 ;;		_SleepIfOkay
  6541 ;;		_i2c_int_handler
  6542 ;;		_timer0_int_handler
  6543 ;; This function is called by:
  6544 ;;		Interrupt level 2
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           	psect	intcode
  6549  000008                     __pintcode:
  6550                           	opt stack 0
  6551  000008                     _InterruptHandlerHigh:
  6552                           	opt stack 16
  6553                           
  6554                           ;incstack = 0
  6555  000008  CFFA F09F          	movff	pclath,??_InterruptHandlerHigh
  6556  00000C  CFFB F0A0          	movff	pclatu,??_InterruptHandlerHigh+1
  6557  000010  EF68  F009         	goto	int_func
  6558                           pclatu	equ	0xFFB
  6559                           pclath	equ	0xFFA
  6560                           tblptru	equ	0xFF8
  6561                           tblptrh	equ	0xFF7
  6562                           tblptrl	equ	0xFF6
  6563                           tablat	equ	0xFF5
  6564                           prodh	equ	0xFF4
  6565                           prodl	equ	0xFF3
  6566                           intcon	equ	0xFF2
  6567                           postinc0	equ	0xFEE
  6568                           fsr0h	equ	0xFEA
  6569                           fsr0l	equ	0xFE9
  6570                           wreg	equ	0xFE8
  6571                           indf1	equ	0xFE7
  6572                           postdec1	equ	0xFE5
  6573                           fsr1h	equ	0xFE2
  6574                           fsr1l	equ	0xFE1
  6575                           bsr	equ	0xFE0
  6576                           indf2	equ	0xFDF
  6577                           postinc2	equ	0xFDE
  6578                           postdec2	equ	0xFDD
  6579                           fsr2h	equ	0xFDA
  6580                           fsr2l	equ	0xFD9
  6581                           status	equ	0xFD8
  6582                           
  6583                           	psect	intcode_body
  6584  0012D0                     __pintcode_body:
  6585                           	opt stack 16
  6586  0012D0                     int_func:
  6587                           	opt stack 16
  6588  0012D0  CFE9 F0A1          	movff	fsr0l,??_InterruptHandlerHigh+2
  6589  0012D4  CFEA F0A2          	movff	fsr0h,??_InterruptHandlerHigh+3
  6590  0012D8  CFE1 F0A3          	movff	fsr1l,??_InterruptHandlerHigh+4
  6591  0012DC  CFE2 F0A4          	movff	fsr1h,??_InterruptHandlerHigh+5
  6592  0012E0  CFD9 F0A5          	movff	fsr2l,??_InterruptHandlerHigh+6
  6593  0012E4  CFDA F0A6          	movff	fsr2h,??_InterruptHandlerHigh+7
  6594  0012E8  CFF3 F0A7          	movff	prodl,??_InterruptHandlerHigh+8
  6595  0012EC  CFF4 F0A8          	movff	prodh,??_InterruptHandlerHigh+9
  6596  0012F0  CFF6 F0A9          	movff	tblptrl,??_InterruptHandlerHigh+10
  6597  0012F4  CFF7 F0AA          	movff	tblptrh,??_InterruptHandlerHigh+11
  6598  0012F8  CFF8 F0AB          	movff	tblptru,??_InterruptHandlerHigh+12
  6599  0012FC  CFF5 F0AC          	movff	tablat,??_InterruptHandlerHigh+13
  6600                           
  6601                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  6602  001300  A69E               	btfss	3998,3,c	;volatile
  6603  001302  D003               	goto	i2l3545
  6604                           
  6605                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  6606  001304  969E               	bcf	3998,3,c	;volatile
  6607                           
  6608                           ;interrupts.c: 94: i2c_int_handler();
  6609  001306  EC1C  F00E         	call	_i2c_int_handler	;wreg free
  6610  00130A                     i2l3545:
  6611                           
  6612                           ;interrupts.c: 96: }
  6613                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  6614  00130A  A4F2               	btfss	intcon,2,c	;volatile
  6615  00130C  D003               	goto	i2l3551
  6616                           
  6617                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  6618  00130E  94F2               	bcf	intcon,2,c	;volatile
  6619                           
  6620                           ;interrupts.c: 103: timer0_int_handler();
  6621  001310  ECBF  F00D         	call	_timer0_int_handler	;wreg free
  6622  001314                     i2l3551:
  6623                           
  6624                           ;interrupts.c: 104: }
  6625                           ;interrupts.c: 113: SleepIfOkay();
  6626  001314  ECCA  F00A         	call	_SleepIfOkay	;wreg free
  6627  001318  C0AC  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6628  00131C  C0AB  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6629  001320  C0AA  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6630  001324  C0A9  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6631  001328  C0A8  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6632  00132C  C0A7  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6633  001330  C0A6  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6634  001334  C0A5  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6635  001338  C0A4  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6636  00133C  C0A3  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6637  001340  C0A2  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6638  001344  C0A1  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6639  001348  C0A0  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6640  00134C  C09F  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6641  001350  0011               	retfie		f
  6642  001352                     __end_of_InterruptHandlerHigh:
  6643                           	opt stack 0
  6644                           pclatu	equ	0xFFB
  6645                           pclath	equ	0xFFA
  6646                           tblptru	equ	0xFF8
  6647                           tblptrh	equ	0xFF7
  6648                           tblptrl	equ	0xFF6
  6649                           tablat	equ	0xFF5
  6650                           prodh	equ	0xFF4
  6651                           prodl	equ	0xFF3
  6652                           intcon	equ	0xFF2
  6653                           postinc0	equ	0xFEE
  6654                           fsr0h	equ	0xFEA
  6655                           fsr0l	equ	0xFE9
  6656                           wreg	equ	0xFE8
  6657                           indf1	equ	0xFE7
  6658                           postdec1	equ	0xFE5
  6659                           fsr1h	equ	0xFE2
  6660                           fsr1l	equ	0xFE1
  6661                           bsr	equ	0xFE0
  6662                           indf2	equ	0xFDF
  6663                           postinc2	equ	0xFDE
  6664                           postdec2	equ	0xFDD
  6665                           fsr2h	equ	0xFDA
  6666                           fsr2l	equ	0xFD9
  6667                           status	equ	0xFD8
  6668                           
  6669 ;; *************** function _timer0_int_handler *****************
  6670 ;; Defined at:
  6671 ;;		line 16 in file "../src/user_interrupts.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;		None
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;		None
  6676 ;; Return value:  Size  Location     Type
  6677 ;;		None               void
  6678 ;; Registers used:
  6679 ;;		wreg, status,2, cstack
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6685 ;;      Params:         0       0       0       0       0
  6686 ;;      Locals:         0       0       0       0       0
  6687 ;;      Temps:          0       0       0       0       0
  6688 ;;      Totals:         0       0       0       0       0
  6689 ;;Total ram usage:        0 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    1
  6692 ;; This function calls:
  6693 ;;		_ConvertADC
  6694 ;;		_WriteTimer0
  6695 ;; This function is called by:
  6696 ;;		_InterruptHandlerHigh
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text43
  6701  001B7E                     __ptext43:
  6702                           	opt stack 0
  6703  001B7E                     _timer0_int_handler:
  6704                           	opt stack 19
  6705                           
  6706                           ;user_interrupts.c: 17: WriteTimer0(0);
  6707                           
  6708                           ;incstack = 0
  6709  001B7E  0E00               	movlw	0
  6710  001B80  0100               	movlb	0	; () banked
  6711  001B82  0100               	movlb	0	; () banked
  6712  001B84  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6713  001B86  0E00               	movlw	0
  6714  001B88  0100               	movlb	0	; () banked
  6715  001B8A  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  6716  001B8C  ECFA  F00D         	call	_WriteTimer0	;wreg free
  6717                           
  6718                           ;user_interrupts.c: 34: ConvertADC();
  6719  001B90  EC22  F00E         	call	_ConvertADC	;wreg free
  6720  001B94  0012               	return	
  6721  001B96                     __end_of_timer0_int_handler:
  6722                           	opt stack 0
  6723                           pclatu	equ	0xFFB
  6724                           pclath	equ	0xFFA
  6725                           tblptru	equ	0xFF8
  6726                           tblptrh	equ	0xFF7
  6727                           tblptrl	equ	0xFF6
  6728                           tablat	equ	0xFF5
  6729                           prodh	equ	0xFF4
  6730                           prodl	equ	0xFF3
  6731                           intcon	equ	0xFF2
  6732                           postinc0	equ	0xFEE
  6733                           fsr0h	equ	0xFEA
  6734                           fsr0l	equ	0xFE9
  6735                           wreg	equ	0xFE8
  6736                           indf1	equ	0xFE7
  6737                           postdec1	equ	0xFE5
  6738                           fsr1h	equ	0xFE2
  6739                           fsr1l	equ	0xFE1
  6740                           bsr	equ	0xFE0
  6741                           indf2	equ	0xFDF
  6742                           postinc2	equ	0xFDE
  6743                           postdec2	equ	0xFDD
  6744                           fsr2h	equ	0xFDA
  6745                           fsr2l	equ	0xFD9
  6746                           status	equ	0xFD8
  6747                           
  6748 ;; *************** function _WriteTimer0 *****************
  6749 ;; Defined at:
  6750 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;  timer0          2    0[BANK0 ] unsigned int 
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;  timer           2    2[BANK0 ] struct Timers
  6755 ;; Return value:  Size  Location     Type
  6756 ;;		None               void
  6757 ;; Registers used:
  6758 ;;		None
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6764 ;;      Params:         0       2       0       0       0
  6765 ;;      Locals:         0       2       0       0       0
  6766 ;;      Temps:          0       0       0       0       0
  6767 ;;      Totals:         0       4       0       0       0
  6768 ;;Total ram usage:        4 bytes
  6769 ;; Hardware stack levels used:    1
  6770 ;; This function calls:
  6771 ;;		Nothing
  6772 ;; This function is called by:
  6773 ;;		_timer0_int_handler
  6774 ;; This function uses a non-reentrant model
  6775 ;;
  6776                           
  6777                           	psect	text44
  6778  001BF4                     __ptext44:
  6779                           	opt stack 0
  6780  001BF4                     _WriteTimer0:
  6781                           	opt stack 19
  6782                           
  6783                           ;incstack = 0
  6784  001BF4  C080  F082         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6785  001BF8  C081  F083         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6786  001BFC  C083  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6787  001C00  C082  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6788  001C04  0012               	return	
  6789  001C06                     __end_of_WriteTimer0:
  6790                           	opt stack 0
  6791                           pclatu	equ	0xFFB
  6792                           pclath	equ	0xFFA
  6793                           tblptru	equ	0xFF8
  6794                           tblptrh	equ	0xFF7
  6795                           tblptrl	equ	0xFF6
  6796                           tablat	equ	0xFF5
  6797                           prodh	equ	0xFF4
  6798                           prodl	equ	0xFF3
  6799                           intcon	equ	0xFF2
  6800                           postinc0	equ	0xFEE
  6801                           fsr0h	equ	0xFEA
  6802                           fsr0l	equ	0xFE9
  6803                           wreg	equ	0xFE8
  6804                           indf1	equ	0xFE7
  6805                           postdec1	equ	0xFE5
  6806                           fsr1h	equ	0xFE2
  6807                           fsr1l	equ	0xFE1
  6808                           bsr	equ	0xFE0
  6809                           indf2	equ	0xFDF
  6810                           postinc2	equ	0xFDE
  6811                           postdec2	equ	0xFDD
  6812                           fsr2h	equ	0xFDA
  6813                           fsr2l	equ	0xFD9
  6814                           status	equ	0xFD8
  6815                           
  6816 ;; *************** function _ConvertADC *****************
  6817 ;; Defined at:
  6818 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;		None
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;		None
  6823 ;; Return value:  Size  Location     Type
  6824 ;;		None               void
  6825 ;; Registers used:
  6826 ;;		None
  6827 ;; Tracked objects:
  6828 ;;		On entry : 0/0
  6829 ;;		On exit  : 0/0
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6832 ;;      Params:         0       0       0       0       0
  6833 ;;      Locals:         0       0       0       0       0
  6834 ;;      Temps:          0       0       0       0       0
  6835 ;;      Totals:         0       0       0       0       0
  6836 ;;Total ram usage:        0 bytes
  6837 ;; Hardware stack levels used:    1
  6838 ;; This function calls:
  6839 ;;		Nothing
  6840 ;; This function is called by:
  6841 ;;		_timer0_int_handler
  6842 ;; This function uses a non-reentrant model
  6843 ;;
  6844                           
  6845                           	psect	text45
  6846  001C44                     __ptext45:
  6847                           	opt stack 0
  6848  001C44                     _ConvertADC:
  6849                           	opt stack 19
  6850                           
  6851                           ;incstack = 0
  6852  001C44  82C2               	bsf	4034,1,c	;volatile
  6853  001C46  0012               	return	
  6854  001C48                     __end_of_ConvertADC:
  6855                           	opt stack 0
  6856                           pclatu	equ	0xFFB
  6857                           pclath	equ	0xFFA
  6858                           tblptru	equ	0xFF8
  6859                           tblptrh	equ	0xFF7
  6860                           tblptrl	equ	0xFF6
  6861                           tablat	equ	0xFF5
  6862                           prodh	equ	0xFF4
  6863                           prodl	equ	0xFF3
  6864                           intcon	equ	0xFF2
  6865                           postinc0	equ	0xFEE
  6866                           fsr0h	equ	0xFEA
  6867                           fsr0l	equ	0xFE9
  6868                           wreg	equ	0xFE8
  6869                           indf1	equ	0xFE7
  6870                           postdec1	equ	0xFE5
  6871                           fsr1h	equ	0xFE2
  6872                           fsr1l	equ	0xFE1
  6873                           bsr	equ	0xFE0
  6874                           indf2	equ	0xFDF
  6875                           postinc2	equ	0xFDE
  6876                           postdec2	equ	0xFDD
  6877                           fsr2h	equ	0xFDA
  6878                           fsr2l	equ	0xFD9
  6879                           status	equ	0xFD8
  6880                           
  6881 ;; *************** function _i2c_int_handler *****************
  6882 ;; Defined at:
  6883 ;;		line 139 in file "../src/my_i2c.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;		None
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;		None
  6888 ;; Return value:  Size  Location     Type
  6889 ;;		None               void
  6890 ;; Registers used:
  6891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6897 ;;      Params:         0       0       0       0       0
  6898 ;;      Locals:         0       0       0       0       0
  6899 ;;      Temps:          0       0       0       0       0
  6900 ;;      Totals:         0       0       0       0       0
  6901 ;;Total ram usage:        0 bytes
  6902 ;; Hardware stack levels used:    1
  6903 ;; Hardware stack levels required when called:    4
  6904 ;; This function calls:
  6905 ;;		_i2c_master_int_handler
  6906 ;; This function is called by:
  6907 ;;		_InterruptHandlerHigh
  6908 ;; This function uses a non-reentrant model
  6909 ;;
  6910                           
  6911                           	psect	text46
  6912  001C38                     __ptext46:
  6913                           	opt stack 0
  6914  001C38                     _i2c_int_handler:
  6915                           	opt stack 16
  6916                           
  6917                           ;my_i2c.c: 141: i2c_master_int_handler();
  6918                           
  6919                           ;incstack = 0
  6920  001C38  EC65  F000         	call	_i2c_master_int_handler	;wreg free
  6921  001C3C  0012               	return	
  6922  001C3E                     __end_of_i2c_int_handler:
  6923                           	opt stack 0
  6924                           pclatu	equ	0xFFB
  6925                           pclath	equ	0xFFA
  6926                           tblptru	equ	0xFF8
  6927                           tblptrh	equ	0xFF7
  6928                           tblptrl	equ	0xFF6
  6929                           tablat	equ	0xFF5
  6930                           prodh	equ	0xFF4
  6931                           prodl	equ	0xFF3
  6932                           intcon	equ	0xFF2
  6933                           postinc0	equ	0xFEE
  6934                           fsr0h	equ	0xFEA
  6935                           fsr0l	equ	0xFE9
  6936                           wreg	equ	0xFE8
  6937                           indf1	equ	0xFE7
  6938                           postdec1	equ	0xFE5
  6939                           fsr1h	equ	0xFE2
  6940                           fsr1l	equ	0xFE1
  6941                           bsr	equ	0xFE0
  6942                           indf2	equ	0xFDF
  6943                           postinc2	equ	0xFDE
  6944                           postdec2	equ	0xFDD
  6945                           fsr2h	equ	0xFDA
  6946                           fsr2l	equ	0xFD9
  6947                           status	equ	0xFD8
  6948                           
  6949 ;; *************** function _i2c_master_int_handler *****************
  6950 ;; Defined at:
  6951 ;;		line 147 in file "../src/my_i2c.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;		None
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;		None
  6956 ;; Return value:  Size  Location     Type
  6957 ;;		None               void
  6958 ;; Registers used:
  6959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/0
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6965 ;;      Params:         0       0       0       0       0
  6966 ;;      Locals:         0       0       0       0       0
  6967 ;;      Temps:          0       5       0       0       0
  6968 ;;      Totals:         0       5       0       0       0
  6969 ;;Total ram usage:        5 bytes
  6970 ;; Hardware stack levels used:    1
  6971 ;; Hardware stack levels required when called:    3
  6972 ;; This function calls:
  6973 ;;		_ToMainHigh_sendmsg
  6974 ;;		_i2c_master_recv
  6975 ;; This function is called by:
  6976 ;;		_i2c_int_handler
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           	psect	text47
  6981  0000CA                     __ptext47:
  6982                           	opt stack 0
  6983  0000CA                     _i2c_master_int_handler:
  6984                           	opt stack 16
  6985                           
  6986                           ;my_i2c.c: 150: if(!(ic_ptr->status == 0x5)) {
  6987                           
  6988                           ;incstack = 0
  6989  0000CA  0100               	movlb	0	; () banked
  6990  0000CC  EE20 F00D          	lfsr	2,13
  6991  0000D0  0100               	movlb	0	; () banked
  6992  0000D2  51CF               	movf	_ic_ptr& (0+255),w,b
  6993  0000D4  26D9               	addwf	fsr2l,f,c
  6994  0000D6  0100               	movlb	0	; () banked
  6995  0000D8  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  6996  0000DA  22DA               	addwfc	fsr2h,f,c
  6997  0000DC  50DF               	movf	indf2,w,c
  6998  0000DE  0A05               	xorlw	5
  6999  0000E0  B4D8               	btfsc	status,2,c
  7000  0000E2  0012               	return	
  7001  0000E4  D1B5               	goto	i2l4079
  7002  0000E6                     i2l4021:
  7003                           
  7004                           ; BSR set to: 0
  7005                           ;my_i2c.c: 154: {
  7006                           ;my_i2c.c: 155: if(ic_ptr->slave_addr % 2){
  7007  0000E6  0100               	movlb	0	; () banked
  7008  0000E8  EE20 F01C          	lfsr	2,28
  7009  0000EC  0100               	movlb	0	; () banked
  7010  0000EE  51CF               	movf	_ic_ptr& (0+255),w,b
  7011  0000F0  26D9               	addwf	fsr2l,f,c
  7012  0000F2  0100               	movlb	0	; () banked
  7013  0000F4  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7014  0000F6  22DA               	addwfc	fsr2h,f,c
  7015  0000F8  50DF               	movf	indf2,w,c
  7016  0000FA  0100               	movlb	0	; () banked
  7017  0000FC  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  7018  0000FE  0100               	movlb	0	; () banked
  7019  000100  A19A               	btfss	??_i2c_master_int_handler& (0+255),0,b
  7020  000102  D00B               	goto	i2l4025
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;my_i2c.c: 157: ic_ptr->status = 0x7;
  7024  000104  0100               	movlb	0	; () banked
  7025  000106  EE20 F00D          	lfsr	2,13
  7026  00010A  0100               	movlb	0	; () banked
  7027  00010C  51CF               	movf	_ic_ptr& (0+255),w,b
  7028  00010E  26D9               	addwf	fsr2l,f,c
  7029  000110  0100               	movlb	0	; () banked
  7030  000112  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7031  000114  22DA               	addwfc	fsr2h,f,c
  7032  000116  0E07               	movlw	7
  7033  000118  D00A               	goto	L1
  7034  00011A                     i2l4025:
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;my_i2c.c: 160: ic_ptr->status = 0x9;
  7038  00011A  0100               	movlb	0	; () banked
  7039  00011C  EE20 F00D          	lfsr	2,13
  7040  000120  0100               	movlb	0	; () banked
  7041  000122  51CF               	movf	_ic_ptr& (0+255),w,b
  7042  000124  26D9               	addwf	fsr2l,f,c
  7043  000126  0100               	movlb	0	; () banked
  7044  000128  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7045  00012A  22DA               	addwfc	fsr2h,f,c
  7046  00012C  0E09               	movlw	9
  7047  00012E                     L1:
  7048  00012E  6EDF               	movwf	indf2,c
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;my_i2c.c: 161: }
  7052                           ;my_i2c.c: 162: ic_ptr->bufind = 0;
  7053  000130  0100               	movlb	0	; () banked
  7054  000132  EE20 F00B          	lfsr	2,11
  7055  000136  0100               	movlb	0	; () banked
  7056  000138  51CF               	movf	_ic_ptr& (0+255),w,b
  7057  00013A  26D9               	addwf	fsr2l,f,c
  7058  00013C  0100               	movlb	0	; () banked
  7059  00013E  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7060  000140  22DA               	addwfc	fsr2h,f,c
  7061  000142  0E00               	movlw	0
  7062  000144  6EDF               	movwf	indf2,c
  7063                           
  7064                           ;my_i2c.c: 163: SSPBUF = ic_ptr->slave_addr;
  7065  000146  0100               	movlb	0	; () banked
  7066  000148  EE20 F01C          	lfsr	2,28
  7067  00014C  0100               	movlb	0	; () banked
  7068  00014E  51CF               	movf	_ic_ptr& (0+255),w,b
  7069  000150  26D9               	addwf	fsr2l,f,c
  7070  000152  0100               	movlb	0	; () banked
  7071  000154  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7072  000156  22DA               	addwfc	fsr2h,f,c
  7073  000158  50DF               	movf	indf2,w,c
  7074  00015A  6EC9               	movwf	4041,c	;volatile
  7075                           
  7076                           ;my_i2c.c: 165: break;
  7077  00015C  0012               	return	
  7078  00015E                     i2l302:
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;my_i2c.c: 168: {
  7082                           ;my_i2c.c: 169: if(!SSPCON2bits.ACKSTAT){
  7083  00015E  BCC5               	btfsc	4037,6,c	;volatile
  7084  000160  D070               	goto	i2l303
  7085                           
  7086                           ; BSR set to: 0
  7087                           ;my_i2c.c: 170: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7088  000162  0100               	movlb	0	; () banked
  7089  000164  EE20 F01B          	lfsr	2,27
  7090  000168  0100               	movlb	0	; () banked
  7091  00016A  51CF               	movf	_ic_ptr& (0+255),w,b
  7092  00016C  26D9               	addwf	fsr2l,f,c
  7093  00016E  0100               	movlb	0	; () banked
  7094  000170  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7095  000172  22DA               	addwfc	fsr2h,f,c
  7096  000174  50DF               	movf	indf2,w,c
  7097  000176  0100               	movlb	0	; () banked
  7098  000178  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  7099  00017A  0100               	movlb	0	; () banked
  7100  00017C  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7101  00017E  0D01               	mullw	1
  7102  000180  0E10               	movlw	16
  7103  000182  26F3               	addwf	prodl,f,c
  7104  000184  0E00               	movlw	0
  7105  000186  22F4               	addwfc	prodh,f,c
  7106  000188  50F3               	movf	prodl,w,c
  7107  00018A  0100               	movlb	0	; () banked
  7108  00018C  0100               	movlb	0	; () banked
  7109  00018E  25CF               	addwf	_ic_ptr& (0+255),w,b
  7110  000190  6ED9               	movwf	fsr2l,c
  7111  000192  50F4               	movf	prodh,w,c
  7112  000194  0100               	movlb	0	; () banked
  7113  000196  0100               	movlb	0	; () banked
  7114  000198  21D0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7115  00019A  6EDA               	movwf	fsr2h,c
  7116  00019C  50DF               	movf	indf2,w,c
  7117  00019E  6EC9               	movwf	4041,c	;volatile
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;my_i2c.c: 172: if(ic_ptr->outbuflen > ic_ptr->outbufind+1){
  7121  0001A0  0100               	movlb	0	; () banked
  7122  0001A2  EE20 F01A          	lfsr	2,26
  7123  0001A6  0100               	movlb	0	; () banked
  7124  0001A8  51CF               	movf	_ic_ptr& (0+255),w,b
  7125  0001AA  26D9               	addwf	fsr2l,f,c
  7126  0001AC  0100               	movlb	0	; () banked
  7127  0001AE  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7128  0001B0  22DA               	addwfc	fsr2h,f,c
  7129  0001B2  50DF               	movf	indf2,w,c
  7130  0001B4  0100               	movlb	0	; () banked
  7131  0001B6  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  7132  0001B8  6B9B               	clrf	(??_i2c_master_int_handler+1)& (0+255),b
  7133  0001BA  0100               	movlb	0	; () banked
  7134  0001BC  EE20 F01B          	lfsr	2,27
  7135  0001C0  0100               	movlb	0	; () banked
  7136  0001C2  51CF               	movf	_ic_ptr& (0+255),w,b
  7137  0001C4  26D9               	addwf	fsr2l,f,c
  7138  0001C6  0100               	movlb	0	; () banked
  7139  0001C8  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7140  0001CA  22DA               	addwfc	fsr2h,f,c
  7141  0001CC  50DF               	movf	indf2,w,c
  7142  0001CE  0100               	movlb	0	; () banked
  7143  0001D0  6F9C               	movwf	(??_i2c_master_int_handler+2)& (0+255),b
  7144  0001D2  6B9D               	clrf	(??_i2c_master_int_handler+3)& (0+255),b
  7145  0001D4  0E01               	movlw	1
  7146  0001D6  0100               	movlb	0	; () banked
  7147  0001D8  279C               	addwf	(??_i2c_master_int_handler+2)& (0+255),f,b
  7148  0001DA  0E00               	movlw	0
  7149  0001DC  239D               	addwfc	(??_i2c_master_int_handler+3)& (0+255),f,b
  7150  0001DE  0100               	movlb	0	; () banked
  7151  0001E0  519D               	movf	(??_i2c_master_int_handler+3)& (0+255),w,b
  7152  0001E2  0A80               	xorlw	128
  7153  0001E4  0100               	movlb	0	; () banked
  7154  0001E6  6F9E               	movwf	(??_i2c_master_int_handler+4)& (0+255),b
  7155  0001E8  0100               	movlb	0	; () banked
  7156  0001EA  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7157  0001EC  0100               	movlb	0	; () banked
  7158  0001EE  5D9C               	subwf	(??_i2c_master_int_handler+2)& (0+255),w,b
  7159  0001F0  0100               	movlb	0	; () banked
  7160  0001F2  519B               	movf	(??_i2c_master_int_handler+1)& (0+255),w,b
  7161  0001F4  0A80               	xorlw	128
  7162  0001F6  0100               	movlb	0	; () banked
  7163  0001F8  599E               	subwfb	(??_i2c_master_int_handler+4)& (0+255),w,b
  7164  0001FA  B0D8               	btfsc	status,0,c
  7165  0001FC  D016               	goto	i2l4033
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;my_i2c.c: 173: ic_ptr->outbufind++;
  7169  0001FE  0100               	movlb	0	; () banked
  7170  000200  EE20 F01B          	lfsr	2,27
  7171  000204  0100               	movlb	0	; () banked
  7172  000206  51CF               	movf	_ic_ptr& (0+255),w,b
  7173  000208  26D9               	addwf	fsr2l,f,c
  7174  00020A  0100               	movlb	0	; () banked
  7175  00020C  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7176  00020E  22DA               	addwfc	fsr2h,f,c
  7177  000210  2ADF               	incf	indf2,f,c
  7178                           
  7179                           ;my_i2c.c: 174: ic_ptr->status = 0x9;
  7180  000212  0100               	movlb	0	; () banked
  7181  000214  EE20 F00D          	lfsr	2,13
  7182  000218  0100               	movlb	0	; () banked
  7183  00021A  51CF               	movf	_ic_ptr& (0+255),w,b
  7184  00021C  26D9               	addwf	fsr2l,f,c
  7185  00021E  0100               	movlb	0	; () banked
  7186  000220  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7187  000222  22DA               	addwfc	fsr2h,f,c
  7188  000224  0E09               	movlw	9
  7189  000226  6EDF               	movwf	indf2,c
  7190                           
  7191                           ;my_i2c.c: 175: }else{
  7192  000228  0012               	return	
  7193  00022A                     i2l4033:
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;my_i2c.c: 177: ic_ptr->status = 0xD;
  7197  00022A  0100               	movlb	0	; () banked
  7198  00022C  EE20 F00D          	lfsr	2,13
  7199  000230  0100               	movlb	0	; () banked
  7200  000232  51CF               	movf	_ic_ptr& (0+255),w,b
  7201  000234  26D9               	addwf	fsr2l,f,c
  7202  000236  0100               	movlb	0	; () banked
  7203  000238  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7204  00023A  22DA               	addwfc	fsr2h,f,c
  7205  00023C  0E0D               	movlw	13
  7206  00023E  6EDF               	movwf	indf2,c
  7207  000240  0012               	return	
  7208  000242                     i2l303:
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;my_i2c.c: 181: SSPCON2bits.RSEN = 1;
  7212  000242  82C5               	bsf	4037,1,c	;volatile
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;my_i2c.c: 182: ic_ptr->status = 0xA;
  7216  000244  0100               	movlb	0	; () banked
  7217  000246  EE20 F00D          	lfsr	2,13
  7218  00024A  0100               	movlb	0	; () banked
  7219  00024C  51CF               	movf	_ic_ptr& (0+255),w,b
  7220  00024E  26D9               	addwf	fsr2l,f,c
  7221  000250  0100               	movlb	0	; () banked
  7222  000252  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7223  000254  22DA               	addwfc	fsr2h,f,c
  7224  000256  0E0A               	movlw	10
  7225  000258  6EDF               	movwf	indf2,c
  7226  00025A  0012               	return	
  7227  00025C                     i2l307:
  7228                           
  7229                           ; BSR set to: 0
  7230                           ;my_i2c.c: 187: {
  7231                           ;my_i2c.c: 188: if(!SSPCON2bits.ACKSTAT){
  7232  00025C  BCC5               	btfsc	4037,6,c	;volatile
  7233  00025E  D00D               	goto	i2l4041
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;my_i2c.c: 189: SSPCON2bits.RCEN = 1;
  7237  000260  86C5               	bsf	4037,3,c	;volatile
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;my_i2c.c: 190: ic_ptr->status = 0xC;
  7241  000262  0100               	movlb	0	; () banked
  7242  000264  EE20 F00D          	lfsr	2,13
  7243  000268  0100               	movlb	0	; () banked
  7244  00026A  51CF               	movf	_ic_ptr& (0+255),w,b
  7245  00026C  26D9               	addwf	fsr2l,f,c
  7246  00026E  0100               	movlb	0	; () banked
  7247  000270  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7248  000272  22DA               	addwfc	fsr2h,f,c
  7249  000274  0E0C               	movlw	12
  7250  000276  6EDF               	movwf	indf2,c
  7251                           
  7252                           ;my_i2c.c: 191: } else {
  7253  000278  0012               	return	
  7254  00027A                     i2l4041:
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;my_i2c.c: 193: if(ic_ptr->buffer[4] == 0x78)
  7258  00027A  0100               	movlb	0	; () banked
  7259  00027C  EE20 F004          	lfsr	2,4
  7260  000280  0100               	movlb	0	; () banked
  7261  000282  51CF               	movf	_ic_ptr& (0+255),w,b
  7262  000284  26D9               	addwf	fsr2l,f,c
  7263  000286  0100               	movlb	0	; () banked
  7264  000288  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7265  00028A  22DA               	addwfc	fsr2h,f,c
  7266  00028C  0E78               	movlw	120
  7267  00028E  62DF               	cpfseq	indf2,c
  7268  000290  D001               	goto	i2l4045
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;my_i2c.c: 194: LATBbits.LATB2 = 1;
  7272  000292  848A               	bsf	3978,2,c	;volatile
  7273  000294                     i2l4045:
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;my_i2c.c: 195: ToMainHigh_sendmsg(0, 46, ic_ptr->buffer);
  7277  000294  0100               	movlb	0	; () banked
  7278  000296  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  7279  000298  0E2E               	movlw	46
  7280  00029A  0100               	movlb	0	; () banked
  7281  00029C  0100               	movlb	0	; () banked
  7282  00029E  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7283  0002A0  0100               	movlb	0	; () banked
  7284  0002A2  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7285  0002A4  0100               	movlb	0	; () banked
  7286  0002A6  0100               	movlb	0	; () banked
  7287  0002A8  C0D0  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7288  0002AC  0100               	movlb	0	; () banked
  7289  0002AE  0100               	movlb	0	; () banked
  7290  0002B0  C0CF  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7291  0002B4  0E00               	movlw	0
  7292  0002B6  EC12  F00D         	call	_ToMainHigh_sendmsg
  7293                           
  7294                           ;my_i2c.c: 196: LATBbits.LATB2 = 0;
  7295  0002BA  948A               	bcf	3978,2,c	;volatile
  7296                           
  7297                           ;my_i2c.c: 197: ic_ptr->buflen = 0;
  7298  0002BC  0100               	movlb	0	; () banked
  7299  0002BE  EE20 F00A          	lfsr	2,10
  7300  0002C2  0100               	movlb	0	; () banked
  7301  0002C4  51CF               	movf	_ic_ptr& (0+255),w,b
  7302  0002C6  26D9               	addwf	fsr2l,f,c
  7303  0002C8  0100               	movlb	0	; () banked
  7304  0002CA  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7305  0002CC  22DA               	addwfc	fsr2h,f,c
  7306  0002CE  0E00               	movlw	0
  7307  0002D0  6EDF               	movwf	indf2,c
  7308                           
  7309                           ; BSR set to: 0
  7310                           ;my_i2c.c: 198: ic_ptr->status = 0x5;
  7311  0002D2  0100               	movlb	0	; () banked
  7312  0002D4  EE20 F00D          	lfsr	2,13
  7313  0002D8  0100               	movlb	0	; () banked
  7314  0002DA  51CF               	movf	_ic_ptr& (0+255),w,b
  7315  0002DC  26D9               	addwf	fsr2l,f,c
  7316  0002DE  0100               	movlb	0	; () banked
  7317  0002E0  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7318  0002E2  22DA               	addwfc	fsr2h,f,c
  7319  0002E4  0E05               	movlw	5
  7320  0002E6  6EDF               	movwf	indf2,c
  7321  0002E8  0012               	return	
  7322  0002EA                     i2l311:
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;my_i2c.c: 203: {
  7326                           ;my_i2c.c: 204: LATBbits.LATB1 = 1;
  7327  0002EA  828A               	bsf	3978,1,c	;volatile
  7328                           
  7329                           ;my_i2c.c: 205: LATBbits.LATB1 = 0;
  7330  0002EC  928A               	bcf	3978,1,c	;volatile
  7331                           
  7332                           ; BSR set to: 0
  7333                           ;my_i2c.c: 206: if(ic_ptr->bufind < ic_ptr->buflen){
  7334  0002EE  0100               	movlb	0	; () banked
  7335  0002F0  EE20 F00B          	lfsr	2,11
  7336  0002F4  0100               	movlb	0	; () banked
  7337  0002F6  51CF               	movf	_ic_ptr& (0+255),w,b
  7338  0002F8  26D9               	addwf	fsr2l,f,c
  7339  0002FA  0100               	movlb	0	; () banked
  7340  0002FC  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7341  0002FE  22DA               	addwfc	fsr2h,f,c
  7342  000300  50DF               	movf	indf2,w,c
  7343  000302  0100               	movlb	0	; () banked
  7344  000304  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  7345  000306  0100               	movlb	0	; () banked
  7346  000308  EE20 F00A          	lfsr	2,10
  7347  00030C  0100               	movlb	0	; () banked
  7348  00030E  51CF               	movf	_ic_ptr& (0+255),w,b
  7349  000310  26D9               	addwf	fsr2l,f,c
  7350  000312  0100               	movlb	0	; () banked
  7351  000314  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7352  000316  22DA               	addwfc	fsr2h,f,c
  7353  000318  50DF               	movf	indf2,w,c
  7354  00031A  0100               	movlb	0	; () banked
  7355  00031C  5D9A               	subwf	??_i2c_master_int_handler& (0+255),w,b
  7356  00031E  B0D8               	btfsc	status,0,c
  7357  000320  D030               	goto	i2l4061
  7358                           
  7359                           ; BSR set to: 0
  7360                           ;my_i2c.c: 207: ic_ptr->buffer[ic_ptr->bufind] = SSPBUF;
  7361  000322  0100               	movlb	0	; () banked
  7362  000324  EE20 F00B          	lfsr	2,11
  7363  000328  0100               	movlb	0	; () banked
  7364  00032A  51CF               	movf	_ic_ptr& (0+255),w,b
  7365  00032C  26D9               	addwf	fsr2l,f,c
  7366  00032E  0100               	movlb	0	; () banked
  7367  000330  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7368  000332  22DA               	addwfc	fsr2h,f,c
  7369  000334  50DF               	movf	indf2,w,c
  7370  000336  0100               	movlb	0	; () banked
  7371  000338  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  7372  00033A  0100               	movlb	0	; () banked
  7373  00033C  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7374  00033E  0D01               	mullw	1
  7375  000340  50F3               	movf	prodl,w,c
  7376  000342  0100               	movlb	0	; () banked
  7377  000344  0100               	movlb	0	; () banked
  7378  000346  25CF               	addwf	_ic_ptr& (0+255),w,b
  7379  000348  6ED9               	movwf	fsr2l,c
  7380  00034A  50F4               	movf	prodh,w,c
  7381  00034C  0100               	movlb	0	; () banked
  7382  00034E  0100               	movlb	0	; () banked
  7383  000350  21D0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7384  000352  6EDA               	movwf	fsr2h,c
  7385  000354  CFC9 FFDF          	movff	4041,indf2	;volatile
  7386                           
  7387                           ; BSR set to: 0
  7388                           ;my_i2c.c: 208: ic_ptr->bufind++;
  7389  000358  0100               	movlb	0	; () banked
  7390  00035A  EE20 F00B          	lfsr	2,11
  7391  00035E  0100               	movlb	0	; () banked
  7392  000360  51CF               	movf	_ic_ptr& (0+255),w,b
  7393  000362  26D9               	addwf	fsr2l,f,c
  7394  000364  0100               	movlb	0	; () banked
  7395  000366  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7396  000368  22DA               	addwfc	fsr2h,f,c
  7397  00036A  2ADF               	incf	indf2,f,c
  7398                           
  7399                           ; BSR set to: 0
  7400                           ;my_i2c.c: 209: ic_ptr->status = 0x7;
  7401  00036C  0100               	movlb	0	; () banked
  7402  00036E  EE20 F00D          	lfsr	2,13
  7403  000372  0100               	movlb	0	; () banked
  7404  000374  51CF               	movf	_ic_ptr& (0+255),w,b
  7405  000376  26D9               	addwf	fsr2l,f,c
  7406  000378  0100               	movlb	0	; () banked
  7407  00037A  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7408  00037C  22DA               	addwfc	fsr2h,f,c
  7409  00037E  0E07               	movlw	7
  7410  000380  6EDF               	movwf	indf2,c
  7411  000382                     i2l4061:
  7412                           
  7413                           ; BSR set to: 0
  7414                           ;my_i2c.c: 211: }
  7415                           ;my_i2c.c: 212: if(ic_ptr->bufind == ic_ptr->buflen){
  7416  000382  0100               	movlb	0	; () banked
  7417  000384  EE20 F00B          	lfsr	2,11
  7418  000388  0100               	movlb	0	; () banked
  7419  00038A  51CF               	movf	_ic_ptr& (0+255),w,b
  7420  00038C  26D9               	addwf	fsr2l,f,c
  7421  00038E  0100               	movlb	0	; () banked
  7422  000390  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7423  000392  22DA               	addwfc	fsr2h,f,c
  7424  000394  0100               	movlb	0	; () banked
  7425  000396  EE10 F00A          	lfsr	1,10
  7426  00039A  0100               	movlb	0	; () banked
  7427  00039C  51CF               	movf	_ic_ptr& (0+255),w,b
  7428  00039E  26E1               	addwf	fsr1l,f,c
  7429  0003A0  0100               	movlb	0	; () banked
  7430  0003A2  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7431  0003A4  22E2               	addwfc	fsr1h,f,c
  7432  0003A6  50E7               	movf	indf1,w,c
  7433  0003A8  62DF               	cpfseq	indf2,c
  7434  0003AA  D02A               	goto	i2l313
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;my_i2c.c: 213: ic_ptr->status = 0xB;
  7438  0003AC  0100               	movlb	0	; () banked
  7439  0003AE  EE20 F00D          	lfsr	2,13
  7440  0003B2  0100               	movlb	0	; () banked
  7441  0003B4  51CF               	movf	_ic_ptr& (0+255),w,b
  7442  0003B6  26D9               	addwf	fsr2l,f,c
  7443  0003B8  0100               	movlb	0	; () banked
  7444  0003BA  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7445  0003BC  22DA               	addwfc	fsr2h,f,c
  7446  0003BE  0E0B               	movlw	11
  7447  0003C0  6EDF               	movwf	indf2,c
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;my_i2c.c: 216: ToMainHigh_sendmsg(ic_ptr->buflen, 45, ic_ptr->buffer);
  7451  0003C2  0100               	movlb	0	; () banked
  7452  0003C4  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  7453  0003C6  0E2D               	movlw	45
  7454  0003C8  0100               	movlb	0	; () banked
  7455  0003CA  0100               	movlb	0	; () banked
  7456  0003CC  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7457  0003CE  0100               	movlb	0	; () banked
  7458  0003D0  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7459  0003D2  0100               	movlb	0	; () banked
  7460  0003D4  0100               	movlb	0	; () banked
  7461  0003D6  C0D0  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7462  0003DA  0100               	movlb	0	; () banked
  7463  0003DC  0100               	movlb	0	; () banked
  7464  0003DE  C0CF  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7465  0003E2  0100               	movlb	0	; () banked
  7466  0003E4  EE20 F00A          	lfsr	2,10
  7467  0003E8  0100               	movlb	0	; () banked
  7468  0003EA  51CF               	movf	_ic_ptr& (0+255),w,b
  7469  0003EC  26D9               	addwf	fsr2l,f,c
  7470  0003EE  0100               	movlb	0	; () banked
  7471  0003F0  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7472  0003F2  22DA               	addwfc	fsr2h,f,c
  7473  0003F4  50DF               	movf	indf2,w,c
  7474  0003F6  EC12  F00D         	call	_ToMainHigh_sendmsg
  7475                           
  7476                           ;my_i2c.c: 219: SSPCON2bits.ACKDT = 1;
  7477  0003FA  8AC5               	bsf	4037,5,c	;volatile
  7478                           
  7479                           ;my_i2c.c: 220: SSPCON2bits.ACKEN = 1;
  7480  0003FC  88C5               	bsf	4037,4,c	;volatile
  7481                           
  7482                           ;my_i2c.c: 221: } else {
  7483  0003FE  0012               	return	
  7484  000400                     i2l313:
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;my_i2c.c: 223: SSPCON2bits.ACKDT = 0;
  7488  000400  9AC5               	bcf	4037,5,c	;volatile
  7489                           
  7490                           ;my_i2c.c: 224: SSPCON2bits.ACKEN = 1;
  7491  000402  88C5               	bsf	4037,4,c	;volatile
  7492  000404  0012               	return	
  7493  000406                     i2l4071:
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;my_i2c.c: 230: {
  7497                           ;my_i2c.c: 231: ic_ptr->status = 0x5;
  7498  000406  0100               	movlb	0	; () banked
  7499  000408  EE20 F00D          	lfsr	2,13
  7500  00040C  0100               	movlb	0	; () banked
  7501  00040E  51CF               	movf	_ic_ptr& (0+255),w,b
  7502  000410  26D9               	addwf	fsr2l,f,c
  7503  000412  0100               	movlb	0	; () banked
  7504  000414  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7505  000416  22DA               	addwfc	fsr2h,f,c
  7506  000418  0E05               	movlw	5
  7507  00041A  6EDF               	movwf	indf2,c
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;my_i2c.c: 232: i2c_master_recv(ic_ptr->buflen);
  7511  00041C  0100               	movlb	0	; () banked
  7512  00041E  EE20 F00A          	lfsr	2,10
  7513  000422  0100               	movlb	0	; () banked
  7514  000424  51CF               	movf	_ic_ptr& (0+255),w,b
  7515  000426  26D9               	addwf	fsr2l,f,c
  7516  000428  0100               	movlb	0	; () banked
  7517  00042A  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7518  00042C  22DA               	addwfc	fsr2h,f,c
  7519  00042E  50DF               	movf	indf2,w,c
  7520  000430  EC66  F00B         	call	_i2c_master_recv
  7521                           
  7522                           ;my_i2c.c: 233: break;
  7523  000434  0012               	return	
  7524  000436                     i2l316:
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;my_i2c.c: 236: {
  7528                           ;my_i2c.c: 238: SSPCON2bits.PEN = 1;
  7529  000436  84C5               	bsf	4037,2,c	;volatile
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;my_i2c.c: 240: ic_ptr->status = 0x5;
  7533  000438  0100               	movlb	0	; () banked
  7534  00043A  EE20 F00D          	lfsr	2,13
  7535  00043E  0100               	movlb	0	; () banked
  7536  000440  51CF               	movf	_ic_ptr& (0+255),w,b
  7537  000442  26D9               	addwf	fsr2l,f,c
  7538  000444  0100               	movlb	0	; () banked
  7539  000446  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7540  000448  22DA               	addwfc	fsr2h,f,c
  7541  00044A  0E05               	movlw	5
  7542  00044C  6EDF               	movwf	indf2,c
  7543                           
  7544                           ;my_i2c.c: 241: break;
  7545  00044E  0012               	return	
  7546  000450                     i2l4079:
  7547                           
  7548                           ; BSR set to: 0
  7549  000450  0100               	movlb	0	; () banked
  7550  000452  EE20 F00D          	lfsr	2,13
  7551  000456  0100               	movlb	0	; () banked
  7552  000458  51CF               	movf	_ic_ptr& (0+255),w,b
  7553  00045A  26D9               	addwf	fsr2l,f,c
  7554  00045C  0100               	movlb	0	; () banked
  7555  00045E  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7556  000460  22DA               	addwfc	fsr2h,f,c
  7557  000462  50DF               	movf	indf2,w,c
  7558                           
  7559                           ; Switch size 1, requested type "space"
  7560                           ; Number of cases is 6, Range of values is 7 to 13
  7561                           ; switch strategies available:
  7562                           ; Name         Instructions Cycles
  7563                           ; simple_byte           19    10 (average)
  7564                           ;	Chosen strategy is simple_byte
  7565  000464  0A07               	xorlw	7	; case 7
  7566  000466  B4D8               	btfsc	status,2,c
  7567  000468  D6F9               	goto	i2l307
  7568  00046A  0A0E               	xorlw	14	; case 9
  7569  00046C  B4D8               	btfsc	status,2,c
  7570  00046E  D677               	goto	i2l302
  7571  000470  0A03               	xorlw	3	; case 10
  7572  000472  B4D8               	btfsc	status,2,c
  7573  000474  D638               	goto	i2l4021
  7574  000476  0A01               	xorlw	1	; case 11
  7575  000478  B4D8               	btfsc	status,2,c
  7576  00047A  D7DD               	goto	i2l316
  7577  00047C  0A07               	xorlw	7	; case 12
  7578  00047E  B4D8               	btfsc	status,2,c
  7579  000480  D734               	goto	i2l311
  7580  000482  0A01               	xorlw	1	; case 13
  7581  000484  A4D8               	btfss	status,2,c
  7582  000486  0012               	return	
  7583  000488  D7BE               	goto	i2l4071
  7584  00048A                     __end_of_i2c_master_int_handler:
  7585                           	opt stack 0
  7586                           pclatu	equ	0xFFB
  7587                           pclath	equ	0xFFA
  7588                           tblptru	equ	0xFF8
  7589                           tblptrh	equ	0xFF7
  7590                           tblptrl	equ	0xFF6
  7591                           tablat	equ	0xFF5
  7592                           prodh	equ	0xFF4
  7593                           prodl	equ	0xFF3
  7594                           intcon	equ	0xFF2
  7595                           postinc0	equ	0xFEE
  7596                           fsr0h	equ	0xFEA
  7597                           fsr0l	equ	0xFE9
  7598                           wreg	equ	0xFE8
  7599                           indf1	equ	0xFE7
  7600                           postdec1	equ	0xFE5
  7601                           fsr1h	equ	0xFE2
  7602                           fsr1l	equ	0xFE1
  7603                           bsr	equ	0xFE0
  7604                           indf2	equ	0xFDF
  7605                           postinc2	equ	0xFDE
  7606                           postdec2	equ	0xFDD
  7607                           fsr2h	equ	0xFDA
  7608                           fsr2l	equ	0xFD9
  7609                           status	equ	0xFD8
  7610                           
  7611 ;; *************** function _i2c_master_recv *****************
  7612 ;; Defined at:
  7613 ;;		line 74 in file "../src/my_i2c.c"
  7614 ;; Parameters:    Size  Location     Type
  7615 ;;  length          1    wreg     unsigned char 
  7616 ;; Auto vars:     Size  Location     Type
  7617 ;;  length          1    0[BANK0 ] unsigned char 
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  1    wreg      unsigned char 
  7620 ;; Registers used:
  7621 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/0
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7627 ;;      Params:         0       0       0       0       0
  7628 ;;      Locals:         0       1       0       0       0
  7629 ;;      Temps:          0       0       0       0       0
  7630 ;;      Totals:         0       1       0       0       0
  7631 ;;Total ram usage:        1 bytes
  7632 ;; Hardware stack levels used:    1
  7633 ;; This function calls:
  7634 ;;		Nothing
  7635 ;; This function is called by:
  7636 ;;		_i2c_master_int_handler
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           	psect	text48
  7641  0016CC                     __ptext48:
  7642                           	opt stack 0
  7643  0016CC                     _i2c_master_recv:
  7644                           	opt stack 18
  7645                           
  7646                           ;incstack = 0
  7647                           ;i2c_master_recv@length stored from wreg
  7648  0016CC  CFE8 F080          	movff	wreg,i2c_master_recv@length
  7649                           
  7650                           ;my_i2c.c: 77: if(ic_ptr->status == 0x5){
  7651  0016D0  0100               	movlb	0	; () banked
  7652  0016D2  EE20 F00D          	lfsr	2,13
  7653  0016D6  0100               	movlb	0	; () banked
  7654  0016D8  51CF               	movf	_ic_ptr& (0+255),w,b
  7655  0016DA  26D9               	addwf	fsr2l,f,c
  7656  0016DC  0100               	movlb	0	; () banked
  7657  0016DE  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7658  0016E0  22DA               	addwfc	fsr2h,f,c
  7659  0016E2  0E05               	movlw	5
  7660  0016E4  62DF               	cpfseq	indf2,c
  7661  0016E6  0012               	return	
  7662                           
  7663                           ; BSR set to: 0
  7664                           ;my_i2c.c: 78: ic_ptr->slave_addr |= 0x01;
  7665  0016E8  0100               	movlb	0	; () banked
  7666  0016EA  EE20 F01C          	lfsr	2,28
  7667  0016EE  0100               	movlb	0	; () banked
  7668  0016F0  51CF               	movf	_ic_ptr& (0+255),w,b
  7669  0016F2  26D9               	addwf	fsr2l,f,c
  7670  0016F4  0100               	movlb	0	; () banked
  7671  0016F6  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7672  0016F8  22DA               	addwfc	fsr2h,f,c
  7673  0016FA  0E00               	movlw	0
  7674  0016FC  80DB               	bsf	plusw2,0,c
  7675                           
  7676                           ;my_i2c.c: 79: ic_ptr->buflen = length;
  7677  0016FE  0100               	movlb	0	; () banked
  7678  001700  EE20 F00A          	lfsr	2,10
  7679  001704  0100               	movlb	0	; () banked
  7680  001706  51CF               	movf	_ic_ptr& (0+255),w,b
  7681  001708  26D9               	addwf	fsr2l,f,c
  7682  00170A  0100               	movlb	0	; () banked
  7683  00170C  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7684  00170E  22DA               	addwfc	fsr2h,f,c
  7685  001710  0100               	movlb	0	; () banked
  7686  001712  C080  FFDF         	movff	i2c_master_recv@length,indf2
  7687                           
  7688                           ;my_i2c.c: 81: ic_ptr->status = 0xA;
  7689  001716  0100               	movlb	0	; () banked
  7690  001718  EE20 F00D          	lfsr	2,13
  7691  00171C  0100               	movlb	0	; () banked
  7692  00171E  51CF               	movf	_ic_ptr& (0+255),w,b
  7693  001720  26D9               	addwf	fsr2l,f,c
  7694  001722  0100               	movlb	0	; () banked
  7695  001724  51D0               	movf	(_ic_ptr+1)& (0+255),w,b
  7696  001726  22DA               	addwfc	fsr2h,f,c
  7697  001728  0E0A               	movlw	10
  7698  00172A  6EDF               	movwf	indf2,c
  7699                           
  7700                           ; BSR set to: 0
  7701                           ;my_i2c.c: 84: SSPCON2bits.RSEN = 1;
  7702  00172C  82C5               	bsf	4037,1,c	;volatile
  7703  00172E  0012               	return	
  7704  001730                     __end_of_i2c_master_recv:
  7705                           	opt stack 0
  7706                           pclatu	equ	0xFFB
  7707                           pclath	equ	0xFFA
  7708                           tblptru	equ	0xFF8
  7709                           tblptrh	equ	0xFF7
  7710                           tblptrl	equ	0xFF6
  7711                           tablat	equ	0xFF5
  7712                           prodh	equ	0xFF4
  7713                           prodl	equ	0xFF3
  7714                           intcon	equ	0xFF2
  7715                           postinc0	equ	0xFEE
  7716                           fsr0h	equ	0xFEA
  7717                           fsr0l	equ	0xFE9
  7718                           wreg	equ	0xFE8
  7719                           indf1	equ	0xFE7
  7720                           postdec1	equ	0xFE5
  7721                           fsr1h	equ	0xFE2
  7722                           fsr1l	equ	0xFE1
  7723                           bsr	equ	0xFE0
  7724                           indf2	equ	0xFDF
  7725                           postinc2	equ	0xFDE
  7726                           postdec2	equ	0xFDD
  7727                           plusw2	equ	0xFDB
  7728                           fsr2h	equ	0xFDA
  7729                           fsr2l	equ	0xFD9
  7730                           status	equ	0xFD8
  7731                           
  7732 ;; *************** function _ToMainHigh_sendmsg *****************
  7733 ;; Defined at:
  7734 ;;		line 126 in file "../src/messages.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;  length          1    wreg     unsigned char 
  7737 ;;  msgtype         1   22[BANK0 ] unsigned char 
  7738 ;;  data            2   23[BANK0 ] PTR void 
  7739 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), 
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;  length          1   25[BANK0 ] unsigned char 
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  1    wreg      char 
  7744 ;; Registers used:
  7745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7751 ;;      Params:         0       3       0       0       0
  7752 ;;      Locals:         0       1       0       0       0
  7753 ;;      Temps:          0       0       0       0       0
  7754 ;;      Totals:         0       4       0       0       0
  7755 ;;Total ram usage:        4 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    2
  7758 ;; This function calls:
  7759 ;;		i2_send_msg
  7760 ;; This function is called by:
  7761 ;;		_i2c_master_int_handler
  7762 ;;		_i2c_slave_int_handler
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text49
  7767  001A24                     __ptext49:
  7768                           	opt stack 0
  7769  001A24                     _ToMainHigh_sendmsg:
  7770                           	opt stack 16
  7771                           
  7772                           ; BSR set to: 0
  7773                           ;incstack = 0
  7774                           ;ToMainHigh_sendmsg@length stored from wreg
  7775  001A24  CFE8 F099          	movff	wreg,ToMainHigh_sendmsg@length
  7776                           
  7777                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7778                           ;	Return value of _ToMainHigh_sendmsg is never used
  7779  001A28  0101               	movlb	1	; () banked
  7780  001A2A  0E01               	movlw	high _ToMainHigh_MQ
  7781  001A2C  0100               	movlb	0	; () banked
  7782  001A2E  0100               	movlb	0	; () banked
  7783  001A30  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  7784  001A32  0101               	movlb	1	; () banked
  7785  001A34  0E43               	movlw	low _ToMainHigh_MQ
  7786  001A36  0100               	movlb	0	; () banked
  7787  001A38  0100               	movlb	0	; () banked
  7788  001A3A  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  7789  001A3C  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7790  001A40  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7791  001A44  0100               	movlb	0	; () banked
  7792  001A46  0100               	movlb	0	; () banked
  7793  001A48  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7794  001A4C  0100               	movlb	0	; () banked
  7795  001A4E  0100               	movlb	0	; () banked
  7796  001A50  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7797  001A54  EC9E  F005         	call	i2_send_msg	;wreg free
  7798  001A58  0012               	return	
  7799  001A5A                     __end_of_ToMainHigh_sendmsg:
  7800                           	opt stack 0
  7801                           pclatu	equ	0xFFB
  7802                           pclath	equ	0xFFA
  7803                           tblptru	equ	0xFF8
  7804                           tblptrh	equ	0xFF7
  7805                           tblptrl	equ	0xFF6
  7806                           tablat	equ	0xFF5
  7807                           prodh	equ	0xFF4
  7808                           prodl	equ	0xFF3
  7809                           intcon	equ	0xFF2
  7810                           postinc0	equ	0xFEE
  7811                           fsr0h	equ	0xFEA
  7812                           fsr0l	equ	0xFE9
  7813                           wreg	equ	0xFE8
  7814                           indf1	equ	0xFE7
  7815                           postdec1	equ	0xFE5
  7816                           fsr1h	equ	0xFE2
  7817                           fsr1l	equ	0xFE1
  7818                           bsr	equ	0xFE0
  7819                           indf2	equ	0xFDF
  7820                           postinc2	equ	0xFDE
  7821                           postdec2	equ	0xFDD
  7822                           plusw2	equ	0xFDB
  7823                           fsr2h	equ	0xFDA
  7824                           fsr2l	equ	0xFD9
  7825                           status	equ	0xFD8
  7826                           
  7827 ;; *************** function i2_send_msg *****************
  7828 ;; Defined at:
  7829 ;;		line 24 in file "../src/messages.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  7832 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  7833 ;;  length          1   12[BANK0 ] unsigned char 
  7834 ;;  msgtype         1   13[BANK0 ] unsigned char 
  7835 ;;  data            2   14[BANK0 ] PTR void 
  7836 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  7837 ;;		 -> main@uc(13), 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  7840 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  7841 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  7842 ;;  send_msg        2   17[BANK0 ] unsigned int 
  7843 ;;  send_msg        1   19[BANK0 ] unsigned char 
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  1    wreg      char 
  7846 ;; Registers used:
  7847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7853 ;;      Params:         0       6       0       0       0
  7854 ;;      Locals:         0       5       0       0       0
  7855 ;;      Temps:          0       1       0       0       0
  7856 ;;      Totals:         0      12       0       0       0
  7857 ;;Total ram usage:       12 bytes
  7858 ;; Hardware stack levels used:    1
  7859 ;; Hardware stack levels required when called:    1
  7860 ;; This function calls:
  7861 ;;		i2___awmod
  7862 ;;		i2_memcpy
  7863 ;; This function is called by:
  7864 ;;		_ToMainHigh_sendmsg
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           
  7868                           	psect	text50
  7869  000B3C                     __ptext50:
  7870                           	opt stack 0
  7871  000B3C                     i2_send_msg:
  7872                           	opt stack 16
  7873                           
  7874                           ;messages.c: 25: unsigned char slot;
  7875                           ;messages.c: 27: msg *qmsg;
  7876                           ;messages.c: 28: size_t tlength = length;
  7877                           
  7878                           ;incstack = 0
  7879  000B3C  0100               	movlb	0	; () banked
  7880  000B3E  0100               	movlb	0	; () banked
  7881  000B40  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  7882  000B44  0100               	movlb	0	; () banked
  7883  000B46  0100               	movlb	0	; () banked
  7884  000B48  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7885                           
  7886                           ; BSR set to: 0
  7887                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7888  000B4A  0100               	movlb	0	; () banked
  7889  000B4C  EE20 F041          	lfsr	2,65
  7890  000B50  0100               	movlb	0	; () banked
  7891  000B52  518A               	movf	i2send_msg@qptr& (0+255),w,b
  7892  000B54  26D9               	addwf	fsr2l,f,c
  7893  000B56  0100               	movlb	0	; () banked
  7894  000B58  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7895  000B5A  22DA               	addwfc	fsr2h,f,c
  7896  000B5C  50DF               	movf	indf2,w,c
  7897  000B5E  0100               	movlb	0	; () banked
  7898  000B60  0100               	movlb	0	; () banked
  7899  000B62  6F93               	movwf	i2send_msg@slot& (0+255),b
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7903  000B64  0100               	movlb	0	; () banked
  7904  000B66  0100               	movlb	0	; () banked
  7905  000B68  5193               	movf	i2send_msg@slot& (0+255),w,b
  7906  000B6A  0D0D               	mullw	13
  7907  000B6C  50F3               	movf	prodl,w,c
  7908  000B6E  0100               	movlb	0	; () banked
  7909  000B70  0100               	movlb	0	; () banked
  7910  000B72  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  7911  000B74  0100               	movlb	0	; () banked
  7912  000B76  0100               	movlb	0	; () banked
  7913  000B78  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  7914  000B7A  50F4               	movf	prodh,w,c
  7915  000B7C  0100               	movlb	0	; () banked
  7916  000B7E  0100               	movlb	0	; () banked
  7917  000B80  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  7918  000B82  0100               	movlb	0	; () banked
  7919  000B84  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;messages.c: 41: if (qmsg->full != 0) {
  7923  000B86  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7924  000B8A  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7925  000B8E  50DF               	movf	indf2,w,c
  7926  000B90  B4D8               	btfsc	status,2,c
  7927  000B92  D002               	goto	i2l4347
  7928                           
  7929                           ; BSR set to: 0
  7930                           ;messages.c: 42: return (-1);
  7931  000B94  0EFF               	movlw	255
  7932  000B96  0012               	return	
  7933  000B98                     i2l4347:
  7934                           
  7935                           ; BSR set to: 0
  7936                           ;messages.c: 43: }
  7937                           ;messages.c: 46: qmsg->length = length;
  7938  000B98  0100               	movlb	0	; () banked
  7939  000B9A  EE20 F001          	lfsr	2,1
  7940  000B9E  0100               	movlb	0	; () banked
  7941  000BA0  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  7942  000BA2  26D9               	addwf	fsr2l,f,c
  7943  000BA4  0100               	movlb	0	; () banked
  7944  000BA6  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7945  000BA8  22DA               	addwfc	fsr2h,f,c
  7946  000BAA  0100               	movlb	0	; () banked
  7947  000BAC  C08C  FFDF         	movff	i2send_msg@length,indf2
  7948                           
  7949                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7950  000BB0  0100               	movlb	0	; () banked
  7951  000BB2  EE20 F002          	lfsr	2,2
  7952  000BB6  0100               	movlb	0	; () banked
  7953  000BB8  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  7954  000BBA  26D9               	addwf	fsr2l,f,c
  7955  000BBC  0100               	movlb	0	; () banked
  7956  000BBE  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7957  000BC0  22DA               	addwfc	fsr2h,f,c
  7958  000BC2  0100               	movlb	0	; () banked
  7959  000BC4  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  7960                           
  7961                           ; BSR set to: 0
  7962                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7963  000BC8  0E03               	movlw	3
  7964  000BCA  0100               	movlb	0	; () banked
  7965  000BCC  0100               	movlb	0	; () banked
  7966  000BCE  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  7967  000BD0  0100               	movlb	0	; () banked
  7968  000BD2  0100               	movlb	0	; () banked
  7969  000BD4  6F80               	movwf	i2memcpy@d1& (0+255),b
  7970  000BD6  0E00               	movlw	0
  7971  000BD8  0100               	movlb	0	; () banked
  7972  000BDA  0100               	movlb	0	; () banked
  7973  000BDC  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  7974  000BDE  0100               	movlb	0	; () banked
  7975  000BE0  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  7976  000BE2  0100               	movlb	0	; () banked
  7977  000BE4  0100               	movlb	0	; () banked
  7978  000BE6  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7979  000BEA  0100               	movlb	0	; () banked
  7980  000BEC  0100               	movlb	0	; () banked
  7981  000BEE  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  7982  000BF2  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  7983  000BF6  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7984  000BFA  ECC7  F00B         	call	i2_memcpy	;wreg free
  7985                           
  7986                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  7987  000BFE  0100               	movlb	0	; () banked
  7988  000C00  EE20 F041          	lfsr	2,65
  7989  000C04  0100               	movlb	0	; () banked
  7990  000C06  518A               	movf	i2send_msg@qptr& (0+255),w,b
  7991  000C08  26D9               	addwf	fsr2l,f,c
  7992  000C0A  0100               	movlb	0	; () banked
  7993  000C0C  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7994  000C0E  22DA               	addwfc	fsr2h,f,c
  7995  000C10  0100               	movlb	0	; () banked
  7996  000C12  EE10 F041          	lfsr	1,65
  7997  000C16  0100               	movlb	0	; () banked
  7998  000C18  518A               	movf	i2send_msg@qptr& (0+255),w,b
  7999  000C1A  26E1               	addwf	fsr1l,f,c
  8000  000C1C  0100               	movlb	0	; () banked
  8001  000C1E  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8002  000C20  22E2               	addwfc	fsr1h,f,c
  8003  000C22  50E7               	movf	indf1,w,c
  8004  000C24  0100               	movlb	0	; () banked
  8005  000C26  6F90               	movwf	??i2_send_msg& (0+255),b
  8006  000C28  0E01               	movlw	1
  8007  000C2A  0100               	movlb	0	; () banked
  8008  000C2C  2590               	addwf	??i2_send_msg& (0+255),w,b
  8009  000C2E  0100               	movlb	0	; () banked
  8010  000C30  0100               	movlb	0	; () banked
  8011  000C32  6F80               	movwf	i2___awmod@dividend& (0+255),b
  8012  000C34  0100               	movlb	0	; () banked
  8013  000C36  0100               	movlb	0	; () banked
  8014  000C38  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  8015  000C3A  0E00               	movlw	0
  8016  000C3C  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  8017  000C3E  0E00               	movlw	0
  8018  000C40  0100               	movlb	0	; () banked
  8019  000C42  0100               	movlb	0	; () banked
  8020  000C44  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  8021  000C46  0E05               	movlw	5
  8022  000C48  0100               	movlb	0	; () banked
  8023  000C4A  6F82               	movwf	i2___awmod@divisor& (0+255),b
  8024  000C4C  ECBB  F006         	call	i2___awmod	;wreg free
  8025  000C50  0100               	movlb	0	; () banked
  8026  000C52  0100               	movlb	0	; () banked
  8027  000C54  5180               	movf	?i2___awmod& (0+255),w,b
  8028  000C56  6EDF               	movwf	indf2,c
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;messages.c: 59: qmsg->full = 1;
  8032  000C58  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8033  000C5C  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8034  000C60  0E01               	movlw	1
  8035  000C62  6EDF               	movwf	indf2,c
  8036                           
  8037                           ; BSR set to: 0
  8038                           ;messages.c: 60: return (1);
  8039  000C64  0E01               	movlw	1
  8040  000C66  0012               	return	
  8041  000C68                     __end_ofi2_send_msg:
  8042                           	opt stack 0
  8043                           pclatu	equ	0xFFB
  8044                           pclath	equ	0xFFA
  8045                           tblptru	equ	0xFF8
  8046                           tblptrh	equ	0xFF7
  8047                           tblptrl	equ	0xFF6
  8048                           tablat	equ	0xFF5
  8049                           prodh	equ	0xFF4
  8050                           prodl	equ	0xFF3
  8051                           intcon	equ	0xFF2
  8052                           postinc0	equ	0xFEE
  8053                           fsr0h	equ	0xFEA
  8054                           fsr0l	equ	0xFE9
  8055                           wreg	equ	0xFE8
  8056                           indf1	equ	0xFE7
  8057                           postdec1	equ	0xFE5
  8058                           fsr1h	equ	0xFE2
  8059                           fsr1l	equ	0xFE1
  8060                           bsr	equ	0xFE0
  8061                           indf2	equ	0xFDF
  8062                           postinc2	equ	0xFDE
  8063                           postdec2	equ	0xFDD
  8064                           plusw2	equ	0xFDB
  8065                           fsr2h	equ	0xFDA
  8066                           fsr2l	equ	0xFD9
  8067                           status	equ	0xFD8
  8068                           
  8069 ;; *************** function i2_memcpy *****************
  8070 ;; Defined at:
  8071 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;  d1              2    0[BANK0 ] PTR void 
  8074 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8075 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8076 ;;		 -> main@msgbuffer(11), 
  8077 ;;  s1              2    2[BANK0 ] PTR const void 
  8078 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8079 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8080 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  8081 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  8082 ;;		 -> main@uc(13), 
  8083 ;;  n               2    4[BANK0 ] unsigned int 
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  8086 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8087 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8088 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  8089 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  8090 ;;		 -> main@uc(13), 
  8091 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  8092 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8093 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8094 ;;		 -> main@msgbuffer(11), 
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  2    0[BANK0 ] PTR void 
  8097 ;; Registers used:
  8098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8104 ;;      Params:         0       6       0       0       0
  8105 ;;      Locals:         0       4       0       0       0
  8106 ;;      Temps:          0       0       0       0       0
  8107 ;;      Totals:         0      10       0       0       0
  8108 ;;Total ram usage:       10 bytes
  8109 ;; Hardware stack levels used:    1
  8110 ;; This function calls:
  8111 ;;		Nothing
  8112 ;; This function is called by:
  8113 ;;		i2_send_msg
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text51
  8118  00178E                     __ptext51:
  8119                           	opt stack 0
  8120  00178E                     i2_memcpy:
  8121                           	opt stack 16
  8122                           
  8123                           ; BSR set to: 0
  8124                           ;incstack = 0
  8125  00178E  0100               	movlb	0	; () banked
  8126  001790  0100               	movlb	0	; () banked
  8127  001792  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8128  001796  0100               	movlb	0	; () banked
  8129  001798  0100               	movlb	0	; () banked
  8130  00179A  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  8131  00179E  0100               	movlb	0	; () banked
  8132  0017A0  0100               	movlb	0	; () banked
  8133  0017A2  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8134  0017A6  0100               	movlb	0	; () banked
  8135  0017A8  0100               	movlb	0	; () banked
  8136  0017AA  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  8137  0017AE  D012               	goto	i2l4381
  8138  0017B0                     i2l4375:
  8139                           
  8140                           ; BSR set to: 0
  8141  0017B0  C088  FFD9         	movff	i2memcpy@s,fsr2l
  8142  0017B4  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  8143  0017B8  C086  FFE1         	movff	i2memcpy@d,fsr1l
  8144  0017BC  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  8145  0017C0  CFDF FFE7          	movff	indf2,indf1
  8146                           
  8147                           ; BSR set to: 0
  8148  0017C4  0100               	movlb	0	; () banked
  8149  0017C6  0100               	movlb	0	; () banked
  8150  0017C8  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  8151  0017CA  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  8152                           
  8153                           ; BSR set to: 0
  8154  0017CC  0100               	movlb	0	; () banked
  8155  0017CE  0100               	movlb	0	; () banked
  8156  0017D0  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  8157  0017D2  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  8158  0017D4                     i2l4381:
  8159                           
  8160                           ; BSR set to: 0
  8161  0017D4  0100               	movlb	0	; () banked
  8162  0017D6  0100               	movlb	0	; () banked
  8163  0017D8  0784               	decf	i2memcpy@n& (0+255),f,b
  8164  0017DA  A0D8               	btfss	status,0,c
  8165  0017DC  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  8166  0017DE  0100               	movlb	0	; () banked
  8167  0017E0  2984               	incf	i2memcpy@n& (0+255),w,b
  8168  0017E2  B4D8               	btfsc	status,2,c
  8169  0017E4  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  8170  0017E6  B4D8               	btfsc	status,2,c
  8171                           
  8172                           ; BSR set to: 0
  8173                           
  8174                           ; BSR set to: 0
  8175                           ;	Return value of i2_memcpy is never used
  8176  0017E8  0012               	return	
  8177  0017EA  D7E2               	goto	i2l4375
  8178  0017EC                     __end_ofi2_memcpy:
  8179                           	opt stack 0
  8180                           pclatu	equ	0xFFB
  8181                           pclath	equ	0xFFA
  8182                           tblptru	equ	0xFF8
  8183                           tblptrh	equ	0xFF7
  8184                           tblptrl	equ	0xFF6
  8185                           tablat	equ	0xFF5
  8186                           prodh	equ	0xFF4
  8187                           prodl	equ	0xFF3
  8188                           intcon	equ	0xFF2
  8189                           postinc0	equ	0xFEE
  8190                           fsr0h	equ	0xFEA
  8191                           fsr0l	equ	0xFE9
  8192                           wreg	equ	0xFE8
  8193                           indf1	equ	0xFE7
  8194                           postdec1	equ	0xFE5
  8195                           fsr1h	equ	0xFE2
  8196                           fsr1l	equ	0xFE1
  8197                           bsr	equ	0xFE0
  8198                           indf2	equ	0xFDF
  8199                           postinc2	equ	0xFDE
  8200                           postdec2	equ	0xFDD
  8201                           plusw2	equ	0xFDB
  8202                           fsr2h	equ	0xFDA
  8203                           fsr2l	equ	0xFD9
  8204                           status	equ	0xFD8
  8205                           
  8206 ;; *************** function i2___awmod *****************
  8207 ;; Defined at:
  8208 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;  dividend        2    0[BANK0 ] int 
  8211 ;;  divisor         2    2[BANK0 ] int 
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;  __awmod         1    6[BANK0 ] unsigned char 
  8214 ;;  __awmod         1    5[BANK0 ] unsigned char 
  8215 ;; Return value:  Size  Location     Type
  8216 ;;                  2    0[BANK0 ] int 
  8217 ;; Registers used:
  8218 ;;		wreg, status,2, status,0, prodl
  8219 ;; Tracked objects:
  8220 ;;		On entry : 0/0
  8221 ;;		On exit  : 0/0
  8222 ;;		Unchanged: 0/0
  8223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8224 ;;      Params:         0       4       0       0       0
  8225 ;;      Locals:         0       2       0       0       0
  8226 ;;      Temps:          0       1       0       0       0
  8227 ;;      Totals:         0       7       0       0       0
  8228 ;;Total ram usage:        7 bytes
  8229 ;; Hardware stack levels used:    1
  8230 ;; This function calls:
  8231 ;;		Nothing
  8232 ;; This function is called by:
  8233 ;;		i2_send_msg
  8234 ;; This function uses a non-reentrant model
  8235 ;;
  8236                           
  8237                           	psect	text52
  8238  000D76                     __ptext52:
  8239                           	opt stack 0
  8240  000D76                     i2___awmod:
  8241                           	opt stack 16
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;incstack = 0
  8245  000D76  0100               	movlb	0	; () banked
  8246  000D78  6F84               	movwf	??i2___awmod& (0+255),b
  8247  000D7A  0E00               	movlw	0
  8248  000D7C  0100               	movlb	0	; () banked
  8249  000D7E  0100               	movlb	0	; () banked
  8250  000D80  6F86               	movwf	i2___awmod@sign& (0+255),b
  8251  000D82  0100               	movlb	0	; () banked
  8252  000D84  5184               	movf	??i2___awmod& (0+255),w,b
  8253                           
  8254                           ; BSR set to: 0
  8255  000D86  0100               	movlb	0	; () banked
  8256  000D88  0100               	movlb	0	; () banked
  8257  000D8A  5181               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  8258  000D8C  0A80               	xorlw	128
  8259  000D8E  6EF3               	movwf	prodl,c
  8260  000D90  0E80               	movlw	128
  8261  000D92  5CF3               	subwf	prodl,w,c
  8262  000D94  0E00               	movlw	0
  8263  000D96  B4D8               	btfsc	status,2,c
  8264  000D98  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  8265  000D9A  B0D8               	btfsc	status,0,c
  8266  000D9C  D00F               	goto	i2l4427
  8267                           
  8268                           ; BSR set to: 0
  8269  000D9E  0100               	movlb	0	; () banked
  8270  000DA0  0100               	movlb	0	; () banked
  8271  000DA2  6D80               	negf	i2___awmod@dividend& (0+255),b
  8272  000DA4  0100               	movlb	0	; () banked
  8273  000DA6  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  8274  000DA8  B0D8               	btfsc	status,0,c
  8275  000DAA  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  8276                           
  8277                           ; BSR set to: 0
  8278  000DAC  0100               	movlb	0	; () banked
  8279  000DAE  6F84               	movwf	??i2___awmod& (0+255),b
  8280  000DB0  0E01               	movlw	1
  8281  000DB2  0100               	movlb	0	; () banked
  8282  000DB4  0100               	movlb	0	; () banked
  8283  000DB6  6F86               	movwf	i2___awmod@sign& (0+255),b
  8284  000DB8  0100               	movlb	0	; () banked
  8285  000DBA  5184               	movf	??i2___awmod& (0+255),w,b
  8286  000DBC                     i2l4427:
  8287                           
  8288                           ; BSR set to: 0
  8289  000DBC  0100               	movlb	0	; () banked
  8290  000DBE  0100               	movlb	0	; () banked
  8291  000DC0  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8292  000DC2  0A80               	xorlw	128
  8293  000DC4  6EF3               	movwf	prodl,c
  8294  000DC6  0E80               	movlw	128
  8295  000DC8  5CF3               	subwf	prodl,w,c
  8296  000DCA  0E00               	movlw	0
  8297  000DCC  B4D8               	btfsc	status,2,c
  8298  000DCE  5D82               	subwf	i2___awmod@divisor& (0+255),w,b
  8299  000DD0  B0D8               	btfsc	status,0,c
  8300  000DD2  D007               	goto	i2l4431
  8301                           
  8302                           ; BSR set to: 0
  8303  000DD4  0100               	movlb	0	; () banked
  8304  000DD6  0100               	movlb	0	; () banked
  8305  000DD8  6D82               	negf	i2___awmod@divisor& (0+255),b
  8306  000DDA  0100               	movlb	0	; () banked
  8307  000DDC  1F83               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  8308  000DDE  B0D8               	btfsc	status,0,c
  8309  000DE0  2B83               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  8310  000DE2                     i2l4431:
  8311                           
  8312                           ; BSR set to: 0
  8313  000DE2  0100               	movlb	0	; () banked
  8314  000DE4  0100               	movlb	0	; () banked
  8315  000DE6  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8316  000DE8  1182               	iorwf	i2___awmod@divisor& (0+255),w,b
  8317  000DEA  B4D8               	btfsc	status,2,c
  8318  000DEC  D03A               	goto	i2l4447
  8319                           
  8320                           ; BSR set to: 0
  8321  000DEE  0100               	movlb	0	; () banked
  8322  000DF0  6F84               	movwf	??i2___awmod& (0+255),b
  8323  000DF2  0E01               	movlw	1
  8324  000DF4  0100               	movlb	0	; () banked
  8325  000DF6  0100               	movlb	0	; () banked
  8326  000DF8  6F85               	movwf	i2___awmod@counter& (0+255),b
  8327  000DFA  0100               	movlb	0	; () banked
  8328  000DFC  5184               	movf	??i2___awmod& (0+255),w,b
  8329  000DFE  D009               	goto	i2l4437
  8330  000E00                     i2l4435:
  8331                           
  8332                           ; BSR set to: 0
  8333  000E00  0100               	movlb	0	; () banked
  8334  000E02  0100               	movlb	0	; () banked
  8335  000E04  0100               	movlb	0	; () banked
  8336  000E06  90D8               	bcf	status,0,c
  8337  000E08  3782               	rlcf	i2___awmod@divisor& (0+255),f,b
  8338  000E0A  3783               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  8339  000E0C  0100               	movlb	0	; () banked
  8340  000E0E  0100               	movlb	0	; () banked
  8341  000E10  2B85               	incf	i2___awmod@counter& (0+255),f,b
  8342  000E12                     i2l4437:
  8343                           
  8344                           ; BSR set to: 0
  8345  000E12  0100               	movlb	0	; () banked
  8346  000E14  0100               	movlb	0	; () banked
  8347  000E16  AF83               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  8348  000E18  D7F3               	goto	i2l4435
  8349  000E1A                     i2l4439:
  8350                           
  8351                           ; BSR set to: 0
  8352  000E1A  0100               	movlb	0	; () banked
  8353  000E1C  0100               	movlb	0	; () banked
  8354  000E1E  5182               	movf	i2___awmod@divisor& (0+255),w,b
  8355  000E20  0100               	movlb	0	; () banked
  8356  000E22  0100               	movlb	0	; () banked
  8357  000E24  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  8358  000E26  0100               	movlb	0	; () banked
  8359  000E28  0100               	movlb	0	; () banked
  8360  000E2A  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8361  000E2C  0100               	movlb	0	; () banked
  8362  000E2E  0100               	movlb	0	; () banked
  8363  000E30  5981               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  8364  000E32  A0D8               	btfss	status,0,c
  8365  000E34  D00C               	goto	i2l4443
  8366                           
  8367                           ; BSR set to: 0
  8368  000E36  0100               	movlb	0	; () banked
  8369  000E38  0100               	movlb	0	; () banked
  8370  000E3A  5182               	movf	i2___awmod@divisor& (0+255),w,b
  8371  000E3C  0100               	movlb	0	; () banked
  8372  000E3E  0100               	movlb	0	; () banked
  8373  000E40  5F80               	subwf	i2___awmod@dividend& (0+255),f,b
  8374  000E42  0100               	movlb	0	; () banked
  8375  000E44  0100               	movlb	0	; () banked
  8376  000E46  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8377  000E48  0100               	movlb	0	; () banked
  8378  000E4A  0100               	movlb	0	; () banked
  8379  000E4C  5B81               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  8380  000E4E                     i2l4443:
  8381                           
  8382                           ; BSR set to: 0
  8383  000E4E  0100               	movlb	0	; () banked
  8384  000E50  0100               	movlb	0	; () banked
  8385  000E52  0100               	movlb	0	; () banked
  8386  000E54  90D8               	bcf	status,0,c
  8387  000E56  3383               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  8388  000E58  3382               	rrcf	i2___awmod@divisor& (0+255),f,b
  8389                           
  8390                           ; BSR set to: 0
  8391  000E5A  0100               	movlb	0	; () banked
  8392  000E5C  0100               	movlb	0	; () banked
  8393  000E5E  2F85               	decfsz	i2___awmod@counter& (0+255),f,b
  8394  000E60  D7DC               	goto	i2l4439
  8395  000E62                     i2l4447:
  8396                           
  8397                           ; BSR set to: 0
  8398  000E62  0100               	movlb	0	; () banked
  8399  000E64  0100               	movlb	0	; () banked
  8400  000E66  5186               	movf	i2___awmod@sign& (0+255),w,b
  8401  000E68  B4D8               	btfsc	status,2,c
  8402  000E6A  D007               	goto	i2l4451
  8403                           
  8404                           ; BSR set to: 0
  8405  000E6C  0100               	movlb	0	; () banked
  8406  000E6E  0100               	movlb	0	; () banked
  8407  000E70  6D80               	negf	i2___awmod@dividend& (0+255),b
  8408  000E72  0100               	movlb	0	; () banked
  8409  000E74  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  8410  000E76  B0D8               	btfsc	status,0,c
  8411  000E78  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  8412  000E7A                     i2l4451:
  8413                           
  8414                           ; BSR set to: 0
  8415  000E7A  C080  F080         	movff	i2___awmod@dividend,?i2___awmod
  8416  000E7E  C081  F081         	movff	i2___awmod@dividend+1,?i2___awmod+1
  8417  000E82  0012               	return	
  8418  000E84                     __end_ofi2___awmod:
  8419                           	opt stack 0
  8420                           pclatu	equ	0xFFB
  8421                           pclath	equ	0xFFA
  8422                           tblptru	equ	0xFF8
  8423                           tblptrh	equ	0xFF7
  8424                           tblptrl	equ	0xFF6
  8425                           tablat	equ	0xFF5
  8426                           prodh	equ	0xFF4
  8427                           prodl	equ	0xFF3
  8428                           intcon	equ	0xFF2
  8429                           postinc0	equ	0xFEE
  8430                           fsr0h	equ	0xFEA
  8431                           fsr0l	equ	0xFE9
  8432                           wreg	equ	0xFE8
  8433                           indf1	equ	0xFE7
  8434                           postdec1	equ	0xFE5
  8435                           fsr1h	equ	0xFE2
  8436                           fsr1l	equ	0xFE1
  8437                           bsr	equ	0xFE0
  8438                           indf2	equ	0xFDF
  8439                           postinc2	equ	0xFDE
  8440                           postdec2	equ	0xFDD
  8441                           plusw2	equ	0xFDB
  8442                           fsr2h	equ	0xFDA
  8443                           fsr2l	equ	0xFD9
  8444                           status	equ	0xFD8
  8445                           
  8446 ;; *************** function _SleepIfOkay *****************
  8447 ;; Defined at:
  8448 ;;		line 228 in file "../src/messages.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;		None
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;		None
  8453 ;; Return value:  Size  Location     Type
  8454 ;;		None               void
  8455 ;; Registers used:
  8456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8457 ;; Tracked objects:
  8458 ;;		On entry : 0/0
  8459 ;;		On exit  : 0/0
  8460 ;;		Unchanged: 0/0
  8461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8462 ;;      Params:         0       0       0       0       0
  8463 ;;      Locals:         0       0       0       0       0
  8464 ;;      Temps:          0       0       0       0       0
  8465 ;;      Totals:         0       0       0       0       0
  8466 ;;Total ram usage:        0 bytes
  8467 ;; Hardware stack levels used:    1
  8468 ;; Hardware stack levels required when called:    2
  8469 ;; This function calls:
  8470 ;;		_enter_sleep_mode
  8471 ;;		i2_check_msg
  8472 ;;		i2_in_high_int
  8473 ;;		i2_in_low_int
  8474 ;; This function is called by:
  8475 ;;		_InterruptHandlerHigh
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           	psect	text53
  8480  001594                     __ptext53:
  8481                           	opt stack 0
  8482  001594                     _SleepIfOkay:
  8483                           	opt stack 18
  8484                           
  8485                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;incstack = 0
  8489  001594  6649               	tstfsz	_MQ_Main_Willing_to_block,c
  8490  001596  D001               	goto	i2l3563
  8491  001598  0012               	return	
  8492  00159A                     i2l3563:
  8493                           
  8494                           ;messages.c: 232: }
  8495                           ;messages.c: 235: if (in_low_int()) {
  8496  00159A  EC19  F00C         	call	i2_in_low_int	;wreg free
  8497  00159E  0100               	movlb	0	; () banked
  8498  0015A0  0100               	movlb	0	; () banked
  8499  0015A2  5183               	movf	(?i2_in_low_int+1)& (0+255),w,b
  8500  0015A4  0100               	movlb	0	; () banked
  8501  0015A6  1182               	iorwf	?i2_in_low_int& (0+255),w,b
  8502  0015A8  A4D8               	btfss	status,2,c
  8503  0015AA  0012               	return	
  8504                           
  8505                           ; BSR set to: 0
  8506                           ;messages.c: 237: }
  8507                           ;messages.c: 240: if (!in_high_int()) {
  8508                           
  8509                           ; BSR set to: 0
  8510                           
  8511                           ; BSR set to: 0
  8512                           ;messages.c: 236: return;
  8513  0015AC  EC03  F00E         	call	i2_in_high_int	;wreg free
  8514  0015B0  0100               	movlb	0	; () banked
  8515  0015B2  0100               	movlb	0	; () banked
  8516  0015B4  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8517  0015B6  0100               	movlb	0	; () banked
  8518  0015B8  1180               	iorwf	?i2_in_high_int& (0+255),w,b
  8519  0015BA  B4D8               	btfsc	status,2,c
  8520  0015BC  0012               	return	
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;messages.c: 242: }
  8524                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8525                           
  8526                           ; BSR set to: 0
  8527                           
  8528                           ; BSR set to: 0
  8529                           ;messages.c: 241: return;
  8530  0015BE  0101               	movlb	1	; () banked
  8531  0015C0  0E01               	movlw	high _ToMainHigh_MQ
  8532  0015C2  0100               	movlb	0	; () banked
  8533  0015C4  0100               	movlb	0	; () banked
  8534  0015C6  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8535  0015C8  0101               	movlb	1	; () banked
  8536  0015CA  0E43               	movlw	low _ToMainHigh_MQ
  8537  0015CC  0100               	movlb	0	; () banked
  8538  0015CE  0100               	movlb	0	; () banked
  8539  0015D0  6F80               	movwf	i2check_msg@qptr& (0+255),b
  8540  0015D2  EC2D  F00D         	call	i2_check_msg	;wreg free
  8541  0015D6  0900               	iorlw	0
  8542  0015D8  A4D8               	btfss	status,2,c
  8543  0015DA  0012               	return	
  8544                           
  8545                           ;messages.c: 249: }
  8546                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8547                           
  8548                           ;messages.c: 248: return;
  8549  0015DC  0101               	movlb	1	; () banked
  8550  0015DE  0E01               	movlw	high _ToMainLow_MQ
  8551  0015E0  0100               	movlb	0	; () banked
  8552  0015E2  0100               	movlb	0	; () banked
  8553  0015E4  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8554  0015E6  0101               	movlb	1	; () banked
  8555  0015E8  0E86               	movlw	low _ToMainLow_MQ
  8556  0015EA  0100               	movlb	0	; () banked
  8557  0015EC  0100               	movlb	0	; () banked
  8558  0015EE  6F80               	movwf	i2check_msg@qptr& (0+255),b
  8559  0015F0  EC2D  F00D         	call	i2_check_msg	;wreg free
  8560  0015F4  0900               	iorlw	0
  8561  0015F6  B4D8               	btfsc	status,2,c
  8562                           
  8563                           ;messages.c: 252: }
  8564                           ;messages.c: 253: enter_sleep_mode();
  8565                           
  8566                           ;messages.c: 251: return;
  8567  0015F8  EC1F  F00E         	call	_enter_sleep_mode	;wreg free
  8568  0015FC  0012               	return	
  8569  0015FE                     __end_of_SleepIfOkay:
  8570                           	opt stack 0
  8571                           pclatu	equ	0xFFB
  8572                           pclath	equ	0xFFA
  8573                           tblptru	equ	0xFF8
  8574                           tblptrh	equ	0xFF7
  8575                           tblptrl	equ	0xFF6
  8576                           tablat	equ	0xFF5
  8577                           prodh	equ	0xFF4
  8578                           prodl	equ	0xFF3
  8579                           intcon	equ	0xFF2
  8580                           postinc0	equ	0xFEE
  8581                           fsr0h	equ	0xFEA
  8582                           fsr0l	equ	0xFE9
  8583                           wreg	equ	0xFE8
  8584                           indf1	equ	0xFE7
  8585                           postdec1	equ	0xFE5
  8586                           fsr1h	equ	0xFE2
  8587                           fsr1l	equ	0xFE1
  8588                           bsr	equ	0xFE0
  8589                           indf2	equ	0xFDF
  8590                           postinc2	equ	0xFDE
  8591                           postdec2	equ	0xFDD
  8592                           plusw2	equ	0xFDB
  8593                           fsr2h	equ	0xFDA
  8594                           fsr2l	equ	0xFD9
  8595                           status	equ	0xFD8
  8596                           
  8597 ;; *************** function i2_in_low_int *****************
  8598 ;; Defined at:
  8599 ;;		line 31 in file "../src/interrupts.c"
  8600 ;; Parameters:    Size  Location     Type
  8601 ;;		None
  8602 ;; Auto vars:     Size  Location     Type
  8603 ;;		None
  8604 ;; Return value:  Size  Location     Type
  8605 ;;                  2    2[BANK0 ] int 
  8606 ;; Registers used:
  8607 ;;		wreg, status,2, status,0, cstack
  8608 ;; Tracked objects:
  8609 ;;		On entry : 0/0
  8610 ;;		On exit  : 0/0
  8611 ;;		Unchanged: 0/0
  8612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8613 ;;      Params:         0       2       0       0       0
  8614 ;;      Locals:         0       0       0       0       0
  8615 ;;      Temps:          0       0       0       0       0
  8616 ;;      Totals:         0       2       0       0       0
  8617 ;;Total ram usage:        2 bytes
  8618 ;; Hardware stack levels used:    1
  8619 ;; Hardware stack levels required when called:    1
  8620 ;; This function calls:
  8621 ;;		i2_in_high_int
  8622 ;; This function is called by:
  8623 ;;		_SleepIfOkay
  8624 ;; This function uses a non-reentrant model
  8625 ;;
  8626                           
  8627                           	psect	text54
  8628  001832                     __ptext54:
  8629                           	opt stack 0
  8630  001832                     i2_in_low_int:
  8631                           	opt stack 18
  8632                           
  8633                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  8634                           
  8635                           ;incstack = 0
  8636  001832  ACF2               	btfss	intcon,6,c	;volatile
  8637  001834  D008               	goto	i2l4323
  8638                           
  8639                           ;interrupts.c: 33: return (0);
  8640  001836  0E00               	movlw	0
  8641  001838  0100               	movlb	0	; () banked
  8642  00183A  0100               	movlb	0	; () banked
  8643  00183C  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
  8644  00183E  0E00               	movlw	0
  8645  001840  0100               	movlb	0	; () banked
  8646  001842  6F82               	movwf	?i2_in_low_int& (0+255),b
  8647  001844  0012               	return	
  8648  001846                     i2l4323:
  8649  001846  EC03  F00E         	call	i2_in_high_int	;wreg free
  8650  00184A  0100               	movlb	0	; () banked
  8651  00184C  0100               	movlb	0	; () banked
  8652  00184E  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8653  001850  0100               	movlb	0	; () banked
  8654  001852  1180               	iorwf	?i2_in_high_int& (0+255),w,b
  8655  001854  B4D8               	btfsc	status,2,c
  8656  001856  D008               	goto	i2l4331
  8657                           
  8658                           ; BSR set to: 0
  8659                           ;interrupts.c: 35: return (0);
  8660  001858  0E00               	movlw	0
  8661  00185A  0100               	movlb	0	; () banked
  8662  00185C  0100               	movlb	0	; () banked
  8663  00185E  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
  8664  001860  0E00               	movlw	0
  8665  001862  0100               	movlb	0	; () banked
  8666  001864  6F82               	movwf	?i2_in_low_int& (0+255),b
  8667  001866  0012               	return	
  8668  001868                     i2l4331:
  8669                           
  8670                           ; BSR set to: 0
  8671                           ;interrupts.c: 37: return (1);
  8672  001868  0E00               	movlw	0
  8673  00186A  0100               	movlb	0	; () banked
  8674  00186C  0100               	movlb	0	; () banked
  8675  00186E  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
  8676  001870  0E01               	movlw	1
  8677  001872  0100               	movlb	0	; () banked
  8678  001874  6F82               	movwf	?i2_in_low_int& (0+255),b
  8679  001876  0012               	return	
  8680  001878                     __end_ofi2_in_low_int:
  8681                           	opt stack 0
  8682                           pclatu	equ	0xFFB
  8683                           pclath	equ	0xFFA
  8684                           tblptru	equ	0xFF8
  8685                           tblptrh	equ	0xFF7
  8686                           tblptrl	equ	0xFF6
  8687                           tablat	equ	0xFF5
  8688                           prodh	equ	0xFF4
  8689                           prodl	equ	0xFF3
  8690                           intcon	equ	0xFF2
  8691                           postinc0	equ	0xFEE
  8692                           fsr0h	equ	0xFEA
  8693                           fsr0l	equ	0xFE9
  8694                           wreg	equ	0xFE8
  8695                           indf1	equ	0xFE7
  8696                           postdec1	equ	0xFE5
  8697                           fsr1h	equ	0xFE2
  8698                           fsr1l	equ	0xFE1
  8699                           bsr	equ	0xFE0
  8700                           indf2	equ	0xFDF
  8701                           postinc2	equ	0xFDE
  8702                           postdec2	equ	0xFDD
  8703                           plusw2	equ	0xFDB
  8704                           fsr2h	equ	0xFDA
  8705                           fsr2l	equ	0xFD9
  8706                           status	equ	0xFD8
  8707                           
  8708 ;; *************** function i2_in_high_int *****************
  8709 ;; Defined at:
  8710 ;;		line 23 in file "../src/interrupts.c"
  8711 ;; Parameters:    Size  Location     Type
  8712 ;;		None
  8713 ;; Auto vars:     Size  Location     Type
  8714 ;;		None
  8715 ;; Return value:  Size  Location     Type
  8716 ;;                  2    0[BANK0 ] int 
  8717 ;; Registers used:
  8718 ;;		wreg, status,2
  8719 ;; Tracked objects:
  8720 ;;		On entry : 0/0
  8721 ;;		On exit  : 0/0
  8722 ;;		Unchanged: 0/0
  8723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8724 ;;      Params:         0       2       0       0       0
  8725 ;;      Locals:         0       0       0       0       0
  8726 ;;      Temps:          0       0       0       0       0
  8727 ;;      Totals:         0       2       0       0       0
  8728 ;;Total ram usage:        2 bytes
  8729 ;; Hardware stack levels used:    1
  8730 ;; This function calls:
  8731 ;;		Nothing
  8732 ;; This function is called by:
  8733 ;;		_SleepIfOkay
  8734 ;;		i2_in_low_int
  8735 ;; This function uses a non-reentrant model
  8736 ;;
  8737                           
  8738                           	psect	text55
  8739  001C06                     __ptext55:
  8740                           	opt stack 0
  8741  001C06                     i2_in_high_int:
  8742                           	opt stack 18
  8743                           
  8744                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  8745                           
  8746                           ; BSR set to: 0
  8747                           ;incstack = 0
  8748  001C06  0E00               	movlw	0
  8749  001C08  AEF2               	btfss	intcon,7,c	;volatile
  8750  001C0A  0E01               	movlw	1
  8751  001C0C  0100               	movlb	0	; () banked
  8752  001C0E  0100               	movlb	0	; () banked
  8753  001C10  6F80               	movwf	?i2_in_high_int& (0+255),b
  8754  001C12  0100               	movlb	0	; () banked
  8755  001C14  6B81               	clrf	(?i2_in_high_int+1)& (0+255),b
  8756  001C16  0012               	return	
  8757  001C18                     __end_ofi2_in_high_int:
  8758                           	opt stack 0
  8759                           pclatu	equ	0xFFB
  8760                           pclath	equ	0xFFA
  8761                           tblptru	equ	0xFF8
  8762                           tblptrh	equ	0xFF7
  8763                           tblptrl	equ	0xFF6
  8764                           tablat	equ	0xFF5
  8765                           prodh	equ	0xFF4
  8766                           prodl	equ	0xFF3
  8767                           intcon	equ	0xFF2
  8768                           postinc0	equ	0xFEE
  8769                           fsr0h	equ	0xFEA
  8770                           fsr0l	equ	0xFE9
  8771                           wreg	equ	0xFE8
  8772                           indf1	equ	0xFE7
  8773                           postdec1	equ	0xFE5
  8774                           fsr1h	equ	0xFE2
  8775                           fsr1l	equ	0xFE1
  8776                           bsr	equ	0xFE0
  8777                           indf2	equ	0xFDF
  8778                           postinc2	equ	0xFDE
  8779                           postdec2	equ	0xFDD
  8780                           plusw2	equ	0xFDB
  8781                           fsr2h	equ	0xFDA
  8782                           fsr2l	equ	0xFD9
  8783                           status	equ	0xFD8
  8784                           
  8785 ;; *************** function i2_check_msg *****************
  8786 ;; Defined at:
  8787 ;;		line 222 in file "../src/messages.c"
  8788 ;; Parameters:    Size  Location     Type
  8789 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  8790 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8791 ;; Auto vars:     Size  Location     Type
  8792 ;;		None
  8793 ;; Return value:  Size  Location     Type
  8794 ;;                  1    wreg      unsigned char 
  8795 ;; Registers used:
  8796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8797 ;; Tracked objects:
  8798 ;;		On entry : 0/0
  8799 ;;		On exit  : 0/0
  8800 ;;		Unchanged: 0/0
  8801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8802 ;;      Params:         0       2       0       0       0
  8803 ;;      Locals:         0       0       0       0       0
  8804 ;;      Temps:          0       1       0       0       0
  8805 ;;      Totals:         0       3       0       0       0
  8806 ;;Total ram usage:        3 bytes
  8807 ;; Hardware stack levels used:    1
  8808 ;; This function calls:
  8809 ;;		Nothing
  8810 ;; This function is called by:
  8811 ;;		_SleepIfOkay
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           	psect	text56
  8816  001A5A                     __ptext56:
  8817                           	opt stack 0
  8818  001A5A                     i2_check_msg:
  8819                           	opt stack 19
  8820                           
  8821                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8822                           
  8823                           ; BSR set to: 0
  8824                           ;incstack = 0
  8825  001A5A  0100               	movlb	0	; () banked
  8826  001A5C  EE20 F042          	lfsr	2,66
  8827  001A60  0100               	movlb	0	; () banked
  8828  001A62  5180               	movf	i2check_msg@qptr& (0+255),w,b
  8829  001A64  26D9               	addwf	fsr2l,f,c
  8830  001A66  0100               	movlb	0	; () banked
  8831  001A68  5181               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  8832  001A6A  22DA               	addwfc	fsr2h,f,c
  8833  001A6C  50DF               	movf	indf2,w,c
  8834  001A6E  0100               	movlb	0	; () banked
  8835  001A70  6F82               	movwf	??i2_check_msg& (0+255),b
  8836  001A72  0100               	movlb	0	; () banked
  8837  001A74  5182               	movf	??i2_check_msg& (0+255),w,b
  8838  001A76  0D0D               	mullw	13
  8839  001A78  50F3               	movf	prodl,w,c
  8840  001A7A  0100               	movlb	0	; () banked
  8841  001A7C  0100               	movlb	0	; () banked
  8842  001A7E  2580               	addwf	i2check_msg@qptr& (0+255),w,b
  8843  001A80  6ED9               	movwf	fsr2l,c
  8844  001A82  50F4               	movf	prodh,w,c
  8845  001A84  0100               	movlb	0	; () banked
  8846  001A86  0100               	movlb	0	; () banked
  8847  001A88  2181               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  8848  001A8A  6EDA               	movwf	fsr2h,c
  8849  001A8C  50DF               	movf	indf2,w,c
  8850  001A8E  0012               	return	
  8851  001A90                     __end_ofi2_check_msg:
  8852                           	opt stack 0
  8853                           pclatu	equ	0xFFB
  8854                           pclath	equ	0xFFA
  8855                           tblptru	equ	0xFF8
  8856                           tblptrh	equ	0xFF7
  8857                           tblptrl	equ	0xFF6
  8858                           tablat	equ	0xFF5
  8859                           prodh	equ	0xFF4
  8860                           prodl	equ	0xFF3
  8861                           intcon	equ	0xFF2
  8862                           postinc0	equ	0xFEE
  8863                           fsr0h	equ	0xFEA
  8864                           fsr0l	equ	0xFE9
  8865                           wreg	equ	0xFE8
  8866                           indf1	equ	0xFE7
  8867                           postdec1	equ	0xFE5
  8868                           fsr1h	equ	0xFE2
  8869                           fsr1l	equ	0xFE1
  8870                           bsr	equ	0xFE0
  8871                           indf2	equ	0xFDF
  8872                           postinc2	equ	0xFDE
  8873                           postdec2	equ	0xFDD
  8874                           plusw2	equ	0xFDB
  8875                           fsr2h	equ	0xFDA
  8876                           fsr2l	equ	0xFD9
  8877                           status	equ	0xFD8
  8878                           
  8879 ;; *************** function _enter_sleep_mode *****************
  8880 ;; Defined at:
  8881 ;;		line 202 in file "../src/messages.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;		None
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;		None
  8886 ;; Return value:  Size  Location     Type
  8887 ;;		None               void
  8888 ;; Registers used:
  8889 ;;		None
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8895 ;;      Params:         0       0       0       0       0
  8896 ;;      Locals:         0       0       0       0       0
  8897 ;;      Temps:          0       0       0       0       0
  8898 ;;      Totals:         0       0       0       0       0
  8899 ;;Total ram usage:        0 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; This function calls:
  8902 ;;		Nothing
  8903 ;; This function is called by:
  8904 ;;		_SleepIfOkay
  8905 ;; This function uses a non-reentrant model
  8906 ;;
  8907                           
  8908                           	psect	text57
  8909  001C3E                     __ptext57:
  8910                           	opt stack 0
  8911  001C3E                     _enter_sleep_mode:
  8912                           	opt stack 19
  8913                           
  8914                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8915                           
  8916                           ; BSR set to: 0
  8917                           ;incstack = 0
  8918  001C3E  8ED3               	bsf	4051,7,c	;volatile
  8919  001C40  0003               	sleep		;# 
  8920  001C42  0012               	return	
  8921  001C44                     __end_of_enter_sleep_mode:
  8922                           	opt stack 0
  8923  0000                     pclatu	equ	0xFFB
  8924                           pclath	equ	0xFFA
  8925                           tblptru	equ	0xFF8
  8926                           tblptrh	equ	0xFF7
  8927                           tblptrl	equ	0xFF6
  8928                           tablat	equ	0xFF5
  8929                           prodh	equ	0xFF4
  8930                           prodl	equ	0xFF3
  8931                           intcon	equ	0xFF2
  8932                           postinc0	equ	0xFEE
  8933                           fsr0h	equ	0xFEA
  8934                           fsr0l	equ	0xFE9
  8935                           wreg	equ	0xFE8
  8936                           indf1	equ	0xFE7
  8937                           postdec1	equ	0xFE5
  8938                           fsr1h	equ	0xFE2
  8939                           fsr1l	equ	0xFE1
  8940                           bsr	equ	0xFE0
  8941                           indf2	equ	0xFDF
  8942                           postinc2	equ	0xFDE
  8943                           postdec2	equ	0xFDD
  8944                           plusw2	equ	0xFDB
  8945                           fsr2h	equ	0xFDA
  8946                           fsr2l	equ	0xFD9
  8947                           status	equ	0xFD8
  8948                           pclatu	equ	0xFFB
  8949                           pclath	equ	0xFFA
  8950                           tblptru	equ	0xFF8
  8951                           tblptrh	equ	0xFF7
  8952                           tblptrl	equ	0xFF6
  8953                           tablat	equ	0xFF5
  8954                           prodh	equ	0xFF4
  8955                           prodl	equ	0xFF3
  8956                           intcon	equ	0xFF2
  8957                           postinc0	equ	0xFEE
  8958                           fsr0h	equ	0xFEA
  8959                           fsr0l	equ	0xFE9
  8960                           wreg	equ	0xFE8
  8961                           indf1	equ	0xFE7
  8962                           postdec1	equ	0xFE5
  8963                           fsr1h	equ	0xFE2
  8964                           fsr1l	equ	0xFE1
  8965                           bsr	equ	0xFE0
  8966                           indf2	equ	0xFDF
  8967                           postinc2	equ	0xFDE
  8968                           postdec2	equ	0xFDD
  8969                           plusw2	equ	0xFDB
  8970                           fsr2h	equ	0xFDA
  8971                           fsr2l	equ	0xFD9
  8972                           status	equ	0xFD8
  8973                           
  8974                           	psect	param0
  8975  0000                     pclatu	equ	0xFFB
  8976                           pclath	equ	0xFFA
  8977                           tblptru	equ	0xFF8
  8978                           tblptrh	equ	0xFF7
  8979                           tblptrl	equ	0xFF6
  8980                           tablat	equ	0xFF5
  8981                           prodh	equ	0xFF4
  8982                           prodl	equ	0xFF3
  8983                           intcon	equ	0xFF2
  8984                           postinc0	equ	0xFEE
  8985                           fsr0h	equ	0xFEA
  8986                           fsr0l	equ	0xFE9
  8987                           wreg	equ	0xFE8
  8988                           indf1	equ	0xFE7
  8989                           postdec1	equ	0xFE5
  8990                           fsr1h	equ	0xFE2
  8991                           fsr1l	equ	0xFE1
  8992                           bsr	equ	0xFE0
  8993                           indf2	equ	0xFDF
  8994                           postinc2	equ	0xFDE
  8995                           postdec2	equ	0xFDD
  8996                           plusw2	equ	0xFDB
  8997                           fsr2h	equ	0xFDA
  8998                           fsr2l	equ	0xFD9
  8999                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         298
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     44      86
    BANK0           128     79      83
    BANK1           256      4     205
    BANK2           256     62     129
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK1[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK1[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK1[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK1[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK1[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK2[2]), main@ic(BANK2[29]), 
		 -> main@uc(BANK2[13]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK1[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK2[2]), main@ic(BANK2[29]), 
		 -> main@uc(BANK2[13]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_trans@data	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 13
		 -> main@uc(BANK2[13]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK2[13]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK2[29]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK2[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), main@ic(BANK2[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK2[13]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK1[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK1[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK1[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK1[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK1[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), main@t1thread_data(BANK2[2]), main@ic(BANK2[29]), 
		 -> main@uc(BANK2[13]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK1[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK1[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK1[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK1[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _timer0_int_handler->_WriteTimer0
    _i2c_int_handler->_i2c_master_int_handler
    _i2c_master_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0   13832
                                              2 BANK1      2     2      0
                                              0 BANK2     62    62      0
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
               _i2c_configure_master
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                         _uart_trans
 ---------------------------------------------------------------------------------
 (1) _uart_trans                                           5     3      2     127
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3347
                                             71 BANK0      8     0      8
                                              0 BANK1      2     2      0
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             45 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2658
                                             67 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2435
                                             55 BANK0     12     6      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                             45 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                             49 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      7     3      4     545
                                             45 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                             51 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             49 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             47 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2969
                                             69 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2969
                                             69 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2746
                                             55 BANK0     14     7      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             45 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     637
                                             45 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      31
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     347
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    3856
                                             27 COMRAM    17    17      0
                    _adc_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3768
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    3734
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    3381
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     796
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4    1034
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   0     0      0      88
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    4430
                                             31 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  0     0      0     121
                         _ConvertADC
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _ConvertADC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    4025
             _i2c_master_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_master_int_handler                              5     5      0    4025
                                             26 BANK0      5     5      0
                 _ToMainHigh_sendmsg
                    _i2c_master_recv
 ---------------------------------------------------------------------------------
 (13) _i2c_master_recv                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    3994
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    3381
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           7     3      4    1034
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_master
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
   _uart_trans

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
   _timer1_int_handler
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_trans_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_master_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2___awmod
           i2_memcpy
       _i2c_master_recv
   _timer0_int_handler
     _ConvertADC
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     3E      81       8       50.4%
BITBANK1           100      0       0       5        0.0%
BANK1              100      4      CD       6       80.1%
BITBANK0            80      0       0       3        0.0%
BANK0               80     4F      53       4       64.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2C      56       1       67.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F7      11        0.0%
DATA                 0      0     1F7      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Mar 03 23:50:24 2014

       _MQ_Main_Willing_to_block 0049                      _SSPSTATbits 000FC7  
      __end_of_ToMainLow_recvmsg 18FE                               bsr 000FE0  
      __end_of_ToMainLow_sendmsg 1AE0                     __CFG_CP0$OFF 000000  
                            l128 05F2                              l521 19B2  
                            l522 19B4                              l519 199A  
                            l560 1184                              l561 1186  
                            l562 1194                              l563 1196  
                            l476 12CC                              l556 1164  
                            l495 1AB4                              l496 1AB6  
                            l789 1B9A  __size_of_uart_trans_int_handler 0068  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                   ___awmod@sign 00B3                   _FromMainLow_MQ 0100  
                            prod 000FF3                              wreg 000FE8  
                   __CFG_IESO$ON 000000                     ?_in_high_int 00AD  
               ??_init_uart_recv 00AF       i2c_slave_int_handler@F5127 004B  
     i2c_slave_int_handler@F5129 0050                             l1101 1242  
                           l4301 11F2                             l4303 11FA  
                           l3521 1822                             l3513 1800  
                           l4307 122E                             l4271 0CD4  
                           l3535 18AC                             l4291 0D6C  
                           l4283 0D40                             l4275 0CF2  
                           l4267 0CAE                             l4277 0D04  
                           l3813 1370                             l3653 05A0  
                           l3661 0638                             l3645 055E  
                           l3727 199C                             l4279 0D0C  
                           l4287 0D54                             l3911 1752  
                           l3655 05F8                             l3761 1166  
                           l3753 1150                             l3825 13C8  
                           l3673 0710                             l3681 075A  
                           l3931 07E0                             l3819 139C  
                           l4299 11E0                             l3835 0F5A  
                           l3667 0676                             l3659 0618  
                           l3917 1776                             l3677 0756  
                           l3669 06C8                             l3863 0972  
                           l3839 0FC4                             l3947 08CE  
                           l3859 08EE                             l3879 1418  
                           l3897 0A6C                             _LATA 000F89  
                           _LATB 000F8A                             i1l55 0080  
                           u3927 1B9C                  _FromMainHigh_MQ 0200  
                  __CFG_FCMEN$ON 000000           ?_block_on_To_msgqueues 0001  
                           _main 048A                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                      main@msgtype 0255  
                     i1_send_msg 0E84                             pclat 000FFA  
                    i2_check_msg 1A5A                             prodh 000FF4  
                           prodl 000FF3                             start 00C6  
                  __CFG_FOSC2$ON 000000                 ?_adc_int_handler 0001  
                     i2_send_msg 0B3C    __size_of_i2c_configure_master 0020  
      ToMainHigh_recvmsg@msgtype 00C5                   send_msg@length 00B9  
                __end_of_OpenADC 12D0      __size_of_timer0_int_handler 0018  
                    _Delay1KTCYx 1B96                            ?_main 0001  
                __end_of___awmod 0D76                            _T0CON 000FD5  
                          _T1CON 000FCD                            i1l413 1662  
                __end_of___lwmod 124C                       i1memcpy@d1 0001  
                          i2l302 015E                            i2l311 02EA  
                          i2l303 0242                            i2l313 0400  
                          i2l307 025C                            i2l316 0436  
                          i1l574 1B6E                       i1memcpy@s1 0003  
                          _RCREG 000FAE                            _RCSTA 000FAB  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                          _SPBRG 000FAF                            _PORTA 000F80  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TXREG 000FAD  
                          _TXSTA 000FAC                       i2memcpy@d1 0080  
                     i2memcpy@s1 0082                     ?_init_queues 0001  
      __size_of_enter_sleep_mode 0006                   i1___awmod@sign 0007  
                __end_of_in_main 18BC       ToMainLow_recvmsg@maxlength 00C9  
        timer0_lthread@msgbuffer 00B3                       _ConvertADC 1C44  
                          tablat 000FF5                            plusw2 000FDB  
                          status 000FD8           _uart_trans_int_handler 15FE  
               __end_ofi1_memcpy 1980               __size_ofi1___awmod 009C  
               __end_ofi2_memcpy 17EC               __size_ofi2___awmod 010E  
                __initialization 1666                     __end_of_main 0774  
    __size_of_timer1_int_handler 000E       __size_of_ToMainLow_recvmsg 0042  
     __size_of_ToMainLow_sendmsg 0026            __size_ofi2_in_low_int 0046  
  __size_of_FromMainHigh_sendmsg 0036                           ??_main 01CB  
                send_msg@msgtype 00BA                    __activetblptr 000002  
                send_msg@tlength 00BE                       _SetChanADC 1B22  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         _ADCON2 000FC0                           _ADRESH 000FC4  
        ??_uart_recv_int_handler 001B                           i1l1331 1AEC  
                         i1l4401 10F6                           i1l4403 10FA  
                         i1l4411 1118                           i1l4415 1126  
                         i1l4407 110E                           i1l4513 0070  
                         i1l4371 196E                           i1l4507 0066  
                         i1l4365 1952                           i1l4391 10C0  
                         i1l4395 10DC                           i1l4467 0EBC  
                         i2l4021 00E6                           i1l4399 10EE  
                         i1l4495 1074                           i2l4041 027A  
                         i2l4033 022A                           i2l4025 011A  
                     _OpenTimer0 1A90                       _OpenTimer1 1980  
                         i2l4061 0382                           i2l4045 0294  
                 __CFG_WDTEN$OFF 000000                           i2l4071 0406  
                         i2l4331 1868                           i2l4323 1846  
                         i2l4431 0DE2                           i2l4079 0450  
                         i2l3551 1314                           i2l3545 130A  
                         i2l3563 159A                           i2l4451 0E7A  
                         i2l4443 0E4E                           i2l4435 0E00  
                         i2l4427 0DBC                           i2l4347 0B98  
                         i2l4437 0E12                           i2l4381 17D4  
                         i2l4439 0E1A                           i2l4447 0E62  
                         i2l4375 17B0                    ??_SleepIfOkay 0084  
             __size_of_ReadUSART 001E                           _OSCCON 000FD3  
                         _SPBRGH 000FB0                           _SSPADD 000FC8  
                         _SSPBUF 000FC9                      ?i1_send_msg 000B  
             timer0_lthread@tptr 00AD                        ??_OpenADC 00AF  
                   i2_in_low_int 1832                      ?i2_send_msg 008A  
                 __CFG_XINST$OFF 000000               __size_of_OpenUSART 0092  
                _i2c_int_handler 1C38                        ??___awmod 00B1  
                _i2c_master_recv 16CC                  _i2c_master_send 08D2  
               OpenTimer0@config 00AD                           _ic_ptr 00CF  
                      ??___lwmod 00B1                    main@msgbuffer 0246  
               __end_of_init_i2c 1594                 OpenTimer1@config 00AD  
                         _memcpy 1730                           clear_0 166C  
                         clear_1 1678                           clear_2 1684  
                ___awmod@divisor 00AF                           _uc_ptr 0055  
                ___awmod@counter 00B2                           main@ic 0264  
                         main@uc 0257                 __end_of_recv_msg 08D2  
                      ??_in_main 00B3                __end_ofi1___awmod 1130  
               __end_of_send_msg 0B3C                     __pdataCOMRAM 004B  
              __end_ofi2___awmod 0E84                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 00B0                   i2___awmod@sign 0086  
       ToMainLow_recvmsg@msgtype 00C5             __size_of_in_high_int 0012  
                    ?_ConvertADC 0001                  __CFG_FOSC$HSPLL 000000  
                     __accesstop 0080          __end_of__initialization 16C2  
     __end_of_ToMainHigh_recvmsg 1940       __end_of_ToMainHigh_sendmsg 1A5A  
    __end_of_init_timer1_lthread 1BD0              __end_of_SleepIfOkay 15FE  
                 __pcstackCOMRAM 0001                     __pidataBANK0 1C48  
         __size_ofi2_in_high_int 0012               __size_of_check_msg 0036  
              __end_of_ReadUSART 1B7E                      ?_SetChanADC 0001  
            __size_ofi1_send_msg 00C0                        ?i1_memcpy 0001  
  __size_of_InterruptHandlerHigh 134A      __end_of_InterruptHandlerLow 00C6  
                      ?i2_memcpy 0080                    _ToMainHigh_MQ 0143  
               _enter_sleep_mode 1C3E              __size_ofi2_send_msg 012C  
           timer1_lthread@length 00CB                    ReadUSART@data 0001  
              __end_of_OpenUSART 11C2                    check_msg@qptr 00AD  
           timer1_lthread@retval 01CA          ??_block_on_To_msgqueues 00B3  
           __size_of_init_queues 006E                       __pbssBANK1 0100  
                     __pbssBANK2 0200                      ?_OpenTimer0 0001  
                    ?_OpenTimer1 0001                       __pnvCOMRAM 0055  
        __end_of_i2c_int_handler 1C3E                     ?i2_check_msg 0080  
        __end_of_i2c_master_recv 1730          __end_of_i2c_master_send 0A10  
             timer1_lthread@tptr 00C7         ??_i2c_master_int_handler 009A  
              recv_msg@maxlength 00B9                  recv_msg@msgtype 00BA  
                recv_msg@tlength 00C1                     ?_Delay1KTCYx 0001  
               WriteTimer0@timer 0082                          ?_memcpy 00AD  
               WriteTimer1@timer 0003                    ??_WriteTimer0 0082  
                  ??_WriteTimer1 0003              __size_of_ConvertADC 0004  
        __size_of_timer0_lthread 0012          __size_of_timer1_lthread 0072  
   __end_of_i2c_configure_master 1B22                       ??i1_memcpy 0007  
                     ??i2_memcpy 0086                 i1send_msg@length 000D  
                  i2_in_high_int 1C06                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
        ?_uart_trans_int_handler 0001                __end_of_check_msg 1A24  
                      ?_init_i2c 00AD                      _SleepIfOkay 1594  
                      ?_recv_msg 00B7                          _OpenADC 124C  
                     _in_low_int 17EC                          __Hparam 0000  
            __size_of_SetChanADC 0020                        ?_send_msg 00B7  
                        __Lparam 0000       __end_of_timer0_int_handler 1B96  
               init_uart_recv@uc 00AD                          ___awmod 0C68  
                        ___lwmod 11C2                  __CFG_STVREN$OFF 000000  
                        __pcinit 1666                  __size_of_memcpy 005E  
       __size_of_adc_int_handler 0022                       _init_queue 13D0  
                        __ramtop 0400              __size_of_OpenTimer0 002A  
            __size_of_OpenTimer1 0038                          __ptext0 048A  
                        __ptext1 0F44                          __ptext2 144A  
                        __ptext3 11C2                          __ptext4 19B8  
                        __ptext5 0A10                          __ptext6 1BAC  
                        __ptext7 1B42                          __ptext8 1BBE  
                        __ptext9 14BC                        _T0CONbits 000FD5  
                        _in_main 1878                        _T1CONbits 000FCD  
               ___awmod@dividend 00AD              __end_of_WriteTimer0 1C06  
            __end_of_WriteTimer1 1BF4                   ?i2_in_high_int 0080  
 __end_of_uart_trans_int_handler 1666                   OpenADC@config2 00AD  
                        main@msg 0243                   __pintcode_body 12D0  
           end_of_initialization 16C2          timer1_lthread@msgbuffer 00CD  
   __end_of_FromMainHigh_sendmsg 19EE   __size_of_uart_recv_int_handler 009C  
     FromMainHigh_sendmsg@length 00C6                          memcpy@d 00B3  
                        memcpy@n 00B1                          memcpy@s 00B5  
  __end_of_uart_recv_int_handler 1094                       ??_init_i2c 00AF  
                  __Lmediumconst 0000                          int_func 12D0  
                   ??i1_send_msg 0011          __size_of_init_uart_recv 001E  
               ?_i2c_int_handler 0001                 ?_i2c_master_recv 0001  
               ?_i2c_master_send 00AD                       ??_recv_msg 00BE  
                   ??i2_send_msg 0090                       ??_send_msg 00BD  
__size_of_i2c_master_int_handler 03C0       __end_of_timer1_int_handler 1C26  
                      _RCSTAbits 000FAB                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 0096  
                     _uart_trans 0F44               __end_ofi1_send_msg 0F44  
    FromMainHigh_sendmsg@msgtype 00C3                        _TRISCbits 000F94  
                      i1___awmod 1094               __end_ofi2_send_msg 0C68  
                      i2___awmod 0D76                     ??_ConvertADC 0080  
                      _TXSTAbits 000FAC                       main@length 0256  
                    ?_in_low_int 00AF            timer0_lthread@msgtype 00AF  
           _i2c_configure_master 1B02             __size_ofi2_check_msg 0036  
       __end_of_enter_sleep_mode 1C44               _ToMainHigh_recvmsg 18FE  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 1A24  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
      i2c_master_send@recvlength 00AD                    __pidataCOMRAM 1C26  
                 _timer0_lthread 1BAC                      ?_init_queue 00AD  
                      i2memcpy@d 0086                      _WriteTimer0 1BF4  
                    _WriteTimer1 1BE2                        i2memcpy@n 0084  
                      i2memcpy@s 0088               __end_of_ConvertADC 1C48  
                 _timer1_lthread 144A                   __end_of_memcpy 178E  
              _enable_interrupts 1C30             __size_of_Delay1KTCYx 0016  
                   ??_SetChanADC 00AD        i2c_master_send@sendlength 00B3  
            ?_ToMainHigh_recvmsg 00C5                  ??i2_in_high_int 0082  
            ?_ToMainHigh_sendmsg 0096               ?_enable_interrupts 0001  
            start_initialization 1666           _i2c_master_int_handler 00CA  
                  ??_in_high_int 00AF                        _ReadUSART 1B60  
              ??_adc_int_handler 0001                       ?i1___awmod 0001  
              __size_ofi1_memcpy 0040                __size_ofi2_memcpy 005E  
      i2c_master_send@slave_addr 00B0                       ?i2___awmod 0080  
            ??_enable_interrupts 00AD                     ??_OpenTimer0 00AD  
                   ??_OpenTimer1 00AD   __size_of_block_on_To_msgqueues 007E  
  __end_of_block_on_To_msgqueues 13D0                        _OpenUSART 1130  
   __end_of_InterruptHandlerHigh 1352                       init_i2c@ic 00AD  
           ??_ToMainHigh_recvmsg 00C9             ??_ToMainHigh_sendmsg 0099  
          ?_i2c_configure_master 0001               __end_of_SetChanADC 1B42  
         __end_of_timer0_lthread 1BBE                      __pdataBANK0 00D1  
         __end_of_timer1_lthread 14BC               i1___awmod@dividend 0001  
      __end_of_enable_interrupts 1C38                         ??_memcpy 00B3  
          timer1_lthread@msgtype 00C9                      ?_uart_trans 00AD  
           _FromMainHigh_sendmsg 19B8     __size_of_init_timer1_lthread 0012  
             __end_of_OpenTimer0 1ABA               __end_of_OpenTimer1 19B8  
                    __pbssCOMRAM 002D                       ?_ReadUSART 0001  
                  ??_init_queues 00B1                    __pcstackBANK0 0080  
                  __pcstackBANK1 01C9                    __pcstackBANK2 0243  
            __size_of_in_low_int 0046                        _adcbuffer 002D  
            __CFG_CCP2MX$DEFAULT 000000                  Delay1KTCYx@unit 00AD  
       ToMainLow_sendmsg@msgtype 0017     __size_of_InterruptHandlerLow 00AE  
            __end_of_in_high_int 1BE2                       ?_OpenUSART 00AD  
                   ?_SleepIfOkay 0001            ToMainLow_recvmsg@data 00C7  
                   _ToMainLow_MQ 0186              __size_of_init_queue 007A  
                 _init_uart_recv 1B42                        _check_msg 19EE  
                      __pnvBANK0 00CF                __size_of_init_i2c 006A  
              OpenADC@portconfig 00AE                         ?_OpenADC 00AD  
                   recv_msg@data 00BC                     recv_msg@qmsg 00C3  
                   recv_msg@slot 00C0                     recv_msg@qptr 00B7  
              __size_of_recv_msg 015E                        __pintcode 0008  
              __size_of_send_msg 012C                         ?___awmod 00AD  
                ?_timer0_lthread 00AD                         ?___lwmod 00AD  
                ?_timer1_lthread 00C7            ?_FromMainHigh_sendmsg 00C3  
                    __pintcodelo 0018           ToMainHigh_recvmsg@data 00C7  
                       ?_in_main 00B1                WriteTimer0@timer0 0080  
             _timer0_int_handler 1B7E                WriteTimer1@timer1 0001  
                    ??i1___awmod 0005            ToMainLow_sendmsg@data 0018  
                    ??i2___awmod 0084              ?_timer0_int_handler 0001  
         __end_of_init_uart_recv 1B60              __end_of_init_queues 152A  
          i2c_master_recv@length 0080              __size_of_uart_trans 00B4  
                  OpenADC@config 00B1                         _LATBbits 000F8A  
         ??_i2c_configure_master 00AD                  i2check_msg@qptr 0080  
                     ?_check_msg 00AD                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                    ?i2_in_low_int 0082  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 0097  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                      main@F5211 00D1             ??_timer0_int_handler 0084  
     __size_of_enable_interrupts 0008                i1send_msg@msgtype 000E  
              i1send_msg@tlength 0012                       _ADCON0bits 000FC2  
           timer0_lthread@length 00B1               _timer1_int_handler 1C18  
                       i1_memcpy 1940             _InterruptHandlerHigh 0008  
                    ??_ReadUSART 0001                         i2_memcpy 178E  
           timer0_lthread@msgval 00B5                      _in_high_int 1BD0  
                   send_msg@data 00BB                     send_msg@qmsg 00C1  
                   send_msg@slot 00C0                     send_msg@qptr 00B7  
                      copy_data0 16B6              ?_timer1_int_handler 0001  
             i2___awmod@dividend 0080                  ?_init_uart_recv 00AD  
                    ??_OpenUSART 00AF                  OpenUSART@config 00B2  
                 ??i2_in_low_int 0084                         __Hparam0 0000  
          _uart_recv_int_handler 0FF8                     ??_in_low_int 00B1  
                       __Lparam0 0000                 __size_of_OpenADC 0084  
              ?_enter_sleep_mode 0001           ??_FromMainHigh_sendmsg 00C6  
              i1___awmod@divisor 0003             ??_timer1_int_handler 0005  
              i1___awmod@counter 0006                  _adc_int_handler 1AE0  
       __size_of_i2c_int_handler 0006                 __size_of___awmod 010E  
             ??_enter_sleep_mode 0080         __size_of_i2c_master_recv 0064  
       __size_of_i2c_master_send 013E                 __size_of___lwmod 008A  
                   ??_init_queue 00AF                     ?_WriteTimer0 0080  
                   ?_WriteTimer1 0001         FromMainHigh_sendmsg@data 00C4  
        ToMainLow_sendmsg@length 001A          ?_i2c_master_int_handler 0001  
              main@t0thread_data 0251            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 0044                i2send_msg@msgtype 008D  
    ToMainHigh_recvmsg@maxlength 00C9                i2send_msg@tlength 0091  
        init_timer1_lthread@tptr 00AD                      _init_queues 14BC  
             __end_of_in_low_int 1832                         __ptext10 13D0  
                       __ptext11 152A                         __ptext20 1B96  
                       __ptext12 08D2                         __ptext21 18BC  
                       __ptext13 1B02                         __ptext30 124C  
                       __ptext22 18FE                         __ptext14 1C30  
                       __ptext23 0774                         __ptext15 1352  
                       __ptext40 1BE2                         __ptext32 15FE  
                       __ptext24 1730                         __ptext16 1878  
                       __ptext41 1AE0                         __ptext33 0FF8  
                       __ptext25 0C68                         __ptext17 17EC  
                       __ptext50 0B3C                         __ptext34 1ABA  
                       __ptext26 1B22                         __ptext18 1BD0  
                       __ptext51 178E                         __ptext43 1B7E  
                       __ptext35 0E84                         __ptext27 1130  
                       __ptext19 19EE                         __ptext52 0D76  
                       __ptext44 1BF4                         __ptext36 1940  
                       __ptext28 1980                         __ptext53 1594  
                       __ptext45 1C44                         __ptext37 1094  
                       __ptext29 1A90                         __ptext54 1832  
                       __ptext46 1C38                         __ptext38 1B60  
                       __ptext55 1C06                         __ptext47 00CA  
                       __ptext39 1C18                         __ptext56 1A5A  
                       __ptext48 16CC                         __ptext57 1C3E  
                       __ptext49 1A24                   i1send_msg@data 000F  
                 i1send_msg@qmsg 0015                   i1send_msg@slot 0014  
                 i1send_msg@qptr 000B                         _init_i2c 152A  
            _init_timer1_lthread 1BBE                    __size_of_main 02EA  
                  ??i2_check_msg 0082                main@t1thread_data 0253  
                    ??_check_msg 00AF               __end_of_init_queue 144A  
           __size_of_SleepIfOkay 006A                         _recv_msg 0774  
                       _send_msg 0A10                   init_queue@qptr 00AD  
                  ??_Delay1KTCYx 00AD   __end_of_i2c_master_int_handler 048A  
               uart_trans@length 00B1                     ??_uart_trans 00AF  
            _InterruptHandlerLow 0018             ?_init_timer1_lthread 00AD  
       ??_uart_trans_int_handler 0001                i2___awmod@divisor 0082  
              i2___awmod@counter 0085                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                   OpenUSART@spbrg 00AD  
                       memcpy@d1 00AD                         memcpy@s1 00AF  
          __end_ofi2_in_high_int 1C18                 i2send_msg@length 008C  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001                 ___lwmod@dividend 00AD  
         ?_uart_recv_int_handler 0001               __end_of_uart_trans 0FF8  
              SetChanADC@channel 00AE            _block_on_To_msgqueues 1352  
               ??_timer0_lthread 00B5      __size_of_ToMainHigh_recvmsg 0042  
        __end_of_adc_int_handler 1B02      __size_of_ToMainHigh_sendmsg 0036  
                     _OSCCONbits 000FD3                 ??_timer1_lthread 01C9  
       ToMainHigh_sendmsg@length 0099              __end_ofi2_check_msg 1A90  
          ??_init_timer1_lthread 00AF           ??_InterruptHandlerHigh 009F  
              _ToMainLow_recvmsg 18BC                _ToMainLow_sendmsg 1ABA  
             main@last_reg_recvd 0245                  ___lwmod@divisor 00AF  
           __end_ofi2_in_low_int 1878               ?_ToMainLow_recvmsg 00C5  
            __end_of_Delay1KTCYx 1BAC                ??_i2c_int_handler 009F  
                ___lwmod@counter 00B2               ?_ToMainLow_sendmsg 0017  
              ??_i2c_master_recv 0080                ??_i2c_master_send 00B1  
             i2c_master_send@msg 00AE                   uart_trans@data 00AD  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                 i2send_msg@data 008E            ??_InterruptHandlerLow 001C  
            ??_ToMainLow_recvmsg 00C9                   i2send_msg@qmsg 0094  
                 i2send_msg@slot 0093                   i2send_msg@qptr 008A  
            ??_ToMainLow_sendmsg 001A                     _USART_Status 004A  
