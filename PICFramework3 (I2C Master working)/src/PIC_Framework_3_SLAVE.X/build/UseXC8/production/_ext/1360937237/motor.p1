Version 3.2 HI-TECH Software Intermediate Code
"21 ../src/my_uart.h
[v _uart_trans `(v ~T0 @X0 0 ef2`uc`*uc ]
[; ;messages.h: 10: typedef struct __msg {
[; ;messages.h: 11: unsigned char full;
[; ;messages.h: 12: unsigned char length;
[; ;messages.h: 13: unsigned char msgtype;
[; ;messages.h: 14: unsigned char data[10];
[; ;messages.h: 15: } msg;
[; ;messages.h: 17: typedef struct __msg_queue {
[; ;messages.h: 18: msg queue[5];
[; ;messages.h: 19: unsigned char cur_write_ind;
[; ;messages.h: 20: unsigned char cur_read_ind;
[; ;messages.h: 21: } msg_queue;
"23 ../src/messages.h
[v _UART_timeout `ui ~T0 @X0 1 e ]
[; ;messages.h: 23: unsigned int UART_timeout;
[; ;messages.h: 44: void init_queues(void);
[; ;messages.h: 48: void SleepIfOkay(void);
[; ;messages.h: 52: void block_on_To_msgqueues(void);
[; ;messages.h: 58: signed char ToMainLow_sendmsg(unsigned char,unsigned char,void *);
[; ;messages.h: 59: signed char ToMainLow_recvmsg(unsigned char,unsigned char *,void *);
[; ;messages.h: 65: signed char ToMainHigh_sendmsg(unsigned char,unsigned char,void *);
[; ;messages.h: 66: signed char ToMainHigh_recvmsg(unsigned char,unsigned char *,void *);
[; ;messages.h: 72: signed char FromMainLow_sendmsg(unsigned char,unsigned char,void *);
[; ;messages.h: 73: signed char FromMainLow_recvmsg(unsigned char,unsigned char *,void *);
[; ;messages.h: 79: signed char FromMainHigh_sendmsg(unsigned char,unsigned char,void *);
[; ;messages.h: 80: signed char FromMainHigh_recvmsg(unsigned char,unsigned char *,void *);
[; ;my_uart.h: 10: typedef struct __uart_comm {
[; ;my_uart.h: 11: unsigned char buffer[5];
[; ;my_uart.h: 12: unsigned char buflen;
[; ;my_uart.h: 13: unsigned char txBuff[5];
[; ;my_uart.h: 14: unsigned char txBuflen;
[; ;my_uart.h: 15: unsigned char txBufind;
[; ;my_uart.h: 16: } uart_comm;
[; ;my_uart.h: 18: void init_uart_recv(uart_comm *);
[; ;my_uart.h: 19: void uart_recv_int_handler(void);
[; ;my_uart.h: 21: void uart_trans(unsigned char, unsigned char *);
[; ;my_uart.h: 22: void uart_trans_int_handler();
"14 ../src/motor.h
[v _distDesired `uc ~T0 @X0 1 e ]
[; ;motor.h: 14: unsigned char distDesired;
"15
[v _distMoved `uc ~T0 @X0 1 e ]
[; ;motor.h: 15: unsigned char distMoved;
[; ;motor.h: 18: void motorMove(unsigned char , unsigned char*);
"5 ../src/motor.c
[v _motorMove `(v ~T0 @X0 1 ef2`uc`*uc ]
"6
{
[; ;motor.c: 5: void motorMove(unsigned char distance, unsigned char* direction)
[; ;motor.c: 6: {
[e :U _motorMove ]
"5
[v _distance `uc ~T0 @X0 1 r1 ]
[v _direction `*uc ~T0 @X0 1 r2 ]
"6
[f ]
[; ;motor.c: 7: distDesired = distance;
"7
[e = _distDesired _distance ]
[; ;motor.c: 8: uart_trans(2, direction);
"8
[e ( _uart_trans (2 , -> -> 2 `i `uc _direction ]
[; ;motor.c: 9: }
"9
[e :UE 4 ]
}
