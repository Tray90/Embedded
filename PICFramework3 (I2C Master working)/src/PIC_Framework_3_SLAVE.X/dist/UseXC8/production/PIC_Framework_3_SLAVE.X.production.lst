

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Fri Mar 21 13:59:05 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    82                           	psect	param0,global,class=BANK0,space=1,delta=1
    83  0000                     
    84                           	psect	idataCOMRAM
    85  002400                     __pidataCOMRAM:
    86                           	opt stack 0
    87                           
    88                           ;initializer for timer0_int_handler@F5112
    89  002400  03                 	db	3
    90  002401  00                 	db	0
    91  002402  00                 	db	0
    92  002403  00                 	db	0
    93  002404  00                 	db	0
    94                           
    95                           	psect	idataBANK0
    96  0023EC                     __pidataBANK0:
    97                           	opt stack 0
    98                           
    99                           ;initializer for i2c_slave_int_handler@F5133
   100  0023EC  01                 	db	1
   101  0023ED  01                 	db	1
   102  0023EE  02                 	db	2
   103  0023EF  03                 	db	3
   104  0023F0  06                 	db	6
   105                           
   106                           ;initializer for i2c_slave_int_handler@F5135
   107  0023F1  9F                 	db	159
   108  0023F2  1F                 	db	31
   109                           
   110                           	psect	idataBANK1
   111  002405                     __pidataBANK1:
   112                           	opt stack 0
   113                           
   114                           ;initializer for main@F5217
   115  002405  01                 	db	1
   116  002406  02                 	db	2
   117  0000                     _ADCON0	set	4034
   118  0000                     _ADCON0bits	set	4034
   119  0000                     _ADCON1	set	4033
   120  0000                     _ADCON2	set	4032
   121  0000                     _ADRESH	set	4036
   122  0000                     _INTCON2bits	set	4081
   123  0000                     _INTCONbits	set	4082
   124  0000                     _IPR1bits	set	3999
   125  0000                     _LATA	set	3977
   126  0000                     _LATB	set	3978
   127  0000                     _LATBbits	set	3978
   128  0000                     _OSCCON	set	4051
   129  0000                     _OSCCONbits	set	4051
   130  0000                     _OSCTUNEbits	set	3995
   131  0000                     _PIE1bits	set	3997
   132  0000                     _PIR1bits	set	3998
   133  0000                     _PORTA	set	3968
   134  0000                     _PORTAbits	set	3968
   135  0000                     _RCONbits	set	4048
   136  0000                     _RCREG	set	4014
   137  0000                     _RCSTA	set	4011
   138  0000                     _RCSTAbits	set	4011
   139  0000                     _SPBRG	set	4015
   140  0000                     _SPBRGH	set	4016
   141  0000                     _SSPADD	set	4040
   142  0000                     _SSPBUF	set	4041
   143  0000                     _SSPCON1	set	4038
   144  0000                     _SSPCON1bits	set	4038
   145  0000                     _SSPCON2	set	4037
   146  0000                     _SSPCON2bits	set	4037
   147  0000                     _SSPSTAT	set	4039
   148  0000                     _SSPSTATbits	set	4039
   149  0000                     _T0CON	set	4053
   150  0000                     _T0CONbits	set	4053
   151  0000                     _T1CON	set	4045
   152  0000                     _T1CONbits	set	4045
   153  0000                     _TMR0H	set	4055
   154  0000                     _TMR0L	set	4054
   155  0000                     _TMR1H	set	4047
   156  0000                     _TMR1L	set	4046
   157  0000                     _TRISA	set	3986
   158  0000                     _TRISB	set	3987
   159  0000                     _TRISC	set	3988
   160  0000                     _TRISCbits	set	3988
   161  0000                     _TXREG	set	4013
   162  0000                     _TXSTA	set	4012
   163  0000                     _TXSTAbits	set	4012
   164                           
   165                           	psect	nvCOMRAM
   166  000056                     __pnvCOMRAM:
   167                           	opt stack 0
   168  000056                     _uc_ptr:
   169                           	opt stack 0
   170  000056                     	ds	2
   171                           
   172                           	psect	nvBANK0
   173  0000C3                     __pnvBANK0:
   174                           	opt stack 0
   175  0000C3                     _ic_ptr:
   176                           	opt stack 0
   177  0000C3                     	ds	2
   178                           
   179                           ; #config settings
   180  0000                     
   181                           	psect	cinit
   182  001A3A                     __pcinit:
   183                           	opt stack 0
   184  001A3A                     start_initialization:
   185                           	opt stack 0
   186  001A3A                     __initialization:
   187                           	opt stack 0
   188                           
   189                           ; Clear objects allocated to BANK2 (134 bytes)
   190  001A3A  EE02  F000         	lfsr	0,__pbssBANK2
   191  001A3E  0E86               	movlw	134
   192  001A40                     clear_0:
   193  001A40  6AEE               	clrf	postinc0,c
   194  001A42  06E8               	decf	wreg,f,c
   195  001A44  E1FD               	bnz	clear_0
   196                           
   197                           ; Clear objects allocated to BANK1 (134 bytes)
   198  001A46  EE01  F000         	lfsr	0,__pbssBANK1
   199  001A4A  0E86               	movlw	134
   200  001A4C                     clear_1:
   201  001A4C  6AEE               	clrf	postinc0,c
   202  001A4E  06E8               	decf	wreg,f,c
   203  001A50  E1FD               	bnz	clear_1
   204                           
   205                           ; Clear objects allocated to COMRAM (36 bytes)
   206  001A52  EE00  F02D         	lfsr	0,__pbssCOMRAM
   207  001A56  0E24               	movlw	36
   208  001A58                     clear_2:
   209  001A58  6AEE               	clrf	postinc0,c
   210  001A5A  06E8               	decf	wreg,f,c
   211  001A5C  E1FD               	bnz	clear_2
   212                           
   213                           ; Initialize objects allocated to BANK1 (2 bytes)
   214                           ; load TBLPTR registers with __pidataBANK1
   215  001A5E  0E05               	movlw	low __pidataBANK1
   216  001A60  6EF6               	movwf	tblptrl,c
   217  001A62  0E24               	movlw	high __pidataBANK1
   218  001A64  6EF7               	movwf	tblptrh,c
   219  001A66  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   220  001A68  6EF8               	movwf	tblptru,c
   221  001A6A  0009               	tblrd		*+	;fetch initializer
   222  001A6C  CFF5 F1EA          	movff	tablat,__pdataBANK1
   223  001A70  0009               	tblrd		*+	;fetch initializer
   224  001A72  CFF5 F1EB          	movff	tablat,__pdataBANK1+1
   225                           
   226                           ; Initialize objects allocated to BANK0 (7 bytes)
   227                           ; load TBLPTR registers with __pidataBANK0
   228  001A76  0EEC               	movlw	low __pidataBANK0
   229  001A78  6EF6               	movwf	tblptrl,c
   230  001A7A  0E23               	movlw	high __pidataBANK0
   231  001A7C  6EF7               	movwf	tblptrh,c
   232  001A7E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   233  001A80  6EF8               	movwf	tblptru,c
   234  001A82  EE00  F0BC         	lfsr	0,__pdataBANK0
   235  001A86  EE10 F007          	lfsr	1,7
   236  001A8A                     copy_data0:
   237  001A8A  0009               	tblrd		*+
   238  001A8C  CFF5 FFEE          	movff	tablat,postinc0
   239  001A90  50E5               	movf	postdec1,w,c
   240  001A92  50E1               	movf	fsr1l,w,c
   241  001A94  E1FA               	bnz	copy_data0
   242                           
   243                           ; Initialize objects allocated to COMRAM (5 bytes)
   244                           ; load TBLPTR registers with __pidataCOMRAM
   245  001A96  0E00               	movlw	low __pidataCOMRAM
   246  001A98  6EF6               	movwf	tblptrl,c
   247  001A9A  0E24               	movlw	high __pidataCOMRAM
   248  001A9C  6EF7               	movwf	tblptrh,c
   249  001A9E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   250  001AA0  6EF8               	movwf	tblptru,c
   251  001AA2  EE00  F051         	lfsr	0,__pdataCOMRAM
   252  001AA6  EE10 F005          	lfsr	1,5
   253  001AAA                     copy_data1:
   254  001AAA  0009               	tblrd		*+
   255  001AAC  CFF5 FFEE          	movff	tablat,postinc0
   256  001AB0  50E5               	movf	postdec1,w,c
   257  001AB2  50E1               	movf	fsr1l,w,c
   258  001AB4  E1FA               	bnz	copy_data1
   259  001AB6                     end_of_initialization:
   260                           	opt stack 0
   261  001AB6                     __end_of__initialization:
   262                           	opt stack 0
   263  001AB6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   264  001AB8  6EF8               	movwf	tblptru,c
   265  001ABA  0100               	movlb	0
   266  001ABC  EF9C  F004         	goto	_main	;jump to C main() function
   267                           tblptru	equ	0xFF8
   268                           tblptrh	equ	0xFF7
   269                           tblptrl	equ	0xFF6
   270                           tablat	equ	0xFF5
   271                           postinc0	equ	0xFEE
   272                           wreg	equ	0xFE8
   273                           postdec1	equ	0xFE5
   274                           fsr1l	equ	0xFE1
   275                           
   276                           	psect	bssCOMRAM
   277  00002D                     __pbssCOMRAM:
   278                           	opt stack 0
   279  00002D                     _adcbuffer:
   280                           	opt stack 0
   281  00002D                     	ds	28
   282  000049                     _UART_timeout:
   283                           	opt stack 0
   284  000049                     	ds	2
   285  00004B                     timer0_int_handler@F5114:
   286                           	opt stack 0
   287  00004B                     	ds	2
   288  00004D                     _MQ_Main_Willing_to_block:
   289                           	opt stack 0
   290  00004D                     	ds	1
   291  00004E                     _USART_Status:
   292                           	opt stack 0
   293  00004E                     	ds	1
   294  00004F                     _distDesired:
   295                           	opt stack 0
   296  00004F                     	ds	1
   297  000050                     _distMoved:
   298                           	opt stack 0
   299  000050                     	ds	1
   300                           tblptru	equ	0xFF8
   301                           tblptrh	equ	0xFF7
   302                           tblptrl	equ	0xFF6
   303                           tablat	equ	0xFF5
   304                           postinc0	equ	0xFEE
   305                           wreg	equ	0xFE8
   306                           postdec1	equ	0xFE5
   307                           fsr1l	equ	0xFE1
   308                           
   309                           	psect	dataCOMRAM
   310  000051                     __pdataCOMRAM:
   311                           	opt stack 0
   312  000051                     timer0_int_handler@F5112:
   313                           	opt stack 0
   314  000051                     	ds	5
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           postdec1	equ	0xFE5
   322                           fsr1l	equ	0xFE1
   323                           
   324                           	psect	dataBANK0
   325  0000BC                     __pdataBANK0:
   326                           	opt stack 0
   327  0000BC                     i2c_slave_int_handler@F5133:
   328                           	opt stack 0
   329  0000BC                     	ds	5
   330  0000C1                     i2c_slave_int_handler@F5135:
   331                           	opt stack 0
   332  0000C1                     	ds	2
   333                           tblptru	equ	0xFF8
   334                           tblptrh	equ	0xFF7
   335                           tblptrl	equ	0xFF6
   336                           tablat	equ	0xFF5
   337                           postinc0	equ	0xFEE
   338                           wreg	equ	0xFE8
   339                           postdec1	equ	0xFE5
   340                           fsr1l	equ	0xFE1
   341                           
   342                           	psect	bssBANK1
   343  000100                     __pbssBANK1:
   344                           	opt stack 0
   345  000100                     _ToMainHigh_MQ:
   346                           	opt stack 0
   347  000100                     	ds	67
   348  000143                     _ToMainLow_MQ:
   349                           	opt stack 0
   350  000143                     	ds	67
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           postinc0	equ	0xFEE
   356                           wreg	equ	0xFE8
   357                           postdec1	equ	0xFE5
   358                           fsr1l	equ	0xFE1
   359                           
   360                           	psect	dataBANK1
   361  0001EA                     __pdataBANK1:
   362                           	opt stack 0
   363  0001EA                     main@F5217:
   364                           	opt stack 0
   365  0001EA                     	ds	2
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           postdec1	equ	0xFE5
   373                           fsr1l	equ	0xFE1
   374                           
   375                           	psect	bssBANK2
   376  000200                     __pbssBANK2:
   377                           	opt stack 0
   378  000200                     _FromMainHigh_MQ:
   379                           	opt stack 0
   380  000200                     	ds	67
   381  000243                     _FromMainLow_MQ:
   382                           	opt stack 0
   383  000243                     	ds	67
   384                           tblptru	equ	0xFF8
   385                           tblptrh	equ	0xFF7
   386                           tblptrl	equ	0xFF6
   387                           tablat	equ	0xFF5
   388                           postinc0	equ	0xFEE
   389                           wreg	equ	0xFE8
   390                           postdec1	equ	0xFE5
   391                           fsr1l	equ	0xFE1
   392                           
   393                           	psect	cstackBANK1
   394  000186                     __pcstackBANK1:
   395                           	opt stack 0
   396  000186                     ??_SetChanADC:
   397  000186                     ?_in_high_int:
   398                           	opt stack 0
   399  000186                     ?___awmod:
   400                           	opt stack 0
   401  000186                     ?___lwmod:
   402                           	opt stack 0
   403  000186                     i2c_master_send@recvlength:
   404                           	opt stack 0
   405  000186                     i2c_configure_slave@addr:
   406                           	opt stack 0
   407  000186                     OpenADC@config2:
   408                           	opt stack 0
   409  000186                     OpenTimer0@config:
   410                           	opt stack 0
   411  000186                     OpenTimer1@config:
   412                           	opt stack 0
   413  000186                     Delay1KTCYx@unit:
   414                           	opt stack 0
   415  000186                     init_queue@qptr:
   416                           	opt stack 0
   417  000186                     check_msg@qptr:
   418                           	opt stack 0
   419  000186                     init_i2c@ic:
   420                           	opt stack 0
   421  000186                     init_uart_recv@uc:
   422                           	opt stack 0
   423  000186                     uart_trans@data:
   424                           	opt stack 0
   425  000186                     timer0_lthread@tptr:
   426                           	opt stack 0
   427  000186                     init_timer1_lthread@tptr:
   428                           	opt stack 0
   429  000186                     OpenUSART@spbrg:
   430                           	opt stack 0
   431  000186                     ___awmod@dividend:
   432                           	opt stack 0
   433  000186                     ___lwmod@dividend:
   434                           	opt stack 0
   435  000186                     memcpy@d1:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x0
   439  000186                     	ds	1
   440  000187                     OpenADC@portconfig:
   441                           	opt stack 0
   442  000187                     SetChanADC@channel:
   443                           	opt stack 0
   444  000187                     i2c_master_send@msg:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x1
   448  000187                     	ds	1
   449  000188                     ??_OpenUSART:
   450  000188                     ??_OpenADC:
   451  000188                     ??_uart_trans:
   452  000188                     ??_init_queue:
   453  000188                     ??_check_msg:
   454  000188                     ?_in_low_int:
   455                           	opt stack 0
   456  000188                     timer0_lthread@msgtype:
   457                           	opt stack 0
   458  000188                     ___awmod@divisor:
   459                           	opt stack 0
   460  000188                     ___lwmod@divisor:
   461                           	opt stack 0
   462  000188                     memcpy@s1:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x2
   466  000188                     	ds	1
   467  000189                     init_queue@i:
   468                           	opt stack 0
   469  000189                     i2c_master_send@slave_addr:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0x3
   473  000189                     	ds	1
   474  00018A                     ??_init_queues:
   475  00018A                     ??_i2c_master_send:
   476  00018A                     ??___awmod:
   477  00018A                     ??___lwmod:
   478  00018A                     ?_in_main:
   479                           	opt stack 0
   480  00018A                     uart_trans@length:
   481                           	opt stack 0
   482  00018A                     OpenADC@config:
   483                           	opt stack 0
   484  00018A                     timer0_lthread@length:
   485                           	opt stack 0
   486  00018A                     memcpy@n:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x4
   490  00018A                     	ds	1
   491  00018B                     OpenUSART@config:
   492                           	opt stack 0
   493  00018B                     ___awmod@counter:
   494                           	opt stack 0
   495  00018B                     ___lwmod@counter:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x5
   499  00018B                     	ds	1
   500  00018C                     ??_block_on_To_msgqueues:
   501  00018C                     i2c_master_send@sendlength:
   502                           	opt stack 0
   503  00018C                     ___awmod@sign:
   504                           	opt stack 0
   505  00018C                     timer0_lthread@msgbuffer:
   506                           	opt stack 0
   507  00018C                     memcpy@d:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x6
   511  00018C                     	ds	2
   512  00018E                     timer0_lthread@msgval:
   513                           	opt stack 0
   514  00018E                     memcpy@s:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x8
   518  00018E                     	ds	2
   519  000190                     send_msg@qptr:
   520                           	opt stack 0
   521  000190                     recv_msg@qptr:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0xA
   525  000190                     	ds	2
   526  000192                     send_msg@length:
   527                           	opt stack 0
   528  000192                     recv_msg@maxlength:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0xC
   532  000192                     	ds	1
   533  000193                     send_msg@msgtype:
   534                           	opt stack 0
   535  000193                     recv_msg@msgtype:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0xD
   539  000193                     	ds	1
   540  000194                     send_msg@data:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0xE
   544  000194                     	ds	1
   545  000195                     recv_msg@data:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0xF
   549  000195                     	ds	1
   550  000196                     ??_send_msg:
   551                           
   552                           ; 0 bytes @ 0x10
   553  000196                     	ds	1
   554  000197                     ??_recv_msg:
   555  000197                     send_msg@tlength:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x11
   559  000197                     	ds	2
   560  000199                     send_msg@slot:
   561                           	opt stack 0
   562  000199                     recv_msg@slot:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x13
   566  000199                     	ds	1
   567  00019A                     send_msg@qmsg:
   568                           	opt stack 0
   569  00019A                     recv_msg@tlength:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0x14
   573  00019A                     	ds	2
   574  00019C                     FromMainHigh_sendmsg@msgtype:
   575                           	opt stack 0
   576  00019C                     recv_msg@qmsg:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x16
   580  00019C                     	ds	1
   581  00019D                     FromMainHigh_sendmsg@data:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x17
   585  00019D                     	ds	1
   586  00019E                     ToMainLow_recvmsg@msgtype:
   587                           	opt stack 0
   588  00019E                     ToMainHigh_recvmsg@msgtype:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x18
   592  00019E                     	ds	1
   593  00019F                     FromMainHigh_sendmsg@length:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0x19
   597  00019F                     	ds	1
   598  0001A0                     ToMainLow_recvmsg@data:
   599                           	opt stack 0
   600  0001A0                     ToMainHigh_recvmsg@data:
   601                           	opt stack 0
   602  0001A0                     timer1_lthread@tptr:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x1A
   606  0001A0                     	ds	2
   607  0001A2                     ToMainLow_recvmsg@maxlength:
   608                           	opt stack 0
   609  0001A2                     ToMainHigh_recvmsg@maxlength:
   610                           	opt stack 0
   611  0001A2                     timer1_lthread@msgtype:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x1C
   615  0001A2                     	ds	2
   616  0001A4                     timer1_lthread@length:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x1E
   620  0001A4                     	ds	2
   621  0001A6                     timer1_lthread@msgbuffer:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x20
   625  0001A6                     	ds	2
   626  0001A8                     ??_timer1_lthread:
   627                           
   628                           ; 0 bytes @ 0x22
   629  0001A8                     	ds	1
   630  0001A9                     timer1_lthread@retval:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x23
   634  0001A9                     	ds	1
   635  0001AA                     ??_main:
   636                           
   637                           ; 0 bytes @ 0x24
   638  0001AA                     	ds	2
   639  0001AC                     main@msg:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x26
   643  0001AC                     	ds	2
   644  0001AE                     main@last_reg_recvd:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x28
   648  0001AE                     	ds	1
   649  0001AF                     main@msgbuffer:
   650                           	opt stack 0
   651                           
   652                           ; 11 bytes @ 0x29
   653  0001AF                     	ds	11
   654  0001BA                     main@t0thread_data:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x34
   658  0001BA                     	ds	2
   659  0001BC                     main@t1thread_data:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x36
   663  0001BC                     	ds	2
   664  0001BE                     main@msgtype:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0x38
   668  0001BE                     	ds	1
   669  0001BF                     main@length:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x39
   673  0001BF                     	ds	1
   674  0001C0                     main@uc:
   675                           	opt stack 0
   676                           
   677                           ; 13 bytes @ 0x3A
   678  0001C0                     	ds	13
   679  0001CD                     main@ic:
   680                           	opt stack 0
   681                           
   682                           ; 29 bytes @ 0x47
   683  0001CD                     	ds	29
   684                           tblptru	equ	0xFF8
   685                           tblptrh	equ	0xFF7
   686                           tblptrl	equ	0xFF6
   687                           tablat	equ	0xFF5
   688                           postinc0	equ	0xFEE
   689                           wreg	equ	0xFE8
   690                           postdec1	equ	0xFE5
   691                           fsr1l	equ	0xFE1
   692                           
   693                           	psect	cstackBANK0
   694  000080                     __pcstackBANK0:
   695                           	opt stack 0
   696  000080                     ?i2_in_high_int:
   697                           	opt stack 0
   698  000080                     ?i2___awmod:
   699                           	opt stack 0
   700  000080                     handle_start@data_read:
   701                           	opt stack 0
   702  000080                     start_i2c_slave_reply@msg:
   703                           	opt stack 0
   704  000080                     WriteTimer0@timer0:
   705                           	opt stack 0
   706  000080                     i2check_msg@qptr:
   707                           	opt stack 0
   708  000080                     i2uart_trans@data:
   709                           	opt stack 0
   710  000080                     i2memcpy@d1:
   711                           	opt stack 0
   712  000080                     i2___awmod@dividend:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x0
   716  000080                     	ds	2
   717  000082                     ??_start_i2c_slave_reply:
   718  000082                     ??i2_check_msg:
   719  000082                     ??i2_uart_trans:
   720  000082                     ?i2_in_low_int:
   721                           	opt stack 0
   722  000082                     WriteTimer0@timer:
   723                           	opt stack 0
   724  000082                     i2memcpy@s1:
   725                           	opt stack 0
   726  000082                     i2___awmod@divisor:
   727                           	opt stack 0
   728                           
   729                           ; 2 bytes @ 0x2
   730  000082                     	ds	2
   731  000084                     ??i2___awmod:
   732  000084                     start_i2c_slave_reply@length:
   733                           	opt stack 0
   734  000084                     i2uart_trans@length:
   735                           	opt stack 0
   736  000084                     i2memcpy@n:
   737                           	opt stack 0
   738                           
   739                           ; 2 bytes @ 0x4
   740  000084                     	ds	1
   741  000085                     i2___awmod@counter:
   742                           	opt stack 0
   743  000085                     motorMove@direction:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0x5
   747  000085                     	ds	1
   748  000086                     i2___awmod@sign:
   749                           	opt stack 0
   750  000086                     i2memcpy@d:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x6
   754  000086                     	ds	1
   755  000087                     motorMove@distance:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x7
   759  000087                     	ds	1
   760  000088                     ??_timer0_int_handler:
   761  000088                     i2memcpy@s:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x8
   765  000088                     	ds	1
   766  000089                     timer0_int_handler@motormsg:
   767                           	opt stack 0
   768                           
   769                           ; 5 bytes @ 0x9
   770  000089                     	ds	1
   771  00008A                     i2send_msg@qptr:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0xA
   775  00008A                     	ds	2
   776  00008C                     i2send_msg@length:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0xC
   780  00008C                     	ds	1
   781  00008D                     i2send_msg@msgtype:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0xD
   785  00008D                     	ds	1
   786  00008E                     timer0_int_handler@motorcomm:
   787                           	opt stack 0
   788  00008E                     i2send_msg@data:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0xE
   792  00008E                     	ds	2
   793  000090                     ??i2_send_msg:
   794                           
   795                           ; 0 bytes @ 0x10
   796  000090                     	ds	1
   797  000091                     i2send_msg@tlength:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x11
   801  000091                     	ds	2
   802  000093                     i2send_msg@slot:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0x13
   806  000093                     	ds	1
   807  000094                     i2send_msg@qmsg:
   808                           	opt stack 0
   809                           
   810                           ; 2 bytes @ 0x14
   811  000094                     	ds	2
   812  000096                     ToMainHigh_sendmsg@msgtype:
   813                           	opt stack 0
   814                           
   815                           ; 1 bytes @ 0x16
   816  000096                     	ds	1
   817  000097                     ToMainHigh_sendmsg@data:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x17
   821  000097                     	ds	2
   822  000099                     ToMainHigh_sendmsg@length:
   823                           	opt stack 0
   824                           
   825                           ; 1 bytes @ 0x19
   826  000099                     	ds	1
   827  00009A                     ??_i2c_slave_int_handler:
   828                           
   829                           ; 0 bytes @ 0x1A
   830  00009A                     	ds	2
   831  00009C                     i2c_slave_int_handler@sensormsg:
   832                           	opt stack 0
   833                           
   834                           ; 5 bytes @ 0x1C
   835  00009C                     	ds	5
   836  0000A1                     i2c_slave_int_handler@error_buf:
   837                           	opt stack 0
   838                           
   839                           ; 3 bytes @ 0x21
   840  0000A1                     	ds	3
   841  0000A4                     i2c_slave_int_handler@data_written:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x24
   845  0000A4                     	ds	1
   846  0000A5                     i2c_slave_int_handler@overrun_error:
   847                           	opt stack 0
   848                           
   849                           ; 1 bytes @ 0x25
   850  0000A5                     	ds	1
   851  0000A6                     i2c_slave_int_handler@length:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x26
   855  0000A6                     	ds	2
   856  0000A8                     i2c_slave_int_handler@i2c_data:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0x28
   860  0000A8                     	ds	1
   861  0000A9                     i2c_slave_int_handler@msg_to_send:
   862                           	opt stack 0
   863                           
   864                           ; 1 bytes @ 0x29
   865  0000A9                     	ds	1
   866  0000AA                     i2c_slave_int_handler@msg_ready:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0x2A
   870  0000AA                     	ds	1
   871  0000AB                     i2c_slave_int_handler@motorcomm:
   872                           	opt stack 0
   873                           
   874                           ; 2 bytes @ 0x2B
   875  0000AB                     	ds	2
   876  0000AD                     i2c_slave_int_handler@data_read:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x2D
   880  0000AD                     	ds	1
   881  0000AE                     ??_InterruptHandlerHigh:
   882                           
   883                           ; 0 bytes @ 0x2E
   884  0000AE                     	ds	14
   885                           tblptru	equ	0xFF8
   886                           tblptrh	equ	0xFF7
   887                           tblptrl	equ	0xFF6
   888                           tablat	equ	0xFF5
   889                           postinc0	equ	0xFEE
   890                           wreg	equ	0xFE8
   891                           postdec1	equ	0xFE5
   892                           fsr1l	equ	0xFE1
   893                           
   894                           	psect	cstackCOMRAM
   895  000001                     __pcstackCOMRAM:
   896                           	opt stack 0
   897  000001                     ??_uart_trans_int_handler:
   898  000001                     ?i1___awmod:
   899                           	opt stack 0
   900  000001                     ReadUSART@data:
   901                           	opt stack 0
   902  000001                     WriteTimer1@timer1:
   903                           	opt stack 0
   904  000001                     i1memcpy@d1:
   905                           	opt stack 0
   906  000001                     i1___awmod@dividend:
   907                           	opt stack 0
   908                           
   909                           ; 2 bytes @ 0x0
   910  000001                     	ds	2
   911  000003                     WriteTimer1@timer:
   912                           	opt stack 0
   913  000003                     i1memcpy@s1:
   914                           	opt stack 0
   915  000003                     i1___awmod@divisor:
   916                           	opt stack 0
   917                           
   918                           ; 2 bytes @ 0x2
   919  000003                     	ds	2
   920  000005                     ??i1___awmod:
   921  000005                     i1memcpy@n:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x4
   925  000005                     	ds	1
   926  000006                     i1___awmod@counter:
   927                           	opt stack 0
   928                           
   929                           ; 1 bytes @ 0x5
   930  000006                     	ds	1
   931  000007                     i1___awmod@sign:
   932                           	opt stack 0
   933  000007                     i1memcpy@d:
   934                           	opt stack 0
   935                           
   936                           ; 2 bytes @ 0x6
   937  000007                     	ds	2
   938  000009                     i1memcpy@s:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x8
   942  000009                     	ds	2
   943  00000B                     i1send_msg@qptr:
   944                           	opt stack 0
   945                           
   946                           ; 2 bytes @ 0xA
   947  00000B                     	ds	2
   948  00000D                     i1send_msg@length:
   949                           	opt stack 0
   950                           
   951                           ; 1 bytes @ 0xC
   952  00000D                     	ds	1
   953  00000E                     i1send_msg@msgtype:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0xD
   957  00000E                     	ds	1
   958  00000F                     i1send_msg@data:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0xE
   962  00000F                     	ds	2
   963  000011                     ??i1_send_msg:
   964                           
   965                           ; 0 bytes @ 0x10
   966  000011                     	ds	1
   967  000012                     i1send_msg@tlength:
   968                           	opt stack 0
   969                           
   970                           ; 2 bytes @ 0x11
   971  000012                     	ds	2
   972  000014                     i1send_msg@slot:
   973                           	opt stack 0
   974                           
   975                           ; 1 bytes @ 0x13
   976  000014                     	ds	1
   977  000015                     i1send_msg@qmsg:
   978                           	opt stack 0
   979                           
   980                           ; 2 bytes @ 0x14
   981  000015                     	ds	2
   982  000017                     ToMainLow_sendmsg@msgtype:
   983                           	opt stack 0
   984                           
   985                           ; 1 bytes @ 0x16
   986  000017                     	ds	1
   987  000018                     ToMainLow_sendmsg@data:
   988                           	opt stack 0
   989                           
   990                           ; 2 bytes @ 0x17
   991  000018                     	ds	2
   992  00001A                     ToMainLow_sendmsg@length:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x19
   996  00001A                     	ds	1
   997  00001B                     ??_uart_recv_int_handler:
   998                           
   999                           ; 0 bytes @ 0x1A
  1000  00001B                     	ds	1
  1001  00001C                     ??_InterruptHandlerLow:
  1002                           
  1003                           ; 0 bytes @ 0x1B
  1004  00001C                     	ds	17
  1005                           tblptru	equ	0xFF8
  1006                           tblptrh	equ	0xFF7
  1007                           tblptrl	equ	0xFF6
  1008                           tablat	equ	0xFF5
  1009                           postinc0	equ	0xFEE
  1010                           wreg	equ	0xFE8
  1011                           postdec1	equ	0xFE5
  1012                           fsr1l	equ	0xFE1
  1013                           
  1014 ;;
  1015 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1016 ;;
  1017 ;; *************** function _main *****************
  1018 ;; Defined at:
  1019 ;;		line 186 in file "../src/main.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  ic             29   71[BANK1 ] struct __i2c_comm
  1024 ;;  uc             13   58[BANK1 ] struct __uart_comm
  1025 ;;  msgbuffer      11   41[BANK1 ] unsigned char [11]
  1026 ;;  t1thread_dat    2   54[BANK1 ] struct __timer1_thread_s
  1027 ;;  t0thread_dat    2   52[BANK1 ] struct __timer0_thread_s
  1028 ;;  msg             2   38[BANK1 ] unsigned char [2]
  1029 ;;  uthread_data    2    0        struct __uart_thread_str
  1030 ;;  length          1   57[BANK1 ] char 
  1031 ;;  msgtype         1   56[BANK1 ] unsigned char 
  1032 ;;  last_reg_rec    1   40[BANK1 ] unsigned char 
  1033 ;;  i               1    0        unsigned char 
  1034 ;;  c               1    0        unsigned char 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;		None               void
  1037 ;; Registers used:
  1038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1044 ;;      Params:         0       0       0       0       0
  1045 ;;      Locals:         0       0      62       0       0
  1046 ;;      Temps:          0       0       2       0       0
  1047 ;;      Totals:         0       0      64       0       0
  1048 ;;Total ram usage:       64 bytes
  1049 ;; Hardware stack levels required when called:   15
  1050 ;; This function calls:
  1051 ;;		_OpenADC
  1052 ;;		_OpenTimer0
  1053 ;;		_OpenTimer1
  1054 ;;		_OpenUSART
  1055 ;;		_SetChanADC
  1056 ;;		_ToMainHigh_recvmsg
  1057 ;;		_ToMainLow_recvmsg
  1058 ;;		_block_on_To_msgqueues
  1059 ;;		_enable_interrupts
  1060 ;;		_i2c_configure_slave
  1061 ;;		_i2c_master_send
  1062 ;;		_init_i2c
  1063 ;;		_init_queues
  1064 ;;		_init_timer1_lthread
  1065 ;;		_init_uart_recv
  1066 ;;		_timer0_lthread
  1067 ;;		_timer1_lthread
  1068 ;;		_uart_trans
  1069 ;; This function is called by:
  1070 ;;		Startup code after reset
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text0
  1075  000938                     __ptext0:
  1076                           	opt stack 0
  1077  000938                     _main:
  1078                           	opt stack 16
  1079                           
  1080                           ;main.c: 187: char c;
  1081                           ;main.c: 188: signed char length;
  1082                           ;main.c: 189: unsigned char msgtype;
  1083                           ;main.c: 190: unsigned char last_reg_recvd;
  1084                           ;main.c: 191: uart_comm uc;
  1085                           ;main.c: 192: i2c_comm ic;
  1086                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
  1087                           ;main.c: 194: unsigned char i;
  1088                           ;main.c: 195: uart_thread_struct uthread_data;
  1089                           ;main.c: 196: timer1_thread_struct t1thread_data;
  1090                           ;main.c: 197: timer0_thread_struct t0thread_data;
  1091                           ;main.c: 205: OSCCON = 0x82;
  1092                           
  1093                           ;incstack = 0
  1094  000938  0E82               	movlw	130
  1095  00093A  6ED3               	movwf	4051,c	;volatile
  1096                           
  1097                           ;main.c: 206: OSCTUNEbits.PLLEN = 0;
  1098  00093C  9C9B               	bcf	3995,6,c	;volatile
  1099                           
  1100                           ;main.c: 224: init_uart_recv(&uc);
  1101  00093E  0101               	movlb	1	; () banked
  1102  000940  0E01               	movlw	high main@uc
  1103  000942  0101               	movlb	1	; () banked
  1104  000944  0101               	movlb	1	; () banked
  1105  000946  6F87               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1106  000948  0101               	movlb	1	; () banked
  1107  00094A  0EC0               	movlw	low main@uc
  1108  00094C  0101               	movlb	1	; () banked
  1109  00094E  0101               	movlb	1	; () banked
  1110  000950  6F86               	movwf	init_uart_recv@uc& (0+255),b
  1111  000952  EC8C  F011         	call	_init_uart_recv	;wreg free
  1112                           
  1113                           ;main.c: 227: init_i2c(&ic);
  1114  000956  0101               	movlb	1	; () banked
  1115  000958  0E01               	movlw	high main@ic
  1116  00095A  0101               	movlb	1	; () banked
  1117  00095C  0101               	movlb	1	; () banked
  1118  00095E  6F87               	movwf	(init_i2c@ic+1)& (0+255),b
  1119  000960  0101               	movlb	1	; () banked
  1120  000962  0ECD               	movlw	low main@ic
  1121  000964  0101               	movlb	1	; () banked
  1122  000966  0101               	movlb	1	; () banked
  1123  000968  6F86               	movwf	init_i2c@ic& (0+255),b
  1124  00096A  ECD1  F00E         	call	_init_i2c	;wreg free
  1125                           
  1126                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1127  00096E  0101               	movlb	1	; () banked
  1128  000970  0E01               	movlw	high main@t1thread_data
  1129  000972  0101               	movlb	1	; () banked
  1130  000974  0101               	movlb	1	; () banked
  1131  000976  6F87               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1132  000978  0101               	movlb	1	; () banked
  1133  00097A  0EBC               	movlw	low main@t1thread_data
  1134  00097C  0101               	movlb	1	; () banked
  1135  00097E  0101               	movlb	1	; () banked
  1136  000980  6F86               	movwf	init_timer1_lthread@tptr& (0+255),b
  1137  000982  ECBE  F011         	call	_init_timer1_lthread	;wreg free
  1138                           
  1139                           ;main.c: 233: init_queues();
  1140  000986  EC9A  F00E         	call	_init_queues	;wreg free
  1141                           
  1142                           ;main.c: 237: TRISB = 0xFF;
  1143  00098A  6893               	setf	3987,c	;volatile
  1144                           
  1145                           ;main.c: 238: LATB = 0x0;
  1146  00098C  0E00               	movlw	0
  1147  00098E  6E8A               	movwf	3978,c	;volatile
  1148                           
  1149                           ;main.c: 240: PORTA = 0x0;
  1150  000990  0E00               	movlw	0
  1151  000992  6E80               	movwf	3968,c	;volatile
  1152                           
  1153                           ;main.c: 241: LATA = 0x0;
  1154  000994  0E00               	movlw	0
  1155  000996  6E89               	movwf	3977,c	;volatile
  1156                           
  1157                           ;main.c: 242: TRISA = 0x0F;
  1158  000998  0E0F               	movlw	15
  1159  00099A  6E92               	movwf	3986,c	;volatile
  1160                           
  1161                           ;main.c: 258: OpenTimer0(0b11111111 & 0b11111111 & 0b11111111 & 0b11101111 & 0b11111111);
  1162  00099C  0EEF               	movlw	239
  1163  00099E  EC1F  F011         	call	_OpenTimer0
  1164                           
  1165                           ;main.c: 271: OpenTimer1(0b11111111 & 0b10111111 & 0b11001111 & 0b11111111 & 0b11110111 
      +                          & 0b11111111);
  1166  0009A2  0E87               	movlw	135
  1167  0009A4  EC97  F010         	call	_OpenTimer1
  1168                           
  1169                           ;main.c: 272: TRISC = 0xFF;
  1170  0009A8  6894               	setf	3988,c	;volatile
  1171                           
  1172                           ;main.c: 280: IPR1bits.ADIP = 0;
  1173  0009AA  9C9F               	bcf	3999,6,c	;volatile
  1174                           
  1175                           ;main.c: 281: PIE1bits.ADIE = 1;
  1176  0009AC  8C9D               	bsf	3997,6,c	;volatile
  1177                           
  1178                           ;main.c: 283: IPR1bits.TMR1IP = 0;
  1179  0009AE  909F               	bcf	3999,0,c	;volatile
  1180                           
  1181                           ;main.c: 285: INTCON2bits.TMR0IP = 1;
  1182  0009B0  84F1               	bsf	intcon2,2,c	;volatile
  1183                           
  1184                           ;main.c: 287: IPR1bits.RCIP = 0;
  1185  0009B2  9A9F               	bcf	3999,5,c	;volatile
  1186                           
  1187                           ;main.c: 289: IPR1bits.TXIP = 0;
  1188  0009B4  989F               	bcf	3999,4,c	;volatile
  1189                           
  1190                           ;main.c: 291: IPR1bits.SSPIP = 1;
  1191  0009B6  869F               	bsf	3999,3,c	;volatile
  1192                           
  1193                           ;main.c: 308: i2c_configure_slave(0xBE);
  1194  0009B8  0EBE               	movlw	190
  1195  0009BA  EC34  F011         	call	_i2c_configure_slave
  1196                           
  1197                           ;main.c: 327: PIE1bits.SSPIE = 1;
  1198  0009BE  869D               	bsf	3997,3,c	;volatile
  1199                           
  1200                           ;main.c: 338: OpenUSART(0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1201                           ;main.c: 339: 0b11111111 & 0b11111111, 38);
  1202  0009C0  0E00               	movlw	0
  1203  0009C2  0101               	movlb	1	; () banked
  1204  0009C4  0101               	movlb	1	; () banked
  1205  0009C6  6F87               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1206  0009C8  0E26               	movlw	38
  1207  0009CA  0101               	movlb	1	; () banked
  1208  0009CC  6F86               	movwf	OpenUSART@spbrg& (0+255),b
  1209  0009CE  0EFC               	movlw	252
  1210  0009D0  EC4A  F00C         	call	_OpenUSART
  1211                           
  1212                           ;main.c: 340: RCSTAbits.SPEN = 1;
  1213  0009D4  8EAB               	bsf	4011,7,c	;volatile
  1214                           
  1215                           ;main.c: 341: TRISC = 0xFF;
  1216  0009D6  6894               	setf	3988,c	;volatile
  1217                           
  1218                           ;main.c: 348: enable_interrupts();
  1219  0009D8  ECF2  F011         	call	_enable_interrupts	;wreg free
  1220                           
  1221                           ;main.c: 362: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1222                           ;main.c: 363: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1223                           ;main.c: 364: 0b1011);
  1224  0009DC  0101               	movlb	1	; () banked
  1225  0009DE  6FAA               	movwf	??_main& (0+255),b
  1226  0009E0  0E0C               	movlw	12
  1227  0009E2  0101               	movlb	1	; () banked
  1228  0009E4  0101               	movlb	1	; () banked
  1229  0009E6  6F86               	movwf	OpenADC@config2& (0+255),b
  1230  0009E8  0101               	movlb	1	; () banked
  1231  0009EA  51AA               	movf	??_main& (0+255),w,b
  1232  0009EC  0101               	movlb	1	; () banked
  1233  0009EE  6FAB               	movwf	(??_main+1)& (0+255),b
  1234  0009F0  0E0B               	movlw	11
  1235  0009F2  0101               	movlb	1	; () banked
  1236  0009F4  0101               	movlb	1	; () banked
  1237  0009F6  6F87               	movwf	OpenADC@portconfig& (0+255),b
  1238  0009F8  0101               	movlb	1	; () banked
  1239  0009FA  51AB               	movf	(??_main+1)& (0+255),w,b
  1240  0009FC  0E53               	movlw	83
  1241  0009FE  ECA3  F00D         	call	_OpenADC
  1242                           
  1243                           ;main.c: 365: SetChanADC(0b10001111);
  1244  000A02  0E8F               	movlw	143
  1245  000A04  EC6C  F011         	call	_SetChanADC
  1246                           
  1247                           ;main.c: 376: unsigned char msg[2] = {0x01, 0x02};
  1248  000A08  C1EA  F1AC         	movff	main@F5217,main@msg
  1249  000A0C  C1EB  F1AD         	movff	main@F5217+1,main@msg+1
  1250  000A10                     l3896:
  1251                           
  1252                           ;main.c: 388: block_on_To_msgqueues();
  1253  000A10  ECE5  F00D         	call	_block_on_To_msgqueues	;wreg free
  1254                           
  1255                           ;main.c: 395: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1256  000A14  0101               	movlb	1	; () banked
  1257  000A16  0E01               	movlw	high main@msgtype
  1258  000A18  0101               	movlb	1	; () banked
  1259  000A1A  0101               	movlb	1	; () banked
  1260  000A1C  6F9F               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1261  000A1E  0101               	movlb	1	; () banked
  1262  000A20  0EBE               	movlw	low main@msgtype
  1263  000A22  0101               	movlb	1	; () banked
  1264  000A24  0101               	movlb	1	; () banked
  1265  000A26  6F9E               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1266  000A28  0101               	movlb	1	; () banked
  1267  000A2A  0E01               	movlw	high main@msgbuffer
  1268  000A2C  0101               	movlb	1	; () banked
  1269  000A2E  0101               	movlb	1	; () banked
  1270  000A30  6FA1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1271  000A32  0101               	movlb	1	; () banked
  1272  000A34  0EAF               	movlw	low main@msgbuffer
  1273  000A36  0101               	movlb	1	; () banked
  1274  000A38  0101               	movlb	1	; () banked
  1275  000A3A  6FA0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1276  000A3C  0E0A               	movlw	10
  1277  000A3E  EC56  F010         	call	_ToMainHigh_recvmsg
  1278  000A42  0101               	movlb	1	; () banked
  1279  000A44  0101               	movlb	1	; () banked
  1280  000A46  6FBF               	movwf	main@length& (0+255),b
  1281                           
  1282                           ; BSR set to: 1
  1283                           ;main.c: 396: if (length < 0) {
  1284  000A48  0101               	movlb	1	; () banked
  1285  000A4A  0101               	movlb	1	; () banked
  1286  000A4C  BFBF               	btfsc	main@length& (0+255),7,b
  1287  000A4E  D04D               	goto	l3912
  1288  000A50  D03C               	goto	l3910
  1289  000A52                     l3904:
  1290                           
  1291                           ; BSR set to: 1
  1292                           ;main.c: 404: {
  1293                           ;main.c: 405: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1294  000A52  0101               	movlb	1	; () banked
  1295  000A54  0E01               	movlw	high main@t0thread_data
  1296  000A56  0101               	movlb	1	; () banked
  1297  000A58  0101               	movlb	1	; () banked
  1298  000A5A  6F87               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1299  000A5C  0101               	movlb	1	; () banked
  1300  000A5E  0EBA               	movlw	low main@t0thread_data
  1301  000A60  0101               	movlb	1	; () banked
  1302  000A62  0101               	movlb	1	; () banked
  1303  000A64  6F86               	movwf	timer0_lthread@tptr& (0+255),b
  1304  000A66  0101               	movlb	1	; () banked
  1305  000A68  0101               	movlb	1	; () banked
  1306  000A6A  C1BE  F188         	movff	main@msgtype,timer0_lthread@msgtype
  1307  000A6E  0101               	movlb	1	; () banked
  1308  000A70  0101               	movlb	1	; () banked
  1309  000A72  6B89               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1310  000A74  0101               	movlb	1	; () banked
  1311  000A76  0101               	movlb	1	; () banked
  1312  000A78  51BF               	movf	main@length& (0+255),w,b
  1313  000A7A  0101               	movlb	1	; () banked
  1314  000A7C  0101               	movlb	1	; () banked
  1315  000A7E  6F8A               	movwf	timer0_lthread@length& (0+255),b
  1316  000A80  0101               	movlb	1	; () banked
  1317  000A82  6B8B               	clrf	(timer0_lthread@length+1)& (0+255),b
  1318  000A84  0101               	movlb	1	; () banked
  1319  000A86  BF8A               	btfsc	timer0_lthread@length& (0+255),7,b
  1320  000A88  078B               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1321  000A8A  0101               	movlb	1	; () banked
  1322  000A8C  0E01               	movlw	high main@msgbuffer
  1323  000A8E  0101               	movlb	1	; () banked
  1324  000A90  0101               	movlb	1	; () banked
  1325  000A92  6F8D               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1326  000A94  0101               	movlb	1	; () banked
  1327  000A96  0EAF               	movlw	low main@msgbuffer
  1328  000A98  0101               	movlb	1	; () banked
  1329  000A9A  0101               	movlb	1	; () banked
  1330  000A9C  6F8C               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1331  000A9E  ECB5  F011         	call	_timer0_lthread	;wreg free
  1332                           
  1333                           ;main.c: 406: break;
  1334  000AA2  D023               	goto	l3912
  1335  000AA4                     l144:
  1336                           
  1337                           ;main.c: 409: case 41:
  1338                           ;main.c: 410: {
  1339                           ;main.c: 413: last_reg_recvd = msgbuffer[0];
  1340  000AA4  C1AF  F1AE         	movff	main@msgbuffer,main@last_reg_recvd
  1341                           
  1342                           ;main.c: 414: break;
  1343  000AA8  D020               	goto	l3912
  1344  000AAA                     l3906:
  1345                           
  1346                           ;main.c: 417: {
  1347                           ;main.c: 420: uart_trans(length, msgbuffer);
  1348  000AAA  0101               	movlb	1	; () banked
  1349  000AAC  0E01               	movlw	high main@msgbuffer
  1350  000AAE  0101               	movlb	1	; () banked
  1351  000AB0  0101               	movlb	1	; () banked
  1352  000AB2  6F87               	movwf	(uart_trans@data+1)& (0+255),b
  1353  000AB4  0101               	movlb	1	; () banked
  1354  000AB6  0EAF               	movlw	low main@msgbuffer
  1355  000AB8  0101               	movlb	1	; () banked
  1356  000ABA  0101               	movlb	1	; () banked
  1357  000ABC  6F86               	movwf	uart_trans@data& (0+255),b
  1358  000ABE  0101               	movlb	1	; () banked
  1359  000AC0  0101               	movlb	1	; () banked
  1360  000AC2  51BF               	movf	main@length& (0+255),w,b
  1361  000AC4  EC48  F00B         	call	_uart_trans
  1362                           
  1363                           ;main.c: 423: break;
  1364  000AC8  D010               	goto	l3912
  1365  000ACA                     l3910:
  1366  000ACA  0101               	movlb	1	; () banked
  1367  000ACC  0101               	movlb	1	; () banked
  1368  000ACE  51BE               	movf	main@msgtype& (0+255),w,b
  1369                           
  1370                           ; Switch size 1, requested type "space"
  1371                           ; Number of cases is 5, Range of values is 10 to 46
  1372                           ; switch strategies available:
  1373                           ; Name         Instructions Cycles
  1374                           ; simple_byte           16     9 (average)
  1375                           ;	Chosen strategy is simple_byte
  1376  000AD0  0A0A               	xorlw	10	; case 10
  1377  000AD2  B4D8               	btfsc	status,2,c
  1378  000AD4  D7BE               	goto	l3904
  1379  000AD6  0A22               	xorlw	34	; case 40
  1380  000AD8  B4D8               	btfsc	status,2,c
  1381  000ADA  D7E4               	goto	l144
  1382  000ADC  0A01               	xorlw	1	; case 41
  1383  000ADE  B4D8               	btfsc	status,2,c
  1384  000AE0  D7E1               	goto	l144
  1385  000AE2  0A04               	xorlw	4	; case 45
  1386  000AE4  B4D8               	btfsc	status,2,c
  1387  000AE6  D7E1               	goto	l3906
  1388  000AE8  0A03               	xorlw	3	; case 46
  1389  000AEA                     l3912:
  1390                           
  1391                           ;main.c: 438: }
  1392                           ;main.c: 441: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1393  000AEA  0101               	movlb	1	; () banked
  1394  000AEC  0E01               	movlw	high main@msgtype
  1395  000AEE  0101               	movlb	1	; () banked
  1396  000AF0  0101               	movlb	1	; () banked
  1397  000AF2  6F9F               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1398  000AF4  0101               	movlb	1	; () banked
  1399  000AF6  0EBE               	movlw	low main@msgtype
  1400  000AF8  0101               	movlb	1	; () banked
  1401  000AFA  0101               	movlb	1	; () banked
  1402  000AFC  6F9E               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1403  000AFE  0101               	movlb	1	; () banked
  1404  000B00  0E01               	movlw	high main@msgbuffer
  1405  000B02  0101               	movlb	1	; () banked
  1406  000B04  0101               	movlb	1	; () banked
  1407  000B06  6FA1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1408  000B08  0101               	movlb	1	; () banked
  1409  000B0A  0EAF               	movlw	low main@msgbuffer
  1410  000B0C  0101               	movlb	1	; () banked
  1411  000B0E  0101               	movlb	1	; () banked
  1412  000B10  6FA0               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1413  000B12  0E0A               	movlw	10
  1414  000B14  EC35  F010         	call	_ToMainLow_recvmsg
  1415  000B18  0101               	movlb	1	; () banked
  1416  000B1A  0101               	movlb	1	; () banked
  1417  000B1C  6FBF               	movwf	main@length& (0+255),b
  1418                           
  1419                           ; BSR set to: 1
  1420                           ;main.c: 442: if (length < 0) {
  1421  000B1E  0101               	movlb	1	; () banked
  1422  000B20  0101               	movlb	1	; () banked
  1423  000B22  BFBF               	btfsc	main@length& (0+255),7,b
  1424  000B24  D775               	goto	l3896
  1425  000B26  D072               	goto	l3932
  1426  000B28                     l3918:
  1427                           
  1428                           ; BSR set to: 1
  1429                           ;main.c: 450: {
  1430                           ;main.c: 451: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1431  000B28  0101               	movlb	1	; () banked
  1432  000B2A  0E01               	movlw	high main@t1thread_data
  1433  000B2C  0101               	movlb	1	; () banked
  1434  000B2E  0101               	movlb	1	; () banked
  1435  000B30  6FA1               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1436  000B32  0101               	movlb	1	; () banked
  1437  000B34  0EBC               	movlw	low main@t1thread_data
  1438  000B36  0101               	movlb	1	; () banked
  1439  000B38  0101               	movlb	1	; () banked
  1440  000B3A  6FA0               	movwf	timer1_lthread@tptr& (0+255),b
  1441  000B3C  0101               	movlb	1	; () banked
  1442  000B3E  0101               	movlb	1	; () banked
  1443  000B40  C1BE  F1A2         	movff	main@msgtype,timer1_lthread@msgtype
  1444  000B44  0101               	movlb	1	; () banked
  1445  000B46  0101               	movlb	1	; () banked
  1446  000B48  6BA3               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1447  000B4A  0101               	movlb	1	; () banked
  1448  000B4C  0101               	movlb	1	; () banked
  1449  000B4E  51BF               	movf	main@length& (0+255),w,b
  1450  000B50  0101               	movlb	1	; () banked
  1451  000B52  0101               	movlb	1	; () banked
  1452  000B54  6FA4               	movwf	timer1_lthread@length& (0+255),b
  1453  000B56  0101               	movlb	1	; () banked
  1454  000B58  6BA5               	clrf	(timer1_lthread@length+1)& (0+255),b
  1455  000B5A  0101               	movlb	1	; () banked
  1456  000B5C  BFA4               	btfsc	timer1_lthread@length& (0+255),7,b
  1457  000B5E  07A5               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1458  000B60  0101               	movlb	1	; () banked
  1459  000B62  0E01               	movlw	high main@msgbuffer
  1460  000B64  0101               	movlb	1	; () banked
  1461  000B66  0101               	movlb	1	; () banked
  1462  000B68  6FA7               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1463  000B6A  0101               	movlb	1	; () banked
  1464  000B6C  0EAF               	movlw	low main@msgbuffer
  1465  000B6E  0101               	movlb	1	; () banked
  1466  000B70  0101               	movlb	1	; () banked
  1467  000B72  6FA6               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1468  000B74  EC61  F00E         	call	_timer1_lthread	;wreg free
  1469                           
  1470                           ;main.c: 452: break;
  1471  000B78  D74B               	goto	l3896
  1472  000B7A                     l3920:
  1473                           
  1474                           ;main.c: 455: case 31:
  1475                           ;main.c: 456: {
  1476                           ;main.c: 459: if(msgbuffer[0] == 0xBA){
  1477  000B7A  0101               	movlb	1	; () banked
  1478  000B7C  0101               	movlb	1	; () banked
  1479  000B7E  51AF               	movf	main@msgbuffer& (0+255),w,b
  1480  000B80  0ABA               	xorlw	186
  1481  000B82  A4D8               	btfss	status,2,c
  1482  000B84  D01E               	goto	l3924
  1483                           
  1484                           ; BSR set to: 1
  1485                           ;main.c: 461: i2c_master_send(5, 5, msgbuffer, 0xBE);
  1486  000B86  0101               	movlb	1	; () banked
  1487  000B88  6FAA               	movwf	??_main& (0+255),b
  1488  000B8A  0E05               	movlw	5
  1489  000B8C  0101               	movlb	1	; () banked
  1490  000B8E  0101               	movlb	1	; () banked
  1491  000B90  6F86               	movwf	i2c_master_send@recvlength& (0+255),b
  1492  000B92  0101               	movlb	1	; () banked
  1493  000B94  51AA               	movf	??_main& (0+255),w,b
  1494  000B96  0101               	movlb	1	; () banked
  1495  000B98  0E01               	movlw	high main@msgbuffer
  1496  000B9A  0101               	movlb	1	; () banked
  1497  000B9C  0101               	movlb	1	; () banked
  1498  000B9E  6F88               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1499  000BA0  0101               	movlb	1	; () banked
  1500  000BA2  0EAF               	movlw	low main@msgbuffer
  1501  000BA4  0101               	movlb	1	; () banked
  1502  000BA6  0101               	movlb	1	; () banked
  1503  000BA8  6F87               	movwf	i2c_master_send@msg& (0+255),b
  1504  000BAA  0101               	movlb	1	; () banked
  1505  000BAC  6FAB               	movwf	(??_main+1)& (0+255),b
  1506  000BAE  0EBE               	movlw	190
  1507  000BB0  0101               	movlb	1	; () banked
  1508  000BB2  0101               	movlb	1	; () banked
  1509  000BB4  6F89               	movwf	i2c_master_send@slave_addr& (0+255),b
  1510  000BB6  0101               	movlb	1	; () banked
  1511  000BB8  51AB               	movf	(??_main+1)& (0+255),w,b
  1512  000BBA  0E05               	movlw	5
  1513  000BBC  ECC2  F006         	call	_i2c_master_send
  1514                           
  1515                           ;main.c: 462: } else if(msgbuffer[0] == 0xAA){
  1516  000BC0  D023               	goto	l3928
  1517  000BC2                     l3924:
  1518  000BC2  0101               	movlb	1	; () banked
  1519  000BC4  0101               	movlb	1	; () banked
  1520  000BC6  51AF               	movf	main@msgbuffer& (0+255),w,b
  1521  000BC8  0AAA               	xorlw	170
  1522  000BCA  A4D8               	btfss	status,2,c
  1523  000BCC  D01D               	goto	l3928
  1524                           
  1525                           ; BSR set to: 1
  1526                           ;main.c: 464: i2c_master_send(1, 5, msgbuffer, 0x9E);
  1527  000BCE  0101               	movlb	1	; () banked
  1528  000BD0  6FAA               	movwf	??_main& (0+255),b
  1529  000BD2  0E05               	movlw	5
  1530  000BD4  0101               	movlb	1	; () banked
  1531  000BD6  0101               	movlb	1	; () banked
  1532  000BD8  6F86               	movwf	i2c_master_send@recvlength& (0+255),b
  1533  000BDA  0101               	movlb	1	; () banked
  1534  000BDC  51AA               	movf	??_main& (0+255),w,b
  1535  000BDE  0101               	movlb	1	; () banked
  1536  000BE0  0E01               	movlw	high main@msgbuffer
  1537  000BE2  0101               	movlb	1	; () banked
  1538  000BE4  0101               	movlb	1	; () banked
  1539  000BE6  6F88               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1540  000BE8  0101               	movlb	1	; () banked
  1541  000BEA  0EAF               	movlw	low main@msgbuffer
  1542  000BEC  0101               	movlb	1	; () banked
  1543  000BEE  0101               	movlb	1	; () banked
  1544  000BF0  6F87               	movwf	i2c_master_send@msg& (0+255),b
  1545  000BF2  0101               	movlb	1	; () banked
  1546  000BF4  6FAB               	movwf	(??_main+1)& (0+255),b
  1547  000BF6  0E9E               	movlw	158
  1548  000BF8  0101               	movlb	1	; () banked
  1549  000BFA  0101               	movlb	1	; () banked
  1550  000BFC  6F89               	movwf	i2c_master_send@slave_addr& (0+255),b
  1551  000BFE  0101               	movlb	1	; () banked
  1552  000C00  51AB               	movf	(??_main+1)& (0+255),w,b
  1553  000C02  0E01               	movlw	1
  1554  000C04  ECC2  F006         	call	_i2c_master_send
  1555  000C08                     l3928:
  1556                           
  1557                           ;main.c: 465: }
  1558                           ;main.c: 467: LATBbits.LATB2 = 0;
  1559  000C08  948A               	bcf	3978,2,c	;volatile
  1560                           
  1561                           ;main.c: 469: break;
  1562  000C0A  D702               	goto	l3896
  1563  000C0C                     l3932:
  1564  000C0C  0101               	movlb	1	; () banked
  1565  000C0E  0101               	movlb	1	; () banked
  1566  000C10  51BE               	movf	main@msgtype& (0+255),w,b
  1567                           
  1568                           ; Switch size 1, requested type "space"
  1569                           ; Number of cases is 3, Range of values is 11 to 31
  1570                           ; switch strategies available:
  1571                           ; Name         Instructions Cycles
  1572                           ; simple_byte           10     6 (average)
  1573                           ;	Chosen strategy is simple_byte
  1574  000C12  0A0B               	xorlw	11	; case 11
  1575  000C14  B4D8               	btfsc	status,2,c
  1576  000C16  D788               	goto	l3918
  1577  000C18  0A15               	xorlw	21	; case 30
  1578  000C1A  B4D8               	btfsc	status,2,c
  1579  000C1C  D7AE               	goto	l3920
  1580  000C1E  0A01               	xorlw	1	; case 31
  1581  000C20  B4D8               	btfsc	status,2,c
  1582  000C22  D7AB               	goto	l3920
  1583  000C24  D6F5               	goto	l3896
  1584  000C26                     __end_of_main:
  1585                           	opt stack 0
  1586                           tblptru	equ	0xFF8
  1587                           tblptrh	equ	0xFF7
  1588                           tblptrl	equ	0xFF6
  1589                           tablat	equ	0xFF5
  1590                           intcon2	equ	0xFF1
  1591                           postinc0	equ	0xFEE
  1592                           wreg	equ	0xFE8
  1593                           postdec1	equ	0xFE5
  1594                           fsr1l	equ	0xFE1
  1595                           status	equ	0xFD8
  1596                           
  1597 ;; *************** function _uart_trans *****************
  1598 ;; Defined at:
  1599 ;;		line 61 in file "../src/my_uart.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;  length          1    wreg     unsigned char 
  1602 ;;  data            2    0[BANK1 ] PTR unsigned char 
  1603 ;;		 -> timer0_int_handler@motorcomm(2), i2c_slave_int_handler@motorcomm(2), main@msgbuffer(11), 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  length          1    4[BANK1 ] unsigned char 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;		None               void
  1608 ;; Registers used:
  1609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1615 ;;      Params:         0       0       2       0       0
  1616 ;;      Locals:         0       0       1       0       0
  1617 ;;      Temps:          0       0       2       0       0
  1618 ;;      Totals:         0       0       5       0       0
  1619 ;;Total ram usage:        5 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; Hardware stack levels required when called:   11
  1622 ;; This function calls:
  1623 ;;		Nothing
  1624 ;; This function is called by:
  1625 ;;		_main
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text1
  1630  001690                     __ptext1:
  1631                           	opt stack 0
  1632  001690                     _uart_trans:
  1633                           	opt stack 19
  1634                           
  1635                           ; BSR set to: 1
  1636                           ;incstack = 0
  1637                           ;uart_trans@length stored from wreg
  1638  001690  CFE8 F18A          	movff	wreg,uart_trans@length
  1639                           
  1640                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  1641  001694  EE20 F00B          	lfsr	2,11
  1642  001698  5056               	movf	_uc_ptr,w,c
  1643  00169A  26D9               	addwf	fsr2l,f,c
  1644  00169C  5057               	movf	_uc_ptr+1,w,c
  1645  00169E  22DA               	addwfc	fsr2h,f,c
  1646  0016A0  0E00               	movlw	0
  1647  0016A2  6EDF               	movwf	indf2,c
  1648  0016A4  D035               	goto	l4104
  1649  0016A6                     l4100:
  1650                           
  1651                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  1652  0016A6  EE20 F00B          	lfsr	2,11
  1653  0016AA  5056               	movf	_uc_ptr,w,c
  1654  0016AC  26D9               	addwf	fsr2l,f,c
  1655  0016AE  5057               	movf	_uc_ptr+1,w,c
  1656  0016B0  22DA               	addwfc	fsr2h,f,c
  1657  0016B2  50DF               	movf	indf2,w,c
  1658  0016B4  0101               	movlb	1	; () banked
  1659  0016B6  6F88               	movwf	??_uart_trans& (0+255),b
  1660  0016B8  0101               	movlb	1	; () banked
  1661  0016BA  5188               	movf	??_uart_trans& (0+255),w,b
  1662  0016BC  0D01               	mullw	1
  1663  0016BE  50F3               	movf	prodl,w,c
  1664  0016C0  0101               	movlb	1	; () banked
  1665  0016C2  0101               	movlb	1	; () banked
  1666  0016C4  2586               	addwf	uart_trans@data& (0+255),w,b
  1667  0016C6  6ED9               	movwf	fsr2l,c
  1668  0016C8  50F4               	movf	prodh,w,c
  1669  0016CA  0101               	movlb	1	; () banked
  1670  0016CC  0101               	movlb	1	; () banked
  1671  0016CE  2187               	addwfc	(uart_trans@data+1)& (0+255),w,b
  1672  0016D0  6EDA               	movwf	fsr2h,c
  1673  0016D2  EE10 F00B          	lfsr	1,11
  1674  0016D6  5056               	movf	_uc_ptr,w,c
  1675  0016D8  26E1               	addwf	fsr1l,f,c
  1676  0016DA  5057               	movf	_uc_ptr+1,w,c
  1677  0016DC  22E2               	addwfc	fsr1h,f,c
  1678  0016DE  50E7               	movf	indf1,w,c
  1679  0016E0  0101               	movlb	1	; () banked
  1680  0016E2  6F89               	movwf	(??_uart_trans+1)& (0+255),b
  1681  0016E4  0101               	movlb	1	; () banked
  1682  0016E6  5189               	movf	(??_uart_trans+1)& (0+255),w,b
  1683  0016E8  0D01               	mullw	1
  1684  0016EA  0E06               	movlw	6
  1685  0016EC  26F3               	addwf	prodl,f,c
  1686  0016EE  0E00               	movlw	0
  1687  0016F0  22F4               	addwfc	prodh,f,c
  1688  0016F2  50F3               	movf	prodl,w,c
  1689  0016F4  2456               	addwf	_uc_ptr,w,c
  1690  0016F6  6EE1               	movwf	fsr1l,c
  1691  0016F8  50F4               	movf	prodh,w,c
  1692  0016FA  2057               	addwfc	_uc_ptr+1,w,c
  1693  0016FC  6EE2               	movwf	fsr1h,c
  1694  0016FE  CFDF FFE7          	movff	indf2,indf1
  1695                           
  1696                           ; BSR set to: 1
  1697  001702  EE20 F00B          	lfsr	2,11
  1698  001706  5056               	movf	_uc_ptr,w,c
  1699  001708  26D9               	addwf	fsr2l,f,c
  1700  00170A  5057               	movf	_uc_ptr+1,w,c
  1701  00170C  22DA               	addwfc	fsr2h,f,c
  1702  00170E  2ADF               	incf	indf2,f,c
  1703  001710                     l4104:
  1704  001710  EE20 F00B          	lfsr	2,11
  1705  001714  5056               	movf	_uc_ptr,w,c
  1706  001716  26D9               	addwf	fsr2l,f,c
  1707  001718  5057               	movf	_uc_ptr+1,w,c
  1708  00171A  22DA               	addwfc	fsr2h,f,c
  1709  00171C  50DF               	movf	indf2,w,c
  1710  00171E  0101               	movlb	1	; () banked
  1711  001720  6F88               	movwf	??_uart_trans& (0+255),b
  1712  001722  0101               	movlb	1	; () banked
  1713  001724  0101               	movlb	1	; () banked
  1714  001726  518A               	movf	uart_trans@length& (0+255),w,b
  1715  001728  0101               	movlb	1	; () banked
  1716  00172A  5D88               	subwf	??_uart_trans& (0+255),w,b
  1717  00172C  A0D8               	btfss	status,0,c
  1718  00172E  D7BB               	goto	l4100
  1719                           
  1720                           ; BSR set to: 1
  1721                           ;my_uart.c: 67: }
  1722                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  1723                           
  1724                           ; BSR set to: 1
  1725  001730  EE20 F00C          	lfsr	2,12
  1726  001734  5056               	movf	_uc_ptr,w,c
  1727  001736  26D9               	addwf	fsr2l,f,c
  1728  001738  5057               	movf	_uc_ptr+1,w,c
  1729  00173A  22DA               	addwfc	fsr2h,f,c
  1730  00173C  0E00               	movlw	0
  1731  00173E  6EDF               	movwf	indf2,c
  1732                           
  1733                           ; BSR set to: 1
  1734                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  1735  001740  889D               	bsf	3997,4,c	;volatile
  1736                           
  1737                           ; BSR set to: 1
  1738  001742  0012               	return	
  1739  001744                     __end_of_uart_trans:
  1740                           	opt stack 0
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           prodh	equ	0xFF4
  1746                           prodl	equ	0xFF3
  1747                           intcon2	equ	0xFF1
  1748                           postinc0	equ	0xFEE
  1749                           wreg	equ	0xFE8
  1750                           indf1	equ	0xFE7
  1751                           postdec1	equ	0xFE5
  1752                           fsr1h	equ	0xFE2
  1753                           fsr1l	equ	0xFE1
  1754                           indf2	equ	0xFDF
  1755                           fsr2h	equ	0xFDA
  1756                           fsr2l	equ	0xFD9
  1757                           status	equ	0xFD8
  1758                           
  1759 ;; *************** function _timer1_lthread *****************
  1760 ;; Defined at:
  1761 ;;		line 14 in file "../src/timer1_thread.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  1764 ;;		 -> main@t1thread_data(2), 
  1765 ;;  msgtype         2   28[BANK1 ] int 
  1766 ;;  length          2   30[BANK1 ] int 
  1767 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1768 ;;		 -> main@msgbuffer(11), 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  retval          1   35[BANK1 ] char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  2   26[BANK1 ] int 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1780 ;;      Params:         0       0       8       0       0
  1781 ;;      Locals:         0       0       1       0       0
  1782 ;;      Temps:          0       0       1       0       0
  1783 ;;      Totals:         0       0      10       0       0
  1784 ;;Total ram usage:       10 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:   14
  1787 ;; This function calls:
  1788 ;;		_FromMainHigh_sendmsg
  1789 ;;		___lwmod
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text2
  1796  001CC2                     __ptext2:
  1797                           	opt stack 0
  1798  001CC2                     _timer1_lthread:
  1799                           	opt stack 16
  1800                           
  1801                           ;timer1_thread.c: 15: signed char retval;
  1802                           ;timer1_thread.c: 17: tptr->msgcount++;
  1803                           
  1804                           ; BSR set to: 1
  1805                           ;incstack = 0
  1806  001CC2  C1A0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1807  001CC6  C1A1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1808  001CCA  2ADE               	incf	postinc2,f,c
  1809  001CCC  0E00               	movlw	0
  1810  001CCE  22DD               	addwfc	postdec2,f,c
  1811                           
  1812                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1813  001CD0  C1A0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1814  001CD4  C1A1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1815  001CD8  0101               	movlb	1	; () banked
  1816  001CDA  CFDE F186          	movff	postinc2,___lwmod@dividend
  1817  001CDE  0101               	movlb	1	; () banked
  1818  001CE0  CFDD F187          	movff	postdec2,___lwmod@dividend+1
  1819  001CE4  0E00               	movlw	0
  1820  001CE6  0101               	movlb	1	; () banked
  1821  001CE8  0101               	movlb	1	; () banked
  1822  001CEA  6F89               	movwf	(___lwmod@divisor+1)& (0+255),b
  1823  001CEC  0E0A               	movlw	10
  1824  001CEE  0101               	movlb	1	; () banked
  1825  001CF0  6F88               	movwf	___lwmod@divisor& (0+255),b
  1826  001CF2  EC93  F00C         	call	___lwmod	;wreg free
  1827  001CF6  0101               	movlb	1	; () banked
  1828  001CF8  0101               	movlb	1	; () banked
  1829  001CFA  5186               	movf	?___lwmod& (0+255),w,b
  1830  001CFC  0A09               	xorlw	9
  1831  001CFE  0101               	movlb	1	; () banked
  1832  001D00  1187               	iorwf	(?___lwmod+1)& (0+255),w,b
  1833  001D02  A4D8               	btfss	status,2,c
  1834  001D04  0012               	return	
  1835                           
  1836                           ; BSR set to: 1
  1837                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1838  001D06  0101               	movlb	1	; () banked
  1839  001D08  6FA8               	movwf	??_timer1_lthread& (0+255),b
  1840  001D0A  0E14               	movlw	20
  1841  001D0C  0101               	movlb	1	; () banked
  1842  001D0E  0101               	movlb	1	; () banked
  1843  001D10  6F9C               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1844  001D12  0101               	movlb	1	; () banked
  1845  001D14  51A8               	movf	??_timer1_lthread& (0+255),w,b
  1846  001D16  0101               	movlb	1	; () banked
  1847  001D18  0101               	movlb	1	; () banked
  1848  001D1A  C1A1  F19E         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1849  001D1E  0101               	movlb	1	; () banked
  1850  001D20  0101               	movlb	1	; () banked
  1851  001D22  C1A0  F19D         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1852  001D26  0E02               	movlw	2
  1853  001D28  ECB3  F010         	call	_FromMainHigh_sendmsg
  1854  001D2C  0101               	movlb	1	; () banked
  1855  001D2E  0101               	movlb	1	; () banked
  1856  001D30  6FA9               	movwf	timer1_lthread@retval& (0+255),b
  1857  001D32  0012               	return	
  1858  001D34                     __end_of_timer1_lthread:
  1859                           	opt stack 0
  1860                           tblptru	equ	0xFF8
  1861                           tblptrh	equ	0xFF7
  1862                           tblptrl	equ	0xFF6
  1863                           tablat	equ	0xFF5
  1864                           prodh	equ	0xFF4
  1865                           prodl	equ	0xFF3
  1866                           intcon2	equ	0xFF1
  1867                           postinc0	equ	0xFEE
  1868                           wreg	equ	0xFE8
  1869                           indf1	equ	0xFE7
  1870                           postdec1	equ	0xFE5
  1871                           fsr1h	equ	0xFE2
  1872                           fsr1l	equ	0xFE1
  1873                           indf2	equ	0xFDF
  1874                           postinc2	equ	0xFDE
  1875                           postdec2	equ	0xFDD
  1876                           fsr2h	equ	0xFDA
  1877                           fsr2l	equ	0xFD9
  1878                           status	equ	0xFD8
  1879                           
  1880 ;; *************** function ___lwmod *****************
  1881 ;; Defined at:
  1882 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  dividend        2    0[BANK1 ] unsigned int 
  1885 ;;  divisor         2    2[BANK1 ] unsigned int 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  counter         1    5[BANK1 ] unsigned char 
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  2    0[BANK1 ] unsigned int 
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1897 ;;      Params:         0       0       4       0       0
  1898 ;;      Locals:         0       0       1       0       0
  1899 ;;      Temps:          0       0       1       0       0
  1900 ;;      Totals:         0       0       6       0       0
  1901 ;;Total ram usage:        6 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:   11
  1904 ;; This function calls:
  1905 ;;		Nothing
  1906 ;; This function is called by:
  1907 ;;		_timer1_lthread
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text3
  1912  001926                     __ptext3:
  1913                           	opt stack 0
  1914  001926                     ___lwmod:
  1915                           	opt stack 18
  1916                           
  1917                           ; BSR set to: 1
  1918                           ;incstack = 0
  1919  001926  0101               	movlb	1	; () banked
  1920  001928  0101               	movlb	1	; () banked
  1921  00192A  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1922  00192C  1188               	iorwf	___lwmod@divisor& (0+255),w,b
  1923  00192E  B4D8               	btfsc	status,2,c
  1924  001930  D03A               	goto	l1160
  1925                           
  1926                           ; BSR set to: 1
  1927  001932  0101               	movlb	1	; () banked
  1928  001934  6F8A               	movwf	??___lwmod& (0+255),b
  1929  001936  0E01               	movlw	1
  1930  001938  0101               	movlb	1	; () banked
  1931  00193A  0101               	movlb	1	; () banked
  1932  00193C  6F8B               	movwf	___lwmod@counter& (0+255),b
  1933  00193E  0101               	movlb	1	; () banked
  1934  001940  518A               	movf	??___lwmod& (0+255),w,b
  1935  001942  D009               	goto	l4568
  1936  001944                     l4566:
  1937                           
  1938                           ; BSR set to: 1
  1939  001944  0101               	movlb	1	; () banked
  1940  001946  0101               	movlb	1	; () banked
  1941  001948  0101               	movlb	1	; () banked
  1942  00194A  90D8               	bcf	status,0,c
  1943  00194C  3788               	rlcf	___lwmod@divisor& (0+255),f,b
  1944  00194E  3789               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1945  001950  0101               	movlb	1	; () banked
  1946  001952  0101               	movlb	1	; () banked
  1947  001954  2B8B               	incf	___lwmod@counter& (0+255),f,b
  1948  001956                     l4568:
  1949                           
  1950                           ; BSR set to: 1
  1951  001956  0101               	movlb	1	; () banked
  1952  001958  0101               	movlb	1	; () banked
  1953  00195A  AF89               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1954  00195C  D7F3               	goto	l4566
  1955  00195E                     l4570:
  1956                           
  1957                           ; BSR set to: 1
  1958  00195E  0101               	movlb	1	; () banked
  1959  001960  0101               	movlb	1	; () banked
  1960  001962  5188               	movf	___lwmod@divisor& (0+255),w,b
  1961  001964  0101               	movlb	1	; () banked
  1962  001966  0101               	movlb	1	; () banked
  1963  001968  5D86               	subwf	___lwmod@dividend& (0+255),w,b
  1964  00196A  0101               	movlb	1	; () banked
  1965  00196C  0101               	movlb	1	; () banked
  1966  00196E  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1967  001970  0101               	movlb	1	; () banked
  1968  001972  0101               	movlb	1	; () banked
  1969  001974  5987               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1970  001976  A0D8               	btfss	status,0,c
  1971  001978  D00C               	goto	l4574
  1972                           
  1973                           ; BSR set to: 1
  1974  00197A  0101               	movlb	1	; () banked
  1975  00197C  0101               	movlb	1	; () banked
  1976  00197E  5188               	movf	___lwmod@divisor& (0+255),w,b
  1977  001980  0101               	movlb	1	; () banked
  1978  001982  0101               	movlb	1	; () banked
  1979  001984  5F86               	subwf	___lwmod@dividend& (0+255),f,b
  1980  001986  0101               	movlb	1	; () banked
  1981  001988  0101               	movlb	1	; () banked
  1982  00198A  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1983  00198C  0101               	movlb	1	; () banked
  1984  00198E  0101               	movlb	1	; () banked
  1985  001990  5B87               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1986  001992                     l4574:
  1987                           
  1988                           ; BSR set to: 1
  1989  001992  0101               	movlb	1	; () banked
  1990  001994  0101               	movlb	1	; () banked
  1991  001996  0101               	movlb	1	; () banked
  1992  001998  90D8               	bcf	status,0,c
  1993  00199A  3389               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1994  00199C  3388               	rrcf	___lwmod@divisor& (0+255),f,b
  1995                           
  1996                           ; BSR set to: 1
  1997  00199E  0101               	movlb	1	; () banked
  1998  0019A0  0101               	movlb	1	; () banked
  1999  0019A2  2F8B               	decfsz	___lwmod@counter& (0+255),f,b
  2000  0019A4  D7DC               	goto	l4570
  2001  0019A6                     l1160:
  2002                           
  2003                           ; BSR set to: 1
  2004  0019A6  C186  F186         	movff	___lwmod@dividend,?___lwmod
  2005  0019AA  C187  F187         	movff	___lwmod@dividend+1,?___lwmod+1
  2006                           
  2007                           ; BSR set to: 1
  2008  0019AE  0012               	return	
  2009  0019B0                     __end_of___lwmod:
  2010                           	opt stack 0
  2011                           tblptru	equ	0xFF8
  2012                           tblptrh	equ	0xFF7
  2013                           tblptrl	equ	0xFF6
  2014                           tablat	equ	0xFF5
  2015                           prodh	equ	0xFF4
  2016                           prodl	equ	0xFF3
  2017                           intcon2	equ	0xFF1
  2018                           postinc0	equ	0xFEE
  2019                           wreg	equ	0xFE8
  2020                           indf1	equ	0xFE7
  2021                           postdec1	equ	0xFE5
  2022                           fsr1h	equ	0xFE2
  2023                           fsr1l	equ	0xFE1
  2024                           indf2	equ	0xFDF
  2025                           postinc2	equ	0xFDE
  2026                           postdec2	equ	0xFDD
  2027                           fsr2h	equ	0xFDA
  2028                           fsr2l	equ	0xFD9
  2029                           status	equ	0xFD8
  2030                           
  2031 ;; *************** function _FromMainHigh_sendmsg *****************
  2032 ;; Defined at:
  2033 ;;		line 174 in file "../src/messages.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  length          1    wreg     unsigned char 
  2036 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2037 ;;  data            2   23[BANK1 ] PTR void 
  2038 ;;		 -> main@t1thread_data(2), 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  length          1   25[BANK1 ] unsigned char 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      char 
  2043 ;; Registers used:
  2044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2050 ;;      Params:         0       0       3       0       0
  2051 ;;      Locals:         0       0       1       0       0
  2052 ;;      Temps:          0       0       0       0       0
  2053 ;;      Totals:         0       0       4       0       0
  2054 ;;Total ram usage:        4 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:   13
  2057 ;; This function calls:
  2058 ;;		_send_msg
  2059 ;; This function is called by:
  2060 ;;		_timer1_lthread
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text4
  2065  002166                     __ptext4:
  2066                           	opt stack 0
  2067  002166                     _FromMainHigh_sendmsg:
  2068                           	opt stack 16
  2069                           
  2070                           ; BSR set to: 1
  2071                           ;incstack = 0
  2072                           ;FromMainHigh_sendmsg@length stored from wreg
  2073  002166  CFE8 F19F          	movff	wreg,FromMainHigh_sendmsg@length
  2074                           
  2075                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2076  00216A  0102               	movlb	2	; () banked
  2077  00216C  0E02               	movlw	high _FromMainHigh_MQ
  2078  00216E  0101               	movlb	1	; () banked
  2079  002170  0101               	movlb	1	; () banked
  2080  002172  6F91               	movwf	(send_msg@qptr+1)& (0+255),b
  2081  002174  0102               	movlb	2	; () banked
  2082  002176  0E00               	movlw	low _FromMainHigh_MQ
  2083  002178  0101               	movlb	1	; () banked
  2084  00217A  0101               	movlb	1	; () banked
  2085  00217C  6F90               	movwf	send_msg@qptr& (0+255),b
  2086  00217E  C19F  F192         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2087  002182  C19C  F193         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2088  002186  0101               	movlb	1	; () banked
  2089  002188  0101               	movlb	1	; () banked
  2090  00218A  C19E  F195         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2091  00218E  0101               	movlb	1	; () banked
  2092  002190  0101               	movlb	1	; () banked
  2093  002192  C19D  F194         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2094  002196  EC61  F007         	call	_send_msg	;wreg free
  2095  00219A  0012               	return	
  2096  00219C                     __end_of_FromMainHigh_sendmsg:
  2097                           	opt stack 0
  2098                           tblptru	equ	0xFF8
  2099                           tblptrh	equ	0xFF7
  2100                           tblptrl	equ	0xFF6
  2101                           tablat	equ	0xFF5
  2102                           prodh	equ	0xFF4
  2103                           prodl	equ	0xFF3
  2104                           intcon2	equ	0xFF1
  2105                           postinc0	equ	0xFEE
  2106                           wreg	equ	0xFE8
  2107                           indf1	equ	0xFE7
  2108                           postdec1	equ	0xFE5
  2109                           fsr1h	equ	0xFE2
  2110                           fsr1l	equ	0xFE1
  2111                           indf2	equ	0xFDF
  2112                           postinc2	equ	0xFDE
  2113                           postdec2	equ	0xFDD
  2114                           fsr2h	equ	0xFDA
  2115                           fsr2l	equ	0xFD9
  2116                           status	equ	0xFD8
  2117                           
  2118 ;; *************** function _send_msg *****************
  2119 ;; Defined at:
  2120 ;;		line 24 in file "../src/messages.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2123 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2124 ;;  length          1   12[BANK1 ] unsigned char 
  2125 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2126 ;;  data            2   14[BANK1 ] PTR void 
  2127 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  2128 ;;		 -> main@uc(13), 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  2131 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  2132 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2133 ;;  tlength         2   17[BANK1 ] unsigned int 
  2134 ;;  slot            1   19[BANK1 ] unsigned char 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      char 
  2137 ;; Registers used:
  2138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2144 ;;      Params:         0       0       6       0       0
  2145 ;;      Locals:         0       0       5       0       0
  2146 ;;      Temps:          0       0       1       0       0
  2147 ;;      Totals:         0       0      12       0       0
  2148 ;;Total ram usage:       12 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:   12
  2151 ;; This function calls:
  2152 ;;		___awmod
  2153 ;;		_memcpy
  2154 ;; This function is called by:
  2155 ;;		_FromMainHigh_sendmsg
  2156 ;;		_FromMainLow_sendmsg
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text5
  2161  000EC2                     __ptext5:
  2162                           	opt stack 0
  2163  000EC2                     _send_msg:
  2164                           	opt stack 16
  2165                           
  2166                           ;messages.c: 25: unsigned char slot;
  2167                           ;messages.c: 27: msg *qmsg;
  2168                           ;messages.c: 28: size_t tlength = length;
  2169                           
  2170                           ;incstack = 0
  2171  000EC2  0101               	movlb	1	; () banked
  2172  000EC4  0101               	movlb	1	; () banked
  2173  000EC6  C192  F197         	movff	send_msg@length,send_msg@tlength
  2174  000ECA  0101               	movlb	1	; () banked
  2175  000ECC  0101               	movlb	1	; () banked
  2176  000ECE  6B98               	clrf	(send_msg@tlength+1)& (0+255),b
  2177                           
  2178                           ; BSR set to: 1
  2179                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2180  000ED0  0101               	movlb	1	; () banked
  2181  000ED2  EE20 F041          	lfsr	2,65
  2182  000ED6  0101               	movlb	1	; () banked
  2183  000ED8  5190               	movf	send_msg@qptr& (0+255),w,b
  2184  000EDA  26D9               	addwf	fsr2l,f,c
  2185  000EDC  0101               	movlb	1	; () banked
  2186  000EDE  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  2187  000EE0  22DA               	addwfc	fsr2h,f,c
  2188  000EE2  50DF               	movf	indf2,w,c
  2189  000EE4  0101               	movlb	1	; () banked
  2190  000EE6  0101               	movlb	1	; () banked
  2191  000EE8  6F99               	movwf	send_msg@slot& (0+255),b
  2192                           
  2193                           ; BSR set to: 1
  2194                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2195  000EEA  0101               	movlb	1	; () banked
  2196  000EEC  0101               	movlb	1	; () banked
  2197  000EEE  5199               	movf	send_msg@slot& (0+255),w,b
  2198  000EF0  0D0D               	mullw	13
  2199  000EF2  50F3               	movf	prodl,w,c
  2200  000EF4  0101               	movlb	1	; () banked
  2201  000EF6  0101               	movlb	1	; () banked
  2202  000EF8  2590               	addwf	send_msg@qptr& (0+255),w,b
  2203  000EFA  0101               	movlb	1	; () banked
  2204  000EFC  0101               	movlb	1	; () banked
  2205  000EFE  6F9A               	movwf	send_msg@qmsg& (0+255),b
  2206  000F00  50F4               	movf	prodh,w,c
  2207  000F02  0101               	movlb	1	; () banked
  2208  000F04  0101               	movlb	1	; () banked
  2209  000F06  2191               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2210  000F08  0101               	movlb	1	; () banked
  2211  000F0A  6F9B               	movwf	(send_msg@qmsg+1)& (0+255),b
  2212                           
  2213                           ; BSR set to: 1
  2214                           ;messages.c: 41: if (qmsg->full != 0) {
  2215  000F0C  C19A  FFD9         	movff	send_msg@qmsg,fsr2l
  2216  000F10  C19B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2217  000F14  50DF               	movf	indf2,w,c
  2218  000F16  B4D8               	btfsc	status,2,c
  2219  000F18  D002               	goto	l4162
  2220                           
  2221                           ; BSR set to: 1
  2222                           ;messages.c: 42: return (-1);
  2223  000F1A  0EFF               	movlw	255
  2224  000F1C  0012               	return	
  2225  000F1E                     l4162:
  2226                           
  2227                           ; BSR set to: 1
  2228                           ;messages.c: 43: }
  2229                           ;messages.c: 46: qmsg->length = length;
  2230  000F1E  0101               	movlb	1	; () banked
  2231  000F20  EE20 F001          	lfsr	2,1
  2232  000F24  0101               	movlb	1	; () banked
  2233  000F26  519A               	movf	send_msg@qmsg& (0+255),w,b
  2234  000F28  26D9               	addwf	fsr2l,f,c
  2235  000F2A  0101               	movlb	1	; () banked
  2236  000F2C  519B               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2237  000F2E  22DA               	addwfc	fsr2h,f,c
  2238  000F30  0101               	movlb	1	; () banked
  2239  000F32  C192  FFDF         	movff	send_msg@length,indf2
  2240                           
  2241                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2242  000F36  0101               	movlb	1	; () banked
  2243  000F38  EE20 F002          	lfsr	2,2
  2244  000F3C  0101               	movlb	1	; () banked
  2245  000F3E  519A               	movf	send_msg@qmsg& (0+255),w,b
  2246  000F40  26D9               	addwf	fsr2l,f,c
  2247  000F42  0101               	movlb	1	; () banked
  2248  000F44  519B               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2249  000F46  22DA               	addwfc	fsr2h,f,c
  2250  000F48  0101               	movlb	1	; () banked
  2251  000F4A  C193  FFDF         	movff	send_msg@msgtype,indf2
  2252                           
  2253                           ; BSR set to: 1
  2254                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2255  000F4E  0E03               	movlw	3
  2256  000F50  0101               	movlb	1	; () banked
  2257  000F52  0101               	movlb	1	; () banked
  2258  000F54  259A               	addwf	send_msg@qmsg& (0+255),w,b
  2259  000F56  0101               	movlb	1	; () banked
  2260  000F58  0101               	movlb	1	; () banked
  2261  000F5A  6F86               	movwf	memcpy@d1& (0+255),b
  2262  000F5C  0E00               	movlw	0
  2263  000F5E  0101               	movlb	1	; () banked
  2264  000F60  0101               	movlb	1	; () banked
  2265  000F62  219B               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2266  000F64  0101               	movlb	1	; () banked
  2267  000F66  6F87               	movwf	(memcpy@d1+1)& (0+255),b
  2268  000F68  0101               	movlb	1	; () banked
  2269  000F6A  0101               	movlb	1	; () banked
  2270  000F6C  C195  F189         	movff	send_msg@data+1,memcpy@s1+1
  2271  000F70  0101               	movlb	1	; () banked
  2272  000F72  0101               	movlb	1	; () banked
  2273  000F74  C194  F188         	movff	send_msg@data,memcpy@s1
  2274  000F78  C197  F18A         	movff	send_msg@tlength,memcpy@n
  2275  000F7C  C198  F18B         	movff	send_msg@tlength+1,memcpy@n+1
  2276  000F80  EC6F  F00F         	call	_memcpy	;wreg free
  2277                           
  2278                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  2279  000F84  0101               	movlb	1	; () banked
  2280  000F86  EE20 F041          	lfsr	2,65
  2281  000F8A  0101               	movlb	1	; () banked
  2282  000F8C  5190               	movf	send_msg@qptr& (0+255),w,b
  2283  000F8E  26D9               	addwf	fsr2l,f,c
  2284  000F90  0101               	movlb	1	; () banked
  2285  000F92  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  2286  000F94  22DA               	addwfc	fsr2h,f,c
  2287  000F96  0101               	movlb	1	; () banked
  2288  000F98  EE10 F041          	lfsr	1,65
  2289  000F9C  0101               	movlb	1	; () banked
  2290  000F9E  5190               	movf	send_msg@qptr& (0+255),w,b
  2291  000FA0  26E1               	addwf	fsr1l,f,c
  2292  000FA2  0101               	movlb	1	; () banked
  2293  000FA4  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  2294  000FA6  22E2               	addwfc	fsr1h,f,c
  2295  000FA8  50E7               	movf	indf1,w,c
  2296  000FAA  0101               	movlb	1	; () banked
  2297  000FAC  6F96               	movwf	??_send_msg& (0+255),b
  2298  000FAE  0E01               	movlw	1
  2299  000FB0  0101               	movlb	1	; () banked
  2300  000FB2  2596               	addwf	??_send_msg& (0+255),w,b
  2301  000FB4  0101               	movlb	1	; () banked
  2302  000FB6  0101               	movlb	1	; () banked
  2303  000FB8  6F86               	movwf	___awmod@dividend& (0+255),b
  2304  000FBA  0101               	movlb	1	; () banked
  2305  000FBC  0101               	movlb	1	; () banked
  2306  000FBE  6B87               	clrf	(___awmod@dividend+1)& (0+255),b
  2307  000FC0  0E00               	movlw	0
  2308  000FC2  2387               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  2309  000FC4  0E00               	movlw	0
  2310  000FC6  0101               	movlb	1	; () banked
  2311  000FC8  0101               	movlb	1	; () banked
  2312  000FCA  6F89               	movwf	(___awmod@divisor+1)& (0+255),b
  2313  000FCC  0E05               	movlw	5
  2314  000FCE  0101               	movlb	1	; () banked
  2315  000FD0  6F88               	movwf	___awmod@divisor& (0+255),b
  2316  000FD2  EC8D  F008         	call	___awmod	;wreg free
  2317  000FD6  0101               	movlb	1	; () banked
  2318  000FD8  0101               	movlb	1	; () banked
  2319  000FDA  5186               	movf	?___awmod& (0+255),w,b
  2320  000FDC  6EDF               	movwf	indf2,c
  2321                           
  2322                           ; BSR set to: 1
  2323                           ;messages.c: 59: qmsg->full = 1;
  2324  000FDE  C19A  FFD9         	movff	send_msg@qmsg,fsr2l
  2325  000FE2  C19B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2326  000FE6  0E01               	movlw	1
  2327  000FE8  6EDF               	movwf	indf2,c
  2328                           
  2329                           ; BSR set to: 1
  2330                           ;messages.c: 60: return (1);
  2331  000FEA  0E01               	movlw	1
  2332  000FEC  0012               	return	
  2333  000FEE                     __end_of_send_msg:
  2334                           	opt stack 0
  2335                           tblptru	equ	0xFF8
  2336                           tblptrh	equ	0xFF7
  2337                           tblptrl	equ	0xFF6
  2338                           tablat	equ	0xFF5
  2339                           prodh	equ	0xFF4
  2340                           prodl	equ	0xFF3
  2341                           intcon2	equ	0xFF1
  2342                           postinc0	equ	0xFEE
  2343                           wreg	equ	0xFE8
  2344                           indf1	equ	0xFE7
  2345                           postdec1	equ	0xFE5
  2346                           fsr1h	equ	0xFE2
  2347                           fsr1l	equ	0xFE1
  2348                           indf2	equ	0xFDF
  2349                           postinc2	equ	0xFDE
  2350                           postdec2	equ	0xFDD
  2351                           fsr2h	equ	0xFDA
  2352                           fsr2l	equ	0xFD9
  2353                           status	equ	0xFD8
  2354                           
  2355 ;; *************** function _timer0_lthread *****************
  2356 ;; Defined at:
  2357 ;;		line 9 in file "../src/timer0_thread.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2360 ;;		 -> main@t0thread_data(2), 
  2361 ;;  msgtype         2    2[BANK1 ] int 
  2362 ;;  length          2    4[BANK1 ] int 
  2363 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2364 ;;		 -> main@msgbuffer(11), 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2367 ;;		 -> main@msgbuffer(11), 
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  2    0[BANK1 ] int 
  2370 ;; Registers used:
  2371 ;;		wreg, status,2, status,0
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2377 ;;      Params:         0       0       8       0       0
  2378 ;;      Locals:         0       0       2       0       0
  2379 ;;      Temps:          0       0       0       0       0
  2380 ;;      Totals:         0       0      10       0       0
  2381 ;;Total ram usage:       10 bytes
  2382 ;; Hardware stack levels used:    1
  2383 ;; Hardware stack levels required when called:   11
  2384 ;; This function calls:
  2385 ;;		Nothing
  2386 ;; This function is called by:
  2387 ;;		_main
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text6
  2392  00236A                     __ptext6:
  2393                           	opt stack 0
  2394  00236A                     _timer0_lthread:
  2395                           	opt stack 19
  2396                           
  2397                           ;timer0_thread.c: 10: unsigned int *msgval;
  2398                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2399                           
  2400                           ; BSR set to: 1
  2401                           ;incstack = 0
  2402  00236A  0101               	movlb	1	; () banked
  2403  00236C  0101               	movlb	1	; () banked
  2404  00236E  C18D  F18F         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2405  002372  0101               	movlb	1	; () banked
  2406  002374  0101               	movlb	1	; () banked
  2407  002376  C18C  F18E         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2408                           
  2409                           ; BSR set to: 1
  2410  00237A  0012               	return	
  2411  00237C                     __end_of_timer0_lthread:
  2412                           	opt stack 0
  2413                           tblptru	equ	0xFF8
  2414                           tblptrh	equ	0xFF7
  2415                           tblptrl	equ	0xFF6
  2416                           tablat	equ	0xFF5
  2417                           prodh	equ	0xFF4
  2418                           prodl	equ	0xFF3
  2419                           intcon2	equ	0xFF1
  2420                           postinc0	equ	0xFEE
  2421                           wreg	equ	0xFE8
  2422                           indf1	equ	0xFE7
  2423                           postdec1	equ	0xFE5
  2424                           fsr1h	equ	0xFE2
  2425                           fsr1l	equ	0xFE1
  2426                           indf2	equ	0xFDF
  2427                           postinc2	equ	0xFDE
  2428                           postdec2	equ	0xFDD
  2429                           fsr2h	equ	0xFDA
  2430                           fsr2l	equ	0xFD9
  2431                           status	equ	0xFD8
  2432                           
  2433 ;; *************** function _init_uart_recv *****************
  2434 ;; Defined at:
  2435 ;;		line 54 in file "../src/my_uart.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2438 ;;		 -> main@uc(13), 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;		None               void
  2443 ;; Registers used:
  2444 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2450 ;;      Params:         0       0       2       0       0
  2451 ;;      Locals:         0       0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0
  2453 ;;      Totals:         0       0       2       0       0
  2454 ;;Total ram usage:        2 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:   11
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_main
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text7
  2465  002318                     __ptext7:
  2466                           	opt stack 0
  2467  002318                     _init_uart_recv:
  2468                           	opt stack 19
  2469                           
  2470                           ;my_uart.c: 57: uc_ptr = uc;
  2471                           
  2472                           ; BSR set to: 1
  2473                           ;incstack = 0
  2474  002318  0101               	movlb	1	; () banked
  2475  00231A  C187  F057         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2476  00231E  0101               	movlb	1	; () banked
  2477  002320  C186  F056         	movff	init_uart_recv@uc,_uc_ptr
  2478                           
  2479                           ; BSR set to: 1
  2480                           ;my_uart.c: 58: uc_ptr->buflen = 0;
  2481  002324  EE20 F005          	lfsr	2,5
  2482  002328  5056               	movf	_uc_ptr,w,c
  2483  00232A  26D9               	addwf	fsr2l,f,c
  2484  00232C  5057               	movf	_uc_ptr+1,w,c
  2485  00232E  22DA               	addwfc	fsr2h,f,c
  2486  002330  0E00               	movlw	0
  2487  002332  6EDF               	movwf	indf2,c
  2488                           
  2489                           ; BSR set to: 1
  2490  002334  0012               	return	
  2491  002336                     __end_of_init_uart_recv:
  2492                           	opt stack 0
  2493                           tblptru	equ	0xFF8
  2494                           tblptrh	equ	0xFF7
  2495                           tblptrl	equ	0xFF6
  2496                           tablat	equ	0xFF5
  2497                           prodh	equ	0xFF4
  2498                           prodl	equ	0xFF3
  2499                           intcon2	equ	0xFF1
  2500                           postinc0	equ	0xFEE
  2501                           wreg	equ	0xFE8
  2502                           indf1	equ	0xFE7
  2503                           postdec1	equ	0xFE5
  2504                           fsr1h	equ	0xFE2
  2505                           fsr1l	equ	0xFE1
  2506                           indf2	equ	0xFDF
  2507                           postinc2	equ	0xFDE
  2508                           postdec2	equ	0xFDD
  2509                           fsr2h	equ	0xFDA
  2510                           fsr2l	equ	0xFD9
  2511                           status	equ	0xFD8
  2512                           
  2513 ;; *************** function _init_timer1_lthread *****************
  2514 ;; Defined at:
  2515 ;;		line 6 in file "../src/timer1_thread.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2518 ;;		 -> main@t1thread_data(2), 
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;		None               void
  2523 ;; Registers used:
  2524 ;;		wreg, fsr2l, fsr2h
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2530 ;;      Params:         0       0       2       0       0
  2531 ;;      Locals:         0       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0
  2533 ;;      Totals:         0       0       2       0       0
  2534 ;;Total ram usage:        2 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:   11
  2537 ;; This function calls:
  2538 ;;		Nothing
  2539 ;; This function is called by:
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text8
  2545  00237C                     __ptext8:
  2546                           	opt stack 0
  2547  00237C                     _init_timer1_lthread:
  2548                           	opt stack 19
  2549                           
  2550                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2551                           
  2552                           ; BSR set to: 1
  2553                           ;incstack = 0
  2554  00237C  C186  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2555  002380  C187  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2556  002384  0E00               	movlw	0
  2557  002386  6EDE               	movwf	postinc2,c
  2558  002388  0E00               	movlw	0
  2559  00238A  6EDD               	movwf	postdec2,c
  2560  00238C  0012               	return	
  2561  00238E                     __end_of_init_timer1_lthread:
  2562                           	opt stack 0
  2563                           tblptru	equ	0xFF8
  2564                           tblptrh	equ	0xFF7
  2565                           tblptrl	equ	0xFF6
  2566                           tablat	equ	0xFF5
  2567                           prodh	equ	0xFF4
  2568                           prodl	equ	0xFF3
  2569                           intcon2	equ	0xFF1
  2570                           postinc0	equ	0xFEE
  2571                           wreg	equ	0xFE8
  2572                           indf1	equ	0xFE7
  2573                           postdec1	equ	0xFE5
  2574                           fsr1h	equ	0xFE2
  2575                           fsr1l	equ	0xFE1
  2576                           indf2	equ	0xFDF
  2577                           postinc2	equ	0xFDE
  2578                           postdec2	equ	0xFDD
  2579                           fsr2h	equ	0xFDA
  2580                           fsr2l	equ	0xFD9
  2581                           status	equ	0xFD8
  2582                           
  2583 ;; *************** function _init_queues *****************
  2584 ;; Defined at:
  2585 ;;		line 194 in file "../src/messages.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;		None               void
  2592 ;; Registers used:
  2593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2599 ;;      Params:         0       0       0       0       0
  2600 ;;      Locals:         0       0       0       0       0
  2601 ;;      Temps:          0       0       1       0       0
  2602 ;;      Totals:         0       0       1       0       0
  2603 ;;Total ram usage:        1 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:   12
  2606 ;; This function calls:
  2607 ;;		_init_queue
  2608 ;; This function is called by:
  2609 ;;		_main
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text9
  2614  001D34                     __ptext9:
  2615                           	opt stack 0
  2616  001D34                     _init_queues:
  2617                           	opt stack 18
  2618                           
  2619                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2620                           
  2621                           ;incstack = 0
  2622  001D34  0101               	movlb	1	; () banked
  2623  001D36  6F8A               	movwf	??_init_queues& (0+255),b
  2624  001D38  0E00               	movlw	0
  2625  001D3A  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  2626  001D3C  0101               	movlb	1	; () banked
  2627  001D3E  518A               	movf	??_init_queues& (0+255),w,b
  2628                           
  2629                           ; BSR set to: 1
  2630                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2631  001D40  0101               	movlb	1	; () banked
  2632  001D42  0E01               	movlw	high _ToMainLow_MQ
  2633  001D44  0101               	movlb	1	; () banked
  2634  001D46  0101               	movlb	1	; () banked
  2635  001D48  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2636  001D4A  0101               	movlb	1	; () banked
  2637  001D4C  0E43               	movlw	low _ToMainLow_MQ
  2638  001D4E  0101               	movlb	1	; () banked
  2639  001D50  0101               	movlb	1	; () banked
  2640  001D52  6F86               	movwf	init_queue@qptr& (0+255),b
  2641  001D54  EC24  F00E         	call	_init_queue	;wreg free
  2642                           
  2643                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2644  001D58  0101               	movlb	1	; () banked
  2645  001D5A  0E01               	movlw	high _ToMainHigh_MQ
  2646  001D5C  0101               	movlb	1	; () banked
  2647  001D5E  0101               	movlb	1	; () banked
  2648  001D60  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2649  001D62  0101               	movlb	1	; () banked
  2650  001D64  0E00               	movlw	low _ToMainHigh_MQ
  2651  001D66  0101               	movlb	1	; () banked
  2652  001D68  0101               	movlb	1	; () banked
  2653  001D6A  6F86               	movwf	init_queue@qptr& (0+255),b
  2654  001D6C  EC24  F00E         	call	_init_queue	;wreg free
  2655                           
  2656                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2657  001D70  0102               	movlb	2	; () banked
  2658  001D72  0E02               	movlw	high _FromMainLow_MQ
  2659  001D74  0101               	movlb	1	; () banked
  2660  001D76  0101               	movlb	1	; () banked
  2661  001D78  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2662  001D7A  0102               	movlb	2	; () banked
  2663  001D7C  0E43               	movlw	low _FromMainLow_MQ
  2664  001D7E  0101               	movlb	1	; () banked
  2665  001D80  0101               	movlb	1	; () banked
  2666  001D82  6F86               	movwf	init_queue@qptr& (0+255),b
  2667  001D84  EC24  F00E         	call	_init_queue	;wreg free
  2668                           
  2669                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2670  001D88  0102               	movlb	2	; () banked
  2671  001D8A  0E02               	movlw	high _FromMainHigh_MQ
  2672  001D8C  0101               	movlb	1	; () banked
  2673  001D8E  0101               	movlb	1	; () banked
  2674  001D90  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2675  001D92  0102               	movlb	2	; () banked
  2676  001D94  0E00               	movlw	low _FromMainHigh_MQ
  2677  001D96  0101               	movlb	1	; () banked
  2678  001D98  0101               	movlb	1	; () banked
  2679  001D9A  6F86               	movwf	init_queue@qptr& (0+255),b
  2680  001D9C  EC24  F00E         	call	_init_queue	;wreg free
  2681  001DA0  0012               	return	
  2682  001DA2                     __end_of_init_queues:
  2683                           	opt stack 0
  2684                           tblptru	equ	0xFF8
  2685                           tblptrh	equ	0xFF7
  2686                           tblptrl	equ	0xFF6
  2687                           tablat	equ	0xFF5
  2688                           prodh	equ	0xFF4
  2689                           prodl	equ	0xFF3
  2690                           intcon2	equ	0xFF1
  2691                           postinc0	equ	0xFEE
  2692                           wreg	equ	0xFE8
  2693                           indf1	equ	0xFE7
  2694                           postdec1	equ	0xFE5
  2695                           fsr1h	equ	0xFE2
  2696                           fsr1l	equ	0xFE1
  2697                           indf2	equ	0xFDF
  2698                           postinc2	equ	0xFDE
  2699                           postdec2	equ	0xFDD
  2700                           fsr2h	equ	0xFDA
  2701                           fsr2l	equ	0xFD9
  2702                           status	equ	0xFD8
  2703                           
  2704 ;; *************** function _init_queue *****************
  2705 ;; Defined at:
  2706 ;;		line 14 in file "../src/messages.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2709 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  i               1    3[BANK1 ] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;		None               void
  2714 ;; Registers used:
  2715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2721 ;;      Params:         0       0       2       0       0
  2722 ;;      Locals:         0       0       1       0       0
  2723 ;;      Temps:          0       0       1       0       0
  2724 ;;      Totals:         0       0       4       0       0
  2725 ;;Total ram usage:        4 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:   11
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_init_queues
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text10
  2736  001C48                     __ptext10:
  2737                           	opt stack 0
  2738  001C48                     _init_queue:
  2739                           	opt stack 18
  2740                           
  2741                           ;messages.c: 15: unsigned char i;
  2742                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2743                           
  2744                           ;incstack = 0
  2745  001C48  0101               	movlb	1	; () banked
  2746  001C4A  EE20 F041          	lfsr	2,65
  2747  001C4E  0101               	movlb	1	; () banked
  2748  001C50  5186               	movf	init_queue@qptr& (0+255),w,b
  2749  001C52  26D9               	addwf	fsr2l,f,c
  2750  001C54  0101               	movlb	1	; () banked
  2751  001C56  5187               	movf	(init_queue@qptr+1)& (0+255),w,b
  2752  001C58  22DA               	addwfc	fsr2h,f,c
  2753  001C5A  0E00               	movlw	0
  2754  001C5C  6EDF               	movwf	indf2,c
  2755                           
  2756                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2757  001C5E  0101               	movlb	1	; () banked
  2758  001C60  EE20 F042          	lfsr	2,66
  2759  001C64  0101               	movlb	1	; () banked
  2760  001C66  5186               	movf	init_queue@qptr& (0+255),w,b
  2761  001C68  26D9               	addwf	fsr2l,f,c
  2762  001C6A  0101               	movlb	1	; () banked
  2763  001C6C  5187               	movf	(init_queue@qptr+1)& (0+255),w,b
  2764  001C6E  22DA               	addwfc	fsr2h,f,c
  2765  001C70  0E00               	movlw	0
  2766  001C72  6EDF               	movwf	indf2,c
  2767                           
  2768                           ; BSR set to: 1
  2769                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2770  001C74  0101               	movlb	1	; () banked
  2771  001C76  6F88               	movwf	??_init_queue& (0+255),b
  2772  001C78  0E00               	movlw	0
  2773  001C7A  0101               	movlb	1	; () banked
  2774  001C7C  0101               	movlb	1	; () banked
  2775  001C7E  6F89               	movwf	init_queue@i& (0+255),b
  2776  001C80  0101               	movlb	1	; () banked
  2777  001C82  5188               	movf	??_init_queue& (0+255),w,b
  2778                           
  2779                           ; BSR set to: 1
  2780  001C84  0E04               	movlw	4
  2781  001C86  0101               	movlb	1	; () banked
  2782  001C88  0101               	movlb	1	; () banked
  2783  001C8A  6589               	cpfsgt	init_queue@i& (0+255),b
  2784  001C8C  D001               	goto	l4144
  2785  001C8E  0012               	return	
  2786  001C90                     l4144:
  2787                           
  2788                           ; BSR set to: 1
  2789                           ;messages.c: 20: qptr->queue[i].full = 0;
  2790  001C90  0101               	movlb	1	; () banked
  2791  001C92  0101               	movlb	1	; () banked
  2792  001C94  5189               	movf	init_queue@i& (0+255),w,b
  2793  001C96  0D0D               	mullw	13
  2794  001C98  50F3               	movf	prodl,w,c
  2795  001C9A  0101               	movlb	1	; () banked
  2796  001C9C  0101               	movlb	1	; () banked
  2797  001C9E  2586               	addwf	init_queue@qptr& (0+255),w,b
  2798  001CA0  6ED9               	movwf	fsr2l,c
  2799  001CA2  50F4               	movf	prodh,w,c
  2800  001CA4  0101               	movlb	1	; () banked
  2801  001CA6  0101               	movlb	1	; () banked
  2802  001CA8  2187               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2803  001CAA  6EDA               	movwf	fsr2h,c
  2804  001CAC  0E00               	movlw	0
  2805  001CAE  6EDF               	movwf	indf2,c
  2806                           
  2807                           ; BSR set to: 1
  2808  001CB0  0101               	movlb	1	; () banked
  2809  001CB2  0101               	movlb	1	; () banked
  2810  001CB4  2B89               	incf	init_queue@i& (0+255),f,b
  2811                           
  2812                           ; BSR set to: 1
  2813  001CB6  0E04               	movlw	4
  2814  001CB8  0101               	movlb	1	; () banked
  2815  001CBA  0101               	movlb	1	; () banked
  2816  001CBC  6589               	cpfsgt	init_queue@i& (0+255),b
  2817  001CBE  D7E8               	goto	l4144
  2818  001CC0  0012               	return	
  2819  001CC2                     __end_of_init_queue:
  2820                           	opt stack 0
  2821                           tblptru	equ	0xFF8
  2822                           tblptrh	equ	0xFF7
  2823                           tblptrl	equ	0xFF6
  2824                           tablat	equ	0xFF5
  2825                           prodh	equ	0xFF4
  2826                           prodl	equ	0xFF3
  2827                           intcon2	equ	0xFF1
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           indf1	equ	0xFE7
  2831                           postdec1	equ	0xFE5
  2832                           fsr1h	equ	0xFE2
  2833                           fsr1l	equ	0xFE1
  2834                           indf2	equ	0xFDF
  2835                           postinc2	equ	0xFDE
  2836                           postdec2	equ	0xFDD
  2837                           fsr2h	equ	0xFDA
  2838                           fsr2l	equ	0xFD9
  2839                           status	equ	0xFD8
  2840                           
  2841 ;; *************** function _init_i2c *****************
  2842 ;; Defined at:
  2843 ;;		line 451 in file "../src/my_i2c.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  2846 ;;		 -> main@ic(29), 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;		None               void
  2851 ;; Registers used:
  2852 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2858 ;;      Params:         0       0       2       0       0
  2859 ;;      Locals:         0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0
  2861 ;;      Totals:         0       0       2       0       0
  2862 ;;Total ram usage:        2 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:   11
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text11
  2873  001DA2                     __ptext11:
  2874                           	opt stack 0
  2875  001DA2                     _init_i2c:
  2876                           	opt stack 19
  2877                           
  2878                           ;my_i2c.c: 452: ic_ptr = ic;
  2879                           
  2880                           ; BSR set to: 1
  2881                           ;incstack = 0
  2882  001DA2  0101               	movlb	1	; () banked
  2883  001DA4  0100               	movlb	0	; () banked
  2884  001DA6  C187  F0C4         	movff	init_i2c@ic+1,_ic_ptr+1
  2885  001DAA  0101               	movlb	1	; () banked
  2886  001DAC  0100               	movlb	0	; () banked
  2887  001DAE  C186  F0C3         	movff	init_i2c@ic,_ic_ptr
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;my_i2c.c: 453: ic_ptr->buflen = 0;
  2891  001DB2  0100               	movlb	0	; () banked
  2892  001DB4  EE20 F00A          	lfsr	2,10
  2893  001DB8  0100               	movlb	0	; () banked
  2894  001DBA  51C3               	movf	_ic_ptr& (0+255),w,b
  2895  001DBC  26D9               	addwf	fsr2l,f,c
  2896  001DBE  0100               	movlb	0	; () banked
  2897  001DC0  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  2898  001DC2  22DA               	addwfc	fsr2h,f,c
  2899  001DC4  0E00               	movlw	0
  2900  001DC6  6EDF               	movwf	indf2,c
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;my_i2c.c: 454: ic_ptr->event_count = 0;
  2904  001DC8  0100               	movlb	0	; () banked
  2905  001DCA  EE20 F00C          	lfsr	2,12
  2906  001DCE  0100               	movlb	0	; () banked
  2907  001DD0  51C3               	movf	_ic_ptr& (0+255),w,b
  2908  001DD2  26D9               	addwf	fsr2l,f,c
  2909  001DD4  0100               	movlb	0	; () banked
  2910  001DD6  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  2911  001DD8  22DA               	addwfc	fsr2h,f,c
  2912  001DDA  0E00               	movlw	0
  2913  001DDC  6EDF               	movwf	indf2,c
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;my_i2c.c: 455: ic_ptr->status = 0x5;
  2917  001DDE  0100               	movlb	0	; () banked
  2918  001DE0  EE20 F00D          	lfsr	2,13
  2919  001DE4  0100               	movlb	0	; () banked
  2920  001DE6  51C3               	movf	_ic_ptr& (0+255),w,b
  2921  001DE8  26D9               	addwf	fsr2l,f,c
  2922  001DEA  0100               	movlb	0	; () banked
  2923  001DEC  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  2924  001DEE  22DA               	addwfc	fsr2h,f,c
  2925  001DF0  0E05               	movlw	5
  2926  001DF2  6EDF               	movwf	indf2,c
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;my_i2c.c: 456: ic_ptr->error_count = 0;
  2930  001DF4  0100               	movlb	0	; () banked
  2931  001DF6  EE20 F00F          	lfsr	2,15
  2932  001DFA  0100               	movlb	0	; () banked
  2933  001DFC  51C3               	movf	_ic_ptr& (0+255),w,b
  2934  001DFE  26D9               	addwf	fsr2l,f,c
  2935  001E00  0100               	movlb	0	; () banked
  2936  001E02  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  2937  001E04  22DA               	addwfc	fsr2h,f,c
  2938  001E06  0E00               	movlw	0
  2939  001E08  6EDF               	movwf	indf2,c
  2940                           
  2941                           ; BSR set to: 0
  2942  001E0A  0012               	return	
  2943  001E0C                     __end_of_init_i2c:
  2944                           	opt stack 0
  2945                           tblptru	equ	0xFF8
  2946                           tblptrh	equ	0xFF7
  2947                           tblptrl	equ	0xFF6
  2948                           tablat	equ	0xFF5
  2949                           prodh	equ	0xFF4
  2950                           prodl	equ	0xFF3
  2951                           intcon2	equ	0xFF1
  2952                           postinc0	equ	0xFEE
  2953                           wreg	equ	0xFE8
  2954                           indf1	equ	0xFE7
  2955                           postdec1	equ	0xFE5
  2956                           fsr1h	equ	0xFE2
  2957                           fsr1l	equ	0xFE1
  2958                           indf2	equ	0xFDF
  2959                           postinc2	equ	0xFDE
  2960                           postdec2	equ	0xFDD
  2961                           fsr2h	equ	0xFDA
  2962                           fsr2l	equ	0xFD9
  2963                           status	equ	0xFD8
  2964                           
  2965 ;; *************** function _i2c_master_send *****************
  2966 ;; Defined at:
  2967 ;;		line 44 in file "../src/my_i2c.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  sendlength      1    wreg     unsigned char 
  2970 ;;  recvlength      1    0[BANK1 ] unsigned char 
  2971 ;;  msg             2    1[BANK1 ] PTR unsigned char 
  2972 ;;		 -> main@msgbuffer(11), 
  2973 ;;  slave_addr      1    3[BANK1 ] unsigned char 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  sendlength      1    6[BANK1 ] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      unsigned char 
  2978 ;; Registers used:
  2979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2985 ;;      Params:         0       0       4       0       0
  2986 ;;      Locals:         0       0       1       0       0
  2987 ;;      Temps:          0       0       2       0       0
  2988 ;;      Totals:         0       0       7       0       0
  2989 ;;Total ram usage:        7 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:   11
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_main
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text12
  3000  000D84                     __ptext12:
  3001                           	opt stack 0
  3002  000D84                     _i2c_master_send:
  3003                           	opt stack 19
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;incstack = 0
  3007                           ;i2c_master_send@sendlength stored from wreg
  3008  000D84  CFE8 F18C          	movff	wreg,i2c_master_send@sendlength
  3009                           
  3010                           ;my_i2c.c: 46: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < sendlength; ic_ptr->outbu
      +                          flen++) {
  3011  000D88  0100               	movlb	0	; () banked
  3012  000D8A  EE20 F01A          	lfsr	2,26
  3013  000D8E  0100               	movlb	0	; () banked
  3014  000D90  51C3               	movf	_ic_ptr& (0+255),w,b
  3015  000D92  26D9               	addwf	fsr2l,f,c
  3016  000D94  0100               	movlb	0	; () banked
  3017  000D96  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  3018  000D98  22DA               	addwfc	fsr2h,f,c
  3019  000D9A  0E00               	movlw	0
  3020  000D9C  6EDF               	movwf	indf2,c
  3021  000D9E  D042               	goto	l4128
  3022  000DA0                     l4124:
  3023                           
  3024                           ;my_i2c.c: 47: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  3025  000DA0  0100               	movlb	0	; () banked
  3026  000DA2  EE20 F01A          	lfsr	2,26
  3027  000DA6  0100               	movlb	0	; () banked
  3028  000DA8  51C3               	movf	_ic_ptr& (0+255),w,b
  3029  000DAA  26D9               	addwf	fsr2l,f,c
  3030  000DAC  0100               	movlb	0	; () banked
  3031  000DAE  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  3032  000DB0  22DA               	addwfc	fsr2h,f,c
  3033  000DB2  50DF               	movf	indf2,w,c
  3034  000DB4  0101               	movlb	1	; () banked
  3035  000DB6  6F8A               	movwf	??_i2c_master_send& (0+255),b
  3036  000DB8  0101               	movlb	1	; () banked
  3037  000DBA  518A               	movf	??_i2c_master_send& (0+255),w,b
  3038  000DBC  0D01               	mullw	1
  3039  000DBE  50F3               	movf	prodl,w,c
  3040  000DC0  0101               	movlb	1	; () banked
  3041  000DC2  0101               	movlb	1	; () banked
  3042  000DC4  2587               	addwf	i2c_master_send@msg& (0+255),w,b
  3043  000DC6  6ED9               	movwf	fsr2l,c
  3044  000DC8  50F4               	movf	prodh,w,c
  3045  000DCA  0101               	movlb	1	; () banked
  3046  000DCC  0101               	movlb	1	; () banked
  3047  000DCE  2188               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  3048  000DD0  6EDA               	movwf	fsr2h,c
  3049  000DD2  0100               	movlb	0	; () banked
  3050  000DD4  EE10 F01A          	lfsr	1,26
  3051  000DD8  0100               	movlb	0	; () banked
  3052  000DDA  51C3               	movf	_ic_ptr& (0+255),w,b
  3053  000DDC  26E1               	addwf	fsr1l,f,c
  3054  000DDE  0100               	movlb	0	; () banked
  3055  000DE0  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  3056  000DE2  22E2               	addwfc	fsr1h,f,c
  3057  000DE4  50E7               	movf	indf1,w,c
  3058  000DE6  0101               	movlb	1	; () banked
  3059  000DE8  6F8B               	movwf	(??_i2c_master_send+1)& (0+255),b
  3060  000DEA  0101               	movlb	1	; () banked
  3061  000DEC  518B               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3062  000DEE  0D01               	mullw	1
  3063  000DF0  0E10               	movlw	16
  3064  000DF2  26F3               	addwf	prodl,f,c
  3065  000DF4  0E00               	movlw	0
  3066  000DF6  22F4               	addwfc	prodh,f,c
  3067  000DF8  50F3               	movf	prodl,w,c
  3068  000DFA  0100               	movlb	0	; () banked
  3069  000DFC  0100               	movlb	0	; () banked
  3070  000DFE  25C3               	addwf	_ic_ptr& (0+255),w,b
  3071  000E00  6EE1               	movwf	fsr1l,c
  3072  000E02  50F4               	movf	prodh,w,c
  3073  000E04  0100               	movlb	0	; () banked
  3074  000E06  0100               	movlb	0	; () banked
  3075  000E08  21C4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3076  000E0A  6EE2               	movwf	fsr1h,c
  3077  000E0C  CFDF FFE7          	movff	indf2,indf1
  3078                           
  3079                           ; BSR set to: 0
  3080  000E10  0100               	movlb	0	; () banked
  3081  000E12  EE20 F01A          	lfsr	2,26
  3082  000E16  0100               	movlb	0	; () banked
  3083  000E18  51C3               	movf	_ic_ptr& (0+255),w,b
  3084  000E1A  26D9               	addwf	fsr2l,f,c
  3085  000E1C  0100               	movlb	0	; () banked
  3086  000E1E  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  3087  000E20  22DA               	addwfc	fsr2h,f,c
  3088  000E22  2ADF               	incf	indf2,f,c
  3089  000E24                     l4128:
  3090                           
  3091                           ; BSR set to: 0
  3092  000E24  0100               	movlb	0	; () banked
  3093  000E26  EE20 F01A          	lfsr	2,26
  3094  000E2A  0100               	movlb	0	; () banked
  3095  000E2C  51C3               	movf	_ic_ptr& (0+255),w,b
  3096  000E2E  26D9               	addwf	fsr2l,f,c
  3097  000E30  0100               	movlb	0	; () banked
  3098  000E32  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  3099  000E34  22DA               	addwfc	fsr2h,f,c
  3100  000E36  50DF               	movf	indf2,w,c
  3101  000E38  0101               	movlb	1	; () banked
  3102  000E3A  6F8A               	movwf	??_i2c_master_send& (0+255),b
  3103  000E3C  0101               	movlb	1	; () banked
  3104  000E3E  0101               	movlb	1	; () banked
  3105  000E40  518C               	movf	i2c_master_send@sendlength& (0+255),w,b
  3106  000E42  0101               	movlb	1	; () banked
  3107  000E44  5D8A               	subwf	??_i2c_master_send& (0+255),w,b
  3108  000E46  A0D8               	btfss	status,0,c
  3109  000E48  D7AB               	goto	l4124
  3110                           
  3111                           ; BSR set to: 1
  3112                           ;my_i2c.c: 48: }
  3113                           ;my_i2c.c: 50: ic_ptr->slave_addr = slave_addr;
  3114                           
  3115                           ; BSR set to: 1
  3116  000E4A  0100               	movlb	0	; () banked
  3117  000E4C  EE20 F01C          	lfsr	2,28
  3118  000E50  0100               	movlb	0	; () banked
  3119  000E52  51C3               	movf	_ic_ptr& (0+255),w,b
  3120  000E54  26D9               	addwf	fsr2l,f,c
  3121  000E56  0100               	movlb	0	; () banked
  3122  000E58  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  3123  000E5A  22DA               	addwfc	fsr2h,f,c
  3124  000E5C  0101               	movlb	1	; () banked
  3125  000E5E  C189  FFDF         	movff	i2c_master_send@slave_addr,indf2
  3126                           
  3127                           ;my_i2c.c: 51: ic_ptr->outbuflen = sendlength;
  3128  000E62  0100               	movlb	0	; () banked
  3129  000E64  EE20 F01A          	lfsr	2,26
  3130  000E68  0100               	movlb	0	; () banked
  3131  000E6A  51C3               	movf	_ic_ptr& (0+255),w,b
  3132  000E6C  26D9               	addwf	fsr2l,f,c
  3133  000E6E  0100               	movlb	0	; () banked
  3134  000E70  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  3135  000E72  22DA               	addwfc	fsr2h,f,c
  3136  000E74  0101               	movlb	1	; () banked
  3137  000E76  C18C  FFDF         	movff	i2c_master_send@sendlength,indf2
  3138                           
  3139                           ;my_i2c.c: 52: ic_ptr->buflen = recvlength;
  3140  000E7A  0100               	movlb	0	; () banked
  3141  000E7C  EE20 F00A          	lfsr	2,10
  3142  000E80  0100               	movlb	0	; () banked
  3143  000E82  51C3               	movf	_ic_ptr& (0+255),w,b
  3144  000E84  26D9               	addwf	fsr2l,f,c
  3145  000E86  0100               	movlb	0	; () banked
  3146  000E88  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  3147  000E8A  22DA               	addwfc	fsr2h,f,c
  3148  000E8C  0101               	movlb	1	; () banked
  3149  000E8E  C186  FFDF         	movff	i2c_master_send@recvlength,indf2
  3150                           
  3151                           ;my_i2c.c: 53: ic_ptr->status = 0xA;
  3152  000E92  0100               	movlb	0	; () banked
  3153  000E94  EE20 F00D          	lfsr	2,13
  3154  000E98  0100               	movlb	0	; () banked
  3155  000E9A  51C3               	movf	_ic_ptr& (0+255),w,b
  3156  000E9C  26D9               	addwf	fsr2l,f,c
  3157  000E9E  0100               	movlb	0	; () banked
  3158  000EA0  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  3159  000EA2  22DA               	addwfc	fsr2h,f,c
  3160  000EA4  0E0A               	movlw	10
  3161  000EA6  6EDF               	movwf	indf2,c
  3162                           
  3163                           ;my_i2c.c: 54: ic_ptr->outbufind = 0;
  3164  000EA8  0100               	movlb	0	; () banked
  3165  000EAA  EE20 F01B          	lfsr	2,27
  3166  000EAE  0100               	movlb	0	; () banked
  3167  000EB0  51C3               	movf	_ic_ptr& (0+255),w,b
  3168  000EB2  26D9               	addwf	fsr2l,f,c
  3169  000EB4  0100               	movlb	0	; () banked
  3170  000EB6  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  3171  000EB8  22DA               	addwfc	fsr2h,f,c
  3172  000EBA  0E00               	movlw	0
  3173  000EBC  6EDF               	movwf	indf2,c
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;my_i2c.c: 56: SSPCON2bits.SEN = 1;
  3177  000EBE  80C5               	bsf	4037,0,c	;volatile
  3178  000EC0  0012               	return	
  3179  000EC2                     __end_of_i2c_master_send:
  3180                           	opt stack 0
  3181                           tblptru	equ	0xFF8
  3182                           tblptrh	equ	0xFF7
  3183                           tblptrl	equ	0xFF6
  3184                           tablat	equ	0xFF5
  3185                           prodh	equ	0xFF4
  3186                           prodl	equ	0xFF3
  3187                           intcon2	equ	0xFF1
  3188                           postinc0	equ	0xFEE
  3189                           wreg	equ	0xFE8
  3190                           indf1	equ	0xFE7
  3191                           postdec1	equ	0xFE5
  3192                           fsr1h	equ	0xFE2
  3193                           fsr1l	equ	0xFE1
  3194                           indf2	equ	0xFDF
  3195                           postinc2	equ	0xFDE
  3196                           postdec2	equ	0xFDD
  3197                           fsr2h	equ	0xFDA
  3198                           fsr2l	equ	0xFD9
  3199                           status	equ	0xFD8
  3200                           
  3201 ;; *************** function _i2c_configure_slave *****************
  3202 ;; Defined at:
  3203 ;;		line 462 in file "../src/my_i2c.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  addr            1    wreg     unsigned char 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  addr            1    0[BANK1 ] unsigned char 
  3208 ;; Return value:  Size  Location     Type
  3209 ;;		None               void
  3210 ;; Registers used:
  3211 ;;		wreg, status,2, status,0
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3217 ;;      Params:         0       0       0       0       0
  3218 ;;      Locals:         0       0       1       0       0
  3219 ;;      Temps:          0       0       0       0       0
  3220 ;;      Totals:         0       0       1       0       0
  3221 ;;Total ram usage:        1 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:   11
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_main
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text13
  3232  002268                     __ptext13:
  3233                           	opt stack 0
  3234  002268                     _i2c_configure_slave:
  3235                           	opt stack 19
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;incstack = 0
  3239                           ;i2c_configure_slave@addr stored from wreg
  3240  002268  CFE8 F186          	movff	wreg,i2c_configure_slave@addr
  3241                           
  3242                           ;my_i2c.c: 474: TRISCbits.TRISC3 = 1;
  3243  00226C  8694               	bsf	3988,3,c	;volatile
  3244                           
  3245                           ;my_i2c.c: 475: TRISCbits.TRISC4 = 1;
  3246  00226E  8894               	bsf	3988,4,c	;volatile
  3247                           
  3248                           ;my_i2c.c: 480: SSPADD = addr;
  3249  002270  C186  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3250                           
  3251                           ;my_i2c.c: 482: SSPSTAT = 0x0;
  3252  002274  0E00               	movlw	0
  3253  002276  6EC7               	movwf	4039,c	;volatile
  3254                           
  3255                           ;my_i2c.c: 483: SSPCON1 = 0x0;
  3256  002278  0E00               	movlw	0
  3257  00227A  6EC6               	movwf	4038,c	;volatile
  3258                           
  3259                           ;my_i2c.c: 484: SSPCON2 = 0x0;
  3260  00227C  0E00               	movlw	0
  3261  00227E  6EC5               	movwf	4037,c	;volatile
  3262                           
  3263                           ;my_i2c.c: 485: SSPCON1 |= 0x0E;
  3264  002280  0E0E               	movlw	14
  3265  002282  12C6               	iorwf	4038,f,c	;volatile
  3266                           
  3267                           ;my_i2c.c: 486: SSPSTAT |= 0b10000000;
  3268  002284  8EC7               	bsf	4039,7,c	;volatile
  3269                           
  3270                           ;my_i2c.c: 489: TRISCbits.TRISC3 = 1;
  3271  002286  8694               	bsf	3988,3,c	;volatile
  3272                           
  3273                           ;my_i2c.c: 490: TRISCbits.TRISC4 = 1;
  3274  002288  8894               	bsf	3988,4,c	;volatile
  3275                           
  3276                           ;my_i2c.c: 511: SSPCON2bits.SEN = 1;
  3277  00228A  80C5               	bsf	4037,0,c	;volatile
  3278                           
  3279                           ;my_i2c.c: 512: SSPCON1 |= 0b00100000;
  3280  00228C  8AC6               	bsf	4038,5,c	;volatile
  3281  00228E  0012               	return	
  3282  002290                     __end_of_i2c_configure_slave:
  3283                           	opt stack 0
  3284                           tblptru	equ	0xFF8
  3285                           tblptrh	equ	0xFF7
  3286                           tblptrl	equ	0xFF6
  3287                           tablat	equ	0xFF5
  3288                           prodh	equ	0xFF4
  3289                           prodl	equ	0xFF3
  3290                           intcon2	equ	0xFF1
  3291                           postinc0	equ	0xFEE
  3292                           wreg	equ	0xFE8
  3293                           indf1	equ	0xFE7
  3294                           postdec1	equ	0xFE5
  3295                           fsr1h	equ	0xFE2
  3296                           fsr1l	equ	0xFE1
  3297                           indf2	equ	0xFDF
  3298                           postinc2	equ	0xFDE
  3299                           postdec2	equ	0xFDD
  3300                           fsr2h	equ	0xFDA
  3301                           fsr2l	equ	0xFD9
  3302                           status	equ	0xFD8
  3303                           
  3304 ;; *************** function _enable_interrupts *****************
  3305 ;; Defined at:
  3306 ;;		line 15 in file "../src/interrupts.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;		None               void
  3313 ;; Registers used:
  3314 ;;		None
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3320 ;;      Params:         0       0       0       0       0
  3321 ;;      Locals:         0       0       0       0       0
  3322 ;;      Temps:          0       0       0       0       0
  3323 ;;      Totals:         0       0       0       0       0
  3324 ;;Total ram usage:        0 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; Hardware stack levels required when called:   11
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_main
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           	psect	text14
  3335  0023E4                     __ptext14:
  3336                           	opt stack 0
  3337  0023E4                     _enable_interrupts:
  3338                           	opt stack 19
  3339                           
  3340                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3341                           
  3342                           ;incstack = 0
  3343  0023E4  8ED0               	bsf	4048,7,c	;volatile
  3344                           
  3345                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3346  0023E6  8EF2               	bsf	intcon,7,c	;volatile
  3347                           
  3348                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3349  0023E8  8CF2               	bsf	intcon,6,c	;volatile
  3350  0023EA  0012               	return	
  3351  0023EC                     __end_of_enable_interrupts:
  3352                           	opt stack 0
  3353                           tblptru	equ	0xFF8
  3354                           tblptrh	equ	0xFF7
  3355                           tblptrl	equ	0xFF6
  3356                           tablat	equ	0xFF5
  3357                           prodh	equ	0xFF4
  3358                           prodl	equ	0xFF3
  3359                           intcon	equ	0xFF2
  3360                           intcon2	equ	0xFF1
  3361                           postinc0	equ	0xFEE
  3362                           wreg	equ	0xFE8
  3363                           indf1	equ	0xFE7
  3364                           postdec1	equ	0xFE5
  3365                           fsr1h	equ	0xFE2
  3366                           fsr1l	equ	0xFE1
  3367                           indf2	equ	0xFDF
  3368                           postinc2	equ	0xFDE
  3369                           postdec2	equ	0xFDD
  3370                           fsr2h	equ	0xFDA
  3371                           fsr2l	equ	0xFD9
  3372                           status	equ	0xFD8
  3373                           
  3374 ;; *************** function _block_on_To_msgqueues *****************
  3375 ;; Defined at:
  3376 ;;		line 258 in file "../src/messages.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;		None               void
  3383 ;; Registers used:
  3384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3390 ;;      Params:         0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0
  3392 ;;      Temps:          0       0       1       0       0
  3393 ;;      Totals:         0       0       1       0       0
  3394 ;;Total ram usage:        1 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:   14
  3397 ;; This function calls:
  3398 ;;		_Delay1KTCYx
  3399 ;;		_check_msg
  3400 ;;		_in_main
  3401 ;; This function is called by:
  3402 ;;		_main
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text15
  3407  001BCA                     __ptext15:
  3408                           	opt stack 0
  3409  001BCA                     _block_on_To_msgqueues:
  3410                           	opt stack 16
  3411                           
  3412                           ;messages.c: 259: if (!in_main()) {
  3413                           
  3414                           ;incstack = 0
  3415  001BCA  EC13  F010         	call	_in_main	;wreg free
  3416  001BCE  0101               	movlb	1	; () banked
  3417  001BD0  0101               	movlb	1	; () banked
  3418  001BD2  518B               	movf	(?_in_main+1)& (0+255),w,b
  3419  001BD4  0101               	movlb	1	; () banked
  3420  001BD6  118A               	iorwf	?_in_main& (0+255),w,b
  3421  001BD8  B4D8               	btfsc	status,2,c
  3422  001BDA  0012               	return	
  3423                           
  3424                           ; BSR set to: 1
  3425                           ;messages.c: 261: }
  3426                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3427                           
  3428                           ; BSR set to: 1
  3429                           
  3430                           ; BSR set to: 1
  3431                           ;messages.c: 260: return;
  3432  001BDC  0101               	movlb	1	; () banked
  3433  001BDE  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  3434  001BE0  0E01               	movlw	1
  3435  001BE2  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  3436  001BE4  0101               	movlb	1	; () banked
  3437  001BE6  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3438  001BE8                     l4078:
  3439                           
  3440                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3441  001BE8  0101               	movlb	1	; () banked
  3442  001BEA  0E01               	movlw	high _ToMainHigh_MQ
  3443  001BEC  0101               	movlb	1	; () banked
  3444  001BEE  0101               	movlb	1	; () banked
  3445  001BF0  6F87               	movwf	(check_msg@qptr+1)& (0+255),b
  3446  001BF2  0101               	movlb	1	; () banked
  3447  001BF4  0E00               	movlw	low _ToMainHigh_MQ
  3448  001BF6  0101               	movlb	1	; () banked
  3449  001BF8  0101               	movlb	1	; () banked
  3450  001BFA  6F86               	movwf	check_msg@qptr& (0+255),b
  3451  001BFC  ECCE  F010         	call	_check_msg	;wreg free
  3452  001C00  0900               	iorlw	0
  3453  001C02  B4D8               	btfsc	status,2,c
  3454  001C04  D007               	goto	l4084
  3455                           
  3456                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3457  001C06  0101               	movlb	1	; () banked
  3458  001C08  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  3459  001C0A  0E00               	movlw	0
  3460  001C0C  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  3461  001C0E  0101               	movlb	1	; () banked
  3462  001C10  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3463  001C12  0012               	return	
  3464  001C14                     l4084:
  3465                           
  3466                           ;messages.c: 271: }
  3467                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3468  001C14  0101               	movlb	1	; () banked
  3469  001C16  0E01               	movlw	high _ToMainLow_MQ
  3470  001C18  0101               	movlb	1	; () banked
  3471  001C1A  0101               	movlb	1	; () banked
  3472  001C1C  6F87               	movwf	(check_msg@qptr+1)& (0+255),b
  3473  001C1E  0101               	movlb	1	; () banked
  3474  001C20  0E43               	movlw	low _ToMainLow_MQ
  3475  001C22  0101               	movlb	1	; () banked
  3476  001C24  0101               	movlb	1	; () banked
  3477  001C26  6F86               	movwf	check_msg@qptr& (0+255),b
  3478  001C28  ECCE  F010         	call	_check_msg	;wreg free
  3479  001C2C  0900               	iorlw	0
  3480  001C2E  B4D8               	btfsc	status,2,c
  3481  001C30  D007               	goto	l4090
  3482                           
  3483                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3484  001C32  0101               	movlb	1	; () banked
  3485  001C34  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  3486  001C36  0E00               	movlw	0
  3487  001C38  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  3488  001C3A  0101               	movlb	1	; () banked
  3489  001C3C  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3490  001C3E  0012               	return	
  3491  001C40                     l4090:
  3492                           
  3493                           ;messages.c: 278: }
  3494                           ;messages.c: 279: Delay1KTCYx(10);
  3495  001C40  0E0A               	movlw	10
  3496  001C42  ECAA  F011         	call	_Delay1KTCYx
  3497  001C46  D7D0               	goto	l4078
  3498  001C48                     __end_of_block_on_To_msgqueues:
  3499                           	opt stack 0
  3500                           tblptru	equ	0xFF8
  3501                           tblptrh	equ	0xFF7
  3502                           tblptrl	equ	0xFF6
  3503                           tablat	equ	0xFF5
  3504                           prodh	equ	0xFF4
  3505                           prodl	equ	0xFF3
  3506                           intcon	equ	0xFF2
  3507                           intcon2	equ	0xFF1
  3508                           postinc0	equ	0xFEE
  3509                           wreg	equ	0xFE8
  3510                           indf1	equ	0xFE7
  3511                           postdec1	equ	0xFE5
  3512                           fsr1h	equ	0xFE2
  3513                           fsr1l	equ	0xFE1
  3514                           indf2	equ	0xFDF
  3515                           postinc2	equ	0xFDE
  3516                           postdec2	equ	0xFDD
  3517                           fsr2h	equ	0xFDA
  3518                           fsr2l	equ	0xFD9
  3519                           status	equ	0xFD8
  3520                           
  3521 ;; *************** function _in_main *****************
  3522 ;; Defined at:
  3523 ;;		line 41 in file "../src/interrupts.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;		None
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;		None
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  2    4[BANK1 ] int 
  3530 ;; Registers used:
  3531 ;;		wreg, status,2, status,0, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3537 ;;      Params:         0       0       2       0       0
  3538 ;;      Locals:         0       0       0       0       0
  3539 ;;      Temps:          0       0       0       0       0
  3540 ;;      Totals:         0       0       2       0       0
  3541 ;;Total ram usage:        2 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:   13
  3544 ;; This function calls:
  3545 ;;		_in_high_int
  3546 ;;		_in_low_int
  3547 ;; This function is called by:
  3548 ;;		_block_on_To_msgqueues
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text16
  3553  002026                     __ptext16:
  3554                           	opt stack 0
  3555  002026                     _in_main:
  3556                           	opt stack 16
  3557                           
  3558                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3559                           
  3560                           ;incstack = 0
  3561  002026  ECCD  F00F         	call	_in_low_int	;wreg free
  3562  00202A  0101               	movlb	1	; () banked
  3563  00202C  0101               	movlb	1	; () banked
  3564  00202E  5189               	movf	(?_in_low_int+1)& (0+255),w,b
  3565  002030  0101               	movlb	1	; () banked
  3566  002032  1188               	iorwf	?_in_low_int& (0+255),w,b
  3567  002034  A4D8               	btfss	status,2,c
  3568  002036  D011               	goto	l3770
  3569                           
  3570                           ; BSR set to: 1
  3571  002038  ECC7  F011         	call	_in_high_int	;wreg free
  3572  00203C  0101               	movlb	1	; () banked
  3573  00203E  0101               	movlb	1	; () banked
  3574  002040  5187               	movf	(?_in_high_int+1)& (0+255),w,b
  3575  002042  0101               	movlb	1	; () banked
  3576  002044  1186               	iorwf	?_in_high_int& (0+255),w,b
  3577  002046  A4D8               	btfss	status,2,c
  3578  002048  D008               	goto	l3770
  3579                           
  3580                           ; BSR set to: 1
  3581                           ;interrupts.c: 43: return (1);
  3582  00204A  0E00               	movlw	0
  3583  00204C  0101               	movlb	1	; () banked
  3584  00204E  0101               	movlb	1	; () banked
  3585  002050  6F8B               	movwf	(?_in_main+1)& (0+255),b
  3586  002052  0E01               	movlw	1
  3587  002054  0101               	movlb	1	; () banked
  3588  002056  6F8A               	movwf	?_in_main& (0+255),b
  3589  002058  0012               	return	
  3590  00205A                     l3770:
  3591                           
  3592                           ; BSR set to: 1
  3593                           ;interrupts.c: 45: return (0);
  3594  00205A  0E00               	movlw	0
  3595  00205C  0101               	movlb	1	; () banked
  3596  00205E  0101               	movlb	1	; () banked
  3597  002060  6F8B               	movwf	(?_in_main+1)& (0+255),b
  3598  002062  0E00               	movlw	0
  3599  002064  0101               	movlb	1	; () banked
  3600  002066  6F8A               	movwf	?_in_main& (0+255),b
  3601  002068  0012               	return	
  3602  00206A                     __end_of_in_main:
  3603                           	opt stack 0
  3604                           tblptru	equ	0xFF8
  3605                           tblptrh	equ	0xFF7
  3606                           tblptrl	equ	0xFF6
  3607                           tablat	equ	0xFF5
  3608                           prodh	equ	0xFF4
  3609                           prodl	equ	0xFF3
  3610                           intcon	equ	0xFF2
  3611                           intcon2	equ	0xFF1
  3612                           postinc0	equ	0xFEE
  3613                           wreg	equ	0xFE8
  3614                           indf1	equ	0xFE7
  3615                           postdec1	equ	0xFE5
  3616                           fsr1h	equ	0xFE2
  3617                           fsr1l	equ	0xFE1
  3618                           indf2	equ	0xFDF
  3619                           postinc2	equ	0xFDE
  3620                           postdec2	equ	0xFDD
  3621                           fsr2h	equ	0xFDA
  3622                           fsr2l	equ	0xFD9
  3623                           status	equ	0xFD8
  3624                           
  3625 ;; *************** function _in_low_int *****************
  3626 ;; Defined at:
  3627 ;;		line 31 in file "../src/interrupts.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;		None
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;		None
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  2    2[BANK1 ] int 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2, status,0, cstack
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3641 ;;      Params:         0       0       2       0       0
  3642 ;;      Locals:         0       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0
  3644 ;;      Totals:         0       0       2       0       0
  3645 ;;Total ram usage:        2 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; Hardware stack levels required when called:   12
  3648 ;; This function calls:
  3649 ;;		_in_high_int
  3650 ;; This function is called by:
  3651 ;;		_in_main
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           	psect	text17
  3656  001F9A                     __ptext17:
  3657                           	opt stack 0
  3658  001F9A                     _in_low_int:
  3659                           	opt stack 16
  3660                           
  3661                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3662                           
  3663                           ; BSR set to: 1
  3664                           ;incstack = 0
  3665  001F9A  ACF2               	btfss	intcon,6,c	;volatile
  3666  001F9C  D008               	goto	l3748
  3667                           
  3668                           ;interrupts.c: 33: return (0);
  3669  001F9E  0E00               	movlw	0
  3670  001FA0  0101               	movlb	1	; () banked
  3671  001FA2  0101               	movlb	1	; () banked
  3672  001FA4  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3673  001FA6  0E00               	movlw	0
  3674  001FA8  0101               	movlb	1	; () banked
  3675  001FAA  6F88               	movwf	?_in_low_int& (0+255),b
  3676  001FAC  0012               	return	
  3677  001FAE                     l3748:
  3678  001FAE  ECC7  F011         	call	_in_high_int	;wreg free
  3679  001FB2  0101               	movlb	1	; () banked
  3680  001FB4  0101               	movlb	1	; () banked
  3681  001FB6  5187               	movf	(?_in_high_int+1)& (0+255),w,b
  3682  001FB8  0101               	movlb	1	; () banked
  3683  001FBA  1186               	iorwf	?_in_high_int& (0+255),w,b
  3684  001FBC  B4D8               	btfsc	status,2,c
  3685  001FBE  D008               	goto	l3756
  3686                           
  3687                           ; BSR set to: 1
  3688                           ;interrupts.c: 35: return (0);
  3689  001FC0  0E00               	movlw	0
  3690  001FC2  0101               	movlb	1	; () banked
  3691  001FC4  0101               	movlb	1	; () banked
  3692  001FC6  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3693  001FC8  0E00               	movlw	0
  3694  001FCA  0101               	movlb	1	; () banked
  3695  001FCC  6F88               	movwf	?_in_low_int& (0+255),b
  3696  001FCE  0012               	return	
  3697  001FD0                     l3756:
  3698                           
  3699                           ; BSR set to: 1
  3700                           ;interrupts.c: 37: return (1);
  3701  001FD0  0E00               	movlw	0
  3702  001FD2  0101               	movlb	1	; () banked
  3703  001FD4  0101               	movlb	1	; () banked
  3704  001FD6  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3705  001FD8  0E01               	movlw	1
  3706  001FDA  0101               	movlb	1	; () banked
  3707  001FDC  6F88               	movwf	?_in_low_int& (0+255),b
  3708  001FDE  0012               	return	
  3709  001FE0                     __end_of_in_low_int:
  3710                           	opt stack 0
  3711                           tblptru	equ	0xFF8
  3712                           tblptrh	equ	0xFF7
  3713                           tblptrl	equ	0xFF6
  3714                           tablat	equ	0xFF5
  3715                           prodh	equ	0xFF4
  3716                           prodl	equ	0xFF3
  3717                           intcon	equ	0xFF2
  3718                           intcon2	equ	0xFF1
  3719                           postinc0	equ	0xFEE
  3720                           wreg	equ	0xFE8
  3721                           indf1	equ	0xFE7
  3722                           postdec1	equ	0xFE5
  3723                           fsr1h	equ	0xFE2
  3724                           fsr1l	equ	0xFE1
  3725                           indf2	equ	0xFDF
  3726                           postinc2	equ	0xFDE
  3727                           postdec2	equ	0xFDD
  3728                           fsr2h	equ	0xFDA
  3729                           fsr2l	equ	0xFD9
  3730                           status	equ	0xFD8
  3731                           
  3732 ;; *************** function _in_high_int *****************
  3733 ;; Defined at:
  3734 ;;		line 23 in file "../src/interrupts.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;		None
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;		None
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  2    0[BANK1 ] int 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3748 ;;      Params:         0       0       2       0       0
  3749 ;;      Locals:         0       0       0       0       0
  3750 ;;      Temps:          0       0       0       0       0
  3751 ;;      Totals:         0       0       2       0       0
  3752 ;;Total ram usage:        2 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:   11
  3755 ;; This function calls:
  3756 ;;		Nothing
  3757 ;; This function is called by:
  3758 ;;		_in_low_int
  3759 ;;		_in_main
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text18
  3764  00238E                     __ptext18:
  3765                           	opt stack 0
  3766  00238E                     _in_high_int:
  3767                           	opt stack 16
  3768                           
  3769                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  3770                           
  3771                           ; BSR set to: 1
  3772                           ;incstack = 0
  3773  00238E  0E00               	movlw	0
  3774  002390  AEF2               	btfss	intcon,7,c	;volatile
  3775  002392  0E01               	movlw	1
  3776  002394  0101               	movlb	1	; () banked
  3777  002396  0101               	movlb	1	; () banked
  3778  002398  6F86               	movwf	?_in_high_int& (0+255),b
  3779  00239A  0101               	movlb	1	; () banked
  3780  00239C  6B87               	clrf	(?_in_high_int+1)& (0+255),b
  3781  00239E  0012               	return	
  3782  0023A0                     __end_of_in_high_int:
  3783                           	opt stack 0
  3784                           tblptru	equ	0xFF8
  3785                           tblptrh	equ	0xFF7
  3786                           tblptrl	equ	0xFF6
  3787                           tablat	equ	0xFF5
  3788                           prodh	equ	0xFF4
  3789                           prodl	equ	0xFF3
  3790                           intcon	equ	0xFF2
  3791                           intcon2	equ	0xFF1
  3792                           postinc0	equ	0xFEE
  3793                           wreg	equ	0xFE8
  3794                           indf1	equ	0xFE7
  3795                           postdec1	equ	0xFE5
  3796                           fsr1h	equ	0xFE2
  3797                           fsr1l	equ	0xFE1
  3798                           indf2	equ	0xFDF
  3799                           postinc2	equ	0xFDE
  3800                           postdec2	equ	0xFDD
  3801                           fsr2h	equ	0xFDA
  3802                           fsr2l	equ	0xFD9
  3803                           status	equ	0xFD8
  3804                           
  3805 ;; *************** function _check_msg *****************
  3806 ;; Defined at:
  3807 ;;		line 222 in file "../src/messages.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3810 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      unsigned char 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3822 ;;      Params:         0       0       2       0       0
  3823 ;;      Locals:         0       0       0       0       0
  3824 ;;      Temps:          0       0       1       0       0
  3825 ;;      Totals:         0       0       3       0       0
  3826 ;;Total ram usage:        3 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:   11
  3829 ;; This function calls:
  3830 ;;		Nothing
  3831 ;; This function is called by:
  3832 ;;		_block_on_To_msgqueues
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text19
  3837  00219C                     __ptext19:
  3838                           	opt stack 0
  3839  00219C                     _check_msg:
  3840                           	opt stack 18
  3841                           
  3842                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3843                           
  3844                           ; BSR set to: 1
  3845                           ;incstack = 0
  3846  00219C  0101               	movlb	1	; () banked
  3847  00219E  EE20 F042          	lfsr	2,66
  3848  0021A2  0101               	movlb	1	; () banked
  3849  0021A4  5186               	movf	check_msg@qptr& (0+255),w,b
  3850  0021A6  26D9               	addwf	fsr2l,f,c
  3851  0021A8  0101               	movlb	1	; () banked
  3852  0021AA  5187               	movf	(check_msg@qptr+1)& (0+255),w,b
  3853  0021AC  22DA               	addwfc	fsr2h,f,c
  3854  0021AE  50DF               	movf	indf2,w,c
  3855  0021B0  0101               	movlb	1	; () banked
  3856  0021B2  6F88               	movwf	??_check_msg& (0+255),b
  3857  0021B4  0101               	movlb	1	; () banked
  3858  0021B6  5188               	movf	??_check_msg& (0+255),w,b
  3859  0021B8  0D0D               	mullw	13
  3860  0021BA  50F3               	movf	prodl,w,c
  3861  0021BC  0101               	movlb	1	; () banked
  3862  0021BE  0101               	movlb	1	; () banked
  3863  0021C0  2586               	addwf	check_msg@qptr& (0+255),w,b
  3864  0021C2  6ED9               	movwf	fsr2l,c
  3865  0021C4  50F4               	movf	prodh,w,c
  3866  0021C6  0101               	movlb	1	; () banked
  3867  0021C8  0101               	movlb	1	; () banked
  3868  0021CA  2187               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3869  0021CC  6EDA               	movwf	fsr2h,c
  3870  0021CE  50DF               	movf	indf2,w,c
  3871  0021D0  0012               	return	
  3872  0021D2                     __end_of_check_msg:
  3873                           	opt stack 0
  3874                           tblptru	equ	0xFF8
  3875                           tblptrh	equ	0xFF7
  3876                           tblptrl	equ	0xFF6
  3877                           tablat	equ	0xFF5
  3878                           prodh	equ	0xFF4
  3879                           prodl	equ	0xFF3
  3880                           intcon	equ	0xFF2
  3881                           intcon2	equ	0xFF1
  3882                           postinc0	equ	0xFEE
  3883                           wreg	equ	0xFE8
  3884                           indf1	equ	0xFE7
  3885                           postdec1	equ	0xFE5
  3886                           fsr1h	equ	0xFE2
  3887                           fsr1l	equ	0xFE1
  3888                           indf2	equ	0xFDF
  3889                           postinc2	equ	0xFDE
  3890                           postdec2	equ	0xFDD
  3891                           fsr2h	equ	0xFDA
  3892                           fsr2l	equ	0xFD9
  3893                           status	equ	0xFD8
  3894                           
  3895 ;; *************** function _Delay1KTCYx *****************
  3896 ;; Defined at:
  3897 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  unit            1    wreg     unsigned char 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;  unit            1    0[BANK1 ] unsigned char 
  3902 ;; Return value:  Size  Location     Type
  3903 ;;		None               void
  3904 ;; Registers used:
  3905 ;;		wreg
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3911 ;;      Params:         0       0       0       0       0
  3912 ;;      Locals:         0       0       1       0       0
  3913 ;;      Temps:          0       0       0       0       0
  3914 ;;      Totals:         0       0       1       0       0
  3915 ;;Total ram usage:        1 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:   11
  3918 ;; This function calls:
  3919 ;;		Nothing
  3920 ;; This function is called by:
  3921 ;;		_block_on_To_msgqueues
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text20
  3926  002354                     __ptext20:
  3927                           	opt stack 0
  3928  002354                     _Delay1KTCYx:
  3929                           	opt stack 18
  3930                           
  3931                           ; BSR set to: 1
  3932                           ;incstack = 0
  3933                           ;Delay1KTCYx@unit stored from wreg
  3934  002354  CFE8 F186          	movff	wreg,Delay1KTCYx@unit
  3935  002358                     l848:
  3936  002358  0EFA               	movlw	250
  3937  00235A                     u4037:
  3938  00235A  F000               	nop	
  3939  00235C  2EE8               	decfsz	wreg,f,c
  3940  00235E  D7FD               	goto	u4037
  3941  002360  0101               	movlb	1	; () banked
  3942  002362  0101               	movlb	1	; () banked
  3943  002364  2F86               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3944  002366  D7F8               	goto	l848
  3945  002368  0012               	return	
  3946  00236A                     __end_of_Delay1KTCYx:
  3947                           	opt stack 0
  3948                           tblptru	equ	0xFF8
  3949                           tblptrh	equ	0xFF7
  3950                           tblptrl	equ	0xFF6
  3951                           tablat	equ	0xFF5
  3952                           prodh	equ	0xFF4
  3953                           prodl	equ	0xFF3
  3954                           intcon	equ	0xFF2
  3955                           intcon2	equ	0xFF1
  3956                           postinc0	equ	0xFEE
  3957                           wreg	equ	0xFE8
  3958                           indf1	equ	0xFE7
  3959                           postdec1	equ	0xFE5
  3960                           fsr1h	equ	0xFE2
  3961                           fsr1l	equ	0xFE1
  3962                           indf2	equ	0xFDF
  3963                           postinc2	equ	0xFDE
  3964                           postdec2	equ	0xFDD
  3965                           fsr2h	equ	0xFDA
  3966                           fsr2l	equ	0xFD9
  3967                           status	equ	0xFD8
  3968                           
  3969 ;; *************** function _ToMainLow_recvmsg *****************
  3970 ;; Defined at:
  3971 ;;		line 112 in file "../src/messages.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  maxlength       1    wreg     unsigned char 
  3974 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3975 ;;		 -> main@msgtype(1), 
  3976 ;;  data            2   26[BANK1 ] PTR void 
  3977 ;;		 -> main@msgbuffer(11), 
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      char 
  3982 ;; Registers used:
  3983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3989 ;;      Params:         0       0       4       0       0
  3990 ;;      Locals:         0       0       1       0       0
  3991 ;;      Temps:          0       0       0       0       0
  3992 ;;      Totals:         0       0       5       0       0
  3993 ;;Total ram usage:        5 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; Hardware stack levels required when called:   13
  3996 ;; This function calls:
  3997 ;;		_recv_msg
  3998 ;; This function is called by:
  3999 ;;		_main
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text21
  4004  00206A                     __ptext21:
  4005                           	opt stack 0
  4006  00206A                     _ToMainLow_recvmsg:
  4007                           	opt stack 17
  4008                           
  4009                           ; BSR set to: 1
  4010                           ;incstack = 0
  4011                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4012  00206A  CFE8 F1A2          	movff	wreg,ToMainLow_recvmsg@maxlength
  4013                           
  4014                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4015  00206E  0101               	movlb	1	; () banked
  4016  002070  0E01               	movlw	high _ToMainLow_MQ
  4017  002072  0101               	movlb	1	; () banked
  4018  002074  0101               	movlb	1	; () banked
  4019  002076  6F91               	movwf	(recv_msg@qptr+1)& (0+255),b
  4020  002078  0101               	movlb	1	; () banked
  4021  00207A  0E43               	movlw	low _ToMainLow_MQ
  4022  00207C  0101               	movlb	1	; () banked
  4023  00207E  0101               	movlb	1	; () banked
  4024  002080  6F90               	movwf	recv_msg@qptr& (0+255),b
  4025  002082  C1A2  F192         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4026  002086  0101               	movlb	1	; () banked
  4027  002088  0101               	movlb	1	; () banked
  4028  00208A  C19F  F194         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4029  00208E  0101               	movlb	1	; () banked
  4030  002090  0101               	movlb	1	; () banked
  4031  002092  C19E  F193         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4032  002096  0101               	movlb	1	; () banked
  4033  002098  0101               	movlb	1	; () banked
  4034  00209A  C1A1  F196         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4035  00209E  0101               	movlb	1	; () banked
  4036  0020A0  0101               	movlb	1	; () banked
  4037  0020A2  C1A0  F195         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4038  0020A6  EC13  F006         	call	_recv_msg	;wreg free
  4039  0020AA  0012               	return	
  4040  0020AC                     __end_of_ToMainLow_recvmsg:
  4041                           	opt stack 0
  4042                           tblptru	equ	0xFF8
  4043                           tblptrh	equ	0xFF7
  4044                           tblptrl	equ	0xFF6
  4045                           tablat	equ	0xFF5
  4046                           prodh	equ	0xFF4
  4047                           prodl	equ	0xFF3
  4048                           intcon	equ	0xFF2
  4049                           intcon2	equ	0xFF1
  4050                           postinc0	equ	0xFEE
  4051                           wreg	equ	0xFE8
  4052                           indf1	equ	0xFE7
  4053                           postdec1	equ	0xFE5
  4054                           fsr1h	equ	0xFE2
  4055                           fsr1l	equ	0xFE1
  4056                           indf2	equ	0xFDF
  4057                           postinc2	equ	0xFDE
  4058                           postdec2	equ	0xFDD
  4059                           fsr2h	equ	0xFDA
  4060                           fsr2l	equ	0xFD9
  4061                           status	equ	0xFD8
  4062                           
  4063 ;; *************** function _ToMainHigh_recvmsg *****************
  4064 ;; Defined at:
  4065 ;;		line 135 in file "../src/messages.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  maxlength       1    wreg     unsigned char 
  4068 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4069 ;;		 -> main@msgtype(1), 
  4070 ;;  data            2   26[BANK1 ] PTR void 
  4071 ;;		 -> main@msgbuffer(11), 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      char 
  4076 ;; Registers used:
  4077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4083 ;;      Params:         0       0       4       0       0
  4084 ;;      Locals:         0       0       1       0       0
  4085 ;;      Temps:          0       0       0       0       0
  4086 ;;      Totals:         0       0       5       0       0
  4087 ;;Total ram usage:        5 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:   13
  4090 ;; This function calls:
  4091 ;;		_recv_msg
  4092 ;; This function is called by:
  4093 ;;		_main
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           	psect	text22
  4098  0020AC                     __ptext22:
  4099                           	opt stack 0
  4100  0020AC                     _ToMainHigh_recvmsg:
  4101                           	opt stack 17
  4102                           
  4103                           ;incstack = 0
  4104                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4105  0020AC  CFE8 F1A2          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4106                           
  4107                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4108  0020B0  0101               	movlb	1	; () banked
  4109  0020B2  0E01               	movlw	high _ToMainHigh_MQ
  4110  0020B4  0101               	movlb	1	; () banked
  4111  0020B6  0101               	movlb	1	; () banked
  4112  0020B8  6F91               	movwf	(recv_msg@qptr+1)& (0+255),b
  4113  0020BA  0101               	movlb	1	; () banked
  4114  0020BC  0E00               	movlw	low _ToMainHigh_MQ
  4115  0020BE  0101               	movlb	1	; () banked
  4116  0020C0  0101               	movlb	1	; () banked
  4117  0020C2  6F90               	movwf	recv_msg@qptr& (0+255),b
  4118  0020C4  C1A2  F192         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4119  0020C8  0101               	movlb	1	; () banked
  4120  0020CA  0101               	movlb	1	; () banked
  4121  0020CC  C19F  F194         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4122  0020D0  0101               	movlb	1	; () banked
  4123  0020D2  0101               	movlb	1	; () banked
  4124  0020D4  C19E  F193         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4125  0020D8  0101               	movlb	1	; () banked
  4126  0020DA  0101               	movlb	1	; () banked
  4127  0020DC  C1A1  F196         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4128  0020E0  0101               	movlb	1	; () banked
  4129  0020E2  0101               	movlb	1	; () banked
  4130  0020E4  C1A0  F195         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4131  0020E8  EC13  F006         	call	_recv_msg	;wreg free
  4132  0020EC  0012               	return	
  4133  0020EE                     __end_of_ToMainHigh_recvmsg:
  4134                           	opt stack 0
  4135                           tblptru	equ	0xFF8
  4136                           tblptrh	equ	0xFF7
  4137                           tblptrl	equ	0xFF6
  4138                           tablat	equ	0xFF5
  4139                           prodh	equ	0xFF4
  4140                           prodl	equ	0xFF3
  4141                           intcon	equ	0xFF2
  4142                           intcon2	equ	0xFF1
  4143                           postinc0	equ	0xFEE
  4144                           wreg	equ	0xFE8
  4145                           indf1	equ	0xFE7
  4146                           postdec1	equ	0xFE5
  4147                           fsr1h	equ	0xFE2
  4148                           fsr1l	equ	0xFE1
  4149                           indf2	equ	0xFDF
  4150                           postinc2	equ	0xFDE
  4151                           postdec2	equ	0xFDD
  4152                           fsr2h	equ	0xFDA
  4153                           fsr2l	equ	0xFD9
  4154                           status	equ	0xFD8
  4155                           
  4156 ;; *************** function _recv_msg *****************
  4157 ;; Defined at:
  4158 ;;		line 63 in file "../src/messages.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4161 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4162 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4163 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  4164 ;;		 -> main@msgtype(1), 
  4165 ;;  data            2   15[BANK1 ] PTR void 
  4166 ;;		 -> main@msgbuffer(11), 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  4169 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4170 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4171 ;;  tlength         2   20[BANK1 ] unsigned int 
  4172 ;;  slot            1   19[BANK1 ] unsigned char 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      char 
  4175 ;; Registers used:
  4176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4182 ;;      Params:         0       0       7       0       0
  4183 ;;      Locals:         0       0       5       0       0
  4184 ;;      Temps:          0       0       2       0       0
  4185 ;;      Totals:         0       0      14       0       0
  4186 ;;Total ram usage:       14 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:   12
  4189 ;; This function calls:
  4190 ;;		___awmod
  4191 ;;		_memcpy
  4192 ;; This function is called by:
  4193 ;;		_ToMainLow_recvmsg
  4194 ;;		_ToMainHigh_recvmsg
  4195 ;;		_FromMainLow_recvmsg
  4196 ;;		_FromMainHigh_recvmsg
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text23
  4201  000C26                     __ptext23:
  4202                           	opt stack 0
  4203  000C26                     _recv_msg:
  4204                           	opt stack 17
  4205                           
  4206                           ;messages.c: 64: unsigned char slot;
  4207                           ;messages.c: 68: msg *qmsg;
  4208                           ;messages.c: 69: size_t tlength;
  4209                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4210                           
  4211                           ;incstack = 0
  4212  000C26  0101               	movlb	1	; () banked
  4213  000C28  EE20 F042          	lfsr	2,66
  4214  000C2C  0101               	movlb	1	; () banked
  4215  000C2E  5190               	movf	recv_msg@qptr& (0+255),w,b
  4216  000C30  26D9               	addwf	fsr2l,f,c
  4217  000C32  0101               	movlb	1	; () banked
  4218  000C34  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4219  000C36  22DA               	addwfc	fsr2h,f,c
  4220  000C38  50DF               	movf	indf2,w,c
  4221  000C3A  0101               	movlb	1	; () banked
  4222  000C3C  0101               	movlb	1	; () banked
  4223  000C3E  6F99               	movwf	recv_msg@slot& (0+255),b
  4224                           
  4225                           ; BSR set to: 1
  4226                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4227  000C40  0101               	movlb	1	; () banked
  4228  000C42  0101               	movlb	1	; () banked
  4229  000C44  5199               	movf	recv_msg@slot& (0+255),w,b
  4230  000C46  0D0D               	mullw	13
  4231  000C48  50F3               	movf	prodl,w,c
  4232  000C4A  0101               	movlb	1	; () banked
  4233  000C4C  0101               	movlb	1	; () banked
  4234  000C4E  2590               	addwf	recv_msg@qptr& (0+255),w,b
  4235  000C50  0101               	movlb	1	; () banked
  4236  000C52  0101               	movlb	1	; () banked
  4237  000C54  6F9C               	movwf	recv_msg@qmsg& (0+255),b
  4238  000C56  50F4               	movf	prodh,w,c
  4239  000C58  0101               	movlb	1	; () banked
  4240  000C5A  0101               	movlb	1	; () banked
  4241  000C5C  2191               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4242  000C5E  0101               	movlb	1	; () banked
  4243  000C60  6F9D               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4244                           
  4245                           ; BSR set to: 1
  4246                           ;messages.c: 74: if (qmsg->full == 1) {
  4247  000C62  0E01               	movlw	1
  4248  000C64  C19C  FFD9         	movff	recv_msg@qmsg,fsr2l
  4249  000C68  C19D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4250  000C6C  62DF               	cpfseq	indf2,c
  4251  000C6E  D088               	goto	l4212
  4252                           
  4253                           ; BSR set to: 1
  4254                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4255  000C70  0101               	movlb	1	; () banked
  4256  000C72  EE20 F001          	lfsr	2,1
  4257  000C76  0101               	movlb	1	; () banked
  4258  000C78  519C               	movf	recv_msg@qmsg& (0+255),w,b
  4259  000C7A  26D9               	addwf	fsr2l,f,c
  4260  000C7C  0101               	movlb	1	; () banked
  4261  000C7E  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4262  000C80  22DA               	addwfc	fsr2h,f,c
  4263  000C82  50DF               	movf	indf2,w,c
  4264  000C84  0101               	movlb	1	; () banked
  4265  000C86  0101               	movlb	1	; () banked
  4266  000C88  5D92               	subwf	recv_msg@maxlength& (0+255),w,b
  4267  000C8A  B0D8               	btfsc	status,0,c
  4268  000C8C  D002               	goto	l4196
  4269                           
  4270                           ; BSR set to: 1
  4271                           ;messages.c: 77: return (-3);
  4272  000C8E  0EFD               	movlw	253
  4273  000C90  0012               	return	
  4274  000C92                     l4196:
  4275                           
  4276                           ; BSR set to: 1
  4277                           ;messages.c: 78: }
  4278                           ;messages.c: 80: tlength = qmsg->length;
  4279  000C92  0101               	movlb	1	; () banked
  4280  000C94  EE20 F001          	lfsr	2,1
  4281  000C98  0101               	movlb	1	; () banked
  4282  000C9A  519C               	movf	recv_msg@qmsg& (0+255),w,b
  4283  000C9C  26D9               	addwf	fsr2l,f,c
  4284  000C9E  0101               	movlb	1	; () banked
  4285  000CA0  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4286  000CA2  22DA               	addwfc	fsr2h,f,c
  4287  000CA4  50DF               	movf	indf2,w,c
  4288  000CA6  0101               	movlb	1	; () banked
  4289  000CA8  6F97               	movwf	??_recv_msg& (0+255),b
  4290  000CAA  0101               	movlb	1	; () banked
  4291  000CAC  5197               	movf	??_recv_msg& (0+255),w,b
  4292  000CAE  0101               	movlb	1	; () banked
  4293  000CB0  0101               	movlb	1	; () banked
  4294  000CB2  6F9A               	movwf	recv_msg@tlength& (0+255),b
  4295  000CB4  0101               	movlb	1	; () banked
  4296  000CB6  6B9B               	clrf	(recv_msg@tlength+1)& (0+255),b
  4297                           
  4298                           ; BSR set to: 1
  4299                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4300  000CB8  0101               	movlb	1	; () banked
  4301  000CBA  0101               	movlb	1	; () banked
  4302  000CBC  C196  F187         	movff	recv_msg@data+1,memcpy@d1+1
  4303  000CC0  0101               	movlb	1	; () banked
  4304  000CC2  0101               	movlb	1	; () banked
  4305  000CC4  C195  F186         	movff	recv_msg@data,memcpy@d1
  4306  000CC8  0E03               	movlw	3
  4307  000CCA  0101               	movlb	1	; () banked
  4308  000CCC  0101               	movlb	1	; () banked
  4309  000CCE  259C               	addwf	recv_msg@qmsg& (0+255),w,b
  4310  000CD0  0101               	movlb	1	; () banked
  4311  000CD2  6F97               	movwf	??_recv_msg& (0+255),b
  4312  000CD4  0E00               	movlw	0
  4313  000CD6  0101               	movlb	1	; () banked
  4314  000CD8  0101               	movlb	1	; () banked
  4315  000CDA  219D               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4316  000CDC  0101               	movlb	1	; () banked
  4317  000CDE  6F98               	movwf	(??_recv_msg+1)& (0+255),b
  4318  000CE0  C197  F188         	movff	??_recv_msg,memcpy@s1
  4319  000CE4  C198  F189         	movff	??_recv_msg+1,memcpy@s1+1
  4320  000CE8  C19A  F18A         	movff	recv_msg@tlength,memcpy@n
  4321  000CEC  C19B  F18B         	movff	recv_msg@tlength+1,memcpy@n+1
  4322  000CF0  EC6F  F00F         	call	_memcpy	;wreg free
  4323                           
  4324                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  4325  000CF4  0101               	movlb	1	; () banked
  4326  000CF6  EE20 F042          	lfsr	2,66
  4327  000CFA  0101               	movlb	1	; () banked
  4328  000CFC  5190               	movf	recv_msg@qptr& (0+255),w,b
  4329  000CFE  26D9               	addwf	fsr2l,f,c
  4330  000D00  0101               	movlb	1	; () banked
  4331  000D02  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4332  000D04  22DA               	addwfc	fsr2h,f,c
  4333  000D06  0101               	movlb	1	; () banked
  4334  000D08  EE10 F042          	lfsr	1,66
  4335  000D0C  0101               	movlb	1	; () banked
  4336  000D0E  5190               	movf	recv_msg@qptr& (0+255),w,b
  4337  000D10  26E1               	addwf	fsr1l,f,c
  4338  000D12  0101               	movlb	1	; () banked
  4339  000D14  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4340  000D16  22E2               	addwfc	fsr1h,f,c
  4341  000D18  50E7               	movf	indf1,w,c
  4342  000D1A  0101               	movlb	1	; () banked
  4343  000D1C  6F97               	movwf	??_recv_msg& (0+255),b
  4344  000D1E  0E01               	movlw	1
  4345  000D20  0101               	movlb	1	; () banked
  4346  000D22  2597               	addwf	??_recv_msg& (0+255),w,b
  4347  000D24  0101               	movlb	1	; () banked
  4348  000D26  0101               	movlb	1	; () banked
  4349  000D28  6F86               	movwf	___awmod@dividend& (0+255),b
  4350  000D2A  0101               	movlb	1	; () banked
  4351  000D2C  0101               	movlb	1	; () banked
  4352  000D2E  6B87               	clrf	(___awmod@dividend+1)& (0+255),b
  4353  000D30  0E00               	movlw	0
  4354  000D32  2387               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4355  000D34  0E00               	movlw	0
  4356  000D36  0101               	movlb	1	; () banked
  4357  000D38  0101               	movlb	1	; () banked
  4358  000D3A  6F89               	movwf	(___awmod@divisor+1)& (0+255),b
  4359  000D3C  0E05               	movlw	5
  4360  000D3E  0101               	movlb	1	; () banked
  4361  000D40  6F88               	movwf	___awmod@divisor& (0+255),b
  4362  000D42  EC8D  F008         	call	___awmod	;wreg free
  4363  000D46  0101               	movlb	1	; () banked
  4364  000D48  0101               	movlb	1	; () banked
  4365  000D4A  5186               	movf	?___awmod& (0+255),w,b
  4366  000D4C  6EDF               	movwf	indf2,c
  4367                           
  4368                           ; BSR set to: 1
  4369                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4370  000D4E  0101               	movlb	1	; () banked
  4371  000D50  EE20 F002          	lfsr	2,2
  4372  000D54  0101               	movlb	1	; () banked
  4373  000D56  519C               	movf	recv_msg@qmsg& (0+255),w,b
  4374  000D58  26D9               	addwf	fsr2l,f,c
  4375  000D5A  0101               	movlb	1	; () banked
  4376  000D5C  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4377  000D5E  22DA               	addwfc	fsr2h,f,c
  4378  000D60  C193  FFE1         	movff	recv_msg@msgtype,fsr1l
  4379  000D64  C194  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4380  000D68  CFDF FFE7          	movff	indf2,indf1
  4381                           
  4382                           ; BSR set to: 1
  4383                           ;messages.c: 91: qmsg->full = 0;
  4384  000D6C  C19C  FFD9         	movff	recv_msg@qmsg,fsr2l
  4385  000D70  C19D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4386  000D74  0E00               	movlw	0
  4387  000D76  6EDF               	movwf	indf2,c
  4388                           
  4389                           ; BSR set to: 1
  4390                           ;messages.c: 92: return (tlength);
  4391  000D78  0101               	movlb	1	; () banked
  4392  000D7A  0101               	movlb	1	; () banked
  4393  000D7C  519A               	movf	recv_msg@tlength& (0+255),w,b
  4394  000D7E  0012               	return	
  4395  000D80                     l4212:
  4396                           
  4397                           ; BSR set to: 1
  4398                           ;messages.c: 94: return (-4);
  4399  000D80  0EFC               	movlw	252
  4400  000D82  0012               	return	
  4401  000D84                     __end_of_recv_msg:
  4402                           	opt stack 0
  4403                           tblptru	equ	0xFF8
  4404                           tblptrh	equ	0xFF7
  4405                           tblptrl	equ	0xFF6
  4406                           tablat	equ	0xFF5
  4407                           prodh	equ	0xFF4
  4408                           prodl	equ	0xFF3
  4409                           intcon	equ	0xFF2
  4410                           intcon2	equ	0xFF1
  4411                           postinc0	equ	0xFEE
  4412                           wreg	equ	0xFE8
  4413                           indf1	equ	0xFE7
  4414                           postdec1	equ	0xFE5
  4415                           fsr1h	equ	0xFE2
  4416                           fsr1l	equ	0xFE1
  4417                           indf2	equ	0xFDF
  4418                           postinc2	equ	0xFDE
  4419                           postdec2	equ	0xFDD
  4420                           fsr2h	equ	0xFDA
  4421                           fsr2l	equ	0xFD9
  4422                           status	equ	0xFD8
  4423                           
  4424 ;; *************** function _memcpy *****************
  4425 ;; Defined at:
  4426 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  d1              2    0[BANK1 ] PTR void 
  4429 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4430 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4431 ;;		 -> main@msgbuffer(11), 
  4432 ;;  s1              2    2[BANK1 ] PTR const void 
  4433 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4434 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4435 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4436 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4437 ;;		 -> main@uc(13), 
  4438 ;;  n               2    4[BANK1 ] unsigned int 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4441 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4442 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4443 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4444 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4445 ;;		 -> main@uc(13), 
  4446 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4447 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4448 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4449 ;;		 -> main@msgbuffer(11), 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  2    0[BANK1 ] PTR void 
  4452 ;; Registers used:
  4453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4459 ;;      Params:         0       0       6       0       0
  4460 ;;      Locals:         0       0       4       0       0
  4461 ;;      Temps:          0       0       0       0       0
  4462 ;;      Totals:         0       0      10       0       0
  4463 ;;Total ram usage:       10 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:   11
  4466 ;; This function calls:
  4467 ;;		Nothing
  4468 ;; This function is called by:
  4469 ;;		_send_msg
  4470 ;;		_recv_msg
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           	psect	text24
  4475  001EDE                     __ptext24:
  4476                           	opt stack 0
  4477  001EDE                     _memcpy:
  4478                           	opt stack 16
  4479                           
  4480                           ; BSR set to: 1
  4481                           ;incstack = 0
  4482  001EDE  0101               	movlb	1	; () banked
  4483  001EE0  0101               	movlb	1	; () banked
  4484  001EE2  C189  F18F         	movff	memcpy@s1+1,memcpy@s+1
  4485  001EE6  0101               	movlb	1	; () banked
  4486  001EE8  0101               	movlb	1	; () banked
  4487  001EEA  C188  F18E         	movff	memcpy@s1,memcpy@s
  4488  001EEE  0101               	movlb	1	; () banked
  4489  001EF0  0101               	movlb	1	; () banked
  4490  001EF2  C187  F18D         	movff	memcpy@d1+1,memcpy@d+1
  4491  001EF6  0101               	movlb	1	; () banked
  4492  001EF8  0101               	movlb	1	; () banked
  4493  001EFA  C186  F18C         	movff	memcpy@d1,memcpy@d
  4494  001EFE  D012               	goto	l4182
  4495  001F00                     l4176:
  4496                           
  4497                           ; BSR set to: 1
  4498  001F00  C18E  FFD9         	movff	memcpy@s,fsr2l
  4499  001F04  C18F  FFDA         	movff	memcpy@s+1,fsr2h
  4500  001F08  C18C  FFE1         	movff	memcpy@d,fsr1l
  4501  001F0C  C18D  FFE2         	movff	memcpy@d+1,fsr1h
  4502  001F10  CFDF FFE7          	movff	indf2,indf1
  4503                           
  4504                           ; BSR set to: 1
  4505  001F14  0101               	movlb	1	; () banked
  4506  001F16  0101               	movlb	1	; () banked
  4507  001F18  4B8E               	infsnz	memcpy@s& (0+255),f,b
  4508  001F1A  2B8F               	incf	(memcpy@s+1)& (0+255),f,b
  4509                           
  4510                           ; BSR set to: 1
  4511  001F1C  0101               	movlb	1	; () banked
  4512  001F1E  0101               	movlb	1	; () banked
  4513  001F20  4B8C               	infsnz	memcpy@d& (0+255),f,b
  4514  001F22  2B8D               	incf	(memcpy@d+1)& (0+255),f,b
  4515  001F24                     l4182:
  4516                           
  4517                           ; BSR set to: 1
  4518  001F24  0101               	movlb	1	; () banked
  4519  001F26  0101               	movlb	1	; () banked
  4520  001F28  078A               	decf	memcpy@n& (0+255),f,b
  4521  001F2A  A0D8               	btfss	status,0,c
  4522  001F2C  078B               	decf	(memcpy@n+1)& (0+255),f,b
  4523  001F2E  0101               	movlb	1	; () banked
  4524  001F30  298A               	incf	memcpy@n& (0+255),w,b
  4525  001F32  B4D8               	btfsc	status,2,c
  4526  001F34  298B               	incf	(memcpy@n+1)& (0+255),w,b
  4527  001F36  B4D8               	btfsc	status,2,c
  4528                           
  4529                           ; BSR set to: 1
  4530                           
  4531                           ; BSR set to: 1
  4532                           ;	Return value of _memcpy is never used
  4533  001F38  0012               	return	
  4534  001F3A  D7E2               	goto	l4176
  4535  001F3C                     __end_of_memcpy:
  4536                           	opt stack 0
  4537                           tblptru	equ	0xFF8
  4538                           tblptrh	equ	0xFF7
  4539                           tblptrl	equ	0xFF6
  4540                           tablat	equ	0xFF5
  4541                           prodh	equ	0xFF4
  4542                           prodl	equ	0xFF3
  4543                           intcon	equ	0xFF2
  4544                           intcon2	equ	0xFF1
  4545                           postinc0	equ	0xFEE
  4546                           wreg	equ	0xFE8
  4547                           indf1	equ	0xFE7
  4548                           postdec1	equ	0xFE5
  4549                           fsr1h	equ	0xFE2
  4550                           fsr1l	equ	0xFE1
  4551                           indf2	equ	0xFDF
  4552                           postinc2	equ	0xFDE
  4553                           postdec2	equ	0xFDD
  4554                           fsr2h	equ	0xFDA
  4555                           fsr2l	equ	0xFD9
  4556                           status	equ	0xFD8
  4557                           
  4558 ;; *************** function ___awmod *****************
  4559 ;; Defined at:
  4560 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  dividend        2    0[BANK1 ] int 
  4563 ;;  divisor         2    2[BANK1 ] int 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  sign            1    6[BANK1 ] unsigned char 
  4566 ;;  counter         1    5[BANK1 ] unsigned char 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  2    0[BANK1 ] int 
  4569 ;; Registers used:
  4570 ;;		wreg, status,2, status,0, prodl
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4576 ;;      Params:         0       0       4       0       0
  4577 ;;      Locals:         0       0       2       0       0
  4578 ;;      Temps:          0       0       1       0       0
  4579 ;;      Totals:         0       0       7       0       0
  4580 ;;Total ram usage:        7 bytes
  4581 ;; Hardware stack levels used:    1
  4582 ;; Hardware stack levels required when called:   11
  4583 ;; This function calls:
  4584 ;;		Nothing
  4585 ;; This function is called by:
  4586 ;;		_send_msg
  4587 ;;		_recv_msg
  4588 ;;		i1_send_msg
  4589 ;;		i2_send_msg
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text25
  4594  00111A                     __ptext25:
  4595                           	opt stack 0
  4596  00111A                     ___awmod:
  4597                           	opt stack 16
  4598                           
  4599                           ; BSR set to: 1
  4600                           ;incstack = 0
  4601  00111A  0101               	movlb	1	; () banked
  4602  00111C  6F8A               	movwf	??___awmod& (0+255),b
  4603  00111E  0E00               	movlw	0
  4604  001120  0101               	movlb	1	; () banked
  4605  001122  0101               	movlb	1	; () banked
  4606  001124  6F8C               	movwf	___awmod@sign& (0+255),b
  4607  001126  0101               	movlb	1	; () banked
  4608  001128  518A               	movf	??___awmod& (0+255),w,b
  4609                           
  4610                           ; BSR set to: 1
  4611  00112A  0101               	movlb	1	; () banked
  4612  00112C  0101               	movlb	1	; () banked
  4613  00112E  5187               	movf	(___awmod@dividend+1)& (0+255),w,b
  4614  001130  0A80               	xorlw	128
  4615  001132  6EF3               	movwf	prodl,c
  4616  001134  0E80               	movlw	128
  4617  001136  5CF3               	subwf	prodl,w,c
  4618  001138  0E00               	movlw	0
  4619  00113A  B4D8               	btfsc	status,2,c
  4620  00113C  5D86               	subwf	___awmod@dividend& (0+255),w,b
  4621  00113E  B0D8               	btfsc	status,0,c
  4622  001140  D00F               	goto	l4534
  4623                           
  4624                           ; BSR set to: 1
  4625  001142  0101               	movlb	1	; () banked
  4626  001144  0101               	movlb	1	; () banked
  4627  001146  6D86               	negf	___awmod@dividend& (0+255),b
  4628  001148  0101               	movlb	1	; () banked
  4629  00114A  1F87               	comf	(___awmod@dividend+1)& (0+255),f,b
  4630  00114C  B0D8               	btfsc	status,0,c
  4631  00114E  2B87               	incf	(___awmod@dividend+1)& (0+255),f,b
  4632                           
  4633                           ; BSR set to: 1
  4634  001150  0101               	movlb	1	; () banked
  4635  001152  6F8A               	movwf	??___awmod& (0+255),b
  4636  001154  0E01               	movlw	1
  4637  001156  0101               	movlb	1	; () banked
  4638  001158  0101               	movlb	1	; () banked
  4639  00115A  6F8C               	movwf	___awmod@sign& (0+255),b
  4640  00115C  0101               	movlb	1	; () banked
  4641  00115E  518A               	movf	??___awmod& (0+255),w,b
  4642  001160                     l4534:
  4643                           
  4644                           ; BSR set to: 1
  4645  001160  0101               	movlb	1	; () banked
  4646  001162  0101               	movlb	1	; () banked
  4647  001164  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4648  001166  0A80               	xorlw	128
  4649  001168  6EF3               	movwf	prodl,c
  4650  00116A  0E80               	movlw	128
  4651  00116C  5CF3               	subwf	prodl,w,c
  4652  00116E  0E00               	movlw	0
  4653  001170  B4D8               	btfsc	status,2,c
  4654  001172  5D88               	subwf	___awmod@divisor& (0+255),w,b
  4655  001174  B0D8               	btfsc	status,0,c
  4656  001176  D007               	goto	l4538
  4657                           
  4658                           ; BSR set to: 1
  4659  001178  0101               	movlb	1	; () banked
  4660  00117A  0101               	movlb	1	; () banked
  4661  00117C  6D88               	negf	___awmod@divisor& (0+255),b
  4662  00117E  0101               	movlb	1	; () banked
  4663  001180  1F89               	comf	(___awmod@divisor+1)& (0+255),f,b
  4664  001182  B0D8               	btfsc	status,0,c
  4665  001184  2B89               	incf	(___awmod@divisor+1)& (0+255),f,b
  4666  001186                     l4538:
  4667                           
  4668                           ; BSR set to: 1
  4669  001186  0101               	movlb	1	; () banked
  4670  001188  0101               	movlb	1	; () banked
  4671  00118A  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4672  00118C  1188               	iorwf	___awmod@divisor& (0+255),w,b
  4673  00118E  B4D8               	btfsc	status,2,c
  4674  001190  D03A               	goto	l4554
  4675                           
  4676                           ; BSR set to: 1
  4677  001192  0101               	movlb	1	; () banked
  4678  001194  6F8A               	movwf	??___awmod& (0+255),b
  4679  001196  0E01               	movlw	1
  4680  001198  0101               	movlb	1	; () banked
  4681  00119A  0101               	movlb	1	; () banked
  4682  00119C  6F8B               	movwf	___awmod@counter& (0+255),b
  4683  00119E  0101               	movlb	1	; () banked
  4684  0011A0  518A               	movf	??___awmod& (0+255),w,b
  4685  0011A2  D009               	goto	l4544
  4686  0011A4                     l4542:
  4687                           
  4688                           ; BSR set to: 1
  4689  0011A4  0101               	movlb	1	; () banked
  4690  0011A6  0101               	movlb	1	; () banked
  4691  0011A8  0101               	movlb	1	; () banked
  4692  0011AA  90D8               	bcf	status,0,c
  4693  0011AC  3788               	rlcf	___awmod@divisor& (0+255),f,b
  4694  0011AE  3789               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4695  0011B0  0101               	movlb	1	; () banked
  4696  0011B2  0101               	movlb	1	; () banked
  4697  0011B4  2B8B               	incf	___awmod@counter& (0+255),f,b
  4698  0011B6                     l4544:
  4699                           
  4700                           ; BSR set to: 1
  4701  0011B6  0101               	movlb	1	; () banked
  4702  0011B8  0101               	movlb	1	; () banked
  4703  0011BA  AF89               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4704  0011BC  D7F3               	goto	l4542
  4705  0011BE                     l4546:
  4706                           
  4707                           ; BSR set to: 1
  4708  0011BE  0101               	movlb	1	; () banked
  4709  0011C0  0101               	movlb	1	; () banked
  4710  0011C2  5188               	movf	___awmod@divisor& (0+255),w,b
  4711  0011C4  0101               	movlb	1	; () banked
  4712  0011C6  0101               	movlb	1	; () banked
  4713  0011C8  5D86               	subwf	___awmod@dividend& (0+255),w,b
  4714  0011CA  0101               	movlb	1	; () banked
  4715  0011CC  0101               	movlb	1	; () banked
  4716  0011CE  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4717  0011D0  0101               	movlb	1	; () banked
  4718  0011D2  0101               	movlb	1	; () banked
  4719  0011D4  5987               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4720  0011D6  A0D8               	btfss	status,0,c
  4721  0011D8  D00C               	goto	l4550
  4722                           
  4723                           ; BSR set to: 1
  4724  0011DA  0101               	movlb	1	; () banked
  4725  0011DC  0101               	movlb	1	; () banked
  4726  0011DE  5188               	movf	___awmod@divisor& (0+255),w,b
  4727  0011E0  0101               	movlb	1	; () banked
  4728  0011E2  0101               	movlb	1	; () banked
  4729  0011E4  5F86               	subwf	___awmod@dividend& (0+255),f,b
  4730  0011E6  0101               	movlb	1	; () banked
  4731  0011E8  0101               	movlb	1	; () banked
  4732  0011EA  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4733  0011EC  0101               	movlb	1	; () banked
  4734  0011EE  0101               	movlb	1	; () banked
  4735  0011F0  5B87               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4736  0011F2                     l4550:
  4737                           
  4738                           ; BSR set to: 1
  4739  0011F2  0101               	movlb	1	; () banked
  4740  0011F4  0101               	movlb	1	; () banked
  4741  0011F6  0101               	movlb	1	; () banked
  4742  0011F8  90D8               	bcf	status,0,c
  4743  0011FA  3389               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4744  0011FC  3388               	rrcf	___awmod@divisor& (0+255),f,b
  4745                           
  4746                           ; BSR set to: 1
  4747  0011FE  0101               	movlb	1	; () banked
  4748  001200  0101               	movlb	1	; () banked
  4749  001202  2F8B               	decfsz	___awmod@counter& (0+255),f,b
  4750  001204  D7DC               	goto	l4546
  4751  001206                     l4554:
  4752                           
  4753                           ; BSR set to: 1
  4754  001206  0101               	movlb	1	; () banked
  4755  001208  0101               	movlb	1	; () banked
  4756  00120A  518C               	movf	___awmod@sign& (0+255),w,b
  4757  00120C  B4D8               	btfsc	status,2,c
  4758  00120E  D007               	goto	l4558
  4759                           
  4760                           ; BSR set to: 1
  4761  001210  0101               	movlb	1	; () banked
  4762  001212  0101               	movlb	1	; () banked
  4763  001214  6D86               	negf	___awmod@dividend& (0+255),b
  4764  001216  0101               	movlb	1	; () banked
  4765  001218  1F87               	comf	(___awmod@dividend+1)& (0+255),f,b
  4766  00121A  B0D8               	btfsc	status,0,c
  4767  00121C  2B87               	incf	(___awmod@dividend+1)& (0+255),f,b
  4768  00121E                     l4558:
  4769                           
  4770                           ; BSR set to: 1
  4771  00121E  C186  F186         	movff	___awmod@dividend,?___awmod
  4772  001222  C187  F187         	movff	___awmod@dividend+1,?___awmod+1
  4773  001226  0012               	return	
  4774  001228                     __end_of___awmod:
  4775                           	opt stack 0
  4776                           tblptru	equ	0xFF8
  4777                           tblptrh	equ	0xFF7
  4778                           tblptrl	equ	0xFF6
  4779                           tablat	equ	0xFF5
  4780                           prodh	equ	0xFF4
  4781                           prodl	equ	0xFF3
  4782                           intcon	equ	0xFF2
  4783                           intcon2	equ	0xFF1
  4784                           postinc0	equ	0xFEE
  4785                           wreg	equ	0xFE8
  4786                           indf1	equ	0xFE7
  4787                           postdec1	equ	0xFE5
  4788                           fsr1h	equ	0xFE2
  4789                           fsr1l	equ	0xFE1
  4790                           indf2	equ	0xFDF
  4791                           postinc2	equ	0xFDE
  4792                           postdec2	equ	0xFDD
  4793                           fsr2h	equ	0xFDA
  4794                           fsr2l	equ	0xFD9
  4795                           status	equ	0xFD8
  4796                           
  4797 ;; *************** function _SetChanADC *****************
  4798 ;; Defined at:
  4799 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  channel         1    wreg     unsigned char 
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;  channel         1    1[BANK1 ] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;		None               void
  4806 ;; Registers used:
  4807 ;;		wreg, status,2, status,0
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4813 ;;      Params:         0       0       0       0       0
  4814 ;;      Locals:         0       0       1       0       0
  4815 ;;      Temps:          0       0       1       0       0
  4816 ;;      Totals:         0       0       2       0       0
  4817 ;;Total ram usage:        2 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:   11
  4820 ;; This function calls:
  4821 ;;		Nothing
  4822 ;; This function is called by:
  4823 ;;		_main
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text26
  4828  0022D8                     __ptext26:
  4829                           	opt stack 0
  4830  0022D8                     _SetChanADC:
  4831                           	opt stack 19
  4832                           
  4833                           ; BSR set to: 1
  4834                           ;incstack = 0
  4835                           ;SetChanADC@channel stored from wreg
  4836  0022D8  CFE8 F187          	movff	wreg,SetChanADC@channel
  4837  0022DC  CFC2 F186          	movff	4034,??_SetChanADC	;volatile
  4838  0022E0  0EC3               	movlw	195
  4839  0022E2  0101               	movlb	1	; () banked
  4840  0022E4  1786               	andwf	??_SetChanADC& (0+255),f,b
  4841  0022E6  0101               	movlb	1	; () banked
  4842  0022E8  0101               	movlb	1	; () banked
  4843  0022EA  90D8               	bcf	status,0,c
  4844  0022EC  3187               	rrcf	SetChanADC@channel& (0+255),w,b
  4845  0022EE  0B3C               	andlw	60
  4846  0022F0  0101               	movlb	1	; () banked
  4847  0022F2  1186               	iorwf	??_SetChanADC& (0+255),w,b
  4848  0022F4  6EC2               	movwf	4034,c	;volatile
  4849                           
  4850                           ; BSR set to: 1
  4851  0022F6  0012               	return	
  4852  0022F8                     __end_of_SetChanADC:
  4853                           	opt stack 0
  4854                           tblptru	equ	0xFF8
  4855                           tblptrh	equ	0xFF7
  4856                           tblptrl	equ	0xFF6
  4857                           tablat	equ	0xFF5
  4858                           prodh	equ	0xFF4
  4859                           prodl	equ	0xFF3
  4860                           intcon	equ	0xFF2
  4861                           intcon2	equ	0xFF1
  4862                           postinc0	equ	0xFEE
  4863                           wreg	equ	0xFE8
  4864                           indf1	equ	0xFE7
  4865                           postdec1	equ	0xFE5
  4866                           fsr1h	equ	0xFE2
  4867                           fsr1l	equ	0xFE1
  4868                           indf2	equ	0xFDF
  4869                           postinc2	equ	0xFDE
  4870                           postdec2	equ	0xFDD
  4871                           fsr2h	equ	0xFDA
  4872                           fsr2l	equ	0xFD9
  4873                           status	equ	0xFD8
  4874                           
  4875 ;; *************** function _OpenUSART *****************
  4876 ;; Defined at:
  4877 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  config          1    wreg     unsigned char 
  4880 ;;  spbrg           2    0[BANK1 ] unsigned int 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  config          1    5[BANK1 ] unsigned char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;		None               void
  4885 ;; Registers used:
  4886 ;;		wreg, status,2
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4892 ;;      Params:         0       0       2       0       0
  4893 ;;      Locals:         0       0       1       0       0
  4894 ;;      Temps:          0       0       3       0       0
  4895 ;;      Totals:         0       0       6       0       0
  4896 ;;Total ram usage:        6 bytes
  4897 ;; Hardware stack levels used:    1
  4898 ;; Hardware stack levels required when called:   11
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_main
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           	psect	text27
  4907  001894                     __ptext27:
  4908                           	opt stack 0
  4909  001894                     _OpenUSART:
  4910                           	opt stack 19
  4911                           
  4912                           ; BSR set to: 1
  4913                           ;incstack = 0
  4914                           ;OpenUSART@config stored from wreg
  4915  001894  CFE8 F18B          	movff	wreg,OpenUSART@config
  4916  001898  0E00               	movlw	0
  4917  00189A  6EAC               	movwf	4012,c	;volatile
  4918  00189C  0E00               	movlw	0
  4919  00189E  6EAB               	movwf	4011,c	;volatile
  4920  0018A0  0101               	movlb	1	; () banked
  4921  0018A2  0101               	movlb	1	; () banked
  4922  0018A4  B18B               	btfsc	OpenUSART@config& (0+255),0,b
  4923                           
  4924                           ; BSR set to: 1
  4925  0018A6  88AC               	bsf	4012,4,c	;volatile
  4926                           
  4927                           ; BSR set to: 1
  4928                           
  4929                           ; BSR set to: 1
  4930  0018A8  0101               	movlb	1	; () banked
  4931  0018AA  0101               	movlb	1	; () banked
  4932  0018AC  A38B               	btfss	OpenUSART@config& (0+255),1,b
  4933  0018AE  D002               	goto	l4018
  4934                           
  4935                           ; BSR set to: 1
  4936  0018B0  8CAC               	bsf	4012,6,c	;volatile
  4937  0018B2  8CAB               	bsf	4011,6,c	;volatile
  4938  0018B4                     l4018:
  4939                           
  4940                           ; BSR set to: 1
  4941  0018B4  0101               	movlb	1	; () banked
  4942  0018B6  0101               	movlb	1	; () banked
  4943  0018B8  B58B               	btfsc	OpenUSART@config& (0+255),2,b
  4944                           
  4945                           ; BSR set to: 1
  4946  0018BA  8EAC               	bsf	4012,7,c	;volatile
  4947                           
  4948                           ; BSR set to: 1
  4949                           
  4950                           ; BSR set to: 1
  4951  0018BC  0101               	movlb	1	; () banked
  4952  0018BE  0101               	movlb	1	; () banked
  4953  0018C0  A78B               	btfss	OpenUSART@config& (0+255),3,b
  4954  0018C2  D002               	goto	l615
  4955                           
  4956                           ; BSR set to: 1
  4957  0018C4  88AB               	bsf	4011,4,c	;volatile
  4958  0018C6  D001               	goto	l4026
  4959  0018C8                     l615:
  4960                           
  4961                           ; BSR set to: 1
  4962  0018C8  8AAB               	bsf	4011,5,c	;volatile
  4963  0018CA                     l4026:
  4964                           
  4965                           ; BSR set to: 1
  4966  0018CA  0101               	movlb	1	; () banked
  4967  0018CC  0101               	movlb	1	; () banked
  4968  0018CE  B98B               	btfsc	OpenUSART@config& (0+255),4,b
  4969                           
  4970                           ; BSR set to: 1
  4971  0018D0  84AC               	bsf	4012,2,c	;volatile
  4972                           
  4973                           ; BSR set to: 1
  4974  0018D2  989E               	bcf	3998,4,c	;volatile
  4975                           
  4976                           ; BSR set to: 1
  4977  0018D4  0101               	movlb	1	; () banked
  4978  0018D6  0101               	movlb	1	; () banked
  4979  0018D8  BB8B               	btfsc	OpenUSART@config& (0+255),5,b
  4980                           
  4981                           ; BSR set to: 1
  4982  0018DA  86AB               	bsf	4011,3,c	;volatile
  4983                           
  4984                           ; BSR set to: 1
  4985                           
  4986                           ; BSR set to: 1
  4987  0018DC  0101               	movlb	1	; () banked
  4988  0018DE  0101               	movlb	1	; () banked
  4989  0018E0  AD8B               	btfss	OpenUSART@config& (0+255),6,b
  4990  0018E2  D002               	goto	l619
  4991                           
  4992                           ; BSR set to: 1
  4993  0018E4  8A9D               	bsf	3997,5,c	;volatile
  4994  0018E6  D001               	goto	l620
  4995  0018E8                     l619:
  4996                           
  4997                           ; BSR set to: 1
  4998  0018E8  9A9D               	bcf	3997,5,c	;volatile
  4999  0018EA                     l620:
  5000                           
  5001                           ; BSR set to: 1
  5002  0018EA  9A9E               	bcf	3998,5,c	;volatile
  5003                           
  5004                           ; BSR set to: 1
  5005  0018EC  0101               	movlb	1	; () banked
  5006  0018EE  0101               	movlb	1	; () banked
  5007  0018F0  AF8B               	btfss	OpenUSART@config& (0+255),7,b
  5008  0018F2  D002               	goto	l621
  5009                           
  5010                           ; BSR set to: 1
  5011  0018F4  889D               	bsf	3997,4,c	;volatile
  5012  0018F6  D001               	goto	l622
  5013  0018F8                     l621:
  5014                           
  5015                           ; BSR set to: 1
  5016  0018F8  989D               	bcf	3997,4,c	;volatile
  5017  0018FA                     l622:
  5018                           
  5019                           ; BSR set to: 1
  5020  0018FA  C186  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5021                           
  5022                           ; BSR set to: 1
  5023  0018FE  0101               	movlb	1	; () banked
  5024  001900  C187  F188         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5025  001904  C188  F189         	movff	??_OpenUSART,??_OpenUSART+1
  5026  001908  0101               	movlb	1	; () banked
  5027  00190A  6B8A               	clrf	(??_OpenUSART+2)& (0+255),b
  5028  00190C  0101               	movlb	1	; () banked
  5029  00190E  5189               	movf	(??_OpenUSART+1)& (0+255),w,b
  5030  001910  6EB0               	movwf	4016,c	;volatile
  5031                           
  5032                           ; BSR set to: 1
  5033  001912  8AAC               	bsf	4012,5,c	;volatile
  5034                           
  5035                           ; BSR set to: 1
  5036  001914  8EAB               	bsf	4011,7,c	;volatile
  5037                           
  5038                           ; BSR set to: 1
  5039  001916  9C94               	bcf	3988,6,c	;volatile
  5040                           
  5041                           ; BSR set to: 1
  5042  001918  8E94               	bsf	3988,7,c	;volatile
  5043                           
  5044                           ; BSR set to: 1
  5045  00191A  A8AC               	btfss	4012,4,c	;volatile
  5046  00191C  0012               	return	
  5047                           
  5048                           ; BSR set to: 1
  5049  00191E  BEAC               	btfsc	4012,7,c	;volatile
  5050  001920  0012               	return	
  5051                           
  5052                           ; BSR set to: 1
  5053  001922  8C94               	bsf	3988,6,c	;volatile
  5054  001924  0012               	return	
  5055  001926                     __end_of_OpenUSART:
  5056                           	opt stack 0
  5057                           tblptru	equ	0xFF8
  5058                           tblptrh	equ	0xFF7
  5059                           tblptrl	equ	0xFF6
  5060                           tablat	equ	0xFF5
  5061                           prodh	equ	0xFF4
  5062                           prodl	equ	0xFF3
  5063                           intcon	equ	0xFF2
  5064                           intcon2	equ	0xFF1
  5065                           postinc0	equ	0xFEE
  5066                           wreg	equ	0xFE8
  5067                           indf1	equ	0xFE7
  5068                           postdec1	equ	0xFE5
  5069                           fsr1h	equ	0xFE2
  5070                           fsr1l	equ	0xFE1
  5071                           indf2	equ	0xFDF
  5072                           postinc2	equ	0xFDE
  5073                           postdec2	equ	0xFDD
  5074                           fsr2h	equ	0xFDA
  5075                           fsr2l	equ	0xFD9
  5076                           status	equ	0xFD8
  5077                           
  5078 ;; *************** function _OpenTimer1 *****************
  5079 ;; Defined at:
  5080 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  config          1    wreg     unsigned char 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  config          1    0[BANK1 ] unsigned char 
  5085 ;; Return value:  Size  Location     Type
  5086 ;;		None               void
  5087 ;; Registers used:
  5088 ;;		wreg, status,2, status,0
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5094 ;;      Params:         0       0       0       0       0
  5095 ;;      Locals:         0       0       1       0       0
  5096 ;;      Temps:          0       0       0       0       0
  5097 ;;      Totals:         0       0       1       0       0
  5098 ;;Total ram usage:        1 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; Hardware stack levels required when called:   11
  5101 ;; This function calls:
  5102 ;;		Nothing
  5103 ;; This function is called by:
  5104 ;;		_main
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           	psect	text28
  5109  00212E                     __ptext28:
  5110                           	opt stack 0
  5111  00212E                     _OpenTimer1:
  5112                           	opt stack 19
  5113                           
  5114                           ; BSR set to: 1
  5115                           ;incstack = 0
  5116                           ;OpenTimer1@config stored from wreg
  5117  00212E  CFE8 F186          	movff	wreg,OpenTimer1@config
  5118  002132  0101               	movlb	1	; () banked
  5119  002134  0101               	movlb	1	; () banked
  5120  002136  5186               	movf	OpenTimer1@config& (0+255),w,b
  5121  002138  0B7E               	andlw	126
  5122  00213A  6ECD               	movwf	4045,c	;volatile
  5123                           
  5124                           ; BSR set to: 1
  5125  00213C  0101               	movlb	1	; () banked
  5126  00213E  0101               	movlb	1	; () banked
  5127  002140  AD86               	btfss	OpenTimer1@config& (0+255),6,b
  5128  002142  D002               	goto	l578
  5129                           
  5130                           ; BSR set to: 1
  5131  002144  8ECD               	bsf	4045,7,c	;volatile
  5132  002146  D001               	goto	l3978
  5133  002148                     l578:
  5134                           
  5135                           ; BSR set to: 1
  5136  002148  9ECD               	bcf	4045,7,c	;volatile
  5137  00214A                     l3978:
  5138                           
  5139                           ; BSR set to: 1
  5140  00214A  0E00               	movlw	0
  5141  00214C  6ECF               	movwf	4047,c	;volatile
  5142  00214E  0E00               	movlw	0
  5143  002150  6ECE               	movwf	4046,c	;volatile
  5144                           
  5145                           ; BSR set to: 1
  5146  002152  909E               	bcf	3998,0,c	;volatile
  5147                           
  5148                           ; BSR set to: 1
  5149  002154  0101               	movlb	1	; () banked
  5150  002156  0101               	movlb	1	; () banked
  5151  002158  AF86               	btfss	OpenTimer1@config& (0+255),7,b
  5152  00215A  D002               	goto	l580
  5153                           
  5154                           ; BSR set to: 1
  5155  00215C  809D               	bsf	3997,0,c	;volatile
  5156  00215E  D001               	goto	l581
  5157  002160                     l580:
  5158                           
  5159                           ; BSR set to: 1
  5160  002160  909D               	bcf	3997,0,c	;volatile
  5161  002162                     l581:
  5162                           
  5163                           ; BSR set to: 1
  5164  002162  80CD               	bsf	4045,0,c	;volatile
  5165                           
  5166                           ; BSR set to: 1
  5167  002164  0012               	return	
  5168  002166                     __end_of_OpenTimer1:
  5169                           	opt stack 0
  5170                           tblptru	equ	0xFF8
  5171                           tblptrh	equ	0xFF7
  5172                           tblptrl	equ	0xFF6
  5173                           tablat	equ	0xFF5
  5174                           prodh	equ	0xFF4
  5175                           prodl	equ	0xFF3
  5176                           intcon	equ	0xFF2
  5177                           intcon2	equ	0xFF1
  5178                           postinc0	equ	0xFEE
  5179                           wreg	equ	0xFE8
  5180                           indf1	equ	0xFE7
  5181                           postdec1	equ	0xFE5
  5182                           fsr1h	equ	0xFE2
  5183                           fsr1l	equ	0xFE1
  5184                           indf2	equ	0xFDF
  5185                           postinc2	equ	0xFDE
  5186                           postdec2	equ	0xFDD
  5187                           fsr2h	equ	0xFDA
  5188                           fsr2l	equ	0xFD9
  5189                           status	equ	0xFD8
  5190                           
  5191 ;; *************** function _OpenTimer0 *****************
  5192 ;; Defined at:
  5193 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;  config          1    wreg     unsigned char 
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;  config          1    0[BANK1 ] unsigned char 
  5198 ;; Return value:  Size  Location     Type
  5199 ;;		None               void
  5200 ;; Registers used:
  5201 ;;		wreg, status,2, status,0
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5207 ;;      Params:         0       0       0       0       0
  5208 ;;      Locals:         0       0       1       0       0
  5209 ;;      Temps:          0       0       0       0       0
  5210 ;;      Totals:         0       0       1       0       0
  5211 ;;Total ram usage:        1 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; Hardware stack levels required when called:   11
  5214 ;; This function calls:
  5215 ;;		Nothing
  5216 ;; This function is called by:
  5217 ;;		_main
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text29
  5222  00223E                     __ptext29:
  5223                           	opt stack 0
  5224  00223E                     _OpenTimer0:
  5225                           	opt stack 19
  5226                           
  5227                           ; BSR set to: 1
  5228                           ;incstack = 0
  5229                           ;OpenTimer0@config stored from wreg
  5230  00223E  CFE8 F186          	movff	wreg,OpenTimer0@config
  5231  002242  0101               	movlb	1	; () banked
  5232  002244  0101               	movlb	1	; () banked
  5233  002246  5186               	movf	OpenTimer0@config& (0+255),w,b
  5234  002248  0B7F               	andlw	127
  5235  00224A  6ED5               	movwf	4053,c	;volatile
  5236                           
  5237                           ; BSR set to: 1
  5238  00224C  0E00               	movlw	0
  5239  00224E  6ED7               	movwf	4055,c	;volatile
  5240                           
  5241                           ; BSR set to: 1
  5242  002250  0E00               	movlw	0
  5243  002252  6ED6               	movwf	4054,c	;volatile
  5244                           
  5245                           ; BSR set to: 1
  5246  002254  94F2               	bcf	intcon,2,c	;volatile
  5247                           
  5248                           ; BSR set to: 1
  5249  002256  0101               	movlb	1	; () banked
  5250  002258  0101               	movlb	1	; () banked
  5251  00225A  AF86               	btfss	OpenTimer0@config& (0+255),7,b
  5252  00225C  D002               	goto	l554
  5253                           
  5254                           ; BSR set to: 1
  5255  00225E  8AF2               	bsf	intcon,5,c	;volatile
  5256  002260  D001               	goto	l555
  5257  002262                     l554:
  5258                           
  5259                           ; BSR set to: 1
  5260  002262  9AF2               	bcf	intcon,5,c	;volatile
  5261  002264                     l555:
  5262                           
  5263                           ; BSR set to: 1
  5264  002264  8ED5               	bsf	4053,7,c	;volatile
  5265                           
  5266                           ; BSR set to: 1
  5267  002266  0012               	return	
  5268  002268                     __end_of_OpenTimer0:
  5269                           	opt stack 0
  5270                           tblptru	equ	0xFF8
  5271                           tblptrh	equ	0xFF7
  5272                           tblptrl	equ	0xFF6
  5273                           tablat	equ	0xFF5
  5274                           prodh	equ	0xFF4
  5275                           prodl	equ	0xFF3
  5276                           intcon	equ	0xFF2
  5277                           intcon2	equ	0xFF1
  5278                           postinc0	equ	0xFEE
  5279                           wreg	equ	0xFE8
  5280                           indf1	equ	0xFE7
  5281                           postdec1	equ	0xFE5
  5282                           fsr1h	equ	0xFE2
  5283                           fsr1l	equ	0xFE1
  5284                           indf2	equ	0xFDF
  5285                           postinc2	equ	0xFDE
  5286                           postdec2	equ	0xFDD
  5287                           fsr2h	equ	0xFDA
  5288                           fsr2l	equ	0xFD9
  5289                           status	equ	0xFD8
  5290                           
  5291 ;; *************** function _OpenADC *****************
  5292 ;; Defined at:
  5293 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;  config          1    wreg     unsigned char 
  5296 ;;  config2         1    0[BANK1 ] unsigned char 
  5297 ;;  portconfig      1    1[BANK1 ] unsigned char 
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  config          1    4[BANK1 ] unsigned char 
  5300 ;; Return value:  Size  Location     Type
  5301 ;;		None               void
  5302 ;; Registers used:
  5303 ;;		wreg, status,2, status,0
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5309 ;;      Params:         0       0       2       0       0
  5310 ;;      Locals:         0       0       1       0       0
  5311 ;;      Temps:          0       0       2       0       0
  5312 ;;      Totals:         0       0       5       0       0
  5313 ;;Total ram usage:        5 bytes
  5314 ;; Hardware stack levels used:    1
  5315 ;; Hardware stack levels required when called:   11
  5316 ;; This function calls:
  5317 ;;		Nothing
  5318 ;; This function is called by:
  5319 ;;		_main
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text30
  5324  001B46                     __ptext30:
  5325                           	opt stack 0
  5326  001B46                     _OpenADC:
  5327                           	opt stack 19
  5328                           
  5329                           ; BSR set to: 1
  5330                           ;incstack = 0
  5331                           ;OpenADC@config stored from wreg
  5332  001B46  CFE8 F18A          	movff	wreg,OpenADC@config
  5333  001B4A  0E00               	movlw	0
  5334  001B4C  6EC2               	movwf	4034,c	;volatile
  5335  001B4E  0E00               	movlw	0
  5336  001B50  6EC0               	movwf	4032,c	;volatile
  5337  001B52  0101               	movlb	1	; () banked
  5338  001B54  0101               	movlb	1	; () banked
  5339  001B56  90D8               	bcf	status,0,c
  5340  001B58  3186               	rrcf	OpenADC@config2& (0+255),w,b
  5341  001B5A  0B3C               	andlw	60
  5342  001B5C  6EC2               	movwf	4034,c	;volatile
  5343                           
  5344                           ; BSR set to: 1
  5345  001B5E  C186  F188         	movff	OpenADC@config2,??_OpenADC
  5346  001B62  0101               	movlb	1	; () banked
  5347  001B64  3B88               	swapf	??_OpenADC& (0+255),f,b
  5348  001B66  0EF0               	movlw	240
  5349  001B68  1788               	andwf	??_OpenADC& (0+255),f,b
  5350  001B6A  0E30               	movlw	48
  5351  001B6C  0101               	movlb	1	; () banked
  5352  001B6E  1788               	andwf	??_OpenADC& (0+255),f,b
  5353  001B70  0101               	movlb	1	; () banked
  5354  001B72  0101               	movlb	1	; () banked
  5355  001B74  5187               	movf	OpenADC@portconfig& (0+255),w,b
  5356  001B76  0B0F               	andlw	15
  5357  001B78  0101               	movlb	1	; () banked
  5358  001B7A  1188               	iorwf	??_OpenADC& (0+255),w,b
  5359  001B7C  6EC1               	movwf	4033,c	;volatile
  5360                           
  5361                           ; BSR set to: 1
  5362  001B7E  C18A  F188         	movff	OpenADC@config,??_OpenADC
  5363  001B82  0101               	movlb	1	; () banked
  5364  001B84  90D8               	bcf	status,0,c
  5365  001B86  3788               	rlcf	??_OpenADC& (0+255),f,b
  5366  001B88  0101               	movlb	1	; () banked
  5367  001B8A  90D8               	bcf	status,0,c
  5368  001B8C  3788               	rlcf	??_OpenADC& (0+255),f,b
  5369  001B8E  0E38               	movlw	56
  5370  001B90  0101               	movlb	1	; () banked
  5371  001B92  1788               	andwf	??_OpenADC& (0+255),f,b
  5372  001B94  C18A  F189         	movff	OpenADC@config,??_OpenADC+1
  5373  001B98  0101               	movlb	1	; () banked
  5374  001B9A  3B89               	swapf	(??_OpenADC+1)& (0+255),f,b
  5375  001B9C  0E0F               	movlw	15
  5376  001B9E  1789               	andwf	(??_OpenADC+1)& (0+255),f,b
  5377  001BA0  0E07               	movlw	7
  5378  001BA2  0101               	movlb	1	; () banked
  5379  001BA4  1789               	andwf	(??_OpenADC+1)& (0+255),f,b
  5380  001BA6  0101               	movlb	1	; () banked
  5381  001BA8  0101               	movlb	1	; () banked
  5382  001BAA  518A               	movf	OpenADC@config& (0+255),w,b
  5383  001BAC  0B80               	andlw	128
  5384  001BAE  0101               	movlb	1	; () banked
  5385  001BB0  1189               	iorwf	(??_OpenADC+1)& (0+255),w,b
  5386  001BB2  0101               	movlb	1	; () banked
  5387  001BB4  1188               	iorwf	??_OpenADC& (0+255),w,b
  5388  001BB6  6EC0               	movwf	4032,c	;volatile
  5389                           
  5390                           ; BSR set to: 1
  5391  001BB8  0101               	movlb	1	; () banked
  5392  001BBA  0101               	movlb	1	; () banked
  5393  001BBC  AF86               	btfss	OpenADC@config2& (0+255),7,b
  5394  001BBE  D003               	goto	l535
  5395                           
  5396                           ; BSR set to: 1
  5397  001BC0  9C9E               	bcf	3998,6,c	;volatile
  5398  001BC2  8C9D               	bsf	3997,6,c	;volatile
  5399  001BC4  8CF2               	bsf	intcon,6,c	;volatile
  5400  001BC6                     l535:
  5401                           
  5402                           ; BSR set to: 1
  5403  001BC6  80C2               	bsf	4034,0,c	;volatile
  5404                           
  5405                           ; BSR set to: 1
  5406  001BC8  0012               	return	
  5407  001BCA                     __end_of_OpenADC:
  5408                           	opt stack 0
  5409                           tblptru	equ	0xFF8
  5410                           tblptrh	equ	0xFF7
  5411                           tblptrl	equ	0xFF6
  5412                           tablat	equ	0xFF5
  5413                           prodh	equ	0xFF4
  5414                           prodl	equ	0xFF3
  5415                           intcon	equ	0xFF2
  5416                           intcon2	equ	0xFF1
  5417                           postinc0	equ	0xFEE
  5418                           wreg	equ	0xFE8
  5419                           indf1	equ	0xFE7
  5420                           postdec1	equ	0xFE5
  5421                           fsr1h	equ	0xFE2
  5422                           fsr1l	equ	0xFE1
  5423                           indf2	equ	0xFDF
  5424                           postinc2	equ	0xFDE
  5425                           postdec2	equ	0xFDD
  5426                           fsr2h	equ	0xFDA
  5427                           fsr2l	equ	0xFD9
  5428                           status	equ	0xFD8
  5429                           
  5430 ;; *************** function _InterruptHandlerLow *****************
  5431 ;; Defined at:
  5432 ;;		line 128 in file "../src/interrupts.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;		None
  5435 ;; Auto vars:     Size  Location     Type
  5436 ;;		None
  5437 ;; Return value:  Size  Location     Type
  5438 ;;		None               void
  5439 ;; Registers used:
  5440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5446 ;;      Params:         0       0       0       0       0
  5447 ;;      Locals:         0       0       0       0       0
  5448 ;;      Temps:         17       0       0       0       0
  5449 ;;      Totals:        17       0       0       0       0
  5450 ;;Total ram usage:       17 bytes
  5451 ;; Hardware stack levels used:    1
  5452 ;; Hardware stack levels required when called:   10
  5453 ;; This function calls:
  5454 ;;		_adc_int_handler
  5455 ;;		_timer1_int_handler
  5456 ;;		_uart_recv_int_handler
  5457 ;;		_uart_trans_int_handler
  5458 ;; This function is called by:
  5459 ;;		Interrupt level 1
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           	psect	intcodelo
  5464  000018                     __pintcodelo:
  5465                           	opt stack 0
  5466  000018                     _InterruptHandlerLow:
  5467                           	opt stack 16
  5468                           
  5469                           ; BSR set to: 1
  5470                           ;incstack = 0
  5471  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  5472  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  5473  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  5474  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  5475  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  5476  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  5477  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  5478  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  5479  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  5480  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  5481  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  5482  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  5483  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  5484  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  5485  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  5486  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  5487  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  5488                           
  5489                           ;interrupts.c: 130: if(PIR1bits.ADIF){
  5490  00005C  AC9E               	btfss	3998,6,c	;volatile
  5491  00005E  D003               	goto	i1l4746
  5492                           
  5493                           ;interrupts.c: 132: PIR1bits.ADIF = 0;
  5494  000060  9C9E               	bcf	3998,6,c	;volatile
  5495                           
  5496                           ;interrupts.c: 133: adc_int_handler();
  5497  000062  EC5B  F011         	call	_adc_int_handler	;wreg free
  5498  000066                     i1l4746:
  5499                           
  5500                           ;interrupts.c: 134: }
  5501                           ;interrupts.c: 137: if (PIR1bits.TMR1IF) {
  5502  000066  A09E               	btfss	3998,0,c	;volatile
  5503  000068  D003               	goto	i1l4752
  5504                           
  5505                           ;interrupts.c: 138: PIR1bits.TMR1IF = 0;
  5506  00006A  909E               	bcf	3998,0,c	;volatile
  5507                           
  5508                           ;interrupts.c: 139: timer1_int_handler();
  5509  00006C  ECEB  F011         	call	_timer1_int_handler	;wreg free
  5510  000070                     i1l4752:
  5511                           
  5512                           ;interrupts.c: 141: }
  5513                           ;interrupts.c: 143: if (PIR1bits.TXIF) {
  5514  000070  B89E               	btfsc	3998,4,c	;volatile
  5515                           
  5516                           ;interrupts.c: 145: uart_trans_int_handler();
  5517  000072  EC3B  F00F         	call	_uart_trans_int_handler	;wreg free
  5518                           
  5519                           ;interrupts.c: 146: }
  5520                           ;interrupts.c: 148: if (PIR1bits.RCIF) {
  5521  000076  AA9E               	btfss	3998,5,c	;volatile
  5522  000078  D003               	goto	i1l63
  5523                           
  5524                           ;interrupts.c: 149: PIR1bits.RCIF = 0;
  5525  00007A  9A9E               	bcf	3998,5,c	;volatile
  5526                           
  5527                           ;interrupts.c: 151: uart_recv_int_handler();
  5528  00007C  EC88  F00A         	call	_uart_recv_int_handler	;wreg free
  5529  000080                     i1l63:
  5530  000080  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5531  000084  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5532  000088  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5533  00008C  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5534  000090  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5535  000094  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5536  000098  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5537  00009C  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5538  0000A0  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5539  0000A4  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5540  0000A8  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5541  0000AC  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5542  0000B0  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5543  0000B4  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5544  0000B8  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5545  0000BC  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5546  0000C0  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5547  0000C4  0010               	retfie	
  5548  0000C6                     __end_of_InterruptHandlerLow:
  5549                           	opt stack 0
  5550                           pclatu	equ	0xFFB
  5551                           pclath	equ	0xFFA
  5552                           tblptru	equ	0xFF8
  5553                           tblptrh	equ	0xFF7
  5554                           tblptrl	equ	0xFF6
  5555                           tablat	equ	0xFF5
  5556                           prodh	equ	0xFF4
  5557                           prodl	equ	0xFF3
  5558                           intcon	equ	0xFF2
  5559                           intcon2	equ	0xFF1
  5560                           postinc0	equ	0xFEE
  5561                           fsr0h	equ	0xFEA
  5562                           fsr0l	equ	0xFE9
  5563                           wreg	equ	0xFE8
  5564                           indf1	equ	0xFE7
  5565                           postdec1	equ	0xFE5
  5566                           fsr1h	equ	0xFE2
  5567                           fsr1l	equ	0xFE1
  5568                           bsr	equ	0xFE0
  5569                           indf2	equ	0xFDF
  5570                           postinc2	equ	0xFDE
  5571                           postdec2	equ	0xFDD
  5572                           fsr2h	equ	0xFDA
  5573                           fsr2l	equ	0xFD9
  5574                           status	equ	0xFD8
  5575                           
  5576 ;; *************** function _uart_trans_int_handler *****************
  5577 ;; Defined at:
  5578 ;;		line 73 in file "../src/my_uart.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;		None
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;		None               void
  5585 ;; Registers used:
  5586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5592 ;;      Params:         0       0       0       0       0
  5593 ;;      Locals:         0       0       0       0       0
  5594 ;;      Temps:          1       0       0       0       0
  5595 ;;      Totals:         1       0       0       0       0
  5596 ;;Total ram usage:        1 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; Hardware stack levels required when called:    6
  5599 ;; This function calls:
  5600 ;;		Nothing
  5601 ;; This function is called by:
  5602 ;;		_InterruptHandlerLow
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           	psect	text32
  5607  001E76                     __ptext32:
  5608                           	opt stack 0
  5609  001E76                     _uart_trans_int_handler:
  5610                           	opt stack 19
  5611                           
  5612                           ;my_uart.c: 75: if(TXSTAbits.TRMT){
  5613                           
  5614                           ;incstack = 0
  5615  001E76  A2AC               	btfss	4012,1,c	;volatile
  5616  001E78  0012               	return	
  5617                           
  5618                           ;my_uart.c: 76: if(uc_ptr->txBufind < uc_ptr->txBuflen){
  5619  001E7A  EE20 F00C          	lfsr	2,12
  5620  001E7E  5056               	movf	_uc_ptr,w,c
  5621  001E80  26D9               	addwf	fsr2l,f,c
  5622  001E82  5057               	movf	_uc_ptr+1,w,c
  5623  001E84  22DA               	addwfc	fsr2h,f,c
  5624  001E86  50DF               	movf	indf2,w,c
  5625  001E88  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5626  001E8A  EE20 F00B          	lfsr	2,11
  5627  001E8E  5056               	movf	_uc_ptr,w,c
  5628  001E90  26D9               	addwf	fsr2l,f,c
  5629  001E92  5057               	movf	_uc_ptr+1,w,c
  5630  001E94  22DA               	addwfc	fsr2h,f,c
  5631  001E96  50DF               	movf	indf2,w,c
  5632  001E98  5C01               	subwf	??_uart_trans_int_handler,w,c
  5633  001E9A  B0D8               	btfsc	status,0,c
  5634  001E9C  D01E               	goto	i1l451
  5635                           
  5636                           ;my_uart.c: 77: TXREG = uc_ptr->txBuff[uc_ptr->txBufind];
  5637  001E9E  EE20 F00C          	lfsr	2,12
  5638  001EA2  5056               	movf	_uc_ptr,w,c
  5639  001EA4  26D9               	addwf	fsr2l,f,c
  5640  001EA6  5057               	movf	_uc_ptr+1,w,c
  5641  001EA8  22DA               	addwfc	fsr2h,f,c
  5642  001EAA  50DF               	movf	indf2,w,c
  5643  001EAC  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5644  001EAE  5001               	movf	??_uart_trans_int_handler,w,c
  5645  001EB0  0D01               	mullw	1
  5646  001EB2  0E06               	movlw	6
  5647  001EB4  26F3               	addwf	prodl,f,c
  5648  001EB6  0E00               	movlw	0
  5649  001EB8  22F4               	addwfc	prodh,f,c
  5650  001EBA  50F3               	movf	prodl,w,c
  5651  001EBC  2456               	addwf	_uc_ptr,w,c
  5652  001EBE  6ED9               	movwf	fsr2l,c
  5653  001EC0  50F4               	movf	prodh,w,c
  5654  001EC2  2057               	addwfc	_uc_ptr+1,w,c
  5655  001EC4  6EDA               	movwf	fsr2h,c
  5656  001EC6  50DF               	movf	indf2,w,c
  5657  001EC8  6EAD               	movwf	4013,c	;volatile
  5658                           
  5659                           ;my_uart.c: 79: uc_ptr->txBufind++;
  5660  001ECA  EE20 F00C          	lfsr	2,12
  5661  001ECE  5056               	movf	_uc_ptr,w,c
  5662  001ED0  26D9               	addwf	fsr2l,f,c
  5663  001ED2  5057               	movf	_uc_ptr+1,w,c
  5664  001ED4  22DA               	addwfc	fsr2h,f,c
  5665  001ED6  2ADF               	incf	indf2,f,c
  5666                           
  5667                           ;my_uart.c: 80: } else
  5668  001ED8  0012               	return	
  5669  001EDA                     i1l451:
  5670                           
  5671                           ;my_uart.c: 81: PIE1bits.TX1IE = 0;
  5672  001EDA  989D               	bcf	3997,4,c	;volatile
  5673  001EDC  0012               	return	
  5674  001EDE                     __end_of_uart_trans_int_handler:
  5675                           	opt stack 0
  5676                           pclatu	equ	0xFFB
  5677                           pclath	equ	0xFFA
  5678                           tblptru	equ	0xFF8
  5679                           tblptrh	equ	0xFF7
  5680                           tblptrl	equ	0xFF6
  5681                           tablat	equ	0xFF5
  5682                           prodh	equ	0xFF4
  5683                           prodl	equ	0xFF3
  5684                           intcon	equ	0xFF2
  5685                           intcon2	equ	0xFF1
  5686                           postinc0	equ	0xFEE
  5687                           fsr0h	equ	0xFEA
  5688                           fsr0l	equ	0xFE9
  5689                           wreg	equ	0xFE8
  5690                           indf1	equ	0xFE7
  5691                           postdec1	equ	0xFE5
  5692                           fsr1h	equ	0xFE2
  5693                           fsr1l	equ	0xFE1
  5694                           bsr	equ	0xFE0
  5695                           indf2	equ	0xFDF
  5696                           postinc2	equ	0xFDE
  5697                           postdec2	equ	0xFDD
  5698                           fsr2h	equ	0xFDA
  5699                           fsr2l	equ	0xFD9
  5700                           status	equ	0xFD8
  5701                           
  5702 ;; *************** function _uart_recv_int_handler *****************
  5703 ;; Defined at:
  5704 ;;		line 11 in file "../src/my_uart.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;		None
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;		None
  5709 ;; Return value:  Size  Location     Type
  5710 ;;		None               void
  5711 ;; Registers used:
  5712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/0
  5715 ;;		On exit  : 0/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5718 ;;      Params:         0       0       0       0       0
  5719 ;;      Locals:         0       0       0       0       0
  5720 ;;      Temps:          1       0       0       0       0
  5721 ;;      Totals:         1       0       0       0       0
  5722 ;;Total ram usage:        1 bytes
  5723 ;; Hardware stack levels used:    1
  5724 ;; Hardware stack levels required when called:    9
  5725 ;; This function calls:
  5726 ;;		_ReadUSART
  5727 ;;		_ToMainLow_sendmsg
  5728 ;; This function is called by:
  5729 ;;		_InterruptHandlerLow
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           	psect	text33
  5734  001510                     __ptext33:
  5735                           	opt stack 0
  5736  001510                     _uart_recv_int_handler:
  5737                           	opt stack 16
  5738                           
  5739                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  5740                           
  5741                           ;incstack = 0
  5742  001510  AA9E               	btfss	3998,5,c	;volatile
  5743  001512  D04E               	goto	i1l4734
  5744                           
  5745                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5746  001514  EE20 F005          	lfsr	2,5
  5747  001518  5056               	movf	_uc_ptr,w,c
  5748  00151A  26D9               	addwf	fsr2l,f,c
  5749  00151C  5057               	movf	_uc_ptr+1,w,c
  5750  00151E  22DA               	addwfc	fsr2h,f,c
  5751  001520  50DF               	movf	indf2,w,c
  5752  001522  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5753  001524  501B               	movf	??_uart_recv_int_handler,w,c
  5754  001526  0D01               	mullw	1
  5755  001528  50F3               	movf	prodl,w,c
  5756  00152A  2456               	addwf	_uc_ptr,w,c
  5757  00152C  6ED9               	movwf	fsr2l,c
  5758  00152E  50F4               	movf	prodh,w,c
  5759  001530  2057               	addwfc	_uc_ptr+1,w,c
  5760  001532  6EDA               	movwf	fsr2h,c
  5761  001534  EC9B  F011         	call	_ReadUSART	;wreg free
  5762  001538  6EDF               	movwf	indf2,c
  5763                           
  5764                           ;my_uart.c: 25: uc_ptr->buflen++;
  5765  00153A  EE20 F005          	lfsr	2,5
  5766  00153E  5056               	movf	_uc_ptr,w,c
  5767  001540  26D9               	addwf	fsr2l,f,c
  5768  001542  5057               	movf	_uc_ptr+1,w,c
  5769  001544  22DA               	addwfc	fsr2h,f,c
  5770  001546  2ADF               	incf	indf2,f,c
  5771                           
  5772                           ;my_uart.c: 26: if(UART_timeout > 200){
  5773  001548  0EC9               	movlw	201
  5774  00154A  5C49               	subwf	_UART_timeout,w,c
  5775  00154C  0E00               	movlw	0
  5776  00154E  584A               	subwfb	_UART_timeout+1,w,c
  5777  001550  A0D8               	btfss	status,0,c
  5778  001552  D00C               	goto	i1l4728
  5779                           
  5780                           ;my_uart.c: 27: uc_ptr->buflen = 1;
  5781  001554  EE20 F005          	lfsr	2,5
  5782  001558  5056               	movf	_uc_ptr,w,c
  5783  00155A  26D9               	addwf	fsr2l,f,c
  5784  00155C  5057               	movf	_uc_ptr+1,w,c
  5785  00155E  22DA               	addwfc	fsr2h,f,c
  5786  001560  0E01               	movlw	1
  5787  001562  6EDF               	movwf	indf2,c
  5788                           
  5789                           ;my_uart.c: 28: UART_timeout = 0;
  5790  001564  0E00               	movlw	0
  5791  001566  6E4A               	movwf	_UART_timeout+1,c
  5792  001568  0E00               	movlw	0
  5793  00156A  6E49               	movwf	_UART_timeout,c
  5794  00156C                     i1l4728:
  5795                           
  5796                           ;my_uart.c: 29: }
  5797                           ;my_uart.c: 32: if (uc_ptr->buflen == 5) {
  5798  00156C  EE20 F005          	lfsr	2,5
  5799  001570  5056               	movf	_uc_ptr,w,c
  5800  001572  26D9               	addwf	fsr2l,f,c
  5801  001574  5057               	movf	_uc_ptr+1,w,c
  5802  001576  22DA               	addwfc	fsr2h,f,c
  5803  001578  0E05               	movlw	5
  5804  00157A  62DF               	cpfseq	indf2,c
  5805  00157C  D019               	goto	i1l4734
  5806                           
  5807                           ;my_uart.c: 33: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5808  00157E  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5809  001580  0E1F               	movlw	31
  5810  001582  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5811  001584  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5812  001586  C057  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5813  00158A  C056  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5814  00158E  EE20 F005          	lfsr	2,5
  5815  001592  5056               	movf	_uc_ptr,w,c
  5816  001594  26D9               	addwf	fsr2l,f,c
  5817  001596  5057               	movf	_uc_ptr+1,w,c
  5818  001598  22DA               	addwfc	fsr2h,f,c
  5819  00159A  50DF               	movf	indf2,w,c
  5820  00159C  EC48  F011         	call	_ToMainLow_sendmsg
  5821                           
  5822                           ;my_uart.c: 34: uc_ptr->buflen = 0;
  5823  0015A0  EE20 F005          	lfsr	2,5
  5824  0015A4  5056               	movf	_uc_ptr,w,c
  5825  0015A6  26D9               	addwf	fsr2l,f,c
  5826  0015A8  5057               	movf	_uc_ptr+1,w,c
  5827  0015AA  22DA               	addwfc	fsr2h,f,c
  5828  0015AC  0E00               	movlw	0
  5829  0015AE  6EDF               	movwf	indf2,c
  5830  0015B0                     i1l4734:
  5831                           
  5832                           ;my_uart.c: 35: }
  5833                           ;my_uart.c: 36: }
  5834                           ;my_uart.c: 43: if (USART_Status.OVERRUN_ERROR == 1) {
  5835  0015B0  A64E               	btfss	_USART_Status,3,c
  5836  0015B2  0012               	return	
  5837                           
  5838                           ;my_uart.c: 48: RCSTAbits.CREN = 0;
  5839  0015B4  98AB               	bcf	4011,4,c	;volatile
  5840                           
  5841                           ;my_uart.c: 49: RCSTAbits.CREN = 1;
  5842  0015B6  88AB               	bsf	4011,4,c	;volatile
  5843                           
  5844                           ;my_uart.c: 50: ToMainLow_sendmsg(0, 30, (void *) 0);
  5845  0015B8  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5846  0015BA  0E1E               	movlw	30
  5847  0015BC  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5848  0015BE  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5849  0015C0  0E00               	movlw	0
  5850  0015C2  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5851  0015C4  0E00               	movlw	0
  5852  0015C6  6E18               	movwf	ToMainLow_sendmsg@data,c
  5853  0015C8  0E00               	movlw	0
  5854  0015CA  EC48  F011         	call	_ToMainLow_sendmsg
  5855  0015CE  0012               	return	
  5856  0015D0                     __end_of_uart_recv_int_handler:
  5857                           	opt stack 0
  5858                           pclatu	equ	0xFFB
  5859                           pclath	equ	0xFFA
  5860                           tblptru	equ	0xFF8
  5861                           tblptrh	equ	0xFF7
  5862                           tblptrl	equ	0xFF6
  5863                           tablat	equ	0xFF5
  5864                           prodh	equ	0xFF4
  5865                           prodl	equ	0xFF3
  5866                           intcon	equ	0xFF2
  5867                           intcon2	equ	0xFF1
  5868                           postinc0	equ	0xFEE
  5869                           fsr0h	equ	0xFEA
  5870                           fsr0l	equ	0xFE9
  5871                           wreg	equ	0xFE8
  5872                           indf1	equ	0xFE7
  5873                           postdec1	equ	0xFE5
  5874                           fsr1h	equ	0xFE2
  5875                           fsr1l	equ	0xFE1
  5876                           bsr	equ	0xFE0
  5877                           indf2	equ	0xFDF
  5878                           postinc2	equ	0xFDE
  5879                           postdec2	equ	0xFDD
  5880                           fsr2h	equ	0xFDA
  5881                           fsr2l	equ	0xFD9
  5882                           status	equ	0xFD8
  5883                           
  5884 ;; *************** function _ToMainLow_sendmsg *****************
  5885 ;; Defined at:
  5886 ;;		line 103 in file "../src/messages.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;  length          1    wreg     unsigned char 
  5889 ;;  msgtype         1   22[COMRAM] unsigned char 
  5890 ;;  data            2   23[COMRAM] PTR void 
  5891 ;;		 -> NULL(0), main@uc(13), 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  length          1   25[COMRAM] unsigned char 
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      char 
  5896 ;; Registers used:
  5897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5903 ;;      Params:         3       0       0       0       0
  5904 ;;      Locals:         1       0       0       0       0
  5905 ;;      Temps:          0       0       0       0       0
  5906 ;;      Totals:         4       0       0       0       0
  5907 ;;Total ram usage:        4 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; Hardware stack levels required when called:    8
  5910 ;; This function calls:
  5911 ;;		i1_send_msg
  5912 ;; This function is called by:
  5913 ;;		_uart_recv_int_handler
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           	psect	text34
  5918  002290                     __ptext34:
  5919                           	opt stack 0
  5920  002290                     _ToMainLow_sendmsg:
  5921                           	opt stack 16
  5922                           
  5923                           ;incstack = 0
  5924                           ;ToMainLow_sendmsg@length stored from wreg
  5925  002290  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5926                           
  5927                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5928                           ;	Return value of _ToMainLow_sendmsg is never used
  5929  002294  0101               	movlb	1	; () banked
  5930  002296  0E01               	movlw	high _ToMainLow_MQ
  5931  002298  6E0C               	movwf	i1send_msg@qptr+1,c
  5932  00229A  0101               	movlb	1	; () banked
  5933  00229C  0E43               	movlw	low _ToMainLow_MQ
  5934  00229E  6E0B               	movwf	i1send_msg@qptr,c
  5935  0022A0  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5936  0022A4  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5937  0022A8  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5938  0022AC  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5939  0022B0  ECE8  F00A         	call	i1_send_msg	;wreg free
  5940  0022B4  0012               	return	
  5941  0022B6                     __end_of_ToMainLow_sendmsg:
  5942                           	opt stack 0
  5943                           pclatu	equ	0xFFB
  5944                           pclath	equ	0xFFA
  5945                           tblptru	equ	0xFF8
  5946                           tblptrh	equ	0xFF7
  5947                           tblptrl	equ	0xFF6
  5948                           tablat	equ	0xFF5
  5949                           prodh	equ	0xFF4
  5950                           prodl	equ	0xFF3
  5951                           intcon	equ	0xFF2
  5952                           intcon2	equ	0xFF1
  5953                           postinc0	equ	0xFEE
  5954                           fsr0h	equ	0xFEA
  5955                           fsr0l	equ	0xFE9
  5956                           wreg	equ	0xFE8
  5957                           indf1	equ	0xFE7
  5958                           postdec1	equ	0xFE5
  5959                           fsr1h	equ	0xFE2
  5960                           fsr1l	equ	0xFE1
  5961                           bsr	equ	0xFE0
  5962                           indf2	equ	0xFDF
  5963                           postinc2	equ	0xFDE
  5964                           postdec2	equ	0xFDD
  5965                           fsr2h	equ	0xFDA
  5966                           fsr2l	equ	0xFD9
  5967                           status	equ	0xFD8
  5968                           
  5969 ;; *************** function i1_send_msg *****************
  5970 ;; Defined at:
  5971 ;;		line 24 in file "../src/messages.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5974 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5975 ;;  length          1   12[COMRAM] unsigned char 
  5976 ;;  msgtype         1   13[COMRAM] unsigned char 
  5977 ;;  data            2   14[COMRAM] PTR void 
  5978 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  5979 ;;		 -> main@uc(13), 
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5982 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  5983 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5984 ;;  send_msg        2   17[COMRAM] unsigned int 
  5985 ;;  send_msg        1   19[COMRAM] unsigned char 
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      char 
  5988 ;; Registers used:
  5989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5995 ;;      Params:         6       0       0       0       0
  5996 ;;      Locals:         5       0       0       0       0
  5997 ;;      Temps:          1       0       0       0       0
  5998 ;;      Totals:        12       0       0       0       0
  5999 ;;Total ram usage:       12 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:    7
  6002 ;; This function calls:
  6003 ;;		i1___awmod
  6004 ;;		i1_memcpy
  6005 ;; This function is called by:
  6006 ;;		_ToMainLow_sendmsg
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           	psect	text35
  6011  0015D0                     __ptext35:
  6012                           	opt stack 0
  6013  0015D0                     i1_send_msg:
  6014                           	opt stack 16
  6015                           
  6016                           ;messages.c: 25: unsigned char slot;
  6017                           ;messages.c: 27: msg *qmsg;
  6018                           ;messages.c: 28: size_t tlength = length;
  6019                           
  6020                           ;incstack = 0
  6021  0015D0  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6022  0015D4  6A13               	clrf	i1send_msg@tlength+1,c
  6023                           
  6024                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6025  0015D6  EE20 F041          	lfsr	2,65
  6026  0015DA  500B               	movf	i1send_msg@qptr,w,c
  6027  0015DC  26D9               	addwf	fsr2l,f,c
  6028  0015DE  500C               	movf	i1send_msg@qptr+1,w,c
  6029  0015E0  22DA               	addwfc	fsr2h,f,c
  6030  0015E2  50DF               	movf	indf2,w,c
  6031  0015E4  6E14               	movwf	i1send_msg@slot,c
  6032                           
  6033                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6034  0015E6  5014               	movf	i1send_msg@slot,w,c
  6035  0015E8  0D0D               	mullw	13
  6036  0015EA  50F3               	movf	prodl,w,c
  6037  0015EC  240B               	addwf	i1send_msg@qptr,w,c
  6038  0015EE  6E15               	movwf	i1send_msg@qmsg,c
  6039  0015F0  50F4               	movf	prodh,w,c
  6040  0015F2  200C               	addwfc	i1send_msg@qptr+1,w,c
  6041  0015F4  6E16               	movwf	i1send_msg@qmsg+1,c
  6042                           
  6043                           ;messages.c: 41: if (qmsg->full != 0) {
  6044  0015F6  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6045  0015FA  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6046  0015FE  50DF               	movf	indf2,w,c
  6047  001600  B4D8               	btfsc	status,2,c
  6048  001602  D002               	goto	i1l4700
  6049                           
  6050                           ;messages.c: 42: return (-1);
  6051  001604  0EFF               	movlw	255
  6052  001606  0012               	return	
  6053  001608                     i1l4700:
  6054                           
  6055                           ;messages.c: 43: }
  6056                           ;messages.c: 46: qmsg->length = length;
  6057  001608  EE20 F001          	lfsr	2,1
  6058  00160C  5015               	movf	i1send_msg@qmsg,w,c
  6059  00160E  26D9               	addwf	fsr2l,f,c
  6060  001610  5016               	movf	i1send_msg@qmsg+1,w,c
  6061  001612  22DA               	addwfc	fsr2h,f,c
  6062  001614  C00D  FFDF         	movff	i1send_msg@length,indf2
  6063                           
  6064                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6065  001618  EE20 F002          	lfsr	2,2
  6066  00161C  5015               	movf	i1send_msg@qmsg,w,c
  6067  00161E  26D9               	addwf	fsr2l,f,c
  6068  001620  5016               	movf	i1send_msg@qmsg+1,w,c
  6069  001622  22DA               	addwfc	fsr2h,f,c
  6070  001624  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6071                           
  6072                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6073  001628  0E03               	movlw	3
  6074  00162A  2415               	addwf	i1send_msg@qmsg,w,c
  6075  00162C  6E01               	movwf	i1memcpy@d1,c
  6076  00162E  0E00               	movlw	0
  6077  001630  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6078  001632  6E02               	movwf	i1memcpy@d1+1,c
  6079  001634  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6080  001638  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6081  00163C  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6082  001640  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6083  001644  EC77  F010         	call	i1_memcpy	;wreg free
  6084                           
  6085                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  6086  001648  EE20 F041          	lfsr	2,65
  6087  00164C  500B               	movf	i1send_msg@qptr,w,c
  6088  00164E  26D9               	addwf	fsr2l,f,c
  6089  001650  500C               	movf	i1send_msg@qptr+1,w,c
  6090  001652  22DA               	addwfc	fsr2h,f,c
  6091  001654  EE10 F041          	lfsr	1,65
  6092  001658  500B               	movf	i1send_msg@qptr,w,c
  6093  00165A  26E1               	addwf	fsr1l,f,c
  6094  00165C  500C               	movf	i1send_msg@qptr+1,w,c
  6095  00165E  22E2               	addwfc	fsr1h,f,c
  6096  001660  50E7               	movf	indf1,w,c
  6097  001662  6E11               	movwf	??i1_send_msg& (0+255),c
  6098  001664  0E01               	movlw	1
  6099  001666  2411               	addwf	??i1_send_msg,w,c
  6100  001668  6E01               	movwf	i1___awmod@dividend,c
  6101  00166A  6A02               	clrf	i1___awmod@dividend+1,c
  6102  00166C  0E00               	movlw	0
  6103  00166E  2202               	addwfc	i1___awmod@dividend+1,f,c
  6104  001670  0E00               	movlw	0
  6105  001672  6E04               	movwf	i1___awmod@divisor+1,c
  6106  001674  0E05               	movlw	5
  6107  001676  6E03               	movwf	i1___awmod@divisor,c
  6108  001678  ECFC  F00B         	call	i1___awmod	;wreg free
  6109  00167C  5001               	movf	?i1___awmod,w,c
  6110  00167E  6EDF               	movwf	indf2,c
  6111                           
  6112                           ;messages.c: 59: qmsg->full = 1;
  6113  001680  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6114  001684  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6115  001688  0E01               	movlw	1
  6116  00168A  6EDF               	movwf	indf2,c
  6117                           
  6118                           ;messages.c: 60: return (1);
  6119  00168C  0E01               	movlw	1
  6120  00168E  0012               	return	
  6121  001690                     __end_ofi1_send_msg:
  6122                           	opt stack 0
  6123                           pclatu	equ	0xFFB
  6124                           pclath	equ	0xFFA
  6125                           tblptru	equ	0xFF8
  6126                           tblptrh	equ	0xFF7
  6127                           tblptrl	equ	0xFF6
  6128                           tablat	equ	0xFF5
  6129                           prodh	equ	0xFF4
  6130                           prodl	equ	0xFF3
  6131                           intcon	equ	0xFF2
  6132                           intcon2	equ	0xFF1
  6133                           postinc0	equ	0xFEE
  6134                           fsr0h	equ	0xFEA
  6135                           fsr0l	equ	0xFE9
  6136                           wreg	equ	0xFE8
  6137                           indf1	equ	0xFE7
  6138                           postdec1	equ	0xFE5
  6139                           fsr1h	equ	0xFE2
  6140                           fsr1l	equ	0xFE1
  6141                           bsr	equ	0xFE0
  6142                           indf2	equ	0xFDF
  6143                           postinc2	equ	0xFDE
  6144                           postdec2	equ	0xFDD
  6145                           fsr2h	equ	0xFDA
  6146                           fsr2l	equ	0xFD9
  6147                           status	equ	0xFD8
  6148                           
  6149 ;; *************** function i1_memcpy *****************
  6150 ;; Defined at:
  6151 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;  d1              2    0[COMRAM] PTR void 
  6154 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6155 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6156 ;;		 -> main@msgbuffer(11), 
  6157 ;;  s1              2    2[COMRAM] PTR const void 
  6158 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6159 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6160 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6161 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6162 ;;		 -> main@uc(13), 
  6163 ;;  n               2    4[COMRAM] unsigned int 
  6164 ;; Auto vars:     Size  Location     Type
  6165 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6166 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6167 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6168 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6169 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6170 ;;		 -> main@uc(13), 
  6171 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6172 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6173 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6174 ;;		 -> main@msgbuffer(11), 
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  2    0[COMRAM] PTR void 
  6177 ;; Registers used:
  6178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6184 ;;      Params:         6       0       0       0       0
  6185 ;;      Locals:         4       0       0       0       0
  6186 ;;      Temps:          0       0       0       0       0
  6187 ;;      Totals:        10       0       0       0       0
  6188 ;;Total ram usage:       10 bytes
  6189 ;; Hardware stack levels used:    1
  6190 ;; Hardware stack levels required when called:    6
  6191 ;; This function calls:
  6192 ;;		Nothing
  6193 ;; This function is called by:
  6194 ;;		i1_send_msg
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           	psect	text36
  6199  0020EE                     __ptext36:
  6200                           	opt stack 0
  6201  0020EE                     i1_memcpy:
  6202                           	opt stack 16
  6203                           
  6204                           ;incstack = 0
  6205  0020EE  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6206  0020F2  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6207  0020F6  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6208  0020FA  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6209  0020FE  D00E               	goto	i1l3566
  6210  002100                     i1l3560:
  6211  002100  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6212  002104  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6213  002108  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6214  00210C  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6215  002110  CFDF FFE7          	movff	indf2,indf1
  6216  002114  4A09               	infsnz	i1memcpy@s,f,c
  6217  002116  2A0A               	incf	i1memcpy@s+1,f,c
  6218  002118  4A07               	infsnz	i1memcpy@d,f,c
  6219  00211A  2A08               	incf	i1memcpy@d+1,f,c
  6220  00211C                     i1l3566:
  6221  00211C  0605               	decf	i1memcpy@n,f,c
  6222  00211E  A0D8               	btfss	status,0,c
  6223  002120  0606               	decf	i1memcpy@n+1,f,c
  6224  002122  2805               	incf	i1memcpy@n& (0+255),w,c
  6225  002124  B4D8               	btfsc	status,2,c
  6226  002126  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6227  002128  B4D8               	btfsc	status,2,c
  6228                           
  6229                           ;	Return value of i1_memcpy is never used
  6230  00212A  0012               	return	
  6231  00212C  D7E9               	goto	i1l3560
  6232  00212E                     __end_ofi1_memcpy:
  6233                           	opt stack 0
  6234                           pclatu	equ	0xFFB
  6235                           pclath	equ	0xFFA
  6236                           tblptru	equ	0xFF8
  6237                           tblptrh	equ	0xFF7
  6238                           tblptrl	equ	0xFF6
  6239                           tablat	equ	0xFF5
  6240                           prodh	equ	0xFF4
  6241                           prodl	equ	0xFF3
  6242                           intcon	equ	0xFF2
  6243                           intcon2	equ	0xFF1
  6244                           postinc0	equ	0xFEE
  6245                           fsr0h	equ	0xFEA
  6246                           fsr0l	equ	0xFE9
  6247                           wreg	equ	0xFE8
  6248                           indf1	equ	0xFE7
  6249                           postdec1	equ	0xFE5
  6250                           fsr1h	equ	0xFE2
  6251                           fsr1l	equ	0xFE1
  6252                           bsr	equ	0xFE0
  6253                           indf2	equ	0xFDF
  6254                           postinc2	equ	0xFDE
  6255                           postdec2	equ	0xFDD
  6256                           fsr2h	equ	0xFDA
  6257                           fsr2l	equ	0xFD9
  6258                           status	equ	0xFD8
  6259                           
  6260 ;; *************** function i1___awmod *****************
  6261 ;; Defined at:
  6262 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;  dividend        2    0[COMRAM] int 
  6265 ;;  divisor         2    2[COMRAM] int 
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;  __awmod         1    6[COMRAM] unsigned char 
  6268 ;;  __awmod         1    5[COMRAM] unsigned char 
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  2    0[COMRAM] int 
  6271 ;; Registers used:
  6272 ;;		wreg, status,2, status,0, prodl
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6278 ;;      Params:         4       0       0       0       0
  6279 ;;      Locals:         2       0       0       0       0
  6280 ;;      Temps:          1       0       0       0       0
  6281 ;;      Totals:         7       0       0       0       0
  6282 ;;Total ram usage:        7 bytes
  6283 ;; Hardware stack levels used:    1
  6284 ;; Hardware stack levels required when called:    6
  6285 ;; This function calls:
  6286 ;;		Nothing
  6287 ;; This function is called by:
  6288 ;;		i1_send_msg
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           	psect	text37
  6293  0017F8                     __ptext37:
  6294                           	opt stack 0
  6295  0017F8                     i1___awmod:
  6296                           	opt stack 16
  6297                           
  6298                           ;incstack = 0
  6299  0017F8  6E05               	movwf	??i1___awmod& (0+255),c
  6300  0017FA  0E00               	movlw	0
  6301  0017FC  6E07               	movwf	i1___awmod@sign,c
  6302  0017FE  5005               	movf	??i1___awmod& (0+255),w,c
  6303  001800  5002               	movf	i1___awmod@dividend+1,w,c
  6304  001802  0A80               	xorlw	128
  6305  001804  6EF3               	movwf	prodl,c
  6306  001806  0E80               	movlw	128
  6307  001808  5CF3               	subwf	prodl,w,c
  6308  00180A  0E00               	movlw	0
  6309  00180C  B4D8               	btfsc	status,2,c
  6310  00180E  5C01               	subwf	i1___awmod@dividend,w,c
  6311  001810  B0D8               	btfsc	status,0,c
  6312  001812  D008               	goto	i1l3586
  6313  001814  6C01               	negf	i1___awmod@dividend,c
  6314  001816  1E02               	comf	i1___awmod@dividend+1,f,c
  6315  001818  B0D8               	btfsc	status,0,c
  6316  00181A  2A02               	incf	i1___awmod@dividend+1,f,c
  6317  00181C  6E05               	movwf	??i1___awmod& (0+255),c
  6318  00181E  0E01               	movlw	1
  6319  001820  6E07               	movwf	i1___awmod@sign,c
  6320  001822  5005               	movf	??i1___awmod& (0+255),w,c
  6321  001824                     i1l3586:
  6322  001824  5004               	movf	i1___awmod@divisor+1,w,c
  6323  001826  0A80               	xorlw	128
  6324  001828  6EF3               	movwf	prodl,c
  6325  00182A  0E80               	movlw	128
  6326  00182C  5CF3               	subwf	prodl,w,c
  6327  00182E  0E00               	movlw	0
  6328  001830  B4D8               	btfsc	status,2,c
  6329  001832  5C03               	subwf	i1___awmod@divisor,w,c
  6330  001834  B0D8               	btfsc	status,0,c
  6331  001836  D004               	goto	i1l3590
  6332  001838  6C03               	negf	i1___awmod@divisor,c
  6333  00183A  1E04               	comf	i1___awmod@divisor+1,f,c
  6334  00183C  B0D8               	btfsc	status,0,c
  6335  00183E  2A04               	incf	i1___awmod@divisor+1,f,c
  6336  001840                     i1l3590:
  6337  001840  5004               	movf	i1___awmod@divisor+1,w,c
  6338  001842  1003               	iorwf	i1___awmod@divisor,w,c
  6339  001844  B4D8               	btfsc	status,2,c
  6340  001846  D01A               	goto	i1l3606
  6341  001848  6E05               	movwf	??i1___awmod& (0+255),c
  6342  00184A  0E01               	movlw	1
  6343  00184C  6E06               	movwf	i1___awmod@counter,c
  6344  00184E  5005               	movf	??i1___awmod& (0+255),w,c
  6345  001850  D004               	goto	i1l3596
  6346  001852                     i1l3594:
  6347  001852  90D8               	bcf	status,0,c
  6348  001854  3603               	rlcf	i1___awmod@divisor,f,c
  6349  001856  3604               	rlcf	i1___awmod@divisor+1,f,c
  6350  001858  2A06               	incf	i1___awmod@counter,f,c
  6351  00185A                     i1l3596:
  6352  00185A  AE04               	btfss	i1___awmod@divisor+1,7,c
  6353  00185C  D7FA               	goto	i1l3594
  6354  00185E                     i1l3598:
  6355  00185E  5003               	movf	i1___awmod@divisor,w,c
  6356  001860  5C01               	subwf	i1___awmod@dividend,w,c
  6357  001862  5004               	movf	i1___awmod@divisor+1,w,c
  6358  001864  5802               	subwfb	i1___awmod@dividend+1,w,c
  6359  001866  A0D8               	btfss	status,0,c
  6360  001868  D004               	goto	i1l3602
  6361  00186A  5003               	movf	i1___awmod@divisor,w,c
  6362  00186C  5E01               	subwf	i1___awmod@dividend,f,c
  6363  00186E  5004               	movf	i1___awmod@divisor+1,w,c
  6364  001870  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6365  001872                     i1l3602:
  6366  001872  90D8               	bcf	status,0,c
  6367  001874  3204               	rrcf	i1___awmod@divisor+1,f,c
  6368  001876  3203               	rrcf	i1___awmod@divisor,f,c
  6369  001878  2E06               	decfsz	i1___awmod@counter,f,c
  6370  00187A  D7F1               	goto	i1l3598
  6371  00187C                     i1l3606:
  6372  00187C  5007               	movf	i1___awmod@sign,w,c
  6373  00187E  B4D8               	btfsc	status,2,c
  6374  001880  D004               	goto	i1l3610
  6375  001882  6C01               	negf	i1___awmod@dividend,c
  6376  001884  1E02               	comf	i1___awmod@dividend+1,f,c
  6377  001886  B0D8               	btfsc	status,0,c
  6378  001888  2A02               	incf	i1___awmod@dividend+1,f,c
  6379  00188A                     i1l3610:
  6380  00188A  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6381  00188E  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6382  001892  0012               	return	
  6383  001894                     __end_ofi1___awmod:
  6384                           	opt stack 0
  6385                           pclatu	equ	0xFFB
  6386                           pclath	equ	0xFFA
  6387                           tblptru	equ	0xFF8
  6388                           tblptrh	equ	0xFF7
  6389                           tblptrl	equ	0xFF6
  6390                           tablat	equ	0xFF5
  6391                           prodh	equ	0xFF4
  6392                           prodl	equ	0xFF3
  6393                           intcon	equ	0xFF2
  6394                           intcon2	equ	0xFF1
  6395                           postinc0	equ	0xFEE
  6396                           fsr0h	equ	0xFEA
  6397                           fsr0l	equ	0xFE9
  6398                           wreg	equ	0xFE8
  6399                           indf1	equ	0xFE7
  6400                           postdec1	equ	0xFE5
  6401                           fsr1h	equ	0xFE2
  6402                           fsr1l	equ	0xFE1
  6403                           bsr	equ	0xFE0
  6404                           indf2	equ	0xFDF
  6405                           postinc2	equ	0xFDE
  6406                           postdec2	equ	0xFDD
  6407                           fsr2h	equ	0xFDA
  6408                           fsr2l	equ	0xFD9
  6409                           status	equ	0xFD8
  6410                           
  6411 ;; *************** function _ReadUSART *****************
  6412 ;; Defined at:
  6413 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;		None
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;  data            1    0[COMRAM] unsigned char 
  6418 ;; Return value:  Size  Location     Type
  6419 ;;                  1    wreg      unsigned char 
  6420 ;; Registers used:
  6421 ;;		wreg, status,2, status,0
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6427 ;;      Params:         0       0       0       0       0
  6428 ;;      Locals:         1       0       0       0       0
  6429 ;;      Temps:          0       0       0       0       0
  6430 ;;      Totals:         1       0       0       0       0
  6431 ;;Total ram usage:        1 bytes
  6432 ;; Hardware stack levels used:    1
  6433 ;; Hardware stack levels required when called:    6
  6434 ;; This function calls:
  6435 ;;		Nothing
  6436 ;; This function is called by:
  6437 ;;		_uart_recv_int_handler
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           	psect	text38
  6442  002336                     __ptext38:
  6443                           	opt stack 0
  6444  002336                     _ReadUSART:
  6445                           	opt stack 18
  6446                           
  6447                           ;incstack = 0
  6448  002336  0EF2               	movlw	242
  6449  002338  164E               	andwf	_USART_Status,f,c
  6450  00233A  ACAB               	btfss	4011,6,c	;volatile
  6451  00233C  D003               	goto	i1l633
  6452  00233E  904E               	bcf	_USART_Status,0,c
  6453  002340  B0AB               	btfsc	4011,0,c	;volatile
  6454  002342  804E               	bsf	_USART_Status,0,c
  6455  002344                     i1l633:
  6456  002344  B4AB               	btfsc	4011,2,c	;volatile
  6457  002346  844E               	bsf	_USART_Status,2,c
  6458  002348  B2AB               	btfsc	4011,1,c	;volatile
  6459  00234A  864E               	bsf	_USART_Status,3,c
  6460  00234C  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6461  002350  5001               	movf	ReadUSART@data,w,c
  6462  002352  0012               	return	
  6463  002354                     __end_of_ReadUSART:
  6464                           	opt stack 0
  6465                           pclatu	equ	0xFFB
  6466                           pclath	equ	0xFFA
  6467                           tblptru	equ	0xFF8
  6468                           tblptrh	equ	0xFF7
  6469                           tblptrl	equ	0xFF6
  6470                           tablat	equ	0xFF5
  6471                           prodh	equ	0xFF4
  6472                           prodl	equ	0xFF3
  6473                           intcon	equ	0xFF2
  6474                           intcon2	equ	0xFF1
  6475                           postinc0	equ	0xFEE
  6476                           fsr0h	equ	0xFEA
  6477                           fsr0l	equ	0xFE9
  6478                           wreg	equ	0xFE8
  6479                           indf1	equ	0xFE7
  6480                           postdec1	equ	0xFE5
  6481                           fsr1h	equ	0xFE2
  6482                           fsr1l	equ	0xFE1
  6483                           bsr	equ	0xFE0
  6484                           indf2	equ	0xFDF
  6485                           postinc2	equ	0xFDE
  6486                           postdec2	equ	0xFDD
  6487                           fsr2h	equ	0xFDA
  6488                           fsr2l	equ	0xFD9
  6489                           status	equ	0xFD8
  6490                           
  6491 ;; *************** function _timer1_int_handler *****************
  6492 ;; Defined at:
  6493 ;;		line 61 in file "../src/user_interrupts.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;		None
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;		None
  6498 ;; Return value:  Size  Location     Type
  6499 ;;		None               void
  6500 ;; Registers used:
  6501 ;;		wreg, status,2, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6507 ;;      Params:         0       0       0       0       0
  6508 ;;      Locals:         0       0       0       0       0
  6509 ;;      Temps:          0       0       0       0       0
  6510 ;;      Totals:         0       0       0       0       0
  6511 ;;Total ram usage:        0 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:    7
  6514 ;; This function calls:
  6515 ;;		_WriteTimer1
  6516 ;; This function is called by:
  6517 ;;		_InterruptHandlerLow
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text39
  6522  0023D6                     __ptext39:
  6523                           	opt stack 0
  6524  0023D6                     _timer1_int_handler:
  6525                           	opt stack 18
  6526                           
  6527                           ;user_interrupts.c: 73: WriteTimer1(0);
  6528                           
  6529                           ;incstack = 0
  6530  0023D6  0E00               	movlw	0
  6531  0023D8  6E02               	movwf	WriteTimer1@timer1+1,c
  6532  0023DA  0E00               	movlw	0
  6533  0023DC  6E01               	movwf	WriteTimer1@timer1,c
  6534  0023DE  ECD0  F011         	call	_WriteTimer1	;wreg free
  6535  0023E2  0012               	return	
  6536  0023E4                     __end_of_timer1_int_handler:
  6537                           	opt stack 0
  6538                           pclatu	equ	0xFFB
  6539                           pclath	equ	0xFFA
  6540                           tblptru	equ	0xFF8
  6541                           tblptrh	equ	0xFF7
  6542                           tblptrl	equ	0xFF6
  6543                           tablat	equ	0xFF5
  6544                           prodh	equ	0xFF4
  6545                           prodl	equ	0xFF3
  6546                           intcon	equ	0xFF2
  6547                           intcon2	equ	0xFF1
  6548                           postinc0	equ	0xFEE
  6549                           fsr0h	equ	0xFEA
  6550                           fsr0l	equ	0xFE9
  6551                           wreg	equ	0xFE8
  6552                           indf1	equ	0xFE7
  6553                           postdec1	equ	0xFE5
  6554                           fsr1h	equ	0xFE2
  6555                           fsr1l	equ	0xFE1
  6556                           bsr	equ	0xFE0
  6557                           indf2	equ	0xFDF
  6558                           postinc2	equ	0xFDE
  6559                           postdec2	equ	0xFDD
  6560                           fsr2h	equ	0xFDA
  6561                           fsr2l	equ	0xFD9
  6562                           status	equ	0xFD8
  6563                           
  6564 ;; *************** function _WriteTimer1 *****************
  6565 ;; Defined at:
  6566 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  timer1          2    0[COMRAM] unsigned int 
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;  timer           2    2[COMRAM] struct Timers
  6571 ;; Return value:  Size  Location     Type
  6572 ;;		None               void
  6573 ;; Registers used:
  6574 ;;		None
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6580 ;;      Params:         2       0       0       0       0
  6581 ;;      Locals:         2       0       0       0       0
  6582 ;;      Temps:          0       0       0       0       0
  6583 ;;      Totals:         4       0       0       0       0
  6584 ;;Total ram usage:        4 bytes
  6585 ;; Hardware stack levels used:    1
  6586 ;; Hardware stack levels required when called:    6
  6587 ;; This function calls:
  6588 ;;		Nothing
  6589 ;; This function is called by:
  6590 ;;		_timer1_int_handler
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           	psect	text40
  6595  0023A0                     __ptext40:
  6596                           	opt stack 0
  6597  0023A0                     _WriteTimer1:
  6598                           	opt stack 18
  6599                           
  6600                           ;incstack = 0
  6601  0023A0  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6602  0023A4  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6603  0023A8  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6604  0023AC  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6605  0023B0  0012               	return	
  6606  0023B2                     __end_of_WriteTimer1:
  6607                           	opt stack 0
  6608                           pclatu	equ	0xFFB
  6609                           pclath	equ	0xFFA
  6610                           tblptru	equ	0xFF8
  6611                           tblptrh	equ	0xFF7
  6612                           tblptrl	equ	0xFF6
  6613                           tablat	equ	0xFF5
  6614                           prodh	equ	0xFF4
  6615                           prodl	equ	0xFF3
  6616                           intcon	equ	0xFF2
  6617                           intcon2	equ	0xFF1
  6618                           postinc0	equ	0xFEE
  6619                           fsr0h	equ	0xFEA
  6620                           fsr0l	equ	0xFE9
  6621                           wreg	equ	0xFE8
  6622                           indf1	equ	0xFE7
  6623                           postdec1	equ	0xFE5
  6624                           fsr1h	equ	0xFE2
  6625                           fsr1l	equ	0xFE1
  6626                           bsr	equ	0xFE0
  6627                           indf2	equ	0xFDF
  6628                           postinc2	equ	0xFDE
  6629                           postdec2	equ	0xFDD
  6630                           fsr2h	equ	0xFDA
  6631                           fsr2l	equ	0xFD9
  6632                           status	equ	0xFD8
  6633                           
  6634 ;; *************** function _adc_int_handler *****************
  6635 ;; Defined at:
  6636 ;;		line 76 in file "../src/user_interrupts.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;		None
  6639 ;; Auto vars:     Size  Location     Type
  6640 ;;		None
  6641 ;; Return value:  Size  Location     Type
  6642 ;;		None               void
  6643 ;; Registers used:
  6644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6650 ;;      Params:         0       0       0       0       0
  6651 ;;      Locals:         0       0       0       0       0
  6652 ;;      Temps:          0       0       0       0       0
  6653 ;;      Totals:         0       0       0       0       0
  6654 ;;Total ram usage:        0 bytes
  6655 ;; Hardware stack levels used:    1
  6656 ;; Hardware stack levels required when called:    6
  6657 ;; This function calls:
  6658 ;;		Nothing
  6659 ;; This function is called by:
  6660 ;;		_InterruptHandlerLow
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           	psect	text41
  6665  0022B6                     __ptext41:
  6666                           	opt stack 0
  6667  0022B6                     _adc_int_handler:
  6668                           	opt stack 19
  6669                           
  6670                           ;user_interrupts.c: 78: if(adcbuffer[0] < 27)
  6671                           
  6672                           ;incstack = 0
  6673  0022B6  0E1B               	movlw	27
  6674  0022B8  5C2D               	subwf	_adcbuffer,w,c
  6675  0022BA  B0D8               	btfsc	status,0,c
  6676  0022BC  D002               	goto	i1l1412
  6677                           
  6678                           ;user_interrupts.c: 79: adcbuffer[0] = adcbuffer[0] + 1;
  6679  0022BE  282D               	incf	_adcbuffer,w,c
  6680  0022C0  6E2D               	movwf	_adcbuffer,c
  6681  0022C2                     i1l1412:
  6682                           
  6683                           ;user_interrupts.c: 86: adcbuffer[adcbuffer[0]] = ADRESH;
  6684  0022C2  502D               	movf	_adcbuffer,w,c
  6685  0022C4  0D01               	mullw	1
  6686  0022C6  0E2D               	movlw	low _adcbuffer
  6687  0022C8  24F3               	addwf	prodl,w,c
  6688  0022CA  6ED9               	movwf	fsr2l,c
  6689  0022CC  0E00               	movlw	high _adcbuffer
  6690  0022CE  20F4               	addwfc	prodh,w,c
  6691  0022D0  6EDA               	movwf	fsr2h,c
  6692  0022D2  CFC4 FFDF          	movff	4036,indf2	;volatile
  6693  0022D6  0012               	return	
  6694  0022D8                     __end_of_adc_int_handler:
  6695                           	opt stack 0
  6696                           pclatu	equ	0xFFB
  6697                           pclath	equ	0xFFA
  6698                           tblptru	equ	0xFF8
  6699                           tblptrh	equ	0xFF7
  6700                           tblptrl	equ	0xFF6
  6701                           tablat	equ	0xFF5
  6702                           prodh	equ	0xFF4
  6703                           prodl	equ	0xFF3
  6704                           intcon	equ	0xFF2
  6705                           intcon2	equ	0xFF1
  6706                           postinc0	equ	0xFEE
  6707                           fsr0h	equ	0xFEA
  6708                           fsr0l	equ	0xFE9
  6709                           wreg	equ	0xFE8
  6710                           indf1	equ	0xFE7
  6711                           postdec1	equ	0xFE5
  6712                           fsr1h	equ	0xFE2
  6713                           fsr1l	equ	0xFE1
  6714                           bsr	equ	0xFE0
  6715                           indf2	equ	0xFDF
  6716                           postinc2	equ	0xFDE
  6717                           postdec2	equ	0xFDD
  6718                           fsr2h	equ	0xFDA
  6719                           fsr2l	equ	0xFD9
  6720                           status	equ	0xFD8
  6721                           
  6722 ;; *************** function _InterruptHandlerHigh *****************
  6723 ;; Defined at:
  6724 ;;		line 84 in file "../src/interrupts.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;		None
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;		None
  6729 ;; Return value:  Size  Location     Type
  6730 ;;		None               void
  6731 ;; Registers used:
  6732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6738 ;;      Params:         0       0       0       0       0
  6739 ;;      Locals:         0       0       0       0       0
  6740 ;;      Temps:          0      14       0       0       0
  6741 ;;      Totals:         0      14       0       0       0
  6742 ;;Total ram usage:       14 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:    5
  6745 ;; This function calls:
  6746 ;;		_SleepIfOkay
  6747 ;;		_i2c_int_handler
  6748 ;;		_timer0_int_handler
  6749 ;; This function is called by:
  6750 ;;		Interrupt level 2
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754                           	psect	intcode
  6755  000008                     __pintcode:
  6756                           	opt stack 0
  6757  000008                     _InterruptHandlerHigh:
  6758                           	opt stack 16
  6759                           
  6760                           ;incstack = 0
  6761  000008  CFFA F0AE          	movff	pclath,??_InterruptHandlerHigh
  6762  00000C  CFFB F0AF          	movff	pclatu,??_InterruptHandlerHigh+1
  6763  000010  EF60  F00D         	goto	int_func
  6764                           pclatu	equ	0xFFB
  6765                           pclath	equ	0xFFA
  6766                           tblptru	equ	0xFF8
  6767                           tblptrh	equ	0xFF7
  6768                           tblptrl	equ	0xFF6
  6769                           tablat	equ	0xFF5
  6770                           prodh	equ	0xFF4
  6771                           prodl	equ	0xFF3
  6772                           intcon	equ	0xFF2
  6773                           intcon2	equ	0xFF1
  6774                           postinc0	equ	0xFEE
  6775                           fsr0h	equ	0xFEA
  6776                           fsr0l	equ	0xFE9
  6777                           wreg	equ	0xFE8
  6778                           indf1	equ	0xFE7
  6779                           postdec1	equ	0xFE5
  6780                           fsr1h	equ	0xFE2
  6781                           fsr1l	equ	0xFE1
  6782                           bsr	equ	0xFE0
  6783                           indf2	equ	0xFDF
  6784                           postinc2	equ	0xFDE
  6785                           postdec2	equ	0xFDD
  6786                           fsr2h	equ	0xFDA
  6787                           fsr2l	equ	0xFD9
  6788                           status	equ	0xFD8
  6789                           
  6790                           	psect	intcode_body
  6791  001AC0                     __pintcode_body:
  6792                           	opt stack 16
  6793  001AC0                     int_func:
  6794                           	opt stack 16
  6795  001AC0  CFE9 F0B0          	movff	fsr0l,??_InterruptHandlerHigh+2
  6796  001AC4  CFEA F0B1          	movff	fsr0h,??_InterruptHandlerHigh+3
  6797  001AC8  CFE1 F0B2          	movff	fsr1l,??_InterruptHandlerHigh+4
  6798  001ACC  CFE2 F0B3          	movff	fsr1h,??_InterruptHandlerHigh+5
  6799  001AD0  CFD9 F0B4          	movff	fsr2l,??_InterruptHandlerHigh+6
  6800  001AD4  CFDA F0B5          	movff	fsr2h,??_InterruptHandlerHigh+7
  6801  001AD8  CFF3 F0B6          	movff	prodl,??_InterruptHandlerHigh+8
  6802  001ADC  CFF4 F0B7          	movff	prodh,??_InterruptHandlerHigh+9
  6803  001AE0  CFF6 F0B8          	movff	tblptrl,??_InterruptHandlerHigh+10
  6804  001AE4  CFF7 F0B9          	movff	tblptrh,??_InterruptHandlerHigh+11
  6805  001AE8  CFF8 F0BA          	movff	tblptru,??_InterruptHandlerHigh+12
  6806  001AEC  CFF5 F0BB          	movff	tablat,??_InterruptHandlerHigh+13
  6807                           
  6808                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  6809  001AF0  A69E               	btfss	3998,3,c	;volatile
  6810  001AF2  D003               	goto	i2l3780
  6811                           
  6812                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  6813  001AF4  969E               	bcf	3998,3,c	;volatile
  6814                           
  6815                           ;interrupts.c: 94: i2c_int_handler();
  6816  001AF6  ECFA  F011         	call	_i2c_int_handler	;wreg free
  6817  001AFA                     i2l3780:
  6818                           
  6819                           ;interrupts.c: 96: }
  6820                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  6821  001AFA  A4F2               	btfss	intcon,2,c	;volatile
  6822  001AFC  D005               	goto	i2l3788
  6823                           
  6824                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  6825  001AFE  94F2               	bcf	intcon,2,c	;volatile
  6826                           
  6827                           ;interrupts.c: 103: PORTAbits.AN0 = 1;
  6828  001B00  8080               	bsf	3968,0,c	;volatile
  6829                           
  6830                           ;interrupts.c: 104: timer0_int_handler();
  6831  001B02  ECD8  F00C         	call	_timer0_int_handler	;wreg free
  6832                           
  6833                           ;interrupts.c: 105: PORTAbits.AN0 = 0;
  6834  001B06  9080               	bcf	3968,0,c	;volatile
  6835  001B08                     i2l3788:
  6836                           
  6837                           ;interrupts.c: 106: }
  6838                           ;interrupts.c: 115: SleepIfOkay();
  6839  001B08  EC06  F00F         	call	_SleepIfOkay	;wreg free
  6840  001B0C  C0BB  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6841  001B10  C0BA  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6842  001B14  C0B9  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6843  001B18  C0B8  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6844  001B1C  C0B7  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6845  001B20  C0B6  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6846  001B24  C0B5  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6847  001B28  C0B4  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6848  001B2C  C0B3  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6849  001B30  C0B2  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6850  001B34  C0B1  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6851  001B38  C0B0  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6852  001B3C  C0AF  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6853  001B40  C0AE  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6854  001B44  0011               	retfie		f
  6855  001B46                     __end_of_InterruptHandlerHigh:
  6856                           	opt stack 0
  6857                           pclatu	equ	0xFFB
  6858                           pclath	equ	0xFFA
  6859                           tblptru	equ	0xFF8
  6860                           tblptrh	equ	0xFF7
  6861                           tblptrl	equ	0xFF6
  6862                           tablat	equ	0xFF5
  6863                           prodh	equ	0xFF4
  6864                           prodl	equ	0xFF3
  6865                           intcon	equ	0xFF2
  6866                           intcon2	equ	0xFF1
  6867                           postinc0	equ	0xFEE
  6868                           fsr0h	equ	0xFEA
  6869                           fsr0l	equ	0xFE9
  6870                           wreg	equ	0xFE8
  6871                           indf1	equ	0xFE7
  6872                           postdec1	equ	0xFE5
  6873                           fsr1h	equ	0xFE2
  6874                           fsr1l	equ	0xFE1
  6875                           bsr	equ	0xFE0
  6876                           indf2	equ	0xFDF
  6877                           postinc2	equ	0xFDE
  6878                           postdec2	equ	0xFDD
  6879                           fsr2h	equ	0xFDA
  6880                           fsr2l	equ	0xFD9
  6881                           status	equ	0xFD8
  6882                           
  6883 ;; *************** function _timer0_int_handler *****************
  6884 ;; Defined at:
  6885 ;;		line 17 in file "../src/user_interrupts.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;		None
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;  motormsg        5    9[BANK0 ] unsigned char [5]
  6890 ;;  motorcomm       2   14[BANK0 ] unsigned char [2]
  6891 ;; Return value:  Size  Location     Type
  6892 ;;		None               void
  6893 ;; Registers used:
  6894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6895 ;; Tracked objects:
  6896 ;;		On entry : 0/0
  6897 ;;		On exit  : 0/0
  6898 ;;		Unchanged: 0/0
  6899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6900 ;;      Params:         0       0       0       0       0
  6901 ;;      Locals:         0       7       0       0       0
  6902 ;;      Temps:          0       1       0       0       0
  6903 ;;      Totals:         0       8       0       0       0
  6904 ;;Total ram usage:        8 bytes
  6905 ;; Hardware stack levels used:    1
  6906 ;; Hardware stack levels required when called:    2
  6907 ;; This function calls:
  6908 ;;		_WriteTimer0
  6909 ;;		_motorMove
  6910 ;;		_start_i2c_slave_reply
  6911 ;; This function is called by:
  6912 ;;		_InterruptHandlerHigh
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           	psect	text43
  6917  0019B0                     __ptext43:
  6918                           	opt stack 0
  6919  0019B0                     _timer0_int_handler:
  6920                           	opt stack 18
  6921                           
  6922                           ;user_interrupts.c: 18: WriteTimer0(0);
  6923                           
  6924                           ;incstack = 0
  6925  0019B0  0E00               	movlw	0
  6926  0019B2  0100               	movlb	0	; () banked
  6927  0019B4  0100               	movlb	0	; () banked
  6928  0019B6  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6929  0019B8  0E00               	movlw	0
  6930  0019BA  0100               	movlb	0	; () banked
  6931  0019BC  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  6932  0019BE  ECD9  F011         	call	_WriteTimer0	;wreg free
  6933                           
  6934                           ;user_interrupts.c: 34: UART_timeout++;
  6935  0019C2  4A49               	infsnz	_UART_timeout,f,c
  6936  0019C4  2A4A               	incf	_UART_timeout+1,f,c
  6937                           
  6938                           ;user_interrupts.c: 37: distMoved++;
  6939  0019C6  2A50               	incf	_distMoved,f,c
  6940                           
  6941                           ;user_interrupts.c: 38: if(distMoved >= distDesired){
  6942  0019C8  504F               	movf	_distDesired,w,c
  6943  0019CA  5C50               	subwf	_distMoved,w,c
  6944  0019CC  A0D8               	btfss	status,0,c
  6945  0019CE  0012               	return	
  6946                           
  6947                           ;user_interrupts.c: 40: unsigned char motormsg[5] = {0x03, 0x00, 0x00, 0x00, 0x00};
  6948  0019D0  EE20  F051         	lfsr	2,timer0_int_handler@F5112
  6949  0019D4  EE10  F089         	lfsr	1,timer0_int_handler@motormsg
  6950  0019D8  0E05               	movlw	5
  6951  0019DA                     i2u292_41:
  6952  0019DA  CFDE FFE6          	movff	postinc2,postinc1
  6953  0019DE  2EE8               	decfsz	wreg,f,c
  6954  0019E0  D7FC               	goto	i2u292_41
  6955                           
  6956                           ;user_interrupts.c: 41: motormsg[1] = distMoved;
  6957  0019E2  C050  F08A         	movff	_distMoved,timer0_int_handler@motormsg+1
  6958                           
  6959                           ;user_interrupts.c: 42: motormsg[2] = (distMoved & 0x17);
  6960  0019E6  5050               	movf	_distMoved,w,c
  6961  0019E8  0B17               	andlw	23
  6962  0019EA  0100               	movlb	0	; () banked
  6963  0019EC  0100               	movlb	0	; () banked
  6964  0019EE  6F8B               	movwf	(timer0_int_handler@motormsg+2)& (0+255),b
  6965                           
  6966                           ; BSR set to: 0
  6967                           ;user_interrupts.c: 43: start_i2c_slave_reply(5, motormsg);
  6968  0019F0  0100               	movlb	0	; () banked
  6969  0019F2  0E00               	movlw	high timer0_int_handler@motormsg
  6970  0019F4  0100               	movlb	0	; () banked
  6971  0019F6  0100               	movlb	0	; () banked
  6972  0019F8  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  6973  0019FA  0100               	movlb	0	; () banked
  6974  0019FC  0E89               	movlw	low timer0_int_handler@motormsg
  6975  0019FE  0100               	movlb	0	; () banked
  6976  001A00  0100               	movlb	0	; () banked
  6977  001A02  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
  6978  001A04  0E05               	movlw	5
  6979  001A06  EC14  F009         	call	_start_i2c_slave_reply
  6980                           
  6981                           ;user_interrupts.c: 45: distMoved = 0;
  6982  001A0A  0100               	movlb	0	; () banked
  6983  001A0C  6F88               	movwf	??_timer0_int_handler& (0+255),b
  6984  001A0E  0E00               	movlw	0
  6985  001A10  6E50               	movwf	_distMoved,c
  6986  001A12  0100               	movlb	0	; () banked
  6987  001A14  5188               	movf	??_timer0_int_handler& (0+255),w,b
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;user_interrupts.c: 46: unsigned char motorcomm[2] = {0x00, 0x00};
  6991  001A16  C04B  F08E         	movff	timer0_int_handler@F5114,timer0_int_handler@motorcomm
  6992  001A1A  C04C  F08F         	movff	timer0_int_handler@F5114+1,timer0_int_handler@motorcomm+1
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;user_interrupts.c: 47: motorMove(0, motorcomm);
  6996  001A1E  0100               	movlb	0	; () banked
  6997  001A20  0E00               	movlw	high timer0_int_handler@motorcomm
  6998  001A22  0100               	movlb	0	; () banked
  6999  001A24  0100               	movlb	0	; () banked
  7000  001A26  6F86               	movwf	(motorMove@direction+1)& (0+255),b
  7001  001A28  0100               	movlb	0	; () banked
  7002  001A2A  0E8E               	movlw	low timer0_int_handler@motorcomm
  7003  001A2C  0100               	movlb	0	; () banked
  7004  001A2E  0100               	movlb	0	; () banked
  7005  001A30  6F85               	movwf	motorMove@direction& (0+255),b
  7006  001A32  0E00               	movlw	0
  7007  001A34  EC7C  F011         	call	_motorMove
  7008  001A38  0012               	return	
  7009  001A3A                     __end_of_timer0_int_handler:
  7010                           	opt stack 0
  7011                           pclatu	equ	0xFFB
  7012                           pclath	equ	0xFFA
  7013                           tblptru	equ	0xFF8
  7014                           tblptrh	equ	0xFF7
  7015                           tblptrl	equ	0xFF6
  7016                           tablat	equ	0xFF5
  7017                           prodh	equ	0xFF4
  7018                           prodl	equ	0xFF3
  7019                           intcon	equ	0xFF2
  7020                           intcon2	equ	0xFF1
  7021                           postinc0	equ	0xFEE
  7022                           fsr0h	equ	0xFEA
  7023                           fsr0l	equ	0xFE9
  7024                           wreg	equ	0xFE8
  7025                           indf1	equ	0xFE7
  7026                           postinc1	equ	0xFE6
  7027                           postdec1	equ	0xFE5
  7028                           fsr1h	equ	0xFE2
  7029                           fsr1l	equ	0xFE1
  7030                           bsr	equ	0xFE0
  7031                           indf2	equ	0xFDF
  7032                           postinc2	equ	0xFDE
  7033                           postdec2	equ	0xFDD
  7034                           fsr2h	equ	0xFDA
  7035                           fsr2l	equ	0xFD9
  7036                           status	equ	0xFD8
  7037                           
  7038 ;; *************** function _WriteTimer0 *****************
  7039 ;; Defined at:
  7040 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  timer0          2    0[BANK0 ] unsigned int 
  7043 ;; Auto vars:     Size  Location     Type
  7044 ;;  timer           2    2[BANK0 ] struct Timers
  7045 ;; Return value:  Size  Location     Type
  7046 ;;		None               void
  7047 ;; Registers used:
  7048 ;;		None
  7049 ;; Tracked objects:
  7050 ;;		On entry : 0/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7054 ;;      Params:         0       2       0       0       0
  7055 ;;      Locals:         0       2       0       0       0
  7056 ;;      Temps:          0       0       0       0       0
  7057 ;;      Totals:         0       4       0       0       0
  7058 ;;Total ram usage:        4 bytes
  7059 ;; Hardware stack levels used:    1
  7060 ;; This function calls:
  7061 ;;		Nothing
  7062 ;; This function is called by:
  7063 ;;		_timer0_int_handler
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           	psect	text44
  7068  0023B2                     __ptext44:
  7069                           	opt stack 0
  7070  0023B2                     _WriteTimer0:
  7071                           	opt stack 19
  7072                           
  7073                           ;incstack = 0
  7074  0023B2  C080  F082         	movff	WriteTimer0@timer0,WriteTimer0@timer
  7075  0023B6  C081  F083         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  7076  0023BA  C083  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  7077  0023BE  C082  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  7078  0023C2  0012               	return	
  7079  0023C4                     __end_of_WriteTimer0:
  7080                           	opt stack 0
  7081                           pclatu	equ	0xFFB
  7082                           pclath	equ	0xFFA
  7083                           tblptru	equ	0xFF8
  7084                           tblptrh	equ	0xFF7
  7085                           tblptrl	equ	0xFF6
  7086                           tablat	equ	0xFF5
  7087                           prodh	equ	0xFF4
  7088                           prodl	equ	0xFF3
  7089                           intcon	equ	0xFF2
  7090                           intcon2	equ	0xFF1
  7091                           postinc0	equ	0xFEE
  7092                           fsr0h	equ	0xFEA
  7093                           fsr0l	equ	0xFE9
  7094                           wreg	equ	0xFE8
  7095                           indf1	equ	0xFE7
  7096                           postinc1	equ	0xFE6
  7097                           postdec1	equ	0xFE5
  7098                           fsr1h	equ	0xFE2
  7099                           fsr1l	equ	0xFE1
  7100                           bsr	equ	0xFE0
  7101                           indf2	equ	0xFDF
  7102                           postinc2	equ	0xFDE
  7103                           postdec2	equ	0xFDD
  7104                           fsr2h	equ	0xFDA
  7105                           fsr2l	equ	0xFD9
  7106                           status	equ	0xFD8
  7107                           
  7108 ;; *************** function _i2c_int_handler *****************
  7109 ;; Defined at:
  7110 ;;		line 139 in file "../src/my_i2c.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;		None
  7113 ;; Auto vars:     Size  Location     Type
  7114 ;;		None
  7115 ;; Return value:  Size  Location     Type
  7116 ;;		None               void
  7117 ;; Registers used:
  7118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7124 ;;      Params:         0       0       0       0       0
  7125 ;;      Locals:         0       0       0       0       0
  7126 ;;      Temps:          0       0       0       0       0
  7127 ;;      Totals:         0       0       0       0       0
  7128 ;;Total ram usage:        0 bytes
  7129 ;; Hardware stack levels used:    1
  7130 ;; Hardware stack levels required when called:    4
  7131 ;; This function calls:
  7132 ;;		_i2c_slave_int_handler
  7133 ;; This function is called by:
  7134 ;;		_InterruptHandlerHigh
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           	psect	text45
  7139  0023F4                     __ptext45:
  7140                           	opt stack 0
  7141  0023F4                     _i2c_int_handler:
  7142                           	opt stack 16
  7143                           
  7144                           ;my_i2c.c: 143: i2c_slave_int_handler();
  7145                           
  7146                           ;incstack = 0
  7147  0023F4  EC65  F000         	call	_i2c_slave_int_handler	;wreg free
  7148  0023F8  0012               	return	
  7149  0023FA                     __end_of_i2c_int_handler:
  7150                           	opt stack 0
  7151                           pclatu	equ	0xFFB
  7152                           pclath	equ	0xFFA
  7153                           tblptru	equ	0xFF8
  7154                           tblptrh	equ	0xFF7
  7155                           tblptrl	equ	0xFF6
  7156                           tablat	equ	0xFF5
  7157                           prodh	equ	0xFF4
  7158                           prodl	equ	0xFF3
  7159                           intcon	equ	0xFF2
  7160                           intcon2	equ	0xFF1
  7161                           postinc0	equ	0xFEE
  7162                           fsr0h	equ	0xFEA
  7163                           fsr0l	equ	0xFE9
  7164                           wreg	equ	0xFE8
  7165                           indf1	equ	0xFE7
  7166                           postinc1	equ	0xFE6
  7167                           postdec1	equ	0xFE5
  7168                           fsr1h	equ	0xFE2
  7169                           fsr1l	equ	0xFE1
  7170                           bsr	equ	0xFE0
  7171                           indf2	equ	0xFDF
  7172                           postinc2	equ	0xFDE
  7173                           postdec2	equ	0xFDD
  7174                           fsr2h	equ	0xFDA
  7175                           fsr2l	equ	0xFD9
  7176                           status	equ	0xFD8
  7177                           
  7178 ;; *************** function _i2c_slave_int_handler *****************
  7179 ;; Defined at:
  7180 ;;		line 248 in file "../src/my_i2c.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;		None
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;  motorcomm       2   43[BANK0 ] unsigned char [2]
  7185 ;;  sensormsg       5   28[BANK0 ] unsigned char [5]
  7186 ;;  length          2   38[BANK0 ] int 
  7187 ;;  error_buf       3   33[BANK0 ] unsigned char [3]
  7188 ;;  data_read       1   45[BANK0 ] unsigned char 
  7189 ;;  msg_ready       1   42[BANK0 ] unsigned char 
  7190 ;;  msg_to_send     1   41[BANK0 ] unsigned char 
  7191 ;;  i2c_data        1   40[BANK0 ] unsigned char 
  7192 ;;  overrun_erro    1   37[BANK0 ] unsigned char 
  7193 ;;  data_written    1   36[BANK0 ] unsigned char 
  7194 ;; Return value:  Size  Location     Type
  7195 ;;		None               void
  7196 ;; Registers used:
  7197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7203 ;;      Params:         0       0       0       0       0
  7204 ;;      Locals:         0      18       0       0       0
  7205 ;;      Temps:          0       2       0       0       0
  7206 ;;      Totals:         0      20       0       0       0
  7207 ;;Total ram usage:       20 bytes
  7208 ;; Hardware stack levels used:    1
  7209 ;; Hardware stack levels required when called:    3
  7210 ;; This function calls:
  7211 ;;		_ToMainHigh_sendmsg
  7212 ;;		_handle_start
  7213 ;;		_motorMove
  7214 ;;		_start_i2c_slave_reply
  7215 ;; This function is called by:
  7216 ;;		_i2c_int_handler
  7217 ;; This function uses a non-reentrant model
  7218 ;;
  7219                           
  7220                           	psect	text46
  7221  0000CA                     __ptext46:
  7222                           	opt stack 0
  7223  0000CA                     _i2c_slave_int_handler:
  7224                           	opt stack 16
  7225                           
  7226                           ;my_i2c.c: 249: unsigned char i2c_data;
  7227                           ;my_i2c.c: 250: unsigned char data_read = 0;
  7228                           
  7229                           ;incstack = 0
  7230  0000CA  0100               	movlb	0	; () banked
  7231  0000CC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7232  0000CE  0E00               	movlw	0
  7233  0000D0  0100               	movlb	0	; () banked
  7234  0000D2  0100               	movlb	0	; () banked
  7235  0000D4  6FAD               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7236  0000D6  0100               	movlb	0	; () banked
  7237  0000D8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7238                           
  7239                           ;my_i2c.c: 251: unsigned char data_written = 0;
  7240  0000DA  0100               	movlb	0	; () banked
  7241  0000DC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7242  0000DE  0E00               	movlw	0
  7243  0000E0  0100               	movlb	0	; () banked
  7244  0000E2  0100               	movlb	0	; () banked
  7245  0000E4  6FA4               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7246  0000E6  0100               	movlb	0	; () banked
  7247  0000E8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7248                           
  7249                           ;my_i2c.c: 252: unsigned char msg_ready = 0;
  7250  0000EA  0100               	movlb	0	; () banked
  7251  0000EC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7252  0000EE  0E00               	movlw	0
  7253  0000F0  0100               	movlb	0	; () banked
  7254  0000F2  0100               	movlb	0	; () banked
  7255  0000F4  6FAA               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7256  0000F6  0100               	movlb	0	; () banked
  7257  0000F8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7258                           
  7259                           ;my_i2c.c: 253: unsigned char msg_to_send = 0;
  7260  0000FA  0100               	movlb	0	; () banked
  7261  0000FC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7262  0000FE  0E00               	movlw	0
  7263  000100  0100               	movlb	0	; () banked
  7264  000102  0100               	movlb	0	; () banked
  7265  000104  6FA9               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7266  000106  0100               	movlb	0	; () banked
  7267  000108  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7268                           
  7269                           ;my_i2c.c: 254: unsigned char overrun_error = 0;
  7270  00010A  0100               	movlb	0	; () banked
  7271  00010C  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7272  00010E  0E00               	movlw	0
  7273  000110  0100               	movlb	0	; () banked
  7274  000112  0100               	movlb	0	; () banked
  7275  000114  6FA5               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7276  000116  0100               	movlb	0	; () banked
  7277  000118  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7278                           
  7279                           ; BSR set to: 0
  7280                           ;my_i2c.c: 255: unsigned char error_buf[3];
  7281                           ;my_i2c.c: 258: if (SSPCON1bits.SSPOV == 1) {
  7282  00011A  ACC6               	btfss	4038,6,c	;volatile
  7283  00011C  D029               	goto	i2l4286
  7284                           
  7285                           ; BSR set to: 0
  7286                           ;my_i2c.c: 259: SSPCON1bits.SSPOV = 0;
  7287  00011E  9CC6               	bcf	4038,6,c	;volatile
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;my_i2c.c: 263: ic_ptr->status = 0x5;
  7291  000120  0100               	movlb	0	; () banked
  7292  000122  EE20 F00D          	lfsr	2,13
  7293  000126  0100               	movlb	0	; () banked
  7294  000128  51C3               	movf	_ic_ptr& (0+255),w,b
  7295  00012A  26D9               	addwf	fsr2l,f,c
  7296  00012C  0100               	movlb	0	; () banked
  7297  00012E  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7298  000130  22DA               	addwfc	fsr2h,f,c
  7299  000132  0E05               	movlw	5
  7300  000134  6EDF               	movwf	indf2,c
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;my_i2c.c: 264: overrun_error = 1;
  7304  000136  0100               	movlb	0	; () banked
  7305  000138  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7306  00013A  0E01               	movlw	1
  7307  00013C  0100               	movlb	0	; () banked
  7308  00013E  0100               	movlb	0	; () banked
  7309  000140  6FA5               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7310  000142  0100               	movlb	0	; () banked
  7311  000144  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;my_i2c.c: 265: ic_ptr->error_count++;
  7315  000146  0100               	movlb	0	; () banked
  7316  000148  EE20 F00F          	lfsr	2,15
  7317  00014C  0100               	movlb	0	; () banked
  7318  00014E  51C3               	movf	_ic_ptr& (0+255),w,b
  7319  000150  26D9               	addwf	fsr2l,f,c
  7320  000152  0100               	movlb	0	; () banked
  7321  000154  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7322  000156  22DA               	addwfc	fsr2h,f,c
  7323  000158  2ADF               	incf	indf2,f,c
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;my_i2c.c: 266: ic_ptr->error_code = 0x4;
  7327  00015A  0100               	movlb	0	; () banked
  7328  00015C  EE20 F00E          	lfsr	2,14
  7329  000160  0100               	movlb	0	; () banked
  7330  000162  51C3               	movf	_ic_ptr& (0+255),w,b
  7331  000164  26D9               	addwf	fsr2l,f,c
  7332  000166  0100               	movlb	0	; () banked
  7333  000168  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7334  00016A  22DA               	addwfc	fsr2h,f,c
  7335  00016C  0E04               	movlw	4
  7336  00016E  6EDF               	movwf	indf2,c
  7337  000170                     i2l4286:
  7338                           
  7339                           ; BSR set to: 0
  7340                           ;my_i2c.c: 267: }
  7341                           ;my_i2c.c: 269: if (SSPSTATbits.BF == 1) {
  7342  000170  A0C7               	btfss	4039,0,c	;volatile
  7343  000172  D00A               	goto	i2l4292
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;my_i2c.c: 270: i2c_data = SSPBUF;
  7347  000174  CFC9 F0A8          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  7348                           
  7349                           ; BSR set to: 0
  7350                           ;my_i2c.c: 271: data_read = 1;
  7351  000178  0100               	movlb	0	; () banked
  7352  00017A  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7353  00017C  0E01               	movlw	1
  7354  00017E  0100               	movlb	0	; () banked
  7355  000180  0100               	movlb	0	; () banked
  7356  000182  6FAD               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7357  000184  0100               	movlb	0	; () banked
  7358  000186  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7359  000188                     i2l4292:
  7360                           
  7361                           ; BSR set to: 0
  7362                           ;my_i2c.c: 272: }
  7363                           ;my_i2c.c: 274: if (!overrun_error) {
  7364  000188  0100               	movlb	0	; () banked
  7365  00018A  0100               	movlb	0	; () banked
  7366  00018C  67A5               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  7367  00018E  D1CE               	goto	i2l348
  7368  000190  D1B7               	goto	i2l4380
  7369  000192                     i2l350:
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;my_i2c.c: 277: {
  7373                           ;my_i2c.c: 279: if (SSPSTATbits.S == 1) {
  7374  000192  A6C7               	btfss	4039,3,c	;volatile
  7375  000194  D1CB               	goto	i2l348
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;my_i2c.c: 280: handle_start(data_read);
  7379  000196  0100               	movlb	0	; () banked
  7380  000198  0100               	movlb	0	; () banked
  7381  00019A  51AD               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7382  00019C  EC22  F00A         	call	_handle_start
  7383                           
  7384                           ;my_i2c.c: 282: if (ic_ptr->status == 0x8) {
  7385  0001A0  0100               	movlb	0	; () banked
  7386  0001A2  EE20 F00D          	lfsr	2,13
  7387  0001A6  0100               	movlb	0	; () banked
  7388  0001A8  51C3               	movf	_ic_ptr& (0+255),w,b
  7389  0001AA  26D9               	addwf	fsr2l,f,c
  7390  0001AC  0100               	movlb	0	; () banked
  7391  0001AE  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7392  0001B0  22DA               	addwfc	fsr2h,f,c
  7393  0001B2  0E08               	movlw	8
  7394  0001B4  62DF               	cpfseq	indf2,c
  7395  0001B6  D1BA               	goto	i2l348
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;my_i2c.c: 283: data_read = 0;
  7399  0001B8  0100               	movlb	0	; () banked
  7400  0001BA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7401  0001BC  0E00               	movlw	0
  7402  0001BE  0100               	movlb	0	; () banked
  7403  0001C0  0100               	movlb	0	; () banked
  7404  0001C2  6FAD               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7405  0001C4  0100               	movlb	0	; () banked
  7406  0001C6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7407                           
  7408                           ;my_i2c.c: 284: msg_to_send = 1;
  7409  0001C8  0100               	movlb	0	; () banked
  7410  0001CA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7411  0001CC  0E01               	movlw	1
  7412  0001CE  0100               	movlb	0	; () banked
  7413  0001D0  0100               	movlb	0	; () banked
  7414  0001D2  6FA9               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7415  0001D4  D187               	goto	L6
  7416  0001D6                     i2l354:
  7417                           
  7418                           ; BSR set to: 0
  7419                           ;my_i2c.c: 290: {
  7420                           ;my_i2c.c: 292: if (SSPSTATbits.P == 1) {
  7421  0001D6  A8C7               	btfss	4039,4,c	;volatile
  7422  0001D8  D030               	goto	i2l4312
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;my_i2c.c: 295: ic_ptr->event_count++;
  7426  0001DA  0100               	movlb	0	; () banked
  7427  0001DC  EE20 F00C          	lfsr	2,12
  7428  0001E0  0100               	movlb	0	; () banked
  7429  0001E2  51C3               	movf	_ic_ptr& (0+255),w,b
  7430  0001E4  26D9               	addwf	fsr2l,f,c
  7431  0001E6  0100               	movlb	0	; () banked
  7432  0001E8  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7433  0001EA  22DA               	addwfc	fsr2h,f,c
  7434  0001EC  2ADF               	incf	indf2,f,c
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;my_i2c.c: 296: if (data_read) {
  7438  0001EE  0100               	movlb	0	; () banked
  7439  0001F0  0100               	movlb	0	; () banked
  7440  0001F2  51AD               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7441  0001F4  B4D8               	btfsc	status,2,c
  7442  0001F6  D179               	goto	L8
  7443                           
  7444                           ; BSR set to: 0
  7445                           ;my_i2c.c: 297: if (SSPSTATbits.D_A == 0) {
  7446  0001F8  BAC7               	btfsc	4039,5,c	;volatile
  7447  0001FA  D009               	goto	i2l4310
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;my_i2c.c: 298: msg_ready = 1;
  7451  0001FC  0100               	movlb	0	; () banked
  7452  0001FE  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7453  000200  0E01               	movlw	1
  7454  000202  0100               	movlb	0	; () banked
  7455  000204  0100               	movlb	0	; () banked
  7456  000206  6FAA               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7457  000208  0100               	movlb	0	; () banked
  7458  00020A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7459                           
  7460                           ;my_i2c.c: 299: } else {
  7461  00020C  D16E               	goto	L8
  7462  00020E                     i2l4310:
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;my_i2c.c: 300: ic_ptr->error_count++;
  7466  00020E  0100               	movlb	0	; () banked
  7467  000210  EE20 F00F          	lfsr	2,15
  7468  000214  0100               	movlb	0	; () banked
  7469  000216  51C3               	movf	_ic_ptr& (0+255),w,b
  7470  000218  26D9               	addwf	fsr2l,f,c
  7471  00021A  0100               	movlb	0	; () banked
  7472  00021C  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7473  00021E  22DA               	addwfc	fsr2h,f,c
  7474  000220  2ADF               	incf	indf2,f,c
  7475                           
  7476                           ;my_i2c.c: 301: ic_ptr->error_code = 0x6;
  7477  000222  0100               	movlb	0	; () banked
  7478  000224  EE20 F00E          	lfsr	2,14
  7479  000228  0100               	movlb	0	; () banked
  7480  00022A  51C3               	movf	_ic_ptr& (0+255),w,b
  7481  00022C  26D9               	addwf	fsr2l,f,c
  7482  00022E  0100               	movlb	0	; () banked
  7483  000230  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7484  000232  22DA               	addwfc	fsr2h,f,c
  7485  000234  0E06               	movlw	6
  7486  000236  6EDF               	movwf	indf2,c
  7487                           
  7488                           ; BSR set to: 0
  7489  000238  D158               	goto	L8
  7490  00023A                     i2l4312:
  7491                           
  7492                           ; BSR set to: 0
  7493  00023A  0100               	movlb	0	; () banked
  7494  00023C  0100               	movlb	0	; () banked
  7495  00023E  51AD               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7496  000240  B4D8               	btfsc	status,2,c
  7497  000242  D174               	goto	i2l348
  7498                           
  7499                           ; BSR set to: 0
  7500                           ;my_i2c.c: 306: ic_ptr->event_count++;
  7501  000244  0100               	movlb	0	; () banked
  7502  000246  EE20 F00C          	lfsr	2,12
  7503  00024A  0100               	movlb	0	; () banked
  7504  00024C  51C3               	movf	_ic_ptr& (0+255),w,b
  7505  00024E  26D9               	addwf	fsr2l,f,c
  7506  000250  0100               	movlb	0	; () banked
  7507  000252  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7508  000254  22DA               	addwfc	fsr2h,f,c
  7509  000256  2ADF               	incf	indf2,f,c
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;my_i2c.c: 307: if (SSPSTATbits.D_A == 0) {
  7513  000258  BAC7               	btfsc	4039,5,c	;volatile
  7514  00025A  D019               	goto	i2l4328
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;my_i2c.c: 308: if (SSPSTATbits.R_W == 0) {
  7518  00025C  B4C7               	btfsc	4039,2,c	;volatile
  7519  00025E  D00B               	goto	i2l4322
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;my_i2c.c: 309: ic_ptr->status = 0x7;
  7523  000260  0100               	movlb	0	; () banked
  7524  000262  EE20 F00D          	lfsr	2,13
  7525  000266  0100               	movlb	0	; () banked
  7526  000268  51C3               	movf	_ic_ptr& (0+255),w,b
  7527  00026A  26D9               	addwf	fsr2l,f,c
  7528  00026C  0100               	movlb	0	; () banked
  7529  00026E  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7530  000270  22DA               	addwfc	fsr2h,f,c
  7531  000272  0E07               	movlw	7
  7532  000274  D076               	goto	L5
  7533  000276                     i2l4322:
  7534                           
  7535                           ; BSR set to: 0
  7536                           ;my_i2c.c: 311: ic_ptr->status = 0x8;
  7537  000276  0100               	movlb	0	; () banked
  7538  000278  EE20 F00D          	lfsr	2,13
  7539  00027C  0100               	movlb	0	; () banked
  7540  00027E  51C3               	movf	_ic_ptr& (0+255),w,b
  7541  000280  26D9               	addwf	fsr2l,f,c
  7542  000282  0100               	movlb	0	; () banked
  7543  000284  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7544  000286  22DA               	addwfc	fsr2h,f,c
  7545  000288  0E08               	movlw	8
  7546  00028A  6EDF               	movwf	indf2,c
  7547  00028C  D11D               	goto	L9
  7548  00028E                     i2l4328:
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;my_i2c.c: 317: ic_ptr->error_count++;
  7552  00028E  0100               	movlb	0	; () banked
  7553  000290  EE20 F00F          	lfsr	2,15
  7554  000294  0100               	movlb	0	; () banked
  7555  000296  51C3               	movf	_ic_ptr& (0+255),w,b
  7556  000298  26D9               	addwf	fsr2l,f,c
  7557  00029A  0100               	movlb	0	; () banked
  7558  00029C  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7559  00029E  22DA               	addwfc	fsr2h,f,c
  7560  0002A0  2ADF               	incf	indf2,f,c
  7561                           
  7562                           ;my_i2c.c: 318: ic_ptr->status = 0x5;
  7563  0002A2  0100               	movlb	0	; () banked
  7564  0002A4  EE20 F00D          	lfsr	2,13
  7565  0002A8  0100               	movlb	0	; () banked
  7566  0002AA  51C3               	movf	_ic_ptr& (0+255),w,b
  7567  0002AC  26D9               	addwf	fsr2l,f,c
  7568  0002AE  0100               	movlb	0	; () banked
  7569  0002B0  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7570  0002B2  22DA               	addwfc	fsr2h,f,c
  7571  0002B4  0E05               	movlw	5
  7572  0002B6  6EDF               	movwf	indf2,c
  7573                           
  7574                           ;my_i2c.c: 319: ic_ptr->error_code = 0x6;
  7575  0002B8  0100               	movlb	0	; () banked
  7576  0002BA  EE20 F00E          	lfsr	2,14
  7577  0002BE  0100               	movlb	0	; () banked
  7578  0002C0  51C3               	movf	_ic_ptr& (0+255),w,b
  7579  0002C2  26D9               	addwf	fsr2l,f,c
  7580  0002C4  0100               	movlb	0	; () banked
  7581  0002C6  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7582  0002C8  22DA               	addwfc	fsr2h,f,c
  7583  0002CA  0E06               	movlw	6
  7584  0002CC  D04A               	goto	L5
  7585  0002CE                     i2l4330:
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;my_i2c.c: 325: {
  7589                           ;my_i2c.c: 326: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7590  0002CE  0100               	movlb	0	; () banked
  7591  0002D0  EE20 F01B          	lfsr	2,27
  7592  0002D4  0100               	movlb	0	; () banked
  7593  0002D6  51C3               	movf	_ic_ptr& (0+255),w,b
  7594  0002D8  26D9               	addwf	fsr2l,f,c
  7595  0002DA  0100               	movlb	0	; () banked
  7596  0002DC  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7597  0002DE  22DA               	addwfc	fsr2h,f,c
  7598  0002E0  50DF               	movf	indf2,w,c
  7599  0002E2  0100               	movlb	0	; () banked
  7600  0002E4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7601  0002E6  0100               	movlb	0	; () banked
  7602  0002E8  EE20 F01A          	lfsr	2,26
  7603  0002EC  0100               	movlb	0	; () banked
  7604  0002EE  51C3               	movf	_ic_ptr& (0+255),w,b
  7605  0002F0  26D9               	addwf	fsr2l,f,c
  7606  0002F2  0100               	movlb	0	; () banked
  7607  0002F4  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7608  0002F6  22DA               	addwfc	fsr2h,f,c
  7609  0002F8  50DF               	movf	indf2,w,c
  7610  0002FA  0100               	movlb	0	; () banked
  7611  0002FC  5D9A               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  7612  0002FE  B0D8               	btfsc	status,0,c
  7613  000300  D0F4               	goto	L8
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;my_i2c.c: 327: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7617  000302  0100               	movlb	0	; () banked
  7618  000304  EE20 F01B          	lfsr	2,27
  7619  000308  0100               	movlb	0	; () banked
  7620  00030A  51C3               	movf	_ic_ptr& (0+255),w,b
  7621  00030C  26D9               	addwf	fsr2l,f,c
  7622  00030E  0100               	movlb	0	; () banked
  7623  000310  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7624  000312  22DA               	addwfc	fsr2h,f,c
  7625  000314  50DF               	movf	indf2,w,c
  7626  000316  0100               	movlb	0	; () banked
  7627  000318  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7628  00031A  0100               	movlb	0	; () banked
  7629  00031C  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7630  00031E  0D01               	mullw	1
  7631  000320  0E10               	movlw	16
  7632  000322  26F3               	addwf	prodl,f,c
  7633  000324  0E00               	movlw	0
  7634  000326  22F4               	addwfc	prodh,f,c
  7635  000328  50F3               	movf	prodl,w,c
  7636  00032A  0100               	movlb	0	; () banked
  7637  00032C  0100               	movlb	0	; () banked
  7638  00032E  25C3               	addwf	_ic_ptr& (0+255),w,b
  7639  000330  6ED9               	movwf	fsr2l,c
  7640  000332  50F4               	movf	prodh,w,c
  7641  000334  0100               	movlb	0	; () banked
  7642  000336  0100               	movlb	0	; () banked
  7643  000338  21C4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7644  00033A  6EDA               	movwf	fsr2h,c
  7645  00033C  50DF               	movf	indf2,w,c
  7646  00033E  6EC9               	movwf	4041,c	;volatile
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;my_i2c.c: 328: ic_ptr->outbufind++;
  7650  000340  0100               	movlb	0	; () banked
  7651  000342  EE20 F01B          	lfsr	2,27
  7652  000346  0100               	movlb	0	; () banked
  7653  000348  51C3               	movf	_ic_ptr& (0+255),w,b
  7654  00034A  26D9               	addwf	fsr2l,f,c
  7655  00034C  0100               	movlb	0	; () banked
  7656  00034E  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7657  000350  22DA               	addwfc	fsr2h,f,c
  7658  000352  2ADF               	incf	indf2,f,c
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;my_i2c.c: 329: data_written = 1;
  7662  000354  0100               	movlb	0	; () banked
  7663  000356  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7664  000358  0E01               	movlw	1
  7665  00035A  0100               	movlb	0	; () banked
  7666  00035C  0100               	movlb	0	; () banked
  7667  00035E  6FA4               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7668  000360  D0C1               	goto	L6
  7669  000362                     L5:
  7670  000362  6EDF               	movwf	indf2,c
  7671  000364  D0E3               	goto	i2l348
  7672  000366                     i2l368:
  7673                           
  7674                           ; BSR set to: 0
  7675                           ;my_i2c.c: 337: {
  7676                           ;my_i2c.c: 339: if (SSPSTATbits.P == 1) {
  7677  000366  A8C7               	btfss	4039,4,c	;volatile
  7678  000368  D062               	goto	i2l4358
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;my_i2c.c: 341: ic_ptr->event_count++;
  7682  00036A  0100               	movlb	0	; () banked
  7683  00036C  EE20 F00C          	lfsr	2,12
  7684  000370  0100               	movlb	0	; () banked
  7685  000372  51C3               	movf	_ic_ptr& (0+255),w,b
  7686  000374  26D9               	addwf	fsr2l,f,c
  7687  000376  0100               	movlb	0	; () banked
  7688  000378  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7689  00037A  22DA               	addwfc	fsr2h,f,c
  7690  00037C  2ADF               	incf	indf2,f,c
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;my_i2c.c: 342: if (data_read) {
  7694  00037E  0100               	movlb	0	; () banked
  7695  000380  0100               	movlb	0	; () banked
  7696  000382  51AD               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7697  000384  B4D8               	btfsc	status,2,c
  7698  000386  D04A               	goto	i2l4354
  7699                           
  7700                           ; BSR set to: 0
  7701                           ;my_i2c.c: 343: if (SSPSTATbits.D_A == 1) {
  7702  000388  AAC7               	btfss	4039,5,c	;volatile
  7703  00038A  D027               	goto	i2l4352
  7704                           
  7705                           ; BSR set to: 0
  7706                           ;my_i2c.c: 344: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7707  00038C  0100               	movlb	0	; () banked
  7708  00038E  EE20 F00A          	lfsr	2,10
  7709  000392  0100               	movlb	0	; () banked
  7710  000394  51C3               	movf	_ic_ptr& (0+255),w,b
  7711  000396  26D9               	addwf	fsr2l,f,c
  7712  000398  0100               	movlb	0	; () banked
  7713  00039A  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7714  00039C  22DA               	addwfc	fsr2h,f,c
  7715  00039E  50DF               	movf	indf2,w,c
  7716  0003A0  0100               	movlb	0	; () banked
  7717  0003A2  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7718  0003A4  0100               	movlb	0	; () banked
  7719  0003A6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7720  0003A8  0D01               	mullw	1
  7721  0003AA  50F3               	movf	prodl,w,c
  7722  0003AC  0100               	movlb	0	; () banked
  7723  0003AE  0100               	movlb	0	; () banked
  7724  0003B0  25C3               	addwf	_ic_ptr& (0+255),w,b
  7725  0003B2  6ED9               	movwf	fsr2l,c
  7726  0003B4  50F4               	movf	prodh,w,c
  7727  0003B6  0100               	movlb	0	; () banked
  7728  0003B8  0100               	movlb	0	; () banked
  7729  0003BA  21C4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7730  0003BC  6EDA               	movwf	fsr2h,c
  7731  0003BE  0100               	movlb	0	; () banked
  7732  0003C0  C0A8  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;my_i2c.c: 345: ic_ptr->buflen++;
  7736  0003C4  0100               	movlb	0	; () banked
  7737  0003C6  EE20 F00A          	lfsr	2,10
  7738  0003CA  0100               	movlb	0	; () banked
  7739  0003CC  51C3               	movf	_ic_ptr& (0+255),w,b
  7740  0003CE  26D9               	addwf	fsr2l,f,c
  7741  0003D0  0100               	movlb	0	; () banked
  7742  0003D2  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7743  0003D4  22DA               	addwfc	fsr2h,f,c
  7744  0003D6  2ADF               	incf	indf2,f,c
  7745  0003D8  D021               	goto	i2l4354
  7746  0003DA                     i2l4352:
  7747                           
  7748                           ; BSR set to: 0
  7749                           ;my_i2c.c: 348: ic_ptr->error_count++;
  7750  0003DA  0100               	movlb	0	; () banked
  7751  0003DC  EE20 F00F          	lfsr	2,15
  7752  0003E0  0100               	movlb	0	; () banked
  7753  0003E2  51C3               	movf	_ic_ptr& (0+255),w,b
  7754  0003E4  26D9               	addwf	fsr2l,f,c
  7755  0003E6  0100               	movlb	0	; () banked
  7756  0003E8  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7757  0003EA  22DA               	addwfc	fsr2h,f,c
  7758  0003EC  2ADF               	incf	indf2,f,c
  7759                           
  7760                           ;my_i2c.c: 349: ic_ptr->error_code = 0x6;
  7761  0003EE  0100               	movlb	0	; () banked
  7762  0003F0  EE20 F00E          	lfsr	2,14
  7763  0003F4  0100               	movlb	0	; () banked
  7764  0003F6  51C3               	movf	_ic_ptr& (0+255),w,b
  7765  0003F8  26D9               	addwf	fsr2l,f,c
  7766  0003FA  0100               	movlb	0	; () banked
  7767  0003FC  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7768  0003FE  22DA               	addwfc	fsr2h,f,c
  7769  000400  0E06               	movlw	6
  7770  000402  6EDF               	movwf	indf2,c
  7771                           
  7772                           ;my_i2c.c: 350: ic_ptr->status = 0x5;
  7773  000404  0100               	movlb	0	; () banked
  7774  000406  EE20 F00D          	lfsr	2,13
  7775  00040A  0100               	movlb	0	; () banked
  7776  00040C  51C3               	movf	_ic_ptr& (0+255),w,b
  7777  00040E  26D9               	addwf	fsr2l,f,c
  7778  000410  0100               	movlb	0	; () banked
  7779  000412  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7780  000414  22DA               	addwfc	fsr2h,f,c
  7781  000416  0E05               	movlw	5
  7782  000418  6EDF               	movwf	indf2,c
  7783  00041A  D067               	goto	L8
  7784  00041C                     i2l4354:
  7785                           
  7786                           ; BSR set to: 0
  7787                           ;my_i2c.c: 353: msg_ready = 1;
  7788  00041C  0100               	movlb	0	; () banked
  7789  00041E  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7790  000420  0E01               	movlw	1
  7791  000422  0100               	movlb	0	; () banked
  7792  000424  0100               	movlb	0	; () banked
  7793  000426  6FAA               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7794  000428  0100               	movlb	0	; () banked
  7795  00042A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7796                           
  7797                           ; BSR set to: 0
  7798  00042C  D05E               	goto	L8
  7799  00042E                     i2l4358:
  7800                           
  7801                           ; BSR set to: 0
  7802  00042E  0100               	movlb	0	; () banked
  7803  000430  0100               	movlb	0	; () banked
  7804  000432  51AD               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7805  000434  B4D8               	btfsc	status,2,c
  7806  000436  D07A               	goto	i2l348
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;my_i2c.c: 357: ic_ptr->event_count++;
  7810  000438  0100               	movlb	0	; () banked
  7811  00043A  EE20 F00C          	lfsr	2,12
  7812  00043E  0100               	movlb	0	; () banked
  7813  000440  51C3               	movf	_ic_ptr& (0+255),w,b
  7814  000442  26D9               	addwf	fsr2l,f,c
  7815  000444  0100               	movlb	0	; () banked
  7816  000446  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7817  000448  22DA               	addwfc	fsr2h,f,c
  7818  00044A  2ADF               	incf	indf2,f,c
  7819                           
  7820                           ; BSR set to: 0
  7821                           ;my_i2c.c: 358: if (SSPSTATbits.D_A == 1) {
  7822  00044C  AAC7               	btfss	4039,5,c	;volatile
  7823  00044E  D027               	goto	i2l376
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;my_i2c.c: 359: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7827  000450  0100               	movlb	0	; () banked
  7828  000452  EE20 F00A          	lfsr	2,10
  7829  000456  0100               	movlb	0	; () banked
  7830  000458  51C3               	movf	_ic_ptr& (0+255),w,b
  7831  00045A  26D9               	addwf	fsr2l,f,c
  7832  00045C  0100               	movlb	0	; () banked
  7833  00045E  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7834  000460  22DA               	addwfc	fsr2h,f,c
  7835  000462  50DF               	movf	indf2,w,c
  7836  000464  0100               	movlb	0	; () banked
  7837  000466  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7838  000468  0100               	movlb	0	; () banked
  7839  00046A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7840  00046C  0D01               	mullw	1
  7841  00046E  50F3               	movf	prodl,w,c
  7842  000470  0100               	movlb	0	; () banked
  7843  000472  0100               	movlb	0	; () banked
  7844  000474  25C3               	addwf	_ic_ptr& (0+255),w,b
  7845  000476  6ED9               	movwf	fsr2l,c
  7846  000478  50F4               	movf	prodh,w,c
  7847  00047A  0100               	movlb	0	; () banked
  7848  00047C  0100               	movlb	0	; () banked
  7849  00047E  21C4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7850  000480  6EDA               	movwf	fsr2h,c
  7851  000482  0100               	movlb	0	; () banked
  7852  000484  C0A8  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;my_i2c.c: 360: ic_ptr->buflen++;
  7856  000488  0100               	movlb	0	; () banked
  7857  00048A  EE20 F00A          	lfsr	2,10
  7858  00048E  0100               	movlb	0	; () banked
  7859  000490  51C3               	movf	_ic_ptr& (0+255),w,b
  7860  000492  26D9               	addwf	fsr2l,f,c
  7861  000494  0100               	movlb	0	; () banked
  7862  000496  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7863  000498  22DA               	addwfc	fsr2h,f,c
  7864  00049A  2ADF               	incf	indf2,f,c
  7865                           
  7866                           ;my_i2c.c: 361: } else {
  7867  00049C  D047               	goto	i2l348
  7868  00049E                     i2l376:
  7869                           
  7870                           ; BSR set to: 0
  7871                           ;my_i2c.c: 362: if (SSPSTATbits.R_W == 1) {
  7872  00049E  A4C7               	btfss	4039,2,c	;volatile
  7873  0004A0  D6B6               	goto	i2l4310
  7874                           
  7875                           ; BSR set to: 0
  7876                           ;my_i2c.c: 363: ic_ptr->status = 0x8;
  7877  0004A2  0100               	movlb	0	; () banked
  7878  0004A4  EE20 F00D          	lfsr	2,13
  7879  0004A8  0100               	movlb	0	; () banked
  7880  0004AA  51C3               	movf	_ic_ptr& (0+255),w,b
  7881  0004AC  26D9               	addwf	fsr2l,f,c
  7882  0004AE  0100               	movlb	0	; () banked
  7883  0004B0  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7884  0004B2  22DA               	addwfc	fsr2h,f,c
  7885  0004B4  0E08               	movlw	8
  7886  0004B6  6EDF               	movwf	indf2,c
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;my_i2c.c: 364: msg_ready = 1;
  7890  0004B8  0100               	movlb	0	; () banked
  7891  0004BA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7892  0004BC  0E01               	movlw	1
  7893  0004BE  0100               	movlb	0	; () banked
  7894  0004C0  0100               	movlb	0	; () banked
  7895  0004C2  6FAA               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7896  0004C4  0100               	movlb	0	; () banked
  7897  0004C6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7898  0004C8                     L9:
  7899                           
  7900                           ; BSR set to: 0
  7901                           ;my_i2c.c: 365: msg_to_send = 1;
  7902  0004C8  0100               	movlb	0	; () banked
  7903  0004CA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7904  0004CC  0E01               	movlw	1
  7905  0004CE  0100               	movlb	0	; () banked
  7906  0004D0  0100               	movlb	0	; () banked
  7907  0004D2  6FA9               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7908  0004D4  0100               	movlb	0	; () banked
  7909  0004D6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7910                           
  7911                           ; BSR set to: 0
  7912                           ;my_i2c.c: 367: data_read = 0;
  7913  0004D8  0100               	movlb	0	; () banked
  7914  0004DA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7915  0004DC  0E00               	movlw	0
  7916  0004DE  0100               	movlb	0	; () banked
  7917  0004E0  0100               	movlb	0	; () banked
  7918  0004E2  6FAD               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7919  0004E4                     L6:
  7920  0004E4  0100               	movlb	0	; () banked
  7921  0004E6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7922                           
  7923                           ;my_i2c.c: 368: } else {
  7924  0004E8  D021               	goto	i2l348
  7925  0004EA                     L8:
  7926                           
  7927                           ;my_i2c.c: 371: ic_ptr->status = 0x5;
  7928  0004EA  0100               	movlb	0	; () banked
  7929  0004EC  EE20 F00D          	lfsr	2,13
  7930  0004F0  0100               	movlb	0	; () banked
  7931  0004F2  51C3               	movf	_ic_ptr& (0+255),w,b
  7932  0004F4  26D9               	addwf	fsr2l,f,c
  7933  0004F6  0100               	movlb	0	; () banked
  7934  0004F8  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7935  0004FA  22DA               	addwfc	fsr2h,f,c
  7936  0004FC  0E05               	movlw	5
  7937  0004FE  D731               	goto	L5
  7938  000500                     i2l4380:
  7939                           
  7940                           ; BSR set to: 0
  7941  000500  0100               	movlb	0	; () banked
  7942  000502  EE20 F00D          	lfsr	2,13
  7943  000506  0100               	movlb	0	; () banked
  7944  000508  51C3               	movf	_ic_ptr& (0+255),w,b
  7945  00050A  26D9               	addwf	fsr2l,f,c
  7946  00050C  0100               	movlb	0	; () banked
  7947  00050E  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7948  000510  22DA               	addwfc	fsr2h,f,c
  7949  000512  50DF               	movf	indf2,w,c
  7950                           
  7951                           ; Switch size 1, requested type "space"
  7952                           ; Number of cases is 4, Range of values is 5 to 8
  7953                           ; switch strategies available:
  7954                           ; Name         Instructions Cycles
  7955                           ; simple_byte           13     7 (average)
  7956                           ;	Chosen strategy is simple_byte
  7957  000514  0A05               	xorlw	5	; case 5
  7958  000516  B4D8               	btfsc	status,2,c
  7959  000518  D63C               	goto	i2l350
  7960  00051A  0A03               	xorlw	3	; case 6
  7961  00051C  B4D8               	btfsc	status,2,c
  7962  00051E  D65B               	goto	i2l354
  7963  000520  0A01               	xorlw	1	; case 7
  7964  000522  B4D8               	btfsc	status,2,c
  7965  000524  D720               	goto	i2l368
  7966  000526  0A0F               	xorlw	15	; case 8
  7967  000528  B4D8               	btfsc	status,2,c
  7968  00052A  D6D1               	goto	i2l4330
  7969  00052C                     i2l348:
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;my_i2c.c: 378: }
  7973                           ;my_i2c.c: 381: if (data_read || data_written) {
  7974  00052C  0100               	movlb	0	; () banked
  7975  00052E  0100               	movlb	0	; () banked
  7976  000530  67AD               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  7977  000532  D005               	goto	i2l382
  7978                           
  7979                           ; BSR set to: 0
  7980  000534  0100               	movlb	0	; () banked
  7981  000536  0100               	movlb	0	; () banked
  7982  000538  51A4               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  7983  00053A  B4D8               	btfsc	status,2,c
  7984  00053C  D002               	goto	i2l4386
  7985  00053E                     i2l382:
  7986                           
  7987                           ; BSR set to: 0
  7988                           ;my_i2c.c: 383: if (SSPCON1bits.CKP == 0) {
  7989  00053E  A8C6               	btfss	4038,4,c	;volatile
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;my_i2c.c: 384: SSPCON1bits.CKP = 1;
  7993  000540  88C6               	bsf	4038,4,c	;volatile
  7994  000542                     i2l4386:
  7995                           
  7996                           ; BSR set to: 0
  7997                           ;my_i2c.c: 385: }
  7998                           ;my_i2c.c: 386: }
  7999                           ;my_i2c.c: 389: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  8000  000542  0100               	movlb	0	; () banked
  8001  000544  EE20 F00A          	lfsr	2,10
  8002  000548  0100               	movlb	0	; () banked
  8003  00054A  51C3               	movf	_ic_ptr& (0+255),w,b
  8004  00054C  26D9               	addwf	fsr2l,f,c
  8005  00054E  0100               	movlb	0	; () banked
  8006  000550  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8007  000552  22DA               	addwfc	fsr2h,f,c
  8008  000554  0E08               	movlw	8
  8009  000556  64DF               	cpfsgt	indf2,c
  8010  000558  D024               	goto	i2l4392
  8011                           
  8012                           ; BSR set to: 0
  8013  00055A  0100               	movlb	0	; () banked
  8014  00055C  0100               	movlb	0	; () banked
  8015  00055E  67AA               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  8016  000560  D020               	goto	i2l4392
  8017                           
  8018                           ; BSR set to: 0
  8019                           ;my_i2c.c: 390: ic_ptr->status = 0x5;
  8020  000562  0100               	movlb	0	; () banked
  8021  000564  EE20 F00D          	lfsr	2,13
  8022  000568  0100               	movlb	0	; () banked
  8023  00056A  51C3               	movf	_ic_ptr& (0+255),w,b
  8024  00056C  26D9               	addwf	fsr2l,f,c
  8025  00056E  0100               	movlb	0	; () banked
  8026  000570  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8027  000572  22DA               	addwfc	fsr2h,f,c
  8028  000574  0E05               	movlw	5
  8029  000576  6EDF               	movwf	indf2,c
  8030                           
  8031                           ;my_i2c.c: 391: ic_ptr->error_count++;
  8032  000578  0100               	movlb	0	; () banked
  8033  00057A  EE20 F00F          	lfsr	2,15
  8034  00057E  0100               	movlb	0	; () banked
  8035  000580  51C3               	movf	_ic_ptr& (0+255),w,b
  8036  000582  26D9               	addwf	fsr2l,f,c
  8037  000584  0100               	movlb	0	; () banked
  8038  000586  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8039  000588  22DA               	addwfc	fsr2h,f,c
  8040  00058A  2ADF               	incf	indf2,f,c
  8041                           
  8042                           ;my_i2c.c: 392: ic_ptr->error_code = 0x7;
  8043  00058C  0100               	movlb	0	; () banked
  8044  00058E  EE20 F00E          	lfsr	2,14
  8045  000592  0100               	movlb	0	; () banked
  8046  000594  51C3               	movf	_ic_ptr& (0+255),w,b
  8047  000596  26D9               	addwf	fsr2l,f,c
  8048  000598  0100               	movlb	0	; () banked
  8049  00059A  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8050  00059C  22DA               	addwfc	fsr2h,f,c
  8051  00059E  0E07               	movlw	7
  8052  0005A0  6EDF               	movwf	indf2,c
  8053  0005A2                     i2l4392:
  8054                           
  8055                           ; BSR set to: 0
  8056                           ;my_i2c.c: 393: }
  8057                           ;my_i2c.c: 395: if (msg_ready) {
  8058  0005A2  0100               	movlb	0	; () banked
  8059  0005A4  0100               	movlb	0	; () banked
  8060  0005A6  51AA               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  8061  0005A8  B4D8               	btfsc	status,2,c
  8062  0005AA  D048               	goto	i2l4400
  8063                           
  8064                           ; BSR set to: 0
  8065                           ;my_i2c.c: 396: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  8066  0005AC  0100               	movlb	0	; () banked
  8067  0005AE  EE20 F00C          	lfsr	2,12
  8068  0005B2  0100               	movlb	0	; () banked
  8069  0005B4  51C3               	movf	_ic_ptr& (0+255),w,b
  8070  0005B6  26D9               	addwf	fsr2l,f,c
  8071  0005B8  0100               	movlb	0	; () banked
  8072  0005BA  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8073  0005BC  22DA               	addwfc	fsr2h,f,c
  8074  0005BE  0100               	movlb	0	; () banked
  8075  0005C0  EE10 F00A          	lfsr	1,10
  8076  0005C4  0100               	movlb	0	; () banked
  8077  0005C6  51C3               	movf	_ic_ptr& (0+255),w,b
  8078  0005C8  26E1               	addwf	fsr1l,f,c
  8079  0005CA  0100               	movlb	0	; () banked
  8080  0005CC  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8081  0005CE  22E2               	addwfc	fsr1h,f,c
  8082  0005D0  50E7               	movf	indf1,w,c
  8083  0005D2  0100               	movlb	0	; () banked
  8084  0005D4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8085  0005D6  0100               	movlb	0	; () banked
  8086  0005D8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8087  0005DA  0D01               	mullw	1
  8088  0005DC  50F3               	movf	prodl,w,c
  8089  0005DE  0100               	movlb	0	; () banked
  8090  0005E0  0100               	movlb	0	; () banked
  8091  0005E2  25C3               	addwf	_ic_ptr& (0+255),w,b
  8092  0005E4  6EE1               	movwf	fsr1l,c
  8093  0005E6  50F4               	movf	prodh,w,c
  8094  0005E8  0100               	movlb	0	; () banked
  8095  0005EA  0100               	movlb	0	; () banked
  8096  0005EC  21C4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8097  0005EE  6EE2               	movwf	fsr1h,c
  8098  0005F0  CFDF FFE7          	movff	indf2,indf1
  8099                           
  8100                           ; BSR set to: 0
  8101                           ;my_i2c.c: 397: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  8102  0005F4  0100               	movlb	0	; () banked
  8103  0005F6  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8104  0005F8  0E28               	movlw	40
  8105  0005FA  0100               	movlb	0	; () banked
  8106  0005FC  0100               	movlb	0	; () banked
  8107  0005FE  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8108  000600  0100               	movlb	0	; () banked
  8109  000602  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8110  000604  0100               	movlb	0	; () banked
  8111  000606  0100               	movlb	0	; () banked
  8112  000608  C0C4  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8113  00060C  0100               	movlb	0	; () banked
  8114  00060E  0100               	movlb	0	; () banked
  8115  000610  C0C3  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8116  000614  0100               	movlb	0	; () banked
  8117  000616  EE20 F00A          	lfsr	2,10
  8118  00061A  0100               	movlb	0	; () banked
  8119  00061C  51C3               	movf	_ic_ptr& (0+255),w,b
  8120  00061E  26D9               	addwf	fsr2l,f,c
  8121  000620  0100               	movlb	0	; () banked
  8122  000622  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8123  000624  22DA               	addwfc	fsr2h,f,c
  8124  000626  50DF               	movf	indf2,w,c
  8125  000628  0100               	movlb	0	; () banked
  8126  00062A  6F9B               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  8127  00062C  0100               	movlb	0	; () banked
  8128  00062E  299B               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  8129  000630  ECE9  F010         	call	_ToMainHigh_sendmsg
  8130                           
  8131                           ;my_i2c.c: 398: ic_ptr->buflen = 0;
  8132  000634  0100               	movlb	0	; () banked
  8133  000636  EE20 F00A          	lfsr	2,10
  8134  00063A  D04B               	goto	L7
  8135  00063C                     i2l4400:
  8136                           
  8137                           ; BSR set to: 0
  8138  00063C  0100               	movlb	0	; () banked
  8139  00063E  EE20 F00F          	lfsr	2,15
  8140  000642  0100               	movlb	0	; () banked
  8141  000644  51C3               	movf	_ic_ptr& (0+255),w,b
  8142  000646  26D9               	addwf	fsr2l,f,c
  8143  000648  0100               	movlb	0	; () banked
  8144  00064A  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8145  00064C  22DA               	addwfc	fsr2h,f,c
  8146  00064E  50DF               	movf	indf2,w,c
  8147  000650  B4D8               	btfsc	status,2,c
  8148  000652  D047               	goto	i2l4408
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;my_i2c.c: 400: error_buf[0] = ic_ptr->error_count;
  8152  000654  0100               	movlb	0	; () banked
  8153  000656  EE20 F00F          	lfsr	2,15
  8154  00065A  0100               	movlb	0	; () banked
  8155  00065C  51C3               	movf	_ic_ptr& (0+255),w,b
  8156  00065E  26D9               	addwf	fsr2l,f,c
  8157  000660  0100               	movlb	0	; () banked
  8158  000662  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8159  000664  22DA               	addwfc	fsr2h,f,c
  8160  000666  50DF               	movf	indf2,w,c
  8161  000668  0100               	movlb	0	; () banked
  8162  00066A  0100               	movlb	0	; () banked
  8163  00066C  6FA1               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  8164                           
  8165                           ;my_i2c.c: 401: error_buf[1] = ic_ptr->error_code;
  8166  00066E  0100               	movlb	0	; () banked
  8167  000670  EE20 F00E          	lfsr	2,14
  8168  000674  0100               	movlb	0	; () banked
  8169  000676  51C3               	movf	_ic_ptr& (0+255),w,b
  8170  000678  26D9               	addwf	fsr2l,f,c
  8171  00067A  0100               	movlb	0	; () banked
  8172  00067C  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8173  00067E  22DA               	addwfc	fsr2h,f,c
  8174  000680  50DF               	movf	indf2,w,c
  8175  000682  0100               	movlb	0	; () banked
  8176  000684  0100               	movlb	0	; () banked
  8177  000686  6FA2               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  8178                           
  8179                           ;my_i2c.c: 402: error_buf[2] = ic_ptr->event_count;
  8180  000688  0100               	movlb	0	; () banked
  8181  00068A  EE20 F00C          	lfsr	2,12
  8182  00068E  0100               	movlb	0	; () banked
  8183  000690  51C3               	movf	_ic_ptr& (0+255),w,b
  8184  000692  26D9               	addwf	fsr2l,f,c
  8185  000694  0100               	movlb	0	; () banked
  8186  000696  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8187  000698  22DA               	addwfc	fsr2h,f,c
  8188  00069A  50DF               	movf	indf2,w,c
  8189  00069C  0100               	movlb	0	; () banked
  8190  00069E  0100               	movlb	0	; () banked
  8191  0006A0  6FA3               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  8192                           
  8193                           ; BSR set to: 0
  8194                           ;my_i2c.c: 403: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8195  0006A2  0100               	movlb	0	; () banked
  8196  0006A4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8197  0006A6  0E29               	movlw	41
  8198  0006A8  0100               	movlb	0	; () banked
  8199  0006AA  0100               	movlb	0	; () banked
  8200  0006AC  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8201  0006AE  0100               	movlb	0	; () banked
  8202  0006B0  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8203  0006B2  0100               	movlb	0	; () banked
  8204  0006B4  0E00               	movlw	high i2c_slave_int_handler@error_buf
  8205  0006B6  0100               	movlb	0	; () banked
  8206  0006B8  0100               	movlb	0	; () banked
  8207  0006BA  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8208  0006BC  0100               	movlb	0	; () banked
  8209  0006BE  0EA1               	movlw	low i2c_slave_int_handler@error_buf
  8210  0006C0  0100               	movlb	0	; () banked
  8211  0006C2  0100               	movlb	0	; () banked
  8212  0006C4  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8213  0006C6  0E03               	movlw	3
  8214  0006C8  ECE9  F010         	call	_ToMainHigh_sendmsg
  8215                           
  8216                           ;my_i2c.c: 404: ic_ptr->error_count = 0;
  8217  0006CC  0100               	movlb	0	; () banked
  8218  0006CE  EE20 F00F          	lfsr	2,15
  8219  0006D2                     L7:
  8220  0006D2  0100               	movlb	0	; () banked
  8221  0006D4  51C3               	movf	_ic_ptr& (0+255),w,b
  8222  0006D6  26D9               	addwf	fsr2l,f,c
  8223  0006D8  0100               	movlb	0	; () banked
  8224  0006DA  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8225  0006DC  22DA               	addwfc	fsr2h,f,c
  8226  0006DE  0E00               	movlw	0
  8227  0006E0  6EDF               	movwf	indf2,c
  8228  0006E2                     i2l4408:
  8229                           
  8230                           ; BSR set to: 0
  8231                           ;my_i2c.c: 405: }
  8232                           ;my_i2c.c: 406: if (msg_to_send) {
  8233  0006E2  0100               	movlb	0	; () banked
  8234  0006E4  0100               	movlb	0	; () banked
  8235  0006E6  51A9               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  8236  0006E8  B4D8               	btfsc	status,2,c
  8237  0006EA  0012               	return	
  8238                           
  8239                           ; BSR set to: 0
  8240                           ;my_i2c.c: 407: int length = 0;
  8241  0006EC  0E00               	movlw	0
  8242  0006EE  0100               	movlb	0	; () banked
  8243  0006F0  0100               	movlb	0	; () banked
  8244  0006F2  6FA7               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  8245  0006F4  0E00               	movlw	0
  8246  0006F6  0100               	movlb	0	; () banked
  8247  0006F8  6FA6               	movwf	i2c_slave_int_handler@length& (0+255),b
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;my_i2c.c: 411: if(ic_ptr->buffer[0] == 0xAA){
  8251  0006FA  0EAA               	movlw	170
  8252  0006FC  C0C3  FFD9         	movff	_ic_ptr,fsr2l
  8253  000700  C0C4  FFDA         	movff	_ic_ptr+1,fsr2h
  8254  000704  62DF               	cpfseq	indf2,c
  8255  000706  D020               	goto	i2l4420
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;my_i2c.c: 412: length = 5;
  8259  000708  0E00               	movlw	0
  8260  00070A  0100               	movlb	0	; () banked
  8261  00070C  0100               	movlb	0	; () banked
  8262  00070E  6FA7               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  8263  000710  0E05               	movlw	5
  8264  000712  0100               	movlb	0	; () banked
  8265  000714  6FA6               	movwf	i2c_slave_int_handler@length& (0+255),b
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;my_i2c.c: 414: unsigned char sensormsg[5] = {0x01, 0x01, 0x02, 0x03, ((0x01 + 0x02 + 0x
      +                          03) & 0x17)};
  8269  000716  EE20  F0BC         	lfsr	2,i2c_slave_int_handler@F5133
  8270  00071A  EE10  F09C         	lfsr	1,i2c_slave_int_handler@sensormsg
  8271  00071E  0E05               	movlw	5
  8272  000720                     i2u359_41:
  8273  000720  CFDE FFE6          	movff	postinc2,postinc1
  8274  000724  2EE8               	decfsz	wreg,f,c
  8275  000726  D7FC               	goto	i2u359_41
  8276                           
  8277                           ; BSR set to: 0
  8278                           ;my_i2c.c: 415: start_i2c_slave_reply(length, sensormsg);
  8279  000728  0100               	movlb	0	; () banked
  8280  00072A  0E00               	movlw	high i2c_slave_int_handler@sensormsg
  8281  00072C  0100               	movlb	0	; () banked
  8282  00072E  0100               	movlb	0	; () banked
  8283  000730  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  8284  000732  0100               	movlb	0	; () banked
  8285  000734  0E9C               	movlw	low i2c_slave_int_handler@sensormsg
  8286  000736  0100               	movlb	0	; () banked
  8287  000738  0100               	movlb	0	; () banked
  8288  00073A  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
  8289  00073C  0100               	movlb	0	; () banked
  8290  00073E  0100               	movlb	0	; () banked
  8291  000740  51A6               	movf	i2c_slave_int_handler@length& (0+255),w,b
  8292  000742  EC14  F009         	call	_start_i2c_slave_reply
  8293                           
  8294                           ;my_i2c.c: 417: } else if(ic_ptr->buffer[0] == 0xBA){
  8295  000746  D0EF               	goto	i2l4454
  8296  000748                     i2l4420:
  8297  000748  0EBA               	movlw	186
  8298  00074A  C0C3  FFD9         	movff	_ic_ptr,fsr2l
  8299  00074E  C0C4  FFDA         	movff	_ic_ptr+1,fsr2h
  8300  000752  62DF               	cpfseq	indf2,c
  8301  000754  D0E8               	goto	i2l4454
  8302                           
  8303                           ;my_i2c.c: 419: length = 5;
  8304  000756  0E00               	movlw	0
  8305  000758  0100               	movlb	0	; () banked
  8306  00075A  0100               	movlb	0	; () banked
  8307  00075C  6FA7               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  8308  00075E  0E05               	movlw	5
  8309  000760  0100               	movlb	0	; () banked
  8310  000762  6FA6               	movwf	i2c_slave_int_handler@length& (0+255),b
  8311                           
  8312                           ; BSR set to: 0
  8313                           ;my_i2c.c: 423: unsigned char motorcomm[2] = {0x9F, 0x1F};
  8314  000764  C0C1  F0AB         	movff	i2c_slave_int_handler@F5135,i2c_slave_int_handler@motorcomm
  8315  000768  C0C2  F0AC         	movff	i2c_slave_int_handler@F5135+1,i2c_slave_int_handler@motorcomm+1
  8316                           
  8317                           ; BSR set to: 0
  8318                           ;my_i2c.c: 424: if(ic_ptr->buffer[1] == 0xFF){
  8319  00076C  0100               	movlb	0	; () banked
  8320  00076E  EE20 F001          	lfsr	2,1
  8321  000772  0100               	movlb	0	; () banked
  8322  000774  51C3               	movf	_ic_ptr& (0+255),w,b
  8323  000776  26D9               	addwf	fsr2l,f,c
  8324  000778  0100               	movlb	0	; () banked
  8325  00077A  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8326  00077C  22DA               	addwfc	fsr2h,f,c
  8327  00077E  0EFF               	movlw	255
  8328  000780  62DF               	cpfseq	indf2,c
  8329  000782  D017               	goto	i2l4430
  8330                           
  8331                           ; BSR set to: 0
  8332                           ;my_i2c.c: 425: motorMove(ic_ptr->buffer[2], motorcomm);
  8333  000784  0100               	movlb	0	; () banked
  8334  000786  0E00               	movlw	high i2c_slave_int_handler@motorcomm
  8335  000788  0100               	movlb	0	; () banked
  8336  00078A  0100               	movlb	0	; () banked
  8337  00078C  6F86               	movwf	(motorMove@direction+1)& (0+255),b
  8338  00078E  0100               	movlb	0	; () banked
  8339  000790  0EAB               	movlw	low i2c_slave_int_handler@motorcomm
  8340  000792  0100               	movlb	0	; () banked
  8341  000794  0100               	movlb	0	; () banked
  8342  000796  6F85               	movwf	motorMove@direction& (0+255),b
  8343  000798  0100               	movlb	0	; () banked
  8344  00079A  EE20 F002          	lfsr	2,2
  8345  00079E  0100               	movlb	0	; () banked
  8346  0007A0  51C3               	movf	_ic_ptr& (0+255),w,b
  8347  0007A2  26D9               	addwf	fsr2l,f,c
  8348  0007A4  0100               	movlb	0	; () banked
  8349  0007A6  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8350  0007A8  22DA               	addwfc	fsr2h,f,c
  8351  0007AA  50DF               	movf	indf2,w,c
  8352  0007AC  EC7C  F011         	call	_motorMove
  8353                           
  8354                           ;my_i2c.c: 426: } else if(ic_ptr->buffer[1] == 0xBB){
  8355  0007B0  D0BA               	goto	i2l4454
  8356  0007B2                     i2l4430:
  8357  0007B2  0100               	movlb	0	; () banked
  8358  0007B4  EE20 F001          	lfsr	2,1
  8359  0007B8  0100               	movlb	0	; () banked
  8360  0007BA  51C3               	movf	_ic_ptr& (0+255),w,b
  8361  0007BC  26D9               	addwf	fsr2l,f,c
  8362  0007BE  0100               	movlb	0	; () banked
  8363  0007C0  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8364  0007C2  22DA               	addwfc	fsr2h,f,c
  8365  0007C4  0EBB               	movlw	187
  8366  0007C6  62DF               	cpfseq	indf2,c
  8367  0007C8  D027               	goto	i2l4436
  8368                           
  8369                           ; BSR set to: 0
  8370                           ;my_i2c.c: 427: motorcomm[0] = 0xE1;
  8371  0007CA  0100               	movlb	0	; () banked
  8372  0007CC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8373  0007CE  0EE1               	movlw	225
  8374  0007D0  0100               	movlb	0	; () banked
  8375  0007D2  0100               	movlb	0	; () banked
  8376  0007D4  6FAB               	movwf	i2c_slave_int_handler@motorcomm& (0+255),b
  8377  0007D6  0100               	movlb	0	; () banked
  8378  0007D8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8379                           
  8380                           ;my_i2c.c: 428: motorcomm[1] = 0x62;
  8381  0007DA  0100               	movlb	0	; () banked
  8382  0007DC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8383  0007DE  0E62               	movlw	98
  8384  0007E0  0100               	movlb	0	; () banked
  8385  0007E2  0100               	movlb	0	; () banked
  8386  0007E4  6FAC               	movwf	(i2c_slave_int_handler@motorcomm+1)& (0+255),b
  8387  0007E6  0100               	movlb	0	; () banked
  8388  0007E8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8389                           
  8390                           ; BSR set to: 0
  8391                           ;my_i2c.c: 429: motorMove(ic_ptr->buffer[2], motorcomm);
  8392  0007EA  0100               	movlb	0	; () banked
  8393  0007EC  0E00               	movlw	high i2c_slave_int_handler@motorcomm
  8394  0007EE  0100               	movlb	0	; () banked
  8395  0007F0  0100               	movlb	0	; () banked
  8396  0007F2  6F86               	movwf	(motorMove@direction+1)& (0+255),b
  8397  0007F4  0100               	movlb	0	; () banked
  8398  0007F6  0EAB               	movlw	low i2c_slave_int_handler@motorcomm
  8399  0007F8  0100               	movlb	0	; () banked
  8400  0007FA  0100               	movlb	0	; () banked
  8401  0007FC  6F85               	movwf	motorMove@direction& (0+255),b
  8402  0007FE  0100               	movlb	0	; () banked
  8403  000800  EE20 F002          	lfsr	2,2
  8404  000804  0100               	movlb	0	; () banked
  8405  000806  51C3               	movf	_ic_ptr& (0+255),w,b
  8406  000808  26D9               	addwf	fsr2l,f,c
  8407  00080A  0100               	movlb	0	; () banked
  8408  00080C  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8409  00080E  22DA               	addwfc	fsr2h,f,c
  8410  000810  50DF               	movf	indf2,w,c
  8411  000812  EC7C  F011         	call	_motorMove
  8412                           
  8413                           ;my_i2c.c: 430: } else if(ic_ptr->buffer[1] == 0x22){
  8414  000816  D087               	goto	i2l4454
  8415  000818                     i2l4436:
  8416  000818  0100               	movlb	0	; () banked
  8417  00081A  EE20 F001          	lfsr	2,1
  8418  00081E  0100               	movlb	0	; () banked
  8419  000820  51C3               	movf	_ic_ptr& (0+255),w,b
  8420  000822  26D9               	addwf	fsr2l,f,c
  8421  000824  0100               	movlb	0	; () banked
  8422  000826  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8423  000828  22DA               	addwfc	fsr2h,f,c
  8424  00082A  0E22               	movlw	34
  8425  00082C  62DF               	cpfseq	indf2,c
  8426  00082E  D027               	goto	i2l4442
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;my_i2c.c: 431: motorcomm[0] = 0xE1;
  8430  000830  0100               	movlb	0	; () banked
  8431  000832  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8432  000834  0EE1               	movlw	225
  8433  000836  0100               	movlb	0	; () banked
  8434  000838  0100               	movlb	0	; () banked
  8435  00083A  6FAB               	movwf	i2c_slave_int_handler@motorcomm& (0+255),b
  8436  00083C  0100               	movlb	0	; () banked
  8437  00083E  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8438                           
  8439                           ;my_i2c.c: 432: motorcomm[1] = 0x1F;
  8440  000840  0100               	movlb	0	; () banked
  8441  000842  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8442  000844  0E1F               	movlw	31
  8443  000846  0100               	movlb	0	; () banked
  8444  000848  0100               	movlb	0	; () banked
  8445  00084A  6FAC               	movwf	(i2c_slave_int_handler@motorcomm+1)& (0+255),b
  8446  00084C  0100               	movlb	0	; () banked
  8447  00084E  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;my_i2c.c: 433: motorMove(ic_ptr->buffer[2], motorcomm);
  8451  000850  0100               	movlb	0	; () banked
  8452  000852  0E00               	movlw	high i2c_slave_int_handler@motorcomm
  8453  000854  0100               	movlb	0	; () banked
  8454  000856  0100               	movlb	0	; () banked
  8455  000858  6F86               	movwf	(motorMove@direction+1)& (0+255),b
  8456  00085A  0100               	movlb	0	; () banked
  8457  00085C  0EAB               	movlw	low i2c_slave_int_handler@motorcomm
  8458  00085E  0100               	movlb	0	; () banked
  8459  000860  0100               	movlb	0	; () banked
  8460  000862  6F85               	movwf	motorMove@direction& (0+255),b
  8461  000864  0100               	movlb	0	; () banked
  8462  000866  EE20 F002          	lfsr	2,2
  8463  00086A  0100               	movlb	0	; () banked
  8464  00086C  51C3               	movf	_ic_ptr& (0+255),w,b
  8465  00086E  26D9               	addwf	fsr2l,f,c
  8466  000870  0100               	movlb	0	; () banked
  8467  000872  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8468  000874  22DA               	addwfc	fsr2h,f,c
  8469  000876  50DF               	movf	indf2,w,c
  8470  000878  EC7C  F011         	call	_motorMove
  8471                           
  8472                           ;my_i2c.c: 434: } else if(ic_ptr->buffer[1] == 0x55){
  8473  00087C  D054               	goto	i2l4454
  8474  00087E                     i2l4442:
  8475  00087E  0100               	movlb	0	; () banked
  8476  000880  EE20 F001          	lfsr	2,1
  8477  000884  0100               	movlb	0	; () banked
  8478  000886  51C3               	movf	_ic_ptr& (0+255),w,b
  8479  000888  26D9               	addwf	fsr2l,f,c
  8480  00088A  0100               	movlb	0	; () banked
  8481  00088C  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8482  00088E  22DA               	addwfc	fsr2h,f,c
  8483  000890  0E55               	movlw	85
  8484  000892  62DF               	cpfseq	indf2,c
  8485  000894  D027               	goto	i2l4448
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;my_i2c.c: 435: motorcomm[0] = 0x9F;
  8489  000896  0100               	movlb	0	; () banked
  8490  000898  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8491  00089A  0E9F               	movlw	159
  8492  00089C  0100               	movlb	0	; () banked
  8493  00089E  0100               	movlb	0	; () banked
  8494  0008A0  6FAB               	movwf	i2c_slave_int_handler@motorcomm& (0+255),b
  8495  0008A2  0100               	movlb	0	; () banked
  8496  0008A4  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8497                           
  8498                           ;my_i2c.c: 436: motorcomm[1] = 0x62;
  8499  0008A6  0100               	movlb	0	; () banked
  8500  0008A8  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8501  0008AA  0E62               	movlw	98
  8502  0008AC  0100               	movlb	0	; () banked
  8503  0008AE  0100               	movlb	0	; () banked
  8504  0008B0  6FAC               	movwf	(i2c_slave_int_handler@motorcomm+1)& (0+255),b
  8505  0008B2  0100               	movlb	0	; () banked
  8506  0008B4  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8507                           
  8508                           ; BSR set to: 0
  8509                           ;my_i2c.c: 437: motorMove(ic_ptr->buffer[2], motorcomm);
  8510  0008B6  0100               	movlb	0	; () banked
  8511  0008B8  0E00               	movlw	high i2c_slave_int_handler@motorcomm
  8512  0008BA  0100               	movlb	0	; () banked
  8513  0008BC  0100               	movlb	0	; () banked
  8514  0008BE  6F86               	movwf	(motorMove@direction+1)& (0+255),b
  8515  0008C0  0100               	movlb	0	; () banked
  8516  0008C2  0EAB               	movlw	low i2c_slave_int_handler@motorcomm
  8517  0008C4  0100               	movlb	0	; () banked
  8518  0008C6  0100               	movlb	0	; () banked
  8519  0008C8  6F85               	movwf	motorMove@direction& (0+255),b
  8520  0008CA  0100               	movlb	0	; () banked
  8521  0008CC  EE20 F002          	lfsr	2,2
  8522  0008D0  0100               	movlb	0	; () banked
  8523  0008D2  51C3               	movf	_ic_ptr& (0+255),w,b
  8524  0008D4  26D9               	addwf	fsr2l,f,c
  8525  0008D6  0100               	movlb	0	; () banked
  8526  0008D8  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8527  0008DA  22DA               	addwfc	fsr2h,f,c
  8528  0008DC  50DF               	movf	indf2,w,c
  8529  0008DE  EC7C  F011         	call	_motorMove
  8530                           
  8531                           ;my_i2c.c: 438: } else if(ic_ptr->buffer[1] == 0x00){
  8532  0008E2  D021               	goto	i2l4454
  8533  0008E4                     i2l4448:
  8534  0008E4  0100               	movlb	0	; () banked
  8535  0008E6  EE20 F001          	lfsr	2,1
  8536  0008EA  0100               	movlb	0	; () banked
  8537  0008EC  51C3               	movf	_ic_ptr& (0+255),w,b
  8538  0008EE  26D9               	addwf	fsr2l,f,c
  8539  0008F0  0100               	movlb	0	; () banked
  8540  0008F2  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8541  0008F4  22DA               	addwfc	fsr2h,f,c
  8542  0008F6  50DF               	movf	indf2,w,c
  8543  0008F8  A4D8               	btfss	status,2,c
  8544  0008FA  D015               	goto	i2l4454
  8545                           
  8546                           ; BSR set to: 0
  8547                           ;my_i2c.c: 439: motorcomm[0] = 0x00;
  8548  0008FC  0100               	movlb	0	; () banked
  8549  0008FE  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8550  000900  0E00               	movlw	0
  8551  000902  0100               	movlb	0	; () banked
  8552  000904  0100               	movlb	0	; () banked
  8553  000906  6FAB               	movwf	i2c_slave_int_handler@motorcomm& (0+255),b
  8554  000908  0100               	movlb	0	; () banked
  8555  00090A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8556                           
  8557                           ; BSR set to: 0
  8558                           ;my_i2c.c: 440: motorMove(0, motorcomm);
  8559  00090C  0100               	movlb	0	; () banked
  8560  00090E  0E00               	movlw	high i2c_slave_int_handler@motorcomm
  8561  000910  0100               	movlb	0	; () banked
  8562  000912  0100               	movlb	0	; () banked
  8563  000914  6F86               	movwf	(motorMove@direction+1)& (0+255),b
  8564  000916  0100               	movlb	0	; () banked
  8565  000918  0EAB               	movlw	low i2c_slave_int_handler@motorcomm
  8566  00091A  0100               	movlb	0	; () banked
  8567  00091C  0100               	movlb	0	; () banked
  8568  00091E  6F85               	movwf	motorMove@direction& (0+255),b
  8569  000920  0E00               	movlw	0
  8570  000922  EC7C  F011         	call	_motorMove
  8571  000926                     i2l4454:
  8572                           
  8573                           ;my_i2c.c: 441: }
  8574                           ;my_i2c.c: 443: }
  8575                           ;my_i2c.c: 444: msg_to_send = 0;
  8576  000926  0100               	movlb	0	; () banked
  8577  000928  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8578  00092A  0E00               	movlw	0
  8579  00092C  0100               	movlb	0	; () banked
  8580  00092E  0100               	movlb	0	; () banked
  8581  000930  6FA9               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  8582  000932  0100               	movlb	0	; () banked
  8583  000934  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8584  000936  0012               	return	
  8585  000938                     __end_of_i2c_slave_int_handler:
  8586                           	opt stack 0
  8587                           pclatu	equ	0xFFB
  8588                           pclath	equ	0xFFA
  8589                           tblptru	equ	0xFF8
  8590                           tblptrh	equ	0xFF7
  8591                           tblptrl	equ	0xFF6
  8592                           tablat	equ	0xFF5
  8593                           prodh	equ	0xFF4
  8594                           prodl	equ	0xFF3
  8595                           intcon	equ	0xFF2
  8596                           intcon2	equ	0xFF1
  8597                           postinc0	equ	0xFEE
  8598                           fsr0h	equ	0xFEA
  8599                           fsr0l	equ	0xFE9
  8600                           wreg	equ	0xFE8
  8601                           indf1	equ	0xFE7
  8602                           postinc1	equ	0xFE6
  8603                           postdec1	equ	0xFE5
  8604                           fsr1h	equ	0xFE2
  8605                           fsr1l	equ	0xFE1
  8606                           bsr	equ	0xFE0
  8607                           indf2	equ	0xFDF
  8608                           postinc2	equ	0xFDE
  8609                           postdec2	equ	0xFDD
  8610                           fsr2h	equ	0xFDA
  8611                           fsr2l	equ	0xFD9
  8612                           status	equ	0xFD8
  8613                           
  8614 ;; *************** function _start_i2c_slave_reply *****************
  8615 ;; Defined at:
  8616 ;;		line 92 in file "../src/my_i2c.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  length          1    wreg     unsigned char 
  8619 ;;  msg             2    0[BANK0 ] PTR unsigned char 
  8620 ;;		 -> timer0_int_handler@motormsg(5), i2c_slave_int_handler@sensormsg(5), 
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;  length          1    4[BANK0 ] unsigned char 
  8623 ;; Return value:  Size  Location     Type
  8624 ;;		None               void
  8625 ;; Registers used:
  8626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8627 ;; Tracked objects:
  8628 ;;		On entry : 0/0
  8629 ;;		On exit  : 0/0
  8630 ;;		Unchanged: 0/0
  8631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8632 ;;      Params:         0       2       0       0       0
  8633 ;;      Locals:         0       1       0       0       0
  8634 ;;      Temps:          0       2       0       0       0
  8635 ;;      Totals:         0       5       0       0       0
  8636 ;;Total ram usage:        5 bytes
  8637 ;; Hardware stack levels used:    1
  8638 ;; This function calls:
  8639 ;;		Nothing
  8640 ;; This function is called by:
  8641 ;;		_i2c_slave_int_handler
  8642 ;;		_timer0_int_handler
  8643 ;; This function uses a non-reentrant model
  8644 ;;
  8645                           
  8646                           	psect	text47
  8647  001228                     __ptext47:
  8648                           	opt stack 0
  8649  001228                     _start_i2c_slave_reply:
  8650                           	opt stack 19
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;incstack = 0
  8654                           ;start_i2c_slave_reply@length stored from wreg
  8655  001228  CFE8 F084          	movff	wreg,start_i2c_slave_reply@length
  8656                           
  8657                           ;my_i2c.c: 94: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  8658  00122C  0100               	movlb	0	; () banked
  8659  00122E  EE20 F01A          	lfsr	2,26
  8660  001232  0100               	movlb	0	; () banked
  8661  001234  51C3               	movf	_ic_ptr& (0+255),w,b
  8662  001236  26D9               	addwf	fsr2l,f,c
  8663  001238  0100               	movlb	0	; () banked
  8664  00123A  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8665  00123C  22DA               	addwfc	fsr2h,f,c
  8666  00123E  0E00               	movlw	0
  8667  001240  6EDF               	movwf	indf2,c
  8668  001242  D042               	goto	i2l4252
  8669  001244                     i2l4248:
  8670                           
  8671                           ; BSR set to: 0
  8672                           ;my_i2c.c: 95: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  8673  001244  0100               	movlb	0	; () banked
  8674  001246  EE20 F01A          	lfsr	2,26
  8675  00124A  0100               	movlb	0	; () banked
  8676  00124C  51C3               	movf	_ic_ptr& (0+255),w,b
  8677  00124E  26D9               	addwf	fsr2l,f,c
  8678  001250  0100               	movlb	0	; () banked
  8679  001252  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8680  001254  22DA               	addwfc	fsr2h,f,c
  8681  001256  50DF               	movf	indf2,w,c
  8682  001258  0100               	movlb	0	; () banked
  8683  00125A  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8684  00125C  0100               	movlb	0	; () banked
  8685  00125E  5182               	movf	??_start_i2c_slave_reply& (0+255),w,b
  8686  001260  0D01               	mullw	1
  8687  001262  50F3               	movf	prodl,w,c
  8688  001264  0100               	movlb	0	; () banked
  8689  001266  0100               	movlb	0	; () banked
  8690  001268  2580               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  8691  00126A  6ED9               	movwf	fsr2l,c
  8692  00126C  50F4               	movf	prodh,w,c
  8693  00126E  0100               	movlb	0	; () banked
  8694  001270  0100               	movlb	0	; () banked
  8695  001272  2181               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  8696  001274  6EDA               	movwf	fsr2h,c
  8697  001276  0100               	movlb	0	; () banked
  8698  001278  EE10 F01A          	lfsr	1,26
  8699  00127C  0100               	movlb	0	; () banked
  8700  00127E  51C3               	movf	_ic_ptr& (0+255),w,b
  8701  001280  26E1               	addwf	fsr1l,f,c
  8702  001282  0100               	movlb	0	; () banked
  8703  001284  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8704  001286  22E2               	addwfc	fsr1h,f,c
  8705  001288  50E7               	movf	indf1,w,c
  8706  00128A  0100               	movlb	0	; () banked
  8707  00128C  6F83               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  8708  00128E  0100               	movlb	0	; () banked
  8709  001290  5183               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  8710  001292  0D01               	mullw	1
  8711  001294  0E10               	movlw	16
  8712  001296  26F3               	addwf	prodl,f,c
  8713  001298  0E00               	movlw	0
  8714  00129A  22F4               	addwfc	prodh,f,c
  8715  00129C  50F3               	movf	prodl,w,c
  8716  00129E  0100               	movlb	0	; () banked
  8717  0012A0  0100               	movlb	0	; () banked
  8718  0012A2  25C3               	addwf	_ic_ptr& (0+255),w,b
  8719  0012A4  6EE1               	movwf	fsr1l,c
  8720  0012A6  50F4               	movf	prodh,w,c
  8721  0012A8  0100               	movlb	0	; () banked
  8722  0012AA  0100               	movlb	0	; () banked
  8723  0012AC  21C4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8724  0012AE  6EE2               	movwf	fsr1h,c
  8725  0012B0  CFDF FFE7          	movff	indf2,indf1
  8726                           
  8727                           ; BSR set to: 0
  8728  0012B4  0100               	movlb	0	; () banked
  8729  0012B6  EE20 F01A          	lfsr	2,26
  8730  0012BA  0100               	movlb	0	; () banked
  8731  0012BC  51C3               	movf	_ic_ptr& (0+255),w,b
  8732  0012BE  26D9               	addwf	fsr2l,f,c
  8733  0012C0  0100               	movlb	0	; () banked
  8734  0012C2  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8735  0012C4  22DA               	addwfc	fsr2h,f,c
  8736  0012C6  2ADF               	incf	indf2,f,c
  8737  0012C8                     i2l4252:
  8738                           
  8739                           ; BSR set to: 0
  8740  0012C8  0100               	movlb	0	; () banked
  8741  0012CA  EE20 F01A          	lfsr	2,26
  8742  0012CE  0100               	movlb	0	; () banked
  8743  0012D0  51C3               	movf	_ic_ptr& (0+255),w,b
  8744  0012D2  26D9               	addwf	fsr2l,f,c
  8745  0012D4  0100               	movlb	0	; () banked
  8746  0012D6  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8747  0012D8  22DA               	addwfc	fsr2h,f,c
  8748  0012DA  50DF               	movf	indf2,w,c
  8749  0012DC  0100               	movlb	0	; () banked
  8750  0012DE  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8751  0012E0  0100               	movlb	0	; () banked
  8752  0012E2  0100               	movlb	0	; () banked
  8753  0012E4  5184               	movf	start_i2c_slave_reply@length& (0+255),w,b
  8754  0012E6  0100               	movlb	0	; () banked
  8755  0012E8  5D82               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  8756  0012EA  A0D8               	btfss	status,0,c
  8757  0012EC  D7AB               	goto	i2l4248
  8758                           
  8759                           ; BSR set to: 0
  8760                           ;my_i2c.c: 96: }
  8761                           ;my_i2c.c: 97: ic_ptr->outbuflen = length;
  8762                           
  8763                           ; BSR set to: 0
  8764  0012EE  0100               	movlb	0	; () banked
  8765  0012F0  EE20 F01A          	lfsr	2,26
  8766  0012F4  0100               	movlb	0	; () banked
  8767  0012F6  51C3               	movf	_ic_ptr& (0+255),w,b
  8768  0012F8  26D9               	addwf	fsr2l,f,c
  8769  0012FA  0100               	movlb	0	; () banked
  8770  0012FC  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8771  0012FE  22DA               	addwfc	fsr2h,f,c
  8772  001300  0100               	movlb	0	; () banked
  8773  001302  C084  FFDF         	movff	start_i2c_slave_reply@length,indf2
  8774                           
  8775                           ;my_i2c.c: 98: ic_ptr->outbufind = 1;
  8776  001306  0100               	movlb	0	; () banked
  8777  001308  EE20 F01B          	lfsr	2,27
  8778  00130C  0100               	movlb	0	; () banked
  8779  00130E  51C3               	movf	_ic_ptr& (0+255),w,b
  8780  001310  26D9               	addwf	fsr2l,f,c
  8781  001312  0100               	movlb	0	; () banked
  8782  001314  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8783  001316  22DA               	addwfc	fsr2h,f,c
  8784  001318  0E01               	movlw	1
  8785  00131A  6EDF               	movwf	indf2,c
  8786                           
  8787                           ;my_i2c.c: 101: SSPBUF = ic_ptr->outbuffer[0];
  8788  00131C  0100               	movlb	0	; () banked
  8789  00131E  EE20 F010          	lfsr	2,16
  8790  001322  0100               	movlb	0	; () banked
  8791  001324  51C3               	movf	_ic_ptr& (0+255),w,b
  8792  001326  26D9               	addwf	fsr2l,f,c
  8793  001328  0100               	movlb	0	; () banked
  8794  00132A  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  8795  00132C  22DA               	addwfc	fsr2h,f,c
  8796  00132E  50DF               	movf	indf2,w,c
  8797  001330  6EC9               	movwf	4041,c	;volatile
  8798                           
  8799                           ; BSR set to: 0
  8800                           ;my_i2c.c: 104: SSPCON1bits.CKP = 1;
  8801  001332  88C6               	bsf	4038,4,c	;volatile
  8802                           
  8803                           ; BSR set to: 0
  8804  001334  0012               	return	
  8805  001336                     __end_of_start_i2c_slave_reply:
  8806                           	opt stack 0
  8807                           pclatu	equ	0xFFB
  8808                           pclath	equ	0xFFA
  8809                           tblptru	equ	0xFF8
  8810                           tblptrh	equ	0xFF7
  8811                           tblptrl	equ	0xFF6
  8812                           tablat	equ	0xFF5
  8813                           prodh	equ	0xFF4
  8814                           prodl	equ	0xFF3
  8815                           intcon	equ	0xFF2
  8816                           intcon2	equ	0xFF1
  8817                           postinc0	equ	0xFEE
  8818                           fsr0h	equ	0xFEA
  8819                           fsr0l	equ	0xFE9
  8820                           wreg	equ	0xFE8
  8821                           indf1	equ	0xFE7
  8822                           postinc1	equ	0xFE6
  8823                           postdec1	equ	0xFE5
  8824                           fsr1h	equ	0xFE2
  8825                           fsr1l	equ	0xFE1
  8826                           bsr	equ	0xFE0
  8827                           indf2	equ	0xFDF
  8828                           postinc2	equ	0xFDE
  8829                           postdec2	equ	0xFDD
  8830                           fsr2h	equ	0xFDA
  8831                           fsr2l	equ	0xFD9
  8832                           status	equ	0xFD8
  8833                           
  8834 ;; *************** function _motorMove *****************
  8835 ;; Defined at:
  8836 ;;		line 5 in file "../src/motor.c"
  8837 ;; Parameters:    Size  Location     Type
  8838 ;;  distance        1    wreg     unsigned char 
  8839 ;;  direction       2    5[BANK0 ] PTR unsigned char 
  8840 ;;		 -> timer0_int_handler@motorcomm(2), i2c_slave_int_handler@motorcomm(2), 
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;  distance        1    7[BANK0 ] unsigned char 
  8843 ;; Return value:  Size  Location     Type
  8844 ;;		None               void
  8845 ;; Registers used:
  8846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8852 ;;      Params:         0       2       0       0       0
  8853 ;;      Locals:         0       1       0       0       0
  8854 ;;      Temps:          0       0       0       0       0
  8855 ;;      Totals:         0       3       0       0       0
  8856 ;;Total ram usage:        3 bytes
  8857 ;; Hardware stack levels used:    1
  8858 ;; Hardware stack levels required when called:    1
  8859 ;; This function calls:
  8860 ;;		i2_uart_trans
  8861 ;; This function is called by:
  8862 ;;		_i2c_slave_int_handler
  8863 ;;		_timer0_int_handler
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text48
  8868  0022F8                     __ptext48:
  8869                           	opt stack 0
  8870  0022F8                     _motorMove:
  8871                           	opt stack 18
  8872                           
  8873                           ; BSR set to: 0
  8874                           ;incstack = 0
  8875                           ;motorMove@distance stored from wreg
  8876  0022F8  CFE8 F087          	movff	wreg,motorMove@distance
  8877                           
  8878                           ;motor.c: 7: distDesired = distance;
  8879  0022FC  C087  F04F         	movff	motorMove@distance,_distDesired
  8880                           
  8881                           ;motor.c: 8: uart_trans(2, direction);
  8882  002300  0100               	movlb	0	; () banked
  8883  002302  0100               	movlb	0	; () banked
  8884  002304  C086  F081         	movff	motorMove@direction+1,i2uart_trans@data+1
  8885  002308  0100               	movlb	0	; () banked
  8886  00230A  0100               	movlb	0	; () banked
  8887  00230C  C085  F080         	movff	motorMove@direction,i2uart_trans@data
  8888  002310  0E02               	movlw	2
  8889  002312  ECA2  F00B         	call	i2_uart_trans
  8890  002316  0012               	return	
  8891  002318                     __end_of_motorMove:
  8892                           	opt stack 0
  8893                           pclatu	equ	0xFFB
  8894                           pclath	equ	0xFFA
  8895                           tblptru	equ	0xFF8
  8896                           tblptrh	equ	0xFF7
  8897                           tblptrl	equ	0xFF6
  8898                           tablat	equ	0xFF5
  8899                           prodh	equ	0xFF4
  8900                           prodl	equ	0xFF3
  8901                           intcon	equ	0xFF2
  8902                           intcon2	equ	0xFF1
  8903                           postinc0	equ	0xFEE
  8904                           fsr0h	equ	0xFEA
  8905                           fsr0l	equ	0xFE9
  8906                           wreg	equ	0xFE8
  8907                           indf1	equ	0xFE7
  8908                           postinc1	equ	0xFE6
  8909                           postdec1	equ	0xFE5
  8910                           fsr1h	equ	0xFE2
  8911                           fsr1l	equ	0xFE1
  8912                           bsr	equ	0xFE0
  8913                           indf2	equ	0xFDF
  8914                           postinc2	equ	0xFDE
  8915                           postdec2	equ	0xFDD
  8916                           fsr2h	equ	0xFDA
  8917                           fsr2l	equ	0xFD9
  8918                           status	equ	0xFD8
  8919                           
  8920 ;; *************** function i2_uart_trans *****************
  8921 ;; Defined at:
  8922 ;;		line 61 in file "../src/my_uart.c"
  8923 ;; Parameters:    Size  Location     Type
  8924 ;;  length          1    wreg     unsigned char 
  8925 ;;  data            2    0[BANK0 ] PTR unsigned char 
  8926 ;;		 -> timer0_int_handler@motorcomm(2), i2c_slave_int_handler@motorcomm(2), main@msgbuffer(11), 
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;  length          1    4[BANK0 ] unsigned char 
  8929 ;; Return value:  Size  Location     Type
  8930 ;;		None               void
  8931 ;; Registers used:
  8932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8938 ;;      Params:         0       2       0       0       0
  8939 ;;      Locals:         0       1       0       0       0
  8940 ;;      Temps:          0       2       0       0       0
  8941 ;;      Totals:         0       5       0       0       0
  8942 ;;Total ram usage:        5 bytes
  8943 ;; Hardware stack levels used:    1
  8944 ;; This function calls:
  8945 ;;		Nothing
  8946 ;; This function is called by:
  8947 ;;		_motorMove
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           	psect	text49
  8952  001744                     __ptext49:
  8953                           	opt stack 0
  8954  001744                     i2_uart_trans:
  8955                           	opt stack 18
  8956                           
  8957                           ;incstack = 0
  8958                           ;i2uart_trans@length stored from wreg
  8959  001744  CFE8 F084          	movff	wreg,i2uart_trans@length
  8960                           
  8961                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  8962  001748  EE20 F00B          	lfsr	2,11
  8963  00174C  5056               	movf	_uc_ptr,w,c
  8964  00174E  26D9               	addwf	fsr2l,f,c
  8965  001750  5057               	movf	_uc_ptr+1,w,c
  8966  001752  22DA               	addwfc	fsr2h,f,c
  8967  001754  0E00               	movlw	0
  8968  001756  6EDF               	movwf	indf2,c
  8969  001758  D035               	goto	i2l4636
  8970  00175A                     i2l4632:
  8971                           
  8972                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  8973  00175A  EE20 F00B          	lfsr	2,11
  8974  00175E  5056               	movf	_uc_ptr,w,c
  8975  001760  26D9               	addwf	fsr2l,f,c
  8976  001762  5057               	movf	_uc_ptr+1,w,c
  8977  001764  22DA               	addwfc	fsr2h,f,c
  8978  001766  50DF               	movf	indf2,w,c
  8979  001768  0100               	movlb	0	; () banked
  8980  00176A  6F82               	movwf	??i2_uart_trans& (0+255),b
  8981  00176C  0100               	movlb	0	; () banked
  8982  00176E  5182               	movf	??i2_uart_trans& (0+255),w,b
  8983  001770  0D01               	mullw	1
  8984  001772  50F3               	movf	prodl,w,c
  8985  001774  0100               	movlb	0	; () banked
  8986  001776  0100               	movlb	0	; () banked
  8987  001778  2580               	addwf	i2uart_trans@data& (0+255),w,b
  8988  00177A  6ED9               	movwf	fsr2l,c
  8989  00177C  50F4               	movf	prodh,w,c
  8990  00177E  0100               	movlb	0	; () banked
  8991  001780  0100               	movlb	0	; () banked
  8992  001782  2181               	addwfc	(i2uart_trans@data+1)& (0+255),w,b
  8993  001784  6EDA               	movwf	fsr2h,c
  8994  001786  EE10 F00B          	lfsr	1,11
  8995  00178A  5056               	movf	_uc_ptr,w,c
  8996  00178C  26E1               	addwf	fsr1l,f,c
  8997  00178E  5057               	movf	_uc_ptr+1,w,c
  8998  001790  22E2               	addwfc	fsr1h,f,c
  8999  001792  50E7               	movf	indf1,w,c
  9000  001794  0100               	movlb	0	; () banked
  9001  001796  6F83               	movwf	(??i2_uart_trans+1)& (0+255),b
  9002  001798  0100               	movlb	0	; () banked
  9003  00179A  5183               	movf	(??i2_uart_trans+1)& (0+255),w,b
  9004  00179C  0D01               	mullw	1
  9005  00179E  0E06               	movlw	6
  9006  0017A0  26F3               	addwf	prodl,f,c
  9007  0017A2  0E00               	movlw	0
  9008  0017A4  22F4               	addwfc	prodh,f,c
  9009  0017A6  50F3               	movf	prodl,w,c
  9010  0017A8  2456               	addwf	_uc_ptr,w,c
  9011  0017AA  6EE1               	movwf	fsr1l,c
  9012  0017AC  50F4               	movf	prodh,w,c
  9013  0017AE  2057               	addwfc	_uc_ptr+1,w,c
  9014  0017B0  6EE2               	movwf	fsr1h,c
  9015  0017B2  CFDF FFE7          	movff	indf2,indf1
  9016                           
  9017                           ; BSR set to: 0
  9018  0017B6  EE20 F00B          	lfsr	2,11
  9019  0017BA  5056               	movf	_uc_ptr,w,c
  9020  0017BC  26D9               	addwf	fsr2l,f,c
  9021  0017BE  5057               	movf	_uc_ptr+1,w,c
  9022  0017C0  22DA               	addwfc	fsr2h,f,c
  9023  0017C2  2ADF               	incf	indf2,f,c
  9024  0017C4                     i2l4636:
  9025  0017C4  EE20 F00B          	lfsr	2,11
  9026  0017C8  5056               	movf	_uc_ptr,w,c
  9027  0017CA  26D9               	addwf	fsr2l,f,c
  9028  0017CC  5057               	movf	_uc_ptr+1,w,c
  9029  0017CE  22DA               	addwfc	fsr2h,f,c
  9030  0017D0  50DF               	movf	indf2,w,c
  9031  0017D2  0100               	movlb	0	; () banked
  9032  0017D4  6F82               	movwf	??i2_uart_trans& (0+255),b
  9033  0017D6  0100               	movlb	0	; () banked
  9034  0017D8  0100               	movlb	0	; () banked
  9035  0017DA  5184               	movf	i2uart_trans@length& (0+255),w,b
  9036  0017DC  0100               	movlb	0	; () banked
  9037  0017DE  5D82               	subwf	??i2_uart_trans& (0+255),w,b
  9038  0017E0  A0D8               	btfss	status,0,c
  9039  0017E2  D7BB               	goto	i2l4632
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;my_uart.c: 67: }
  9043                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  9044                           
  9045                           ; BSR set to: 0
  9046  0017E4  EE20 F00C          	lfsr	2,12
  9047  0017E8  5056               	movf	_uc_ptr,w,c
  9048  0017EA  26D9               	addwf	fsr2l,f,c
  9049  0017EC  5057               	movf	_uc_ptr+1,w,c
  9050  0017EE  22DA               	addwfc	fsr2h,f,c
  9051  0017F0  0E00               	movlw	0
  9052  0017F2  6EDF               	movwf	indf2,c
  9053                           
  9054                           ; BSR set to: 0
  9055                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  9056  0017F4  889D               	bsf	3997,4,c	;volatile
  9057                           
  9058                           ; BSR set to: 0
  9059  0017F6  0012               	return	
  9060  0017F8                     __end_ofi2_uart_trans:
  9061                           	opt stack 0
  9062                           pclatu	equ	0xFFB
  9063                           pclath	equ	0xFFA
  9064                           tblptru	equ	0xFF8
  9065                           tblptrh	equ	0xFF7
  9066                           tblptrl	equ	0xFF6
  9067                           tablat	equ	0xFF5
  9068                           prodh	equ	0xFF4
  9069                           prodl	equ	0xFF3
  9070                           intcon	equ	0xFF2
  9071                           intcon2	equ	0xFF1
  9072                           postinc0	equ	0xFEE
  9073                           fsr0h	equ	0xFEA
  9074                           fsr0l	equ	0xFE9
  9075                           wreg	equ	0xFE8
  9076                           indf1	equ	0xFE7
  9077                           postinc1	equ	0xFE6
  9078                           postdec1	equ	0xFE5
  9079                           fsr1h	equ	0xFE2
  9080                           fsr1l	equ	0xFE1
  9081                           bsr	equ	0xFE0
  9082                           indf2	equ	0xFDF
  9083                           postinc2	equ	0xFDE
  9084                           postdec2	equ	0xFDD
  9085                           fsr2h	equ	0xFDA
  9086                           fsr2l	equ	0xFD9
  9087                           status	equ	0xFD8
  9088                           
  9089 ;; *************** function _handle_start *****************
  9090 ;; Defined at:
  9091 ;;		line 110 in file "../src/my_i2c.c"
  9092 ;; Parameters:    Size  Location     Type
  9093 ;;  data_read       1    wreg     unsigned char 
  9094 ;; Auto vars:     Size  Location     Type
  9095 ;;  data_read       1    0[BANK0 ] unsigned char 
  9096 ;; Return value:  Size  Location     Type
  9097 ;;		None               void
  9098 ;; Registers used:
  9099 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9100 ;; Tracked objects:
  9101 ;;		On entry : 0/0
  9102 ;;		On exit  : 0/0
  9103 ;;		Unchanged: 0/0
  9104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9105 ;;      Params:         0       0       0       0       0
  9106 ;;      Locals:         0       1       0       0       0
  9107 ;;      Temps:          0       0       0       0       0
  9108 ;;      Totals:         0       1       0       0       0
  9109 ;;Total ram usage:        1 bytes
  9110 ;; Hardware stack levels used:    1
  9111 ;; This function calls:
  9112 ;;		Nothing
  9113 ;; This function is called by:
  9114 ;;		_i2c_slave_int_handler
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           	psect	text50
  9119  001444                     __ptext50:
  9120                           	opt stack 0
  9121  001444                     _handle_start:
  9122                           	opt stack 18
  9123                           
  9124                           ; BSR set to: 0
  9125                           ;incstack = 0
  9126                           ;handle_start@data_read stored from wreg
  9127  001444  CFE8 F080          	movff	wreg,handle_start@data_read
  9128                           
  9129                           ;my_i2c.c: 111: ic_ptr->event_count = 1;
  9130  001448  0100               	movlb	0	; () banked
  9131  00144A  EE20 F00C          	lfsr	2,12
  9132  00144E  0100               	movlb	0	; () banked
  9133  001450  51C3               	movf	_ic_ptr& (0+255),w,b
  9134  001452  26D9               	addwf	fsr2l,f,c
  9135  001454  0100               	movlb	0	; () banked
  9136  001456  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  9137  001458  22DA               	addwfc	fsr2h,f,c
  9138  00145A  0E01               	movlw	1
  9139  00145C  6EDF               	movwf	indf2,c
  9140                           
  9141                           ;my_i2c.c: 112: ic_ptr->buflen = 0;
  9142  00145E  0100               	movlb	0	; () banked
  9143  001460  EE20 F00A          	lfsr	2,10
  9144  001464  0100               	movlb	0	; () banked
  9145  001466  51C3               	movf	_ic_ptr& (0+255),w,b
  9146  001468  26D9               	addwf	fsr2l,f,c
  9147  00146A  0100               	movlb	0	; () banked
  9148  00146C  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  9149  00146E  22DA               	addwfc	fsr2h,f,c
  9150  001470  0E00               	movlw	0
  9151  001472  6EDF               	movwf	indf2,c
  9152                           
  9153                           ; BSR set to: 0
  9154                           ;my_i2c.c: 114: if (data_read) {
  9155  001474  0100               	movlb	0	; () banked
  9156  001476  0100               	movlb	0	; () banked
  9157  001478  5180               	movf	handle_start@data_read& (0+255),w,b
  9158  00147A  B4D8               	btfsc	status,2,c
  9159  00147C  D03D               	goto	i2l4270
  9160                           
  9161                           ; BSR set to: 0
  9162                           ;my_i2c.c: 115: if (SSPSTATbits.D_A == 1) {
  9163  00147E  AAC7               	btfss	4039,5,c	;volatile
  9164  001480  D021               	goto	i2l311
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;my_i2c.c: 118: ic_ptr->status = 0x5;
  9168  001482  0100               	movlb	0	; () banked
  9169  001484  EE20 F00D          	lfsr	2,13
  9170  001488  0100               	movlb	0	; () banked
  9171  00148A  51C3               	movf	_ic_ptr& (0+255),w,b
  9172  00148C  26D9               	addwf	fsr2l,f,c
  9173  00148E  0100               	movlb	0	; () banked
  9174  001490  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  9175  001492  22DA               	addwfc	fsr2h,f,c
  9176  001494  0E05               	movlw	5
  9177  001496  6EDF               	movwf	indf2,c
  9178                           
  9179                           ;my_i2c.c: 119: ic_ptr->error_count++;
  9180  001498  0100               	movlb	0	; () banked
  9181  00149A  EE20 F00F          	lfsr	2,15
  9182  00149E  0100               	movlb	0	; () banked
  9183  0014A0  51C3               	movf	_ic_ptr& (0+255),w,b
  9184  0014A2  26D9               	addwf	fsr2l,f,c
  9185  0014A4  0100               	movlb	0	; () banked
  9186  0014A6  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  9187  0014A8  22DA               	addwfc	fsr2h,f,c
  9188  0014AA  2ADF               	incf	indf2,f,c
  9189                           
  9190                           ;my_i2c.c: 120: ic_ptr->error_code = 0x5;
  9191  0014AC  0100               	movlb	0	; () banked
  9192  0014AE  EE20 F00E          	lfsr	2,14
  9193  0014B2  0100               	movlb	0	; () banked
  9194  0014B4  51C3               	movf	_ic_ptr& (0+255),w,b
  9195  0014B6  26D9               	addwf	fsr2l,f,c
  9196  0014B8  0100               	movlb	0	; () banked
  9197  0014BA  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  9198  0014BC  22DA               	addwfc	fsr2h,f,c
  9199  0014BE  0E05               	movlw	5
  9200  0014C0  6EDF               	movwf	indf2,c
  9201                           
  9202                           ;my_i2c.c: 121: } else {
  9203  0014C2  0012               	return	
  9204  0014C4                     i2l311:
  9205                           
  9206                           ; BSR set to: 0
  9207                           ;my_i2c.c: 122: if (SSPSTATbits.R_W == 1) {
  9208  0014C4  A4C7               	btfss	4039,2,c	;volatile
  9209  0014C6  D00C               	goto	i2l4268
  9210                           
  9211                           ; BSR set to: 0
  9212                           ;my_i2c.c: 123: ic_ptr->status = 0x8;
  9213  0014C8  0100               	movlb	0	; () banked
  9214  0014CA  EE20 F00D          	lfsr	2,13
  9215  0014CE  0100               	movlb	0	; () banked
  9216  0014D0  51C3               	movf	_ic_ptr& (0+255),w,b
  9217  0014D2  26D9               	addwf	fsr2l,f,c
  9218  0014D4  0100               	movlb	0	; () banked
  9219  0014D6  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  9220  0014D8  22DA               	addwfc	fsr2h,f,c
  9221  0014DA  0E08               	movlw	8
  9222  0014DC  6EDF               	movwf	indf2,c
  9223                           
  9224                           ;my_i2c.c: 124: } else {
  9225  0014DE  0012               	return	
  9226  0014E0                     i2l4268:
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;my_i2c.c: 125: ic_ptr->status = 0x7;
  9230  0014E0  0100               	movlb	0	; () banked
  9231  0014E2  EE20 F00D          	lfsr	2,13
  9232  0014E6  0100               	movlb	0	; () banked
  9233  0014E8  51C3               	movf	_ic_ptr& (0+255),w,b
  9234  0014EA  26D9               	addwf	fsr2l,f,c
  9235  0014EC  0100               	movlb	0	; () banked
  9236  0014EE  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  9237  0014F0  22DA               	addwfc	fsr2h,f,c
  9238  0014F2  0E07               	movlw	7
  9239  0014F4  6EDF               	movwf	indf2,c
  9240  0014F6  0012               	return	
  9241  0014F8                     i2l4270:
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;my_i2c.c: 129: ic_ptr->status = 0x6;
  9245  0014F8  0100               	movlb	0	; () banked
  9246  0014FA  EE20 F00D          	lfsr	2,13
  9247  0014FE  0100               	movlb	0	; () banked
  9248  001500  51C3               	movf	_ic_ptr& (0+255),w,b
  9249  001502  26D9               	addwf	fsr2l,f,c
  9250  001504  0100               	movlb	0	; () banked
  9251  001506  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  9252  001508  22DA               	addwfc	fsr2h,f,c
  9253  00150A  0E06               	movlw	6
  9254  00150C  6EDF               	movwf	indf2,c
  9255  00150E  0012               	return	
  9256  001510                     __end_of_handle_start:
  9257                           	opt stack 0
  9258                           pclatu	equ	0xFFB
  9259                           pclath	equ	0xFFA
  9260                           tblptru	equ	0xFF8
  9261                           tblptrh	equ	0xFF7
  9262                           tblptrl	equ	0xFF6
  9263                           tablat	equ	0xFF5
  9264                           prodh	equ	0xFF4
  9265                           prodl	equ	0xFF3
  9266                           intcon	equ	0xFF2
  9267                           intcon2	equ	0xFF1
  9268                           postinc0	equ	0xFEE
  9269                           fsr0h	equ	0xFEA
  9270                           fsr0l	equ	0xFE9
  9271                           wreg	equ	0xFE8
  9272                           indf1	equ	0xFE7
  9273                           postinc1	equ	0xFE6
  9274                           postdec1	equ	0xFE5
  9275                           fsr1h	equ	0xFE2
  9276                           fsr1l	equ	0xFE1
  9277                           bsr	equ	0xFE0
  9278                           indf2	equ	0xFDF
  9279                           postinc2	equ	0xFDE
  9280                           postdec2	equ	0xFDD
  9281                           fsr2h	equ	0xFDA
  9282                           fsr2l	equ	0xFD9
  9283                           status	equ	0xFD8
  9284                           
  9285 ;; *************** function _ToMainHigh_sendmsg *****************
  9286 ;; Defined at:
  9287 ;;		line 126 in file "../src/messages.c"
  9288 ;; Parameters:    Size  Location     Type
  9289 ;;  length          1    wreg     unsigned char 
  9290 ;;  msgtype         1   22[BANK0 ] unsigned char 
  9291 ;;  data            2   23[BANK0 ] PTR void 
  9292 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), 
  9293 ;; Auto vars:     Size  Location     Type
  9294 ;;  length          1   25[BANK0 ] unsigned char 
  9295 ;; Return value:  Size  Location     Type
  9296 ;;                  1    wreg      char 
  9297 ;; Registers used:
  9298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9299 ;; Tracked objects:
  9300 ;;		On entry : 0/0
  9301 ;;		On exit  : 0/0
  9302 ;;		Unchanged: 0/0
  9303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9304 ;;      Params:         0       3       0       0       0
  9305 ;;      Locals:         0       1       0       0       0
  9306 ;;      Temps:          0       0       0       0       0
  9307 ;;      Totals:         0       4       0       0       0
  9308 ;;Total ram usage:        4 bytes
  9309 ;; Hardware stack levels used:    1
  9310 ;; Hardware stack levels required when called:    2
  9311 ;; This function calls:
  9312 ;;		i2_send_msg
  9313 ;; This function is called by:
  9314 ;;		_i2c_slave_int_handler
  9315 ;;		_i2c_master_int_handler
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319                           	psect	text51
  9320  0021D2                     __ptext51:
  9321                           	opt stack 0
  9322  0021D2                     _ToMainHigh_sendmsg:
  9323                           	opt stack 16
  9324                           
  9325                           ; BSR set to: 0
  9326                           ;incstack = 0
  9327                           ;ToMainHigh_sendmsg@length stored from wreg
  9328  0021D2  CFE8 F099          	movff	wreg,ToMainHigh_sendmsg@length
  9329                           
  9330                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  9331                           ;	Return value of _ToMainHigh_sendmsg is never used
  9332  0021D6  0101               	movlb	1	; () banked
  9333  0021D8  0E01               	movlw	high _ToMainHigh_MQ
  9334  0021DA  0100               	movlb	0	; () banked
  9335  0021DC  0100               	movlb	0	; () banked
  9336  0021DE  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  9337  0021E0  0101               	movlb	1	; () banked
  9338  0021E2  0E00               	movlw	low _ToMainHigh_MQ
  9339  0021E4  0100               	movlb	0	; () banked
  9340  0021E6  0100               	movlb	0	; () banked
  9341  0021E8  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  9342  0021EA  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  9343  0021EE  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  9344  0021F2  0100               	movlb	0	; () banked
  9345  0021F4  0100               	movlb	0	; () banked
  9346  0021F6  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  9347  0021FA  0100               	movlb	0	; () banked
  9348  0021FC  0100               	movlb	0	; () banked
  9349  0021FE  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  9350  002202  ECF7  F007         	call	i2_send_msg	;wreg free
  9351  002206  0012               	return	
  9352  002208                     __end_of_ToMainHigh_sendmsg:
  9353                           	opt stack 0
  9354                           pclatu	equ	0xFFB
  9355                           pclath	equ	0xFFA
  9356                           tblptru	equ	0xFF8
  9357                           tblptrh	equ	0xFF7
  9358                           tblptrl	equ	0xFF6
  9359                           tablat	equ	0xFF5
  9360                           prodh	equ	0xFF4
  9361                           prodl	equ	0xFF3
  9362                           intcon	equ	0xFF2
  9363                           intcon2	equ	0xFF1
  9364                           postinc0	equ	0xFEE
  9365                           fsr0h	equ	0xFEA
  9366                           fsr0l	equ	0xFE9
  9367                           wreg	equ	0xFE8
  9368                           indf1	equ	0xFE7
  9369                           postinc1	equ	0xFE6
  9370                           postdec1	equ	0xFE5
  9371                           fsr1h	equ	0xFE2
  9372                           fsr1l	equ	0xFE1
  9373                           bsr	equ	0xFE0
  9374                           indf2	equ	0xFDF
  9375                           postinc2	equ	0xFDE
  9376                           postdec2	equ	0xFDD
  9377                           fsr2h	equ	0xFDA
  9378                           fsr2l	equ	0xFD9
  9379                           status	equ	0xFD8
  9380                           
  9381 ;; *************** function i2_send_msg *****************
  9382 ;; Defined at:
  9383 ;;		line 24 in file "../src/messages.c"
  9384 ;; Parameters:    Size  Location     Type
  9385 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  9386 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9387 ;;  length          1   12[BANK0 ] unsigned char 
  9388 ;;  msgtype         1   13[BANK0 ] unsigned char 
  9389 ;;  data            2   14[BANK0 ] PTR void 
  9390 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  9391 ;;		 -> main@uc(13), 
  9392 ;; Auto vars:     Size  Location     Type
  9393 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  9394 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  9395 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9396 ;;  send_msg        2   17[BANK0 ] unsigned int 
  9397 ;;  send_msg        1   19[BANK0 ] unsigned char 
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  1    wreg      char 
  9400 ;; Registers used:
  9401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9407 ;;      Params:         0       6       0       0       0
  9408 ;;      Locals:         0       5       0       0       0
  9409 ;;      Temps:          0       1       0       0       0
  9410 ;;      Totals:         0      12       0       0       0
  9411 ;;Total ram usage:       12 bytes
  9412 ;; Hardware stack levels used:    1
  9413 ;; Hardware stack levels required when called:    1
  9414 ;; This function calls:
  9415 ;;		i2___awmod
  9416 ;;		i2_memcpy
  9417 ;; This function is called by:
  9418 ;;		_ToMainHigh_sendmsg
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           	psect	text52
  9423  000FEE                     __ptext52:
  9424                           	opt stack 0
  9425  000FEE                     i2_send_msg:
  9426                           	opt stack 16
  9427                           
  9428                           ;messages.c: 25: unsigned char slot;
  9429                           ;messages.c: 27: msg *qmsg;
  9430                           ;messages.c: 28: size_t tlength = length;
  9431                           
  9432                           ;incstack = 0
  9433  000FEE  0100               	movlb	0	; () banked
  9434  000FF0  0100               	movlb	0	; () banked
  9435  000FF2  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  9436  000FF6  0100               	movlb	0	; () banked
  9437  000FF8  0100               	movlb	0	; () banked
  9438  000FFA  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  9439                           
  9440                           ; BSR set to: 0
  9441                           ;messages.c: 38: slot = qptr->cur_write_ind;
  9442  000FFC  0100               	movlb	0	; () banked
  9443  000FFE  EE20 F041          	lfsr	2,65
  9444  001002  0100               	movlb	0	; () banked
  9445  001004  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9446  001006  26D9               	addwf	fsr2l,f,c
  9447  001008  0100               	movlb	0	; () banked
  9448  00100A  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9449  00100C  22DA               	addwfc	fsr2h,f,c
  9450  00100E  50DF               	movf	indf2,w,c
  9451  001010  0100               	movlb	0	; () banked
  9452  001012  0100               	movlb	0	; () banked
  9453  001014  6F93               	movwf	i2send_msg@slot& (0+255),b
  9454                           
  9455                           ; BSR set to: 0
  9456                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  9457  001016  0100               	movlb	0	; () banked
  9458  001018  0100               	movlb	0	; () banked
  9459  00101A  5193               	movf	i2send_msg@slot& (0+255),w,b
  9460  00101C  0D0D               	mullw	13
  9461  00101E  50F3               	movf	prodl,w,c
  9462  001020  0100               	movlb	0	; () banked
  9463  001022  0100               	movlb	0	; () banked
  9464  001024  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  9465  001026  0100               	movlb	0	; () banked
  9466  001028  0100               	movlb	0	; () banked
  9467  00102A  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  9468  00102C  50F4               	movf	prodh,w,c
  9469  00102E  0100               	movlb	0	; () banked
  9470  001030  0100               	movlb	0	; () banked
  9471  001032  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  9472  001034  0100               	movlb	0	; () banked
  9473  001036  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;messages.c: 41: if (qmsg->full != 0) {
  9477  001038  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9478  00103C  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9479  001040  50DF               	movf	indf2,w,c
  9480  001042  B4D8               	btfsc	status,2,c
  9481  001044  D002               	goto	i2l4614
  9482                           
  9483                           ; BSR set to: 0
  9484                           ;messages.c: 42: return (-1);
  9485  001046  0EFF               	movlw	255
  9486  001048  0012               	return	
  9487  00104A                     i2l4614:
  9488                           
  9489                           ; BSR set to: 0
  9490                           ;messages.c: 43: }
  9491                           ;messages.c: 46: qmsg->length = length;
  9492  00104A  0100               	movlb	0	; () banked
  9493  00104C  EE20 F001          	lfsr	2,1
  9494  001050  0100               	movlb	0	; () banked
  9495  001052  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  9496  001054  26D9               	addwf	fsr2l,f,c
  9497  001056  0100               	movlb	0	; () banked
  9498  001058  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9499  00105A  22DA               	addwfc	fsr2h,f,c
  9500  00105C  0100               	movlb	0	; () banked
  9501  00105E  C08C  FFDF         	movff	i2send_msg@length,indf2
  9502                           
  9503                           ;messages.c: 47: qmsg->msgtype = msgtype;
  9504  001062  0100               	movlb	0	; () banked
  9505  001064  EE20 F002          	lfsr	2,2
  9506  001068  0100               	movlb	0	; () banked
  9507  00106A  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  9508  00106C  26D9               	addwf	fsr2l,f,c
  9509  00106E  0100               	movlb	0	; () banked
  9510  001070  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9511  001072  22DA               	addwfc	fsr2h,f,c
  9512  001074  0100               	movlb	0	; () banked
  9513  001076  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9517  00107A  0E03               	movlw	3
  9518  00107C  0100               	movlb	0	; () banked
  9519  00107E  0100               	movlb	0	; () banked
  9520  001080  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  9521  001082  0100               	movlb	0	; () banked
  9522  001084  0100               	movlb	0	; () banked
  9523  001086  6F80               	movwf	i2memcpy@d1& (0+255),b
  9524  001088  0E00               	movlw	0
  9525  00108A  0100               	movlb	0	; () banked
  9526  00108C  0100               	movlb	0	; () banked
  9527  00108E  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  9528  001090  0100               	movlb	0	; () banked
  9529  001092  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  9530  001094  0100               	movlb	0	; () banked
  9531  001096  0100               	movlb	0	; () banked
  9532  001098  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9533  00109C  0100               	movlb	0	; () banked
  9534  00109E  0100               	movlb	0	; () banked
  9535  0010A0  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  9536  0010A4  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  9537  0010A8  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9538  0010AC  EC9E  F00F         	call	i2_memcpy	;wreg free
  9539                           
  9540                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  9541  0010B0  0100               	movlb	0	; () banked
  9542  0010B2  EE20 F041          	lfsr	2,65
  9543  0010B6  0100               	movlb	0	; () banked
  9544  0010B8  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9545  0010BA  26D9               	addwf	fsr2l,f,c
  9546  0010BC  0100               	movlb	0	; () banked
  9547  0010BE  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9548  0010C0  22DA               	addwfc	fsr2h,f,c
  9549  0010C2  0100               	movlb	0	; () banked
  9550  0010C4  EE10 F041          	lfsr	1,65
  9551  0010C8  0100               	movlb	0	; () banked
  9552  0010CA  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9553  0010CC  26E1               	addwf	fsr1l,f,c
  9554  0010CE  0100               	movlb	0	; () banked
  9555  0010D0  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9556  0010D2  22E2               	addwfc	fsr1h,f,c
  9557  0010D4  50E7               	movf	indf1,w,c
  9558  0010D6  0100               	movlb	0	; () banked
  9559  0010D8  6F90               	movwf	??i2_send_msg& (0+255),b
  9560  0010DA  0E01               	movlw	1
  9561  0010DC  0100               	movlb	0	; () banked
  9562  0010DE  2590               	addwf	??i2_send_msg& (0+255),w,b
  9563  0010E0  0100               	movlb	0	; () banked
  9564  0010E2  0100               	movlb	0	; () banked
  9565  0010E4  6F80               	movwf	i2___awmod@dividend& (0+255),b
  9566  0010E6  0100               	movlb	0	; () banked
  9567  0010E8  0100               	movlb	0	; () banked
  9568  0010EA  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  9569  0010EC  0E00               	movlw	0
  9570  0010EE  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  9571  0010F0  0E00               	movlw	0
  9572  0010F2  0100               	movlb	0	; () banked
  9573  0010F4  0100               	movlb	0	; () banked
  9574  0010F6  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  9575  0010F8  0E05               	movlw	5
  9576  0010FA  0100               	movlb	0	; () banked
  9577  0010FC  6F82               	movwf	i2___awmod@divisor& (0+255),b
  9578  0010FE  EC9B  F009         	call	i2___awmod	;wreg free
  9579  001102  0100               	movlb	0	; () banked
  9580  001104  0100               	movlb	0	; () banked
  9581  001106  5180               	movf	?i2___awmod& (0+255),w,b
  9582  001108  6EDF               	movwf	indf2,c
  9583                           
  9584                           ; BSR set to: 0
  9585                           ;messages.c: 59: qmsg->full = 1;
  9586  00110A  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9587  00110E  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9588  001112  0E01               	movlw	1
  9589  001114  6EDF               	movwf	indf2,c
  9590                           
  9591                           ; BSR set to: 0
  9592                           ;messages.c: 60: return (1);
  9593  001116  0E01               	movlw	1
  9594  001118  0012               	return	
  9595  00111A                     __end_ofi2_send_msg:
  9596                           	opt stack 0
  9597                           pclatu	equ	0xFFB
  9598                           pclath	equ	0xFFA
  9599                           tblptru	equ	0xFF8
  9600                           tblptrh	equ	0xFF7
  9601                           tblptrl	equ	0xFF6
  9602                           tablat	equ	0xFF5
  9603                           prodh	equ	0xFF4
  9604                           prodl	equ	0xFF3
  9605                           intcon	equ	0xFF2
  9606                           intcon2	equ	0xFF1
  9607                           postinc0	equ	0xFEE
  9608                           fsr0h	equ	0xFEA
  9609                           fsr0l	equ	0xFE9
  9610                           wreg	equ	0xFE8
  9611                           indf1	equ	0xFE7
  9612                           postinc1	equ	0xFE6
  9613                           postdec1	equ	0xFE5
  9614                           fsr1h	equ	0xFE2
  9615                           fsr1l	equ	0xFE1
  9616                           bsr	equ	0xFE0
  9617                           indf2	equ	0xFDF
  9618                           postinc2	equ	0xFDE
  9619                           postdec2	equ	0xFDD
  9620                           fsr2h	equ	0xFDA
  9621                           fsr2l	equ	0xFD9
  9622                           status	equ	0xFD8
  9623                           
  9624 ;; *************** function i2_memcpy *****************
  9625 ;; Defined at:
  9626 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  9627 ;; Parameters:    Size  Location     Type
  9628 ;;  d1              2    0[BANK0 ] PTR void 
  9629 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  9630 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9631 ;;		 -> main@msgbuffer(11), 
  9632 ;;  s1              2    2[BANK0 ] PTR const void 
  9633 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9634 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9635 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  9636 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  9637 ;;		 -> main@uc(13), 
  9638 ;;  n               2    4[BANK0 ] unsigned int 
  9639 ;; Auto vars:     Size  Location     Type
  9640 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9641 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9642 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9643 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  9644 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  9645 ;;		 -> main@uc(13), 
  9646 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9647 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  9648 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9649 ;;		 -> main@msgbuffer(11), 
  9650 ;; Return value:  Size  Location     Type
  9651 ;;                  2    0[BANK0 ] PTR void 
  9652 ;; Registers used:
  9653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9654 ;; Tracked objects:
  9655 ;;		On entry : 0/0
  9656 ;;		On exit  : 0/0
  9657 ;;		Unchanged: 0/0
  9658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9659 ;;      Params:         0       6       0       0       0
  9660 ;;      Locals:         0       4       0       0       0
  9661 ;;      Temps:          0       0       0       0       0
  9662 ;;      Totals:         0      10       0       0       0
  9663 ;;Total ram usage:       10 bytes
  9664 ;; Hardware stack levels used:    1
  9665 ;; This function calls:
  9666 ;;		Nothing
  9667 ;; This function is called by:
  9668 ;;		i2_send_msg
  9669 ;; This function uses a non-reentrant model
  9670 ;;
  9671                           
  9672                           	psect	text53
  9673  001F3C                     __ptext53:
  9674                           	opt stack 0
  9675  001F3C                     i2_memcpy:
  9676                           	opt stack 16
  9677                           
  9678                           ; BSR set to: 0
  9679                           ;incstack = 0
  9680  001F3C  0100               	movlb	0	; () banked
  9681  001F3E  0100               	movlb	0	; () banked
  9682  001F40  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9683  001F44  0100               	movlb	0	; () banked
  9684  001F46  0100               	movlb	0	; () banked
  9685  001F48  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  9686  001F4C  0100               	movlb	0	; () banked
  9687  001F4E  0100               	movlb	0	; () banked
  9688  001F50  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9689  001F54  0100               	movlb	0	; () banked
  9690  001F56  0100               	movlb	0	; () banked
  9691  001F58  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  9692  001F5C  D012               	goto	i2l4650
  9693  001F5E                     i2l4644:
  9694                           
  9695                           ; BSR set to: 0
  9696  001F5E  C088  FFD9         	movff	i2memcpy@s,fsr2l
  9697  001F62  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  9698  001F66  C086  FFE1         	movff	i2memcpy@d,fsr1l
  9699  001F6A  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  9700  001F6E  CFDF FFE7          	movff	indf2,indf1
  9701                           
  9702                           ; BSR set to: 0
  9703  001F72  0100               	movlb	0	; () banked
  9704  001F74  0100               	movlb	0	; () banked
  9705  001F76  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  9706  001F78  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  9707                           
  9708                           ; BSR set to: 0
  9709  001F7A  0100               	movlb	0	; () banked
  9710  001F7C  0100               	movlb	0	; () banked
  9711  001F7E  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  9712  001F80  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  9713  001F82                     i2l4650:
  9714                           
  9715                           ; BSR set to: 0
  9716  001F82  0100               	movlb	0	; () banked
  9717  001F84  0100               	movlb	0	; () banked
  9718  001F86  0784               	decf	i2memcpy@n& (0+255),f,b
  9719  001F88  A0D8               	btfss	status,0,c
  9720  001F8A  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  9721  001F8C  0100               	movlb	0	; () banked
  9722  001F8E  2984               	incf	i2memcpy@n& (0+255),w,b
  9723  001F90  B4D8               	btfsc	status,2,c
  9724  001F92  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  9725  001F94  B4D8               	btfsc	status,2,c
  9726                           
  9727                           ; BSR set to: 0
  9728                           
  9729                           ; BSR set to: 0
  9730                           ;	Return value of i2_memcpy is never used
  9731  001F96  0012               	return	
  9732  001F98  D7E2               	goto	i2l4644
  9733  001F9A                     __end_ofi2_memcpy:
  9734                           	opt stack 0
  9735                           pclatu	equ	0xFFB
  9736                           pclath	equ	0xFFA
  9737                           tblptru	equ	0xFF8
  9738                           tblptrh	equ	0xFF7
  9739                           tblptrl	equ	0xFF6
  9740                           tablat	equ	0xFF5
  9741                           prodh	equ	0xFF4
  9742                           prodl	equ	0xFF3
  9743                           intcon	equ	0xFF2
  9744                           intcon2	equ	0xFF1
  9745                           postinc0	equ	0xFEE
  9746                           fsr0h	equ	0xFEA
  9747                           fsr0l	equ	0xFE9
  9748                           wreg	equ	0xFE8
  9749                           indf1	equ	0xFE7
  9750                           postinc1	equ	0xFE6
  9751                           postdec1	equ	0xFE5
  9752                           fsr1h	equ	0xFE2
  9753                           fsr1l	equ	0xFE1
  9754                           bsr	equ	0xFE0
  9755                           indf2	equ	0xFDF
  9756                           postinc2	equ	0xFDE
  9757                           postdec2	equ	0xFDD
  9758                           fsr2h	equ	0xFDA
  9759                           fsr2l	equ	0xFD9
  9760                           status	equ	0xFD8
  9761                           
  9762 ;; *************** function i2___awmod *****************
  9763 ;; Defined at:
  9764 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;  dividend        2    0[BANK0 ] int 
  9767 ;;  divisor         2    2[BANK0 ] int 
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;  __awmod         1    6[BANK0 ] unsigned char 
  9770 ;;  __awmod         1    5[BANK0 ] unsigned char 
  9771 ;; Return value:  Size  Location     Type
  9772 ;;                  2    0[BANK0 ] int 
  9773 ;; Registers used:
  9774 ;;		wreg, status,2, status,0, prodl
  9775 ;; Tracked objects:
  9776 ;;		On entry : 0/0
  9777 ;;		On exit  : 0/0
  9778 ;;		Unchanged: 0/0
  9779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9780 ;;      Params:         0       4       0       0       0
  9781 ;;      Locals:         0       2       0       0       0
  9782 ;;      Temps:          0       1       0       0       0
  9783 ;;      Totals:         0       7       0       0       0
  9784 ;;Total ram usage:        7 bytes
  9785 ;; Hardware stack levels used:    1
  9786 ;; This function calls:
  9787 ;;		Nothing
  9788 ;; This function is called by:
  9789 ;;		i2_send_msg
  9790 ;; This function uses a non-reentrant model
  9791 ;;
  9792                           
  9793                           	psect	text54
  9794  001336                     __ptext54:
  9795                           	opt stack 0
  9796  001336                     i2___awmod:
  9797                           	opt stack 16
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;incstack = 0
  9801  001336  0100               	movlb	0	; () banked
  9802  001338  6F84               	movwf	??i2___awmod& (0+255),b
  9803  00133A  0E00               	movlw	0
  9804  00133C  0100               	movlb	0	; () banked
  9805  00133E  0100               	movlb	0	; () banked
  9806  001340  6F86               	movwf	i2___awmod@sign& (0+255),b
  9807  001342  0100               	movlb	0	; () banked
  9808  001344  5184               	movf	??i2___awmod& (0+255),w,b
  9809                           
  9810                           ; BSR set to: 0
  9811  001346  0100               	movlb	0	; () banked
  9812  001348  0100               	movlb	0	; () banked
  9813  00134A  5181               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  9814  00134C  0A80               	xorlw	128
  9815  00134E  6EF3               	movwf	prodl,c
  9816  001350  0E80               	movlw	128
  9817  001352  5CF3               	subwf	prodl,w,c
  9818  001354  0E00               	movlw	0
  9819  001356  B4D8               	btfsc	status,2,c
  9820  001358  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9821  00135A  B0D8               	btfsc	status,0,c
  9822  00135C  D00F               	goto	i2l4660
  9823                           
  9824                           ; BSR set to: 0
  9825  00135E  0100               	movlb	0	; () banked
  9826  001360  0100               	movlb	0	; () banked
  9827  001362  6D80               	negf	i2___awmod@dividend& (0+255),b
  9828  001364  0100               	movlb	0	; () banked
  9829  001366  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9830  001368  B0D8               	btfsc	status,0,c
  9831  00136A  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9832                           
  9833                           ; BSR set to: 0
  9834  00136C  0100               	movlb	0	; () banked
  9835  00136E  6F84               	movwf	??i2___awmod& (0+255),b
  9836  001370  0E01               	movlw	1
  9837  001372  0100               	movlb	0	; () banked
  9838  001374  0100               	movlb	0	; () banked
  9839  001376  6F86               	movwf	i2___awmod@sign& (0+255),b
  9840  001378  0100               	movlb	0	; () banked
  9841  00137A  5184               	movf	??i2___awmod& (0+255),w,b
  9842  00137C                     i2l4660:
  9843                           
  9844                           ; BSR set to: 0
  9845  00137C  0100               	movlb	0	; () banked
  9846  00137E  0100               	movlb	0	; () banked
  9847  001380  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9848  001382  0A80               	xorlw	128
  9849  001384  6EF3               	movwf	prodl,c
  9850  001386  0E80               	movlw	128
  9851  001388  5CF3               	subwf	prodl,w,c
  9852  00138A  0E00               	movlw	0
  9853  00138C  B4D8               	btfsc	status,2,c
  9854  00138E  5D82               	subwf	i2___awmod@divisor& (0+255),w,b
  9855  001390  B0D8               	btfsc	status,0,c
  9856  001392  D007               	goto	i2l4664
  9857                           
  9858                           ; BSR set to: 0
  9859  001394  0100               	movlb	0	; () banked
  9860  001396  0100               	movlb	0	; () banked
  9861  001398  6D82               	negf	i2___awmod@divisor& (0+255),b
  9862  00139A  0100               	movlb	0	; () banked
  9863  00139C  1F83               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  9864  00139E  B0D8               	btfsc	status,0,c
  9865  0013A0  2B83               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  9866  0013A2                     i2l4664:
  9867                           
  9868                           ; BSR set to: 0
  9869  0013A2  0100               	movlb	0	; () banked
  9870  0013A4  0100               	movlb	0	; () banked
  9871  0013A6  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9872  0013A8  1182               	iorwf	i2___awmod@divisor& (0+255),w,b
  9873  0013AA  B4D8               	btfsc	status,2,c
  9874  0013AC  D03A               	goto	i2l4680
  9875                           
  9876                           ; BSR set to: 0
  9877  0013AE  0100               	movlb	0	; () banked
  9878  0013B0  6F84               	movwf	??i2___awmod& (0+255),b
  9879  0013B2  0E01               	movlw	1
  9880  0013B4  0100               	movlb	0	; () banked
  9881  0013B6  0100               	movlb	0	; () banked
  9882  0013B8  6F85               	movwf	i2___awmod@counter& (0+255),b
  9883  0013BA  0100               	movlb	0	; () banked
  9884  0013BC  5184               	movf	??i2___awmod& (0+255),w,b
  9885  0013BE  D009               	goto	i2l4670
  9886  0013C0                     i2l4668:
  9887                           
  9888                           ; BSR set to: 0
  9889  0013C0  0100               	movlb	0	; () banked
  9890  0013C2  0100               	movlb	0	; () banked
  9891  0013C4  0100               	movlb	0	; () banked
  9892  0013C6  90D8               	bcf	status,0,c
  9893  0013C8  3782               	rlcf	i2___awmod@divisor& (0+255),f,b
  9894  0013CA  3783               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  9895  0013CC  0100               	movlb	0	; () banked
  9896  0013CE  0100               	movlb	0	; () banked
  9897  0013D0  2B85               	incf	i2___awmod@counter& (0+255),f,b
  9898  0013D2                     i2l4670:
  9899                           
  9900                           ; BSR set to: 0
  9901  0013D2  0100               	movlb	0	; () banked
  9902  0013D4  0100               	movlb	0	; () banked
  9903  0013D6  AF83               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  9904  0013D8  D7F3               	goto	i2l4668
  9905  0013DA                     i2l4672:
  9906                           
  9907                           ; BSR set to: 0
  9908  0013DA  0100               	movlb	0	; () banked
  9909  0013DC  0100               	movlb	0	; () banked
  9910  0013DE  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9911  0013E0  0100               	movlb	0	; () banked
  9912  0013E2  0100               	movlb	0	; () banked
  9913  0013E4  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9914  0013E6  0100               	movlb	0	; () banked
  9915  0013E8  0100               	movlb	0	; () banked
  9916  0013EA  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9917  0013EC  0100               	movlb	0	; () banked
  9918  0013EE  0100               	movlb	0	; () banked
  9919  0013F0  5981               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  9920  0013F2  A0D8               	btfss	status,0,c
  9921  0013F4  D00C               	goto	i2l4676
  9922                           
  9923                           ; BSR set to: 0
  9924  0013F6  0100               	movlb	0	; () banked
  9925  0013F8  0100               	movlb	0	; () banked
  9926  0013FA  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9927  0013FC  0100               	movlb	0	; () banked
  9928  0013FE  0100               	movlb	0	; () banked
  9929  001400  5F80               	subwf	i2___awmod@dividend& (0+255),f,b
  9930  001402  0100               	movlb	0	; () banked
  9931  001404  0100               	movlb	0	; () banked
  9932  001406  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9933  001408  0100               	movlb	0	; () banked
  9934  00140A  0100               	movlb	0	; () banked
  9935  00140C  5B81               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  9936  00140E                     i2l4676:
  9937                           
  9938                           ; BSR set to: 0
  9939  00140E  0100               	movlb	0	; () banked
  9940  001410  0100               	movlb	0	; () banked
  9941  001412  0100               	movlb	0	; () banked
  9942  001414  90D8               	bcf	status,0,c
  9943  001416  3383               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  9944  001418  3382               	rrcf	i2___awmod@divisor& (0+255),f,b
  9945                           
  9946                           ; BSR set to: 0
  9947  00141A  0100               	movlb	0	; () banked
  9948  00141C  0100               	movlb	0	; () banked
  9949  00141E  2F85               	decfsz	i2___awmod@counter& (0+255),f,b
  9950  001420  D7DC               	goto	i2l4672
  9951  001422                     i2l4680:
  9952                           
  9953                           ; BSR set to: 0
  9954  001422  0100               	movlb	0	; () banked
  9955  001424  0100               	movlb	0	; () banked
  9956  001426  5186               	movf	i2___awmod@sign& (0+255),w,b
  9957  001428  B4D8               	btfsc	status,2,c
  9958  00142A  D007               	goto	i2l4684
  9959                           
  9960                           ; BSR set to: 0
  9961  00142C  0100               	movlb	0	; () banked
  9962  00142E  0100               	movlb	0	; () banked
  9963  001430  6D80               	negf	i2___awmod@dividend& (0+255),b
  9964  001432  0100               	movlb	0	; () banked
  9965  001434  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9966  001436  B0D8               	btfsc	status,0,c
  9967  001438  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9968  00143A                     i2l4684:
  9969                           
  9970                           ; BSR set to: 0
  9971  00143A  C080  F080         	movff	i2___awmod@dividend,?i2___awmod
  9972  00143E  C081  F081         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9973  001442  0012               	return	
  9974  001444                     __end_ofi2___awmod:
  9975                           	opt stack 0
  9976                           pclatu	equ	0xFFB
  9977                           pclath	equ	0xFFA
  9978                           tblptru	equ	0xFF8
  9979                           tblptrh	equ	0xFF7
  9980                           tblptrl	equ	0xFF6
  9981                           tablat	equ	0xFF5
  9982                           prodh	equ	0xFF4
  9983                           prodl	equ	0xFF3
  9984                           intcon	equ	0xFF2
  9985                           intcon2	equ	0xFF1
  9986                           postinc0	equ	0xFEE
  9987                           fsr0h	equ	0xFEA
  9988                           fsr0l	equ	0xFE9
  9989                           wreg	equ	0xFE8
  9990                           indf1	equ	0xFE7
  9991                           postinc1	equ	0xFE6
  9992                           postdec1	equ	0xFE5
  9993                           fsr1h	equ	0xFE2
  9994                           fsr1l	equ	0xFE1
  9995                           bsr	equ	0xFE0
  9996                           indf2	equ	0xFDF
  9997                           postinc2	equ	0xFDE
  9998                           postdec2	equ	0xFDD
  9999                           fsr2h	equ	0xFDA
 10000                           fsr2l	equ	0xFD9
 10001                           status	equ	0xFD8
 10002                           
 10003 ;; *************** function _SleepIfOkay *****************
 10004 ;; Defined at:
 10005 ;;		line 228 in file "../src/messages.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;		None
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;		None
 10010 ;; Return value:  Size  Location     Type
 10011 ;;		None               void
 10012 ;; Registers used:
 10013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10019 ;;      Params:         0       0       0       0       0
 10020 ;;      Locals:         0       0       0       0       0
 10021 ;;      Temps:          0       0       0       0       0
 10022 ;;      Totals:         0       0       0       0       0
 10023 ;;Total ram usage:        0 bytes
 10024 ;; Hardware stack levels used:    1
 10025 ;; Hardware stack levels required when called:    2
 10026 ;; This function calls:
 10027 ;;		_enter_sleep_mode
 10028 ;;		i2_check_msg
 10029 ;;		i2_in_high_int
 10030 ;;		i2_in_low_int
 10031 ;; This function is called by:
 10032 ;;		_InterruptHandlerHigh
 10033 ;; This function uses a non-reentrant model
 10034 ;;
 10035                           
 10036                           	psect	text55
 10037  001E0C                     __ptext55:
 10038                           	opt stack 0
 10039  001E0C                     _SleepIfOkay:
 10040                           	opt stack 18
 10041                           
 10042                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
 10043                           
 10044                           ; BSR set to: 0
 10045                           ;incstack = 0
 10046  001E0C  664D               	tstfsz	_MQ_Main_Willing_to_block,c
 10047  001E0E  D001               	goto	i2l3818
 10048  001E10  0012               	return	
 10049  001E12                     i2l3818:
 10050                           
 10051                           ;messages.c: 232: }
 10052                           ;messages.c: 235: if (in_low_int()) {
 10053  001E12  ECF0  F00F         	call	i2_in_low_int	;wreg free
 10054  001E16  0100               	movlb	0	; () banked
 10055  001E18  0100               	movlb	0	; () banked
 10056  001E1A  5183               	movf	(?i2_in_low_int+1)& (0+255),w,b
 10057  001E1C  0100               	movlb	0	; () banked
 10058  001E1E  1182               	iorwf	?i2_in_low_int& (0+255),w,b
 10059  001E20  A4D8               	btfss	status,2,c
 10060  001E22  0012               	return	
 10061                           
 10062                           ; BSR set to: 0
 10063                           ;messages.c: 237: }
 10064                           ;messages.c: 240: if (!in_high_int()) {
 10065                           
 10066                           ; BSR set to: 0
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;messages.c: 236: return;
 10070  001E24  ECE2  F011         	call	i2_in_high_int	;wreg free
 10071  001E28  0100               	movlb	0	; () banked
 10072  001E2A  0100               	movlb	0	; () banked
 10073  001E2C  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
 10074  001E2E  0100               	movlb	0	; () banked
 10075  001E30  1180               	iorwf	?i2_in_high_int& (0+255),w,b
 10076  001E32  B4D8               	btfsc	status,2,c
 10077  001E34  0012               	return	
 10078                           
 10079                           ; BSR set to: 0
 10080                           ;messages.c: 242: }
 10081                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
 10082                           
 10083                           ; BSR set to: 0
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;messages.c: 241: return;
 10087  001E36  0101               	movlb	1	; () banked
 10088  001E38  0E01               	movlw	high _ToMainHigh_MQ
 10089  001E3A  0100               	movlb	0	; () banked
 10090  001E3C  0100               	movlb	0	; () banked
 10091  001E3E  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
 10092  001E40  0101               	movlb	1	; () banked
 10093  001E42  0E00               	movlw	low _ToMainHigh_MQ
 10094  001E44  0100               	movlb	0	; () banked
 10095  001E46  0100               	movlb	0	; () banked
 10096  001E48  6F80               	movwf	i2check_msg@qptr& (0+255),b
 10097  001E4A  EC04  F011         	call	i2_check_msg	;wreg free
 10098  001E4E  0900               	iorlw	0
 10099  001E50  A4D8               	btfss	status,2,c
 10100  001E52  0012               	return	
 10101                           
 10102                           ;messages.c: 249: }
 10103                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
 10104                           
 10105                           ;messages.c: 248: return;
 10106  001E54  0101               	movlb	1	; () banked
 10107  001E56  0E01               	movlw	high _ToMainLow_MQ
 10108  001E58  0100               	movlb	0	; () banked
 10109  001E5A  0100               	movlb	0	; () banked
 10110  001E5C  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
 10111  001E5E  0101               	movlb	1	; () banked
 10112  001E60  0E43               	movlw	low _ToMainLow_MQ
 10113  001E62  0100               	movlb	0	; () banked
 10114  001E64  0100               	movlb	0	; () banked
 10115  001E66  6F80               	movwf	i2check_msg@qptr& (0+255),b
 10116  001E68  EC04  F011         	call	i2_check_msg	;wreg free
 10117  001E6C  0900               	iorlw	0
 10118  001E6E  B4D8               	btfsc	status,2,c
 10119                           
 10120                           ;messages.c: 252: }
 10121                           ;messages.c: 253: enter_sleep_mode();
 10122                           
 10123                           ;messages.c: 251: return;
 10124  001E70  ECFD  F011         	call	_enter_sleep_mode	;wreg free
 10125  001E74  0012               	return	
 10126  001E76                     __end_of_SleepIfOkay:
 10127                           	opt stack 0
 10128                           pclatu	equ	0xFFB
 10129                           pclath	equ	0xFFA
 10130                           tblptru	equ	0xFF8
 10131                           tblptrh	equ	0xFF7
 10132                           tblptrl	equ	0xFF6
 10133                           tablat	equ	0xFF5
 10134                           prodh	equ	0xFF4
 10135                           prodl	equ	0xFF3
 10136                           intcon	equ	0xFF2
 10137                           intcon2	equ	0xFF1
 10138                           postinc0	equ	0xFEE
 10139                           fsr0h	equ	0xFEA
 10140                           fsr0l	equ	0xFE9
 10141                           wreg	equ	0xFE8
 10142                           indf1	equ	0xFE7
 10143                           postinc1	equ	0xFE6
 10144                           postdec1	equ	0xFE5
 10145                           fsr1h	equ	0xFE2
 10146                           fsr1l	equ	0xFE1
 10147                           bsr	equ	0xFE0
 10148                           indf2	equ	0xFDF
 10149                           postinc2	equ	0xFDE
 10150                           postdec2	equ	0xFDD
 10151                           fsr2h	equ	0xFDA
 10152                           fsr2l	equ	0xFD9
 10153                           status	equ	0xFD8
 10154                           
 10155 ;; *************** function i2_in_low_int *****************
 10156 ;; Defined at:
 10157 ;;		line 31 in file "../src/interrupts.c"
 10158 ;; Parameters:    Size  Location     Type
 10159 ;;		None
 10160 ;; Auto vars:     Size  Location     Type
 10161 ;;		None
 10162 ;; Return value:  Size  Location     Type
 10163 ;;                  2    2[BANK0 ] int 
 10164 ;; Registers used:
 10165 ;;		wreg, status,2, status,0, cstack
 10166 ;; Tracked objects:
 10167 ;;		On entry : 0/0
 10168 ;;		On exit  : 0/0
 10169 ;;		Unchanged: 0/0
 10170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10171 ;;      Params:         0       2       0       0       0
 10172 ;;      Locals:         0       0       0       0       0
 10173 ;;      Temps:          0       0       0       0       0
 10174 ;;      Totals:         0       2       0       0       0
 10175 ;;Total ram usage:        2 bytes
 10176 ;; Hardware stack levels used:    1
 10177 ;; Hardware stack levels required when called:    1
 10178 ;; This function calls:
 10179 ;;		i2_in_high_int
 10180 ;; This function is called by:
 10181 ;;		_SleepIfOkay
 10182 ;; This function uses a non-reentrant model
 10183 ;;
 10184                           
 10185                           	psect	text56
 10186  001FE0                     __ptext56:
 10187                           	opt stack 0
 10188  001FE0                     i2_in_low_int:
 10189                           	opt stack 18
 10190                           
 10191                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
 10192                           
 10193                           ;incstack = 0
 10194  001FE0  ACF2               	btfss	intcon,6,c	;volatile
 10195  001FE2  D008               	goto	i2l4590
 10196                           
 10197                           ;interrupts.c: 33: return (0);
 10198  001FE4  0E00               	movlw	0
 10199  001FE6  0100               	movlb	0	; () banked
 10200  001FE8  0100               	movlb	0	; () banked
 10201  001FEA  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 10202  001FEC  0E00               	movlw	0
 10203  001FEE  0100               	movlb	0	; () banked
 10204  001FF0  6F82               	movwf	?i2_in_low_int& (0+255),b
 10205  001FF2  0012               	return	
 10206  001FF4                     i2l4590:
 10207  001FF4  ECE2  F011         	call	i2_in_high_int	;wreg free
 10208  001FF8  0100               	movlb	0	; () banked
 10209  001FFA  0100               	movlb	0	; () banked
 10210  001FFC  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
 10211  001FFE  0100               	movlb	0	; () banked
 10212  002000  1180               	iorwf	?i2_in_high_int& (0+255),w,b
 10213  002002  B4D8               	btfsc	status,2,c
 10214  002004  D008               	goto	i2l4598
 10215                           
 10216                           ; BSR set to: 0
 10217                           ;interrupts.c: 35: return (0);
 10218  002006  0E00               	movlw	0
 10219  002008  0100               	movlb	0	; () banked
 10220  00200A  0100               	movlb	0	; () banked
 10221  00200C  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 10222  00200E  0E00               	movlw	0
 10223  002010  0100               	movlb	0	; () banked
 10224  002012  6F82               	movwf	?i2_in_low_int& (0+255),b
 10225  002014  0012               	return	
 10226  002016                     i2l4598:
 10227                           
 10228                           ; BSR set to: 0
 10229                           ;interrupts.c: 37: return (1);
 10230  002016  0E00               	movlw	0
 10231  002018  0100               	movlb	0	; () banked
 10232  00201A  0100               	movlb	0	; () banked
 10233  00201C  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 10234  00201E  0E01               	movlw	1
 10235  002020  0100               	movlb	0	; () banked
 10236  002022  6F82               	movwf	?i2_in_low_int& (0+255),b
 10237  002024  0012               	return	
 10238  002026                     __end_ofi2_in_low_int:
 10239                           	opt stack 0
 10240                           pclatu	equ	0xFFB
 10241                           pclath	equ	0xFFA
 10242                           tblptru	equ	0xFF8
 10243                           tblptrh	equ	0xFF7
 10244                           tblptrl	equ	0xFF6
 10245                           tablat	equ	0xFF5
 10246                           prodh	equ	0xFF4
 10247                           prodl	equ	0xFF3
 10248                           intcon	equ	0xFF2
 10249                           intcon2	equ	0xFF1
 10250                           postinc0	equ	0xFEE
 10251                           fsr0h	equ	0xFEA
 10252                           fsr0l	equ	0xFE9
 10253                           wreg	equ	0xFE8
 10254                           indf1	equ	0xFE7
 10255                           postinc1	equ	0xFE6
 10256                           postdec1	equ	0xFE5
 10257                           fsr1h	equ	0xFE2
 10258                           fsr1l	equ	0xFE1
 10259                           bsr	equ	0xFE0
 10260                           indf2	equ	0xFDF
 10261                           postinc2	equ	0xFDE
 10262                           postdec2	equ	0xFDD
 10263                           fsr2h	equ	0xFDA
 10264                           fsr2l	equ	0xFD9
 10265                           status	equ	0xFD8
 10266                           
 10267 ;; *************** function i2_in_high_int *****************
 10268 ;; Defined at:
 10269 ;;		line 23 in file "../src/interrupts.c"
 10270 ;; Parameters:    Size  Location     Type
 10271 ;;		None
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;		None
 10274 ;; Return value:  Size  Location     Type
 10275 ;;                  2    0[BANK0 ] int 
 10276 ;; Registers used:
 10277 ;;		wreg, status,2
 10278 ;; Tracked objects:
 10279 ;;		On entry : 0/0
 10280 ;;		On exit  : 0/0
 10281 ;;		Unchanged: 0/0
 10282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10283 ;;      Params:         0       2       0       0       0
 10284 ;;      Locals:         0       0       0       0       0
 10285 ;;      Temps:          0       0       0       0       0
 10286 ;;      Totals:         0       2       0       0       0
 10287 ;;Total ram usage:        2 bytes
 10288 ;; Hardware stack levels used:    1
 10289 ;; This function calls:
 10290 ;;		Nothing
 10291 ;; This function is called by:
 10292 ;;		_SleepIfOkay
 10293 ;;		i2_in_low_int
 10294 ;; This function uses a non-reentrant model
 10295 ;;
 10296                           
 10297                           	psect	text57
 10298  0023C4                     __ptext57:
 10299                           	opt stack 0
 10300  0023C4                     i2_in_high_int:
 10301                           	opt stack 18
 10302                           
 10303                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
 10304                           
 10305                           ; BSR set to: 0
 10306                           ;incstack = 0
 10307  0023C4  0E00               	movlw	0
 10308  0023C6  AEF2               	btfss	intcon,7,c	;volatile
 10309  0023C8  0E01               	movlw	1
 10310  0023CA  0100               	movlb	0	; () banked
 10311  0023CC  0100               	movlb	0	; () banked
 10312  0023CE  6F80               	movwf	?i2_in_high_int& (0+255),b
 10313  0023D0  0100               	movlb	0	; () banked
 10314  0023D2  6B81               	clrf	(?i2_in_high_int+1)& (0+255),b
 10315  0023D4  0012               	return	
 10316  0023D6                     __end_ofi2_in_high_int:
 10317                           	opt stack 0
 10318                           pclatu	equ	0xFFB
 10319                           pclath	equ	0xFFA
 10320                           tblptru	equ	0xFF8
 10321                           tblptrh	equ	0xFF7
 10322                           tblptrl	equ	0xFF6
 10323                           tablat	equ	0xFF5
 10324                           prodh	equ	0xFF4
 10325                           prodl	equ	0xFF3
 10326                           intcon	equ	0xFF2
 10327                           intcon2	equ	0xFF1
 10328                           postinc0	equ	0xFEE
 10329                           fsr0h	equ	0xFEA
 10330                           fsr0l	equ	0xFE9
 10331                           wreg	equ	0xFE8
 10332                           indf1	equ	0xFE7
 10333                           postinc1	equ	0xFE6
 10334                           postdec1	equ	0xFE5
 10335                           fsr1h	equ	0xFE2
 10336                           fsr1l	equ	0xFE1
 10337                           bsr	equ	0xFE0
 10338                           indf2	equ	0xFDF
 10339                           postinc2	equ	0xFDE
 10340                           postdec2	equ	0xFDD
 10341                           fsr2h	equ	0xFDA
 10342                           fsr2l	equ	0xFD9
 10343                           status	equ	0xFD8
 10344                           
 10345 ;; *************** function i2_check_msg *****************
 10346 ;; Defined at:
 10347 ;;		line 222 in file "../src/messages.c"
 10348 ;; Parameters:    Size  Location     Type
 10349 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
 10350 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
 10351 ;; Auto vars:     Size  Location     Type
 10352 ;;		None
 10353 ;; Return value:  Size  Location     Type
 10354 ;;                  1    wreg      unsigned char 
 10355 ;; Registers used:
 10356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10357 ;; Tracked objects:
 10358 ;;		On entry : 0/0
 10359 ;;		On exit  : 0/0
 10360 ;;		Unchanged: 0/0
 10361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10362 ;;      Params:         0       2       0       0       0
 10363 ;;      Locals:         0       0       0       0       0
 10364 ;;      Temps:          0       1       0       0       0
 10365 ;;      Totals:         0       3       0       0       0
 10366 ;;Total ram usage:        3 bytes
 10367 ;; Hardware stack levels used:    1
 10368 ;; This function calls:
 10369 ;;		Nothing
 10370 ;; This function is called by:
 10371 ;;		_SleepIfOkay
 10372 ;; This function uses a non-reentrant model
 10373 ;;
 10374                           
 10375                           	psect	text58
 10376  002208                     __ptext58:
 10377                           	opt stack 0
 10378  002208                     i2_check_msg:
 10379                           	opt stack 19
 10380                           
 10381                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;incstack = 0
 10385  002208  0100               	movlb	0	; () banked
 10386  00220A  EE20 F042          	lfsr	2,66
 10387  00220E  0100               	movlb	0	; () banked
 10388  002210  5180               	movf	i2check_msg@qptr& (0+255),w,b
 10389  002212  26D9               	addwf	fsr2l,f,c
 10390  002214  0100               	movlb	0	; () banked
 10391  002216  5181               	movf	(i2check_msg@qptr+1)& (0+255),w,b
 10392  002218  22DA               	addwfc	fsr2h,f,c
 10393  00221A  50DF               	movf	indf2,w,c
 10394  00221C  0100               	movlb	0	; () banked
 10395  00221E  6F82               	movwf	??i2_check_msg& (0+255),b
 10396  002220  0100               	movlb	0	; () banked
 10397  002222  5182               	movf	??i2_check_msg& (0+255),w,b
 10398  002224  0D0D               	mullw	13
 10399  002226  50F3               	movf	prodl,w,c
 10400  002228  0100               	movlb	0	; () banked
 10401  00222A  0100               	movlb	0	; () banked
 10402  00222C  2580               	addwf	i2check_msg@qptr& (0+255),w,b
 10403  00222E  6ED9               	movwf	fsr2l,c
 10404  002230  50F4               	movf	prodh,w,c
 10405  002232  0100               	movlb	0	; () banked
 10406  002234  0100               	movlb	0	; () banked
 10407  002236  2181               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
 10408  002238  6EDA               	movwf	fsr2h,c
 10409  00223A  50DF               	movf	indf2,w,c
 10410  00223C  0012               	return	
 10411  00223E                     __end_ofi2_check_msg:
 10412                           	opt stack 0
 10413                           pclatu	equ	0xFFB
 10414                           pclath	equ	0xFFA
 10415                           tblptru	equ	0xFF8
 10416                           tblptrh	equ	0xFF7
 10417                           tblptrl	equ	0xFF6
 10418                           tablat	equ	0xFF5
 10419                           prodh	equ	0xFF4
 10420                           prodl	equ	0xFF3
 10421                           intcon	equ	0xFF2
 10422                           intcon2	equ	0xFF1
 10423                           postinc0	equ	0xFEE
 10424                           fsr0h	equ	0xFEA
 10425                           fsr0l	equ	0xFE9
 10426                           wreg	equ	0xFE8
 10427                           indf1	equ	0xFE7
 10428                           postinc1	equ	0xFE6
 10429                           postdec1	equ	0xFE5
 10430                           fsr1h	equ	0xFE2
 10431                           fsr1l	equ	0xFE1
 10432                           bsr	equ	0xFE0
 10433                           indf2	equ	0xFDF
 10434                           postinc2	equ	0xFDE
 10435                           postdec2	equ	0xFDD
 10436                           fsr2h	equ	0xFDA
 10437                           fsr2l	equ	0xFD9
 10438                           status	equ	0xFD8
 10439                           
 10440 ;; *************** function _enter_sleep_mode *****************
 10441 ;; Defined at:
 10442 ;;		line 202 in file "../src/messages.c"
 10443 ;; Parameters:    Size  Location     Type
 10444 ;;		None
 10445 ;; Auto vars:     Size  Location     Type
 10446 ;;		None
 10447 ;; Return value:  Size  Location     Type
 10448 ;;		None               void
 10449 ;; Registers used:
 10450 ;;		None
 10451 ;; Tracked objects:
 10452 ;;		On entry : 0/0
 10453 ;;		On exit  : 0/0
 10454 ;;		Unchanged: 0/0
 10455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10456 ;;      Params:         0       0       0       0       0
 10457 ;;      Locals:         0       0       0       0       0
 10458 ;;      Temps:          0       0       0       0       0
 10459 ;;      Totals:         0       0       0       0       0
 10460 ;;Total ram usage:        0 bytes
 10461 ;; Hardware stack levels used:    1
 10462 ;; This function calls:
 10463 ;;		Nothing
 10464 ;; This function is called by:
 10465 ;;		_SleepIfOkay
 10466 ;; This function uses a non-reentrant model
 10467 ;;
 10468                           
 10469                           	psect	text59
 10470  0023FA                     __ptext59:
 10471                           	opt stack 0
 10472  0023FA                     _enter_sleep_mode:
 10473                           	opt stack 19
 10474                           
 10475                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 10476                           
 10477                           ; BSR set to: 0
 10478                           ;incstack = 0
 10479  0023FA  8ED3               	bsf	4051,7,c	;volatile
 10480  0023FC  0003               	sleep		;# 
 10481  0023FE  0012               	return	
 10482  002400                     __end_of_enter_sleep_mode:
 10483                           	opt stack 0
 10484  0000                     pclatu	equ	0xFFB
 10485                           pclath	equ	0xFFA
 10486                           tblptru	equ	0xFF8
 10487                           tblptrh	equ	0xFF7
 10488                           tblptrl	equ	0xFF6
 10489                           tablat	equ	0xFF5
 10490                           prodh	equ	0xFF4
 10491                           prodl	equ	0xFF3
 10492                           intcon	equ	0xFF2
 10493                           intcon2	equ	0xFF1
 10494                           postinc0	equ	0xFEE
 10495                           fsr0h	equ	0xFEA
 10496                           fsr0l	equ	0xFE9
 10497                           wreg	equ	0xFE8
 10498                           indf1	equ	0xFE7
 10499                           postinc1	equ	0xFE6
 10500                           postdec1	equ	0xFE5
 10501                           fsr1h	equ	0xFE2
 10502                           fsr1l	equ	0xFE1
 10503                           bsr	equ	0xFE0
 10504                           indf2	equ	0xFDF
 10505                           postinc2	equ	0xFDE
 10506                           postdec2	equ	0xFDD
 10507                           fsr2h	equ	0xFDA
 10508                           fsr2l	equ	0xFD9
 10509                           status	equ	0xFD8
 10510                           pclatu	equ	0xFFB
 10511                           pclath	equ	0xFFA
 10512                           tblptru	equ	0xFF8
 10513                           tblptrh	equ	0xFF7
 10514                           tblptrl	equ	0xFF6
 10515                           tablat	equ	0xFF5
 10516                           prodh	equ	0xFF4
 10517                           prodl	equ	0xFF3
 10518                           intcon	equ	0xFF2
 10519                           intcon2	equ	0xFF1
 10520                           postinc0	equ	0xFEE
 10521                           fsr0h	equ	0xFEA
 10522                           fsr0l	equ	0xFE9
 10523                           wreg	equ	0xFE8
 10524                           indf1	equ	0xFE7
 10525                           postinc1	equ	0xFE6
 10526                           postdec1	equ	0xFE5
 10527                           fsr1h	equ	0xFE2
 10528                           fsr1l	equ	0xFE1
 10529                           bsr	equ	0xFE0
 10530                           indf2	equ	0xFDF
 10531                           postinc2	equ	0xFDE
 10532                           postdec2	equ	0xFDD
 10533                           fsr2h	equ	0xFDA
 10534                           fsr2l	equ	0xFD9
 10535                           status	equ	0xFD8
 10536                           
 10537                           	psect	param0
 10538  0000                     pclatu	equ	0xFFB
 10539                           pclath	equ	0xFFA
 10540                           tblptru	equ	0xFF8
 10541                           tblptrh	equ	0xFF7
 10542                           tblptrl	equ	0xFF6
 10543                           tablat	equ	0xFF5
 10544                           prodh	equ	0xFF4
 10545                           prodl	equ	0xFF3
 10546                           intcon	equ	0xFF2
 10547                           intcon2	equ	0xFF1
 10548                           postinc0	equ	0xFEE
 10549                           fsr0h	equ	0xFEA
 10550                           fsr0l	equ	0xFE9
 10551                           wreg	equ	0xFE8
 10552                           indf1	equ	0xFE7
 10553                           postinc1	equ	0xFE6
 10554                           postdec1	equ	0xFE5
 10555                           fsr1h	equ	0xFE2
 10556                           fsr1l	equ	0xFE1
 10557                           bsr	equ	0xFE0
 10558                           indf2	equ	0xFDF
 10559                           postinc2	equ	0xFDE
 10560                           postdec2	equ	0xFDD
 10561                           fsr2h	equ	0xFDA
 10562                           fsr2l	equ	0xFD9
 10563                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         304
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     44      87
    BANK0           128     60      69
    BANK1           256    100     236
    BANK2           256      0     134
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    motorMove@direction	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@motorcomm(BANK0[2]), i2c_slave_int_handler@motorcomm(BANK0[2]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_trans@data	PTR unsigned char  size(2) Largest target is 11
		 -> timer0_int_handler@motorcomm(BANK0[2]), i2c_slave_int_handler@motorcomm(BANK0[2]), main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 13
		 -> main@uc(BANK1[13]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK1[29]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 5
		 -> timer0_int_handler@motormsg(BANK0[5]), i2c_slave_int_handler@sensormsg(BANK0[5]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK1[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@ic(BANK1[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _timer0_int_handler->_motorMove
    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->_ToMainHigh_sendmsg
    _motorMove->i2_uart_trans
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0   13983
                                             36 BANK1     64    64      0
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                         _uart_trans
 ---------------------------------------------------------------------------------
 (1) _uart_trans                                           5     3      2     157
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3347
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2658
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2435
                                             10 BANK1     12     6      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      7     3      4     545
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2969
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2969
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2746
                                             10 BANK1     14     7      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     637
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     347
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    3486
                                             27 COMRAM    17    17      0
                    _adc_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3398
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    3375
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    3022
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     809
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   0     0      0      88
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    7345
                                             46 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  8     8      0    1181
                                              8 BANK0      8     8      0
                        _WriteTimer0
                          _motorMove
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     123
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    5880
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_slave_int_handler                              20    20      0    5880
                                             26 BANK0     20    20      0
                 _ToMainHigh_sendmsg
                       _handle_start
                          _motorMove
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (12) _start_i2c_slave_reply                               5     3      2     223
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (12) _motorMove                                           3     1      2     682
                                              5 BANK0      3     1      2
                       i2_uart_trans
 ---------------------------------------------------------------------------------
 (13) i2_uart_trans                                        5     3      2     230
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    3994
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    3381
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           7     3      4    1034
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
   _uart_trans

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
   _timer1_int_handler
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_trans_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_slave_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2___awmod
           i2_memcpy
       _handle_start
       _motorMove
         i2_uart_trans
       _start_i2c_slave_reply
   _timer0_int_handler
     _WriteTimer0
     _motorMove
       i2_uart_trans
     _start_i2c_slave_reply

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      86       8       52.3%
BITBANK1           100      0       0       5        0.0%
BANK1              100     64      EC       6       92.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80     3C      45       4       53.9%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2C      57       1       68.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     20E      11        0.0%
DATA                 0      0     20E      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Fri Mar 21 13:59:05 2014

          _MQ_Main_Willing_to_block 004D                         _SSPSTATbits 000FC7  
         __end_of_ToMainLow_recvmsg 20AC                                  bsr 000FE0  
         __end_of_ToMainLow_sendmsg 22B6                        __CFG_CP0$OFF 000000  
                               l144 0AA4                                 l620 18EA  
                               l621 18F8                                 l622 18FA  
                               l535 1BC6                                 l615 18C8  
                               l554 2262                                 l555 2264  
                               l619 18E8                                 l580 2160  
                               l581 2162                                 l578 2148  
                               l848 2358     __size_of_uart_trans_int_handler 0068  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                      ___awmod@sign 018C                      _FromMainLow_MQ 0243  
                               prod 000FF3                                 wreg 000FE8  
                      __CFG_IESO$ON 000000                        ?_in_high_int 0186  
                  ??_init_uart_recv 0188          i2c_slave_int_handler@F5133 00BC  
        i2c_slave_int_handler@F5135 00C1                                l1160 19A6  
                              l4100 16A6                                l4104 1710  
                              l4026 18CA                                l4018 18B4  
                              l4212 0D80                                l4124 0DA0  
                              l4128 0E24                                l4144 1C90  
                              l4090 1C40                                l4162 0F1E  
                              l4084 1C14                                l4182 1F24  
                              l4078 1BE8                                l4176 1F00  
                              l4196 0C92                                l4550 11F2  
                              l4542 11A4                                l4534 1160  
                              l3910 0ACA                                l4544 11B6  
                              l3920 0B7A                                l3904 0A52  
                              l3912 0AEA                                l4546 11BE  
                              l4554 1206                                l4538 1186  
                              l3770 205A                                l4570 195E  
                              l3906 0AAA                                l3756 1FD0  
                              l3748 1FAE                                l3924 0BC2  
                              l3932 0C0C                                l4558 121E  
                              l4574 1992                                l4566 1944  
                              l3918 0B28                                l4568 1956  
                              l3928 0C08                                l3896 0A10  
                              l3978 214A                                _LATA 000F89  
                              _LATB 000F8A                                u4037 235A  
                              i1l63 0080                     _FromMainHigh_MQ 0200  
              __end_ofi2_uart_trans 17F8                       __CFG_FCMEN$ON 000000  
            ?_block_on_To_msgqueues 0001                                _main 0938  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr0l 000FE9                                fsr2h 000FDA  
                              indf1 000FE7                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                       main@msgtype 01BE                          i1_send_msg 15D0  
                              pclat 000FFA                         i2_check_msg 2208  
                              prodh 000FF4                                prodl 000FF3  
             handle_start@data_read 0080                                start 00C6  
                     __CFG_FOSC2$ON 000000                    ?_adc_int_handler 0001  
                        i2_send_msg 0FEE           ToMainHigh_recvmsg@msgtype 019E  
                    send_msg@length 0192                     __end_of_OpenADC 1BCA  
       __size_of_timer0_int_handler 008A             ??_i2c_slave_int_handler 009A  
                       _Delay1KTCYx 2354                               ?_main 0001  
                   __end_of___awmod 1228                               _T0CON 000FD5  
                             _T1CON 000FCD                     __end_of___lwmod 19B0  
                        i1memcpy@d1 0001                               i1l451 1EDA  
                             i2l311 14C4                               i1l633 2344  
                             i2l350 0192                               i2l354 01D6  
                             i2l348 052C                               i2l382 053E  
                             i2l376 049E                               i2l368 0366  
                        i1memcpy@s1 0003                               _RCREG 000FAE  
                             _RCSTA 000FAB                               _TMR0H 000FD7  
                             _TMR1H 000FCF                               _TMR0L 000FD6  
                             _TMR1L 000FCE                               _SPBRG 000FAF  
                             _PORTA 000F80                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                        i2memcpy@d1 0080                          i2memcpy@s1 0082  
                      ?_init_queues 0001           __size_of_enter_sleep_mode 0006  
                    i1___awmod@sign 0007                     __end_of_in_main 206A  
        ToMainLow_recvmsg@maxlength 01A2             timer0_lthread@msgbuffer 018C  
           i2c_configure_slave@addr 0186                               tablat 000FF5  
                             status 000FD8              _uart_trans_int_handler 1E76  
                  __end_ofi1_memcpy 212E                  __size_ofi1___awmod 009C  
                  __end_ofi2_memcpy 1F9A                  __size_ofi2___awmod 010E  
                   __initialization 1A3A                        __end_of_main 0C26  
       __size_of_timer1_int_handler 000E          __size_of_ToMainLow_recvmsg 0042  
        __size_of_ToMainLow_sendmsg 0026               __size_ofi2_in_low_int 0046  
     __size_of_FromMainHigh_sendmsg 0036                              ??_main 01AA  
                   send_msg@msgtype 0193                       __activetblptr 000002  
                   send_msg@tlength 0197                          _SetChanADC 22D8  
              __end_of_handle_start 1510          timer0_int_handler@motormsg 0089  
                            _ADCON0 000FC2                              _ADCON1 000FC1  
                            _ADCON2 000FC0                              _ADRESH 000FC4  
           ??_uart_recv_int_handler 001B                              i1l1412 22C2  
                            i1l3610 188A                              i1l3602 1872  
                            i1l3606 187C                              i1l3560 2100  
                            i1l4700 1608                              i1l3590 1840  
                            i1l3566 211C                              i1l3594 1852  
                            i1l3586 1824                              i1l3596 185A  
                            i1l3598 185E                              i1l4734 15B0  
                            i1l4728 156C                              i1l4752 0070  
                        _OpenTimer0 223E                              i1l4746 0066  
                        _OpenTimer1 212E                              i2l4310 020E  
                    __CFG_WDTEN$OFF 000000                              i2l4400 063C  
                            i2l4312 023A                              i2l4330 02CE  
                            i2l4322 0276                              i2l4252 12C8  
                            i2l4420 0748                              i2l4270 14F8  
                            i2l4430 07B2                              i2l4248 1244  
                            i2l4408 06E2                              i2l4352 03DA  
                            i2l4328 028E                              i2l4442 087E  
                            i2l4354 041C                              i2l4268 14E0  
                            i2l4436 0818                              i2l4380 0500  
                            i2l4292 0188                              i2l4614 104A  
                            i2l4454 0926                              i2l4358 042E  
                            i2l4286 0170                              i2l4632 175A  
                            i2l4448 08E4                              i2l4392 05A2  
                            i2l3818 1E12                              i2l4650 1F82  
                            i2l4386 0542                              i2l4660 137C  
                            i2l4644 1F5E                              i2l4636 17C4  
                            i2l3780 1AFA                              i2l4590 1FF4  
                            i2l4670 13D2                              i2l4672 13DA  
                            i2l4680 1422                              i2l4664 13A2  
                            i2l4684 143A                              i2l4676 140E  
                            i2l4668 13C0                              i2l3788 1B08  
                            i2l4598 2016         __end_of_i2c_configure_slave 2290  
                     ??_SleepIfOkay 0084                  __size_of_ReadUSART 001E  
                            _OSCCON 000FD3                              _SPBRGH 000FB0  
                            _SSPADD 000FC8                              _SSPBUF 000FC9  
    __size_of_start_i2c_slave_reply 010E                         ?i1_send_msg 000B  
     __end_of_start_i2c_slave_reply 1336                  timer0_lthread@tptr 0186  
                         ??_OpenADC 0188                        i2_in_low_int 1FE0  
                       ?i2_send_msg 008A                      __CFG_XINST$OFF 000000  
                __size_of_OpenUSART 0092                     _i2c_int_handler 23F4  
                         ??___awmod 018A   i2c_slave_int_handler@data_written 00A4  
                   _i2c_master_send 0D84                    OpenTimer0@config 0186  
                            _ic_ptr 00C3                           ??___lwmod 018A  
                     main@msgbuffer 01AF                    __end_of_init_i2c 1E0C  
                  OpenTimer1@config 0186                              _memcpy 1EDE  
                            clear_0 1A40                              clear_1 1A4C  
                            clear_2 1A58                     ___awmod@divisor 0188  
                            _uc_ptr 0056                     ___awmod@counter 018B  
                            main@ic 01CD                              main@uc 01C0  
                  __end_of_recv_msg 0D84         start_i2c_slave_reply@length 0084  
                         ??_in_main 018C                   __end_ofi1___awmod 1894  
                  __end_of_send_msg 0FEE                        __pdataCOMRAM 0051  
                 __end_ofi2___awmod 1444                  i2uart_trans@length 0084  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 0189  
             __size_ofi2_uart_trans 00B4                      i2___awmod@sign 0086  
          ToMainLow_recvmsg@msgtype 019E                __size_of_in_high_int 0012  
                   __CFG_FOSC$HSPLL 000000                          __accesstop 0080  
           __end_of__initialization 1AB6          __end_of_ToMainHigh_recvmsg 20EE  
        __end_of_ToMainHigh_sendmsg 2208         __end_of_init_timer1_lthread 238E  
               __end_of_SleepIfOkay 1E76                      __pcstackCOMRAM 0001  
                      __pidataBANK0 23EC                        __pidataBANK1 2405  
            __size_ofi2_in_high_int 0012                  __size_of_check_msg 0036  
                 __end_of_ReadUSART 2354                        i2_uart_trans 1744  
                       ?_SetChanADC 0001                 __size_ofi1_send_msg 00C0  
                         ?i1_memcpy 0001       __size_of_InterruptHandlerHigh 1B3E  
       __end_of_InterruptHandlerLow 00C6                           ?i2_memcpy 0080  
                     _ToMainHigh_MQ 0100                   motorMove@distance 0087  
                  _enter_sleep_mode 23FA                 __size_ofi2_send_msg 012C  
              timer1_lthread@length 01A4                       ReadUSART@data 0001  
                 __end_of_OpenUSART 1926                       check_msg@qptr 0186  
              timer1_lthread@retval 01A9             ??_block_on_To_msgqueues 018C  
              __size_of_init_queues 006E                          __pbssBANK1 0100  
                        __pbssBANK2 0200                         ?_OpenTimer0 0001  
                       ?_OpenTimer1 0001                          __pnvCOMRAM 0056  
           __end_of_i2c_int_handler 23FA                        ?i2_check_msg 0080  
           __end_of_i2c_master_send 0EC2                  timer1_lthread@tptr 01A0  
       timer0_int_handler@motorcomm 008E                   recv_msg@maxlength 0192  
                   recv_msg@msgtype 0193                     recv_msg@tlength 019A  
             __size_of_handle_start 00CC                        ?_Delay1KTCYx 0001  
                  WriteTimer0@timer 0082                             ?_memcpy 0186  
                  WriteTimer1@timer 0003                       ??_WriteTimer0 0082  
                     ??_WriteTimer1 0003      __size_of_i2c_slave_int_handler 086E  
           __size_of_timer0_lthread 0012       __end_of_i2c_slave_int_handler 0938  
                __size_of_motorMove 0020             __size_of_timer1_lthread 0072  
                        ??i1_memcpy 0007                          ??i2_memcpy 0086  
                  i1send_msg@length 000D                       i2_in_high_int 23C4  
                           _SSPCON1 000FC6                             _SSPCON2 000FC5  
                           _SSPSTAT 000FC7             ?_uart_trans_int_handler 0001  
                 __end_of_check_msg 21D2                           ?_init_i2c 0186  
                       _SleepIfOkay 1E0C                           ?_recv_msg 0190  
                           _OpenADC 1B46                          _in_low_int 1F9A  
                      _handle_start 1444                             __Hparam 0000  
               __size_of_SetChanADC 0020                           ?_send_msg 0190  
                           __Lparam 0000          __end_of_timer0_int_handler 1A3A  
                  init_uart_recv@uc 0186                             ___awmod 111A  
                           ___lwmod 1926                     __CFG_STVREN$OFF 000000  
i2c_slave_int_handler@overrun_error 00A5                             __pcinit 1A3A  
                   __size_of_memcpy 005E            __size_of_adc_int_handler 0022  
                        _init_queue 1C48                             __ramtop 0400  
               __size_of_OpenTimer0 002A                 __size_of_OpenTimer1 0038  
                           __ptext0 0938                             __ptext1 1690  
                           __ptext2 1CC2                             __ptext3 1926  
                           __ptext4 2166                             __ptext5 0EC2  
                           __ptext6 236A                             __ptext7 2318  
                           __ptext8 237C                             __ptext9 1D34  
                         _T0CONbits 000FD5                             _in_main 2026  
                         _T1CONbits 000FCD                    ___awmod@dividend 0186  
               __end_of_WriteTimer0 23C4                 __end_of_WriteTimer1 23B2  
                    ?i2_in_high_int 0080      __end_of_uart_trans_int_handler 1EDE  
                    OpenADC@config2 0186                             main@msg 01AC  
                    __pintcode_body 1AC0                end_of_initialization 1AB6  
           timer1_lthread@msgbuffer 01A6        __end_of_FromMainHigh_sendmsg 219C  
    __size_of_uart_recv_int_handler 00C0          FromMainHigh_sendmsg@length 019F  
                           memcpy@d 018C                             memcpy@n 018A  
                           memcpy@s 018E       __end_of_uart_recv_int_handler 15D0  
                        ??_init_i2c 0188                       __Lmediumconst 0000  
                           int_func 1AC0                        ??i1_send_msg 0011  
                 __end_of_motorMove 2318             __size_of_init_uart_recv 001E  
                  ?_i2c_int_handler 0001                    ?_i2c_master_send 0186  
                        ??_recv_msg 0197                        ??i2_send_msg 0090  
                        ??_send_msg 0196          __end_of_timer1_int_handler 23E4  
                         _RCSTAbits 000FAB                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
         ToMainHigh_sendmsg@msgtype 0096                          _uart_trans 1690  
                         _PORTAbits 000F80                  __end_ofi1_send_msg 1690  
       FromMainHigh_sendmsg@msgtype 019C                           _TRISCbits 000F94  
                         i1___awmod 17F8                  __end_ofi2_send_msg 111A  
                         i2___awmod 1336                           _TXSTAbits 000FAC  
                        main@length 01BF                         ?_in_low_int 0188  
             timer0_lthread@msgtype 0188               _start_i2c_slave_reply 1228  
      __size_of_i2c_configure_slave 0028                __size_ofi2_check_msg 0036  
          __end_of_enter_sleep_mode 2400                  _ToMainHigh_recvmsg 20AC  
                         i1memcpy@d 0007                  _ToMainHigh_sendmsg 21D2  
                         i1memcpy@n 0005                           i1memcpy@s 0009  
         i2c_master_send@recvlength 0186                       __pidataCOMRAM 2400  
                    _timer0_lthread 236A                         ?_init_queue 0186  
                         i2memcpy@d 0086                         _WriteTimer0 23B2  
                       _WriteTimer1 23A0                           i2memcpy@n 0084  
                         i2memcpy@s 0088                      _timer1_lthread 1CC2  
                    __end_of_memcpy 1F3C                   _enable_interrupts 23E4  
              __size_of_Delay1KTCYx 0016                        ??_SetChanADC 0186  
         i2c_master_send@sendlength 018C                 ?_ToMainHigh_recvmsg 019E  
                   ??i2_in_high_int 0082                 ?_ToMainHigh_sendmsg 0096  
                ?_enable_interrupts 0001                 start_initialization 1A3A  
                     ??_in_high_int 0188                           _ReadUSART 2336  
                 ??_adc_int_handler 0001                          ?i1___awmod 0001  
                 __size_ofi1_memcpy 0040                   __size_ofi2_memcpy 005E  
         i2c_master_send@slave_addr 0189                          ?i2___awmod 0080  
               ??_enable_interrupts 0186                        ??_OpenTimer0 0186  
                      ??_OpenTimer1 0186      __size_of_block_on_To_msgqueues 007E  
     __end_of_block_on_To_msgqueues 1C48                           _OpenUSART 1894  
      __end_of_InterruptHandlerHigh 1B46                          init_i2c@ic 0186  
                motorMove@direction 0085                ??_ToMainHigh_recvmsg 01A2  
              ??_ToMainHigh_sendmsg 0099                  __end_of_SetChanADC 22F8  
            __end_of_timer0_lthread 237C                         __pdataBANK0 00BC  
                       __pdataBANK1 01EA              __end_of_timer1_lthread 1D34  
                i1___awmod@dividend 0001           __end_of_enable_interrupts 23EC  
                          ??_memcpy 018C               timer1_lthread@msgtype 01A2  
                       ?_uart_trans 0186                _FromMainHigh_sendmsg 2166  
      __size_of_init_timer1_lthread 0012                  __end_of_OpenTimer0 2268  
                __end_of_OpenTimer1 2166                         __pbssCOMRAM 002D  
                        ?_ReadUSART 0001                       ??_init_queues 018A  
                     __pcstackBANK0 0080                       __pcstackBANK1 0186  
               __size_of_in_low_int 0046            start_i2c_slave_reply@msg 0080  
                         _adcbuffer 002D                 __CFG_CCP2MX$DEFAULT 000000  
                   Delay1KTCYx@unit 0186            ToMainLow_sendmsg@msgtype 0017  
      __size_of_InterruptHandlerLow 00AE      i2c_slave_int_handler@data_read 00AD  
               __end_of_in_high_int 23A0                          ?_OpenUSART 0186  
                      ?_SleepIfOkay 0001               ToMainLow_recvmsg@data 01A0  
                      _ToMainLow_MQ 0143                 __size_of_init_queue 007A  
                    _init_uart_recv 2318                           _check_msg 219C  
                         __pnvBANK0 00C3              ?_start_i2c_slave_reply 0080  
                 __size_of_init_i2c 006A                   OpenADC@portconfig 0187  
                          ?_OpenADC 0186                        recv_msg@data 0195  
                      recv_msg@qmsg 019C                        recv_msg@slot 0199  
                      recv_msg@qptr 0190                   __size_of_recv_msg 015E  
                         __pintcode 0008                   __size_of_send_msg 012C  
                          ?___awmod 0186                     ?_timer0_lthread 0186  
                          ?___lwmod 0186                     ?_timer1_lthread 01A0  
             ?_FromMainHigh_sendmsg 019C                         __pintcodelo 0018  
                         _distMoved 0050              ToMainHigh_recvmsg@data 01A0  
                          ?_in_main 018A                   WriteTimer0@timer0 0080  
                _timer0_int_handler 19B0                   WriteTimer1@timer1 0001  
             _i2c_slave_int_handler 00CA      i2c_slave_int_handler@error_buf 00A1  
                       ??i1___awmod 0005               ToMainLow_sendmsg@data 0018  
                       ??i2___awmod 0084                 ?_timer0_int_handler 0001  
    i2c_slave_int_handler@msg_ready 00AA                         _distDesired 004F  
            __end_of_init_uart_recv 2336                 __end_of_init_queues 1DA2  
       i2c_slave_int_handler@length 00A6                 __size_of_uart_trans 00B4  
                     OpenADC@config 018A                            _LATBbits 000F8A  
                   i2check_msg@qptr 0080                          ?_check_msg 0186  
                          _IPR1bits 000F9F                            _PIE1bits 000F9D  
    i2c_slave_int_handler@motorcomm 00AB                       ?i2_in_low_int 0082  
    i2c_slave_int_handler@sensormsg 009C                            _PIR1bits 000F9E  
                          i2u292_41 19DA                            i2u359_41 0720  
            ToMainHigh_sendmsg@data 0097                            _RCONbits 000FD0  
                         _motorMove 22F8                    __CFG_WDTPS$32768 000000  
                         main@F5217 01EA                ??_timer0_int_handler 0088  
        __size_of_enable_interrupts 0008                   i1send_msg@msgtype 000E  
                 i1send_msg@tlength 0012                          _ADCON0bits 000FC2  
              timer0_lthread@length 018A                  _timer1_int_handler 23D6  
                          i1_memcpy 20EE                _InterruptHandlerHigh 0008  
                       ??_ReadUSART 0001                            i2_memcpy 1F3C  
              timer0_lthread@msgval 018E                         _in_high_int 238E  
                      send_msg@data 0194                 _i2c_configure_slave 2268  
                      send_msg@qmsg 019A                        send_msg@slot 0199  
                      send_msg@qptr 0190                         _INTCON2bits 000FF1  
                         copy_data0 1A8A                           copy_data1 1AAA  
               ?_timer1_int_handler 0001                  i2___awmod@dividend 0080  
                   ?_init_uart_recv 0186                         ??_OpenUSART 0188  
                   OpenUSART@config 018B                      ??i2_in_low_int 0084  
                          __Hparam0 0000               _uart_recv_int_handler 1510  
                      ??_in_low_int 018A                            __Lparam0 0000  
                  __size_of_OpenADC 0084                ?_i2c_configure_slave 0001  
                        ?_motorMove 0085                   ?_enter_sleep_mode 0001  
                  i2uart_trans@data 0080              ??_FromMainHigh_sendmsg 019F  
                 i1___awmod@divisor 0003                ??_timer1_int_handler 0005  
                 i1___awmod@counter 0006                     _adc_int_handler 22B6  
          __size_of_i2c_int_handler 0006                    __size_of___awmod 010E  
                ??_enter_sleep_mode 0080            __size_of_i2c_master_send 013E  
                  __size_of___lwmod 008A                        ??_init_queue 0188  
                      ?_WriteTimer0 0080                        ?_WriteTimer1 0001  
          FromMainHigh_sendmsg@data 019D                       ?i2_uart_trans 0080  
           ToMainLow_sendmsg@length 001A              ?_i2c_slave_int_handler 0001  
                 main@t0thread_data 01BA               ?_InterruptHandlerHigh 0001  
                  __size_of_in_main 0044                   i2send_msg@msgtype 008D  
       ToMainHigh_recvmsg@maxlength 01A2                   i2send_msg@tlength 0091  
           init_timer1_lthread@tptr 0186                         _init_queues 1D34  
                __end_of_in_low_int 1FE0                            __ptext10 1C48  
                          __ptext11 1DA2                            __ptext20 2354  
                          __ptext12 0D84                            __ptext21 206A  
                          __ptext13 2268                            __ptext30 1B46  
                          __ptext22 20AC                            __ptext14 23E4  
                          __ptext23 0C26                            __ptext15 1BCA  
                          __ptext40 23A0                            __ptext32 1E76  
                          __ptext24 1EDE                            __ptext16 2026  
                          __ptext41 22B6                            __ptext33 1510  
                          __ptext25 111A                            __ptext17 1F9A  
                          __ptext50 1444                            __ptext34 2290  
                          __ptext26 22D8                            __ptext18 238E  
                          __ptext51 21D2                            __ptext43 19B0  
                          __ptext35 15D0                            __ptext27 1894  
                          __ptext19 219C                            __ptext52 0FEE  
                          __ptext44 23B2                            __ptext36 20EE  
                          __ptext28 212E                            __ptext53 1F3C  
                          __ptext45 23F4                            __ptext37 17F8  
                          __ptext29 223E                            __ptext54 1336  
                          __ptext46 00CA                            __ptext38 2336  
                          __ptext55 1E0C                            __ptext47 1228  
                          __ptext39 23D6                            __ptext56 1FE0  
                          __ptext48 22F8                            __ptext57 23C4  
                          __ptext49 1744                            __ptext58 2208  
                          __ptext59 23FA                      i1send_msg@data 000F  
                    i1send_msg@qmsg 0015                      i1send_msg@slot 0014  
                    i1send_msg@qptr 000B                            _init_i2c 1DA2  
               _init_timer1_lthread 237C                       __size_of_main 02EE  
                     ??i2_check_msg 0082                   main@t1thread_data 01BC  
                       ??_check_msg 0188                  __end_of_init_queue 1CC2  
              __size_of_SleepIfOkay 006A                            _recv_msg 0C26  
  i2c_slave_int_handler@msg_to_send 00A9               ??_i2c_configure_slave 0186  
                          _send_msg 0EC2                      init_queue@qptr 0186  
                     ??_Delay1KTCYx 0186                      ??i2_uart_trans 0082  
                  uart_trans@length 018A                        ??_uart_trans 0188  
               _InterruptHandlerLow 0018                ?_init_timer1_lthread 0186  
          ??_uart_trans_int_handler 0001                   i2___awmod@divisor 0082  
                 i2___awmod@counter 0085                         _OSCTUNEbits 000F9B  
                        _INTCONbits 000FF2                        _UART_timeout 0049  
                    OpenUSART@spbrg 0186                            memcpy@d1 0186  
                          memcpy@s1 0188             timer0_int_handler@F5112 0051  
           timer0_int_handler@F5114 004B               __end_ofi2_in_high_int 23D6  
                  i2send_msg@length 008C                            intlevel1 0000  
                          intlevel2 0000                ?_InterruptHandlerLow 0001  
           ??_start_i2c_slave_reply 0082                    ___lwmod@dividend 0186  
            ?_uart_recv_int_handler 0001                  __end_of_uart_trans 1744  
                 SetChanADC@channel 0187               _block_on_To_msgqueues 1BCA  
                     ?_handle_start 0001                    ??_timer0_lthread 018E  
       __size_of_ToMainHigh_recvmsg 0042             __end_of_adc_int_handler 22D8  
       __size_of_ToMainHigh_sendmsg 0036                          _OSCCONbits 000FD3  
                  ??_timer1_lthread 01A8                         ??_motorMove 0087  
          ToMainHigh_sendmsg@length 0099                 __end_ofi2_check_msg 223E  
             ??_init_timer1_lthread 0188              ??_InterruptHandlerHigh 00AE  
                 _ToMainLow_recvmsg 206A                   _ToMainLow_sendmsg 2290  
                main@last_reg_recvd 01AE                     ___lwmod@divisor 0188  
              __end_ofi2_in_low_int 2026                  ?_ToMainLow_recvmsg 019E  
               __end_of_Delay1KTCYx 236A                   ??_i2c_int_handler 00AE  
                   ___lwmod@counter 018B                  ?_ToMainLow_sendmsg 0017  
                 ??_i2c_master_send 018A                  i2c_master_send@msg 0187  
                    uart_trans@data 0186                         _SSPCON1bits 000FC6  
                       _SSPCON2bits 000FC5                      i2send_msg@data 008E  
             ??_InterruptHandlerLow 001C                 ??_ToMainLow_recvmsg 01A2  
                    i2send_msg@qmsg 0094                      i2send_msg@slot 0093  
                    i2send_msg@qptr 008A                 ??_ToMainLow_sendmsg 001A  
     i2c_slave_int_handler@i2c_data 00A8                      ??_handle_start 0080  
                      _USART_Status 004E  
