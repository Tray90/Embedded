

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Mar 25 17:52:55 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    83                           	psect	param0,global,class=BANK0,space=1,delta=1
    84  0000                     
    85                           	psect	idataCOMRAM
    86  00230A                     __pidataCOMRAM:
    87                           	opt stack 0
    88                           
    89                           ;initializer for timer0_int_handler@F5115
    90  00230A  04                 	db	4
    91  00230B  00                 	db	0
    92  00230C  00                 	db	0
    93  00230D  00                 	db	0
    94  00230E  00                 	db	0
    95                           
    96                           	psect	idataBANK0
    97  0022EC                     __pidataBANK0:
    98                           	opt stack 0
    99                           
   100                           ;initializer for i2c_slave_int_handler@F5136
   101  0022EC  01                 	db	1
   102  0022ED  01                 	db	1
   103  0022EE  02                 	db	2
   104  0022EF  03                 	db	3
   105  0022F0  06                 	db	6
   106                           
   107                           ;initializer for i2c_slave_int_handler@F5138
   108  0022F1  04                 	db	4
   109  0022F2  00                 	db	0
   110  0022F3  00                 	db	0
   111  0022F4  00                 	db	0
   112  0022F5  00                 	db	0
   113                           
   114                           	psect	idataBANK1
   115  00230F                     __pidataBANK1:
   116                           	opt stack 0
   117                           
   118                           ;initializer for main@F5220
   119  00230F  01                 	db	1
   120  002310  02                 	db	2
   121  0000                     _ADCON0	set	4034
   122  0000                     _ADCON0bits	set	4034
   123  0000                     _ADCON1	set	4033
   124  0000                     _ADCON2	set	4032
   125  0000                     _ADRESH	set	4036
   126  0000                     _INTCON2bits	set	4081
   127  0000                     _INTCONbits	set	4082
   128  0000                     _IPR1bits	set	3999
   129  0000                     _LATA	set	3977
   130  0000                     _LATB	set	3978
   131  0000                     _LATBbits	set	3978
   132  0000                     _OSCCON	set	4051
   133  0000                     _OSCCONbits	set	4051
   134  0000                     _OSCTUNEbits	set	3995
   135  0000                     _PIE1bits	set	3997
   136  0000                     _PIR1bits	set	3998
   137  0000                     _PORTA	set	3968
   138  0000                     _PORTAbits	set	3968
   139  0000                     _RCONbits	set	4048
   140  0000                     _RCREG	set	4014
   141  0000                     _RCSTA	set	4011
   142  0000                     _RCSTAbits	set	4011
   143  0000                     _SPBRG	set	4015
   144  0000                     _SPBRGH	set	4016
   145  0000                     _SSPADD	set	4040
   146  0000                     _SSPBUF	set	4041
   147  0000                     _SSPCON1	set	4038
   148  0000                     _SSPCON1bits	set	4038
   149  0000                     _SSPCON2	set	4037
   150  0000                     _SSPCON2bits	set	4037
   151  0000                     _SSPSTAT	set	4039
   152  0000                     _SSPSTATbits	set	4039
   153  0000                     _T0CON	set	4053
   154  0000                     _T0CONbits	set	4053
   155  0000                     _T1CON	set	4045
   156  0000                     _T1CONbits	set	4045
   157  0000                     _TMR0H	set	4055
   158  0000                     _TMR0L	set	4054
   159  0000                     _TMR1H	set	4047
   160  0000                     _TMR1L	set	4046
   161  0000                     _TRISA	set	3986
   162  0000                     _TRISB	set	3987
   163  0000                     _TRISC	set	3988
   164  0000                     _TRISCbits	set	3988
   165  0000                     _TXREG	set	4013
   166  0000                     _TXSTA	set	4012
   167  0000                     _TXSTAbits	set	4012
   168                           
   169                           	psect	nvCOMRAM
   170  000057                     __pnvCOMRAM:
   171                           	opt stack 0
   172  000057                     _uc_ptr:
   173                           	opt stack 0
   174  000057                     	ds	2
   175                           
   176                           	psect	nvBANK0
   177  0000C9                     __pnvBANK0:
   178                           	opt stack 0
   179  0000C9                     _ic_ptr:
   180                           	opt stack 0
   181  0000C9                     	ds	2
   182                           
   183                           ; #config settings
   184  0000                     
   185                           	psect	cinit
   186  001896                     __pcinit:
   187                           	opt stack 0
   188  001896                     start_initialization:
   189                           	opt stack 0
   190  001896                     __initialization:
   191                           	opt stack 0
   192                           
   193                           ; Clear objects allocated to BANK2 (134 bytes)
   194  001896  EE02  F000         	lfsr	0,__pbssBANK2
   195  00189A  0E86               	movlw	134
   196  00189C                     clear_0:
   197  00189C  6AEE               	clrf	postinc0,c
   198  00189E  06E8               	decf	wreg,f,c
   199  0018A0  E1FD               	bnz	clear_0
   200                           
   201                           ; Clear objects allocated to BANK1 (134 bytes)
   202  0018A2  EE01  F000         	lfsr	0,__pbssBANK1
   203  0018A6  0E86               	movlw	134
   204  0018A8                     clear_1:
   205  0018A8  6AEE               	clrf	postinc0,c
   206  0018AA  06E8               	decf	wreg,f,c
   207  0018AC  E1FD               	bnz	clear_1
   208                           
   209                           ; Clear objects allocated to BANK0 (1 bytes)
   210  0018AE  0100               	movlb	0
   211  0018B0  6BCB               	clrf	__pbssBANK0& (0+255),b
   212                           
   213                           ; Clear objects allocated to COMRAM (37 bytes)
   214  0018B2  EE00  F02D         	lfsr	0,__pbssCOMRAM
   215  0018B6  0E25               	movlw	37
   216  0018B8                     clear_2:
   217  0018B8  6AEE               	clrf	postinc0,c
   218  0018BA  06E8               	decf	wreg,f,c
   219  0018BC  E1FD               	bnz	clear_2
   220                           
   221                           ; Initialize objects allocated to BANK1 (2 bytes)
   222                           ; load TBLPTR registers with __pidataBANK1
   223  0018BE  0E0F               	movlw	low __pidataBANK1
   224  0018C0  6EF6               	movwf	tblptrl,c
   225  0018C2  0E23               	movlw	high __pidataBANK1
   226  0018C4  6EF7               	movwf	tblptrh,c
   227  0018C6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   228  0018C8  6EF8               	movwf	tblptru,c
   229  0018CA  0009               	tblrd		*+	;fetch initializer
   230  0018CC  CFF5 F1EA          	movff	tablat,__pdataBANK1
   231  0018D0  0009               	tblrd		*+	;fetch initializer
   232  0018D2  CFF5 F1EB          	movff	tablat,__pdataBANK1+1
   233                           
   234                           ; Initialize objects allocated to BANK0 (10 bytes)
   235                           ; load TBLPTR registers with __pidataBANK0
   236  0018D6  0EEC               	movlw	low __pidataBANK0
   237  0018D8  6EF6               	movwf	tblptrl,c
   238  0018DA  0E22               	movlw	high __pidataBANK0
   239  0018DC  6EF7               	movwf	tblptrh,c
   240  0018DE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   241  0018E0  6EF8               	movwf	tblptru,c
   242  0018E2  EE00  F0BF         	lfsr	0,__pdataBANK0
   243  0018E6  EE10 F00A          	lfsr	1,10
   244  0018EA                     copy_data0:
   245  0018EA  0009               	tblrd		*+
   246  0018EC  CFF5 FFEE          	movff	tablat,postinc0
   247  0018F0  50E5               	movf	postdec1,w,c
   248  0018F2  50E1               	movf	fsr1l,w,c
   249  0018F4  E1FA               	bnz	copy_data0
   250                           
   251                           ; Initialize objects allocated to COMRAM (5 bytes)
   252                           ; load TBLPTR registers with __pidataCOMRAM
   253  0018F6  0E0A               	movlw	low __pidataCOMRAM
   254  0018F8  6EF6               	movwf	tblptrl,c
   255  0018FA  0E23               	movlw	high __pidataCOMRAM
   256  0018FC  6EF7               	movwf	tblptrh,c
   257  0018FE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   258  001900  6EF8               	movwf	tblptru,c
   259  001902  EE00  F052         	lfsr	0,__pdataCOMRAM
   260  001906  EE10 F005          	lfsr	1,5
   261  00190A                     copy_data1:
   262  00190A  0009               	tblrd		*+
   263  00190C  CFF5 FFEE          	movff	tablat,postinc0
   264  001910  50E5               	movf	postdec1,w,c
   265  001912  50E1               	movf	fsr1l,w,c
   266  001914  E1FA               	bnz	copy_data1
   267  001916                     end_of_initialization:
   268                           	opt stack 0
   269  001916                     __end_of__initialization:
   270                           	opt stack 0
   271  001916  0E00               	movlw	low (__Lmediumconst shr (0+16))
   272  001918  6EF8               	movwf	tblptru,c
   273  00191A  0100               	movlb	0
   274  00191C  EF03  F004         	goto	_main	;jump to C main() function
   275                           tblptru	equ	0xFF8
   276                           tblptrh	equ	0xFF7
   277                           tblptrl	equ	0xFF6
   278                           tablat	equ	0xFF5
   279                           postinc0	equ	0xFEE
   280                           wreg	equ	0xFE8
   281                           postdec1	equ	0xFE5
   282                           fsr1l	equ	0xFE1
   283                           
   284                           	psect	bssCOMRAM
   285  00002D                     __pbssCOMRAM:
   286                           	opt stack 0
   287  00002D                     _adcbuffer:
   288                           	opt stack 0
   289  00002D                     	ds	28
   290  000049                     _UART_timeout:
   291                           	opt stack 0
   292  000049                     	ds	2
   293  00004B                     timer0_int_handler@F5117:
   294                           	opt stack 0
   295  00004B                     	ds	2
   296  00004D                     _MQ_Main_Willing_to_block:
   297                           	opt stack 0
   298  00004D                     	ds	1
   299  00004E                     _USART_Status:
   300                           	opt stack 0
   301  00004E                     	ds	1
   302  00004F                     _distDesired:
   303                           	opt stack 0
   304  00004F                     	ds	1
   305  000050                     _leftEncoder:
   306                           	opt stack 0
   307  000050                     	ds	1
   308  000051                     _rightEncoder:
   309                           	opt stack 0
   310  000051                     	ds	1
   311                           tblptru	equ	0xFF8
   312                           tblptrh	equ	0xFF7
   313                           tblptrl	equ	0xFF6
   314                           tablat	equ	0xFF5
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           postdec1	equ	0xFE5
   318                           fsr1l	equ	0xFE1
   319                           
   320                           	psect	dataCOMRAM
   321  000052                     __pdataCOMRAM:
   322                           	opt stack 0
   323  000052                     timer0_int_handler@F5115:
   324                           	opt stack 0
   325  000052                     	ds	5
   326                           tblptru	equ	0xFF8
   327                           tblptrh	equ	0xFF7
   328                           tblptrl	equ	0xFF6
   329                           tablat	equ	0xFF5
   330                           postinc0	equ	0xFEE
   331                           wreg	equ	0xFE8
   332                           postdec1	equ	0xFE5
   333                           fsr1l	equ	0xFE1
   334                           
   335                           	psect	bssBANK0
   336  0000CB                     __pbssBANK0:
   337                           	opt stack 0
   338  0000CB                     _distMoved:
   339                           	opt stack 0
   340  0000CB                     	ds	1
   341                           tblptru	equ	0xFF8
   342                           tblptrh	equ	0xFF7
   343                           tblptrl	equ	0xFF6
   344                           tablat	equ	0xFF5
   345                           postinc0	equ	0xFEE
   346                           wreg	equ	0xFE8
   347                           postdec1	equ	0xFE5
   348                           fsr1l	equ	0xFE1
   349                           
   350                           	psect	dataBANK0
   351  0000BF                     __pdataBANK0:
   352                           	opt stack 0
   353  0000BF                     i2c_slave_int_handler@F5136:
   354                           	opt stack 0
   355  0000BF                     	ds	5
   356  0000C4                     i2c_slave_int_handler@F5138:
   357                           	opt stack 0
   358  0000C4                     	ds	5
   359                           tblptru	equ	0xFF8
   360                           tblptrh	equ	0xFF7
   361                           tblptrl	equ	0xFF6
   362                           tablat	equ	0xFF5
   363                           postinc0	equ	0xFEE
   364                           wreg	equ	0xFE8
   365                           postdec1	equ	0xFE5
   366                           fsr1l	equ	0xFE1
   367                           
   368                           	psect	bssBANK1
   369  000100                     __pbssBANK1:
   370                           	opt stack 0
   371  000100                     _ToMainHigh_MQ:
   372                           	opt stack 0
   373  000100                     	ds	67
   374  000143                     _ToMainLow_MQ:
   375                           	opt stack 0
   376  000143                     	ds	67
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           postdec1	equ	0xFE5
   384                           fsr1l	equ	0xFE1
   385                           
   386                           	psect	dataBANK1
   387  0001EA                     __pdataBANK1:
   388                           	opt stack 0
   389  0001EA                     main@F5220:
   390                           	opt stack 0
   391  0001EA                     	ds	2
   392                           tblptru	equ	0xFF8
   393                           tblptrh	equ	0xFF7
   394                           tblptrl	equ	0xFF6
   395                           tablat	equ	0xFF5
   396                           postinc0	equ	0xFEE
   397                           wreg	equ	0xFE8
   398                           postdec1	equ	0xFE5
   399                           fsr1l	equ	0xFE1
   400                           
   401                           	psect	bssBANK2
   402  000200                     __pbssBANK2:
   403                           	opt stack 0
   404  000200                     _FromMainHigh_MQ:
   405                           	opt stack 0
   406  000200                     	ds	67
   407  000243                     _FromMainLow_MQ:
   408                           	opt stack 0
   409  000243                     	ds	67
   410                           tblptru	equ	0xFF8
   411                           tblptrh	equ	0xFF7
   412                           tblptrl	equ	0xFF6
   413                           tablat	equ	0xFF5
   414                           postinc0	equ	0xFEE
   415                           wreg	equ	0xFE8
   416                           postdec1	equ	0xFE5
   417                           fsr1l	equ	0xFE1
   418                           
   419                           	psect	cstackBANK1
   420  000186                     __pcstackBANK1:
   421                           	opt stack 0
   422  000186                     ??_SetChanADC:
   423  000186                     ?_in_high_int:
   424                           	opt stack 0
   425  000186                     ?___awmod:
   426                           	opt stack 0
   427  000186                     ?___lwmod:
   428                           	opt stack 0
   429  000186                     i2c_master_send@recvlength:
   430                           	opt stack 0
   431  000186                     i2c_configure_slave@addr:
   432                           	opt stack 0
   433  000186                     OpenADC@config2:
   434                           	opt stack 0
   435  000186                     OpenTimer0@config:
   436                           	opt stack 0
   437  000186                     OpenTimer1@config:
   438                           	opt stack 0
   439  000186                     Delay1KTCYx@unit:
   440                           	opt stack 0
   441  000186                     init_queue@qptr:
   442                           	opt stack 0
   443  000186                     check_msg@qptr:
   444                           	opt stack 0
   445  000186                     init_i2c@ic:
   446                           	opt stack 0
   447  000186                     init_uart_recv@uc:
   448                           	opt stack 0
   449  000186                     uart_trans@data:
   450                           	opt stack 0
   451  000186                     timer0_lthread@tptr:
   452                           	opt stack 0
   453  000186                     init_timer1_lthread@tptr:
   454                           	opt stack 0
   455  000186                     OpenUSART@spbrg:
   456                           	opt stack 0
   457  000186                     ___awmod@dividend:
   458                           	opt stack 0
   459  000186                     ___lwmod@dividend:
   460                           	opt stack 0
   461  000186                     memcpy@d1:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x0
   465  000186                     	ds	1
   466  000187                     OpenADC@portconfig:
   467                           	opt stack 0
   468  000187                     SetChanADC@channel:
   469                           	opt stack 0
   470  000187                     i2c_master_send@msg:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x1
   474  000187                     	ds	1
   475  000188                     ??_OpenUSART:
   476  000188                     ??_OpenADC:
   477  000188                     ??_uart_trans:
   478  000188                     ??_init_queue:
   479  000188                     ??_check_msg:
   480  000188                     ?_in_low_int:
   481                           	opt stack 0
   482  000188                     timer0_lthread@msgtype:
   483                           	opt stack 0
   484  000188                     ___awmod@divisor:
   485                           	opt stack 0
   486  000188                     ___lwmod@divisor:
   487                           	opt stack 0
   488  000188                     memcpy@s1:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x2
   492  000188                     	ds	1
   493  000189                     init_queue@i:
   494                           	opt stack 0
   495  000189                     i2c_master_send@slave_addr:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x3
   499  000189                     	ds	1
   500  00018A                     ??_init_queues:
   501  00018A                     ??_i2c_master_send:
   502  00018A                     ??___awmod:
   503  00018A                     ??___lwmod:
   504  00018A                     ?_in_main:
   505                           	opt stack 0
   506  00018A                     uart_trans@length:
   507                           	opt stack 0
   508  00018A                     OpenADC@config:
   509                           	opt stack 0
   510  00018A                     timer0_lthread@length:
   511                           	opt stack 0
   512  00018A                     memcpy@n:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x4
   516  00018A                     	ds	1
   517  00018B                     OpenUSART@config:
   518                           	opt stack 0
   519  00018B                     ___awmod@counter:
   520                           	opt stack 0
   521  00018B                     ___lwmod@counter:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x5
   525  00018B                     	ds	1
   526  00018C                     ??_block_on_To_msgqueues:
   527  00018C                     i2c_master_send@sendlength:
   528                           	opt stack 0
   529  00018C                     ___awmod@sign:
   530                           	opt stack 0
   531  00018C                     timer0_lthread@msgbuffer:
   532                           	opt stack 0
   533  00018C                     memcpy@d:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x6
   537  00018C                     	ds	2
   538  00018E                     timer0_lthread@msgval:
   539                           	opt stack 0
   540  00018E                     memcpy@s:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x8
   544  00018E                     	ds	2
   545  000190                     send_msg@qptr:
   546                           	opt stack 0
   547  000190                     recv_msg@qptr:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0xA
   551  000190                     	ds	2
   552  000192                     send_msg@length:
   553                           	opt stack 0
   554  000192                     recv_msg@maxlength:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0xC
   558  000192                     	ds	1
   559  000193                     send_msg@msgtype:
   560                           	opt stack 0
   561  000193                     recv_msg@msgtype:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0xD
   565  000193                     	ds	1
   566  000194                     send_msg@data:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0xE
   570  000194                     	ds	1
   571  000195                     recv_msg@data:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0xF
   575  000195                     	ds	1
   576  000196                     ??_send_msg:
   577                           
   578                           ; 0 bytes @ 0x10
   579  000196                     	ds	1
   580  000197                     ??_recv_msg:
   581  000197                     send_msg@tlength:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x11
   585  000197                     	ds	2
   586  000199                     send_msg@slot:
   587                           	opt stack 0
   588  000199                     recv_msg@slot:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x13
   592  000199                     	ds	1
   593  00019A                     send_msg@qmsg:
   594                           	opt stack 0
   595  00019A                     recv_msg@tlength:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x14
   599  00019A                     	ds	2
   600  00019C                     FromMainHigh_sendmsg@msgtype:
   601                           	opt stack 0
   602  00019C                     recv_msg@qmsg:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x16
   606  00019C                     	ds	1
   607  00019D                     FromMainHigh_sendmsg@data:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x17
   611  00019D                     	ds	1
   612  00019E                     ToMainLow_recvmsg@msgtype:
   613                           	opt stack 0
   614  00019E                     ToMainHigh_recvmsg@msgtype:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x18
   618  00019E                     	ds	1
   619  00019F                     FromMainHigh_sendmsg@length:
   620                           	opt stack 0
   621                           
   622                           ; 1 bytes @ 0x19
   623  00019F                     	ds	1
   624  0001A0                     ToMainLow_recvmsg@data:
   625                           	opt stack 0
   626  0001A0                     ToMainHigh_recvmsg@data:
   627                           	opt stack 0
   628  0001A0                     timer1_lthread@tptr:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x1A
   632  0001A0                     	ds	2
   633  0001A2                     ToMainLow_recvmsg@maxlength:
   634                           	opt stack 0
   635  0001A2                     ToMainHigh_recvmsg@maxlength:
   636                           	opt stack 0
   637  0001A2                     timer1_lthread@msgtype:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x1C
   641  0001A2                     	ds	2
   642  0001A4                     timer1_lthread@length:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x1E
   646  0001A4                     	ds	2
   647  0001A6                     timer1_lthread@msgbuffer:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x20
   651  0001A6                     	ds	2
   652  0001A8                     ??_timer1_lthread:
   653                           
   654                           ; 0 bytes @ 0x22
   655  0001A8                     	ds	1
   656  0001A9                     timer1_lthread@retval:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0x23
   660  0001A9                     	ds	1
   661  0001AA                     ??_main:
   662                           
   663                           ; 0 bytes @ 0x24
   664  0001AA                     	ds	2
   665  0001AC                     main@msg:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x26
   669  0001AC                     	ds	2
   670  0001AE                     main@last_reg_recvd:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0x28
   674  0001AE                     	ds	1
   675  0001AF                     main@msgbuffer:
   676                           	opt stack 0
   677                           
   678                           ; 11 bytes @ 0x29
   679  0001AF                     	ds	11
   680  0001BA                     main@t0thread_data:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x34
   684  0001BA                     	ds	2
   685  0001BC                     main@t1thread_data:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x36
   689  0001BC                     	ds	2
   690  0001BE                     main@msgtype:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x38
   694  0001BE                     	ds	1
   695  0001BF                     main@length:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x39
   699  0001BF                     	ds	1
   700  0001C0                     main@uc:
   701                           	opt stack 0
   702                           
   703                           ; 13 bytes @ 0x3A
   704  0001C0                     	ds	13
   705  0001CD                     main@ic:
   706                           	opt stack 0
   707                           
   708                           ; 29 bytes @ 0x47
   709  0001CD                     	ds	29
   710                           tblptru	equ	0xFF8
   711                           tblptrh	equ	0xFF7
   712                           tblptrl	equ	0xFF6
   713                           tablat	equ	0xFF5
   714                           postinc0	equ	0xFEE
   715                           wreg	equ	0xFE8
   716                           postdec1	equ	0xFE5
   717                           fsr1l	equ	0xFE1
   718                           
   719                           	psect	cstackBANK0
   720  000080                     __pcstackBANK0:
   721                           	opt stack 0
   722  000080                     ?i2_in_high_int:
   723                           	opt stack 0
   724  000080                     ?i2___awmod:
   725                           	opt stack 0
   726  000080                     handle_start@data_read:
   727                           	opt stack 0
   728  000080                     start_i2c_slave_reply@msg:
   729                           	opt stack 0
   730  000080                     WriteTimer0@timer0:
   731                           	opt stack 0
   732  000080                     i2check_msg@qptr:
   733                           	opt stack 0
   734  000080                     i2uart_trans@data:
   735                           	opt stack 0
   736  000080                     i2memcpy@d1:
   737                           	opt stack 0
   738  000080                     i2___awmod@dividend:
   739                           	opt stack 0
   740                           
   741                           ; 2 bytes @ 0x0
   742  000080                     	ds	2
   743  000082                     ??_start_i2c_slave_reply:
   744  000082                     ??i2_check_msg:
   745  000082                     ??i2_uart_trans:
   746  000082                     ?i2_in_low_int:
   747                           	opt stack 0
   748  000082                     WriteTimer0@timer:
   749                           	opt stack 0
   750  000082                     i2memcpy@s1:
   751                           	opt stack 0
   752  000082                     i2___awmod@divisor:
   753                           	opt stack 0
   754                           
   755                           ; 2 bytes @ 0x2
   756  000082                     	ds	2
   757  000084                     ??i2___awmod:
   758  000084                     start_i2c_slave_reply@length:
   759                           	opt stack 0
   760  000084                     i2uart_trans@length:
   761                           	opt stack 0
   762  000084                     i2memcpy@n:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x4
   766  000084                     	ds	1
   767  000085                     motorMove@right:
   768                           	opt stack 0
   769  000085                     i2___awmod@counter:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0x5
   773  000085                     	ds	1
   774  000086                     motorMove@distance:
   775                           	opt stack 0
   776  000086                     i2___awmod@sign:
   777                           	opt stack 0
   778  000086                     i2memcpy@d:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x6
   782  000086                     	ds	1
   783  000087                     motorMove@left:
   784                           	opt stack 0
   785                           
   786                           ; 1 bytes @ 0x7
   787  000087                     	ds	1
   788  000088                     motorMove@direction:
   789                           	opt stack 0
   790  000088                     i2memcpy@s:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x8
   794  000088                     	ds	2
   795  00008A                     ??_timer0_int_handler:
   796  00008A                     i2send_msg@qptr:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0xA
   800  00008A                     	ds	2
   801  00008C                     i2send_msg@length:
   802                           	opt stack 0
   803  00008C                     timer0_int_handler@motorcomm:
   804                           	opt stack 0
   805                           
   806                           ; 2 bytes @ 0xC
   807  00008C                     	ds	1
   808  00008D                     i2send_msg@msgtype:
   809                           	opt stack 0
   810                           
   811                           ; 1 bytes @ 0xD
   812  00008D                     	ds	1
   813  00008E                     i2send_msg@data:
   814                           	opt stack 0
   815  00008E                     timer0_int_handler@motormsg:
   816                           	opt stack 0
   817                           
   818                           ; 5 bytes @ 0xE
   819  00008E                     	ds	2
   820  000090                     ??i2_send_msg:
   821                           
   822                           ; 0 bytes @ 0x10
   823  000090                     	ds	1
   824  000091                     i2send_msg@tlength:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0x11
   828  000091                     	ds	2
   829  000093                     i2send_msg@slot:
   830                           	opt stack 0
   831                           
   832                           ; 1 bytes @ 0x13
   833  000093                     	ds	1
   834  000094                     i2send_msg@qmsg:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x14
   838  000094                     	ds	2
   839  000096                     ToMainHigh_sendmsg@msgtype:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x16
   843  000096                     	ds	1
   844  000097                     ToMainHigh_sendmsg@data:
   845                           	opt stack 0
   846                           
   847                           ; 2 bytes @ 0x17
   848  000097                     	ds	2
   849  000099                     ToMainHigh_sendmsg@length:
   850                           	opt stack 0
   851                           
   852                           ; 1 bytes @ 0x19
   853  000099                     	ds	1
   854  00009A                     ??_i2c_slave_int_handler:
   855                           
   856                           ; 0 bytes @ 0x1A
   857  00009A                     	ds	2
   858  00009C                     i2c_slave_int_handler@sensormsg:
   859                           	opt stack 0
   860                           
   861                           ; 5 bytes @ 0x1C
   862  00009C                     	ds	5
   863  0000A1                     i2c_slave_int_handler@dist:
   864                           	opt stack 0
   865                           
   866                           ; 5 bytes @ 0x21
   867  0000A1                     	ds	5
   868  0000A6                     i2c_slave_int_handler@error_buf:
   869                           	opt stack 0
   870                           
   871                           ; 3 bytes @ 0x26
   872  0000A6                     	ds	3
   873  0000A9                     i2c_slave_int_handler@data_written:
   874                           	opt stack 0
   875                           
   876                           ; 1 bytes @ 0x29
   877  0000A9                     	ds	1
   878  0000AA                     i2c_slave_int_handler@overrun_error:
   879                           	opt stack 0
   880                           
   881                           ; 1 bytes @ 0x2A
   882  0000AA                     	ds	1
   883  0000AB                     i2c_slave_int_handler@i2c_data:
   884                           	opt stack 0
   885                           
   886                           ; 1 bytes @ 0x2B
   887  0000AB                     	ds	1
   888  0000AC                     i2c_slave_int_handler@msg_to_send:
   889                           	opt stack 0
   890                           
   891                           ; 1 bytes @ 0x2C
   892  0000AC                     	ds	1
   893  0000AD                     i2c_slave_int_handler@length:
   894                           	opt stack 0
   895                           
   896                           ; 2 bytes @ 0x2D
   897  0000AD                     	ds	2
   898  0000AF                     i2c_slave_int_handler@msg_ready:
   899                           	opt stack 0
   900                           
   901                           ; 1 bytes @ 0x2F
   902  0000AF                     	ds	1
   903  0000B0                     i2c_slave_int_handler@data_read:
   904                           	opt stack 0
   905                           
   906                           ; 1 bytes @ 0x30
   907  0000B0                     	ds	1
   908  0000B1                     ??_InterruptHandlerHigh:
   909                           
   910                           ; 0 bytes @ 0x31
   911  0000B1                     	ds	14
   912                           tblptru	equ	0xFF8
   913                           tblptrh	equ	0xFF7
   914                           tblptrl	equ	0xFF6
   915                           tablat	equ	0xFF5
   916                           postinc0	equ	0xFEE
   917                           wreg	equ	0xFE8
   918                           postdec1	equ	0xFE5
   919                           fsr1l	equ	0xFE1
   920                           
   921                           	psect	cstackCOMRAM
   922  000001                     __pcstackCOMRAM:
   923                           	opt stack 0
   924  000001                     ??_uart_trans_int_handler:
   925  000001                     ?i1___awmod:
   926                           	opt stack 0
   927  000001                     ReadUSART@data:
   928                           	opt stack 0
   929  000001                     WriteTimer1@timer1:
   930                           	opt stack 0
   931  000001                     i1memcpy@d1:
   932                           	opt stack 0
   933  000001                     i1___awmod@dividend:
   934                           	opt stack 0
   935                           
   936                           ; 2 bytes @ 0x0
   937  000001                     	ds	2
   938  000003                     WriteTimer1@timer:
   939                           	opt stack 0
   940  000003                     i1memcpy@s1:
   941                           	opt stack 0
   942  000003                     i1___awmod@divisor:
   943                           	opt stack 0
   944                           
   945                           ; 2 bytes @ 0x2
   946  000003                     	ds	2
   947  000005                     ??i1___awmod:
   948  000005                     i1memcpy@n:
   949                           	opt stack 0
   950                           
   951                           ; 2 bytes @ 0x4
   952  000005                     	ds	1
   953  000006                     i1___awmod@counter:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x5
   957  000006                     	ds	1
   958  000007                     i1___awmod@sign:
   959                           	opt stack 0
   960  000007                     i1memcpy@d:
   961                           	opt stack 0
   962                           
   963                           ; 2 bytes @ 0x6
   964  000007                     	ds	2
   965  000009                     i1memcpy@s:
   966                           	opt stack 0
   967                           
   968                           ; 2 bytes @ 0x8
   969  000009                     	ds	2
   970  00000B                     i1send_msg@qptr:
   971                           	opt stack 0
   972                           
   973                           ; 2 bytes @ 0xA
   974  00000B                     	ds	2
   975  00000D                     i1send_msg@length:
   976                           	opt stack 0
   977                           
   978                           ; 1 bytes @ 0xC
   979  00000D                     	ds	1
   980  00000E                     i1send_msg@msgtype:
   981                           	opt stack 0
   982                           
   983                           ; 1 bytes @ 0xD
   984  00000E                     	ds	1
   985  00000F                     i1send_msg@data:
   986                           	opt stack 0
   987                           
   988                           ; 2 bytes @ 0xE
   989  00000F                     	ds	2
   990  000011                     ??i1_send_msg:
   991                           
   992                           ; 0 bytes @ 0x10
   993  000011                     	ds	1
   994  000012                     i1send_msg@tlength:
   995                           	opt stack 0
   996                           
   997                           ; 2 bytes @ 0x11
   998  000012                     	ds	2
   999  000014                     i1send_msg@slot:
  1000                           	opt stack 0
  1001                           
  1002                           ; 1 bytes @ 0x13
  1003  000014                     	ds	1
  1004  000015                     i1send_msg@qmsg:
  1005                           	opt stack 0
  1006                           
  1007                           ; 2 bytes @ 0x14
  1008  000015                     	ds	2
  1009  000017                     ToMainLow_sendmsg@msgtype:
  1010                           	opt stack 0
  1011                           
  1012                           ; 1 bytes @ 0x16
  1013  000017                     	ds	1
  1014  000018                     ToMainLow_sendmsg@data:
  1015                           	opt stack 0
  1016                           
  1017                           ; 2 bytes @ 0x17
  1018  000018                     	ds	2
  1019  00001A                     ToMainLow_sendmsg@length:
  1020                           	opt stack 0
  1021                           
  1022                           ; 1 bytes @ 0x19
  1023  00001A                     	ds	1
  1024  00001B                     ??_uart_recv_int_handler:
  1025                           
  1026                           ; 0 bytes @ 0x1A
  1027  00001B                     	ds	1
  1028  00001C                     ??_InterruptHandlerLow:
  1029                           
  1030                           ; 0 bytes @ 0x1B
  1031  00001C                     	ds	17
  1032                           tblptru	equ	0xFF8
  1033                           tblptrh	equ	0xFF7
  1034                           tblptrl	equ	0xFF6
  1035                           tablat	equ	0xFF5
  1036                           postinc0	equ	0xFEE
  1037                           wreg	equ	0xFE8
  1038                           postdec1	equ	0xFE5
  1039                           fsr1l	equ	0xFE1
  1040                           
  1041 ;;
  1042 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1043 ;;
  1044 ;; *************** function _main *****************
  1045 ;; Defined at:
  1046 ;;		line 186 in file "../src/main.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  ic             29   71[BANK1 ] struct __i2c_comm
  1051 ;;  uc             13   58[BANK1 ] struct __uart_comm
  1052 ;;  msgbuffer      11   41[BANK1 ] unsigned char [11]
  1053 ;;  t1thread_dat    2   54[BANK1 ] struct __timer1_thread_s
  1054 ;;  t0thread_dat    2   52[BANK1 ] struct __timer0_thread_s
  1055 ;;  msg             2   38[BANK1 ] unsigned char [2]
  1056 ;;  uthread_data    2    0        struct __uart_thread_str
  1057 ;;  length          1   57[BANK1 ] char 
  1058 ;;  msgtype         1   56[BANK1 ] unsigned char 
  1059 ;;  last_reg_rec    1   40[BANK1 ] unsigned char 
  1060 ;;  i               1    0        unsigned char 
  1061 ;;  c               1    0        unsigned char 
  1062 ;; Return value:  Size  Location     Type
  1063 ;;		None               void
  1064 ;; Registers used:
  1065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1071 ;;      Params:         0       0       0       0       0
  1072 ;;      Locals:         0       0      62       0       0
  1073 ;;      Temps:          0       0       2       0       0
  1074 ;;      Totals:         0       0      64       0       0
  1075 ;;Total ram usage:       64 bytes
  1076 ;; Hardware stack levels required when called:   15
  1077 ;; This function calls:
  1078 ;;		_OpenADC
  1079 ;;		_OpenTimer0
  1080 ;;		_OpenTimer1
  1081 ;;		_OpenUSART
  1082 ;;		_SetChanADC
  1083 ;;		_ToMainHigh_recvmsg
  1084 ;;		_ToMainLow_recvmsg
  1085 ;;		_block_on_To_msgqueues
  1086 ;;		_enable_interrupts
  1087 ;;		_i2c_configure_slave
  1088 ;;		_i2c_master_send
  1089 ;;		_init_i2c
  1090 ;;		_init_queues
  1091 ;;		_init_timer1_lthread
  1092 ;;		_init_uart_recv
  1093 ;;		_timer0_lthread
  1094 ;;		_timer1_lthread
  1095 ;;		_uart_trans
  1096 ;; This function is called by:
  1097 ;;		Startup code after reset
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text0
  1102  000806                     __ptext0:
  1103                           	opt stack 0
  1104  000806                     _main:
  1105                           	opt stack 16
  1106                           
  1107                           ;main.c: 187: char c;
  1108                           ;main.c: 188: signed char length;
  1109                           ;main.c: 189: unsigned char msgtype;
  1110                           ;main.c: 190: unsigned char last_reg_recvd;
  1111                           ;main.c: 191: uart_comm uc;
  1112                           ;main.c: 192: i2c_comm ic;
  1113                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
  1114                           ;main.c: 194: unsigned char i;
  1115                           ;main.c: 195: uart_thread_struct uthread_data;
  1116                           ;main.c: 196: timer1_thread_struct t1thread_data;
  1117                           ;main.c: 197: timer0_thread_struct t0thread_data;
  1118                           ;main.c: 205: OSCCON = 0x82;
  1119                           
  1120                           ;incstack = 0
  1121  000806  0E82               	movlw	130
  1122  000808  6ED3               	movwf	4051,c	;volatile
  1123                           
  1124                           ;main.c: 206: OSCTUNEbits.PLLEN = 0;
  1125  00080A  9C9B               	bcf	3995,6,c	;volatile
  1126                           
  1127                           ;main.c: 224: init_uart_recv(&uc);
  1128  00080C  0101               	movlb	1	; () banked
  1129  00080E  0E01               	movlw	high main@uc
  1130  000810  0101               	movlb	1	; () banked
  1131  000812  0101               	movlb	1	; () banked
  1132  000814  6F87               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1133  000816  0101               	movlb	1	; () banked
  1134  000818  0EC0               	movlw	low main@uc
  1135  00081A  0101               	movlb	1	; () banked
  1136  00081C  0101               	movlb	1	; () banked
  1137  00081E  6F86               	movwf	init_uart_recv@uc& (0+255),b
  1138  000820  EC10  F011         	call	_init_uart_recv	;wreg free
  1139                           
  1140                           ;main.c: 227: init_i2c(&ic);
  1141  000824  0101               	movlb	1	; () banked
  1142  000826  0E01               	movlw	high main@ic
  1143  000828  0101               	movlb	1	; () banked
  1144  00082A  0101               	movlb	1	; () banked
  1145  00082C  6F87               	movwf	(init_i2c@ic+1)& (0+255),b
  1146  00082E  0101               	movlb	1	; () banked
  1147  000830  0ECD               	movlw	low main@ic
  1148  000832  0101               	movlb	1	; () banked
  1149  000834  0101               	movlb	1	; () banked
  1150  000836  6F86               	movwf	init_i2c@ic& (0+255),b
  1151  000838  EC46  F00E         	call	_init_i2c	;wreg free
  1152                           
  1153                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1154  00083C  0101               	movlb	1	; () banked
  1155  00083E  0E01               	movlw	high main@t1thread_data
  1156  000840  0101               	movlb	1	; () banked
  1157  000842  0101               	movlb	1	; () banked
  1158  000844  6F87               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1159  000846  0101               	movlb	1	; () banked
  1160  000848  0EBC               	movlw	low main@t1thread_data
  1161  00084A  0101               	movlb	1	; () banked
  1162  00084C  0101               	movlb	1	; () banked
  1163  00084E  6F86               	movwf	init_timer1_lthread@tptr& (0+255),b
  1164  000850  EC42  F011         	call	_init_timer1_lthread	;wreg free
  1165                           
  1166                           ;main.c: 233: init_queues();
  1167  000854  EC0F  F00E         	call	_init_queues	;wreg free
  1168                           
  1169                           ;main.c: 237: TRISB = 0xFF;
  1170  000858  6893               	setf	3987,c	;volatile
  1171                           
  1172                           ;main.c: 238: LATB = 0x0;
  1173  00085A  0E00               	movlw	0
  1174  00085C  6E8A               	movwf	3978,c	;volatile
  1175                           
  1176                           ;main.c: 240: PORTA = 0x0;
  1177  00085E  0E00               	movlw	0
  1178  000860  6E80               	movwf	3968,c	;volatile
  1179                           
  1180                           ;main.c: 241: LATA = 0x0;
  1181  000862  0E00               	movlw	0
  1182  000864  6E89               	movwf	3977,c	;volatile
  1183                           
  1184                           ;main.c: 242: TRISA = 0x0F;
  1185  000866  0E0F               	movlw	15
  1186  000868  6E92               	movwf	3986,c	;volatile
  1187                           
  1188                           ;main.c: 257: OpenTimer0(0b11111111 & 0b11111111 & 0b11111111 & 0b11101111 & 0b11111111);
  1189  00086A  0EEF               	movlw	239
  1190  00086C  ECB3  F010         	call	_OpenTimer0
  1191                           
  1192                           ;main.c: 269: OpenTimer1(0b11111111 & 0b10111111 & 0b11001111 & 0b11111111 & 0b11110111 
      +                          & 0b11111111);
  1193  000870  0E87               	movlw	135
  1194  000872  EC2B  F010         	call	_OpenTimer1
  1195                           
  1196                           ;main.c: 270: TRISC = 0xFF;
  1197  000876  6894               	setf	3988,c	;volatile
  1198                           
  1199                           ;main.c: 278: IPR1bits.ADIP = 0;
  1200  000878  9C9F               	bcf	3999,6,c	;volatile
  1201                           
  1202                           ;main.c: 279: PIE1bits.ADIE = 1;
  1203  00087A  8C9D               	bsf	3997,6,c	;volatile
  1204                           
  1205                           ;main.c: 281: IPR1bits.TMR1IP = 0;
  1206  00087C  909F               	bcf	3999,0,c	;volatile
  1207                           
  1208                           ;main.c: 283: INTCON2bits.TMR0IP = 1;
  1209  00087E  84F1               	bsf	intcon2,2,c	;volatile
  1210                           
  1211                           ;main.c: 285: IPR1bits.RCIP = 0;
  1212  000880  9A9F               	bcf	3999,5,c	;volatile
  1213                           
  1214                           ;main.c: 287: IPR1bits.TXIP = 0;
  1215  000882  989F               	bcf	3999,4,c	;volatile
  1216                           
  1217                           ;main.c: 289: IPR1bits.SSPIP = 1;
  1218  000884  869F               	bsf	3999,3,c	;volatile
  1219                           
  1220                           ;main.c: 306: i2c_configure_slave(0xBE);
  1221  000886  0EBE               	movlw	190
  1222  000888  ECC8  F010         	call	_i2c_configure_slave
  1223                           
  1224                           ;main.c: 325: PIE1bits.SSPIE = 1;
  1225  00088C  869D               	bsf	3997,3,c	;volatile
  1226                           
  1227                           ;main.c: 336: OpenUSART(0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1228                           ;main.c: 337: 0b11111111 & 0b11111111, 38);
  1229  00088E  0E00               	movlw	0
  1230  000890  0101               	movlb	1	; () banked
  1231  000892  0101               	movlb	1	; () banked
  1232  000894  6F87               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1233  000896  0E26               	movlw	38
  1234  000898  0101               	movlb	1	; () banked
  1235  00089A  6F86               	movwf	OpenUSART@spbrg& (0+255),b
  1236  00089C  0EFC               	movlw	252
  1237  00089E  EC02  F00C         	call	_OpenUSART
  1238                           
  1239                           ;main.c: 338: RCSTAbits.SPEN = 1;
  1240  0008A2  8EAB               	bsf	4011,7,c	;volatile
  1241                           
  1242                           ;main.c: 339: TRISC = 0xFF;
  1243  0008A4  6894               	setf	3988,c	;volatile
  1244                           
  1245                           ;main.c: 346: enable_interrupts();
  1246  0008A6  EC7B  F011         	call	_enable_interrupts	;wreg free
  1247                           
  1248                           ;main.c: 360: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1249                           ;main.c: 361: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1250                           ;main.c: 362: 0b1011);
  1251  0008AA  0101               	movlb	1	; () banked
  1252  0008AC  6FAA               	movwf	??_main& (0+255),b
  1253  0008AE  0E0C               	movlw	12
  1254  0008B0  0101               	movlb	1	; () banked
  1255  0008B2  0101               	movlb	1	; () banked
  1256  0008B4  6F86               	movwf	OpenADC@config2& (0+255),b
  1257  0008B6  0101               	movlb	1	; () banked
  1258  0008B8  51AA               	movf	??_main& (0+255),w,b
  1259  0008BA  0101               	movlb	1	; () banked
  1260  0008BC  6FAB               	movwf	(??_main+1)& (0+255),b
  1261  0008BE  0E0B               	movlw	11
  1262  0008C0  0101               	movlb	1	; () banked
  1263  0008C2  0101               	movlb	1	; () banked
  1264  0008C4  6F87               	movwf	OpenADC@portconfig& (0+255),b
  1265  0008C6  0101               	movlb	1	; () banked
  1266  0008C8  51AB               	movf	(??_main+1)& (0+255),w,b
  1267  0008CA  0E53               	movlw	83
  1268  0008CC  EC18  F00D         	call	_OpenADC
  1269                           
  1270                           ;main.c: 363: SetChanADC(0b10001111);
  1271  0008D0  0E8F               	movlw	143
  1272  0008D2  EC00  F011         	call	_SetChanADC
  1273                           
  1274                           ;main.c: 374: unsigned char msg[2] = {0x01, 0x02};
  1275  0008D6  C1EA  F1AC         	movff	main@F5220,main@msg
  1276  0008DA  C1EB  F1AD         	movff	main@F5220+1,main@msg+1
  1277  0008DE                     l3879:
  1278                           
  1279                           ;main.c: 386: block_on_To_msgqueues();
  1280  0008DE  EC5A  F00D         	call	_block_on_To_msgqueues	;wreg free
  1281                           
  1282                           ;main.c: 393: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1283  0008E2  0101               	movlb	1	; () banked
  1284  0008E4  0E01               	movlw	high main@msgtype
  1285  0008E6  0101               	movlb	1	; () banked
  1286  0008E8  0101               	movlb	1	; () banked
  1287  0008EA  6F9F               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1288  0008EC  0101               	movlb	1	; () banked
  1289  0008EE  0EBE               	movlw	low main@msgtype
  1290  0008F0  0101               	movlb	1	; () banked
  1291  0008F2  0101               	movlb	1	; () banked
  1292  0008F4  6F9E               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1293  0008F6  0101               	movlb	1	; () banked
  1294  0008F8  0E01               	movlw	high main@msgbuffer
  1295  0008FA  0101               	movlb	1	; () banked
  1296  0008FC  0101               	movlb	1	; () banked
  1297  0008FE  6FA1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1298  000900  0101               	movlb	1	; () banked
  1299  000902  0EAF               	movlw	low main@msgbuffer
  1300  000904  0101               	movlb	1	; () banked
  1301  000906  0101               	movlb	1	; () banked
  1302  000908  6FA0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1303  00090A  0E0A               	movlw	10
  1304  00090C  ECCB  F00F         	call	_ToMainHigh_recvmsg
  1305  000910  0101               	movlb	1	; () banked
  1306  000912  0101               	movlb	1	; () banked
  1307  000914  6FBF               	movwf	main@length& (0+255),b
  1308                           
  1309                           ; BSR set to: 1
  1310                           ;main.c: 394: if (length < 0) {
  1311  000916  0101               	movlb	1	; () banked
  1312  000918  0101               	movlb	1	; () banked
  1313  00091A  BFBF               	btfsc	main@length& (0+255),7,b
  1314  00091C  D04D               	goto	l3895
  1315  00091E  D03C               	goto	l3893
  1316  000920                     l3887:
  1317                           
  1318                           ; BSR set to: 1
  1319                           ;main.c: 402: {
  1320                           ;main.c: 403: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1321  000920  0101               	movlb	1	; () banked
  1322  000922  0E01               	movlw	high main@t0thread_data
  1323  000924  0101               	movlb	1	; () banked
  1324  000926  0101               	movlb	1	; () banked
  1325  000928  6F87               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1326  00092A  0101               	movlb	1	; () banked
  1327  00092C  0EBA               	movlw	low main@t0thread_data
  1328  00092E  0101               	movlb	1	; () banked
  1329  000930  0101               	movlb	1	; () banked
  1330  000932  6F86               	movwf	timer0_lthread@tptr& (0+255),b
  1331  000934  0101               	movlb	1	; () banked
  1332  000936  0101               	movlb	1	; () banked
  1333  000938  C1BE  F188         	movff	main@msgtype,timer0_lthread@msgtype
  1334  00093C  0101               	movlb	1	; () banked
  1335  00093E  0101               	movlb	1	; () banked
  1336  000940  6B89               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1337  000942  0101               	movlb	1	; () banked
  1338  000944  0101               	movlb	1	; () banked
  1339  000946  51BF               	movf	main@length& (0+255),w,b
  1340  000948  0101               	movlb	1	; () banked
  1341  00094A  0101               	movlb	1	; () banked
  1342  00094C  6F8A               	movwf	timer0_lthread@length& (0+255),b
  1343  00094E  0101               	movlb	1	; () banked
  1344  000950  6B8B               	clrf	(timer0_lthread@length+1)& (0+255),b
  1345  000952  0101               	movlb	1	; () banked
  1346  000954  BF8A               	btfsc	timer0_lthread@length& (0+255),7,b
  1347  000956  078B               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1348  000958  0101               	movlb	1	; () banked
  1349  00095A  0E01               	movlw	high main@msgbuffer
  1350  00095C  0101               	movlb	1	; () banked
  1351  00095E  0101               	movlb	1	; () banked
  1352  000960  6F8D               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1353  000962  0101               	movlb	1	; () banked
  1354  000964  0EAF               	movlw	low main@msgbuffer
  1355  000966  0101               	movlb	1	; () banked
  1356  000968  0101               	movlb	1	; () banked
  1357  00096A  6F8C               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1358  00096C  EC39  F011         	call	_timer0_lthread	;wreg free
  1359                           
  1360                           ;main.c: 404: break;
  1361  000970  D023               	goto	l3895
  1362  000972                     l152:
  1363                           
  1364                           ;main.c: 407: case 41:
  1365                           ;main.c: 408: {
  1366                           ;main.c: 411: last_reg_recvd = msgbuffer[0];
  1367  000972  C1AF  F1AE         	movff	main@msgbuffer,main@last_reg_recvd
  1368                           
  1369                           ;main.c: 412: break;
  1370  000976  D020               	goto	l3895
  1371  000978                     l3889:
  1372                           
  1373                           ;main.c: 415: {
  1374                           ;main.c: 418: uart_trans(length, msgbuffer);
  1375  000978  0101               	movlb	1	; () banked
  1376  00097A  0E01               	movlw	high main@msgbuffer
  1377  00097C  0101               	movlb	1	; () banked
  1378  00097E  0101               	movlb	1	; () banked
  1379  000980  6F87               	movwf	(uart_trans@data+1)& (0+255),b
  1380  000982  0101               	movlb	1	; () banked
  1381  000984  0EAF               	movlw	low main@msgbuffer
  1382  000986  0101               	movlb	1	; () banked
  1383  000988  0101               	movlb	1	; () banked
  1384  00098A  6F86               	movwf	uart_trans@data& (0+255),b
  1385  00098C  0101               	movlb	1	; () banked
  1386  00098E  0101               	movlb	1	; () banked
  1387  000990  51BF               	movf	main@length& (0+255),w,b
  1388  000992  ECAF  F00A         	call	_uart_trans
  1389                           
  1390                           ;main.c: 421: break;
  1391  000996  D010               	goto	l3895
  1392  000998                     l3893:
  1393  000998  0101               	movlb	1	; () banked
  1394  00099A  0101               	movlb	1	; () banked
  1395  00099C  51BE               	movf	main@msgtype& (0+255),w,b
  1396                           
  1397                           ; Switch size 1, requested type "space"
  1398                           ; Number of cases is 5, Range of values is 10 to 46
  1399                           ; switch strategies available:
  1400                           ; Name         Instructions Cycles
  1401                           ; simple_byte           16     9 (average)
  1402                           ;	Chosen strategy is simple_byte
  1403  00099E  0A0A               	xorlw	10	; case 10
  1404  0009A0  B4D8               	btfsc	status,2,c
  1405  0009A2  D7BE               	goto	l3887
  1406  0009A4  0A22               	xorlw	34	; case 40
  1407  0009A6  B4D8               	btfsc	status,2,c
  1408  0009A8  D7E4               	goto	l152
  1409  0009AA  0A01               	xorlw	1	; case 41
  1410  0009AC  B4D8               	btfsc	status,2,c
  1411  0009AE  D7E1               	goto	l152
  1412  0009B0  0A04               	xorlw	4	; case 45
  1413  0009B2  B4D8               	btfsc	status,2,c
  1414  0009B4  D7E1               	goto	l3889
  1415  0009B6  0A03               	xorlw	3	; case 46
  1416  0009B8                     l3895:
  1417                           
  1418                           ;main.c: 436: }
  1419                           ;main.c: 439: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1420  0009B8  0101               	movlb	1	; () banked
  1421  0009BA  0E01               	movlw	high main@msgtype
  1422  0009BC  0101               	movlb	1	; () banked
  1423  0009BE  0101               	movlb	1	; () banked
  1424  0009C0  6F9F               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1425  0009C2  0101               	movlb	1	; () banked
  1426  0009C4  0EBE               	movlw	low main@msgtype
  1427  0009C6  0101               	movlb	1	; () banked
  1428  0009C8  0101               	movlb	1	; () banked
  1429  0009CA  6F9E               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1430  0009CC  0101               	movlb	1	; () banked
  1431  0009CE  0E01               	movlw	high main@msgbuffer
  1432  0009D0  0101               	movlb	1	; () banked
  1433  0009D2  0101               	movlb	1	; () banked
  1434  0009D4  6FA1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1435  0009D6  0101               	movlb	1	; () banked
  1436  0009D8  0EAF               	movlw	low main@msgbuffer
  1437  0009DA  0101               	movlb	1	; () banked
  1438  0009DC  0101               	movlb	1	; () banked
  1439  0009DE  6FA0               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1440  0009E0  0E0A               	movlw	10
  1441  0009E2  ECAA  F00F         	call	_ToMainLow_recvmsg
  1442  0009E6  0101               	movlb	1	; () banked
  1443  0009E8  0101               	movlb	1	; () banked
  1444  0009EA  6FBF               	movwf	main@length& (0+255),b
  1445                           
  1446                           ; BSR set to: 1
  1447                           ;main.c: 440: if (length < 0) {
  1448  0009EC  0101               	movlb	1	; () banked
  1449  0009EE  0101               	movlb	1	; () banked
  1450  0009F0  BFBF               	btfsc	main@length& (0+255),7,b
  1451  0009F2  D775               	goto	l3879
  1452  0009F4  D072               	goto	l3915
  1453  0009F6                     l3901:
  1454                           
  1455                           ; BSR set to: 1
  1456                           ;main.c: 448: {
  1457                           ;main.c: 449: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1458  0009F6  0101               	movlb	1	; () banked
  1459  0009F8  0E01               	movlw	high main@t1thread_data
  1460  0009FA  0101               	movlb	1	; () banked
  1461  0009FC  0101               	movlb	1	; () banked
  1462  0009FE  6FA1               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1463  000A00  0101               	movlb	1	; () banked
  1464  000A02  0EBC               	movlw	low main@t1thread_data
  1465  000A04  0101               	movlb	1	; () banked
  1466  000A06  0101               	movlb	1	; () banked
  1467  000A08  6FA0               	movwf	timer1_lthread@tptr& (0+255),b
  1468  000A0A  0101               	movlb	1	; () banked
  1469  000A0C  0101               	movlb	1	; () banked
  1470  000A0E  C1BE  F1A2         	movff	main@msgtype,timer1_lthread@msgtype
  1471  000A12  0101               	movlb	1	; () banked
  1472  000A14  0101               	movlb	1	; () banked
  1473  000A16  6BA3               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1474  000A18  0101               	movlb	1	; () banked
  1475  000A1A  0101               	movlb	1	; () banked
  1476  000A1C  51BF               	movf	main@length& (0+255),w,b
  1477  000A1E  0101               	movlb	1	; () banked
  1478  000A20  0101               	movlb	1	; () banked
  1479  000A22  6FA4               	movwf	timer1_lthread@length& (0+255),b
  1480  000A24  0101               	movlb	1	; () banked
  1481  000A26  6BA5               	clrf	(timer1_lthread@length+1)& (0+255),b
  1482  000A28  0101               	movlb	1	; () banked
  1483  000A2A  BFA4               	btfsc	timer1_lthread@length& (0+255),7,b
  1484  000A2C  07A5               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1485  000A2E  0101               	movlb	1	; () banked
  1486  000A30  0E01               	movlw	high main@msgbuffer
  1487  000A32  0101               	movlb	1	; () banked
  1488  000A34  0101               	movlb	1	; () banked
  1489  000A36  6FA7               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1490  000A38  0101               	movlb	1	; () banked
  1491  000A3A  0EAF               	movlw	low main@msgbuffer
  1492  000A3C  0101               	movlb	1	; () banked
  1493  000A3E  0101               	movlb	1	; () banked
  1494  000A40  6FA6               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1495  000A42  ECD6  F00D         	call	_timer1_lthread	;wreg free
  1496                           
  1497                           ;main.c: 450: break;
  1498  000A46  D74B               	goto	l3879
  1499  000A48                     l3903:
  1500                           
  1501                           ;main.c: 453: case 31:
  1502                           ;main.c: 454: {
  1503                           ;main.c: 457: if(msgbuffer[0] == 0xBA){
  1504  000A48  0101               	movlb	1	; () banked
  1505  000A4A  0101               	movlb	1	; () banked
  1506  000A4C  51AF               	movf	main@msgbuffer& (0+255),w,b
  1507  000A4E  0ABA               	xorlw	186
  1508  000A50  A4D8               	btfss	status,2,c
  1509  000A52  D01E               	goto	l3907
  1510                           
  1511                           ; BSR set to: 1
  1512                           ;main.c: 459: i2c_master_send(5, 5, msgbuffer, 0xBE);
  1513  000A54  0101               	movlb	1	; () banked
  1514  000A56  6FAA               	movwf	??_main& (0+255),b
  1515  000A58  0E05               	movlw	5
  1516  000A5A  0101               	movlb	1	; () banked
  1517  000A5C  0101               	movlb	1	; () banked
  1518  000A5E  6F86               	movwf	i2c_master_send@recvlength& (0+255),b
  1519  000A60  0101               	movlb	1	; () banked
  1520  000A62  51AA               	movf	??_main& (0+255),w,b
  1521  000A64  0101               	movlb	1	; () banked
  1522  000A66  0E01               	movlw	high main@msgbuffer
  1523  000A68  0101               	movlb	1	; () banked
  1524  000A6A  0101               	movlb	1	; () banked
  1525  000A6C  6F88               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1526  000A6E  0101               	movlb	1	; () banked
  1527  000A70  0EAF               	movlw	low main@msgbuffer
  1528  000A72  0101               	movlb	1	; () banked
  1529  000A74  0101               	movlb	1	; () banked
  1530  000A76  6F87               	movwf	i2c_master_send@msg& (0+255),b
  1531  000A78  0101               	movlb	1	; () banked
  1532  000A7A  6FAB               	movwf	(??_main+1)& (0+255),b
  1533  000A7C  0EBE               	movlw	190
  1534  000A7E  0101               	movlb	1	; () banked
  1535  000A80  0101               	movlb	1	; () banked
  1536  000A82  6F89               	movwf	i2c_master_send@slave_addr& (0+255),b
  1537  000A84  0101               	movlb	1	; () banked
  1538  000A86  51AB               	movf	(??_main+1)& (0+255),w,b
  1539  000A88  0E05               	movlw	5
  1540  000A8A  EC29  F006         	call	_i2c_master_send
  1541                           
  1542                           ;main.c: 460: } else if(msgbuffer[0] == 0xAA){
  1543  000A8E  D023               	goto	l3911
  1544  000A90                     l3907:
  1545  000A90  0101               	movlb	1	; () banked
  1546  000A92  0101               	movlb	1	; () banked
  1547  000A94  51AF               	movf	main@msgbuffer& (0+255),w,b
  1548  000A96  0AAA               	xorlw	170
  1549  000A98  A4D8               	btfss	status,2,c
  1550  000A9A  D01D               	goto	l3911
  1551                           
  1552                           ; BSR set to: 1
  1553                           ;main.c: 462: i2c_master_send(1, 5, msgbuffer, 0x9E);
  1554  000A9C  0101               	movlb	1	; () banked
  1555  000A9E  6FAA               	movwf	??_main& (0+255),b
  1556  000AA0  0E05               	movlw	5
  1557  000AA2  0101               	movlb	1	; () banked
  1558  000AA4  0101               	movlb	1	; () banked
  1559  000AA6  6F86               	movwf	i2c_master_send@recvlength& (0+255),b
  1560  000AA8  0101               	movlb	1	; () banked
  1561  000AAA  51AA               	movf	??_main& (0+255),w,b
  1562  000AAC  0101               	movlb	1	; () banked
  1563  000AAE  0E01               	movlw	high main@msgbuffer
  1564  000AB0  0101               	movlb	1	; () banked
  1565  000AB2  0101               	movlb	1	; () banked
  1566  000AB4  6F88               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1567  000AB6  0101               	movlb	1	; () banked
  1568  000AB8  0EAF               	movlw	low main@msgbuffer
  1569  000ABA  0101               	movlb	1	; () banked
  1570  000ABC  0101               	movlb	1	; () banked
  1571  000ABE  6F87               	movwf	i2c_master_send@msg& (0+255),b
  1572  000AC0  0101               	movlb	1	; () banked
  1573  000AC2  6FAB               	movwf	(??_main+1)& (0+255),b
  1574  000AC4  0E9E               	movlw	158
  1575  000AC6  0101               	movlb	1	; () banked
  1576  000AC8  0101               	movlb	1	; () banked
  1577  000ACA  6F89               	movwf	i2c_master_send@slave_addr& (0+255),b
  1578  000ACC  0101               	movlb	1	; () banked
  1579  000ACE  51AB               	movf	(??_main+1)& (0+255),w,b
  1580  000AD0  0E01               	movlw	1
  1581  000AD2  EC29  F006         	call	_i2c_master_send
  1582  000AD6                     l3911:
  1583                           
  1584                           ;main.c: 463: }
  1585                           ;main.c: 465: LATBbits.LATB2 = 0;
  1586  000AD6  948A               	bcf	3978,2,c	;volatile
  1587                           
  1588                           ;main.c: 467: break;
  1589  000AD8  D702               	goto	l3879
  1590  000ADA                     l3915:
  1591  000ADA  0101               	movlb	1	; () banked
  1592  000ADC  0101               	movlb	1	; () banked
  1593  000ADE  51BE               	movf	main@msgtype& (0+255),w,b
  1594                           
  1595                           ; Switch size 1, requested type "space"
  1596                           ; Number of cases is 3, Range of values is 11 to 31
  1597                           ; switch strategies available:
  1598                           ; Name         Instructions Cycles
  1599                           ; simple_byte           10     6 (average)
  1600                           ;	Chosen strategy is simple_byte
  1601  000AE0  0A0B               	xorlw	11	; case 11
  1602  000AE2  B4D8               	btfsc	status,2,c
  1603  000AE4  D788               	goto	l3901
  1604  000AE6  0A15               	xorlw	21	; case 30
  1605  000AE8  B4D8               	btfsc	status,2,c
  1606  000AEA  D7AE               	goto	l3903
  1607  000AEC  0A01               	xorlw	1	; case 31
  1608  000AEE  B4D8               	btfsc	status,2,c
  1609  000AF0  D7AB               	goto	l3903
  1610  000AF2  D6F5               	goto	l3879
  1611  000AF4                     __end_of_main:
  1612                           	opt stack 0
  1613                           tblptru	equ	0xFF8
  1614                           tblptrh	equ	0xFF7
  1615                           tblptrl	equ	0xFF6
  1616                           tablat	equ	0xFF5
  1617                           intcon2	equ	0xFF1
  1618                           postinc0	equ	0xFEE
  1619                           wreg	equ	0xFE8
  1620                           postdec1	equ	0xFE5
  1621                           fsr1l	equ	0xFE1
  1622                           status	equ	0xFD8
  1623                           
  1624 ;; *************** function _uart_trans *****************
  1625 ;; Defined at:
  1626 ;;		line 61 in file "../src/my_uart.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  length          1    wreg     unsigned char 
  1629 ;;  data            2    0[BANK1 ] PTR unsigned char 
  1630 ;;		 -> motorMove@direction(2), main@msgbuffer(11), 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  length          1    4[BANK1 ] unsigned char 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;		None               void
  1635 ;; Registers used:
  1636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1642 ;;      Params:         0       0       2       0       0
  1643 ;;      Locals:         0       0       1       0       0
  1644 ;;      Temps:          0       0       2       0       0
  1645 ;;      Totals:         0       0       5       0       0
  1646 ;;Total ram usage:        5 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:   11
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		_main
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text1
  1657  00155E                     __ptext1:
  1658                           	opt stack 0
  1659  00155E                     _uart_trans:
  1660                           	opt stack 19
  1661                           
  1662                           ; BSR set to: 1
  1663                           ;incstack = 0
  1664                           ;uart_trans@length stored from wreg
  1665  00155E  CFE8 F18A          	movff	wreg,uart_trans@length
  1666                           
  1667                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  1668  001562  EE20 F00B          	lfsr	2,11
  1669  001566  5057               	movf	_uc_ptr,w,c
  1670  001568  26D9               	addwf	fsr2l,f,c
  1671  00156A  5058               	movf	_uc_ptr+1,w,c
  1672  00156C  22DA               	addwfc	fsr2h,f,c
  1673  00156E  0E00               	movlw	0
  1674  001570  6EDF               	movwf	indf2,c
  1675  001572  D035               	goto	l4087
  1676  001574                     l4083:
  1677                           
  1678                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  1679  001574  EE20 F00B          	lfsr	2,11
  1680  001578  5057               	movf	_uc_ptr,w,c
  1681  00157A  26D9               	addwf	fsr2l,f,c
  1682  00157C  5058               	movf	_uc_ptr+1,w,c
  1683  00157E  22DA               	addwfc	fsr2h,f,c
  1684  001580  50DF               	movf	indf2,w,c
  1685  001582  0101               	movlb	1	; () banked
  1686  001584  6F88               	movwf	??_uart_trans& (0+255),b
  1687  001586  0101               	movlb	1	; () banked
  1688  001588  5188               	movf	??_uart_trans& (0+255),w,b
  1689  00158A  0D01               	mullw	1
  1690  00158C  50F3               	movf	prodl,w,c
  1691  00158E  0101               	movlb	1	; () banked
  1692  001590  0101               	movlb	1	; () banked
  1693  001592  2586               	addwf	uart_trans@data& (0+255),w,b
  1694  001594  6ED9               	movwf	fsr2l,c
  1695  001596  50F4               	movf	prodh,w,c
  1696  001598  0101               	movlb	1	; () banked
  1697  00159A  0101               	movlb	1	; () banked
  1698  00159C  2187               	addwfc	(uart_trans@data+1)& (0+255),w,b
  1699  00159E  6EDA               	movwf	fsr2h,c
  1700  0015A0  EE10 F00B          	lfsr	1,11
  1701  0015A4  5057               	movf	_uc_ptr,w,c
  1702  0015A6  26E1               	addwf	fsr1l,f,c
  1703  0015A8  5058               	movf	_uc_ptr+1,w,c
  1704  0015AA  22E2               	addwfc	fsr1h,f,c
  1705  0015AC  50E7               	movf	indf1,w,c
  1706  0015AE  0101               	movlb	1	; () banked
  1707  0015B0  6F89               	movwf	(??_uart_trans+1)& (0+255),b
  1708  0015B2  0101               	movlb	1	; () banked
  1709  0015B4  5189               	movf	(??_uart_trans+1)& (0+255),w,b
  1710  0015B6  0D01               	mullw	1
  1711  0015B8  0E06               	movlw	6
  1712  0015BA  26F3               	addwf	prodl,f,c
  1713  0015BC  0E00               	movlw	0
  1714  0015BE  22F4               	addwfc	prodh,f,c
  1715  0015C0  50F3               	movf	prodl,w,c
  1716  0015C2  2457               	addwf	_uc_ptr,w,c
  1717  0015C4  6EE1               	movwf	fsr1l,c
  1718  0015C6  50F4               	movf	prodh,w,c
  1719  0015C8  2058               	addwfc	_uc_ptr+1,w,c
  1720  0015CA  6EE2               	movwf	fsr1h,c
  1721  0015CC  CFDF FFE7          	movff	indf2,indf1
  1722                           
  1723                           ; BSR set to: 1
  1724  0015D0  EE20 F00B          	lfsr	2,11
  1725  0015D4  5057               	movf	_uc_ptr,w,c
  1726  0015D6  26D9               	addwf	fsr2l,f,c
  1727  0015D8  5058               	movf	_uc_ptr+1,w,c
  1728  0015DA  22DA               	addwfc	fsr2h,f,c
  1729  0015DC  2ADF               	incf	indf2,f,c
  1730  0015DE                     l4087:
  1731  0015DE  EE20 F00B          	lfsr	2,11
  1732  0015E2  5057               	movf	_uc_ptr,w,c
  1733  0015E4  26D9               	addwf	fsr2l,f,c
  1734  0015E6  5058               	movf	_uc_ptr+1,w,c
  1735  0015E8  22DA               	addwfc	fsr2h,f,c
  1736  0015EA  50DF               	movf	indf2,w,c
  1737  0015EC  0101               	movlb	1	; () banked
  1738  0015EE  6F88               	movwf	??_uart_trans& (0+255),b
  1739  0015F0  0101               	movlb	1	; () banked
  1740  0015F2  0101               	movlb	1	; () banked
  1741  0015F4  518A               	movf	uart_trans@length& (0+255),w,b
  1742  0015F6  0101               	movlb	1	; () banked
  1743  0015F8  5D88               	subwf	??_uart_trans& (0+255),w,b
  1744  0015FA  A0D8               	btfss	status,0,c
  1745  0015FC  D7BB               	goto	l4083
  1746                           
  1747                           ; BSR set to: 1
  1748                           ;my_uart.c: 67: }
  1749                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  1750                           
  1751                           ; BSR set to: 1
  1752  0015FE  EE20 F00C          	lfsr	2,12
  1753  001602  5057               	movf	_uc_ptr,w,c
  1754  001604  26D9               	addwf	fsr2l,f,c
  1755  001606  5058               	movf	_uc_ptr+1,w,c
  1756  001608  22DA               	addwfc	fsr2h,f,c
  1757  00160A  0E00               	movlw	0
  1758  00160C  6EDF               	movwf	indf2,c
  1759                           
  1760                           ; BSR set to: 1
  1761                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  1762  00160E  889D               	bsf	3997,4,c	;volatile
  1763                           
  1764                           ; BSR set to: 1
  1765  001610  0012               	return	
  1766  001612                     __end_of_uart_trans:
  1767                           	opt stack 0
  1768                           tblptru	equ	0xFF8
  1769                           tblptrh	equ	0xFF7
  1770                           tblptrl	equ	0xFF6
  1771                           tablat	equ	0xFF5
  1772                           prodh	equ	0xFF4
  1773                           prodl	equ	0xFF3
  1774                           intcon2	equ	0xFF1
  1775                           postinc0	equ	0xFEE
  1776                           wreg	equ	0xFE8
  1777                           indf1	equ	0xFE7
  1778                           postdec1	equ	0xFE5
  1779                           fsr1h	equ	0xFE2
  1780                           fsr1l	equ	0xFE1
  1781                           indf2	equ	0xFDF
  1782                           fsr2h	equ	0xFDA
  1783                           fsr2l	equ	0xFD9
  1784                           status	equ	0xFD8
  1785                           
  1786 ;; *************** function _timer1_lthread *****************
  1787 ;; Defined at:
  1788 ;;		line 14 in file "../src/timer1_thread.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  1791 ;;		 -> main@t1thread_data(2), 
  1792 ;;  msgtype         2   28[BANK1 ] int 
  1793 ;;  length          2   30[BANK1 ] int 
  1794 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1795 ;;		 -> main@msgbuffer(11), 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  retval          1   35[BANK1 ] char 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  2   26[BANK1 ] int 
  1800 ;; Registers used:
  1801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1807 ;;      Params:         0       0       8       0       0
  1808 ;;      Locals:         0       0       1       0       0
  1809 ;;      Temps:          0       0       1       0       0
  1810 ;;      Totals:         0       0      10       0       0
  1811 ;;Total ram usage:       10 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:   14
  1814 ;; This function calls:
  1815 ;;		_FromMainHigh_sendmsg
  1816 ;;		___lwmod
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text2
  1823  001BAC                     __ptext2:
  1824                           	opt stack 0
  1825  001BAC                     _timer1_lthread:
  1826                           	opt stack 16
  1827                           
  1828                           ;timer1_thread.c: 15: signed char retval;
  1829                           ;timer1_thread.c: 17: tptr->msgcount++;
  1830                           
  1831                           ; BSR set to: 1
  1832                           ;incstack = 0
  1833  001BAC  C1A0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1834  001BB0  C1A1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1835  001BB4  2ADE               	incf	postinc2,f,c
  1836  001BB6  0E00               	movlw	0
  1837  001BB8  22DD               	addwfc	postdec2,f,c
  1838                           
  1839                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1840  001BBA  C1A0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1841  001BBE  C1A1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1842  001BC2  0101               	movlb	1	; () banked
  1843  001BC4  CFDE F186          	movff	postinc2,___lwmod@dividend
  1844  001BC8  0101               	movlb	1	; () banked
  1845  001BCA  CFDD F187          	movff	postdec2,___lwmod@dividend+1
  1846  001BCE  0E00               	movlw	0
  1847  001BD0  0101               	movlb	1	; () banked
  1848  001BD2  0101               	movlb	1	; () banked
  1849  001BD4  6F89               	movwf	(___lwmod@divisor+1)& (0+255),b
  1850  001BD6  0E0A               	movlw	10
  1851  001BD8  0101               	movlb	1	; () banked
  1852  001BDA  6F88               	movwf	___lwmod@divisor& (0+255),b
  1853  001BDC  EC90  F00C         	call	___lwmod	;wreg free
  1854  001BE0  0101               	movlb	1	; () banked
  1855  001BE2  0101               	movlb	1	; () banked
  1856  001BE4  5186               	movf	?___lwmod& (0+255),w,b
  1857  001BE6  0A09               	xorlw	9
  1858  001BE8  0101               	movlb	1	; () banked
  1859  001BEA  1187               	iorwf	(?___lwmod+1)& (0+255),w,b
  1860  001BEC  A4D8               	btfss	status,2,c
  1861  001BEE  0012               	return	
  1862                           
  1863                           ; BSR set to: 1
  1864                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1865  001BF0  0101               	movlb	1	; () banked
  1866  001BF2  6FA8               	movwf	??_timer1_lthread& (0+255),b
  1867  001BF4  0E14               	movlw	20
  1868  001BF6  0101               	movlb	1	; () banked
  1869  001BF8  0101               	movlb	1	; () banked
  1870  001BFA  6F9C               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1871  001BFC  0101               	movlb	1	; () banked
  1872  001BFE  51A8               	movf	??_timer1_lthread& (0+255),w,b
  1873  001C00  0101               	movlb	1	; () banked
  1874  001C02  0101               	movlb	1	; () banked
  1875  001C04  C1A1  F19E         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1876  001C08  0101               	movlb	1	; () banked
  1877  001C0A  0101               	movlb	1	; () banked
  1878  001C0C  C1A0  F19D         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1879  001C10  0E02               	movlw	2
  1880  001C12  EC47  F010         	call	_FromMainHigh_sendmsg
  1881  001C16  0101               	movlb	1	; () banked
  1882  001C18  0101               	movlb	1	; () banked
  1883  001C1A  6FA9               	movwf	timer1_lthread@retval& (0+255),b
  1884  001C1C  0012               	return	
  1885  001C1E                     __end_of_timer1_lthread:
  1886                           	opt stack 0
  1887                           tblptru	equ	0xFF8
  1888                           tblptrh	equ	0xFF7
  1889                           tblptrl	equ	0xFF6
  1890                           tablat	equ	0xFF5
  1891                           prodh	equ	0xFF4
  1892                           prodl	equ	0xFF3
  1893                           intcon2	equ	0xFF1
  1894                           postinc0	equ	0xFEE
  1895                           wreg	equ	0xFE8
  1896                           indf1	equ	0xFE7
  1897                           postdec1	equ	0xFE5
  1898                           fsr1h	equ	0xFE2
  1899                           fsr1l	equ	0xFE1
  1900                           indf2	equ	0xFDF
  1901                           postinc2	equ	0xFDE
  1902                           postdec2	equ	0xFDD
  1903                           fsr2h	equ	0xFDA
  1904                           fsr2l	equ	0xFD9
  1905                           status	equ	0xFD8
  1906                           
  1907 ;; *************** function ___lwmod *****************
  1908 ;; Defined at:
  1909 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  dividend        2    0[BANK1 ] unsigned int 
  1912 ;;  divisor         2    2[BANK1 ] unsigned int 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  counter         1    5[BANK1 ] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  2    0[BANK1 ] unsigned int 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2, status,0
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1924 ;;      Params:         0       0       4       0       0
  1925 ;;      Locals:         0       0       1       0       0
  1926 ;;      Temps:          0       0       1       0       0
  1927 ;;      Totals:         0       0       6       0       0
  1928 ;;Total ram usage:        6 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:   11
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_timer1_lthread
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text3
  1939  001920                     __ptext3:
  1940                           	opt stack 0
  1941  001920                     ___lwmod:
  1942                           	opt stack 18
  1943                           
  1944                           ; BSR set to: 1
  1945                           ;incstack = 0
  1946  001920  0101               	movlb	1	; () banked
  1947  001922  0101               	movlb	1	; () banked
  1948  001924  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1949  001926  1188               	iorwf	___lwmod@divisor& (0+255),w,b
  1950  001928  B4D8               	btfsc	status,2,c
  1951  00192A  D03A               	goto	l1175
  1952                           
  1953                           ; BSR set to: 1
  1954  00192C  0101               	movlb	1	; () banked
  1955  00192E  6F8A               	movwf	??___lwmod& (0+255),b
  1956  001930  0E01               	movlw	1
  1957  001932  0101               	movlb	1	; () banked
  1958  001934  0101               	movlb	1	; () banked
  1959  001936  6F8B               	movwf	___lwmod@counter& (0+255),b
  1960  001938  0101               	movlb	1	; () banked
  1961  00193A  518A               	movf	??___lwmod& (0+255),w,b
  1962  00193C  D009               	goto	l4537
  1963  00193E                     l4535:
  1964                           
  1965                           ; BSR set to: 1
  1966  00193E  0101               	movlb	1	; () banked
  1967  001940  0101               	movlb	1	; () banked
  1968  001942  0101               	movlb	1	; () banked
  1969  001944  90D8               	bcf	status,0,c
  1970  001946  3788               	rlcf	___lwmod@divisor& (0+255),f,b
  1971  001948  3789               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1972  00194A  0101               	movlb	1	; () banked
  1973  00194C  0101               	movlb	1	; () banked
  1974  00194E  2B8B               	incf	___lwmod@counter& (0+255),f,b
  1975  001950                     l4537:
  1976                           
  1977                           ; BSR set to: 1
  1978  001950  0101               	movlb	1	; () banked
  1979  001952  0101               	movlb	1	; () banked
  1980  001954  AF89               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1981  001956  D7F3               	goto	l4535
  1982  001958                     l4539:
  1983                           
  1984                           ; BSR set to: 1
  1985  001958  0101               	movlb	1	; () banked
  1986  00195A  0101               	movlb	1	; () banked
  1987  00195C  5188               	movf	___lwmod@divisor& (0+255),w,b
  1988  00195E  0101               	movlb	1	; () banked
  1989  001960  0101               	movlb	1	; () banked
  1990  001962  5D86               	subwf	___lwmod@dividend& (0+255),w,b
  1991  001964  0101               	movlb	1	; () banked
  1992  001966  0101               	movlb	1	; () banked
  1993  001968  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1994  00196A  0101               	movlb	1	; () banked
  1995  00196C  0101               	movlb	1	; () banked
  1996  00196E  5987               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1997  001970  A0D8               	btfss	status,0,c
  1998  001972  D00C               	goto	l4543
  1999                           
  2000                           ; BSR set to: 1
  2001  001974  0101               	movlb	1	; () banked
  2002  001976  0101               	movlb	1	; () banked
  2003  001978  5188               	movf	___lwmod@divisor& (0+255),w,b
  2004  00197A  0101               	movlb	1	; () banked
  2005  00197C  0101               	movlb	1	; () banked
  2006  00197E  5F86               	subwf	___lwmod@dividend& (0+255),f,b
  2007  001980  0101               	movlb	1	; () banked
  2008  001982  0101               	movlb	1	; () banked
  2009  001984  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2010  001986  0101               	movlb	1	; () banked
  2011  001988  0101               	movlb	1	; () banked
  2012  00198A  5B87               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2013  00198C                     l4543:
  2014                           
  2015                           ; BSR set to: 1
  2016  00198C  0101               	movlb	1	; () banked
  2017  00198E  0101               	movlb	1	; () banked
  2018  001990  0101               	movlb	1	; () banked
  2019  001992  90D8               	bcf	status,0,c
  2020  001994  3389               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2021  001996  3388               	rrcf	___lwmod@divisor& (0+255),f,b
  2022                           
  2023                           ; BSR set to: 1
  2024  001998  0101               	movlb	1	; () banked
  2025  00199A  0101               	movlb	1	; () banked
  2026  00199C  2F8B               	decfsz	___lwmod@counter& (0+255),f,b
  2027  00199E  D7DC               	goto	l4539
  2028  0019A0                     l1175:
  2029                           
  2030                           ; BSR set to: 1
  2031  0019A0  C186  F186         	movff	___lwmod@dividend,?___lwmod
  2032  0019A4  C187  F187         	movff	___lwmod@dividend+1,?___lwmod+1
  2033                           
  2034                           ; BSR set to: 1
  2035  0019A8  0012               	return	
  2036  0019AA                     __end_of___lwmod:
  2037                           	opt stack 0
  2038                           tblptru	equ	0xFF8
  2039                           tblptrh	equ	0xFF7
  2040                           tblptrl	equ	0xFF6
  2041                           tablat	equ	0xFF5
  2042                           prodh	equ	0xFF4
  2043                           prodl	equ	0xFF3
  2044                           intcon2	equ	0xFF1
  2045                           postinc0	equ	0xFEE
  2046                           wreg	equ	0xFE8
  2047                           indf1	equ	0xFE7
  2048                           postdec1	equ	0xFE5
  2049                           fsr1h	equ	0xFE2
  2050                           fsr1l	equ	0xFE1
  2051                           indf2	equ	0xFDF
  2052                           postinc2	equ	0xFDE
  2053                           postdec2	equ	0xFDD
  2054                           fsr2h	equ	0xFDA
  2055                           fsr2l	equ	0xFD9
  2056                           status	equ	0xFD8
  2057                           
  2058 ;; *************** function _FromMainHigh_sendmsg *****************
  2059 ;; Defined at:
  2060 ;;		line 174 in file "../src/messages.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;  length          1    wreg     unsigned char 
  2063 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2064 ;;  data            2   23[BANK1 ] PTR void 
  2065 ;;		 -> main@t1thread_data(2), 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  length          1   25[BANK1 ] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      char 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2077 ;;      Params:         0       0       3       0       0
  2078 ;;      Locals:         0       0       1       0       0
  2079 ;;      Temps:          0       0       0       0       0
  2080 ;;      Totals:         0       0       4       0       0
  2081 ;;Total ram usage:        4 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:   13
  2084 ;; This function calls:
  2085 ;;		_send_msg
  2086 ;; This function is called by:
  2087 ;;		_timer1_lthread
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text4
  2092  00208E                     __ptext4:
  2093                           	opt stack 0
  2094  00208E                     _FromMainHigh_sendmsg:
  2095                           	opt stack 16
  2096                           
  2097                           ; BSR set to: 1
  2098                           ;incstack = 0
  2099                           ;FromMainHigh_sendmsg@length stored from wreg
  2100  00208E  CFE8 F19F          	movff	wreg,FromMainHigh_sendmsg@length
  2101                           
  2102                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2103  002092  0102               	movlb	2	; () banked
  2104  002094  0E02               	movlw	high _FromMainHigh_MQ
  2105  002096  0101               	movlb	1	; () banked
  2106  002098  0101               	movlb	1	; () banked
  2107  00209A  6F91               	movwf	(send_msg@qptr+1)& (0+255),b
  2108  00209C  0102               	movlb	2	; () banked
  2109  00209E  0E00               	movlw	low _FromMainHigh_MQ
  2110  0020A0  0101               	movlb	1	; () banked
  2111  0020A2  0101               	movlb	1	; () banked
  2112  0020A4  6F90               	movwf	send_msg@qptr& (0+255),b
  2113  0020A6  C19F  F192         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2114  0020AA  C19C  F193         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2115  0020AE  0101               	movlb	1	; () banked
  2116  0020B0  0101               	movlb	1	; () banked
  2117  0020B2  C19E  F195         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2118  0020B6  0101               	movlb	1	; () banked
  2119  0020B8  0101               	movlb	1	; () banked
  2120  0020BA  C19D  F194         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2121  0020BE  ECC8  F006         	call	_send_msg	;wreg free
  2122  0020C2  0012               	return	
  2123  0020C4                     __end_of_FromMainHigh_sendmsg:
  2124                           	opt stack 0
  2125                           tblptru	equ	0xFF8
  2126                           tblptrh	equ	0xFF7
  2127                           tblptrl	equ	0xFF6
  2128                           tablat	equ	0xFF5
  2129                           prodh	equ	0xFF4
  2130                           prodl	equ	0xFF3
  2131                           intcon2	equ	0xFF1
  2132                           postinc0	equ	0xFEE
  2133                           wreg	equ	0xFE8
  2134                           indf1	equ	0xFE7
  2135                           postdec1	equ	0xFE5
  2136                           fsr1h	equ	0xFE2
  2137                           fsr1l	equ	0xFE1
  2138                           indf2	equ	0xFDF
  2139                           postinc2	equ	0xFDE
  2140                           postdec2	equ	0xFDD
  2141                           fsr2h	equ	0xFDA
  2142                           fsr2l	equ	0xFD9
  2143                           status	equ	0xFD8
  2144                           
  2145 ;; *************** function _send_msg *****************
  2146 ;; Defined at:
  2147 ;;		line 24 in file "../src/messages.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2150 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2151 ;;  length          1   12[BANK1 ] unsigned char 
  2152 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2153 ;;  data            2   14[BANK1 ] PTR void 
  2154 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  2155 ;;		 -> main@uc(13), 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  2158 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  2159 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2160 ;;  tlength         2   17[BANK1 ] unsigned int 
  2161 ;;  slot            1   19[BANK1 ] unsigned char 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      char 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2171 ;;      Params:         0       0       6       0       0
  2172 ;;      Locals:         0       0       5       0       0
  2173 ;;      Temps:          0       0       1       0       0
  2174 ;;      Totals:         0       0      12       0       0
  2175 ;;Total ram usage:       12 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:   12
  2178 ;; This function calls:
  2179 ;;		___awmod
  2180 ;;		_memcpy
  2181 ;; This function is called by:
  2182 ;;		_FromMainHigh_sendmsg
  2183 ;;		_FromMainLow_sendmsg
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text5
  2188  000D90                     __ptext5:
  2189                           	opt stack 0
  2190  000D90                     _send_msg:
  2191                           	opt stack 16
  2192                           
  2193                           ;messages.c: 25: unsigned char slot;
  2194                           ;messages.c: 27: msg *qmsg;
  2195                           ;messages.c: 28: size_t tlength = length;
  2196                           
  2197                           ;incstack = 0
  2198  000D90  0101               	movlb	1	; () banked
  2199  000D92  0101               	movlb	1	; () banked
  2200  000D94  C192  F197         	movff	send_msg@length,send_msg@tlength
  2201  000D98  0101               	movlb	1	; () banked
  2202  000D9A  0101               	movlb	1	; () banked
  2203  000D9C  6B98               	clrf	(send_msg@tlength+1)& (0+255),b
  2204                           
  2205                           ; BSR set to: 1
  2206                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2207  000D9E  0101               	movlb	1	; () banked
  2208  000DA0  EE20 F041          	lfsr	2,65
  2209  000DA4  0101               	movlb	1	; () banked
  2210  000DA6  5190               	movf	send_msg@qptr& (0+255),w,b
  2211  000DA8  26D9               	addwf	fsr2l,f,c
  2212  000DAA  0101               	movlb	1	; () banked
  2213  000DAC  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  2214  000DAE  22DA               	addwfc	fsr2h,f,c
  2215  000DB0  50DF               	movf	indf2,w,c
  2216  000DB2  0101               	movlb	1	; () banked
  2217  000DB4  0101               	movlb	1	; () banked
  2218  000DB6  6F99               	movwf	send_msg@slot& (0+255),b
  2219                           
  2220                           ; BSR set to: 1
  2221                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2222  000DB8  0101               	movlb	1	; () banked
  2223  000DBA  0101               	movlb	1	; () banked
  2224  000DBC  5199               	movf	send_msg@slot& (0+255),w,b
  2225  000DBE  0D0D               	mullw	13
  2226  000DC0  50F3               	movf	prodl,w,c
  2227  000DC2  0101               	movlb	1	; () banked
  2228  000DC4  0101               	movlb	1	; () banked
  2229  000DC6  2590               	addwf	send_msg@qptr& (0+255),w,b
  2230  000DC8  0101               	movlb	1	; () banked
  2231  000DCA  0101               	movlb	1	; () banked
  2232  000DCC  6F9A               	movwf	send_msg@qmsg& (0+255),b
  2233  000DCE  50F4               	movf	prodh,w,c
  2234  000DD0  0101               	movlb	1	; () banked
  2235  000DD2  0101               	movlb	1	; () banked
  2236  000DD4  2191               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2237  000DD6  0101               	movlb	1	; () banked
  2238  000DD8  6F9B               	movwf	(send_msg@qmsg+1)& (0+255),b
  2239                           
  2240                           ; BSR set to: 1
  2241                           ;messages.c: 41: if (qmsg->full != 0) {
  2242  000DDA  C19A  FFD9         	movff	send_msg@qmsg,fsr2l
  2243  000DDE  C19B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2244  000DE2  50DF               	movf	indf2,w,c
  2245  000DE4  B4D8               	btfsc	status,2,c
  2246  000DE6  D002               	goto	l4145
  2247                           
  2248                           ; BSR set to: 1
  2249                           ;messages.c: 42: return (-1);
  2250  000DE8  0EFF               	movlw	255
  2251  000DEA  0012               	return	
  2252  000DEC                     l4145:
  2253                           
  2254                           ; BSR set to: 1
  2255                           ;messages.c: 43: }
  2256                           ;messages.c: 46: qmsg->length = length;
  2257  000DEC  0101               	movlb	1	; () banked
  2258  000DEE  EE20 F001          	lfsr	2,1
  2259  000DF2  0101               	movlb	1	; () banked
  2260  000DF4  519A               	movf	send_msg@qmsg& (0+255),w,b
  2261  000DF6  26D9               	addwf	fsr2l,f,c
  2262  000DF8  0101               	movlb	1	; () banked
  2263  000DFA  519B               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2264  000DFC  22DA               	addwfc	fsr2h,f,c
  2265  000DFE  0101               	movlb	1	; () banked
  2266  000E00  C192  FFDF         	movff	send_msg@length,indf2
  2267                           
  2268                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2269  000E04  0101               	movlb	1	; () banked
  2270  000E06  EE20 F002          	lfsr	2,2
  2271  000E0A  0101               	movlb	1	; () banked
  2272  000E0C  519A               	movf	send_msg@qmsg& (0+255),w,b
  2273  000E0E  26D9               	addwf	fsr2l,f,c
  2274  000E10  0101               	movlb	1	; () banked
  2275  000E12  519B               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2276  000E14  22DA               	addwfc	fsr2h,f,c
  2277  000E16  0101               	movlb	1	; () banked
  2278  000E18  C193  FFDF         	movff	send_msg@msgtype,indf2
  2279                           
  2280                           ; BSR set to: 1
  2281                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2282  000E1C  0E03               	movlw	3
  2283  000E1E  0101               	movlb	1	; () banked
  2284  000E20  0101               	movlb	1	; () banked
  2285  000E22  259A               	addwf	send_msg@qmsg& (0+255),w,b
  2286  000E24  0101               	movlb	1	; () banked
  2287  000E26  0101               	movlb	1	; () banked
  2288  000E28  6F86               	movwf	memcpy@d1& (0+255),b
  2289  000E2A  0E00               	movlw	0
  2290  000E2C  0101               	movlb	1	; () banked
  2291  000E2E  0101               	movlb	1	; () banked
  2292  000E30  219B               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2293  000E32  0101               	movlb	1	; () banked
  2294  000E34  6F87               	movwf	(memcpy@d1+1)& (0+255),b
  2295  000E36  0101               	movlb	1	; () banked
  2296  000E38  0101               	movlb	1	; () banked
  2297  000E3A  C195  F189         	movff	send_msg@data+1,memcpy@s1+1
  2298  000E3E  0101               	movlb	1	; () banked
  2299  000E40  0101               	movlb	1	; () banked
  2300  000E42  C194  F188         	movff	send_msg@data,memcpy@s1
  2301  000E46  C197  F18A         	movff	send_msg@tlength,memcpy@n
  2302  000E4A  C198  F18B         	movff	send_msg@tlength+1,memcpy@n+1
  2303  000E4E  ECE4  F00E         	call	_memcpy	;wreg free
  2304                           
  2305                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  2306  000E52  0101               	movlb	1	; () banked
  2307  000E54  EE20 F041          	lfsr	2,65
  2308  000E58  0101               	movlb	1	; () banked
  2309  000E5A  5190               	movf	send_msg@qptr& (0+255),w,b
  2310  000E5C  26D9               	addwf	fsr2l,f,c
  2311  000E5E  0101               	movlb	1	; () banked
  2312  000E60  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  2313  000E62  22DA               	addwfc	fsr2h,f,c
  2314  000E64  0101               	movlb	1	; () banked
  2315  000E66  EE10 F041          	lfsr	1,65
  2316  000E6A  0101               	movlb	1	; () banked
  2317  000E6C  5190               	movf	send_msg@qptr& (0+255),w,b
  2318  000E6E  26E1               	addwf	fsr1l,f,c
  2319  000E70  0101               	movlb	1	; () banked
  2320  000E72  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  2321  000E74  22E2               	addwfc	fsr1h,f,c
  2322  000E76  50E7               	movf	indf1,w,c
  2323  000E78  0101               	movlb	1	; () banked
  2324  000E7A  6F96               	movwf	??_send_msg& (0+255),b
  2325  000E7C  0E01               	movlw	1
  2326  000E7E  0101               	movlb	1	; () banked
  2327  000E80  2596               	addwf	??_send_msg& (0+255),w,b
  2328  000E82  0101               	movlb	1	; () banked
  2329  000E84  0101               	movlb	1	; () banked
  2330  000E86  6F86               	movwf	___awmod@dividend& (0+255),b
  2331  000E88  0101               	movlb	1	; () banked
  2332  000E8A  0101               	movlb	1	; () banked
  2333  000E8C  6B87               	clrf	(___awmod@dividend+1)& (0+255),b
  2334  000E8E  0E00               	movlw	0
  2335  000E90  2387               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  2336  000E92  0E00               	movlw	0
  2337  000E94  0101               	movlb	1	; () banked
  2338  000E96  0101               	movlb	1	; () banked
  2339  000E98  6F89               	movwf	(___awmod@divisor+1)& (0+255),b
  2340  000E9A  0E05               	movlw	5
  2341  000E9C  0101               	movlb	1	; () banked
  2342  000E9E  6F88               	movwf	___awmod@divisor& (0+255),b
  2343  000EA0  ECF4  F007         	call	___awmod	;wreg free
  2344  000EA4  0101               	movlb	1	; () banked
  2345  000EA6  0101               	movlb	1	; () banked
  2346  000EA8  5186               	movf	?___awmod& (0+255),w,b
  2347  000EAA  6EDF               	movwf	indf2,c
  2348                           
  2349                           ; BSR set to: 1
  2350                           ;messages.c: 59: qmsg->full = 1;
  2351  000EAC  C19A  FFD9         	movff	send_msg@qmsg,fsr2l
  2352  000EB0  C19B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2353  000EB4  0E01               	movlw	1
  2354  000EB6  6EDF               	movwf	indf2,c
  2355                           
  2356                           ; BSR set to: 1
  2357                           ;messages.c: 60: return (1);
  2358  000EB8  0E01               	movlw	1
  2359  000EBA  0012               	return	
  2360  000EBC                     __end_of_send_msg:
  2361                           	opt stack 0
  2362                           tblptru	equ	0xFF8
  2363                           tblptrh	equ	0xFF7
  2364                           tblptrl	equ	0xFF6
  2365                           tablat	equ	0xFF5
  2366                           prodh	equ	0xFF4
  2367                           prodl	equ	0xFF3
  2368                           intcon2	equ	0xFF1
  2369                           postinc0	equ	0xFEE
  2370                           wreg	equ	0xFE8
  2371                           indf1	equ	0xFE7
  2372                           postdec1	equ	0xFE5
  2373                           fsr1h	equ	0xFE2
  2374                           fsr1l	equ	0xFE1
  2375                           indf2	equ	0xFDF
  2376                           postinc2	equ	0xFDE
  2377                           postdec2	equ	0xFDD
  2378                           fsr2h	equ	0xFDA
  2379                           fsr2l	equ	0xFD9
  2380                           status	equ	0xFD8
  2381                           
  2382 ;; *************** function _timer0_lthread *****************
  2383 ;; Defined at:
  2384 ;;		line 9 in file "../src/timer0_thread.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2387 ;;		 -> main@t0thread_data(2), 
  2388 ;;  msgtype         2    2[BANK1 ] int 
  2389 ;;  length          2    4[BANK1 ] int 
  2390 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2391 ;;		 -> main@msgbuffer(11), 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2394 ;;		 -> main@msgbuffer(11), 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  2    0[BANK1 ] int 
  2397 ;; Registers used:
  2398 ;;		wreg, status,2, status,0
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2404 ;;      Params:         0       0       8       0       0
  2405 ;;      Locals:         0       0       2       0       0
  2406 ;;      Temps:          0       0       0       0       0
  2407 ;;      Totals:         0       0      10       0       0
  2408 ;;Total ram usage:       10 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:   11
  2411 ;; This function calls:
  2412 ;;		Nothing
  2413 ;; This function is called by:
  2414 ;;		_main
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text6
  2419  002272                     __ptext6:
  2420                           	opt stack 0
  2421  002272                     _timer0_lthread:
  2422                           	opt stack 19
  2423                           
  2424                           ;timer0_thread.c: 10: unsigned int *msgval;
  2425                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2426                           
  2427                           ; BSR set to: 1
  2428                           ;incstack = 0
  2429  002272  0101               	movlb	1	; () banked
  2430  002274  0101               	movlb	1	; () banked
  2431  002276  C18D  F18F         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2432  00227A  0101               	movlb	1	; () banked
  2433  00227C  0101               	movlb	1	; () banked
  2434  00227E  C18C  F18E         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2435                           
  2436                           ; BSR set to: 1
  2437  002282  0012               	return	
  2438  002284                     __end_of_timer0_lthread:
  2439                           	opt stack 0
  2440                           tblptru	equ	0xFF8
  2441                           tblptrh	equ	0xFF7
  2442                           tblptrl	equ	0xFF6
  2443                           tablat	equ	0xFF5
  2444                           prodh	equ	0xFF4
  2445                           prodl	equ	0xFF3
  2446                           intcon2	equ	0xFF1
  2447                           postinc0	equ	0xFEE
  2448                           wreg	equ	0xFE8
  2449                           indf1	equ	0xFE7
  2450                           postdec1	equ	0xFE5
  2451                           fsr1h	equ	0xFE2
  2452                           fsr1l	equ	0xFE1
  2453                           indf2	equ	0xFDF
  2454                           postinc2	equ	0xFDE
  2455                           postdec2	equ	0xFDD
  2456                           fsr2h	equ	0xFDA
  2457                           fsr2l	equ	0xFD9
  2458                           status	equ	0xFD8
  2459                           
  2460 ;; *************** function _init_uart_recv *****************
  2461 ;; Defined at:
  2462 ;;		line 54 in file "../src/my_uart.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2465 ;;		 -> main@uc(13), 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;		None               void
  2470 ;; Registers used:
  2471 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2477 ;;      Params:         0       0       2       0       0
  2478 ;;      Locals:         0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0
  2480 ;;      Totals:         0       0       2       0       0
  2481 ;;Total ram usage:        2 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:   11
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_main
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text7
  2492  002220                     __ptext7:
  2493                           	opt stack 0
  2494  002220                     _init_uart_recv:
  2495                           	opt stack 19
  2496                           
  2497                           ;my_uart.c: 57: uc_ptr = uc;
  2498                           
  2499                           ; BSR set to: 1
  2500                           ;incstack = 0
  2501  002220  0101               	movlb	1	; () banked
  2502  002222  C187  F058         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2503  002226  0101               	movlb	1	; () banked
  2504  002228  C186  F057         	movff	init_uart_recv@uc,_uc_ptr
  2505                           
  2506                           ; BSR set to: 1
  2507                           ;my_uart.c: 58: uc_ptr->buflen = 0;
  2508  00222C  EE20 F005          	lfsr	2,5
  2509  002230  5057               	movf	_uc_ptr,w,c
  2510  002232  26D9               	addwf	fsr2l,f,c
  2511  002234  5058               	movf	_uc_ptr+1,w,c
  2512  002236  22DA               	addwfc	fsr2h,f,c
  2513  002238  0E00               	movlw	0
  2514  00223A  6EDF               	movwf	indf2,c
  2515                           
  2516                           ; BSR set to: 1
  2517  00223C  0012               	return	
  2518  00223E                     __end_of_init_uart_recv:
  2519                           	opt stack 0
  2520                           tblptru	equ	0xFF8
  2521                           tblptrh	equ	0xFF7
  2522                           tblptrl	equ	0xFF6
  2523                           tablat	equ	0xFF5
  2524                           prodh	equ	0xFF4
  2525                           prodl	equ	0xFF3
  2526                           intcon2	equ	0xFF1
  2527                           postinc0	equ	0xFEE
  2528                           wreg	equ	0xFE8
  2529                           indf1	equ	0xFE7
  2530                           postdec1	equ	0xFE5
  2531                           fsr1h	equ	0xFE2
  2532                           fsr1l	equ	0xFE1
  2533                           indf2	equ	0xFDF
  2534                           postinc2	equ	0xFDE
  2535                           postdec2	equ	0xFDD
  2536                           fsr2h	equ	0xFDA
  2537                           fsr2l	equ	0xFD9
  2538                           status	equ	0xFD8
  2539                           
  2540 ;; *************** function _init_timer1_lthread *****************
  2541 ;; Defined at:
  2542 ;;		line 6 in file "../src/timer1_thread.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2545 ;;		 -> main@t1thread_data(2), 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;		None
  2548 ;; Return value:  Size  Location     Type
  2549 ;;		None               void
  2550 ;; Registers used:
  2551 ;;		wreg, fsr2l, fsr2h
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2557 ;;      Params:         0       0       2       0       0
  2558 ;;      Locals:         0       0       0       0       0
  2559 ;;      Temps:          0       0       0       0       0
  2560 ;;      Totals:         0       0       2       0       0
  2561 ;;Total ram usage:        2 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:   11
  2564 ;; This function calls:
  2565 ;;		Nothing
  2566 ;; This function is called by:
  2567 ;;		_main
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text8
  2572  002284                     __ptext8:
  2573                           	opt stack 0
  2574  002284                     _init_timer1_lthread:
  2575                           	opt stack 19
  2576                           
  2577                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2578                           
  2579                           ; BSR set to: 1
  2580                           ;incstack = 0
  2581  002284  C186  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2582  002288  C187  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2583  00228C  0E00               	movlw	0
  2584  00228E  6EDE               	movwf	postinc2,c
  2585  002290  0E00               	movlw	0
  2586  002292  6EDD               	movwf	postdec2,c
  2587  002294  0012               	return	
  2588  002296                     __end_of_init_timer1_lthread:
  2589                           	opt stack 0
  2590                           tblptru	equ	0xFF8
  2591                           tblptrh	equ	0xFF7
  2592                           tblptrl	equ	0xFF6
  2593                           tablat	equ	0xFF5
  2594                           prodh	equ	0xFF4
  2595                           prodl	equ	0xFF3
  2596                           intcon2	equ	0xFF1
  2597                           postinc0	equ	0xFEE
  2598                           wreg	equ	0xFE8
  2599                           indf1	equ	0xFE7
  2600                           postdec1	equ	0xFE5
  2601                           fsr1h	equ	0xFE2
  2602                           fsr1l	equ	0xFE1
  2603                           indf2	equ	0xFDF
  2604                           postinc2	equ	0xFDE
  2605                           postdec2	equ	0xFDD
  2606                           fsr2h	equ	0xFDA
  2607                           fsr2l	equ	0xFD9
  2608                           status	equ	0xFD8
  2609                           
  2610 ;; *************** function _init_queues *****************
  2611 ;; Defined at:
  2612 ;;		line 194 in file "../src/messages.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;		None               void
  2619 ;; Registers used:
  2620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2626 ;;      Params:         0       0       0       0       0
  2627 ;;      Locals:         0       0       0       0       0
  2628 ;;      Temps:          0       0       1       0       0
  2629 ;;      Totals:         0       0       1       0       0
  2630 ;;Total ram usage:        1 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:   12
  2633 ;; This function calls:
  2634 ;;		_init_queue
  2635 ;; This function is called by:
  2636 ;;		_main
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text9
  2641  001C1E                     __ptext9:
  2642                           	opt stack 0
  2643  001C1E                     _init_queues:
  2644                           	opt stack 18
  2645                           
  2646                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2647                           
  2648                           ;incstack = 0
  2649  001C1E  0101               	movlb	1	; () banked
  2650  001C20  6F8A               	movwf	??_init_queues& (0+255),b
  2651  001C22  0E00               	movlw	0
  2652  001C24  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  2653  001C26  0101               	movlb	1	; () banked
  2654  001C28  518A               	movf	??_init_queues& (0+255),w,b
  2655                           
  2656                           ; BSR set to: 1
  2657                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2658  001C2A  0101               	movlb	1	; () banked
  2659  001C2C  0E01               	movlw	high _ToMainLow_MQ
  2660  001C2E  0101               	movlb	1	; () banked
  2661  001C30  0101               	movlb	1	; () banked
  2662  001C32  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2663  001C34  0101               	movlb	1	; () banked
  2664  001C36  0E43               	movlw	low _ToMainLow_MQ
  2665  001C38  0101               	movlb	1	; () banked
  2666  001C3A  0101               	movlb	1	; () banked
  2667  001C3C  6F86               	movwf	init_queue@qptr& (0+255),b
  2668  001C3E  EC99  F00D         	call	_init_queue	;wreg free
  2669                           
  2670                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2671  001C42  0101               	movlb	1	; () banked
  2672  001C44  0E01               	movlw	high _ToMainHigh_MQ
  2673  001C46  0101               	movlb	1	; () banked
  2674  001C48  0101               	movlb	1	; () banked
  2675  001C4A  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2676  001C4C  0101               	movlb	1	; () banked
  2677  001C4E  0E00               	movlw	low _ToMainHigh_MQ
  2678  001C50  0101               	movlb	1	; () banked
  2679  001C52  0101               	movlb	1	; () banked
  2680  001C54  6F86               	movwf	init_queue@qptr& (0+255),b
  2681  001C56  EC99  F00D         	call	_init_queue	;wreg free
  2682                           
  2683                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2684  001C5A  0102               	movlb	2	; () banked
  2685  001C5C  0E02               	movlw	high _FromMainLow_MQ
  2686  001C5E  0101               	movlb	1	; () banked
  2687  001C60  0101               	movlb	1	; () banked
  2688  001C62  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2689  001C64  0102               	movlb	2	; () banked
  2690  001C66  0E43               	movlw	low _FromMainLow_MQ
  2691  001C68  0101               	movlb	1	; () banked
  2692  001C6A  0101               	movlb	1	; () banked
  2693  001C6C  6F86               	movwf	init_queue@qptr& (0+255),b
  2694  001C6E  EC99  F00D         	call	_init_queue	;wreg free
  2695                           
  2696                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2697  001C72  0102               	movlb	2	; () banked
  2698  001C74  0E02               	movlw	high _FromMainHigh_MQ
  2699  001C76  0101               	movlb	1	; () banked
  2700  001C78  0101               	movlb	1	; () banked
  2701  001C7A  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2702  001C7C  0102               	movlb	2	; () banked
  2703  001C7E  0E00               	movlw	low _FromMainHigh_MQ
  2704  001C80  0101               	movlb	1	; () banked
  2705  001C82  0101               	movlb	1	; () banked
  2706  001C84  6F86               	movwf	init_queue@qptr& (0+255),b
  2707  001C86  EC99  F00D         	call	_init_queue	;wreg free
  2708  001C8A  0012               	return	
  2709  001C8C                     __end_of_init_queues:
  2710                           	opt stack 0
  2711                           tblptru	equ	0xFF8
  2712                           tblptrh	equ	0xFF7
  2713                           tblptrl	equ	0xFF6
  2714                           tablat	equ	0xFF5
  2715                           prodh	equ	0xFF4
  2716                           prodl	equ	0xFF3
  2717                           intcon2	equ	0xFF1
  2718                           postinc0	equ	0xFEE
  2719                           wreg	equ	0xFE8
  2720                           indf1	equ	0xFE7
  2721                           postdec1	equ	0xFE5
  2722                           fsr1h	equ	0xFE2
  2723                           fsr1l	equ	0xFE1
  2724                           indf2	equ	0xFDF
  2725                           postinc2	equ	0xFDE
  2726                           postdec2	equ	0xFDD
  2727                           fsr2h	equ	0xFDA
  2728                           fsr2l	equ	0xFD9
  2729                           status	equ	0xFD8
  2730                           
  2731 ;; *************** function _init_queue *****************
  2732 ;; Defined at:
  2733 ;;		line 14 in file "../src/messages.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2736 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;  i               1    3[BANK1 ] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;		None               void
  2741 ;; Registers used:
  2742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2748 ;;      Params:         0       0       2       0       0
  2749 ;;      Locals:         0       0       1       0       0
  2750 ;;      Temps:          0       0       1       0       0
  2751 ;;      Totals:         0       0       4       0       0
  2752 ;;Total ram usage:        4 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:   11
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_init_queues
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text10
  2763  001B32                     __ptext10:
  2764                           	opt stack 0
  2765  001B32                     _init_queue:
  2766                           	opt stack 18
  2767                           
  2768                           ;messages.c: 15: unsigned char i;
  2769                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2770                           
  2771                           ;incstack = 0
  2772  001B32  0101               	movlb	1	; () banked
  2773  001B34  EE20 F041          	lfsr	2,65
  2774  001B38  0101               	movlb	1	; () banked
  2775  001B3A  5186               	movf	init_queue@qptr& (0+255),w,b
  2776  001B3C  26D9               	addwf	fsr2l,f,c
  2777  001B3E  0101               	movlb	1	; () banked
  2778  001B40  5187               	movf	(init_queue@qptr+1)& (0+255),w,b
  2779  001B42  22DA               	addwfc	fsr2h,f,c
  2780  001B44  0E00               	movlw	0
  2781  001B46  6EDF               	movwf	indf2,c
  2782                           
  2783                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2784  001B48  0101               	movlb	1	; () banked
  2785  001B4A  EE20 F042          	lfsr	2,66
  2786  001B4E  0101               	movlb	1	; () banked
  2787  001B50  5186               	movf	init_queue@qptr& (0+255),w,b
  2788  001B52  26D9               	addwf	fsr2l,f,c
  2789  001B54  0101               	movlb	1	; () banked
  2790  001B56  5187               	movf	(init_queue@qptr+1)& (0+255),w,b
  2791  001B58  22DA               	addwfc	fsr2h,f,c
  2792  001B5A  0E00               	movlw	0
  2793  001B5C  6EDF               	movwf	indf2,c
  2794                           
  2795                           ; BSR set to: 1
  2796                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2797  001B5E  0101               	movlb	1	; () banked
  2798  001B60  6F88               	movwf	??_init_queue& (0+255),b
  2799  001B62  0E00               	movlw	0
  2800  001B64  0101               	movlb	1	; () banked
  2801  001B66  0101               	movlb	1	; () banked
  2802  001B68  6F89               	movwf	init_queue@i& (0+255),b
  2803  001B6A  0101               	movlb	1	; () banked
  2804  001B6C  5188               	movf	??_init_queue& (0+255),w,b
  2805                           
  2806                           ; BSR set to: 1
  2807  001B6E  0E04               	movlw	4
  2808  001B70  0101               	movlb	1	; () banked
  2809  001B72  0101               	movlb	1	; () banked
  2810  001B74  6589               	cpfsgt	init_queue@i& (0+255),b
  2811  001B76  D001               	goto	l4127
  2812  001B78  0012               	return	
  2813  001B7A                     l4127:
  2814                           
  2815                           ; BSR set to: 1
  2816                           ;messages.c: 20: qptr->queue[i].full = 0;
  2817  001B7A  0101               	movlb	1	; () banked
  2818  001B7C  0101               	movlb	1	; () banked
  2819  001B7E  5189               	movf	init_queue@i& (0+255),w,b
  2820  001B80  0D0D               	mullw	13
  2821  001B82  50F3               	movf	prodl,w,c
  2822  001B84  0101               	movlb	1	; () banked
  2823  001B86  0101               	movlb	1	; () banked
  2824  001B88  2586               	addwf	init_queue@qptr& (0+255),w,b
  2825  001B8A  6ED9               	movwf	fsr2l,c
  2826  001B8C  50F4               	movf	prodh,w,c
  2827  001B8E  0101               	movlb	1	; () banked
  2828  001B90  0101               	movlb	1	; () banked
  2829  001B92  2187               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2830  001B94  6EDA               	movwf	fsr2h,c
  2831  001B96  0E00               	movlw	0
  2832  001B98  6EDF               	movwf	indf2,c
  2833                           
  2834                           ; BSR set to: 1
  2835  001B9A  0101               	movlb	1	; () banked
  2836  001B9C  0101               	movlb	1	; () banked
  2837  001B9E  2B89               	incf	init_queue@i& (0+255),f,b
  2838                           
  2839                           ; BSR set to: 1
  2840  001BA0  0E04               	movlw	4
  2841  001BA2  0101               	movlb	1	; () banked
  2842  001BA4  0101               	movlb	1	; () banked
  2843  001BA6  6589               	cpfsgt	init_queue@i& (0+255),b
  2844  001BA8  D7E8               	goto	l4127
  2845  001BAA  0012               	return	
  2846  001BAC                     __end_of_init_queue:
  2847                           	opt stack 0
  2848                           tblptru	equ	0xFF8
  2849                           tblptrh	equ	0xFF7
  2850                           tblptrl	equ	0xFF6
  2851                           tablat	equ	0xFF5
  2852                           prodh	equ	0xFF4
  2853                           prodl	equ	0xFF3
  2854                           intcon2	equ	0xFF1
  2855                           postinc0	equ	0xFEE
  2856                           wreg	equ	0xFE8
  2857                           indf1	equ	0xFE7
  2858                           postdec1	equ	0xFE5
  2859                           fsr1h	equ	0xFE2
  2860                           fsr1l	equ	0xFE1
  2861                           indf2	equ	0xFDF
  2862                           postinc2	equ	0xFDE
  2863                           postdec2	equ	0xFDD
  2864                           fsr2h	equ	0xFDA
  2865                           fsr2l	equ	0xFD9
  2866                           status	equ	0xFD8
  2867                           
  2868 ;; *************** function _init_i2c *****************
  2869 ;; Defined at:
  2870 ;;		line 436 in file "../src/my_i2c.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  2873 ;;		 -> main@ic(29), 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;		None
  2876 ;; Return value:  Size  Location     Type
  2877 ;;		None               void
  2878 ;; Registers used:
  2879 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2885 ;;      Params:         0       0       2       0       0
  2886 ;;      Locals:         0       0       0       0       0
  2887 ;;      Temps:          0       0       0       0       0
  2888 ;;      Totals:         0       0       2       0       0
  2889 ;;Total ram usage:        2 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:   11
  2892 ;; This function calls:
  2893 ;;		Nothing
  2894 ;; This function is called by:
  2895 ;;		_main
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text11
  2900  001C8C                     __ptext11:
  2901                           	opt stack 0
  2902  001C8C                     _init_i2c:
  2903                           	opt stack 19
  2904                           
  2905                           ;my_i2c.c: 437: ic_ptr = ic;
  2906                           
  2907                           ; BSR set to: 1
  2908                           ;incstack = 0
  2909  001C8C  0101               	movlb	1	; () banked
  2910  001C8E  0100               	movlb	0	; () banked
  2911  001C90  C187  F0CA         	movff	init_i2c@ic+1,_ic_ptr+1
  2912  001C94  0101               	movlb	1	; () banked
  2913  001C96  0100               	movlb	0	; () banked
  2914  001C98  C186  F0C9         	movff	init_i2c@ic,_ic_ptr
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;my_i2c.c: 438: ic_ptr->buflen = 0;
  2918  001C9C  0100               	movlb	0	; () banked
  2919  001C9E  EE20 F00A          	lfsr	2,10
  2920  001CA2  0100               	movlb	0	; () banked
  2921  001CA4  51C9               	movf	_ic_ptr& (0+255),w,b
  2922  001CA6  26D9               	addwf	fsr2l,f,c
  2923  001CA8  0100               	movlb	0	; () banked
  2924  001CAA  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  2925  001CAC  22DA               	addwfc	fsr2h,f,c
  2926  001CAE  0E00               	movlw	0
  2927  001CB0  6EDF               	movwf	indf2,c
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;my_i2c.c: 439: ic_ptr->event_count = 0;
  2931  001CB2  0100               	movlb	0	; () banked
  2932  001CB4  EE20 F00C          	lfsr	2,12
  2933  001CB8  0100               	movlb	0	; () banked
  2934  001CBA  51C9               	movf	_ic_ptr& (0+255),w,b
  2935  001CBC  26D9               	addwf	fsr2l,f,c
  2936  001CBE  0100               	movlb	0	; () banked
  2937  001CC0  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  2938  001CC2  22DA               	addwfc	fsr2h,f,c
  2939  001CC4  0E00               	movlw	0
  2940  001CC6  6EDF               	movwf	indf2,c
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;my_i2c.c: 440: ic_ptr->status = 0x5;
  2944  001CC8  0100               	movlb	0	; () banked
  2945  001CCA  EE20 F00D          	lfsr	2,13
  2946  001CCE  0100               	movlb	0	; () banked
  2947  001CD0  51C9               	movf	_ic_ptr& (0+255),w,b
  2948  001CD2  26D9               	addwf	fsr2l,f,c
  2949  001CD4  0100               	movlb	0	; () banked
  2950  001CD6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  2951  001CD8  22DA               	addwfc	fsr2h,f,c
  2952  001CDA  0E05               	movlw	5
  2953  001CDC  6EDF               	movwf	indf2,c
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;my_i2c.c: 441: ic_ptr->error_count = 0;
  2957  001CDE  0100               	movlb	0	; () banked
  2958  001CE0  EE20 F00F          	lfsr	2,15
  2959  001CE4  0100               	movlb	0	; () banked
  2960  001CE6  51C9               	movf	_ic_ptr& (0+255),w,b
  2961  001CE8  26D9               	addwf	fsr2l,f,c
  2962  001CEA  0100               	movlb	0	; () banked
  2963  001CEC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  2964  001CEE  22DA               	addwfc	fsr2h,f,c
  2965  001CF0  0E00               	movlw	0
  2966  001CF2  6EDF               	movwf	indf2,c
  2967                           
  2968                           ; BSR set to: 0
  2969  001CF4  0012               	return	
  2970  001CF6                     __end_of_init_i2c:
  2971                           	opt stack 0
  2972                           tblptru	equ	0xFF8
  2973                           tblptrh	equ	0xFF7
  2974                           tblptrl	equ	0xFF6
  2975                           tablat	equ	0xFF5
  2976                           prodh	equ	0xFF4
  2977                           prodl	equ	0xFF3
  2978                           intcon2	equ	0xFF1
  2979                           postinc0	equ	0xFEE
  2980                           wreg	equ	0xFE8
  2981                           indf1	equ	0xFE7
  2982                           postdec1	equ	0xFE5
  2983                           fsr1h	equ	0xFE2
  2984                           fsr1l	equ	0xFE1
  2985                           indf2	equ	0xFDF
  2986                           postinc2	equ	0xFDE
  2987                           postdec2	equ	0xFDD
  2988                           fsr2h	equ	0xFDA
  2989                           fsr2l	equ	0xFD9
  2990                           status	equ	0xFD8
  2991                           
  2992 ;; *************** function _i2c_master_send *****************
  2993 ;; Defined at:
  2994 ;;		line 44 in file "../src/my_i2c.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  sendlength      1    wreg     unsigned char 
  2997 ;;  recvlength      1    0[BANK1 ] unsigned char 
  2998 ;;  msg             2    1[BANK1 ] PTR unsigned char 
  2999 ;;		 -> main@msgbuffer(11), 
  3000 ;;  slave_addr      1    3[BANK1 ] unsigned char 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  sendlength      1    6[BANK1 ] unsigned char 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      unsigned char 
  3005 ;; Registers used:
  3006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3012 ;;      Params:         0       0       4       0       0
  3013 ;;      Locals:         0       0       1       0       0
  3014 ;;      Temps:          0       0       2       0       0
  3015 ;;      Totals:         0       0       7       0       0
  3016 ;;Total ram usage:        7 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:   11
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_main
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text12
  3027  000C52                     __ptext12:
  3028                           	opt stack 0
  3029  000C52                     _i2c_master_send:
  3030                           	opt stack 19
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;incstack = 0
  3034                           ;i2c_master_send@sendlength stored from wreg
  3035  000C52  CFE8 F18C          	movff	wreg,i2c_master_send@sendlength
  3036                           
  3037                           ;my_i2c.c: 46: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < sendlength; ic_ptr->outbu
      +                          flen++) {
  3038  000C56  0100               	movlb	0	; () banked
  3039  000C58  EE20 F01A          	lfsr	2,26
  3040  000C5C  0100               	movlb	0	; () banked
  3041  000C5E  51C9               	movf	_ic_ptr& (0+255),w,b
  3042  000C60  26D9               	addwf	fsr2l,f,c
  3043  000C62  0100               	movlb	0	; () banked
  3044  000C64  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3045  000C66  22DA               	addwfc	fsr2h,f,c
  3046  000C68  0E00               	movlw	0
  3047  000C6A  6EDF               	movwf	indf2,c
  3048  000C6C  D042               	goto	l4111
  3049  000C6E                     l4107:
  3050                           
  3051                           ;my_i2c.c: 47: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  3052  000C6E  0100               	movlb	0	; () banked
  3053  000C70  EE20 F01A          	lfsr	2,26
  3054  000C74  0100               	movlb	0	; () banked
  3055  000C76  51C9               	movf	_ic_ptr& (0+255),w,b
  3056  000C78  26D9               	addwf	fsr2l,f,c
  3057  000C7A  0100               	movlb	0	; () banked
  3058  000C7C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3059  000C7E  22DA               	addwfc	fsr2h,f,c
  3060  000C80  50DF               	movf	indf2,w,c
  3061  000C82  0101               	movlb	1	; () banked
  3062  000C84  6F8A               	movwf	??_i2c_master_send& (0+255),b
  3063  000C86  0101               	movlb	1	; () banked
  3064  000C88  518A               	movf	??_i2c_master_send& (0+255),w,b
  3065  000C8A  0D01               	mullw	1
  3066  000C8C  50F3               	movf	prodl,w,c
  3067  000C8E  0101               	movlb	1	; () banked
  3068  000C90  0101               	movlb	1	; () banked
  3069  000C92  2587               	addwf	i2c_master_send@msg& (0+255),w,b
  3070  000C94  6ED9               	movwf	fsr2l,c
  3071  000C96  50F4               	movf	prodh,w,c
  3072  000C98  0101               	movlb	1	; () banked
  3073  000C9A  0101               	movlb	1	; () banked
  3074  000C9C  2188               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  3075  000C9E  6EDA               	movwf	fsr2h,c
  3076  000CA0  0100               	movlb	0	; () banked
  3077  000CA2  EE10 F01A          	lfsr	1,26
  3078  000CA6  0100               	movlb	0	; () banked
  3079  000CA8  51C9               	movf	_ic_ptr& (0+255),w,b
  3080  000CAA  26E1               	addwf	fsr1l,f,c
  3081  000CAC  0100               	movlb	0	; () banked
  3082  000CAE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3083  000CB0  22E2               	addwfc	fsr1h,f,c
  3084  000CB2  50E7               	movf	indf1,w,c
  3085  000CB4  0101               	movlb	1	; () banked
  3086  000CB6  6F8B               	movwf	(??_i2c_master_send+1)& (0+255),b
  3087  000CB8  0101               	movlb	1	; () banked
  3088  000CBA  518B               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3089  000CBC  0D01               	mullw	1
  3090  000CBE  0E10               	movlw	16
  3091  000CC0  26F3               	addwf	prodl,f,c
  3092  000CC2  0E00               	movlw	0
  3093  000CC4  22F4               	addwfc	prodh,f,c
  3094  000CC6  50F3               	movf	prodl,w,c
  3095  000CC8  0100               	movlb	0	; () banked
  3096  000CCA  0100               	movlb	0	; () banked
  3097  000CCC  25C9               	addwf	_ic_ptr& (0+255),w,b
  3098  000CCE  6EE1               	movwf	fsr1l,c
  3099  000CD0  50F4               	movf	prodh,w,c
  3100  000CD2  0100               	movlb	0	; () banked
  3101  000CD4  0100               	movlb	0	; () banked
  3102  000CD6  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3103  000CD8  6EE2               	movwf	fsr1h,c
  3104  000CDA  CFDF FFE7          	movff	indf2,indf1
  3105                           
  3106                           ; BSR set to: 0
  3107  000CDE  0100               	movlb	0	; () banked
  3108  000CE0  EE20 F01A          	lfsr	2,26
  3109  000CE4  0100               	movlb	0	; () banked
  3110  000CE6  51C9               	movf	_ic_ptr& (0+255),w,b
  3111  000CE8  26D9               	addwf	fsr2l,f,c
  3112  000CEA  0100               	movlb	0	; () banked
  3113  000CEC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3114  000CEE  22DA               	addwfc	fsr2h,f,c
  3115  000CF0  2ADF               	incf	indf2,f,c
  3116  000CF2                     l4111:
  3117                           
  3118                           ; BSR set to: 0
  3119  000CF2  0100               	movlb	0	; () banked
  3120  000CF4  EE20 F01A          	lfsr	2,26
  3121  000CF8  0100               	movlb	0	; () banked
  3122  000CFA  51C9               	movf	_ic_ptr& (0+255),w,b
  3123  000CFC  26D9               	addwf	fsr2l,f,c
  3124  000CFE  0100               	movlb	0	; () banked
  3125  000D00  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3126  000D02  22DA               	addwfc	fsr2h,f,c
  3127  000D04  50DF               	movf	indf2,w,c
  3128  000D06  0101               	movlb	1	; () banked
  3129  000D08  6F8A               	movwf	??_i2c_master_send& (0+255),b
  3130  000D0A  0101               	movlb	1	; () banked
  3131  000D0C  0101               	movlb	1	; () banked
  3132  000D0E  518C               	movf	i2c_master_send@sendlength& (0+255),w,b
  3133  000D10  0101               	movlb	1	; () banked
  3134  000D12  5D8A               	subwf	??_i2c_master_send& (0+255),w,b
  3135  000D14  A0D8               	btfss	status,0,c
  3136  000D16  D7AB               	goto	l4107
  3137                           
  3138                           ; BSR set to: 1
  3139                           ;my_i2c.c: 48: }
  3140                           ;my_i2c.c: 50: ic_ptr->slave_addr = slave_addr;
  3141                           
  3142                           ; BSR set to: 1
  3143  000D18  0100               	movlb	0	; () banked
  3144  000D1A  EE20 F01C          	lfsr	2,28
  3145  000D1E  0100               	movlb	0	; () banked
  3146  000D20  51C9               	movf	_ic_ptr& (0+255),w,b
  3147  000D22  26D9               	addwf	fsr2l,f,c
  3148  000D24  0100               	movlb	0	; () banked
  3149  000D26  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3150  000D28  22DA               	addwfc	fsr2h,f,c
  3151  000D2A  0101               	movlb	1	; () banked
  3152  000D2C  C189  FFDF         	movff	i2c_master_send@slave_addr,indf2
  3153                           
  3154                           ;my_i2c.c: 51: ic_ptr->outbuflen = sendlength;
  3155  000D30  0100               	movlb	0	; () banked
  3156  000D32  EE20 F01A          	lfsr	2,26
  3157  000D36  0100               	movlb	0	; () banked
  3158  000D38  51C9               	movf	_ic_ptr& (0+255),w,b
  3159  000D3A  26D9               	addwf	fsr2l,f,c
  3160  000D3C  0100               	movlb	0	; () banked
  3161  000D3E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3162  000D40  22DA               	addwfc	fsr2h,f,c
  3163  000D42  0101               	movlb	1	; () banked
  3164  000D44  C18C  FFDF         	movff	i2c_master_send@sendlength,indf2
  3165                           
  3166                           ;my_i2c.c: 52: ic_ptr->buflen = recvlength;
  3167  000D48  0100               	movlb	0	; () banked
  3168  000D4A  EE20 F00A          	lfsr	2,10
  3169  000D4E  0100               	movlb	0	; () banked
  3170  000D50  51C9               	movf	_ic_ptr& (0+255),w,b
  3171  000D52  26D9               	addwf	fsr2l,f,c
  3172  000D54  0100               	movlb	0	; () banked
  3173  000D56  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3174  000D58  22DA               	addwfc	fsr2h,f,c
  3175  000D5A  0101               	movlb	1	; () banked
  3176  000D5C  C186  FFDF         	movff	i2c_master_send@recvlength,indf2
  3177                           
  3178                           ;my_i2c.c: 53: ic_ptr->status = 0xA;
  3179  000D60  0100               	movlb	0	; () banked
  3180  000D62  EE20 F00D          	lfsr	2,13
  3181  000D66  0100               	movlb	0	; () banked
  3182  000D68  51C9               	movf	_ic_ptr& (0+255),w,b
  3183  000D6A  26D9               	addwf	fsr2l,f,c
  3184  000D6C  0100               	movlb	0	; () banked
  3185  000D6E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3186  000D70  22DA               	addwfc	fsr2h,f,c
  3187  000D72  0E0A               	movlw	10
  3188  000D74  6EDF               	movwf	indf2,c
  3189                           
  3190                           ;my_i2c.c: 54: ic_ptr->outbufind = 0;
  3191  000D76  0100               	movlb	0	; () banked
  3192  000D78  EE20 F01B          	lfsr	2,27
  3193  000D7C  0100               	movlb	0	; () banked
  3194  000D7E  51C9               	movf	_ic_ptr& (0+255),w,b
  3195  000D80  26D9               	addwf	fsr2l,f,c
  3196  000D82  0100               	movlb	0	; () banked
  3197  000D84  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3198  000D86  22DA               	addwfc	fsr2h,f,c
  3199  000D88  0E00               	movlw	0
  3200  000D8A  6EDF               	movwf	indf2,c
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;my_i2c.c: 56: SSPCON2bits.SEN = 1;
  3204  000D8C  80C5               	bsf	4037,0,c	;volatile
  3205  000D8E  0012               	return	
  3206  000D90                     __end_of_i2c_master_send:
  3207                           	opt stack 0
  3208                           tblptru	equ	0xFF8
  3209                           tblptrh	equ	0xFF7
  3210                           tblptrl	equ	0xFF6
  3211                           tablat	equ	0xFF5
  3212                           prodh	equ	0xFF4
  3213                           prodl	equ	0xFF3
  3214                           intcon2	equ	0xFF1
  3215                           postinc0	equ	0xFEE
  3216                           wreg	equ	0xFE8
  3217                           indf1	equ	0xFE7
  3218                           postdec1	equ	0xFE5
  3219                           fsr1h	equ	0xFE2
  3220                           fsr1l	equ	0xFE1
  3221                           indf2	equ	0xFDF
  3222                           postinc2	equ	0xFDE
  3223                           postdec2	equ	0xFDD
  3224                           fsr2h	equ	0xFDA
  3225                           fsr2l	equ	0xFD9
  3226                           status	equ	0xFD8
  3227                           
  3228 ;; *************** function _i2c_configure_slave *****************
  3229 ;; Defined at:
  3230 ;;		line 447 in file "../src/my_i2c.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  addr            1    wreg     unsigned char 
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;  addr            1    0[BANK1 ] unsigned char 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;		None               void
  3237 ;; Registers used:
  3238 ;;		wreg, status,2, status,0
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3244 ;;      Params:         0       0       0       0       0
  3245 ;;      Locals:         0       0       1       0       0
  3246 ;;      Temps:          0       0       0       0       0
  3247 ;;      Totals:         0       0       1       0       0
  3248 ;;Total ram usage:        1 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; Hardware stack levels required when called:   11
  3251 ;; This function calls:
  3252 ;;		Nothing
  3253 ;; This function is called by:
  3254 ;;		_main
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text13
  3259  002190                     __ptext13:
  3260                           	opt stack 0
  3261  002190                     _i2c_configure_slave:
  3262                           	opt stack 19
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;incstack = 0
  3266                           ;i2c_configure_slave@addr stored from wreg
  3267  002190  CFE8 F186          	movff	wreg,i2c_configure_slave@addr
  3268                           
  3269                           ;my_i2c.c: 459: TRISCbits.TRISC3 = 1;
  3270  002194  8694               	bsf	3988,3,c	;volatile
  3271                           
  3272                           ;my_i2c.c: 460: TRISCbits.TRISC4 = 1;
  3273  002196  8894               	bsf	3988,4,c	;volatile
  3274                           
  3275                           ;my_i2c.c: 465: SSPADD = addr;
  3276  002198  C186  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3277                           
  3278                           ;my_i2c.c: 467: SSPSTAT = 0x0;
  3279  00219C  0E00               	movlw	0
  3280  00219E  6EC7               	movwf	4039,c	;volatile
  3281                           
  3282                           ;my_i2c.c: 468: SSPCON1 = 0x0;
  3283  0021A0  0E00               	movlw	0
  3284  0021A2  6EC6               	movwf	4038,c	;volatile
  3285                           
  3286                           ;my_i2c.c: 469: SSPCON2 = 0x0;
  3287  0021A4  0E00               	movlw	0
  3288  0021A6  6EC5               	movwf	4037,c	;volatile
  3289                           
  3290                           ;my_i2c.c: 470: SSPCON1 |= 0x0E;
  3291  0021A8  0E0E               	movlw	14
  3292  0021AA  12C6               	iorwf	4038,f,c	;volatile
  3293                           
  3294                           ;my_i2c.c: 471: SSPSTAT |= 0b10000000;
  3295  0021AC  8EC7               	bsf	4039,7,c	;volatile
  3296                           
  3297                           ;my_i2c.c: 474: TRISCbits.TRISC3 = 1;
  3298  0021AE  8694               	bsf	3988,3,c	;volatile
  3299                           
  3300                           ;my_i2c.c: 475: TRISCbits.TRISC4 = 1;
  3301  0021B0  8894               	bsf	3988,4,c	;volatile
  3302                           
  3303                           ;my_i2c.c: 496: SSPCON2bits.SEN = 1;
  3304  0021B2  80C5               	bsf	4037,0,c	;volatile
  3305                           
  3306                           ;my_i2c.c: 497: SSPCON1 |= 0b00100000;
  3307  0021B4  8AC6               	bsf	4038,5,c	;volatile
  3308  0021B6  0012               	return	
  3309  0021B8                     __end_of_i2c_configure_slave:
  3310                           	opt stack 0
  3311                           tblptru	equ	0xFF8
  3312                           tblptrh	equ	0xFF7
  3313                           tblptrl	equ	0xFF6
  3314                           tablat	equ	0xFF5
  3315                           prodh	equ	0xFF4
  3316                           prodl	equ	0xFF3
  3317                           intcon2	equ	0xFF1
  3318                           postinc0	equ	0xFEE
  3319                           wreg	equ	0xFE8
  3320                           indf1	equ	0xFE7
  3321                           postdec1	equ	0xFE5
  3322                           fsr1h	equ	0xFE2
  3323                           fsr1l	equ	0xFE1
  3324                           indf2	equ	0xFDF
  3325                           postinc2	equ	0xFDE
  3326                           postdec2	equ	0xFDD
  3327                           fsr2h	equ	0xFDA
  3328                           fsr2l	equ	0xFD9
  3329                           status	equ	0xFD8
  3330                           
  3331 ;; *************** function _enable_interrupts *****************
  3332 ;; Defined at:
  3333 ;;		line 15 in file "../src/interrupts.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;		None
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;		None               void
  3340 ;; Registers used:
  3341 ;;		None
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3347 ;;      Params:         0       0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0
  3350 ;;      Totals:         0       0       0       0       0
  3351 ;;Total ram usage:        0 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:   11
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_main
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text14
  3362  0022F6                     __ptext14:
  3363                           	opt stack 0
  3364  0022F6                     _enable_interrupts:
  3365                           	opt stack 19
  3366                           
  3367                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3368                           
  3369                           ;incstack = 0
  3370  0022F6  8ED0               	bsf	4048,7,c	;volatile
  3371                           
  3372                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3373  0022F8  8EF2               	bsf	intcon,7,c	;volatile
  3374                           
  3375                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3376  0022FA  8CF2               	bsf	intcon,6,c	;volatile
  3377  0022FC  0012               	return	
  3378  0022FE                     __end_of_enable_interrupts:
  3379                           	opt stack 0
  3380                           tblptru	equ	0xFF8
  3381                           tblptrh	equ	0xFF7
  3382                           tblptrl	equ	0xFF6
  3383                           tablat	equ	0xFF5
  3384                           prodh	equ	0xFF4
  3385                           prodl	equ	0xFF3
  3386                           intcon	equ	0xFF2
  3387                           intcon2	equ	0xFF1
  3388                           postinc0	equ	0xFEE
  3389                           wreg	equ	0xFE8
  3390                           indf1	equ	0xFE7
  3391                           postdec1	equ	0xFE5
  3392                           fsr1h	equ	0xFE2
  3393                           fsr1l	equ	0xFE1
  3394                           indf2	equ	0xFDF
  3395                           postinc2	equ	0xFDE
  3396                           postdec2	equ	0xFDD
  3397                           fsr2h	equ	0xFDA
  3398                           fsr2l	equ	0xFD9
  3399                           status	equ	0xFD8
  3400                           
  3401 ;; *************** function _block_on_To_msgqueues *****************
  3402 ;; Defined at:
  3403 ;;		line 258 in file "../src/messages.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;		None               void
  3410 ;; Registers used:
  3411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3417 ;;      Params:         0       0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0
  3419 ;;      Temps:          0       0       1       0       0
  3420 ;;      Totals:         0       0       1       0       0
  3421 ;;Total ram usage:        1 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; Hardware stack levels required when called:   14
  3424 ;; This function calls:
  3425 ;;		_Delay1KTCYx
  3426 ;;		_check_msg
  3427 ;;		_in_main
  3428 ;; This function is called by:
  3429 ;;		_main
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text15
  3434  001AB4                     __ptext15:
  3435                           	opt stack 0
  3436  001AB4                     _block_on_To_msgqueues:
  3437                           	opt stack 16
  3438                           
  3439                           ;messages.c: 259: if (!in_main()) {
  3440                           
  3441                           ;incstack = 0
  3442  001AB4  EC88  F00F         	call	_in_main	;wreg free
  3443  001AB8  0101               	movlb	1	; () banked
  3444  001ABA  0101               	movlb	1	; () banked
  3445  001ABC  518B               	movf	(?_in_main+1)& (0+255),w,b
  3446  001ABE  0101               	movlb	1	; () banked
  3447  001AC0  118A               	iorwf	?_in_main& (0+255),w,b
  3448  001AC2  B4D8               	btfsc	status,2,c
  3449  001AC4  0012               	return	
  3450                           
  3451                           ; BSR set to: 1
  3452                           ;messages.c: 261: }
  3453                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3454                           
  3455                           ; BSR set to: 1
  3456                           
  3457                           ; BSR set to: 1
  3458                           ;messages.c: 260: return;
  3459  001AC6  0101               	movlb	1	; () banked
  3460  001AC8  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  3461  001ACA  0E01               	movlw	1
  3462  001ACC  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  3463  001ACE  0101               	movlb	1	; () banked
  3464  001AD0  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3465  001AD2                     l4061:
  3466                           
  3467                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3468  001AD2  0101               	movlb	1	; () banked
  3469  001AD4  0E01               	movlw	high _ToMainHigh_MQ
  3470  001AD6  0101               	movlb	1	; () banked
  3471  001AD8  0101               	movlb	1	; () banked
  3472  001ADA  6F87               	movwf	(check_msg@qptr+1)& (0+255),b
  3473  001ADC  0101               	movlb	1	; () banked
  3474  001ADE  0E00               	movlw	low _ToMainHigh_MQ
  3475  001AE0  0101               	movlb	1	; () banked
  3476  001AE2  0101               	movlb	1	; () banked
  3477  001AE4  6F86               	movwf	check_msg@qptr& (0+255),b
  3478  001AE6  EC62  F010         	call	_check_msg	;wreg free
  3479  001AEA  0900               	iorlw	0
  3480  001AEC  B4D8               	btfsc	status,2,c
  3481  001AEE  D007               	goto	l4067
  3482                           
  3483                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3484  001AF0  0101               	movlb	1	; () banked
  3485  001AF2  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  3486  001AF4  0E00               	movlw	0
  3487  001AF6  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  3488  001AF8  0101               	movlb	1	; () banked
  3489  001AFA  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3490  001AFC  0012               	return	
  3491  001AFE                     l4067:
  3492                           
  3493                           ;messages.c: 271: }
  3494                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3495  001AFE  0101               	movlb	1	; () banked
  3496  001B00  0E01               	movlw	high _ToMainLow_MQ
  3497  001B02  0101               	movlb	1	; () banked
  3498  001B04  0101               	movlb	1	; () banked
  3499  001B06  6F87               	movwf	(check_msg@qptr+1)& (0+255),b
  3500  001B08  0101               	movlb	1	; () banked
  3501  001B0A  0E43               	movlw	low _ToMainLow_MQ
  3502  001B0C  0101               	movlb	1	; () banked
  3503  001B0E  0101               	movlb	1	; () banked
  3504  001B10  6F86               	movwf	check_msg@qptr& (0+255),b
  3505  001B12  EC62  F010         	call	_check_msg	;wreg free
  3506  001B16  0900               	iorlw	0
  3507  001B18  B4D8               	btfsc	status,2,c
  3508  001B1A  D007               	goto	l4073
  3509                           
  3510                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3511  001B1C  0101               	movlb	1	; () banked
  3512  001B1E  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  3513  001B20  0E00               	movlw	0
  3514  001B22  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  3515  001B24  0101               	movlb	1	; () banked
  3516  001B26  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3517  001B28  0012               	return	
  3518  001B2A                     l4073:
  3519                           
  3520                           ;messages.c: 278: }
  3521                           ;messages.c: 279: Delay1KTCYx(10);
  3522  001B2A  0E0A               	movlw	10
  3523  001B2C  EC2E  F011         	call	_Delay1KTCYx
  3524  001B30  D7D0               	goto	l4061
  3525  001B32                     __end_of_block_on_To_msgqueues:
  3526                           	opt stack 0
  3527                           tblptru	equ	0xFF8
  3528                           tblptrh	equ	0xFF7
  3529                           tblptrl	equ	0xFF6
  3530                           tablat	equ	0xFF5
  3531                           prodh	equ	0xFF4
  3532                           prodl	equ	0xFF3
  3533                           intcon	equ	0xFF2
  3534                           intcon2	equ	0xFF1
  3535                           postinc0	equ	0xFEE
  3536                           wreg	equ	0xFE8
  3537                           indf1	equ	0xFE7
  3538                           postdec1	equ	0xFE5
  3539                           fsr1h	equ	0xFE2
  3540                           fsr1l	equ	0xFE1
  3541                           indf2	equ	0xFDF
  3542                           postinc2	equ	0xFDE
  3543                           postdec2	equ	0xFDD
  3544                           fsr2h	equ	0xFDA
  3545                           fsr2l	equ	0xFD9
  3546                           status	equ	0xFD8
  3547                           
  3548 ;; *************** function _in_main *****************
  3549 ;; Defined at:
  3550 ;;		line 41 in file "../src/interrupts.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;		None
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;		None
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  2    4[BANK1 ] int 
  3557 ;; Registers used:
  3558 ;;		wreg, status,2, status,0, cstack
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3564 ;;      Params:         0       0       2       0       0
  3565 ;;      Locals:         0       0       0       0       0
  3566 ;;      Temps:          0       0       0       0       0
  3567 ;;      Totals:         0       0       2       0       0
  3568 ;;Total ram usage:        2 bytes
  3569 ;; Hardware stack levels used:    1
  3570 ;; Hardware stack levels required when called:   13
  3571 ;; This function calls:
  3572 ;;		_in_high_int
  3573 ;;		_in_low_int
  3574 ;; This function is called by:
  3575 ;;		_block_on_To_msgqueues
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           	psect	text16
  3580  001F10                     __ptext16:
  3581                           	opt stack 0
  3582  001F10                     _in_main:
  3583                           	opt stack 16
  3584                           
  3585                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3586                           
  3587                           ;incstack = 0
  3588  001F10  EC42  F00F         	call	_in_low_int	;wreg free
  3589  001F14  0101               	movlb	1	; () banked
  3590  001F16  0101               	movlb	1	; () banked
  3591  001F18  5189               	movf	(?_in_low_int+1)& (0+255),w,b
  3592  001F1A  0101               	movlb	1	; () banked
  3593  001F1C  1188               	iorwf	?_in_low_int& (0+255),w,b
  3594  001F1E  A4D8               	btfss	status,2,c
  3595  001F20  D011               	goto	l3755
  3596                           
  3597                           ; BSR set to: 1
  3598  001F22  EC4B  F011         	call	_in_high_int	;wreg free
  3599  001F26  0101               	movlb	1	; () banked
  3600  001F28  0101               	movlb	1	; () banked
  3601  001F2A  5187               	movf	(?_in_high_int+1)& (0+255),w,b
  3602  001F2C  0101               	movlb	1	; () banked
  3603  001F2E  1186               	iorwf	?_in_high_int& (0+255),w,b
  3604  001F30  A4D8               	btfss	status,2,c
  3605  001F32  D008               	goto	l3755
  3606                           
  3607                           ; BSR set to: 1
  3608                           ;interrupts.c: 43: return (1);
  3609  001F34  0E00               	movlw	0
  3610  001F36  0101               	movlb	1	; () banked
  3611  001F38  0101               	movlb	1	; () banked
  3612  001F3A  6F8B               	movwf	(?_in_main+1)& (0+255),b
  3613  001F3C  0E01               	movlw	1
  3614  001F3E  0101               	movlb	1	; () banked
  3615  001F40  6F8A               	movwf	?_in_main& (0+255),b
  3616  001F42  0012               	return	
  3617  001F44                     l3755:
  3618                           
  3619                           ; BSR set to: 1
  3620                           ;interrupts.c: 45: return (0);
  3621  001F44  0E00               	movlw	0
  3622  001F46  0101               	movlb	1	; () banked
  3623  001F48  0101               	movlb	1	; () banked
  3624  001F4A  6F8B               	movwf	(?_in_main+1)& (0+255),b
  3625  001F4C  0E00               	movlw	0
  3626  001F4E  0101               	movlb	1	; () banked
  3627  001F50  6F8A               	movwf	?_in_main& (0+255),b
  3628  001F52  0012               	return	
  3629  001F54                     __end_of_in_main:
  3630                           	opt stack 0
  3631                           tblptru	equ	0xFF8
  3632                           tblptrh	equ	0xFF7
  3633                           tblptrl	equ	0xFF6
  3634                           tablat	equ	0xFF5
  3635                           prodh	equ	0xFF4
  3636                           prodl	equ	0xFF3
  3637                           intcon	equ	0xFF2
  3638                           intcon2	equ	0xFF1
  3639                           postinc0	equ	0xFEE
  3640                           wreg	equ	0xFE8
  3641                           indf1	equ	0xFE7
  3642                           postdec1	equ	0xFE5
  3643                           fsr1h	equ	0xFE2
  3644                           fsr1l	equ	0xFE1
  3645                           indf2	equ	0xFDF
  3646                           postinc2	equ	0xFDE
  3647                           postdec2	equ	0xFDD
  3648                           fsr2h	equ	0xFDA
  3649                           fsr2l	equ	0xFD9
  3650                           status	equ	0xFD8
  3651                           
  3652 ;; *************** function _in_low_int *****************
  3653 ;; Defined at:
  3654 ;;		line 31 in file "../src/interrupts.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;		None
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  2    2[BANK1 ] int 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0, cstack
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3668 ;;      Params:         0       0       2       0       0
  3669 ;;      Locals:         0       0       0       0       0
  3670 ;;      Temps:          0       0       0       0       0
  3671 ;;      Totals:         0       0       2       0       0
  3672 ;;Total ram usage:        2 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:   12
  3675 ;; This function calls:
  3676 ;;		_in_high_int
  3677 ;; This function is called by:
  3678 ;;		_in_main
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text17
  3683  001E84                     __ptext17:
  3684                           	opt stack 0
  3685  001E84                     _in_low_int:
  3686                           	opt stack 16
  3687                           
  3688                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3689                           
  3690                           ; BSR set to: 1
  3691                           ;incstack = 0
  3692  001E84  ACF2               	btfss	intcon,6,c	;volatile
  3693  001E86  D008               	goto	l3733
  3694                           
  3695                           ;interrupts.c: 33: return (0);
  3696  001E88  0E00               	movlw	0
  3697  001E8A  0101               	movlb	1	; () banked
  3698  001E8C  0101               	movlb	1	; () banked
  3699  001E8E  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3700  001E90  0E00               	movlw	0
  3701  001E92  0101               	movlb	1	; () banked
  3702  001E94  6F88               	movwf	?_in_low_int& (0+255),b
  3703  001E96  0012               	return	
  3704  001E98                     l3733:
  3705  001E98  EC4B  F011         	call	_in_high_int	;wreg free
  3706  001E9C  0101               	movlb	1	; () banked
  3707  001E9E  0101               	movlb	1	; () banked
  3708  001EA0  5187               	movf	(?_in_high_int+1)& (0+255),w,b
  3709  001EA2  0101               	movlb	1	; () banked
  3710  001EA4  1186               	iorwf	?_in_high_int& (0+255),w,b
  3711  001EA6  B4D8               	btfsc	status,2,c
  3712  001EA8  D008               	goto	l3741
  3713                           
  3714                           ; BSR set to: 1
  3715                           ;interrupts.c: 35: return (0);
  3716  001EAA  0E00               	movlw	0
  3717  001EAC  0101               	movlb	1	; () banked
  3718  001EAE  0101               	movlb	1	; () banked
  3719  001EB0  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3720  001EB2  0E00               	movlw	0
  3721  001EB4  0101               	movlb	1	; () banked
  3722  001EB6  6F88               	movwf	?_in_low_int& (0+255),b
  3723  001EB8  0012               	return	
  3724  001EBA                     l3741:
  3725                           
  3726                           ; BSR set to: 1
  3727                           ;interrupts.c: 37: return (1);
  3728  001EBA  0E00               	movlw	0
  3729  001EBC  0101               	movlb	1	; () banked
  3730  001EBE  0101               	movlb	1	; () banked
  3731  001EC0  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3732  001EC2  0E01               	movlw	1
  3733  001EC4  0101               	movlb	1	; () banked
  3734  001EC6  6F88               	movwf	?_in_low_int& (0+255),b
  3735  001EC8  0012               	return	
  3736  001ECA                     __end_of_in_low_int:
  3737                           	opt stack 0
  3738                           tblptru	equ	0xFF8
  3739                           tblptrh	equ	0xFF7
  3740                           tblptrl	equ	0xFF6
  3741                           tablat	equ	0xFF5
  3742                           prodh	equ	0xFF4
  3743                           prodl	equ	0xFF3
  3744                           intcon	equ	0xFF2
  3745                           intcon2	equ	0xFF1
  3746                           postinc0	equ	0xFEE
  3747                           wreg	equ	0xFE8
  3748                           indf1	equ	0xFE7
  3749                           postdec1	equ	0xFE5
  3750                           fsr1h	equ	0xFE2
  3751                           fsr1l	equ	0xFE1
  3752                           indf2	equ	0xFDF
  3753                           postinc2	equ	0xFDE
  3754                           postdec2	equ	0xFDD
  3755                           fsr2h	equ	0xFDA
  3756                           fsr2l	equ	0xFD9
  3757                           status	equ	0xFD8
  3758                           
  3759 ;; *************** function _in_high_int *****************
  3760 ;; Defined at:
  3761 ;;		line 23 in file "../src/interrupts.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;		None
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;		None
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  2    0[BANK1 ] int 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3775 ;;      Params:         0       0       2       0       0
  3776 ;;      Locals:         0       0       0       0       0
  3777 ;;      Temps:          0       0       0       0       0
  3778 ;;      Totals:         0       0       2       0       0
  3779 ;;Total ram usage:        2 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:   11
  3782 ;; This function calls:
  3783 ;;		Nothing
  3784 ;; This function is called by:
  3785 ;;		_in_low_int
  3786 ;;		_in_main
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text18
  3791  002296                     __ptext18:
  3792                           	opt stack 0
  3793  002296                     _in_high_int:
  3794                           	opt stack 16
  3795                           
  3796                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  3797                           
  3798                           ; BSR set to: 1
  3799                           ;incstack = 0
  3800  002296  0E00               	movlw	0
  3801  002298  AEF2               	btfss	intcon,7,c	;volatile
  3802  00229A  0E01               	movlw	1
  3803  00229C  0101               	movlb	1	; () banked
  3804  00229E  0101               	movlb	1	; () banked
  3805  0022A0  6F86               	movwf	?_in_high_int& (0+255),b
  3806  0022A2  0101               	movlb	1	; () banked
  3807  0022A4  6B87               	clrf	(?_in_high_int+1)& (0+255),b
  3808  0022A6  0012               	return	
  3809  0022A8                     __end_of_in_high_int:
  3810                           	opt stack 0
  3811                           tblptru	equ	0xFF8
  3812                           tblptrh	equ	0xFF7
  3813                           tblptrl	equ	0xFF6
  3814                           tablat	equ	0xFF5
  3815                           prodh	equ	0xFF4
  3816                           prodl	equ	0xFF3
  3817                           intcon	equ	0xFF2
  3818                           intcon2	equ	0xFF1
  3819                           postinc0	equ	0xFEE
  3820                           wreg	equ	0xFE8
  3821                           indf1	equ	0xFE7
  3822                           postdec1	equ	0xFE5
  3823                           fsr1h	equ	0xFE2
  3824                           fsr1l	equ	0xFE1
  3825                           indf2	equ	0xFDF
  3826                           postinc2	equ	0xFDE
  3827                           postdec2	equ	0xFDD
  3828                           fsr2h	equ	0xFDA
  3829                           fsr2l	equ	0xFD9
  3830                           status	equ	0xFD8
  3831                           
  3832 ;; *************** function _check_msg *****************
  3833 ;; Defined at:
  3834 ;;		line 222 in file "../src/messages.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3837 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;		None
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      unsigned char 
  3842 ;; Registers used:
  3843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3849 ;;      Params:         0       0       2       0       0
  3850 ;;      Locals:         0       0       0       0       0
  3851 ;;      Temps:          0       0       1       0       0
  3852 ;;      Totals:         0       0       3       0       0
  3853 ;;Total ram usage:        3 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:   11
  3856 ;; This function calls:
  3857 ;;		Nothing
  3858 ;; This function is called by:
  3859 ;;		_block_on_To_msgqueues
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           	psect	text19
  3864  0020C4                     __ptext19:
  3865                           	opt stack 0
  3866  0020C4                     _check_msg:
  3867                           	opt stack 18
  3868                           
  3869                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3870                           
  3871                           ; BSR set to: 1
  3872                           ;incstack = 0
  3873  0020C4  0101               	movlb	1	; () banked
  3874  0020C6  EE20 F042          	lfsr	2,66
  3875  0020CA  0101               	movlb	1	; () banked
  3876  0020CC  5186               	movf	check_msg@qptr& (0+255),w,b
  3877  0020CE  26D9               	addwf	fsr2l,f,c
  3878  0020D0  0101               	movlb	1	; () banked
  3879  0020D2  5187               	movf	(check_msg@qptr+1)& (0+255),w,b
  3880  0020D4  22DA               	addwfc	fsr2h,f,c
  3881  0020D6  50DF               	movf	indf2,w,c
  3882  0020D8  0101               	movlb	1	; () banked
  3883  0020DA  6F88               	movwf	??_check_msg& (0+255),b
  3884  0020DC  0101               	movlb	1	; () banked
  3885  0020DE  5188               	movf	??_check_msg& (0+255),w,b
  3886  0020E0  0D0D               	mullw	13
  3887  0020E2  50F3               	movf	prodl,w,c
  3888  0020E4  0101               	movlb	1	; () banked
  3889  0020E6  0101               	movlb	1	; () banked
  3890  0020E8  2586               	addwf	check_msg@qptr& (0+255),w,b
  3891  0020EA  6ED9               	movwf	fsr2l,c
  3892  0020EC  50F4               	movf	prodh,w,c
  3893  0020EE  0101               	movlb	1	; () banked
  3894  0020F0  0101               	movlb	1	; () banked
  3895  0020F2  2187               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3896  0020F4  6EDA               	movwf	fsr2h,c
  3897  0020F6  50DF               	movf	indf2,w,c
  3898  0020F8  0012               	return	
  3899  0020FA                     __end_of_check_msg:
  3900                           	opt stack 0
  3901                           tblptru	equ	0xFF8
  3902                           tblptrh	equ	0xFF7
  3903                           tblptrl	equ	0xFF6
  3904                           tablat	equ	0xFF5
  3905                           prodh	equ	0xFF4
  3906                           prodl	equ	0xFF3
  3907                           intcon	equ	0xFF2
  3908                           intcon2	equ	0xFF1
  3909                           postinc0	equ	0xFEE
  3910                           wreg	equ	0xFE8
  3911                           indf1	equ	0xFE7
  3912                           postdec1	equ	0xFE5
  3913                           fsr1h	equ	0xFE2
  3914                           fsr1l	equ	0xFE1
  3915                           indf2	equ	0xFDF
  3916                           postinc2	equ	0xFDE
  3917                           postdec2	equ	0xFDD
  3918                           fsr2h	equ	0xFDA
  3919                           fsr2l	equ	0xFD9
  3920                           status	equ	0xFD8
  3921                           
  3922 ;; *************** function _Delay1KTCYx *****************
  3923 ;; Defined at:
  3924 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  unit            1    wreg     unsigned char 
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;  unit            1    0[BANK1 ] unsigned char 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;		None               void
  3931 ;; Registers used:
  3932 ;;		wreg
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3938 ;;      Params:         0       0       0       0       0
  3939 ;;      Locals:         0       0       1       0       0
  3940 ;;      Temps:          0       0       0       0       0
  3941 ;;      Totals:         0       0       1       0       0
  3942 ;;Total ram usage:        1 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:   11
  3945 ;; This function calls:
  3946 ;;		Nothing
  3947 ;; This function is called by:
  3948 ;;		_block_on_To_msgqueues
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text20
  3953  00225C                     __ptext20:
  3954                           	opt stack 0
  3955  00225C                     _Delay1KTCYx:
  3956                           	opt stack 18
  3957                           
  3958                           ; BSR set to: 1
  3959                           ;incstack = 0
  3960                           ;Delay1KTCYx@unit stored from wreg
  3961  00225C  CFE8 F186          	movff	wreg,Delay1KTCYx@unit
  3962  002260                     l863:
  3963  002260  0EFA               	movlw	250
  3964  002262                     u3947:
  3965  002262  F000               	nop	
  3966  002264  2EE8               	decfsz	wreg,f,c
  3967  002266  D7FD               	goto	u3947
  3968  002268  0101               	movlb	1	; () banked
  3969  00226A  0101               	movlb	1	; () banked
  3970  00226C  2F86               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3971  00226E  D7F8               	goto	l863
  3972  002270  0012               	return	
  3973  002272                     __end_of_Delay1KTCYx:
  3974                           	opt stack 0
  3975                           tblptru	equ	0xFF8
  3976                           tblptrh	equ	0xFF7
  3977                           tblptrl	equ	0xFF6
  3978                           tablat	equ	0xFF5
  3979                           prodh	equ	0xFF4
  3980                           prodl	equ	0xFF3
  3981                           intcon	equ	0xFF2
  3982                           intcon2	equ	0xFF1
  3983                           postinc0	equ	0xFEE
  3984                           wreg	equ	0xFE8
  3985                           indf1	equ	0xFE7
  3986                           postdec1	equ	0xFE5
  3987                           fsr1h	equ	0xFE2
  3988                           fsr1l	equ	0xFE1
  3989                           indf2	equ	0xFDF
  3990                           postinc2	equ	0xFDE
  3991                           postdec2	equ	0xFDD
  3992                           fsr2h	equ	0xFDA
  3993                           fsr2l	equ	0xFD9
  3994                           status	equ	0xFD8
  3995                           
  3996 ;; *************** function _ToMainLow_recvmsg *****************
  3997 ;; Defined at:
  3998 ;;		line 112 in file "../src/messages.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  maxlength       1    wreg     unsigned char 
  4001 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4002 ;;		 -> main@msgtype(1), 
  4003 ;;  data            2   26[BANK1 ] PTR void 
  4004 ;;		 -> main@msgbuffer(11), 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      char 
  4009 ;; Registers used:
  4010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4016 ;;      Params:         0       0       4       0       0
  4017 ;;      Locals:         0       0       1       0       0
  4018 ;;      Temps:          0       0       0       0       0
  4019 ;;      Totals:         0       0       5       0       0
  4020 ;;Total ram usage:        5 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:   13
  4023 ;; This function calls:
  4024 ;;		_recv_msg
  4025 ;; This function is called by:
  4026 ;;		_main
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text21
  4031  001F54                     __ptext21:
  4032                           	opt stack 0
  4033  001F54                     _ToMainLow_recvmsg:
  4034                           	opt stack 17
  4035                           
  4036                           ; BSR set to: 1
  4037                           ;incstack = 0
  4038                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4039  001F54  CFE8 F1A2          	movff	wreg,ToMainLow_recvmsg@maxlength
  4040                           
  4041                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4042  001F58  0101               	movlb	1	; () banked
  4043  001F5A  0E01               	movlw	high _ToMainLow_MQ
  4044  001F5C  0101               	movlb	1	; () banked
  4045  001F5E  0101               	movlb	1	; () banked
  4046  001F60  6F91               	movwf	(recv_msg@qptr+1)& (0+255),b
  4047  001F62  0101               	movlb	1	; () banked
  4048  001F64  0E43               	movlw	low _ToMainLow_MQ
  4049  001F66  0101               	movlb	1	; () banked
  4050  001F68  0101               	movlb	1	; () banked
  4051  001F6A  6F90               	movwf	recv_msg@qptr& (0+255),b
  4052  001F6C  C1A2  F192         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4053  001F70  0101               	movlb	1	; () banked
  4054  001F72  0101               	movlb	1	; () banked
  4055  001F74  C19F  F194         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4056  001F78  0101               	movlb	1	; () banked
  4057  001F7A  0101               	movlb	1	; () banked
  4058  001F7C  C19E  F193         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4059  001F80  0101               	movlb	1	; () banked
  4060  001F82  0101               	movlb	1	; () banked
  4061  001F84  C1A1  F196         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4062  001F88  0101               	movlb	1	; () banked
  4063  001F8A  0101               	movlb	1	; () banked
  4064  001F8C  C1A0  F195         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4065  001F90  EC7A  F005         	call	_recv_msg	;wreg free
  4066  001F94  0012               	return	
  4067  001F96                     __end_of_ToMainLow_recvmsg:
  4068                           	opt stack 0
  4069                           tblptru	equ	0xFF8
  4070                           tblptrh	equ	0xFF7
  4071                           tblptrl	equ	0xFF6
  4072                           tablat	equ	0xFF5
  4073                           prodh	equ	0xFF4
  4074                           prodl	equ	0xFF3
  4075                           intcon	equ	0xFF2
  4076                           intcon2	equ	0xFF1
  4077                           postinc0	equ	0xFEE
  4078                           wreg	equ	0xFE8
  4079                           indf1	equ	0xFE7
  4080                           postdec1	equ	0xFE5
  4081                           fsr1h	equ	0xFE2
  4082                           fsr1l	equ	0xFE1
  4083                           indf2	equ	0xFDF
  4084                           postinc2	equ	0xFDE
  4085                           postdec2	equ	0xFDD
  4086                           fsr2h	equ	0xFDA
  4087                           fsr2l	equ	0xFD9
  4088                           status	equ	0xFD8
  4089                           
  4090 ;; *************** function _ToMainHigh_recvmsg *****************
  4091 ;; Defined at:
  4092 ;;		line 135 in file "../src/messages.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  maxlength       1    wreg     unsigned char 
  4095 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4096 ;;		 -> main@msgtype(1), 
  4097 ;;  data            2   26[BANK1 ] PTR void 
  4098 ;;		 -> main@msgbuffer(11), 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      char 
  4103 ;; Registers used:
  4104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4110 ;;      Params:         0       0       4       0       0
  4111 ;;      Locals:         0       0       1       0       0
  4112 ;;      Temps:          0       0       0       0       0
  4113 ;;      Totals:         0       0       5       0       0
  4114 ;;Total ram usage:        5 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:   13
  4117 ;; This function calls:
  4118 ;;		_recv_msg
  4119 ;; This function is called by:
  4120 ;;		_main
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text22
  4125  001F96                     __ptext22:
  4126                           	opt stack 0
  4127  001F96                     _ToMainHigh_recvmsg:
  4128                           	opt stack 17
  4129                           
  4130                           ;incstack = 0
  4131                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4132  001F96  CFE8 F1A2          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4133                           
  4134                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4135  001F9A  0101               	movlb	1	; () banked
  4136  001F9C  0E01               	movlw	high _ToMainHigh_MQ
  4137  001F9E  0101               	movlb	1	; () banked
  4138  001FA0  0101               	movlb	1	; () banked
  4139  001FA2  6F91               	movwf	(recv_msg@qptr+1)& (0+255),b
  4140  001FA4  0101               	movlb	1	; () banked
  4141  001FA6  0E00               	movlw	low _ToMainHigh_MQ
  4142  001FA8  0101               	movlb	1	; () banked
  4143  001FAA  0101               	movlb	1	; () banked
  4144  001FAC  6F90               	movwf	recv_msg@qptr& (0+255),b
  4145  001FAE  C1A2  F192         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4146  001FB2  0101               	movlb	1	; () banked
  4147  001FB4  0101               	movlb	1	; () banked
  4148  001FB6  C19F  F194         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4149  001FBA  0101               	movlb	1	; () banked
  4150  001FBC  0101               	movlb	1	; () banked
  4151  001FBE  C19E  F193         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4152  001FC2  0101               	movlb	1	; () banked
  4153  001FC4  0101               	movlb	1	; () banked
  4154  001FC6  C1A1  F196         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4155  001FCA  0101               	movlb	1	; () banked
  4156  001FCC  0101               	movlb	1	; () banked
  4157  001FCE  C1A0  F195         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4158  001FD2  EC7A  F005         	call	_recv_msg	;wreg free
  4159  001FD6  0012               	return	
  4160  001FD8                     __end_of_ToMainHigh_recvmsg:
  4161                           	opt stack 0
  4162                           tblptru	equ	0xFF8
  4163                           tblptrh	equ	0xFF7
  4164                           tblptrl	equ	0xFF6
  4165                           tablat	equ	0xFF5
  4166                           prodh	equ	0xFF4
  4167                           prodl	equ	0xFF3
  4168                           intcon	equ	0xFF2
  4169                           intcon2	equ	0xFF1
  4170                           postinc0	equ	0xFEE
  4171                           wreg	equ	0xFE8
  4172                           indf1	equ	0xFE7
  4173                           postdec1	equ	0xFE5
  4174                           fsr1h	equ	0xFE2
  4175                           fsr1l	equ	0xFE1
  4176                           indf2	equ	0xFDF
  4177                           postinc2	equ	0xFDE
  4178                           postdec2	equ	0xFDD
  4179                           fsr2h	equ	0xFDA
  4180                           fsr2l	equ	0xFD9
  4181                           status	equ	0xFD8
  4182                           
  4183 ;; *************** function _recv_msg *****************
  4184 ;; Defined at:
  4185 ;;		line 63 in file "../src/messages.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4188 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4189 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4190 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  4191 ;;		 -> main@msgtype(1), 
  4192 ;;  data            2   15[BANK1 ] PTR void 
  4193 ;;		 -> main@msgbuffer(11), 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  4196 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4197 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4198 ;;  tlength         2   20[BANK1 ] unsigned int 
  4199 ;;  slot            1   19[BANK1 ] unsigned char 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      char 
  4202 ;; Registers used:
  4203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4209 ;;      Params:         0       0       7       0       0
  4210 ;;      Locals:         0       0       5       0       0
  4211 ;;      Temps:          0       0       2       0       0
  4212 ;;      Totals:         0       0      14       0       0
  4213 ;;Total ram usage:       14 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:   12
  4216 ;; This function calls:
  4217 ;;		___awmod
  4218 ;;		_memcpy
  4219 ;; This function is called by:
  4220 ;;		_ToMainLow_recvmsg
  4221 ;;		_ToMainHigh_recvmsg
  4222 ;;		_FromMainLow_recvmsg
  4223 ;;		_FromMainHigh_recvmsg
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           	psect	text23
  4228  000AF4                     __ptext23:
  4229                           	opt stack 0
  4230  000AF4                     _recv_msg:
  4231                           	opt stack 17
  4232                           
  4233                           ;messages.c: 64: unsigned char slot;
  4234                           ;messages.c: 68: msg *qmsg;
  4235                           ;messages.c: 69: size_t tlength;
  4236                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4237                           
  4238                           ;incstack = 0
  4239  000AF4  0101               	movlb	1	; () banked
  4240  000AF6  EE20 F042          	lfsr	2,66
  4241  000AFA  0101               	movlb	1	; () banked
  4242  000AFC  5190               	movf	recv_msg@qptr& (0+255),w,b
  4243  000AFE  26D9               	addwf	fsr2l,f,c
  4244  000B00  0101               	movlb	1	; () banked
  4245  000B02  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4246  000B04  22DA               	addwfc	fsr2h,f,c
  4247  000B06  50DF               	movf	indf2,w,c
  4248  000B08  0101               	movlb	1	; () banked
  4249  000B0A  0101               	movlb	1	; () banked
  4250  000B0C  6F99               	movwf	recv_msg@slot& (0+255),b
  4251                           
  4252                           ; BSR set to: 1
  4253                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4254  000B0E  0101               	movlb	1	; () banked
  4255  000B10  0101               	movlb	1	; () banked
  4256  000B12  5199               	movf	recv_msg@slot& (0+255),w,b
  4257  000B14  0D0D               	mullw	13
  4258  000B16  50F3               	movf	prodl,w,c
  4259  000B18  0101               	movlb	1	; () banked
  4260  000B1A  0101               	movlb	1	; () banked
  4261  000B1C  2590               	addwf	recv_msg@qptr& (0+255),w,b
  4262  000B1E  0101               	movlb	1	; () banked
  4263  000B20  0101               	movlb	1	; () banked
  4264  000B22  6F9C               	movwf	recv_msg@qmsg& (0+255),b
  4265  000B24  50F4               	movf	prodh,w,c
  4266  000B26  0101               	movlb	1	; () banked
  4267  000B28  0101               	movlb	1	; () banked
  4268  000B2A  2191               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4269  000B2C  0101               	movlb	1	; () banked
  4270  000B2E  6F9D               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4271                           
  4272                           ; BSR set to: 1
  4273                           ;messages.c: 74: if (qmsg->full == 1) {
  4274  000B30  0E01               	movlw	1
  4275  000B32  C19C  FFD9         	movff	recv_msg@qmsg,fsr2l
  4276  000B36  C19D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4277  000B3A  62DF               	cpfseq	indf2,c
  4278  000B3C  D088               	goto	l4195
  4279                           
  4280                           ; BSR set to: 1
  4281                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4282  000B3E  0101               	movlb	1	; () banked
  4283  000B40  EE20 F001          	lfsr	2,1
  4284  000B44  0101               	movlb	1	; () banked
  4285  000B46  519C               	movf	recv_msg@qmsg& (0+255),w,b
  4286  000B48  26D9               	addwf	fsr2l,f,c
  4287  000B4A  0101               	movlb	1	; () banked
  4288  000B4C  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4289  000B4E  22DA               	addwfc	fsr2h,f,c
  4290  000B50  50DF               	movf	indf2,w,c
  4291  000B52  0101               	movlb	1	; () banked
  4292  000B54  0101               	movlb	1	; () banked
  4293  000B56  5D92               	subwf	recv_msg@maxlength& (0+255),w,b
  4294  000B58  B0D8               	btfsc	status,0,c
  4295  000B5A  D002               	goto	l4179
  4296                           
  4297                           ; BSR set to: 1
  4298                           ;messages.c: 77: return (-3);
  4299  000B5C  0EFD               	movlw	253
  4300  000B5E  0012               	return	
  4301  000B60                     l4179:
  4302                           
  4303                           ; BSR set to: 1
  4304                           ;messages.c: 78: }
  4305                           ;messages.c: 80: tlength = qmsg->length;
  4306  000B60  0101               	movlb	1	; () banked
  4307  000B62  EE20 F001          	lfsr	2,1
  4308  000B66  0101               	movlb	1	; () banked
  4309  000B68  519C               	movf	recv_msg@qmsg& (0+255),w,b
  4310  000B6A  26D9               	addwf	fsr2l,f,c
  4311  000B6C  0101               	movlb	1	; () banked
  4312  000B6E  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4313  000B70  22DA               	addwfc	fsr2h,f,c
  4314  000B72  50DF               	movf	indf2,w,c
  4315  000B74  0101               	movlb	1	; () banked
  4316  000B76  6F97               	movwf	??_recv_msg& (0+255),b
  4317  000B78  0101               	movlb	1	; () banked
  4318  000B7A  5197               	movf	??_recv_msg& (0+255),w,b
  4319  000B7C  0101               	movlb	1	; () banked
  4320  000B7E  0101               	movlb	1	; () banked
  4321  000B80  6F9A               	movwf	recv_msg@tlength& (0+255),b
  4322  000B82  0101               	movlb	1	; () banked
  4323  000B84  6B9B               	clrf	(recv_msg@tlength+1)& (0+255),b
  4324                           
  4325                           ; BSR set to: 1
  4326                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4327  000B86  0101               	movlb	1	; () banked
  4328  000B88  0101               	movlb	1	; () banked
  4329  000B8A  C196  F187         	movff	recv_msg@data+1,memcpy@d1+1
  4330  000B8E  0101               	movlb	1	; () banked
  4331  000B90  0101               	movlb	1	; () banked
  4332  000B92  C195  F186         	movff	recv_msg@data,memcpy@d1
  4333  000B96  0E03               	movlw	3
  4334  000B98  0101               	movlb	1	; () banked
  4335  000B9A  0101               	movlb	1	; () banked
  4336  000B9C  259C               	addwf	recv_msg@qmsg& (0+255),w,b
  4337  000B9E  0101               	movlb	1	; () banked
  4338  000BA0  6F97               	movwf	??_recv_msg& (0+255),b
  4339  000BA2  0E00               	movlw	0
  4340  000BA4  0101               	movlb	1	; () banked
  4341  000BA6  0101               	movlb	1	; () banked
  4342  000BA8  219D               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4343  000BAA  0101               	movlb	1	; () banked
  4344  000BAC  6F98               	movwf	(??_recv_msg+1)& (0+255),b
  4345  000BAE  C197  F188         	movff	??_recv_msg,memcpy@s1
  4346  000BB2  C198  F189         	movff	??_recv_msg+1,memcpy@s1+1
  4347  000BB6  C19A  F18A         	movff	recv_msg@tlength,memcpy@n
  4348  000BBA  C19B  F18B         	movff	recv_msg@tlength+1,memcpy@n+1
  4349  000BBE  ECE4  F00E         	call	_memcpy	;wreg free
  4350                           
  4351                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  4352  000BC2  0101               	movlb	1	; () banked
  4353  000BC4  EE20 F042          	lfsr	2,66
  4354  000BC8  0101               	movlb	1	; () banked
  4355  000BCA  5190               	movf	recv_msg@qptr& (0+255),w,b
  4356  000BCC  26D9               	addwf	fsr2l,f,c
  4357  000BCE  0101               	movlb	1	; () banked
  4358  000BD0  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4359  000BD2  22DA               	addwfc	fsr2h,f,c
  4360  000BD4  0101               	movlb	1	; () banked
  4361  000BD6  EE10 F042          	lfsr	1,66
  4362  000BDA  0101               	movlb	1	; () banked
  4363  000BDC  5190               	movf	recv_msg@qptr& (0+255),w,b
  4364  000BDE  26E1               	addwf	fsr1l,f,c
  4365  000BE0  0101               	movlb	1	; () banked
  4366  000BE2  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4367  000BE4  22E2               	addwfc	fsr1h,f,c
  4368  000BE6  50E7               	movf	indf1,w,c
  4369  000BE8  0101               	movlb	1	; () banked
  4370  000BEA  6F97               	movwf	??_recv_msg& (0+255),b
  4371  000BEC  0E01               	movlw	1
  4372  000BEE  0101               	movlb	1	; () banked
  4373  000BF0  2597               	addwf	??_recv_msg& (0+255),w,b
  4374  000BF2  0101               	movlb	1	; () banked
  4375  000BF4  0101               	movlb	1	; () banked
  4376  000BF6  6F86               	movwf	___awmod@dividend& (0+255),b
  4377  000BF8  0101               	movlb	1	; () banked
  4378  000BFA  0101               	movlb	1	; () banked
  4379  000BFC  6B87               	clrf	(___awmod@dividend+1)& (0+255),b
  4380  000BFE  0E00               	movlw	0
  4381  000C00  2387               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4382  000C02  0E00               	movlw	0
  4383  000C04  0101               	movlb	1	; () banked
  4384  000C06  0101               	movlb	1	; () banked
  4385  000C08  6F89               	movwf	(___awmod@divisor+1)& (0+255),b
  4386  000C0A  0E05               	movlw	5
  4387  000C0C  0101               	movlb	1	; () banked
  4388  000C0E  6F88               	movwf	___awmod@divisor& (0+255),b
  4389  000C10  ECF4  F007         	call	___awmod	;wreg free
  4390  000C14  0101               	movlb	1	; () banked
  4391  000C16  0101               	movlb	1	; () banked
  4392  000C18  5186               	movf	?___awmod& (0+255),w,b
  4393  000C1A  6EDF               	movwf	indf2,c
  4394                           
  4395                           ; BSR set to: 1
  4396                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4397  000C1C  0101               	movlb	1	; () banked
  4398  000C1E  EE20 F002          	lfsr	2,2
  4399  000C22  0101               	movlb	1	; () banked
  4400  000C24  519C               	movf	recv_msg@qmsg& (0+255),w,b
  4401  000C26  26D9               	addwf	fsr2l,f,c
  4402  000C28  0101               	movlb	1	; () banked
  4403  000C2A  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4404  000C2C  22DA               	addwfc	fsr2h,f,c
  4405  000C2E  C193  FFE1         	movff	recv_msg@msgtype,fsr1l
  4406  000C32  C194  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4407  000C36  CFDF FFE7          	movff	indf2,indf1
  4408                           
  4409                           ; BSR set to: 1
  4410                           ;messages.c: 91: qmsg->full = 0;
  4411  000C3A  C19C  FFD9         	movff	recv_msg@qmsg,fsr2l
  4412  000C3E  C19D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4413  000C42  0E00               	movlw	0
  4414  000C44  6EDF               	movwf	indf2,c
  4415                           
  4416                           ; BSR set to: 1
  4417                           ;messages.c: 92: return (tlength);
  4418  000C46  0101               	movlb	1	; () banked
  4419  000C48  0101               	movlb	1	; () banked
  4420  000C4A  519A               	movf	recv_msg@tlength& (0+255),w,b
  4421  000C4C  0012               	return	
  4422  000C4E                     l4195:
  4423                           
  4424                           ; BSR set to: 1
  4425                           ;messages.c: 94: return (-4);
  4426  000C4E  0EFC               	movlw	252
  4427  000C50  0012               	return	
  4428  000C52                     __end_of_recv_msg:
  4429                           	opt stack 0
  4430                           tblptru	equ	0xFF8
  4431                           tblptrh	equ	0xFF7
  4432                           tblptrl	equ	0xFF6
  4433                           tablat	equ	0xFF5
  4434                           prodh	equ	0xFF4
  4435                           prodl	equ	0xFF3
  4436                           intcon	equ	0xFF2
  4437                           intcon2	equ	0xFF1
  4438                           postinc0	equ	0xFEE
  4439                           wreg	equ	0xFE8
  4440                           indf1	equ	0xFE7
  4441                           postdec1	equ	0xFE5
  4442                           fsr1h	equ	0xFE2
  4443                           fsr1l	equ	0xFE1
  4444                           indf2	equ	0xFDF
  4445                           postinc2	equ	0xFDE
  4446                           postdec2	equ	0xFDD
  4447                           fsr2h	equ	0xFDA
  4448                           fsr2l	equ	0xFD9
  4449                           status	equ	0xFD8
  4450                           
  4451 ;; *************** function _memcpy *****************
  4452 ;; Defined at:
  4453 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  d1              2    0[BANK1 ] PTR void 
  4456 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4457 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4458 ;;		 -> main@msgbuffer(11), 
  4459 ;;  s1              2    2[BANK1 ] PTR const void 
  4460 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4461 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4462 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4463 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4464 ;;		 -> main@uc(13), 
  4465 ;;  n               2    4[BANK1 ] unsigned int 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4468 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4469 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4470 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4471 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4472 ;;		 -> main@uc(13), 
  4473 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4474 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4475 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4476 ;;		 -> main@msgbuffer(11), 
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  2    0[BANK1 ] PTR void 
  4479 ;; Registers used:
  4480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4486 ;;      Params:         0       0       6       0       0
  4487 ;;      Locals:         0       0       4       0       0
  4488 ;;      Temps:          0       0       0       0       0
  4489 ;;      Totals:         0       0      10       0       0
  4490 ;;Total ram usage:       10 bytes
  4491 ;; Hardware stack levels used:    1
  4492 ;; Hardware stack levels required when called:   11
  4493 ;; This function calls:
  4494 ;;		Nothing
  4495 ;; This function is called by:
  4496 ;;		_send_msg
  4497 ;;		_recv_msg
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text24
  4502  001DC8                     __ptext24:
  4503                           	opt stack 0
  4504  001DC8                     _memcpy:
  4505                           	opt stack 16
  4506                           
  4507                           ; BSR set to: 1
  4508                           ;incstack = 0
  4509  001DC8  0101               	movlb	1	; () banked
  4510  001DCA  0101               	movlb	1	; () banked
  4511  001DCC  C189  F18F         	movff	memcpy@s1+1,memcpy@s+1
  4512  001DD0  0101               	movlb	1	; () banked
  4513  001DD2  0101               	movlb	1	; () banked
  4514  001DD4  C188  F18E         	movff	memcpy@s1,memcpy@s
  4515  001DD8  0101               	movlb	1	; () banked
  4516  001DDA  0101               	movlb	1	; () banked
  4517  001DDC  C187  F18D         	movff	memcpy@d1+1,memcpy@d+1
  4518  001DE0  0101               	movlb	1	; () banked
  4519  001DE2  0101               	movlb	1	; () banked
  4520  001DE4  C186  F18C         	movff	memcpy@d1,memcpy@d
  4521  001DE8  D012               	goto	l4165
  4522  001DEA                     l4159:
  4523                           
  4524                           ; BSR set to: 1
  4525  001DEA  C18E  FFD9         	movff	memcpy@s,fsr2l
  4526  001DEE  C18F  FFDA         	movff	memcpy@s+1,fsr2h
  4527  001DF2  C18C  FFE1         	movff	memcpy@d,fsr1l
  4528  001DF6  C18D  FFE2         	movff	memcpy@d+1,fsr1h
  4529  001DFA  CFDF FFE7          	movff	indf2,indf1
  4530                           
  4531                           ; BSR set to: 1
  4532  001DFE  0101               	movlb	1	; () banked
  4533  001E00  0101               	movlb	1	; () banked
  4534  001E02  4B8E               	infsnz	memcpy@s& (0+255),f,b
  4535  001E04  2B8F               	incf	(memcpy@s+1)& (0+255),f,b
  4536                           
  4537                           ; BSR set to: 1
  4538  001E06  0101               	movlb	1	; () banked
  4539  001E08  0101               	movlb	1	; () banked
  4540  001E0A  4B8C               	infsnz	memcpy@d& (0+255),f,b
  4541  001E0C  2B8D               	incf	(memcpy@d+1)& (0+255),f,b
  4542  001E0E                     l4165:
  4543                           
  4544                           ; BSR set to: 1
  4545  001E0E  0101               	movlb	1	; () banked
  4546  001E10  0101               	movlb	1	; () banked
  4547  001E12  078A               	decf	memcpy@n& (0+255),f,b
  4548  001E14  A0D8               	btfss	status,0,c
  4549  001E16  078B               	decf	(memcpy@n+1)& (0+255),f,b
  4550  001E18  0101               	movlb	1	; () banked
  4551  001E1A  298A               	incf	memcpy@n& (0+255),w,b
  4552  001E1C  B4D8               	btfsc	status,2,c
  4553  001E1E  298B               	incf	(memcpy@n+1)& (0+255),w,b
  4554  001E20  B4D8               	btfsc	status,2,c
  4555                           
  4556                           ; BSR set to: 1
  4557                           
  4558                           ; BSR set to: 1
  4559                           ;	Return value of _memcpy is never used
  4560  001E22  0012               	return	
  4561  001E24  D7E2               	goto	l4159
  4562  001E26                     __end_of_memcpy:
  4563                           	opt stack 0
  4564                           tblptru	equ	0xFF8
  4565                           tblptrh	equ	0xFF7
  4566                           tblptrl	equ	0xFF6
  4567                           tablat	equ	0xFF5
  4568                           prodh	equ	0xFF4
  4569                           prodl	equ	0xFF3
  4570                           intcon	equ	0xFF2
  4571                           intcon2	equ	0xFF1
  4572                           postinc0	equ	0xFEE
  4573                           wreg	equ	0xFE8
  4574                           indf1	equ	0xFE7
  4575                           postdec1	equ	0xFE5
  4576                           fsr1h	equ	0xFE2
  4577                           fsr1l	equ	0xFE1
  4578                           indf2	equ	0xFDF
  4579                           postinc2	equ	0xFDE
  4580                           postdec2	equ	0xFDD
  4581                           fsr2h	equ	0xFDA
  4582                           fsr2l	equ	0xFD9
  4583                           status	equ	0xFD8
  4584                           
  4585 ;; *************** function ___awmod *****************
  4586 ;; Defined at:
  4587 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  dividend        2    0[BANK1 ] int 
  4590 ;;  divisor         2    2[BANK1 ] int 
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;  sign            1    6[BANK1 ] unsigned char 
  4593 ;;  counter         1    5[BANK1 ] unsigned char 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  2    0[BANK1 ] int 
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0, prodl
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4603 ;;      Params:         0       0       4       0       0
  4604 ;;      Locals:         0       0       2       0       0
  4605 ;;      Temps:          0       0       1       0       0
  4606 ;;      Totals:         0       0       7       0       0
  4607 ;;Total ram usage:        7 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:   11
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_send_msg
  4614 ;;		_recv_msg
  4615 ;;		i1_send_msg
  4616 ;;		i2_send_msg
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text25
  4621  000FE8                     __ptext25:
  4622                           	opt stack 0
  4623  000FE8                     ___awmod:
  4624                           	opt stack 16
  4625                           
  4626                           ; BSR set to: 1
  4627                           ;incstack = 0
  4628  000FE8  0101               	movlb	1	; () banked
  4629  000FEA  6F8A               	movwf	??___awmod& (0+255),b
  4630  000FEC  0E00               	movlw	0
  4631  000FEE  0101               	movlb	1	; () banked
  4632  000FF0  0101               	movlb	1	; () banked
  4633  000FF2  6F8C               	movwf	___awmod@sign& (0+255),b
  4634  000FF4  0101               	movlb	1	; () banked
  4635  000FF6  518A               	movf	??___awmod& (0+255),w,b
  4636                           
  4637                           ; BSR set to: 1
  4638  000FF8  0101               	movlb	1	; () banked
  4639  000FFA  0101               	movlb	1	; () banked
  4640  000FFC  5187               	movf	(___awmod@dividend+1)& (0+255),w,b
  4641  000FFE  0A80               	xorlw	128
  4642  001000  6EF3               	movwf	prodl,c
  4643  001002  0E80               	movlw	128
  4644  001004  5CF3               	subwf	prodl,w,c
  4645  001006  0E00               	movlw	0
  4646  001008  B4D8               	btfsc	status,2,c
  4647  00100A  5D86               	subwf	___awmod@dividend& (0+255),w,b
  4648  00100C  B0D8               	btfsc	status,0,c
  4649  00100E  D00F               	goto	l4503
  4650                           
  4651                           ; BSR set to: 1
  4652  001010  0101               	movlb	1	; () banked
  4653  001012  0101               	movlb	1	; () banked
  4654  001014  6D86               	negf	___awmod@dividend& (0+255),b
  4655  001016  0101               	movlb	1	; () banked
  4656  001018  1F87               	comf	(___awmod@dividend+1)& (0+255),f,b
  4657  00101A  B0D8               	btfsc	status,0,c
  4658  00101C  2B87               	incf	(___awmod@dividend+1)& (0+255),f,b
  4659                           
  4660                           ; BSR set to: 1
  4661  00101E  0101               	movlb	1	; () banked
  4662  001020  6F8A               	movwf	??___awmod& (0+255),b
  4663  001022  0E01               	movlw	1
  4664  001024  0101               	movlb	1	; () banked
  4665  001026  0101               	movlb	1	; () banked
  4666  001028  6F8C               	movwf	___awmod@sign& (0+255),b
  4667  00102A  0101               	movlb	1	; () banked
  4668  00102C  518A               	movf	??___awmod& (0+255),w,b
  4669  00102E                     l4503:
  4670                           
  4671                           ; BSR set to: 1
  4672  00102E  0101               	movlb	1	; () banked
  4673  001030  0101               	movlb	1	; () banked
  4674  001032  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4675  001034  0A80               	xorlw	128
  4676  001036  6EF3               	movwf	prodl,c
  4677  001038  0E80               	movlw	128
  4678  00103A  5CF3               	subwf	prodl,w,c
  4679  00103C  0E00               	movlw	0
  4680  00103E  B4D8               	btfsc	status,2,c
  4681  001040  5D88               	subwf	___awmod@divisor& (0+255),w,b
  4682  001042  B0D8               	btfsc	status,0,c
  4683  001044  D007               	goto	l4507
  4684                           
  4685                           ; BSR set to: 1
  4686  001046  0101               	movlb	1	; () banked
  4687  001048  0101               	movlb	1	; () banked
  4688  00104A  6D88               	negf	___awmod@divisor& (0+255),b
  4689  00104C  0101               	movlb	1	; () banked
  4690  00104E  1F89               	comf	(___awmod@divisor+1)& (0+255),f,b
  4691  001050  B0D8               	btfsc	status,0,c
  4692  001052  2B89               	incf	(___awmod@divisor+1)& (0+255),f,b
  4693  001054                     l4507:
  4694                           
  4695                           ; BSR set to: 1
  4696  001054  0101               	movlb	1	; () banked
  4697  001056  0101               	movlb	1	; () banked
  4698  001058  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4699  00105A  1188               	iorwf	___awmod@divisor& (0+255),w,b
  4700  00105C  B4D8               	btfsc	status,2,c
  4701  00105E  D03A               	goto	l4523
  4702                           
  4703                           ; BSR set to: 1
  4704  001060  0101               	movlb	1	; () banked
  4705  001062  6F8A               	movwf	??___awmod& (0+255),b
  4706  001064  0E01               	movlw	1
  4707  001066  0101               	movlb	1	; () banked
  4708  001068  0101               	movlb	1	; () banked
  4709  00106A  6F8B               	movwf	___awmod@counter& (0+255),b
  4710  00106C  0101               	movlb	1	; () banked
  4711  00106E  518A               	movf	??___awmod& (0+255),w,b
  4712  001070  D009               	goto	l4513
  4713  001072                     l4511:
  4714                           
  4715                           ; BSR set to: 1
  4716  001072  0101               	movlb	1	; () banked
  4717  001074  0101               	movlb	1	; () banked
  4718  001076  0101               	movlb	1	; () banked
  4719  001078  90D8               	bcf	status,0,c
  4720  00107A  3788               	rlcf	___awmod@divisor& (0+255),f,b
  4721  00107C  3789               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4722  00107E  0101               	movlb	1	; () banked
  4723  001080  0101               	movlb	1	; () banked
  4724  001082  2B8B               	incf	___awmod@counter& (0+255),f,b
  4725  001084                     l4513:
  4726                           
  4727                           ; BSR set to: 1
  4728  001084  0101               	movlb	1	; () banked
  4729  001086  0101               	movlb	1	; () banked
  4730  001088  AF89               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4731  00108A  D7F3               	goto	l4511
  4732  00108C                     l4515:
  4733                           
  4734                           ; BSR set to: 1
  4735  00108C  0101               	movlb	1	; () banked
  4736  00108E  0101               	movlb	1	; () banked
  4737  001090  5188               	movf	___awmod@divisor& (0+255),w,b
  4738  001092  0101               	movlb	1	; () banked
  4739  001094  0101               	movlb	1	; () banked
  4740  001096  5D86               	subwf	___awmod@dividend& (0+255),w,b
  4741  001098  0101               	movlb	1	; () banked
  4742  00109A  0101               	movlb	1	; () banked
  4743  00109C  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4744  00109E  0101               	movlb	1	; () banked
  4745  0010A0  0101               	movlb	1	; () banked
  4746  0010A2  5987               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4747  0010A4  A0D8               	btfss	status,0,c
  4748  0010A6  D00C               	goto	l4519
  4749                           
  4750                           ; BSR set to: 1
  4751  0010A8  0101               	movlb	1	; () banked
  4752  0010AA  0101               	movlb	1	; () banked
  4753  0010AC  5188               	movf	___awmod@divisor& (0+255),w,b
  4754  0010AE  0101               	movlb	1	; () banked
  4755  0010B0  0101               	movlb	1	; () banked
  4756  0010B2  5F86               	subwf	___awmod@dividend& (0+255),f,b
  4757  0010B4  0101               	movlb	1	; () banked
  4758  0010B6  0101               	movlb	1	; () banked
  4759  0010B8  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4760  0010BA  0101               	movlb	1	; () banked
  4761  0010BC  0101               	movlb	1	; () banked
  4762  0010BE  5B87               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4763  0010C0                     l4519:
  4764                           
  4765                           ; BSR set to: 1
  4766  0010C0  0101               	movlb	1	; () banked
  4767  0010C2  0101               	movlb	1	; () banked
  4768  0010C4  0101               	movlb	1	; () banked
  4769  0010C6  90D8               	bcf	status,0,c
  4770  0010C8  3389               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4771  0010CA  3388               	rrcf	___awmod@divisor& (0+255),f,b
  4772                           
  4773                           ; BSR set to: 1
  4774  0010CC  0101               	movlb	1	; () banked
  4775  0010CE  0101               	movlb	1	; () banked
  4776  0010D0  2F8B               	decfsz	___awmod@counter& (0+255),f,b
  4777  0010D2  D7DC               	goto	l4515
  4778  0010D4                     l4523:
  4779                           
  4780                           ; BSR set to: 1
  4781  0010D4  0101               	movlb	1	; () banked
  4782  0010D6  0101               	movlb	1	; () banked
  4783  0010D8  518C               	movf	___awmod@sign& (0+255),w,b
  4784  0010DA  B4D8               	btfsc	status,2,c
  4785  0010DC  D007               	goto	l4527
  4786                           
  4787                           ; BSR set to: 1
  4788  0010DE  0101               	movlb	1	; () banked
  4789  0010E0  0101               	movlb	1	; () banked
  4790  0010E2  6D86               	negf	___awmod@dividend& (0+255),b
  4791  0010E4  0101               	movlb	1	; () banked
  4792  0010E6  1F87               	comf	(___awmod@dividend+1)& (0+255),f,b
  4793  0010E8  B0D8               	btfsc	status,0,c
  4794  0010EA  2B87               	incf	(___awmod@dividend+1)& (0+255),f,b
  4795  0010EC                     l4527:
  4796                           
  4797                           ; BSR set to: 1
  4798  0010EC  C186  F186         	movff	___awmod@dividend,?___awmod
  4799  0010F0  C187  F187         	movff	___awmod@dividend+1,?___awmod+1
  4800  0010F4  0012               	return	
  4801  0010F6                     __end_of___awmod:
  4802                           	opt stack 0
  4803                           tblptru	equ	0xFF8
  4804                           tblptrh	equ	0xFF7
  4805                           tblptrl	equ	0xFF6
  4806                           tablat	equ	0xFF5
  4807                           prodh	equ	0xFF4
  4808                           prodl	equ	0xFF3
  4809                           intcon	equ	0xFF2
  4810                           intcon2	equ	0xFF1
  4811                           postinc0	equ	0xFEE
  4812                           wreg	equ	0xFE8
  4813                           indf1	equ	0xFE7
  4814                           postdec1	equ	0xFE5
  4815                           fsr1h	equ	0xFE2
  4816                           fsr1l	equ	0xFE1
  4817                           indf2	equ	0xFDF
  4818                           postinc2	equ	0xFDE
  4819                           postdec2	equ	0xFDD
  4820                           fsr2h	equ	0xFDA
  4821                           fsr2l	equ	0xFD9
  4822                           status	equ	0xFD8
  4823                           
  4824 ;; *************** function _SetChanADC *****************
  4825 ;; Defined at:
  4826 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  channel         1    wreg     unsigned char 
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;  channel         1    1[BANK1 ] unsigned char 
  4831 ;; Return value:  Size  Location     Type
  4832 ;;		None               void
  4833 ;; Registers used:
  4834 ;;		wreg, status,2, status,0
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4840 ;;      Params:         0       0       0       0       0
  4841 ;;      Locals:         0       0       1       0       0
  4842 ;;      Temps:          0       0       1       0       0
  4843 ;;      Totals:         0       0       2       0       0
  4844 ;;Total ram usage:        2 bytes
  4845 ;; Hardware stack levels used:    1
  4846 ;; Hardware stack levels required when called:   11
  4847 ;; This function calls:
  4848 ;;		Nothing
  4849 ;; This function is called by:
  4850 ;;		_main
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text26
  4855  002200                     __ptext26:
  4856                           	opt stack 0
  4857  002200                     _SetChanADC:
  4858                           	opt stack 19
  4859                           
  4860                           ; BSR set to: 1
  4861                           ;incstack = 0
  4862                           ;SetChanADC@channel stored from wreg
  4863  002200  CFE8 F187          	movff	wreg,SetChanADC@channel
  4864  002204  CFC2 F186          	movff	4034,??_SetChanADC	;volatile
  4865  002208  0EC3               	movlw	195
  4866  00220A  0101               	movlb	1	; () banked
  4867  00220C  1786               	andwf	??_SetChanADC& (0+255),f,b
  4868  00220E  0101               	movlb	1	; () banked
  4869  002210  0101               	movlb	1	; () banked
  4870  002212  90D8               	bcf	status,0,c
  4871  002214  3187               	rrcf	SetChanADC@channel& (0+255),w,b
  4872  002216  0B3C               	andlw	60
  4873  002218  0101               	movlb	1	; () banked
  4874  00221A  1186               	iorwf	??_SetChanADC& (0+255),w,b
  4875  00221C  6EC2               	movwf	4034,c	;volatile
  4876                           
  4877                           ; BSR set to: 1
  4878  00221E  0012               	return	
  4879  002220                     __end_of_SetChanADC:
  4880                           	opt stack 0
  4881                           tblptru	equ	0xFF8
  4882                           tblptrh	equ	0xFF7
  4883                           tblptrl	equ	0xFF6
  4884                           tablat	equ	0xFF5
  4885                           prodh	equ	0xFF4
  4886                           prodl	equ	0xFF3
  4887                           intcon	equ	0xFF2
  4888                           intcon2	equ	0xFF1
  4889                           postinc0	equ	0xFEE
  4890                           wreg	equ	0xFE8
  4891                           indf1	equ	0xFE7
  4892                           postdec1	equ	0xFE5
  4893                           fsr1h	equ	0xFE2
  4894                           fsr1l	equ	0xFE1
  4895                           indf2	equ	0xFDF
  4896                           postinc2	equ	0xFDE
  4897                           postdec2	equ	0xFDD
  4898                           fsr2h	equ	0xFDA
  4899                           fsr2l	equ	0xFD9
  4900                           status	equ	0xFD8
  4901                           
  4902 ;; *************** function _OpenUSART *****************
  4903 ;; Defined at:
  4904 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  config          1    wreg     unsigned char 
  4907 ;;  spbrg           2    0[BANK1 ] unsigned int 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;  config          1    5[BANK1 ] unsigned char 
  4910 ;; Return value:  Size  Location     Type
  4911 ;;		None               void
  4912 ;; Registers used:
  4913 ;;		wreg, status,2
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4919 ;;      Params:         0       0       2       0       0
  4920 ;;      Locals:         0       0       1       0       0
  4921 ;;      Temps:          0       0       3       0       0
  4922 ;;      Totals:         0       0       6       0       0
  4923 ;;Total ram usage:        6 bytes
  4924 ;; Hardware stack levels used:    1
  4925 ;; Hardware stack levels required when called:   11
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_main
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text27
  4934  001804                     __ptext27:
  4935                           	opt stack 0
  4936  001804                     _OpenUSART:
  4937                           	opt stack 19
  4938                           
  4939                           ; BSR set to: 1
  4940                           ;incstack = 0
  4941                           ;OpenUSART@config stored from wreg
  4942  001804  CFE8 F18B          	movff	wreg,OpenUSART@config
  4943  001808  0E00               	movlw	0
  4944  00180A  6EAC               	movwf	4012,c	;volatile
  4945  00180C  0E00               	movlw	0
  4946  00180E  6EAB               	movwf	4011,c	;volatile
  4947  001810  0101               	movlb	1	; () banked
  4948  001812  0101               	movlb	1	; () banked
  4949  001814  B18B               	btfsc	OpenUSART@config& (0+255),0,b
  4950                           
  4951                           ; BSR set to: 1
  4952  001816  88AC               	bsf	4012,4,c	;volatile
  4953                           
  4954                           ; BSR set to: 1
  4955                           
  4956                           ; BSR set to: 1
  4957  001818  0101               	movlb	1	; () banked
  4958  00181A  0101               	movlb	1	; () banked
  4959  00181C  A38B               	btfss	OpenUSART@config& (0+255),1,b
  4960  00181E  D002               	goto	l4001
  4961                           
  4962                           ; BSR set to: 1
  4963  001820  8CAC               	bsf	4012,6,c	;volatile
  4964  001822  8CAB               	bsf	4011,6,c	;volatile
  4965  001824                     l4001:
  4966                           
  4967                           ; BSR set to: 1
  4968  001824  0101               	movlb	1	; () banked
  4969  001826  0101               	movlb	1	; () banked
  4970  001828  B58B               	btfsc	OpenUSART@config& (0+255),2,b
  4971                           
  4972                           ; BSR set to: 1
  4973  00182A  8EAC               	bsf	4012,7,c	;volatile
  4974                           
  4975                           ; BSR set to: 1
  4976                           
  4977                           ; BSR set to: 1
  4978  00182C  0101               	movlb	1	; () banked
  4979  00182E  0101               	movlb	1	; () banked
  4980  001830  A78B               	btfss	OpenUSART@config& (0+255),3,b
  4981  001832  D002               	goto	l630
  4982                           
  4983                           ; BSR set to: 1
  4984  001834  88AB               	bsf	4011,4,c	;volatile
  4985  001836  D001               	goto	l4009
  4986  001838                     l630:
  4987                           
  4988                           ; BSR set to: 1
  4989  001838  8AAB               	bsf	4011,5,c	;volatile
  4990  00183A                     l4009:
  4991                           
  4992                           ; BSR set to: 1
  4993  00183A  0101               	movlb	1	; () banked
  4994  00183C  0101               	movlb	1	; () banked
  4995  00183E  B98B               	btfsc	OpenUSART@config& (0+255),4,b
  4996                           
  4997                           ; BSR set to: 1
  4998  001840  84AC               	bsf	4012,2,c	;volatile
  4999                           
  5000                           ; BSR set to: 1
  5001  001842  989E               	bcf	3998,4,c	;volatile
  5002                           
  5003                           ; BSR set to: 1
  5004  001844  0101               	movlb	1	; () banked
  5005  001846  0101               	movlb	1	; () banked
  5006  001848  BB8B               	btfsc	OpenUSART@config& (0+255),5,b
  5007                           
  5008                           ; BSR set to: 1
  5009  00184A  86AB               	bsf	4011,3,c	;volatile
  5010                           
  5011                           ; BSR set to: 1
  5012                           
  5013                           ; BSR set to: 1
  5014  00184C  0101               	movlb	1	; () banked
  5015  00184E  0101               	movlb	1	; () banked
  5016  001850  AD8B               	btfss	OpenUSART@config& (0+255),6,b
  5017  001852  D002               	goto	l634
  5018                           
  5019                           ; BSR set to: 1
  5020  001854  8A9D               	bsf	3997,5,c	;volatile
  5021  001856  D001               	goto	l635
  5022  001858                     l634:
  5023                           
  5024                           ; BSR set to: 1
  5025  001858  9A9D               	bcf	3997,5,c	;volatile
  5026  00185A                     l635:
  5027                           
  5028                           ; BSR set to: 1
  5029  00185A  9A9E               	bcf	3998,5,c	;volatile
  5030                           
  5031                           ; BSR set to: 1
  5032  00185C  0101               	movlb	1	; () banked
  5033  00185E  0101               	movlb	1	; () banked
  5034  001860  AF8B               	btfss	OpenUSART@config& (0+255),7,b
  5035  001862  D002               	goto	l636
  5036                           
  5037                           ; BSR set to: 1
  5038  001864  889D               	bsf	3997,4,c	;volatile
  5039  001866  D001               	goto	l637
  5040  001868                     l636:
  5041                           
  5042                           ; BSR set to: 1
  5043  001868  989D               	bcf	3997,4,c	;volatile
  5044  00186A                     l637:
  5045                           
  5046                           ; BSR set to: 1
  5047  00186A  C186  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5048                           
  5049                           ; BSR set to: 1
  5050  00186E  0101               	movlb	1	; () banked
  5051  001870  C187  F188         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5052  001874  C188  F189         	movff	??_OpenUSART,??_OpenUSART+1
  5053  001878  0101               	movlb	1	; () banked
  5054  00187A  6B8A               	clrf	(??_OpenUSART+2)& (0+255),b
  5055  00187C  0101               	movlb	1	; () banked
  5056  00187E  5189               	movf	(??_OpenUSART+1)& (0+255),w,b
  5057  001880  6EB0               	movwf	4016,c	;volatile
  5058                           
  5059                           ; BSR set to: 1
  5060  001882  8AAC               	bsf	4012,5,c	;volatile
  5061                           
  5062                           ; BSR set to: 1
  5063  001884  8EAB               	bsf	4011,7,c	;volatile
  5064                           
  5065                           ; BSR set to: 1
  5066  001886  9C94               	bcf	3988,6,c	;volatile
  5067                           
  5068                           ; BSR set to: 1
  5069  001888  8E94               	bsf	3988,7,c	;volatile
  5070                           
  5071                           ; BSR set to: 1
  5072  00188A  A8AC               	btfss	4012,4,c	;volatile
  5073  00188C  0012               	return	
  5074                           
  5075                           ; BSR set to: 1
  5076  00188E  BEAC               	btfsc	4012,7,c	;volatile
  5077  001890  0012               	return	
  5078                           
  5079                           ; BSR set to: 1
  5080  001892  8C94               	bsf	3988,6,c	;volatile
  5081  001894  0012               	return	
  5082  001896                     __end_of_OpenUSART:
  5083                           	opt stack 0
  5084                           tblptru	equ	0xFF8
  5085                           tblptrh	equ	0xFF7
  5086                           tblptrl	equ	0xFF6
  5087                           tablat	equ	0xFF5
  5088                           prodh	equ	0xFF4
  5089                           prodl	equ	0xFF3
  5090                           intcon	equ	0xFF2
  5091                           intcon2	equ	0xFF1
  5092                           postinc0	equ	0xFEE
  5093                           wreg	equ	0xFE8
  5094                           indf1	equ	0xFE7
  5095                           postdec1	equ	0xFE5
  5096                           fsr1h	equ	0xFE2
  5097                           fsr1l	equ	0xFE1
  5098                           indf2	equ	0xFDF
  5099                           postinc2	equ	0xFDE
  5100                           postdec2	equ	0xFDD
  5101                           fsr2h	equ	0xFDA
  5102                           fsr2l	equ	0xFD9
  5103                           status	equ	0xFD8
  5104                           
  5105 ;; *************** function _OpenTimer1 *****************
  5106 ;; Defined at:
  5107 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;  config          1    wreg     unsigned char 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;  config          1    0[BANK1 ] unsigned char 
  5112 ;; Return value:  Size  Location     Type
  5113 ;;		None               void
  5114 ;; Registers used:
  5115 ;;		wreg, status,2, status,0
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5121 ;;      Params:         0       0       0       0       0
  5122 ;;      Locals:         0       0       1       0       0
  5123 ;;      Temps:          0       0       0       0       0
  5124 ;;      Totals:         0       0       1       0       0
  5125 ;;Total ram usage:        1 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:   11
  5128 ;; This function calls:
  5129 ;;		Nothing
  5130 ;; This function is called by:
  5131 ;;		_main
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           	psect	text28
  5136  002056                     __ptext28:
  5137                           	opt stack 0
  5138  002056                     _OpenTimer1:
  5139                           	opt stack 19
  5140                           
  5141                           ; BSR set to: 1
  5142                           ;incstack = 0
  5143                           ;OpenTimer1@config stored from wreg
  5144  002056  CFE8 F186          	movff	wreg,OpenTimer1@config
  5145  00205A  0101               	movlb	1	; () banked
  5146  00205C  0101               	movlb	1	; () banked
  5147  00205E  5186               	movf	OpenTimer1@config& (0+255),w,b
  5148  002060  0B7E               	andlw	126
  5149  002062  6ECD               	movwf	4045,c	;volatile
  5150                           
  5151                           ; BSR set to: 1
  5152  002064  0101               	movlb	1	; () banked
  5153  002066  0101               	movlb	1	; () banked
  5154  002068  AD86               	btfss	OpenTimer1@config& (0+255),6,b
  5155  00206A  D002               	goto	l593
  5156                           
  5157                           ; BSR set to: 1
  5158  00206C  8ECD               	bsf	4045,7,c	;volatile
  5159  00206E  D001               	goto	l3961
  5160  002070                     l593:
  5161                           
  5162                           ; BSR set to: 1
  5163  002070  9ECD               	bcf	4045,7,c	;volatile
  5164  002072                     l3961:
  5165                           
  5166                           ; BSR set to: 1
  5167  002072  0E00               	movlw	0
  5168  002074  6ECF               	movwf	4047,c	;volatile
  5169  002076  0E00               	movlw	0
  5170  002078  6ECE               	movwf	4046,c	;volatile
  5171                           
  5172                           ; BSR set to: 1
  5173  00207A  909E               	bcf	3998,0,c	;volatile
  5174                           
  5175                           ; BSR set to: 1
  5176  00207C  0101               	movlb	1	; () banked
  5177  00207E  0101               	movlb	1	; () banked
  5178  002080  AF86               	btfss	OpenTimer1@config& (0+255),7,b
  5179  002082  D002               	goto	l595
  5180                           
  5181                           ; BSR set to: 1
  5182  002084  809D               	bsf	3997,0,c	;volatile
  5183  002086  D001               	goto	l596
  5184  002088                     l595:
  5185                           
  5186                           ; BSR set to: 1
  5187  002088  909D               	bcf	3997,0,c	;volatile
  5188  00208A                     l596:
  5189                           
  5190                           ; BSR set to: 1
  5191  00208A  80CD               	bsf	4045,0,c	;volatile
  5192                           
  5193                           ; BSR set to: 1
  5194  00208C  0012               	return	
  5195  00208E                     __end_of_OpenTimer1:
  5196                           	opt stack 0
  5197                           tblptru	equ	0xFF8
  5198                           tblptrh	equ	0xFF7
  5199                           tblptrl	equ	0xFF6
  5200                           tablat	equ	0xFF5
  5201                           prodh	equ	0xFF4
  5202                           prodl	equ	0xFF3
  5203                           intcon	equ	0xFF2
  5204                           intcon2	equ	0xFF1
  5205                           postinc0	equ	0xFEE
  5206                           wreg	equ	0xFE8
  5207                           indf1	equ	0xFE7
  5208                           postdec1	equ	0xFE5
  5209                           fsr1h	equ	0xFE2
  5210                           fsr1l	equ	0xFE1
  5211                           indf2	equ	0xFDF
  5212                           postinc2	equ	0xFDE
  5213                           postdec2	equ	0xFDD
  5214                           fsr2h	equ	0xFDA
  5215                           fsr2l	equ	0xFD9
  5216                           status	equ	0xFD8
  5217                           
  5218 ;; *************** function _OpenTimer0 *****************
  5219 ;; Defined at:
  5220 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  config          1    wreg     unsigned char 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  config          1    0[BANK1 ] unsigned char 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;		None               void
  5227 ;; Registers used:
  5228 ;;		wreg, status,2, status,0
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5234 ;;      Params:         0       0       0       0       0
  5235 ;;      Locals:         0       0       1       0       0
  5236 ;;      Temps:          0       0       0       0       0
  5237 ;;      Totals:         0       0       1       0       0
  5238 ;;Total ram usage:        1 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:   11
  5241 ;; This function calls:
  5242 ;;		Nothing
  5243 ;; This function is called by:
  5244 ;;		_main
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           	psect	text29
  5249  002166                     __ptext29:
  5250                           	opt stack 0
  5251  002166                     _OpenTimer0:
  5252                           	opt stack 19
  5253                           
  5254                           ; BSR set to: 1
  5255                           ;incstack = 0
  5256                           ;OpenTimer0@config stored from wreg
  5257  002166  CFE8 F186          	movff	wreg,OpenTimer0@config
  5258  00216A  0101               	movlb	1	; () banked
  5259  00216C  0101               	movlb	1	; () banked
  5260  00216E  5186               	movf	OpenTimer0@config& (0+255),w,b
  5261  002170  0B7F               	andlw	127
  5262  002172  6ED5               	movwf	4053,c	;volatile
  5263                           
  5264                           ; BSR set to: 1
  5265  002174  0E00               	movlw	0
  5266  002176  6ED7               	movwf	4055,c	;volatile
  5267                           
  5268                           ; BSR set to: 1
  5269  002178  0E00               	movlw	0
  5270  00217A  6ED6               	movwf	4054,c	;volatile
  5271                           
  5272                           ; BSR set to: 1
  5273  00217C  94F2               	bcf	intcon,2,c	;volatile
  5274                           
  5275                           ; BSR set to: 1
  5276  00217E  0101               	movlb	1	; () banked
  5277  002180  0101               	movlb	1	; () banked
  5278  002182  AF86               	btfss	OpenTimer0@config& (0+255),7,b
  5279  002184  D002               	goto	l569
  5280                           
  5281                           ; BSR set to: 1
  5282  002186  8AF2               	bsf	intcon,5,c	;volatile
  5283  002188  D001               	goto	l570
  5284  00218A                     l569:
  5285                           
  5286                           ; BSR set to: 1
  5287  00218A  9AF2               	bcf	intcon,5,c	;volatile
  5288  00218C                     l570:
  5289                           
  5290                           ; BSR set to: 1
  5291  00218C  8ED5               	bsf	4053,7,c	;volatile
  5292                           
  5293                           ; BSR set to: 1
  5294  00218E  0012               	return	
  5295  002190                     __end_of_OpenTimer0:
  5296                           	opt stack 0
  5297                           tblptru	equ	0xFF8
  5298                           tblptrh	equ	0xFF7
  5299                           tblptrl	equ	0xFF6
  5300                           tablat	equ	0xFF5
  5301                           prodh	equ	0xFF4
  5302                           prodl	equ	0xFF3
  5303                           intcon	equ	0xFF2
  5304                           intcon2	equ	0xFF1
  5305                           postinc0	equ	0xFEE
  5306                           wreg	equ	0xFE8
  5307                           indf1	equ	0xFE7
  5308                           postdec1	equ	0xFE5
  5309                           fsr1h	equ	0xFE2
  5310                           fsr1l	equ	0xFE1
  5311                           indf2	equ	0xFDF
  5312                           postinc2	equ	0xFDE
  5313                           postdec2	equ	0xFDD
  5314                           fsr2h	equ	0xFDA
  5315                           fsr2l	equ	0xFD9
  5316                           status	equ	0xFD8
  5317                           
  5318 ;; *************** function _OpenADC *****************
  5319 ;; Defined at:
  5320 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  config          1    wreg     unsigned char 
  5323 ;;  config2         1    0[BANK1 ] unsigned char 
  5324 ;;  portconfig      1    1[BANK1 ] unsigned char 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;  config          1    4[BANK1 ] unsigned char 
  5327 ;; Return value:  Size  Location     Type
  5328 ;;		None               void
  5329 ;; Registers used:
  5330 ;;		wreg, status,2, status,0
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5336 ;;      Params:         0       0       2       0       0
  5337 ;;      Locals:         0       0       1       0       0
  5338 ;;      Temps:          0       0       2       0       0
  5339 ;;      Totals:         0       0       5       0       0
  5340 ;;Total ram usage:        5 bytes
  5341 ;; Hardware stack levels used:    1
  5342 ;; Hardware stack levels required when called:   11
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_main
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text30
  5351  001A30                     __ptext30:
  5352                           	opt stack 0
  5353  001A30                     _OpenADC:
  5354                           	opt stack 19
  5355                           
  5356                           ; BSR set to: 1
  5357                           ;incstack = 0
  5358                           ;OpenADC@config stored from wreg
  5359  001A30  CFE8 F18A          	movff	wreg,OpenADC@config
  5360  001A34  0E00               	movlw	0
  5361  001A36  6EC2               	movwf	4034,c	;volatile
  5362  001A38  0E00               	movlw	0
  5363  001A3A  6EC0               	movwf	4032,c	;volatile
  5364  001A3C  0101               	movlb	1	; () banked
  5365  001A3E  0101               	movlb	1	; () banked
  5366  001A40  90D8               	bcf	status,0,c
  5367  001A42  3186               	rrcf	OpenADC@config2& (0+255),w,b
  5368  001A44  0B3C               	andlw	60
  5369  001A46  6EC2               	movwf	4034,c	;volatile
  5370                           
  5371                           ; BSR set to: 1
  5372  001A48  C186  F188         	movff	OpenADC@config2,??_OpenADC
  5373  001A4C  0101               	movlb	1	; () banked
  5374  001A4E  3B88               	swapf	??_OpenADC& (0+255),f,b
  5375  001A50  0EF0               	movlw	240
  5376  001A52  1788               	andwf	??_OpenADC& (0+255),f,b
  5377  001A54  0E30               	movlw	48
  5378  001A56  0101               	movlb	1	; () banked
  5379  001A58  1788               	andwf	??_OpenADC& (0+255),f,b
  5380  001A5A  0101               	movlb	1	; () banked
  5381  001A5C  0101               	movlb	1	; () banked
  5382  001A5E  5187               	movf	OpenADC@portconfig& (0+255),w,b
  5383  001A60  0B0F               	andlw	15
  5384  001A62  0101               	movlb	1	; () banked
  5385  001A64  1188               	iorwf	??_OpenADC& (0+255),w,b
  5386  001A66  6EC1               	movwf	4033,c	;volatile
  5387                           
  5388                           ; BSR set to: 1
  5389  001A68  C18A  F188         	movff	OpenADC@config,??_OpenADC
  5390  001A6C  0101               	movlb	1	; () banked
  5391  001A6E  90D8               	bcf	status,0,c
  5392  001A70  3788               	rlcf	??_OpenADC& (0+255),f,b
  5393  001A72  0101               	movlb	1	; () banked
  5394  001A74  90D8               	bcf	status,0,c
  5395  001A76  3788               	rlcf	??_OpenADC& (0+255),f,b
  5396  001A78  0E38               	movlw	56
  5397  001A7A  0101               	movlb	1	; () banked
  5398  001A7C  1788               	andwf	??_OpenADC& (0+255),f,b
  5399  001A7E  C18A  F189         	movff	OpenADC@config,??_OpenADC+1
  5400  001A82  0101               	movlb	1	; () banked
  5401  001A84  3B89               	swapf	(??_OpenADC+1)& (0+255),f,b
  5402  001A86  0E0F               	movlw	15
  5403  001A88  1789               	andwf	(??_OpenADC+1)& (0+255),f,b
  5404  001A8A  0E07               	movlw	7
  5405  001A8C  0101               	movlb	1	; () banked
  5406  001A8E  1789               	andwf	(??_OpenADC+1)& (0+255),f,b
  5407  001A90  0101               	movlb	1	; () banked
  5408  001A92  0101               	movlb	1	; () banked
  5409  001A94  518A               	movf	OpenADC@config& (0+255),w,b
  5410  001A96  0B80               	andlw	128
  5411  001A98  0101               	movlb	1	; () banked
  5412  001A9A  1189               	iorwf	(??_OpenADC+1)& (0+255),w,b
  5413  001A9C  0101               	movlb	1	; () banked
  5414  001A9E  1188               	iorwf	??_OpenADC& (0+255),w,b
  5415  001AA0  6EC0               	movwf	4032,c	;volatile
  5416                           
  5417                           ; BSR set to: 1
  5418  001AA2  0101               	movlb	1	; () banked
  5419  001AA4  0101               	movlb	1	; () banked
  5420  001AA6  AF86               	btfss	OpenADC@config2& (0+255),7,b
  5421  001AA8  D003               	goto	l550
  5422                           
  5423                           ; BSR set to: 1
  5424  001AAA  9C9E               	bcf	3998,6,c	;volatile
  5425  001AAC  8C9D               	bsf	3997,6,c	;volatile
  5426  001AAE  8CF2               	bsf	intcon,6,c	;volatile
  5427  001AB0                     l550:
  5428                           
  5429                           ; BSR set to: 1
  5430  001AB0  80C2               	bsf	4034,0,c	;volatile
  5431                           
  5432                           ; BSR set to: 1
  5433  001AB2  0012               	return	
  5434  001AB4                     __end_of_OpenADC:
  5435                           	opt stack 0
  5436                           tblptru	equ	0xFF8
  5437                           tblptrh	equ	0xFF7
  5438                           tblptrl	equ	0xFF6
  5439                           tablat	equ	0xFF5
  5440                           prodh	equ	0xFF4
  5441                           prodl	equ	0xFF3
  5442                           intcon	equ	0xFF2
  5443                           intcon2	equ	0xFF1
  5444                           postinc0	equ	0xFEE
  5445                           wreg	equ	0xFE8
  5446                           indf1	equ	0xFE7
  5447                           postdec1	equ	0xFE5
  5448                           fsr1h	equ	0xFE2
  5449                           fsr1l	equ	0xFE1
  5450                           indf2	equ	0xFDF
  5451                           postinc2	equ	0xFDE
  5452                           postdec2	equ	0xFDD
  5453                           fsr2h	equ	0xFDA
  5454                           fsr2l	equ	0xFD9
  5455                           status	equ	0xFD8
  5456                           
  5457 ;; *************** function _InterruptHandlerLow *****************
  5458 ;; Defined at:
  5459 ;;		line 128 in file "../src/interrupts.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;		None
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;		None
  5464 ;; Return value:  Size  Location     Type
  5465 ;;		None               void
  5466 ;; Registers used:
  5467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5468 ;; Tracked objects:
  5469 ;;		On entry : 0/0
  5470 ;;		On exit  : 0/0
  5471 ;;		Unchanged: 0/0
  5472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5473 ;;      Params:         0       0       0       0       0
  5474 ;;      Locals:         0       0       0       0       0
  5475 ;;      Temps:         17       0       0       0       0
  5476 ;;      Totals:        17       0       0       0       0
  5477 ;;Total ram usage:       17 bytes
  5478 ;; Hardware stack levels used:    1
  5479 ;; Hardware stack levels required when called:   10
  5480 ;; This function calls:
  5481 ;;		_adc_int_handler
  5482 ;;		_timer1_int_handler
  5483 ;;		_uart_recv_int_handler
  5484 ;;		_uart_trans_int_handler
  5485 ;; This function is called by:
  5486 ;;		Interrupt level 1
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	intcodelo
  5491  000018                     __pintcodelo:
  5492                           	opt stack 0
  5493  000018                     _InterruptHandlerLow:
  5494                           	opt stack 16
  5495                           
  5496                           ; BSR set to: 1
  5497                           ;incstack = 0
  5498  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  5499  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  5500  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  5501  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  5502  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  5503  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  5504  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  5505  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  5506  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  5507  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  5508  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  5509  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  5510  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  5511  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  5512  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  5513  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  5514  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  5515                           
  5516                           ;interrupts.c: 130: if(PIR1bits.ADIF){
  5517  00005C  AC9E               	btfss	3998,6,c	;volatile
  5518  00005E  D003               	goto	i1l4715
  5519                           
  5520                           ;interrupts.c: 132: PIR1bits.ADIF = 0;
  5521  000060  9C9E               	bcf	3998,6,c	;volatile
  5522                           
  5523                           ;interrupts.c: 133: adc_int_handler();
  5524  000062  ECEF  F010         	call	_adc_int_handler	;wreg free
  5525  000066                     i1l4715:
  5526                           
  5527                           ;interrupts.c: 134: }
  5528                           ;interrupts.c: 137: if (PIR1bits.TMR1IF) {
  5529  000066  A09E               	btfss	3998,0,c	;volatile
  5530  000068  D003               	goto	i1l4721
  5531                           
  5532                           ;interrupts.c: 138: PIR1bits.TMR1IF = 0;
  5533  00006A  909E               	bcf	3998,0,c	;volatile
  5534                           
  5535                           ;interrupts.c: 139: timer1_int_handler();
  5536  00006C  EC6F  F011         	call	_timer1_int_handler	;wreg free
  5537  000070                     i1l4721:
  5538                           
  5539                           ;interrupts.c: 141: }
  5540                           ;interrupts.c: 143: if (PIR1bits.TXIF) {
  5541  000070  B89E               	btfsc	3998,4,c	;volatile
  5542                           
  5543                           ;interrupts.c: 145: uart_trans_int_handler();
  5544  000072  ECB0  F00E         	call	_uart_trans_int_handler	;wreg free
  5545                           
  5546                           ;interrupts.c: 146: }
  5547                           ;interrupts.c: 148: if (PIR1bits.RCIF) {
  5548  000076  AA9E               	btfss	3998,5,c	;volatile
  5549  000078  D003               	goto	i1l67
  5550                           
  5551                           ;interrupts.c: 149: PIR1bits.RCIF = 0;
  5552  00007A  9A9E               	bcf	3998,5,c	;volatile
  5553                           
  5554                           ;interrupts.c: 151: uart_recv_int_handler();
  5555  00007C  ECEF  F009         	call	_uart_recv_int_handler	;wreg free
  5556  000080                     i1l67:
  5557  000080  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5558  000084  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5559  000088  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5560  00008C  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5561  000090  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5562  000094  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5563  000098  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5564  00009C  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5565  0000A0  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5566  0000A4  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5567  0000A8  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5568  0000AC  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5569  0000B0  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5570  0000B4  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5571  0000B8  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5572  0000BC  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5573  0000C0  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5574  0000C4  0010               	retfie	
  5575  0000C6                     __end_of_InterruptHandlerLow:
  5576                           	opt stack 0
  5577                           pclatu	equ	0xFFB
  5578                           pclath	equ	0xFFA
  5579                           tblptru	equ	0xFF8
  5580                           tblptrh	equ	0xFF7
  5581                           tblptrl	equ	0xFF6
  5582                           tablat	equ	0xFF5
  5583                           prodh	equ	0xFF4
  5584                           prodl	equ	0xFF3
  5585                           intcon	equ	0xFF2
  5586                           intcon2	equ	0xFF1
  5587                           postinc0	equ	0xFEE
  5588                           fsr0h	equ	0xFEA
  5589                           fsr0l	equ	0xFE9
  5590                           wreg	equ	0xFE8
  5591                           indf1	equ	0xFE7
  5592                           postdec1	equ	0xFE5
  5593                           fsr1h	equ	0xFE2
  5594                           fsr1l	equ	0xFE1
  5595                           bsr	equ	0xFE0
  5596                           indf2	equ	0xFDF
  5597                           postinc2	equ	0xFDE
  5598                           postdec2	equ	0xFDD
  5599                           fsr2h	equ	0xFDA
  5600                           fsr2l	equ	0xFD9
  5601                           status	equ	0xFD8
  5602                           
  5603 ;; *************** function _uart_trans_int_handler *****************
  5604 ;; Defined at:
  5605 ;;		line 73 in file "../src/my_uart.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;		None
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;		None               void
  5612 ;; Registers used:
  5613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5619 ;;      Params:         0       0       0       0       0
  5620 ;;      Locals:         0       0       0       0       0
  5621 ;;      Temps:          1       0       0       0       0
  5622 ;;      Totals:         1       0       0       0       0
  5623 ;;Total ram usage:        1 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:    6
  5626 ;; This function calls:
  5627 ;;		Nothing
  5628 ;; This function is called by:
  5629 ;;		_InterruptHandlerLow
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text32
  5634  001D60                     __ptext32:
  5635                           	opt stack 0
  5636  001D60                     _uart_trans_int_handler:
  5637                           	opt stack 19
  5638                           
  5639                           ;my_uart.c: 75: if(TXSTAbits.TRMT){
  5640                           
  5641                           ;incstack = 0
  5642  001D60  A2AC               	btfss	4012,1,c	;volatile
  5643  001D62  0012               	return	
  5644                           
  5645                           ;my_uart.c: 76: if(uc_ptr->txBufind < uc_ptr->txBuflen){
  5646  001D64  EE20 F00C          	lfsr	2,12
  5647  001D68  5057               	movf	_uc_ptr,w,c
  5648  001D6A  26D9               	addwf	fsr2l,f,c
  5649  001D6C  5058               	movf	_uc_ptr+1,w,c
  5650  001D6E  22DA               	addwfc	fsr2h,f,c
  5651  001D70  50DF               	movf	indf2,w,c
  5652  001D72  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5653  001D74  EE20 F00B          	lfsr	2,11
  5654  001D78  5057               	movf	_uc_ptr,w,c
  5655  001D7A  26D9               	addwf	fsr2l,f,c
  5656  001D7C  5058               	movf	_uc_ptr+1,w,c
  5657  001D7E  22DA               	addwfc	fsr2h,f,c
  5658  001D80  50DF               	movf	indf2,w,c
  5659  001D82  5C01               	subwf	??_uart_trans_int_handler,w,c
  5660  001D84  B0D8               	btfsc	status,0,c
  5661  001D86  D01E               	goto	i1l456
  5662                           
  5663                           ;my_uart.c: 77: TXREG = uc_ptr->txBuff[uc_ptr->txBufind];
  5664  001D88  EE20 F00C          	lfsr	2,12
  5665  001D8C  5057               	movf	_uc_ptr,w,c
  5666  001D8E  26D9               	addwf	fsr2l,f,c
  5667  001D90  5058               	movf	_uc_ptr+1,w,c
  5668  001D92  22DA               	addwfc	fsr2h,f,c
  5669  001D94  50DF               	movf	indf2,w,c
  5670  001D96  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5671  001D98  5001               	movf	??_uart_trans_int_handler,w,c
  5672  001D9A  0D01               	mullw	1
  5673  001D9C  0E06               	movlw	6
  5674  001D9E  26F3               	addwf	prodl,f,c
  5675  001DA0  0E00               	movlw	0
  5676  001DA2  22F4               	addwfc	prodh,f,c
  5677  001DA4  50F3               	movf	prodl,w,c
  5678  001DA6  2457               	addwf	_uc_ptr,w,c
  5679  001DA8  6ED9               	movwf	fsr2l,c
  5680  001DAA  50F4               	movf	prodh,w,c
  5681  001DAC  2058               	addwfc	_uc_ptr+1,w,c
  5682  001DAE  6EDA               	movwf	fsr2h,c
  5683  001DB0  50DF               	movf	indf2,w,c
  5684  001DB2  6EAD               	movwf	4013,c	;volatile
  5685                           
  5686                           ;my_uart.c: 79: uc_ptr->txBufind++;
  5687  001DB4  EE20 F00C          	lfsr	2,12
  5688  001DB8  5057               	movf	_uc_ptr,w,c
  5689  001DBA  26D9               	addwf	fsr2l,f,c
  5690  001DBC  5058               	movf	_uc_ptr+1,w,c
  5691  001DBE  22DA               	addwfc	fsr2h,f,c
  5692  001DC0  2ADF               	incf	indf2,f,c
  5693                           
  5694                           ;my_uart.c: 80: } else
  5695  001DC2  0012               	return	
  5696  001DC4                     i1l456:
  5697                           
  5698                           ;my_uart.c: 81: PIE1bits.TX1IE = 0;
  5699  001DC4  989D               	bcf	3997,4,c	;volatile
  5700  001DC6  0012               	return	
  5701  001DC8                     __end_of_uart_trans_int_handler:
  5702                           	opt stack 0
  5703                           pclatu	equ	0xFFB
  5704                           pclath	equ	0xFFA
  5705                           tblptru	equ	0xFF8
  5706                           tblptrh	equ	0xFF7
  5707                           tblptrl	equ	0xFF6
  5708                           tablat	equ	0xFF5
  5709                           prodh	equ	0xFF4
  5710                           prodl	equ	0xFF3
  5711                           intcon	equ	0xFF2
  5712                           intcon2	equ	0xFF1
  5713                           postinc0	equ	0xFEE
  5714                           fsr0h	equ	0xFEA
  5715                           fsr0l	equ	0xFE9
  5716                           wreg	equ	0xFE8
  5717                           indf1	equ	0xFE7
  5718                           postdec1	equ	0xFE5
  5719                           fsr1h	equ	0xFE2
  5720                           fsr1l	equ	0xFE1
  5721                           bsr	equ	0xFE0
  5722                           indf2	equ	0xFDF
  5723                           postinc2	equ	0xFDE
  5724                           postdec2	equ	0xFDD
  5725                           fsr2h	equ	0xFDA
  5726                           fsr2l	equ	0xFD9
  5727                           status	equ	0xFD8
  5728                           
  5729 ;; *************** function _uart_recv_int_handler *****************
  5730 ;; Defined at:
  5731 ;;		line 11 in file "../src/my_uart.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;		None
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;		None
  5736 ;; Return value:  Size  Location     Type
  5737 ;;		None               void
  5738 ;; Registers used:
  5739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5745 ;;      Params:         0       0       0       0       0
  5746 ;;      Locals:         0       0       0       0       0
  5747 ;;      Temps:          1       0       0       0       0
  5748 ;;      Totals:         1       0       0       0       0
  5749 ;;Total ram usage:        1 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; Hardware stack levels required when called:    9
  5752 ;; This function calls:
  5753 ;;		_ReadUSART
  5754 ;;		_ToMainLow_sendmsg
  5755 ;; This function is called by:
  5756 ;;		_InterruptHandlerLow
  5757 ;; This function uses a non-reentrant model
  5758 ;;
  5759                           
  5760                           	psect	text33
  5761  0013DE                     __ptext33:
  5762                           	opt stack 0
  5763  0013DE                     _uart_recv_int_handler:
  5764                           	opt stack 16
  5765                           
  5766                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  5767                           
  5768                           ;incstack = 0
  5769  0013DE  AA9E               	btfss	3998,5,c	;volatile
  5770  0013E0  D04E               	goto	i1l4703
  5771                           
  5772                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5773  0013E2  EE20 F005          	lfsr	2,5
  5774  0013E6  5057               	movf	_uc_ptr,w,c
  5775  0013E8  26D9               	addwf	fsr2l,f,c
  5776  0013EA  5058               	movf	_uc_ptr+1,w,c
  5777  0013EC  22DA               	addwfc	fsr2h,f,c
  5778  0013EE  50DF               	movf	indf2,w,c
  5779  0013F0  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5780  0013F2  501B               	movf	??_uart_recv_int_handler,w,c
  5781  0013F4  0D01               	mullw	1
  5782  0013F6  50F3               	movf	prodl,w,c
  5783  0013F8  2457               	addwf	_uc_ptr,w,c
  5784  0013FA  6ED9               	movwf	fsr2l,c
  5785  0013FC  50F4               	movf	prodh,w,c
  5786  0013FE  2058               	addwfc	_uc_ptr+1,w,c
  5787  001400  6EDA               	movwf	fsr2h,c
  5788  001402  EC1F  F011         	call	_ReadUSART	;wreg free
  5789  001406  6EDF               	movwf	indf2,c
  5790                           
  5791                           ;my_uart.c: 25: uc_ptr->buflen++;
  5792  001408  EE20 F005          	lfsr	2,5
  5793  00140C  5057               	movf	_uc_ptr,w,c
  5794  00140E  26D9               	addwf	fsr2l,f,c
  5795  001410  5058               	movf	_uc_ptr+1,w,c
  5796  001412  22DA               	addwfc	fsr2h,f,c
  5797  001414  2ADF               	incf	indf2,f,c
  5798                           
  5799                           ;my_uart.c: 26: if(UART_timeout > 200){
  5800  001416  0EC9               	movlw	201
  5801  001418  5C49               	subwf	_UART_timeout,w,c
  5802  00141A  0E00               	movlw	0
  5803  00141C  584A               	subwfb	_UART_timeout+1,w,c
  5804  00141E  A0D8               	btfss	status,0,c
  5805  001420  D00C               	goto	i1l4697
  5806                           
  5807                           ;my_uart.c: 27: uc_ptr->buflen = 1;
  5808  001422  EE20 F005          	lfsr	2,5
  5809  001426  5057               	movf	_uc_ptr,w,c
  5810  001428  26D9               	addwf	fsr2l,f,c
  5811  00142A  5058               	movf	_uc_ptr+1,w,c
  5812  00142C  22DA               	addwfc	fsr2h,f,c
  5813  00142E  0E01               	movlw	1
  5814  001430  6EDF               	movwf	indf2,c
  5815                           
  5816                           ;my_uart.c: 28: UART_timeout = 0;
  5817  001432  0E00               	movlw	0
  5818  001434  6E4A               	movwf	_UART_timeout+1,c
  5819  001436  0E00               	movlw	0
  5820  001438  6E49               	movwf	_UART_timeout,c
  5821  00143A                     i1l4697:
  5822                           
  5823                           ;my_uart.c: 29: }
  5824                           ;my_uart.c: 32: if (uc_ptr->buflen == 5) {
  5825  00143A  EE20 F005          	lfsr	2,5
  5826  00143E  5057               	movf	_uc_ptr,w,c
  5827  001440  26D9               	addwf	fsr2l,f,c
  5828  001442  5058               	movf	_uc_ptr+1,w,c
  5829  001444  22DA               	addwfc	fsr2h,f,c
  5830  001446  0E05               	movlw	5
  5831  001448  62DF               	cpfseq	indf2,c
  5832  00144A  D019               	goto	i1l4703
  5833                           
  5834                           ;my_uart.c: 33: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5835  00144C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5836  00144E  0E1F               	movlw	31
  5837  001450  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5838  001452  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5839  001454  C058  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5840  001458  C057  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5841  00145C  EE20 F005          	lfsr	2,5
  5842  001460  5057               	movf	_uc_ptr,w,c
  5843  001462  26D9               	addwf	fsr2l,f,c
  5844  001464  5058               	movf	_uc_ptr+1,w,c
  5845  001466  22DA               	addwfc	fsr2h,f,c
  5846  001468  50DF               	movf	indf2,w,c
  5847  00146A  ECDC  F010         	call	_ToMainLow_sendmsg
  5848                           
  5849                           ;my_uart.c: 34: uc_ptr->buflen = 0;
  5850  00146E  EE20 F005          	lfsr	2,5
  5851  001472  5057               	movf	_uc_ptr,w,c
  5852  001474  26D9               	addwf	fsr2l,f,c
  5853  001476  5058               	movf	_uc_ptr+1,w,c
  5854  001478  22DA               	addwfc	fsr2h,f,c
  5855  00147A  0E00               	movlw	0
  5856  00147C  6EDF               	movwf	indf2,c
  5857  00147E                     i1l4703:
  5858                           
  5859                           ;my_uart.c: 35: }
  5860                           ;my_uart.c: 36: }
  5861                           ;my_uart.c: 43: if (USART_Status.OVERRUN_ERROR == 1) {
  5862  00147E  A64E               	btfss	_USART_Status,3,c
  5863  001480  0012               	return	
  5864                           
  5865                           ;my_uart.c: 48: RCSTAbits.CREN = 0;
  5866  001482  98AB               	bcf	4011,4,c	;volatile
  5867                           
  5868                           ;my_uart.c: 49: RCSTAbits.CREN = 1;
  5869  001484  88AB               	bsf	4011,4,c	;volatile
  5870                           
  5871                           ;my_uart.c: 50: ToMainLow_sendmsg(0, 30, (void *) 0);
  5872  001486  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5873  001488  0E1E               	movlw	30
  5874  00148A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5875  00148C  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5876  00148E  0E00               	movlw	0
  5877  001490  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5878  001492  0E00               	movlw	0
  5879  001494  6E18               	movwf	ToMainLow_sendmsg@data,c
  5880  001496  0E00               	movlw	0
  5881  001498  ECDC  F010         	call	_ToMainLow_sendmsg
  5882  00149C  0012               	return	
  5883  00149E                     __end_of_uart_recv_int_handler:
  5884                           	opt stack 0
  5885                           pclatu	equ	0xFFB
  5886                           pclath	equ	0xFFA
  5887                           tblptru	equ	0xFF8
  5888                           tblptrh	equ	0xFF7
  5889                           tblptrl	equ	0xFF6
  5890                           tablat	equ	0xFF5
  5891                           prodh	equ	0xFF4
  5892                           prodl	equ	0xFF3
  5893                           intcon	equ	0xFF2
  5894                           intcon2	equ	0xFF1
  5895                           postinc0	equ	0xFEE
  5896                           fsr0h	equ	0xFEA
  5897                           fsr0l	equ	0xFE9
  5898                           wreg	equ	0xFE8
  5899                           indf1	equ	0xFE7
  5900                           postdec1	equ	0xFE5
  5901                           fsr1h	equ	0xFE2
  5902                           fsr1l	equ	0xFE1
  5903                           bsr	equ	0xFE0
  5904                           indf2	equ	0xFDF
  5905                           postinc2	equ	0xFDE
  5906                           postdec2	equ	0xFDD
  5907                           fsr2h	equ	0xFDA
  5908                           fsr2l	equ	0xFD9
  5909                           status	equ	0xFD8
  5910                           
  5911 ;; *************** function _ToMainLow_sendmsg *****************
  5912 ;; Defined at:
  5913 ;;		line 103 in file "../src/messages.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;  length          1    wreg     unsigned char 
  5916 ;;  msgtype         1   22[COMRAM] unsigned char 
  5917 ;;  data            2   23[COMRAM] PTR void 
  5918 ;;		 -> NULL(0), main@uc(13), 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;  length          1   25[COMRAM] unsigned char 
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  1    wreg      char 
  5923 ;; Registers used:
  5924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5930 ;;      Params:         3       0       0       0       0
  5931 ;;      Locals:         1       0       0       0       0
  5932 ;;      Temps:          0       0       0       0       0
  5933 ;;      Totals:         4       0       0       0       0
  5934 ;;Total ram usage:        4 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; Hardware stack levels required when called:    8
  5937 ;; This function calls:
  5938 ;;		i1_send_msg
  5939 ;; This function is called by:
  5940 ;;		_uart_recv_int_handler
  5941 ;; This function uses a non-reentrant model
  5942 ;;
  5943                           
  5944                           	psect	text34
  5945  0021B8                     __ptext34:
  5946                           	opt stack 0
  5947  0021B8                     _ToMainLow_sendmsg:
  5948                           	opt stack 16
  5949                           
  5950                           ;incstack = 0
  5951                           ;ToMainLow_sendmsg@length stored from wreg
  5952  0021B8  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5953                           
  5954                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5955                           ;	Return value of _ToMainLow_sendmsg is never used
  5956  0021BC  0101               	movlb	1	; () banked
  5957  0021BE  0E01               	movlw	high _ToMainLow_MQ
  5958  0021C0  6E0C               	movwf	i1send_msg@qptr+1,c
  5959  0021C2  0101               	movlb	1	; () banked
  5960  0021C4  0E43               	movlw	low _ToMainLow_MQ
  5961  0021C6  6E0B               	movwf	i1send_msg@qptr,c
  5962  0021C8  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5963  0021CC  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5964  0021D0  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5965  0021D4  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5966  0021D8  EC4F  F00A         	call	i1_send_msg	;wreg free
  5967  0021DC  0012               	return	
  5968  0021DE                     __end_of_ToMainLow_sendmsg:
  5969                           	opt stack 0
  5970                           pclatu	equ	0xFFB
  5971                           pclath	equ	0xFFA
  5972                           tblptru	equ	0xFF8
  5973                           tblptrh	equ	0xFF7
  5974                           tblptrl	equ	0xFF6
  5975                           tablat	equ	0xFF5
  5976                           prodh	equ	0xFF4
  5977                           prodl	equ	0xFF3
  5978                           intcon	equ	0xFF2
  5979                           intcon2	equ	0xFF1
  5980                           postinc0	equ	0xFEE
  5981                           fsr0h	equ	0xFEA
  5982                           fsr0l	equ	0xFE9
  5983                           wreg	equ	0xFE8
  5984                           indf1	equ	0xFE7
  5985                           postdec1	equ	0xFE5
  5986                           fsr1h	equ	0xFE2
  5987                           fsr1l	equ	0xFE1
  5988                           bsr	equ	0xFE0
  5989                           indf2	equ	0xFDF
  5990                           postinc2	equ	0xFDE
  5991                           postdec2	equ	0xFDD
  5992                           fsr2h	equ	0xFDA
  5993                           fsr2l	equ	0xFD9
  5994                           status	equ	0xFD8
  5995                           
  5996 ;; *************** function i1_send_msg *****************
  5997 ;; Defined at:
  5998 ;;		line 24 in file "../src/messages.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6001 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6002 ;;  length          1   12[COMRAM] unsigned char 
  6003 ;;  msgtype         1   13[COMRAM] unsigned char 
  6004 ;;  data            2   14[COMRAM] PTR void 
  6005 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  6006 ;;		 -> main@uc(13), 
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6009 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6010 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6011 ;;  send_msg        2   17[COMRAM] unsigned int 
  6012 ;;  send_msg        1   19[COMRAM] unsigned char 
  6013 ;; Return value:  Size  Location     Type
  6014 ;;                  1    wreg      char 
  6015 ;; Registers used:
  6016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6022 ;;      Params:         6       0       0       0       0
  6023 ;;      Locals:         5       0       0       0       0
  6024 ;;      Temps:          1       0       0       0       0
  6025 ;;      Totals:        12       0       0       0       0
  6026 ;;Total ram usage:       12 bytes
  6027 ;; Hardware stack levels used:    1
  6028 ;; Hardware stack levels required when called:    7
  6029 ;; This function calls:
  6030 ;;		i1___awmod
  6031 ;;		i1_memcpy
  6032 ;; This function is called by:
  6033 ;;		_ToMainLow_sendmsg
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037                           	psect	text35
  6038  00149E                     __ptext35:
  6039                           	opt stack 0
  6040  00149E                     i1_send_msg:
  6041                           	opt stack 16
  6042                           
  6043                           ;messages.c: 25: unsigned char slot;
  6044                           ;messages.c: 27: msg *qmsg;
  6045                           ;messages.c: 28: size_t tlength = length;
  6046                           
  6047                           ;incstack = 0
  6048  00149E  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6049  0014A2  6A13               	clrf	i1send_msg@tlength+1,c
  6050                           
  6051                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6052  0014A4  EE20 F041          	lfsr	2,65
  6053  0014A8  500B               	movf	i1send_msg@qptr,w,c
  6054  0014AA  26D9               	addwf	fsr2l,f,c
  6055  0014AC  500C               	movf	i1send_msg@qptr+1,w,c
  6056  0014AE  22DA               	addwfc	fsr2h,f,c
  6057  0014B0  50DF               	movf	indf2,w,c
  6058  0014B2  6E14               	movwf	i1send_msg@slot,c
  6059                           
  6060                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6061  0014B4  5014               	movf	i1send_msg@slot,w,c
  6062  0014B6  0D0D               	mullw	13
  6063  0014B8  50F3               	movf	prodl,w,c
  6064  0014BA  240B               	addwf	i1send_msg@qptr,w,c
  6065  0014BC  6E15               	movwf	i1send_msg@qmsg,c
  6066  0014BE  50F4               	movf	prodh,w,c
  6067  0014C0  200C               	addwfc	i1send_msg@qptr+1,w,c
  6068  0014C2  6E16               	movwf	i1send_msg@qmsg+1,c
  6069                           
  6070                           ;messages.c: 41: if (qmsg->full != 0) {
  6071  0014C4  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6072  0014C8  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6073  0014CC  50DF               	movf	indf2,w,c
  6074  0014CE  B4D8               	btfsc	status,2,c
  6075  0014D0  D002               	goto	i1l4669
  6076                           
  6077                           ;messages.c: 42: return (-1);
  6078  0014D2  0EFF               	movlw	255
  6079  0014D4  0012               	return	
  6080  0014D6                     i1l4669:
  6081                           
  6082                           ;messages.c: 43: }
  6083                           ;messages.c: 46: qmsg->length = length;
  6084  0014D6  EE20 F001          	lfsr	2,1
  6085  0014DA  5015               	movf	i1send_msg@qmsg,w,c
  6086  0014DC  26D9               	addwf	fsr2l,f,c
  6087  0014DE  5016               	movf	i1send_msg@qmsg+1,w,c
  6088  0014E0  22DA               	addwfc	fsr2h,f,c
  6089  0014E2  C00D  FFDF         	movff	i1send_msg@length,indf2
  6090                           
  6091                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6092  0014E6  EE20 F002          	lfsr	2,2
  6093  0014EA  5015               	movf	i1send_msg@qmsg,w,c
  6094  0014EC  26D9               	addwf	fsr2l,f,c
  6095  0014EE  5016               	movf	i1send_msg@qmsg+1,w,c
  6096  0014F0  22DA               	addwfc	fsr2h,f,c
  6097  0014F2  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6098                           
  6099                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6100  0014F6  0E03               	movlw	3
  6101  0014F8  2415               	addwf	i1send_msg@qmsg,w,c
  6102  0014FA  6E01               	movwf	i1memcpy@d1,c
  6103  0014FC  0E00               	movlw	0
  6104  0014FE  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6105  001500  6E02               	movwf	i1memcpy@d1+1,c
  6106  001502  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6107  001506  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6108  00150A  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6109  00150E  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6110  001512  ECEC  F00F         	call	i1_memcpy	;wreg free
  6111                           
  6112                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  6113  001516  EE20 F041          	lfsr	2,65
  6114  00151A  500B               	movf	i1send_msg@qptr,w,c
  6115  00151C  26D9               	addwf	fsr2l,f,c
  6116  00151E  500C               	movf	i1send_msg@qptr+1,w,c
  6117  001520  22DA               	addwfc	fsr2h,f,c
  6118  001522  EE10 F041          	lfsr	1,65
  6119  001526  500B               	movf	i1send_msg@qptr,w,c
  6120  001528  26E1               	addwf	fsr1l,f,c
  6121  00152A  500C               	movf	i1send_msg@qptr+1,w,c
  6122  00152C  22E2               	addwfc	fsr1h,f,c
  6123  00152E  50E7               	movf	indf1,w,c
  6124  001530  6E11               	movwf	??i1_send_msg& (0+255),c
  6125  001532  0E01               	movlw	1
  6126  001534  2411               	addwf	??i1_send_msg,w,c
  6127  001536  6E01               	movwf	i1___awmod@dividend,c
  6128  001538  6A02               	clrf	i1___awmod@dividend+1,c
  6129  00153A  0E00               	movlw	0
  6130  00153C  2202               	addwfc	i1___awmod@dividend+1,f,c
  6131  00153E  0E00               	movlw	0
  6132  001540  6E04               	movwf	i1___awmod@divisor+1,c
  6133  001542  0E05               	movlw	5
  6134  001544  6E03               	movwf	i1___awmod@divisor,c
  6135  001546  ECB4  F00B         	call	i1___awmod	;wreg free
  6136  00154A  5001               	movf	?i1___awmod,w,c
  6137  00154C  6EDF               	movwf	indf2,c
  6138                           
  6139                           ;messages.c: 59: qmsg->full = 1;
  6140  00154E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6141  001552  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6142  001556  0E01               	movlw	1
  6143  001558  6EDF               	movwf	indf2,c
  6144                           
  6145                           ;messages.c: 60: return (1);
  6146  00155A  0E01               	movlw	1
  6147  00155C  0012               	return	
  6148  00155E                     __end_ofi1_send_msg:
  6149                           	opt stack 0
  6150                           pclatu	equ	0xFFB
  6151                           pclath	equ	0xFFA
  6152                           tblptru	equ	0xFF8
  6153                           tblptrh	equ	0xFF7
  6154                           tblptrl	equ	0xFF6
  6155                           tablat	equ	0xFF5
  6156                           prodh	equ	0xFF4
  6157                           prodl	equ	0xFF3
  6158                           intcon	equ	0xFF2
  6159                           intcon2	equ	0xFF1
  6160                           postinc0	equ	0xFEE
  6161                           fsr0h	equ	0xFEA
  6162                           fsr0l	equ	0xFE9
  6163                           wreg	equ	0xFE8
  6164                           indf1	equ	0xFE7
  6165                           postdec1	equ	0xFE5
  6166                           fsr1h	equ	0xFE2
  6167                           fsr1l	equ	0xFE1
  6168                           bsr	equ	0xFE0
  6169                           indf2	equ	0xFDF
  6170                           postinc2	equ	0xFDE
  6171                           postdec2	equ	0xFDD
  6172                           fsr2h	equ	0xFDA
  6173                           fsr2l	equ	0xFD9
  6174                           status	equ	0xFD8
  6175                           
  6176 ;; *************** function i1_memcpy *****************
  6177 ;; Defined at:
  6178 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  d1              2    0[COMRAM] PTR void 
  6181 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6182 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6183 ;;		 -> main@msgbuffer(11), 
  6184 ;;  s1              2    2[COMRAM] PTR const void 
  6185 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6186 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6187 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6188 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6189 ;;		 -> main@uc(13), 
  6190 ;;  n               2    4[COMRAM] unsigned int 
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6193 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6194 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6195 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6196 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6197 ;;		 -> main@uc(13), 
  6198 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6199 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6200 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6201 ;;		 -> main@msgbuffer(11), 
  6202 ;; Return value:  Size  Location     Type
  6203 ;;                  2    0[COMRAM] PTR void 
  6204 ;; Registers used:
  6205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6206 ;; Tracked objects:
  6207 ;;		On entry : 0/0
  6208 ;;		On exit  : 0/0
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6211 ;;      Params:         6       0       0       0       0
  6212 ;;      Locals:         4       0       0       0       0
  6213 ;;      Temps:          0       0       0       0       0
  6214 ;;      Totals:        10       0       0       0       0
  6215 ;;Total ram usage:       10 bytes
  6216 ;; Hardware stack levels used:    1
  6217 ;; Hardware stack levels required when called:    6
  6218 ;; This function calls:
  6219 ;;		Nothing
  6220 ;; This function is called by:
  6221 ;;		i1_send_msg
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           	psect	text36
  6226  001FD8                     __ptext36:
  6227                           	opt stack 0
  6228  001FD8                     i1_memcpy:
  6229                           	opt stack 16
  6230                           
  6231                           ;incstack = 0
  6232  001FD8  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6233  001FDC  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6234  001FE0  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6235  001FE4  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6236  001FE8  D00E               	goto	i1l3551
  6237  001FEA                     i1l3545:
  6238  001FEA  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6239  001FEE  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6240  001FF2  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6241  001FF6  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6242  001FFA  CFDF FFE7          	movff	indf2,indf1
  6243  001FFE  4A09               	infsnz	i1memcpy@s,f,c
  6244  002000  2A0A               	incf	i1memcpy@s+1,f,c
  6245  002002  4A07               	infsnz	i1memcpy@d,f,c
  6246  002004  2A08               	incf	i1memcpy@d+1,f,c
  6247  002006                     i1l3551:
  6248  002006  0605               	decf	i1memcpy@n,f,c
  6249  002008  A0D8               	btfss	status,0,c
  6250  00200A  0606               	decf	i1memcpy@n+1,f,c
  6251  00200C  2805               	incf	i1memcpy@n& (0+255),w,c
  6252  00200E  B4D8               	btfsc	status,2,c
  6253  002010  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6254  002012  B4D8               	btfsc	status,2,c
  6255                           
  6256                           ;	Return value of i1_memcpy is never used
  6257  002014  0012               	return	
  6258  002016  D7E9               	goto	i1l3545
  6259  002018                     __end_ofi1_memcpy:
  6260                           	opt stack 0
  6261                           pclatu	equ	0xFFB
  6262                           pclath	equ	0xFFA
  6263                           tblptru	equ	0xFF8
  6264                           tblptrh	equ	0xFF7
  6265                           tblptrl	equ	0xFF6
  6266                           tablat	equ	0xFF5
  6267                           prodh	equ	0xFF4
  6268                           prodl	equ	0xFF3
  6269                           intcon	equ	0xFF2
  6270                           intcon2	equ	0xFF1
  6271                           postinc0	equ	0xFEE
  6272                           fsr0h	equ	0xFEA
  6273                           fsr0l	equ	0xFE9
  6274                           wreg	equ	0xFE8
  6275                           indf1	equ	0xFE7
  6276                           postdec1	equ	0xFE5
  6277                           fsr1h	equ	0xFE2
  6278                           fsr1l	equ	0xFE1
  6279                           bsr	equ	0xFE0
  6280                           indf2	equ	0xFDF
  6281                           postinc2	equ	0xFDE
  6282                           postdec2	equ	0xFDD
  6283                           fsr2h	equ	0xFDA
  6284                           fsr2l	equ	0xFD9
  6285                           status	equ	0xFD8
  6286                           
  6287 ;; *************** function i1___awmod *****************
  6288 ;; Defined at:
  6289 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  dividend        2    0[COMRAM] int 
  6292 ;;  divisor         2    2[COMRAM] int 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  __awmod         1    6[COMRAM] unsigned char 
  6295 ;;  __awmod         1    5[COMRAM] unsigned char 
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  2    0[COMRAM] int 
  6298 ;; Registers used:
  6299 ;;		wreg, status,2, status,0, prodl
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6305 ;;      Params:         4       0       0       0       0
  6306 ;;      Locals:         2       0       0       0       0
  6307 ;;      Temps:          1       0       0       0       0
  6308 ;;      Totals:         7       0       0       0       0
  6309 ;;Total ram usage:        7 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; Hardware stack levels required when called:    6
  6312 ;; This function calls:
  6313 ;;		Nothing
  6314 ;; This function is called by:
  6315 ;;		i1_send_msg
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           	psect	text37
  6320  001768                     __ptext37:
  6321                           	opt stack 0
  6322  001768                     i1___awmod:
  6323                           	opt stack 16
  6324                           
  6325                           ;incstack = 0
  6326  001768  6E05               	movwf	??i1___awmod& (0+255),c
  6327  00176A  0E00               	movlw	0
  6328  00176C  6E07               	movwf	i1___awmod@sign,c
  6329  00176E  5005               	movf	??i1___awmod& (0+255),w,c
  6330  001770  5002               	movf	i1___awmod@dividend+1,w,c
  6331  001772  0A80               	xorlw	128
  6332  001774  6EF3               	movwf	prodl,c
  6333  001776  0E80               	movlw	128
  6334  001778  5CF3               	subwf	prodl,w,c
  6335  00177A  0E00               	movlw	0
  6336  00177C  B4D8               	btfsc	status,2,c
  6337  00177E  5C01               	subwf	i1___awmod@dividend,w,c
  6338  001780  B0D8               	btfsc	status,0,c
  6339  001782  D008               	goto	i1l3571
  6340  001784  6C01               	negf	i1___awmod@dividend,c
  6341  001786  1E02               	comf	i1___awmod@dividend+1,f,c
  6342  001788  B0D8               	btfsc	status,0,c
  6343  00178A  2A02               	incf	i1___awmod@dividend+1,f,c
  6344  00178C  6E05               	movwf	??i1___awmod& (0+255),c
  6345  00178E  0E01               	movlw	1
  6346  001790  6E07               	movwf	i1___awmod@sign,c
  6347  001792  5005               	movf	??i1___awmod& (0+255),w,c
  6348  001794                     i1l3571:
  6349  001794  5004               	movf	i1___awmod@divisor+1,w,c
  6350  001796  0A80               	xorlw	128
  6351  001798  6EF3               	movwf	prodl,c
  6352  00179A  0E80               	movlw	128
  6353  00179C  5CF3               	subwf	prodl,w,c
  6354  00179E  0E00               	movlw	0
  6355  0017A0  B4D8               	btfsc	status,2,c
  6356  0017A2  5C03               	subwf	i1___awmod@divisor,w,c
  6357  0017A4  B0D8               	btfsc	status,0,c
  6358  0017A6  D004               	goto	i1l3575
  6359  0017A8  6C03               	negf	i1___awmod@divisor,c
  6360  0017AA  1E04               	comf	i1___awmod@divisor+1,f,c
  6361  0017AC  B0D8               	btfsc	status,0,c
  6362  0017AE  2A04               	incf	i1___awmod@divisor+1,f,c
  6363  0017B0                     i1l3575:
  6364  0017B0  5004               	movf	i1___awmod@divisor+1,w,c
  6365  0017B2  1003               	iorwf	i1___awmod@divisor,w,c
  6366  0017B4  B4D8               	btfsc	status,2,c
  6367  0017B6  D01A               	goto	i1l3591
  6368  0017B8  6E05               	movwf	??i1___awmod& (0+255),c
  6369  0017BA  0E01               	movlw	1
  6370  0017BC  6E06               	movwf	i1___awmod@counter,c
  6371  0017BE  5005               	movf	??i1___awmod& (0+255),w,c
  6372  0017C0  D004               	goto	i1l3581
  6373  0017C2                     i1l3579:
  6374  0017C2  90D8               	bcf	status,0,c
  6375  0017C4  3603               	rlcf	i1___awmod@divisor,f,c
  6376  0017C6  3604               	rlcf	i1___awmod@divisor+1,f,c
  6377  0017C8  2A06               	incf	i1___awmod@counter,f,c
  6378  0017CA                     i1l3581:
  6379  0017CA  AE04               	btfss	i1___awmod@divisor+1,7,c
  6380  0017CC  D7FA               	goto	i1l3579
  6381  0017CE                     i1l3583:
  6382  0017CE  5003               	movf	i1___awmod@divisor,w,c
  6383  0017D0  5C01               	subwf	i1___awmod@dividend,w,c
  6384  0017D2  5004               	movf	i1___awmod@divisor+1,w,c
  6385  0017D4  5802               	subwfb	i1___awmod@dividend+1,w,c
  6386  0017D6  A0D8               	btfss	status,0,c
  6387  0017D8  D004               	goto	i1l3587
  6388  0017DA  5003               	movf	i1___awmod@divisor,w,c
  6389  0017DC  5E01               	subwf	i1___awmod@dividend,f,c
  6390  0017DE  5004               	movf	i1___awmod@divisor+1,w,c
  6391  0017E0  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6392  0017E2                     i1l3587:
  6393  0017E2  90D8               	bcf	status,0,c
  6394  0017E4  3204               	rrcf	i1___awmod@divisor+1,f,c
  6395  0017E6  3203               	rrcf	i1___awmod@divisor,f,c
  6396  0017E8  2E06               	decfsz	i1___awmod@counter,f,c
  6397  0017EA  D7F1               	goto	i1l3583
  6398  0017EC                     i1l3591:
  6399  0017EC  5007               	movf	i1___awmod@sign,w,c
  6400  0017EE  B4D8               	btfsc	status,2,c
  6401  0017F0  D004               	goto	i1l3595
  6402  0017F2  6C01               	negf	i1___awmod@dividend,c
  6403  0017F4  1E02               	comf	i1___awmod@dividend+1,f,c
  6404  0017F6  B0D8               	btfsc	status,0,c
  6405  0017F8  2A02               	incf	i1___awmod@dividend+1,f,c
  6406  0017FA                     i1l3595:
  6407  0017FA  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6408  0017FE  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6409  001802  0012               	return	
  6410  001804                     __end_ofi1___awmod:
  6411                           	opt stack 0
  6412                           pclatu	equ	0xFFB
  6413                           pclath	equ	0xFFA
  6414                           tblptru	equ	0xFF8
  6415                           tblptrh	equ	0xFF7
  6416                           tblptrl	equ	0xFF6
  6417                           tablat	equ	0xFF5
  6418                           prodh	equ	0xFF4
  6419                           prodl	equ	0xFF3
  6420                           intcon	equ	0xFF2
  6421                           intcon2	equ	0xFF1
  6422                           postinc0	equ	0xFEE
  6423                           fsr0h	equ	0xFEA
  6424                           fsr0l	equ	0xFE9
  6425                           wreg	equ	0xFE8
  6426                           indf1	equ	0xFE7
  6427                           postdec1	equ	0xFE5
  6428                           fsr1h	equ	0xFE2
  6429                           fsr1l	equ	0xFE1
  6430                           bsr	equ	0xFE0
  6431                           indf2	equ	0xFDF
  6432                           postinc2	equ	0xFDE
  6433                           postdec2	equ	0xFDD
  6434                           fsr2h	equ	0xFDA
  6435                           fsr2l	equ	0xFD9
  6436                           status	equ	0xFD8
  6437                           
  6438 ;; *************** function _ReadUSART *****************
  6439 ;; Defined at:
  6440 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;		None
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  data            1    0[COMRAM] unsigned char 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  1    wreg      unsigned char 
  6447 ;; Registers used:
  6448 ;;		wreg, status,2, status,0
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6454 ;;      Params:         0       0       0       0       0
  6455 ;;      Locals:         1       0       0       0       0
  6456 ;;      Temps:          0       0       0       0       0
  6457 ;;      Totals:         1       0       0       0       0
  6458 ;;Total ram usage:        1 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; Hardware stack levels required when called:    6
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		_uart_recv_int_handler
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           	psect	text38
  6469  00223E                     __ptext38:
  6470                           	opt stack 0
  6471  00223E                     _ReadUSART:
  6472                           	opt stack 18
  6473                           
  6474                           ;incstack = 0
  6475  00223E  0EF2               	movlw	242
  6476  002240  164E               	andwf	_USART_Status,f,c
  6477  002242  ACAB               	btfss	4011,6,c	;volatile
  6478  002244  D003               	goto	i1l648
  6479  002246  904E               	bcf	_USART_Status,0,c
  6480  002248  B0AB               	btfsc	4011,0,c	;volatile
  6481  00224A  804E               	bsf	_USART_Status,0,c
  6482  00224C                     i1l648:
  6483  00224C  B4AB               	btfsc	4011,2,c	;volatile
  6484  00224E  844E               	bsf	_USART_Status,2,c
  6485  002250  B2AB               	btfsc	4011,1,c	;volatile
  6486  002252  864E               	bsf	_USART_Status,3,c
  6487  002254  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6488  002258  5001               	movf	ReadUSART@data,w,c
  6489  00225A  0012               	return	
  6490  00225C                     __end_of_ReadUSART:
  6491                           	opt stack 0
  6492                           pclatu	equ	0xFFB
  6493                           pclath	equ	0xFFA
  6494                           tblptru	equ	0xFF8
  6495                           tblptrh	equ	0xFF7
  6496                           tblptrl	equ	0xFF6
  6497                           tablat	equ	0xFF5
  6498                           prodh	equ	0xFF4
  6499                           prodl	equ	0xFF3
  6500                           intcon	equ	0xFF2
  6501                           intcon2	equ	0xFF1
  6502                           postinc0	equ	0xFEE
  6503                           fsr0h	equ	0xFEA
  6504                           fsr0l	equ	0xFE9
  6505                           wreg	equ	0xFE8
  6506                           indf1	equ	0xFE7
  6507                           postdec1	equ	0xFE5
  6508                           fsr1h	equ	0xFE2
  6509                           fsr1l	equ	0xFE1
  6510                           bsr	equ	0xFE0
  6511                           indf2	equ	0xFDF
  6512                           postinc2	equ	0xFDE
  6513                           postdec2	equ	0xFDD
  6514                           fsr2h	equ	0xFDA
  6515                           fsr2l	equ	0xFD9
  6516                           status	equ	0xFD8
  6517                           
  6518 ;; *************** function _timer1_int_handler *****************
  6519 ;; Defined at:
  6520 ;;		line 62 in file "../src/user_interrupts.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;		None
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;		None
  6525 ;; Return value:  Size  Location     Type
  6526 ;;		None               void
  6527 ;; Registers used:
  6528 ;;		wreg, status,2, cstack
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6534 ;;      Params:         0       0       0       0       0
  6535 ;;      Locals:         0       0       0       0       0
  6536 ;;      Temps:          0       0       0       0       0
  6537 ;;      Totals:         0       0       0       0       0
  6538 ;;Total ram usage:        0 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; Hardware stack levels required when called:    7
  6541 ;; This function calls:
  6542 ;;		_WriteTimer1
  6543 ;; This function is called by:
  6544 ;;		_InterruptHandlerLow
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           	psect	text39
  6549  0022DE                     __ptext39:
  6550                           	opt stack 0
  6551  0022DE                     _timer1_int_handler:
  6552                           	opt stack 18
  6553                           
  6554                           ;user_interrupts.c: 74: WriteTimer1(0);
  6555                           
  6556                           ;incstack = 0
  6557  0022DE  0E00               	movlw	0
  6558  0022E0  6E02               	movwf	WriteTimer1@timer1+1,c
  6559  0022E2  0E00               	movlw	0
  6560  0022E4  6E01               	movwf	WriteTimer1@timer1,c
  6561  0022E6  EC54  F011         	call	_WriteTimer1	;wreg free
  6562  0022EA  0012               	return	
  6563  0022EC                     __end_of_timer1_int_handler:
  6564                           	opt stack 0
  6565                           pclatu	equ	0xFFB
  6566                           pclath	equ	0xFFA
  6567                           tblptru	equ	0xFF8
  6568                           tblptrh	equ	0xFF7
  6569                           tblptrl	equ	0xFF6
  6570                           tablat	equ	0xFF5
  6571                           prodh	equ	0xFF4
  6572                           prodl	equ	0xFF3
  6573                           intcon	equ	0xFF2
  6574                           intcon2	equ	0xFF1
  6575                           postinc0	equ	0xFEE
  6576                           fsr0h	equ	0xFEA
  6577                           fsr0l	equ	0xFE9
  6578                           wreg	equ	0xFE8
  6579                           indf1	equ	0xFE7
  6580                           postdec1	equ	0xFE5
  6581                           fsr1h	equ	0xFE2
  6582                           fsr1l	equ	0xFE1
  6583                           bsr	equ	0xFE0
  6584                           indf2	equ	0xFDF
  6585                           postinc2	equ	0xFDE
  6586                           postdec2	equ	0xFDD
  6587                           fsr2h	equ	0xFDA
  6588                           fsr2l	equ	0xFD9
  6589                           status	equ	0xFD8
  6590                           
  6591 ;; *************** function _WriteTimer1 *****************
  6592 ;; Defined at:
  6593 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;  timer1          2    0[COMRAM] unsigned int 
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;  timer           2    2[COMRAM] struct Timers
  6598 ;; Return value:  Size  Location     Type
  6599 ;;		None               void
  6600 ;; Registers used:
  6601 ;;		None
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6607 ;;      Params:         2       0       0       0       0
  6608 ;;      Locals:         2       0       0       0       0
  6609 ;;      Temps:          0       0       0       0       0
  6610 ;;      Totals:         4       0       0       0       0
  6611 ;;Total ram usage:        4 bytes
  6612 ;; Hardware stack levels used:    1
  6613 ;; Hardware stack levels required when called:    6
  6614 ;; This function calls:
  6615 ;;		Nothing
  6616 ;; This function is called by:
  6617 ;;		_timer1_int_handler
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           	psect	text40
  6622  0022A8                     __ptext40:
  6623                           	opt stack 0
  6624  0022A8                     _WriteTimer1:
  6625                           	opt stack 18
  6626                           
  6627                           ;incstack = 0
  6628  0022A8  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6629  0022AC  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6630  0022B0  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6631  0022B4  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6632  0022B8  0012               	return	
  6633  0022BA                     __end_of_WriteTimer1:
  6634                           	opt stack 0
  6635                           pclatu	equ	0xFFB
  6636                           pclath	equ	0xFFA
  6637                           tblptru	equ	0xFF8
  6638                           tblptrh	equ	0xFF7
  6639                           tblptrl	equ	0xFF6
  6640                           tablat	equ	0xFF5
  6641                           prodh	equ	0xFF4
  6642                           prodl	equ	0xFF3
  6643                           intcon	equ	0xFF2
  6644                           intcon2	equ	0xFF1
  6645                           postinc0	equ	0xFEE
  6646                           fsr0h	equ	0xFEA
  6647                           fsr0l	equ	0xFE9
  6648                           wreg	equ	0xFE8
  6649                           indf1	equ	0xFE7
  6650                           postdec1	equ	0xFE5
  6651                           fsr1h	equ	0xFE2
  6652                           fsr1l	equ	0xFE1
  6653                           bsr	equ	0xFE0
  6654                           indf2	equ	0xFDF
  6655                           postinc2	equ	0xFDE
  6656                           postdec2	equ	0xFDD
  6657                           fsr2h	equ	0xFDA
  6658                           fsr2l	equ	0xFD9
  6659                           status	equ	0xFD8
  6660                           
  6661 ;; *************** function _adc_int_handler *****************
  6662 ;; Defined at:
  6663 ;;		line 77 in file "../src/user_interrupts.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;		None
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;		None
  6668 ;; Return value:  Size  Location     Type
  6669 ;;		None               void
  6670 ;; Registers used:
  6671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6677 ;;      Params:         0       0       0       0       0
  6678 ;;      Locals:         0       0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0
  6680 ;;      Totals:         0       0       0       0       0
  6681 ;;Total ram usage:        0 bytes
  6682 ;; Hardware stack levels used:    1
  6683 ;; Hardware stack levels required when called:    6
  6684 ;; This function calls:
  6685 ;;		Nothing
  6686 ;; This function is called by:
  6687 ;;		_InterruptHandlerLow
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           	psect	text41
  6692  0021DE                     __ptext41:
  6693                           	opt stack 0
  6694  0021DE                     _adc_int_handler:
  6695                           	opt stack 19
  6696                           
  6697                           ;user_interrupts.c: 79: if(adcbuffer[0] < 27)
  6698                           
  6699                           ;incstack = 0
  6700  0021DE  0E1B               	movlw	27
  6701  0021E0  5C2D               	subwf	_adcbuffer,w,c
  6702  0021E2  B0D8               	btfsc	status,0,c
  6703  0021E4  D002               	goto	i1l1425
  6704                           
  6705                           ;user_interrupts.c: 80: adcbuffer[0] = adcbuffer[0] + 1;
  6706  0021E6  282D               	incf	_adcbuffer,w,c
  6707  0021E8  6E2D               	movwf	_adcbuffer,c
  6708  0021EA                     i1l1425:
  6709                           
  6710                           ;user_interrupts.c: 87: adcbuffer[adcbuffer[0]] = ADRESH;
  6711  0021EA  502D               	movf	_adcbuffer,w,c
  6712  0021EC  0D01               	mullw	1
  6713  0021EE  0E2D               	movlw	low _adcbuffer
  6714  0021F0  24F3               	addwf	prodl,w,c
  6715  0021F2  6ED9               	movwf	fsr2l,c
  6716  0021F4  0E00               	movlw	high _adcbuffer
  6717  0021F6  20F4               	addwfc	prodh,w,c
  6718  0021F8  6EDA               	movwf	fsr2h,c
  6719  0021FA  CFC4 FFDF          	movff	4036,indf2	;volatile
  6720  0021FE  0012               	return	
  6721  002200                     __end_of_adc_int_handler:
  6722                           	opt stack 0
  6723                           pclatu	equ	0xFFB
  6724                           pclath	equ	0xFFA
  6725                           tblptru	equ	0xFF8
  6726                           tblptrh	equ	0xFF7
  6727                           tblptrl	equ	0xFF6
  6728                           tablat	equ	0xFF5
  6729                           prodh	equ	0xFF4
  6730                           prodl	equ	0xFF3
  6731                           intcon	equ	0xFF2
  6732                           intcon2	equ	0xFF1
  6733                           postinc0	equ	0xFEE
  6734                           fsr0h	equ	0xFEA
  6735                           fsr0l	equ	0xFE9
  6736                           wreg	equ	0xFE8
  6737                           indf1	equ	0xFE7
  6738                           postdec1	equ	0xFE5
  6739                           fsr1h	equ	0xFE2
  6740                           fsr1l	equ	0xFE1
  6741                           bsr	equ	0xFE0
  6742                           indf2	equ	0xFDF
  6743                           postinc2	equ	0xFDE
  6744                           postdec2	equ	0xFDD
  6745                           fsr2h	equ	0xFDA
  6746                           fsr2l	equ	0xFD9
  6747                           status	equ	0xFD8
  6748                           
  6749 ;; *************** function _InterruptHandlerHigh *****************
  6750 ;; Defined at:
  6751 ;;		line 84 in file "../src/interrupts.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;		None
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;		None
  6756 ;; Return value:  Size  Location     Type
  6757 ;;		None               void
  6758 ;; Registers used:
  6759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6765 ;;      Params:         0       0       0       0       0
  6766 ;;      Locals:         0       0       0       0       0
  6767 ;;      Temps:          0      14       0       0       0
  6768 ;;      Totals:         0      14       0       0       0
  6769 ;;Total ram usage:       14 bytes
  6770 ;; Hardware stack levels used:    1
  6771 ;; Hardware stack levels required when called:    5
  6772 ;; This function calls:
  6773 ;;		_SleepIfOkay
  6774 ;;		_i2c_int_handler
  6775 ;;		_timer0_int_handler
  6776 ;; This function is called by:
  6777 ;;		Interrupt level 2
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           	psect	intcode
  6782  000008                     __pintcode:
  6783                           	opt stack 0
  6784  000008                     _InterruptHandlerHigh:
  6785                           	opt stack 16
  6786                           
  6787                           ;incstack = 0
  6788  000008  CFFA F0B1          	movff	pclath,??_InterruptHandlerHigh
  6789  00000C  CFFB F0B2          	movff	pclatu,??_InterruptHandlerHigh+1
  6790  000010  EFD5  F00C         	goto	int_func
  6791                           pclatu	equ	0xFFB
  6792                           pclath	equ	0xFFA
  6793                           tblptru	equ	0xFF8
  6794                           tblptrh	equ	0xFF7
  6795                           tblptrl	equ	0xFF6
  6796                           tablat	equ	0xFF5
  6797                           prodh	equ	0xFF4
  6798                           prodl	equ	0xFF3
  6799                           intcon	equ	0xFF2
  6800                           intcon2	equ	0xFF1
  6801                           postinc0	equ	0xFEE
  6802                           fsr0h	equ	0xFEA
  6803                           fsr0l	equ	0xFE9
  6804                           wreg	equ	0xFE8
  6805                           indf1	equ	0xFE7
  6806                           postdec1	equ	0xFE5
  6807                           fsr1h	equ	0xFE2
  6808                           fsr1l	equ	0xFE1
  6809                           bsr	equ	0xFE0
  6810                           indf2	equ	0xFDF
  6811                           postinc2	equ	0xFDE
  6812                           postdec2	equ	0xFDD
  6813                           fsr2h	equ	0xFDA
  6814                           fsr2l	equ	0xFD9
  6815                           status	equ	0xFD8
  6816                           
  6817                           	psect	intcode_body
  6818  0019AA                     __pintcode_body:
  6819                           	opt stack 16
  6820  0019AA                     int_func:
  6821                           	opt stack 16
  6822  0019AA  CFE9 F0B3          	movff	fsr0l,??_InterruptHandlerHigh+2
  6823  0019AE  CFEA F0B4          	movff	fsr0h,??_InterruptHandlerHigh+3
  6824  0019B2  CFE1 F0B5          	movff	fsr1l,??_InterruptHandlerHigh+4
  6825  0019B6  CFE2 F0B6          	movff	fsr1h,??_InterruptHandlerHigh+5
  6826  0019BA  CFD9 F0B7          	movff	fsr2l,??_InterruptHandlerHigh+6
  6827  0019BE  CFDA F0B8          	movff	fsr2h,??_InterruptHandlerHigh+7
  6828  0019C2  CFF3 F0B9          	movff	prodl,??_InterruptHandlerHigh+8
  6829  0019C6  CFF4 F0BA          	movff	prodh,??_InterruptHandlerHigh+9
  6830  0019CA  CFF6 F0BB          	movff	tblptrl,??_InterruptHandlerHigh+10
  6831  0019CE  CFF7 F0BC          	movff	tblptrh,??_InterruptHandlerHigh+11
  6832  0019D2  CFF8 F0BD          	movff	tblptru,??_InterruptHandlerHigh+12
  6833  0019D6  CFF5 F0BE          	movff	tablat,??_InterruptHandlerHigh+13
  6834                           
  6835                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  6836  0019DA  A69E               	btfss	3998,3,c	;volatile
  6837  0019DC  D003               	goto	i2l3765
  6838                           
  6839                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  6840  0019DE  969E               	bcf	3998,3,c	;volatile
  6841                           
  6842                           ;interrupts.c: 94: i2c_int_handler();
  6843  0019E0  EC7F  F011         	call	_i2c_int_handler	;wreg free
  6844  0019E4                     i2l3765:
  6845                           
  6846                           ;interrupts.c: 96: }
  6847                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  6848  0019E4  A4F2               	btfss	intcon,2,c	;volatile
  6849  0019E6  D005               	goto	i2l3773
  6850                           
  6851                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  6852  0019E8  94F2               	bcf	intcon,2,c	;volatile
  6853                           
  6854                           ;interrupts.c: 103: PORTAbits.AN0 = 1;
  6855  0019EA  8080               	bsf	3968,0,c	;volatile
  6856                           
  6857                           ;interrupts.c: 104: timer0_int_handler();
  6858  0019EC  EC63  F00B         	call	_timer0_int_handler	;wreg free
  6859                           
  6860                           ;interrupts.c: 105: PORTAbits.AN0 = 0;
  6861  0019F0  9080               	bcf	3968,0,c	;volatile
  6862  0019F2                     i2l3773:
  6863                           
  6864                           ;interrupts.c: 106: }
  6865                           ;interrupts.c: 115: SleepIfOkay();
  6866  0019F2  EC7B  F00E         	call	_SleepIfOkay	;wreg free
  6867  0019F6  C0BE  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6868  0019FA  C0BD  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6869  0019FE  C0BC  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6870  001A02  C0BB  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6871  001A06  C0BA  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6872  001A0A  C0B9  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6873  001A0E  C0B8  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6874  001A12  C0B7  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6875  001A16  C0B6  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6876  001A1A  C0B5  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6877  001A1E  C0B4  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6878  001A22  C0B3  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6879  001A26  C0B2  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6880  001A2A  C0B1  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6881  001A2E  0011               	retfie		f
  6882  001A30                     __end_of_InterruptHandlerHigh:
  6883                           	opt stack 0
  6884                           pclatu	equ	0xFFB
  6885                           pclath	equ	0xFFA
  6886                           tblptru	equ	0xFF8
  6887                           tblptrh	equ	0xFF7
  6888                           tblptrl	equ	0xFF6
  6889                           tablat	equ	0xFF5
  6890                           prodh	equ	0xFF4
  6891                           prodl	equ	0xFF3
  6892                           intcon	equ	0xFF2
  6893                           intcon2	equ	0xFF1
  6894                           postinc0	equ	0xFEE
  6895                           fsr0h	equ	0xFEA
  6896                           fsr0l	equ	0xFE9
  6897                           wreg	equ	0xFE8
  6898                           indf1	equ	0xFE7
  6899                           postdec1	equ	0xFE5
  6900                           fsr1h	equ	0xFE2
  6901                           fsr1l	equ	0xFE1
  6902                           bsr	equ	0xFE0
  6903                           indf2	equ	0xFDF
  6904                           postinc2	equ	0xFDE
  6905                           postdec2	equ	0xFDD
  6906                           fsr2h	equ	0xFDA
  6907                           fsr2l	equ	0xFD9
  6908                           status	equ	0xFD8
  6909                           
  6910 ;; *************** function _timer0_int_handler *****************
  6911 ;; Defined at:
  6912 ;;		line 17 in file "../src/user_interrupts.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;		None
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;  motormsg        5   14[BANK0 ] unsigned char [5]
  6917 ;;  motorcomm       2   12[BANK0 ] unsigned char [2]
  6918 ;; Return value:  Size  Location     Type
  6919 ;;		None               void
  6920 ;; Registers used:
  6921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6927 ;;      Params:         0       0       0       0       0
  6928 ;;      Locals:         0       7       0       0       0
  6929 ;;      Temps:          0       2       0       0       0
  6930 ;;      Totals:         0       9       0       0       0
  6931 ;;Total ram usage:        9 bytes
  6932 ;; Hardware stack levels used:    1
  6933 ;; Hardware stack levels required when called:    2
  6934 ;; This function calls:
  6935 ;;		_WriteTimer0
  6936 ;;		_motorMove
  6937 ;;		_start_i2c_slave_reply
  6938 ;; This function is called by:
  6939 ;;		_InterruptHandlerHigh
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943                           	psect	text43
  6944  0016C6                     __ptext43:
  6945                           	opt stack 0
  6946  0016C6                     _timer0_int_handler:
  6947                           	opt stack 18
  6948                           
  6949                           ;user_interrupts.c: 18: WriteTimer0(0);
  6950                           
  6951                           ;incstack = 0
  6952  0016C6  0E00               	movlw	0
  6953  0016C8  0100               	movlb	0	; () banked
  6954  0016CA  0100               	movlb	0	; () banked
  6955  0016CC  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6956  0016CE  0E00               	movlw	0
  6957  0016D0  0100               	movlb	0	; () banked
  6958  0016D2  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  6959  0016D4  EC5D  F011         	call	_WriteTimer0	;wreg free
  6960                           
  6961                           ;user_interrupts.c: 36: distMoved++;
  6962  0016D8  0100               	movlb	0	; () banked
  6963  0016DA  0100               	movlb	0	; () banked
  6964  0016DC  2BCB               	incf	_distMoved& (0+255),f,b
  6965                           
  6966                           ; BSR set to: 0
  6967                           ;user_interrupts.c: 37: if(distMoved >= distDesired){
  6968  0016DE  504F               	movf	_distDesired,w,c
  6969  0016E0  0100               	movlb	0	; () banked
  6970  0016E2  0100               	movlb	0	; () banked
  6971  0016E4  5DCB               	subwf	_distMoved& (0+255),w,b
  6972  0016E6  A0D8               	btfss	status,0,c
  6973  0016E8  0012               	return	
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;user_interrupts.c: 39: unsigned char motormsg[5] = {0x04, 0x00, 0x00, 0x00, 0x00};
  6977  0016EA  EE20  F052         	lfsr	2,timer0_int_handler@F5115
  6978  0016EE  EE10  F08E         	lfsr	1,timer0_int_handler@motormsg
  6979  0016F2  0E05               	movlw	5
  6980  0016F4                     i2u286_41:
  6981  0016F4  CFDE FFE6          	movff	postinc2,postinc1
  6982  0016F8  2EE8               	decfsz	wreg,f,c
  6983  0016FA  D7FC               	goto	i2u286_41
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;user_interrupts.c: 40: motormsg[1] = distMoved;
  6987  0016FC  C0CB  F08F         	movff	_distMoved,timer0_int_handler@motormsg+1
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;user_interrupts.c: 41: motormsg[2] = (distMoved & 0x17);
  6991  001700  0100               	movlb	0	; () banked
  6992  001702  0100               	movlb	0	; () banked
  6993  001704  51CB               	movf	_distMoved& (0+255),w,b
  6994  001706  0B17               	andlw	23
  6995  001708  0100               	movlb	0	; () banked
  6996  00170A  0100               	movlb	0	; () banked
  6997  00170C  6F90               	movwf	(timer0_int_handler@motormsg+2)& (0+255),b
  6998                           
  6999                           ; BSR set to: 0
  7000                           ;user_interrupts.c: 42: start_i2c_slave_reply(5, motormsg);
  7001  00170E  0100               	movlb	0	; () banked
  7002  001710  0E00               	movlw	high timer0_int_handler@motormsg
  7003  001712  0100               	movlb	0	; () banked
  7004  001714  0100               	movlb	0	; () banked
  7005  001716  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  7006  001718  0100               	movlb	0	; () banked
  7007  00171A  0E8E               	movlw	low timer0_int_handler@motormsg
  7008  00171C  0100               	movlb	0	; () banked
  7009  00171E  0100               	movlb	0	; () banked
  7010  001720  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
  7011  001722  0E05               	movlw	5
  7012  001724  EC7B  F008         	call	_start_i2c_slave_reply
  7013                           
  7014                           ;user_interrupts.c: 44: distMoved = 0;
  7015  001728  0100               	movlb	0	; () banked
  7016  00172A  6F8A               	movwf	??_timer0_int_handler& (0+255),b
  7017  00172C  0E00               	movlw	0
  7018  00172E  0100               	movlb	0	; () banked
  7019  001730  0100               	movlb	0	; () banked
  7020  001732  6FCB               	movwf	_distMoved& (0+255),b
  7021  001734  0100               	movlb	0	; () banked
  7022  001736  518A               	movf	??_timer0_int_handler& (0+255),w,b
  7023                           
  7024                           ; BSR set to: 0
  7025                           ;user_interrupts.c: 45: unsigned char motorcomm[2] = {0x00, 0x00};
  7026  001738  C04B  F08C         	movff	timer0_int_handler@F5117,timer0_int_handler@motorcomm
  7027  00173C  C04C  F08D         	movff	timer0_int_handler@F5117+1,timer0_int_handler@motorcomm+1
  7028                           
  7029                           ; BSR set to: 0
  7030                           ;user_interrupts.c: 46: motorMove(0x00, 0x00, 0);
  7031  001740  0100               	movlb	0	; () banked
  7032  001742  6F8A               	movwf	??_timer0_int_handler& (0+255),b
  7033  001744  0E00               	movlw	0
  7034  001746  0100               	movlb	0	; () banked
  7035  001748  0100               	movlb	0	; () banked
  7036  00174A  6F85               	movwf	motorMove@right& (0+255),b
  7037  00174C  0100               	movlb	0	; () banked
  7038  00174E  518A               	movf	??_timer0_int_handler& (0+255),w,b
  7039  001750  0100               	movlb	0	; () banked
  7040  001752  6F8B               	movwf	(??_timer0_int_handler+1)& (0+255),b
  7041  001754  0E00               	movlw	0
  7042  001756  0100               	movlb	0	; () banked
  7043  001758  0100               	movlb	0	; () banked
  7044  00175A  6F86               	movwf	motorMove@distance& (0+255),b
  7045  00175C  0100               	movlb	0	; () banked
  7046  00175E  518B               	movf	(??_timer0_int_handler+1)& (0+255),w,b
  7047  001760  0E00               	movlw	0
  7048  001762  EC0C  F010         	call	_motorMove
  7049  001766  0012               	return	
  7050  001768                     __end_of_timer0_int_handler:
  7051                           	opt stack 0
  7052                           pclatu	equ	0xFFB
  7053                           pclath	equ	0xFFA
  7054                           tblptru	equ	0xFF8
  7055                           tblptrh	equ	0xFF7
  7056                           tblptrl	equ	0xFF6
  7057                           tablat	equ	0xFF5
  7058                           prodh	equ	0xFF4
  7059                           prodl	equ	0xFF3
  7060                           intcon	equ	0xFF2
  7061                           intcon2	equ	0xFF1
  7062                           postinc0	equ	0xFEE
  7063                           fsr0h	equ	0xFEA
  7064                           fsr0l	equ	0xFE9
  7065                           wreg	equ	0xFE8
  7066                           indf1	equ	0xFE7
  7067                           postinc1	equ	0xFE6
  7068                           postdec1	equ	0xFE5
  7069                           fsr1h	equ	0xFE2
  7070                           fsr1l	equ	0xFE1
  7071                           bsr	equ	0xFE0
  7072                           indf2	equ	0xFDF
  7073                           postinc2	equ	0xFDE
  7074                           postdec2	equ	0xFDD
  7075                           fsr2h	equ	0xFDA
  7076                           fsr2l	equ	0xFD9
  7077                           status	equ	0xFD8
  7078                           
  7079 ;; *************** function _i2c_int_handler *****************
  7080 ;; Defined at:
  7081 ;;		line 139 in file "../src/my_i2c.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;		None
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;		None
  7086 ;; Return value:  Size  Location     Type
  7087 ;;		None               void
  7088 ;; Registers used:
  7089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7095 ;;      Params:         0       0       0       0       0
  7096 ;;      Locals:         0       0       0       0       0
  7097 ;;      Temps:          0       0       0       0       0
  7098 ;;      Totals:         0       0       0       0       0
  7099 ;;Total ram usage:        0 bytes
  7100 ;; Hardware stack levels used:    1
  7101 ;; Hardware stack levels required when called:    4
  7102 ;; This function calls:
  7103 ;;		_i2c_slave_int_handler
  7104 ;; This function is called by:
  7105 ;;		_InterruptHandlerHigh
  7106 ;; This function uses a non-reentrant model
  7107 ;;
  7108                           
  7109                           	psect	text44
  7110  0022FE                     __ptext44:
  7111                           	opt stack 0
  7112  0022FE                     _i2c_int_handler:
  7113                           	opt stack 16
  7114                           
  7115                           ;my_i2c.c: 143: i2c_slave_int_handler();
  7116                           
  7117                           ;incstack = 0
  7118  0022FE  EC65  F000         	call	_i2c_slave_int_handler	;wreg free
  7119  002302  0012               	return	
  7120  002304                     __end_of_i2c_int_handler:
  7121                           	opt stack 0
  7122                           pclatu	equ	0xFFB
  7123                           pclath	equ	0xFFA
  7124                           tblptru	equ	0xFF8
  7125                           tblptrh	equ	0xFF7
  7126                           tblptrl	equ	0xFF6
  7127                           tablat	equ	0xFF5
  7128                           prodh	equ	0xFF4
  7129                           prodl	equ	0xFF3
  7130                           intcon	equ	0xFF2
  7131                           intcon2	equ	0xFF1
  7132                           postinc0	equ	0xFEE
  7133                           fsr0h	equ	0xFEA
  7134                           fsr0l	equ	0xFE9
  7135                           wreg	equ	0xFE8
  7136                           indf1	equ	0xFE7
  7137                           postinc1	equ	0xFE6
  7138                           postdec1	equ	0xFE5
  7139                           fsr1h	equ	0xFE2
  7140                           fsr1l	equ	0xFE1
  7141                           bsr	equ	0xFE0
  7142                           indf2	equ	0xFDF
  7143                           postinc2	equ	0xFDE
  7144                           postdec2	equ	0xFDD
  7145                           fsr2h	equ	0xFDA
  7146                           fsr2l	equ	0xFD9
  7147                           status	equ	0xFD8
  7148                           
  7149 ;; *************** function _i2c_slave_int_handler *****************
  7150 ;; Defined at:
  7151 ;;		line 248 in file "../src/my_i2c.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;		None
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;  dist            5   33[BANK0 ] unsigned char [5]
  7156 ;;  sensormsg       5   28[BANK0 ] unsigned char [5]
  7157 ;;  length          2   45[BANK0 ] int 
  7158 ;;  error_buf       3   38[BANK0 ] unsigned char [3]
  7159 ;;  data_read       1   48[BANK0 ] unsigned char 
  7160 ;;  msg_ready       1   47[BANK0 ] unsigned char 
  7161 ;;  msg_to_send     1   44[BANK0 ] unsigned char 
  7162 ;;  i2c_data        1   43[BANK0 ] unsigned char 
  7163 ;;  overrun_erro    1   42[BANK0 ] unsigned char 
  7164 ;;  data_written    1   41[BANK0 ] unsigned char 
  7165 ;; Return value:  Size  Location     Type
  7166 ;;		None               void
  7167 ;; Registers used:
  7168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7174 ;;      Params:         0       0       0       0       0
  7175 ;;      Locals:         0      21       0       0       0
  7176 ;;      Temps:          0       2       0       0       0
  7177 ;;      Totals:         0      23       0       0       0
  7178 ;;Total ram usage:       23 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; Hardware stack levels required when called:    3
  7181 ;; This function calls:
  7182 ;;		_ToMainHigh_sendmsg
  7183 ;;		_handle_start
  7184 ;;		_motorMove
  7185 ;;		_start_i2c_slave_reply
  7186 ;; This function is called by:
  7187 ;;		_i2c_int_handler
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           	psect	text45
  7192  0000CA                     __ptext45:
  7193                           	opt stack 0
  7194  0000CA                     _i2c_slave_int_handler:
  7195                           	opt stack 16
  7196                           
  7197                           ;my_i2c.c: 249: unsigned char i2c_data;
  7198                           ;my_i2c.c: 250: unsigned char data_read = 0;
  7199                           
  7200                           ;incstack = 0
  7201  0000CA  0100               	movlb	0	; () banked
  7202  0000CC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7203  0000CE  0E00               	movlw	0
  7204  0000D0  0100               	movlb	0	; () banked
  7205  0000D2  0100               	movlb	0	; () banked
  7206  0000D4  6FB0               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7207  0000D6  0100               	movlb	0	; () banked
  7208  0000D8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7209                           
  7210                           ;my_i2c.c: 251: unsigned char data_written = 0;
  7211  0000DA  0100               	movlb	0	; () banked
  7212  0000DC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7213  0000DE  0E00               	movlw	0
  7214  0000E0  0100               	movlb	0	; () banked
  7215  0000E2  0100               	movlb	0	; () banked
  7216  0000E4  6FA9               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7217  0000E6  0100               	movlb	0	; () banked
  7218  0000E8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7219                           
  7220                           ;my_i2c.c: 252: unsigned char msg_ready = 0;
  7221  0000EA  0100               	movlb	0	; () banked
  7222  0000EC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7223  0000EE  0E00               	movlw	0
  7224  0000F0  0100               	movlb	0	; () banked
  7225  0000F2  0100               	movlb	0	; () banked
  7226  0000F4  6FAF               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7227  0000F6  0100               	movlb	0	; () banked
  7228  0000F8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7229                           
  7230                           ;my_i2c.c: 253: unsigned char msg_to_send = 0;
  7231  0000FA  0100               	movlb	0	; () banked
  7232  0000FC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7233  0000FE  0E00               	movlw	0
  7234  000100  0100               	movlb	0	; () banked
  7235  000102  0100               	movlb	0	; () banked
  7236  000104  6FAC               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7237  000106  0100               	movlb	0	; () banked
  7238  000108  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7239                           
  7240                           ;my_i2c.c: 254: unsigned char overrun_error = 0;
  7241  00010A  0100               	movlb	0	; () banked
  7242  00010C  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7243  00010E  0E00               	movlw	0
  7244  000110  0100               	movlb	0	; () banked
  7245  000112  0100               	movlb	0	; () banked
  7246  000114  6FAA               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7247  000116  0100               	movlb	0	; () banked
  7248  000118  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;my_i2c.c: 255: unsigned char error_buf[3];
  7252                           ;my_i2c.c: 258: if (SSPCON1bits.SSPOV == 1) {
  7253  00011A  ACC6               	btfss	4038,6,c	;volatile
  7254  00011C  D029               	goto	i2l4269
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;my_i2c.c: 259: SSPCON1bits.SSPOV = 0;
  7258  00011E  9CC6               	bcf	4038,6,c	;volatile
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;my_i2c.c: 263: ic_ptr->status = 0x5;
  7262  000120  0100               	movlb	0	; () banked
  7263  000122  EE20 F00D          	lfsr	2,13
  7264  000126  0100               	movlb	0	; () banked
  7265  000128  51C9               	movf	_ic_ptr& (0+255),w,b
  7266  00012A  26D9               	addwf	fsr2l,f,c
  7267  00012C  0100               	movlb	0	; () banked
  7268  00012E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7269  000130  22DA               	addwfc	fsr2h,f,c
  7270  000132  0E05               	movlw	5
  7271  000134  6EDF               	movwf	indf2,c
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;my_i2c.c: 264: overrun_error = 1;
  7275  000136  0100               	movlb	0	; () banked
  7276  000138  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7277  00013A  0E01               	movlw	1
  7278  00013C  0100               	movlb	0	; () banked
  7279  00013E  0100               	movlb	0	; () banked
  7280  000140  6FAA               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7281  000142  0100               	movlb	0	; () banked
  7282  000144  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7283                           
  7284                           ; BSR set to: 0
  7285                           ;my_i2c.c: 265: ic_ptr->error_count++;
  7286  000146  0100               	movlb	0	; () banked
  7287  000148  EE20 F00F          	lfsr	2,15
  7288  00014C  0100               	movlb	0	; () banked
  7289  00014E  51C9               	movf	_ic_ptr& (0+255),w,b
  7290  000150  26D9               	addwf	fsr2l,f,c
  7291  000152  0100               	movlb	0	; () banked
  7292  000154  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7293  000156  22DA               	addwfc	fsr2h,f,c
  7294  000158  2ADF               	incf	indf2,f,c
  7295                           
  7296                           ; BSR set to: 0
  7297                           ;my_i2c.c: 266: ic_ptr->error_code = 0x4;
  7298  00015A  0100               	movlb	0	; () banked
  7299  00015C  EE20 F00E          	lfsr	2,14
  7300  000160  0100               	movlb	0	; () banked
  7301  000162  51C9               	movf	_ic_ptr& (0+255),w,b
  7302  000164  26D9               	addwf	fsr2l,f,c
  7303  000166  0100               	movlb	0	; () banked
  7304  000168  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7305  00016A  22DA               	addwfc	fsr2h,f,c
  7306  00016C  0E04               	movlw	4
  7307  00016E  6EDF               	movwf	indf2,c
  7308  000170                     i2l4269:
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;my_i2c.c: 267: }
  7312                           ;my_i2c.c: 269: if (SSPSTATbits.BF == 1) {
  7313  000170  A0C7               	btfss	4039,0,c	;volatile
  7314  000172  D00A               	goto	i2l4275
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;my_i2c.c: 270: i2c_data = SSPBUF;
  7318  000174  CFC9 F0AB          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;my_i2c.c: 271: data_read = 1;
  7322  000178  0100               	movlb	0	; () banked
  7323  00017A  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7324  00017C  0E01               	movlw	1
  7325  00017E  0100               	movlb	0	; () banked
  7326  000180  0100               	movlb	0	; () banked
  7327  000182  6FB0               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7328  000184  0100               	movlb	0	; () banked
  7329  000186  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7330  000188                     i2l4275:
  7331                           
  7332                           ; BSR set to: 0
  7333                           ;my_i2c.c: 272: }
  7334                           ;my_i2c.c: 274: if (!overrun_error) {
  7335  000188  0100               	movlb	0	; () banked
  7336  00018A  0100               	movlb	0	; () banked
  7337  00018C  67AA               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  7338  00018E  D1CE               	goto	i2l360
  7339  000190  D1B7               	goto	i2l4363
  7340  000192                     i2l362:
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;my_i2c.c: 277: {
  7344                           ;my_i2c.c: 279: if (SSPSTATbits.S == 1) {
  7345  000192  A6C7               	btfss	4039,3,c	;volatile
  7346  000194  D1CB               	goto	i2l360
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;my_i2c.c: 280: handle_start(data_read);
  7350  000196  0100               	movlb	0	; () banked
  7351  000198  0100               	movlb	0	; () banked
  7352  00019A  51B0               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7353  00019C  EC89  F009         	call	_handle_start
  7354                           
  7355                           ;my_i2c.c: 282: if (ic_ptr->status == 0x8) {
  7356  0001A0  0100               	movlb	0	; () banked
  7357  0001A2  EE20 F00D          	lfsr	2,13
  7358  0001A6  0100               	movlb	0	; () banked
  7359  0001A8  51C9               	movf	_ic_ptr& (0+255),w,b
  7360  0001AA  26D9               	addwf	fsr2l,f,c
  7361  0001AC  0100               	movlb	0	; () banked
  7362  0001AE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7363  0001B0  22DA               	addwfc	fsr2h,f,c
  7364  0001B2  0E08               	movlw	8
  7365  0001B4  62DF               	cpfseq	indf2,c
  7366  0001B6  D1BA               	goto	i2l360
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;my_i2c.c: 283: data_read = 0;
  7370  0001B8  0100               	movlb	0	; () banked
  7371  0001BA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7372  0001BC  0E00               	movlw	0
  7373  0001BE  0100               	movlb	0	; () banked
  7374  0001C0  0100               	movlb	0	; () banked
  7375  0001C2  6FB0               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7376  0001C4  0100               	movlb	0	; () banked
  7377  0001C6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7378                           
  7379                           ;my_i2c.c: 284: msg_to_send = 1;
  7380  0001C8  0100               	movlb	0	; () banked
  7381  0001CA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7382  0001CC  0E01               	movlw	1
  7383  0001CE  0100               	movlb	0	; () banked
  7384  0001D0  0100               	movlb	0	; () banked
  7385  0001D2  6FAC               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7386  0001D4  D187               	goto	L6
  7387  0001D6                     i2l366:
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;my_i2c.c: 290: {
  7391                           ;my_i2c.c: 292: if (SSPSTATbits.P == 1) {
  7392  0001D6  A8C7               	btfss	4039,4,c	;volatile
  7393  0001D8  D030               	goto	i2l4295
  7394                           
  7395                           ; BSR set to: 0
  7396                           ;my_i2c.c: 295: ic_ptr->event_count++;
  7397  0001DA  0100               	movlb	0	; () banked
  7398  0001DC  EE20 F00C          	lfsr	2,12
  7399  0001E0  0100               	movlb	0	; () banked
  7400  0001E2  51C9               	movf	_ic_ptr& (0+255),w,b
  7401  0001E4  26D9               	addwf	fsr2l,f,c
  7402  0001E6  0100               	movlb	0	; () banked
  7403  0001E8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7404  0001EA  22DA               	addwfc	fsr2h,f,c
  7405  0001EC  2ADF               	incf	indf2,f,c
  7406                           
  7407                           ; BSR set to: 0
  7408                           ;my_i2c.c: 296: if (data_read) {
  7409  0001EE  0100               	movlb	0	; () banked
  7410  0001F0  0100               	movlb	0	; () banked
  7411  0001F2  51B0               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7412  0001F4  B4D8               	btfsc	status,2,c
  7413  0001F6  D179               	goto	L8
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;my_i2c.c: 297: if (SSPSTATbits.D_A == 0) {
  7417  0001F8  BAC7               	btfsc	4039,5,c	;volatile
  7418  0001FA  D009               	goto	i2l4293
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;my_i2c.c: 298: msg_ready = 1;
  7422  0001FC  0100               	movlb	0	; () banked
  7423  0001FE  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7424  000200  0E01               	movlw	1
  7425  000202  0100               	movlb	0	; () banked
  7426  000204  0100               	movlb	0	; () banked
  7427  000206  6FAF               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7428  000208  0100               	movlb	0	; () banked
  7429  00020A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7430                           
  7431                           ;my_i2c.c: 299: } else {
  7432  00020C  D16E               	goto	L8
  7433  00020E                     i2l4293:
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;my_i2c.c: 300: ic_ptr->error_count++;
  7437  00020E  0100               	movlb	0	; () banked
  7438  000210  EE20 F00F          	lfsr	2,15
  7439  000214  0100               	movlb	0	; () banked
  7440  000216  51C9               	movf	_ic_ptr& (0+255),w,b
  7441  000218  26D9               	addwf	fsr2l,f,c
  7442  00021A  0100               	movlb	0	; () banked
  7443  00021C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7444  00021E  22DA               	addwfc	fsr2h,f,c
  7445  000220  2ADF               	incf	indf2,f,c
  7446                           
  7447                           ;my_i2c.c: 301: ic_ptr->error_code = 0x6;
  7448  000222  0100               	movlb	0	; () banked
  7449  000224  EE20 F00E          	lfsr	2,14
  7450  000228  0100               	movlb	0	; () banked
  7451  00022A  51C9               	movf	_ic_ptr& (0+255),w,b
  7452  00022C  26D9               	addwf	fsr2l,f,c
  7453  00022E  0100               	movlb	0	; () banked
  7454  000230  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7455  000232  22DA               	addwfc	fsr2h,f,c
  7456  000234  0E06               	movlw	6
  7457  000236  6EDF               	movwf	indf2,c
  7458                           
  7459                           ; BSR set to: 0
  7460  000238  D158               	goto	L8
  7461  00023A                     i2l4295:
  7462                           
  7463                           ; BSR set to: 0
  7464  00023A  0100               	movlb	0	; () banked
  7465  00023C  0100               	movlb	0	; () banked
  7466  00023E  51B0               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7467  000240  B4D8               	btfsc	status,2,c
  7468  000242  D174               	goto	i2l360
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;my_i2c.c: 306: ic_ptr->event_count++;
  7472  000244  0100               	movlb	0	; () banked
  7473  000246  EE20 F00C          	lfsr	2,12
  7474  00024A  0100               	movlb	0	; () banked
  7475  00024C  51C9               	movf	_ic_ptr& (0+255),w,b
  7476  00024E  26D9               	addwf	fsr2l,f,c
  7477  000250  0100               	movlb	0	; () banked
  7478  000252  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7479  000254  22DA               	addwfc	fsr2h,f,c
  7480  000256  2ADF               	incf	indf2,f,c
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;my_i2c.c: 307: if (SSPSTATbits.D_A == 0) {
  7484  000258  BAC7               	btfsc	4039,5,c	;volatile
  7485  00025A  D019               	goto	i2l4311
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;my_i2c.c: 308: if (SSPSTATbits.R_W == 0) {
  7489  00025C  B4C7               	btfsc	4039,2,c	;volatile
  7490  00025E  D00B               	goto	i2l4305
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;my_i2c.c: 309: ic_ptr->status = 0x7;
  7494  000260  0100               	movlb	0	; () banked
  7495  000262  EE20 F00D          	lfsr	2,13
  7496  000266  0100               	movlb	0	; () banked
  7497  000268  51C9               	movf	_ic_ptr& (0+255),w,b
  7498  00026A  26D9               	addwf	fsr2l,f,c
  7499  00026C  0100               	movlb	0	; () banked
  7500  00026E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7501  000270  22DA               	addwfc	fsr2h,f,c
  7502  000272  0E07               	movlw	7
  7503  000274  D076               	goto	L5
  7504  000276                     i2l4305:
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;my_i2c.c: 311: ic_ptr->status = 0x8;
  7508  000276  0100               	movlb	0	; () banked
  7509  000278  EE20 F00D          	lfsr	2,13
  7510  00027C  0100               	movlb	0	; () banked
  7511  00027E  51C9               	movf	_ic_ptr& (0+255),w,b
  7512  000280  26D9               	addwf	fsr2l,f,c
  7513  000282  0100               	movlb	0	; () banked
  7514  000284  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7515  000286  22DA               	addwfc	fsr2h,f,c
  7516  000288  0E08               	movlw	8
  7517  00028A  6EDF               	movwf	indf2,c
  7518  00028C  D11D               	goto	L9
  7519  00028E                     i2l4311:
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;my_i2c.c: 317: ic_ptr->error_count++;
  7523  00028E  0100               	movlb	0	; () banked
  7524  000290  EE20 F00F          	lfsr	2,15
  7525  000294  0100               	movlb	0	; () banked
  7526  000296  51C9               	movf	_ic_ptr& (0+255),w,b
  7527  000298  26D9               	addwf	fsr2l,f,c
  7528  00029A  0100               	movlb	0	; () banked
  7529  00029C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7530  00029E  22DA               	addwfc	fsr2h,f,c
  7531  0002A0  2ADF               	incf	indf2,f,c
  7532                           
  7533                           ;my_i2c.c: 318: ic_ptr->status = 0x5;
  7534  0002A2  0100               	movlb	0	; () banked
  7535  0002A4  EE20 F00D          	lfsr	2,13
  7536  0002A8  0100               	movlb	0	; () banked
  7537  0002AA  51C9               	movf	_ic_ptr& (0+255),w,b
  7538  0002AC  26D9               	addwf	fsr2l,f,c
  7539  0002AE  0100               	movlb	0	; () banked
  7540  0002B0  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7541  0002B2  22DA               	addwfc	fsr2h,f,c
  7542  0002B4  0E05               	movlw	5
  7543  0002B6  6EDF               	movwf	indf2,c
  7544                           
  7545                           ;my_i2c.c: 319: ic_ptr->error_code = 0x6;
  7546  0002B8  0100               	movlb	0	; () banked
  7547  0002BA  EE20 F00E          	lfsr	2,14
  7548  0002BE  0100               	movlb	0	; () banked
  7549  0002C0  51C9               	movf	_ic_ptr& (0+255),w,b
  7550  0002C2  26D9               	addwf	fsr2l,f,c
  7551  0002C4  0100               	movlb	0	; () banked
  7552  0002C6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7553  0002C8  22DA               	addwfc	fsr2h,f,c
  7554  0002CA  0E06               	movlw	6
  7555  0002CC  D04A               	goto	L5
  7556  0002CE                     i2l4313:
  7557                           
  7558                           ; BSR set to: 0
  7559                           ;my_i2c.c: 325: {
  7560                           ;my_i2c.c: 326: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7561  0002CE  0100               	movlb	0	; () banked
  7562  0002D0  EE20 F01B          	lfsr	2,27
  7563  0002D4  0100               	movlb	0	; () banked
  7564  0002D6  51C9               	movf	_ic_ptr& (0+255),w,b
  7565  0002D8  26D9               	addwf	fsr2l,f,c
  7566  0002DA  0100               	movlb	0	; () banked
  7567  0002DC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7568  0002DE  22DA               	addwfc	fsr2h,f,c
  7569  0002E0  50DF               	movf	indf2,w,c
  7570  0002E2  0100               	movlb	0	; () banked
  7571  0002E4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7572  0002E6  0100               	movlb	0	; () banked
  7573  0002E8  EE20 F01A          	lfsr	2,26
  7574  0002EC  0100               	movlb	0	; () banked
  7575  0002EE  51C9               	movf	_ic_ptr& (0+255),w,b
  7576  0002F0  26D9               	addwf	fsr2l,f,c
  7577  0002F2  0100               	movlb	0	; () banked
  7578  0002F4  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7579  0002F6  22DA               	addwfc	fsr2h,f,c
  7580  0002F8  50DF               	movf	indf2,w,c
  7581  0002FA  0100               	movlb	0	; () banked
  7582  0002FC  5D9A               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  7583  0002FE  B0D8               	btfsc	status,0,c
  7584  000300  D0F4               	goto	L8
  7585                           
  7586                           ; BSR set to: 0
  7587                           ;my_i2c.c: 327: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7588  000302  0100               	movlb	0	; () banked
  7589  000304  EE20 F01B          	lfsr	2,27
  7590  000308  0100               	movlb	0	; () banked
  7591  00030A  51C9               	movf	_ic_ptr& (0+255),w,b
  7592  00030C  26D9               	addwf	fsr2l,f,c
  7593  00030E  0100               	movlb	0	; () banked
  7594  000310  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7595  000312  22DA               	addwfc	fsr2h,f,c
  7596  000314  50DF               	movf	indf2,w,c
  7597  000316  0100               	movlb	0	; () banked
  7598  000318  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7599  00031A  0100               	movlb	0	; () banked
  7600  00031C  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7601  00031E  0D01               	mullw	1
  7602  000320  0E10               	movlw	16
  7603  000322  26F3               	addwf	prodl,f,c
  7604  000324  0E00               	movlw	0
  7605  000326  22F4               	addwfc	prodh,f,c
  7606  000328  50F3               	movf	prodl,w,c
  7607  00032A  0100               	movlb	0	; () banked
  7608  00032C  0100               	movlb	0	; () banked
  7609  00032E  25C9               	addwf	_ic_ptr& (0+255),w,b
  7610  000330  6ED9               	movwf	fsr2l,c
  7611  000332  50F4               	movf	prodh,w,c
  7612  000334  0100               	movlb	0	; () banked
  7613  000336  0100               	movlb	0	; () banked
  7614  000338  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7615  00033A  6EDA               	movwf	fsr2h,c
  7616  00033C  50DF               	movf	indf2,w,c
  7617  00033E  6EC9               	movwf	4041,c	;volatile
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;my_i2c.c: 328: ic_ptr->outbufind++;
  7621  000340  0100               	movlb	0	; () banked
  7622  000342  EE20 F01B          	lfsr	2,27
  7623  000346  0100               	movlb	0	; () banked
  7624  000348  51C9               	movf	_ic_ptr& (0+255),w,b
  7625  00034A  26D9               	addwf	fsr2l,f,c
  7626  00034C  0100               	movlb	0	; () banked
  7627  00034E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7628  000350  22DA               	addwfc	fsr2h,f,c
  7629  000352  2ADF               	incf	indf2,f,c
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;my_i2c.c: 329: data_written = 1;
  7633  000354  0100               	movlb	0	; () banked
  7634  000356  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7635  000358  0E01               	movlw	1
  7636  00035A  0100               	movlb	0	; () banked
  7637  00035C  0100               	movlb	0	; () banked
  7638  00035E  6FA9               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7639  000360  D0C1               	goto	L6
  7640  000362                     L5:
  7641  000362  6EDF               	movwf	indf2,c
  7642  000364  D0E3               	goto	i2l360
  7643  000366                     i2l380:
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;my_i2c.c: 337: {
  7647                           ;my_i2c.c: 339: if (SSPSTATbits.P == 1) {
  7648  000366  A8C7               	btfss	4039,4,c	;volatile
  7649  000368  D062               	goto	i2l4341
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;my_i2c.c: 341: ic_ptr->event_count++;
  7653  00036A  0100               	movlb	0	; () banked
  7654  00036C  EE20 F00C          	lfsr	2,12
  7655  000370  0100               	movlb	0	; () banked
  7656  000372  51C9               	movf	_ic_ptr& (0+255),w,b
  7657  000374  26D9               	addwf	fsr2l,f,c
  7658  000376  0100               	movlb	0	; () banked
  7659  000378  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7660  00037A  22DA               	addwfc	fsr2h,f,c
  7661  00037C  2ADF               	incf	indf2,f,c
  7662                           
  7663                           ; BSR set to: 0
  7664                           ;my_i2c.c: 342: if (data_read) {
  7665  00037E  0100               	movlb	0	; () banked
  7666  000380  0100               	movlb	0	; () banked
  7667  000382  51B0               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7668  000384  B4D8               	btfsc	status,2,c
  7669  000386  D04A               	goto	i2l4337
  7670                           
  7671                           ; BSR set to: 0
  7672                           ;my_i2c.c: 343: if (SSPSTATbits.D_A == 1) {
  7673  000388  AAC7               	btfss	4039,5,c	;volatile
  7674  00038A  D027               	goto	i2l4335
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;my_i2c.c: 344: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7678  00038C  0100               	movlb	0	; () banked
  7679  00038E  EE20 F00A          	lfsr	2,10
  7680  000392  0100               	movlb	0	; () banked
  7681  000394  51C9               	movf	_ic_ptr& (0+255),w,b
  7682  000396  26D9               	addwf	fsr2l,f,c
  7683  000398  0100               	movlb	0	; () banked
  7684  00039A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7685  00039C  22DA               	addwfc	fsr2h,f,c
  7686  00039E  50DF               	movf	indf2,w,c
  7687  0003A0  0100               	movlb	0	; () banked
  7688  0003A2  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7689  0003A4  0100               	movlb	0	; () banked
  7690  0003A6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7691  0003A8  0D01               	mullw	1
  7692  0003AA  50F3               	movf	prodl,w,c
  7693  0003AC  0100               	movlb	0	; () banked
  7694  0003AE  0100               	movlb	0	; () banked
  7695  0003B0  25C9               	addwf	_ic_ptr& (0+255),w,b
  7696  0003B2  6ED9               	movwf	fsr2l,c
  7697  0003B4  50F4               	movf	prodh,w,c
  7698  0003B6  0100               	movlb	0	; () banked
  7699  0003B8  0100               	movlb	0	; () banked
  7700  0003BA  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7701  0003BC  6EDA               	movwf	fsr2h,c
  7702  0003BE  0100               	movlb	0	; () banked
  7703  0003C0  C0AB  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7704                           
  7705                           ; BSR set to: 0
  7706                           ;my_i2c.c: 345: ic_ptr->buflen++;
  7707  0003C4  0100               	movlb	0	; () banked
  7708  0003C6  EE20 F00A          	lfsr	2,10
  7709  0003CA  0100               	movlb	0	; () banked
  7710  0003CC  51C9               	movf	_ic_ptr& (0+255),w,b
  7711  0003CE  26D9               	addwf	fsr2l,f,c
  7712  0003D0  0100               	movlb	0	; () banked
  7713  0003D2  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7714  0003D4  22DA               	addwfc	fsr2h,f,c
  7715  0003D6  2ADF               	incf	indf2,f,c
  7716  0003D8  D021               	goto	i2l4337
  7717  0003DA                     i2l4335:
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;my_i2c.c: 348: ic_ptr->error_count++;
  7721  0003DA  0100               	movlb	0	; () banked
  7722  0003DC  EE20 F00F          	lfsr	2,15
  7723  0003E0  0100               	movlb	0	; () banked
  7724  0003E2  51C9               	movf	_ic_ptr& (0+255),w,b
  7725  0003E4  26D9               	addwf	fsr2l,f,c
  7726  0003E6  0100               	movlb	0	; () banked
  7727  0003E8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7728  0003EA  22DA               	addwfc	fsr2h,f,c
  7729  0003EC  2ADF               	incf	indf2,f,c
  7730                           
  7731                           ;my_i2c.c: 349: ic_ptr->error_code = 0x6;
  7732  0003EE  0100               	movlb	0	; () banked
  7733  0003F0  EE20 F00E          	lfsr	2,14
  7734  0003F4  0100               	movlb	0	; () banked
  7735  0003F6  51C9               	movf	_ic_ptr& (0+255),w,b
  7736  0003F8  26D9               	addwf	fsr2l,f,c
  7737  0003FA  0100               	movlb	0	; () banked
  7738  0003FC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7739  0003FE  22DA               	addwfc	fsr2h,f,c
  7740  000400  0E06               	movlw	6
  7741  000402  6EDF               	movwf	indf2,c
  7742                           
  7743                           ;my_i2c.c: 350: ic_ptr->status = 0x5;
  7744  000404  0100               	movlb	0	; () banked
  7745  000406  EE20 F00D          	lfsr	2,13
  7746  00040A  0100               	movlb	0	; () banked
  7747  00040C  51C9               	movf	_ic_ptr& (0+255),w,b
  7748  00040E  26D9               	addwf	fsr2l,f,c
  7749  000410  0100               	movlb	0	; () banked
  7750  000412  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7751  000414  22DA               	addwfc	fsr2h,f,c
  7752  000416  0E05               	movlw	5
  7753  000418  6EDF               	movwf	indf2,c
  7754  00041A  D067               	goto	L8
  7755  00041C                     i2l4337:
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;my_i2c.c: 353: msg_ready = 1;
  7759  00041C  0100               	movlb	0	; () banked
  7760  00041E  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7761  000420  0E01               	movlw	1
  7762  000422  0100               	movlb	0	; () banked
  7763  000424  0100               	movlb	0	; () banked
  7764  000426  6FAF               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7765  000428  0100               	movlb	0	; () banked
  7766  00042A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7767                           
  7768                           ; BSR set to: 0
  7769  00042C  D05E               	goto	L8
  7770  00042E                     i2l4341:
  7771                           
  7772                           ; BSR set to: 0
  7773  00042E  0100               	movlb	0	; () banked
  7774  000430  0100               	movlb	0	; () banked
  7775  000432  51B0               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7776  000434  B4D8               	btfsc	status,2,c
  7777  000436  D07A               	goto	i2l360
  7778                           
  7779                           ; BSR set to: 0
  7780                           ;my_i2c.c: 357: ic_ptr->event_count++;
  7781  000438  0100               	movlb	0	; () banked
  7782  00043A  EE20 F00C          	lfsr	2,12
  7783  00043E  0100               	movlb	0	; () banked
  7784  000440  51C9               	movf	_ic_ptr& (0+255),w,b
  7785  000442  26D9               	addwf	fsr2l,f,c
  7786  000444  0100               	movlb	0	; () banked
  7787  000446  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7788  000448  22DA               	addwfc	fsr2h,f,c
  7789  00044A  2ADF               	incf	indf2,f,c
  7790                           
  7791                           ; BSR set to: 0
  7792                           ;my_i2c.c: 358: if (SSPSTATbits.D_A == 1) {
  7793  00044C  AAC7               	btfss	4039,5,c	;volatile
  7794  00044E  D027               	goto	i2l388
  7795                           
  7796                           ; BSR set to: 0
  7797                           ;my_i2c.c: 359: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7798  000450  0100               	movlb	0	; () banked
  7799  000452  EE20 F00A          	lfsr	2,10
  7800  000456  0100               	movlb	0	; () banked
  7801  000458  51C9               	movf	_ic_ptr& (0+255),w,b
  7802  00045A  26D9               	addwf	fsr2l,f,c
  7803  00045C  0100               	movlb	0	; () banked
  7804  00045E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7805  000460  22DA               	addwfc	fsr2h,f,c
  7806  000462  50DF               	movf	indf2,w,c
  7807  000464  0100               	movlb	0	; () banked
  7808  000466  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7809  000468  0100               	movlb	0	; () banked
  7810  00046A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7811  00046C  0D01               	mullw	1
  7812  00046E  50F3               	movf	prodl,w,c
  7813  000470  0100               	movlb	0	; () banked
  7814  000472  0100               	movlb	0	; () banked
  7815  000474  25C9               	addwf	_ic_ptr& (0+255),w,b
  7816  000476  6ED9               	movwf	fsr2l,c
  7817  000478  50F4               	movf	prodh,w,c
  7818  00047A  0100               	movlb	0	; () banked
  7819  00047C  0100               	movlb	0	; () banked
  7820  00047E  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7821  000480  6EDA               	movwf	fsr2h,c
  7822  000482  0100               	movlb	0	; () banked
  7823  000484  C0AB  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;my_i2c.c: 360: ic_ptr->buflen++;
  7827  000488  0100               	movlb	0	; () banked
  7828  00048A  EE20 F00A          	lfsr	2,10
  7829  00048E  0100               	movlb	0	; () banked
  7830  000490  51C9               	movf	_ic_ptr& (0+255),w,b
  7831  000492  26D9               	addwf	fsr2l,f,c
  7832  000494  0100               	movlb	0	; () banked
  7833  000496  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7834  000498  22DA               	addwfc	fsr2h,f,c
  7835  00049A  2ADF               	incf	indf2,f,c
  7836                           
  7837                           ;my_i2c.c: 361: } else {
  7838  00049C  D047               	goto	i2l360
  7839  00049E                     i2l388:
  7840                           
  7841                           ; BSR set to: 0
  7842                           ;my_i2c.c: 362: if (SSPSTATbits.R_W == 1) {
  7843  00049E  A4C7               	btfss	4039,2,c	;volatile
  7844  0004A0  D6B6               	goto	i2l4293
  7845                           
  7846                           ; BSR set to: 0
  7847                           ;my_i2c.c: 363: ic_ptr->status = 0x8;
  7848  0004A2  0100               	movlb	0	; () banked
  7849  0004A4  EE20 F00D          	lfsr	2,13
  7850  0004A8  0100               	movlb	0	; () banked
  7851  0004AA  51C9               	movf	_ic_ptr& (0+255),w,b
  7852  0004AC  26D9               	addwf	fsr2l,f,c
  7853  0004AE  0100               	movlb	0	; () banked
  7854  0004B0  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7855  0004B2  22DA               	addwfc	fsr2h,f,c
  7856  0004B4  0E08               	movlw	8
  7857  0004B6  6EDF               	movwf	indf2,c
  7858                           
  7859                           ; BSR set to: 0
  7860                           ;my_i2c.c: 364: msg_ready = 1;
  7861  0004B8  0100               	movlb	0	; () banked
  7862  0004BA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7863  0004BC  0E01               	movlw	1
  7864  0004BE  0100               	movlb	0	; () banked
  7865  0004C0  0100               	movlb	0	; () banked
  7866  0004C2  6FAF               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7867  0004C4  0100               	movlb	0	; () banked
  7868  0004C6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7869  0004C8                     L9:
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;my_i2c.c: 365: msg_to_send = 1;
  7873  0004C8  0100               	movlb	0	; () banked
  7874  0004CA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7875  0004CC  0E01               	movlw	1
  7876  0004CE  0100               	movlb	0	; () banked
  7877  0004D0  0100               	movlb	0	; () banked
  7878  0004D2  6FAC               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7879  0004D4  0100               	movlb	0	; () banked
  7880  0004D6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;my_i2c.c: 367: data_read = 0;
  7884  0004D8  0100               	movlb	0	; () banked
  7885  0004DA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7886  0004DC  0E00               	movlw	0
  7887  0004DE  0100               	movlb	0	; () banked
  7888  0004E0  0100               	movlb	0	; () banked
  7889  0004E2  6FB0               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7890  0004E4                     L6:
  7891  0004E4  0100               	movlb	0	; () banked
  7892  0004E6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7893                           
  7894                           ;my_i2c.c: 368: } else {
  7895  0004E8  D021               	goto	i2l360
  7896  0004EA                     L8:
  7897                           
  7898                           ;my_i2c.c: 371: ic_ptr->status = 0x5;
  7899  0004EA  0100               	movlb	0	; () banked
  7900  0004EC  EE20 F00D          	lfsr	2,13
  7901  0004F0  0100               	movlb	0	; () banked
  7902  0004F2  51C9               	movf	_ic_ptr& (0+255),w,b
  7903  0004F4  26D9               	addwf	fsr2l,f,c
  7904  0004F6  0100               	movlb	0	; () banked
  7905  0004F8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7906  0004FA  22DA               	addwfc	fsr2h,f,c
  7907  0004FC  0E05               	movlw	5
  7908  0004FE  D731               	goto	L5
  7909  000500                     i2l4363:
  7910                           
  7911                           ; BSR set to: 0
  7912  000500  0100               	movlb	0	; () banked
  7913  000502  EE20 F00D          	lfsr	2,13
  7914  000506  0100               	movlb	0	; () banked
  7915  000508  51C9               	movf	_ic_ptr& (0+255),w,b
  7916  00050A  26D9               	addwf	fsr2l,f,c
  7917  00050C  0100               	movlb	0	; () banked
  7918  00050E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7919  000510  22DA               	addwfc	fsr2h,f,c
  7920  000512  50DF               	movf	indf2,w,c
  7921                           
  7922                           ; Switch size 1, requested type "space"
  7923                           ; Number of cases is 4, Range of values is 5 to 8
  7924                           ; switch strategies available:
  7925                           ; Name         Instructions Cycles
  7926                           ; simple_byte           13     7 (average)
  7927                           ;	Chosen strategy is simple_byte
  7928  000514  0A05               	xorlw	5	; case 5
  7929  000516  B4D8               	btfsc	status,2,c
  7930  000518  D63C               	goto	i2l362
  7931  00051A  0A03               	xorlw	3	; case 6
  7932  00051C  B4D8               	btfsc	status,2,c
  7933  00051E  D65B               	goto	i2l366
  7934  000520  0A01               	xorlw	1	; case 7
  7935  000522  B4D8               	btfsc	status,2,c
  7936  000524  D720               	goto	i2l380
  7937  000526  0A0F               	xorlw	15	; case 8
  7938  000528  B4D8               	btfsc	status,2,c
  7939  00052A  D6D1               	goto	i2l4313
  7940  00052C                     i2l360:
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;my_i2c.c: 378: }
  7944                           ;my_i2c.c: 381: if (data_read || data_written) {
  7945  00052C  0100               	movlb	0	; () banked
  7946  00052E  0100               	movlb	0	; () banked
  7947  000530  67B0               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  7948  000532  D005               	goto	i2l394
  7949                           
  7950                           ; BSR set to: 0
  7951  000534  0100               	movlb	0	; () banked
  7952  000536  0100               	movlb	0	; () banked
  7953  000538  51A9               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  7954  00053A  B4D8               	btfsc	status,2,c
  7955  00053C  D002               	goto	i2l4369
  7956  00053E                     i2l394:
  7957                           
  7958                           ; BSR set to: 0
  7959                           ;my_i2c.c: 383: if (SSPCON1bits.CKP == 0) {
  7960  00053E  A8C6               	btfss	4038,4,c	;volatile
  7961                           
  7962                           ; BSR set to: 0
  7963                           ;my_i2c.c: 384: SSPCON1bits.CKP = 1;
  7964  000540  88C6               	bsf	4038,4,c	;volatile
  7965  000542                     i2l4369:
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;my_i2c.c: 385: }
  7969                           ;my_i2c.c: 386: }
  7970                           ;my_i2c.c: 389: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7971  000542  0100               	movlb	0	; () banked
  7972  000544  EE20 F00A          	lfsr	2,10
  7973  000548  0100               	movlb	0	; () banked
  7974  00054A  51C9               	movf	_ic_ptr& (0+255),w,b
  7975  00054C  26D9               	addwf	fsr2l,f,c
  7976  00054E  0100               	movlb	0	; () banked
  7977  000550  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7978  000552  22DA               	addwfc	fsr2h,f,c
  7979  000554  0E08               	movlw	8
  7980  000556  64DF               	cpfsgt	indf2,c
  7981  000558  D024               	goto	i2l4375
  7982                           
  7983                           ; BSR set to: 0
  7984  00055A  0100               	movlb	0	; () banked
  7985  00055C  0100               	movlb	0	; () banked
  7986  00055E  67AF               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  7987  000560  D020               	goto	i2l4375
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;my_i2c.c: 390: ic_ptr->status = 0x5;
  7991  000562  0100               	movlb	0	; () banked
  7992  000564  EE20 F00D          	lfsr	2,13
  7993  000568  0100               	movlb	0	; () banked
  7994  00056A  51C9               	movf	_ic_ptr& (0+255),w,b
  7995  00056C  26D9               	addwf	fsr2l,f,c
  7996  00056E  0100               	movlb	0	; () banked
  7997  000570  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7998  000572  22DA               	addwfc	fsr2h,f,c
  7999  000574  0E05               	movlw	5
  8000  000576  6EDF               	movwf	indf2,c
  8001                           
  8002                           ;my_i2c.c: 391: ic_ptr->error_count++;
  8003  000578  0100               	movlb	0	; () banked
  8004  00057A  EE20 F00F          	lfsr	2,15
  8005  00057E  0100               	movlb	0	; () banked
  8006  000580  51C9               	movf	_ic_ptr& (0+255),w,b
  8007  000582  26D9               	addwf	fsr2l,f,c
  8008  000584  0100               	movlb	0	; () banked
  8009  000586  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8010  000588  22DA               	addwfc	fsr2h,f,c
  8011  00058A  2ADF               	incf	indf2,f,c
  8012                           
  8013                           ;my_i2c.c: 392: ic_ptr->error_code = 0x7;
  8014  00058C  0100               	movlb	0	; () banked
  8015  00058E  EE20 F00E          	lfsr	2,14
  8016  000592  0100               	movlb	0	; () banked
  8017  000594  51C9               	movf	_ic_ptr& (0+255),w,b
  8018  000596  26D9               	addwf	fsr2l,f,c
  8019  000598  0100               	movlb	0	; () banked
  8020  00059A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8021  00059C  22DA               	addwfc	fsr2h,f,c
  8022  00059E  0E07               	movlw	7
  8023  0005A0  6EDF               	movwf	indf2,c
  8024  0005A2                     i2l4375:
  8025                           
  8026                           ; BSR set to: 0
  8027                           ;my_i2c.c: 393: }
  8028                           ;my_i2c.c: 395: if (msg_ready) {
  8029  0005A2  0100               	movlb	0	; () banked
  8030  0005A4  0100               	movlb	0	; () banked
  8031  0005A6  51AF               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  8032  0005A8  B4D8               	btfsc	status,2,c
  8033  0005AA  D048               	goto	i2l4383
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;my_i2c.c: 396: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  8037  0005AC  0100               	movlb	0	; () banked
  8038  0005AE  EE20 F00C          	lfsr	2,12
  8039  0005B2  0100               	movlb	0	; () banked
  8040  0005B4  51C9               	movf	_ic_ptr& (0+255),w,b
  8041  0005B6  26D9               	addwf	fsr2l,f,c
  8042  0005B8  0100               	movlb	0	; () banked
  8043  0005BA  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8044  0005BC  22DA               	addwfc	fsr2h,f,c
  8045  0005BE  0100               	movlb	0	; () banked
  8046  0005C0  EE10 F00A          	lfsr	1,10
  8047  0005C4  0100               	movlb	0	; () banked
  8048  0005C6  51C9               	movf	_ic_ptr& (0+255),w,b
  8049  0005C8  26E1               	addwf	fsr1l,f,c
  8050  0005CA  0100               	movlb	0	; () banked
  8051  0005CC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8052  0005CE  22E2               	addwfc	fsr1h,f,c
  8053  0005D0  50E7               	movf	indf1,w,c
  8054  0005D2  0100               	movlb	0	; () banked
  8055  0005D4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8056  0005D6  0100               	movlb	0	; () banked
  8057  0005D8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8058  0005DA  0D01               	mullw	1
  8059  0005DC  50F3               	movf	prodl,w,c
  8060  0005DE  0100               	movlb	0	; () banked
  8061  0005E0  0100               	movlb	0	; () banked
  8062  0005E2  25C9               	addwf	_ic_ptr& (0+255),w,b
  8063  0005E4  6EE1               	movwf	fsr1l,c
  8064  0005E6  50F4               	movf	prodh,w,c
  8065  0005E8  0100               	movlb	0	; () banked
  8066  0005EA  0100               	movlb	0	; () banked
  8067  0005EC  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8068  0005EE  6EE2               	movwf	fsr1h,c
  8069  0005F0  CFDF FFE7          	movff	indf2,indf1
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;my_i2c.c: 397: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  8073  0005F4  0100               	movlb	0	; () banked
  8074  0005F6  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8075  0005F8  0E28               	movlw	40
  8076  0005FA  0100               	movlb	0	; () banked
  8077  0005FC  0100               	movlb	0	; () banked
  8078  0005FE  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8079  000600  0100               	movlb	0	; () banked
  8080  000602  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8081  000604  0100               	movlb	0	; () banked
  8082  000606  0100               	movlb	0	; () banked
  8083  000608  C0CA  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8084  00060C  0100               	movlb	0	; () banked
  8085  00060E  0100               	movlb	0	; () banked
  8086  000610  C0C9  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8087  000614  0100               	movlb	0	; () banked
  8088  000616  EE20 F00A          	lfsr	2,10
  8089  00061A  0100               	movlb	0	; () banked
  8090  00061C  51C9               	movf	_ic_ptr& (0+255),w,b
  8091  00061E  26D9               	addwf	fsr2l,f,c
  8092  000620  0100               	movlb	0	; () banked
  8093  000622  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8094  000624  22DA               	addwfc	fsr2h,f,c
  8095  000626  50DF               	movf	indf2,w,c
  8096  000628  0100               	movlb	0	; () banked
  8097  00062A  6F9B               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  8098  00062C  0100               	movlb	0	; () banked
  8099  00062E  299B               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  8100  000630  EC7D  F010         	call	_ToMainHigh_sendmsg
  8101                           
  8102                           ;my_i2c.c: 398: ic_ptr->buflen = 0;
  8103  000634  0100               	movlb	0	; () banked
  8104  000636  EE20 F00A          	lfsr	2,10
  8105  00063A  D04B               	goto	L7
  8106  00063C                     i2l4383:
  8107                           
  8108                           ; BSR set to: 0
  8109  00063C  0100               	movlb	0	; () banked
  8110  00063E  EE20 F00F          	lfsr	2,15
  8111  000642  0100               	movlb	0	; () banked
  8112  000644  51C9               	movf	_ic_ptr& (0+255),w,b
  8113  000646  26D9               	addwf	fsr2l,f,c
  8114  000648  0100               	movlb	0	; () banked
  8115  00064A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8116  00064C  22DA               	addwfc	fsr2h,f,c
  8117  00064E  50DF               	movf	indf2,w,c
  8118  000650  B4D8               	btfsc	status,2,c
  8119  000652  D047               	goto	i2l4391
  8120                           
  8121                           ; BSR set to: 0
  8122                           ;my_i2c.c: 400: error_buf[0] = ic_ptr->error_count;
  8123  000654  0100               	movlb	0	; () banked
  8124  000656  EE20 F00F          	lfsr	2,15
  8125  00065A  0100               	movlb	0	; () banked
  8126  00065C  51C9               	movf	_ic_ptr& (0+255),w,b
  8127  00065E  26D9               	addwf	fsr2l,f,c
  8128  000660  0100               	movlb	0	; () banked
  8129  000662  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8130  000664  22DA               	addwfc	fsr2h,f,c
  8131  000666  50DF               	movf	indf2,w,c
  8132  000668  0100               	movlb	0	; () banked
  8133  00066A  0100               	movlb	0	; () banked
  8134  00066C  6FA6               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  8135                           
  8136                           ;my_i2c.c: 401: error_buf[1] = ic_ptr->error_code;
  8137  00066E  0100               	movlb	0	; () banked
  8138  000670  EE20 F00E          	lfsr	2,14
  8139  000674  0100               	movlb	0	; () banked
  8140  000676  51C9               	movf	_ic_ptr& (0+255),w,b
  8141  000678  26D9               	addwf	fsr2l,f,c
  8142  00067A  0100               	movlb	0	; () banked
  8143  00067C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8144  00067E  22DA               	addwfc	fsr2h,f,c
  8145  000680  50DF               	movf	indf2,w,c
  8146  000682  0100               	movlb	0	; () banked
  8147  000684  0100               	movlb	0	; () banked
  8148  000686  6FA7               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  8149                           
  8150                           ;my_i2c.c: 402: error_buf[2] = ic_ptr->event_count;
  8151  000688  0100               	movlb	0	; () banked
  8152  00068A  EE20 F00C          	lfsr	2,12
  8153  00068E  0100               	movlb	0	; () banked
  8154  000690  51C9               	movf	_ic_ptr& (0+255),w,b
  8155  000692  26D9               	addwf	fsr2l,f,c
  8156  000694  0100               	movlb	0	; () banked
  8157  000696  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8158  000698  22DA               	addwfc	fsr2h,f,c
  8159  00069A  50DF               	movf	indf2,w,c
  8160  00069C  0100               	movlb	0	; () banked
  8161  00069E  0100               	movlb	0	; () banked
  8162  0006A0  6FA8               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  8163                           
  8164                           ; BSR set to: 0
  8165                           ;my_i2c.c: 403: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8166  0006A2  0100               	movlb	0	; () banked
  8167  0006A4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8168  0006A6  0E29               	movlw	41
  8169  0006A8  0100               	movlb	0	; () banked
  8170  0006AA  0100               	movlb	0	; () banked
  8171  0006AC  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8172  0006AE  0100               	movlb	0	; () banked
  8173  0006B0  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8174  0006B2  0100               	movlb	0	; () banked
  8175  0006B4  0E00               	movlw	high i2c_slave_int_handler@error_buf
  8176  0006B6  0100               	movlb	0	; () banked
  8177  0006B8  0100               	movlb	0	; () banked
  8178  0006BA  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8179  0006BC  0100               	movlb	0	; () banked
  8180  0006BE  0EA6               	movlw	low i2c_slave_int_handler@error_buf
  8181  0006C0  0100               	movlb	0	; () banked
  8182  0006C2  0100               	movlb	0	; () banked
  8183  0006C4  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8184  0006C6  0E03               	movlw	3
  8185  0006C8  EC7D  F010         	call	_ToMainHigh_sendmsg
  8186                           
  8187                           ;my_i2c.c: 404: ic_ptr->error_count = 0;
  8188  0006CC  0100               	movlb	0	; () banked
  8189  0006CE  EE20 F00F          	lfsr	2,15
  8190  0006D2                     L7:
  8191  0006D2  0100               	movlb	0	; () banked
  8192  0006D4  51C9               	movf	_ic_ptr& (0+255),w,b
  8193  0006D6  26D9               	addwf	fsr2l,f,c
  8194  0006D8  0100               	movlb	0	; () banked
  8195  0006DA  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8196  0006DC  22DA               	addwfc	fsr2h,f,c
  8197  0006DE  0E00               	movlw	0
  8198  0006E0  6EDF               	movwf	indf2,c
  8199  0006E2                     i2l4391:
  8200                           
  8201                           ; BSR set to: 0
  8202                           ;my_i2c.c: 405: }
  8203                           ;my_i2c.c: 406: if (msg_to_send) {
  8204  0006E2  0100               	movlb	0	; () banked
  8205  0006E4  0100               	movlb	0	; () banked
  8206  0006E6  51AC               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  8207  0006E8  B4D8               	btfsc	status,2,c
  8208  0006EA  0012               	return	
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;my_i2c.c: 407: int length = 0;
  8212  0006EC  0E00               	movlw	0
  8213  0006EE  0100               	movlb	0	; () banked
  8214  0006F0  0100               	movlb	0	; () banked
  8215  0006F2  6FAE               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  8216  0006F4  0E00               	movlw	0
  8217  0006F6  0100               	movlb	0	; () banked
  8218  0006F8  6FAD               	movwf	i2c_slave_int_handler@length& (0+255),b
  8219                           
  8220                           ; BSR set to: 0
  8221                           ;my_i2c.c: 411: if(ic_ptr->buffer[0] == 0xAA){
  8222  0006FA  0EAA               	movlw	170
  8223  0006FC  C0C9  FFD9         	movff	_ic_ptr,fsr2l
  8224  000700  C0CA  FFDA         	movff	_ic_ptr+1,fsr2h
  8225  000704  62DF               	cpfseq	indf2,c
  8226  000706  D020               	goto	i2l4403
  8227                           
  8228                           ; BSR set to: 0
  8229                           ;my_i2c.c: 412: length = 5;
  8230  000708  0E00               	movlw	0
  8231  00070A  0100               	movlb	0	; () banked
  8232  00070C  0100               	movlb	0	; () banked
  8233  00070E  6FAE               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  8234  000710  0E05               	movlw	5
  8235  000712  0100               	movlb	0	; () banked
  8236  000714  6FAD               	movwf	i2c_slave_int_handler@length& (0+255),b
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;my_i2c.c: 414: unsigned char sensormsg[5] = {0x01, 0x01, 0x02, 0x03, ((0x01 + 0x02 + 0x
      +                          03) & 0x17)};
  8240  000716  EE20  F0BF         	lfsr	2,i2c_slave_int_handler@F5136
  8241  00071A  EE10  F09C         	lfsr	1,i2c_slave_int_handler@sensormsg
  8242  00071E  0E05               	movlw	5
  8243  000720                     i2u353_41:
  8244  000720  CFDE FFE6          	movff	postinc2,postinc1
  8245  000724  2EE8               	decfsz	wreg,f,c
  8246  000726  D7FC               	goto	i2u353_41
  8247                           
  8248                           ; BSR set to: 0
  8249                           ;my_i2c.c: 415: start_i2c_slave_reply(length, sensormsg);
  8250  000728  0100               	movlb	0	; () banked
  8251  00072A  0E00               	movlw	high i2c_slave_int_handler@sensormsg
  8252  00072C  0100               	movlb	0	; () banked
  8253  00072E  0100               	movlb	0	; () banked
  8254  000730  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  8255  000732  0100               	movlb	0	; () banked
  8256  000734  0E9C               	movlw	low i2c_slave_int_handler@sensormsg
  8257  000736  0100               	movlb	0	; () banked
  8258  000738  0100               	movlb	0	; () banked
  8259  00073A  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
  8260  00073C  0100               	movlb	0	; () banked
  8261  00073E  0100               	movlb	0	; () banked
  8262  000740  51AD               	movf	i2c_slave_int_handler@length& (0+255),w,b
  8263  000742  EC7B  F008         	call	_start_i2c_slave_reply
  8264                           
  8265                           ;my_i2c.c: 417: } else if(ic_ptr->buffer[0] == 0xBA){
  8266  000746  D056               	goto	i2l4417
  8267  000748                     i2l4403:
  8268  000748  0EBA               	movlw	186
  8269  00074A  C0C9  FFD9         	movff	_ic_ptr,fsr2l
  8270  00074E  C0CA  FFDA         	movff	_ic_ptr+1,fsr2h
  8271  000752  62DF               	cpfseq	indf2,c
  8272  000754  D02E               	goto	i2l4409
  8273                           
  8274                           ;my_i2c.c: 419: length = 5;
  8275  000756  0E00               	movlw	0
  8276  000758  0100               	movlb	0	; () banked
  8277  00075A  0100               	movlb	0	; () banked
  8278  00075C  6FAE               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  8279  00075E  0E05               	movlw	5
  8280  000760  0100               	movlb	0	; () banked
  8281  000762  6FAD               	movwf	i2c_slave_int_handler@length& (0+255),b
  8282                           
  8283                           ; BSR set to: 0
  8284                           ;my_i2c.c: 422: motorMove(ic_ptr->buffer[1], ic_ptr->buffer[2], ic_ptr->buffer[3]);
  8285  000764  0100               	movlb	0	; () banked
  8286  000766  EE20 F002          	lfsr	2,2
  8287  00076A  0100               	movlb	0	; () banked
  8288  00076C  51C9               	movf	_ic_ptr& (0+255),w,b
  8289  00076E  26D9               	addwf	fsr2l,f,c
  8290  000770  0100               	movlb	0	; () banked
  8291  000772  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8292  000774  22DA               	addwfc	fsr2h,f,c
  8293  000776  50DF               	movf	indf2,w,c
  8294  000778  0100               	movlb	0	; () banked
  8295  00077A  0100               	movlb	0	; () banked
  8296  00077C  6F85               	movwf	motorMove@right& (0+255),b
  8297  00077E  0100               	movlb	0	; () banked
  8298  000780  EE20 F003          	lfsr	2,3
  8299  000784  0100               	movlb	0	; () banked
  8300  000786  51C9               	movf	_ic_ptr& (0+255),w,b
  8301  000788  26D9               	addwf	fsr2l,f,c
  8302  00078A  0100               	movlb	0	; () banked
  8303  00078C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8304  00078E  22DA               	addwfc	fsr2h,f,c
  8305  000790  50DF               	movf	indf2,w,c
  8306  000792  0100               	movlb	0	; () banked
  8307  000794  0100               	movlb	0	; () banked
  8308  000796  6F86               	movwf	motorMove@distance& (0+255),b
  8309  000798  0100               	movlb	0	; () banked
  8310  00079A  EE20 F001          	lfsr	2,1
  8311  00079E  0100               	movlb	0	; () banked
  8312  0007A0  51C9               	movf	_ic_ptr& (0+255),w,b
  8313  0007A2  26D9               	addwf	fsr2l,f,c
  8314  0007A4  0100               	movlb	0	; () banked
  8315  0007A6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8316  0007A8  22DA               	addwfc	fsr2h,f,c
  8317  0007AA  50DF               	movf	indf2,w,c
  8318  0007AC  EC0C  F010         	call	_motorMove
  8319                           
  8320                           ;my_i2c.c: 423: }
  8321  0007B0  D021               	goto	i2l4417
  8322  0007B2                     i2l4409:
  8323                           
  8324                           ;my_i2c.c: 424: else if(ic_ptr->buffer[0] == 0xBB) {
  8325  0007B2  0EBB               	movlw	187
  8326  0007B4  C0C9  FFD9         	movff	_ic_ptr,fsr2l
  8327  0007B8  C0CA  FFDA         	movff	_ic_ptr+1,fsr2h
  8328  0007BC  62DF               	cpfseq	indf2,c
  8329  0007BE  D01A               	goto	i2l4417
  8330                           
  8331                           ;my_i2c.c: 425: unsigned char dist[5] = {0x04, 0x00, 0x00, 0x00, 0x00};
  8332  0007C0  EE20  F0C4         	lfsr	2,i2c_slave_int_handler@F5138
  8333  0007C4  EE10  F0A1         	lfsr	1,i2c_slave_int_handler@dist
  8334  0007C8  0E05               	movlw	5
  8335  0007CA                     i2u356_41:
  8336  0007CA  CFDE FFE6          	movff	postinc2,postinc1
  8337  0007CE  2EE8               	decfsz	wreg,f,c
  8338  0007D0  D7FC               	goto	i2u356_41
  8339                           
  8340                           ;my_i2c.c: 426: dist[1] = distMoved;
  8341  0007D2  C0CB  F0A2         	movff	_distMoved,i2c_slave_int_handler@dist+1
  8342                           
  8343                           ;my_i2c.c: 427: start_i2c_slave_reply(length, dist);
  8344  0007D6  0100               	movlb	0	; () banked
  8345  0007D8  0E00               	movlw	high i2c_slave_int_handler@dist
  8346  0007DA  0100               	movlb	0	; () banked
  8347  0007DC  0100               	movlb	0	; () banked
  8348  0007DE  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  8349  0007E0  0100               	movlb	0	; () banked
  8350  0007E2  0EA1               	movlw	low i2c_slave_int_handler@dist
  8351  0007E4  0100               	movlb	0	; () banked
  8352  0007E6  0100               	movlb	0	; () banked
  8353  0007E8  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
  8354  0007EA  0100               	movlb	0	; () banked
  8355  0007EC  0100               	movlb	0	; () banked
  8356  0007EE  51AD               	movf	i2c_slave_int_handler@length& (0+255),w,b
  8357  0007F0  EC7B  F008         	call	_start_i2c_slave_reply
  8358  0007F4                     i2l4417:
  8359                           
  8360                           ;my_i2c.c: 428: }
  8361                           ;my_i2c.c: 429: msg_to_send = 0;
  8362  0007F4  0100               	movlb	0	; () banked
  8363  0007F6  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8364  0007F8  0E00               	movlw	0
  8365  0007FA  0100               	movlb	0	; () banked
  8366  0007FC  0100               	movlb	0	; () banked
  8367  0007FE  6FAC               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  8368  000800  0100               	movlb	0	; () banked
  8369  000802  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8370  000804  0012               	return	
  8371  000806                     __end_of_i2c_slave_int_handler:
  8372                           	opt stack 0
  8373                           pclatu	equ	0xFFB
  8374                           pclath	equ	0xFFA
  8375                           tblptru	equ	0xFF8
  8376                           tblptrh	equ	0xFF7
  8377                           tblptrl	equ	0xFF6
  8378                           tablat	equ	0xFF5
  8379                           prodh	equ	0xFF4
  8380                           prodl	equ	0xFF3
  8381                           intcon	equ	0xFF2
  8382                           intcon2	equ	0xFF1
  8383                           postinc0	equ	0xFEE
  8384                           fsr0h	equ	0xFEA
  8385                           fsr0l	equ	0xFE9
  8386                           wreg	equ	0xFE8
  8387                           indf1	equ	0xFE7
  8388                           postinc1	equ	0xFE6
  8389                           postdec1	equ	0xFE5
  8390                           fsr1h	equ	0xFE2
  8391                           fsr1l	equ	0xFE1
  8392                           bsr	equ	0xFE0
  8393                           indf2	equ	0xFDF
  8394                           postinc2	equ	0xFDE
  8395                           postdec2	equ	0xFDD
  8396                           fsr2h	equ	0xFDA
  8397                           fsr2l	equ	0xFD9
  8398                           status	equ	0xFD8
  8399                           
  8400 ;; *************** function _start_i2c_slave_reply *****************
  8401 ;; Defined at:
  8402 ;;		line 92 in file "../src/my_i2c.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;  length          1    wreg     unsigned char 
  8405 ;;  msg             2    0[BANK0 ] PTR unsigned char 
  8406 ;;		 -> timer0_int_handler@motormsg(5), i2c_slave_int_handler@dist(5), i2c_slave_int_handler@sensormsg(5), 
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;  length          1    4[BANK0 ] unsigned char 
  8409 ;; Return value:  Size  Location     Type
  8410 ;;		None               void
  8411 ;; Registers used:
  8412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8413 ;; Tracked objects:
  8414 ;;		On entry : 0/0
  8415 ;;		On exit  : 0/0
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8418 ;;      Params:         0       2       0       0       0
  8419 ;;      Locals:         0       1       0       0       0
  8420 ;;      Temps:          0       2       0       0       0
  8421 ;;      Totals:         0       5       0       0       0
  8422 ;;Total ram usage:        5 bytes
  8423 ;; Hardware stack levels used:    1
  8424 ;; This function calls:
  8425 ;;		Nothing
  8426 ;; This function is called by:
  8427 ;;		_i2c_slave_int_handler
  8428 ;;		_timer0_int_handler
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           	psect	text46
  8433  0010F6                     __ptext46:
  8434                           	opt stack 0
  8435  0010F6                     _start_i2c_slave_reply:
  8436                           	opt stack 19
  8437                           
  8438                           ; BSR set to: 0
  8439                           ;incstack = 0
  8440                           ;start_i2c_slave_reply@length stored from wreg
  8441  0010F6  CFE8 F084          	movff	wreg,start_i2c_slave_reply@length
  8442                           
  8443                           ;my_i2c.c: 94: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  8444  0010FA  0100               	movlb	0	; () banked
  8445  0010FC  EE20 F01A          	lfsr	2,26
  8446  001100  0100               	movlb	0	; () banked
  8447  001102  51C9               	movf	_ic_ptr& (0+255),w,b
  8448  001104  26D9               	addwf	fsr2l,f,c
  8449  001106  0100               	movlb	0	; () banked
  8450  001108  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8451  00110A  22DA               	addwfc	fsr2h,f,c
  8452  00110C  0E00               	movlw	0
  8453  00110E  6EDF               	movwf	indf2,c
  8454  001110  D042               	goto	i2l4235
  8455  001112                     i2l4231:
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;my_i2c.c: 95: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  8459  001112  0100               	movlb	0	; () banked
  8460  001114  EE20 F01A          	lfsr	2,26
  8461  001118  0100               	movlb	0	; () banked
  8462  00111A  51C9               	movf	_ic_ptr& (0+255),w,b
  8463  00111C  26D9               	addwf	fsr2l,f,c
  8464  00111E  0100               	movlb	0	; () banked
  8465  001120  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8466  001122  22DA               	addwfc	fsr2h,f,c
  8467  001124  50DF               	movf	indf2,w,c
  8468  001126  0100               	movlb	0	; () banked
  8469  001128  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8470  00112A  0100               	movlb	0	; () banked
  8471  00112C  5182               	movf	??_start_i2c_slave_reply& (0+255),w,b
  8472  00112E  0D01               	mullw	1
  8473  001130  50F3               	movf	prodl,w,c
  8474  001132  0100               	movlb	0	; () banked
  8475  001134  0100               	movlb	0	; () banked
  8476  001136  2580               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  8477  001138  6ED9               	movwf	fsr2l,c
  8478  00113A  50F4               	movf	prodh,w,c
  8479  00113C  0100               	movlb	0	; () banked
  8480  00113E  0100               	movlb	0	; () banked
  8481  001140  2181               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  8482  001142  6EDA               	movwf	fsr2h,c
  8483  001144  0100               	movlb	0	; () banked
  8484  001146  EE10 F01A          	lfsr	1,26
  8485  00114A  0100               	movlb	0	; () banked
  8486  00114C  51C9               	movf	_ic_ptr& (0+255),w,b
  8487  00114E  26E1               	addwf	fsr1l,f,c
  8488  001150  0100               	movlb	0	; () banked
  8489  001152  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8490  001154  22E2               	addwfc	fsr1h,f,c
  8491  001156  50E7               	movf	indf1,w,c
  8492  001158  0100               	movlb	0	; () banked
  8493  00115A  6F83               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  8494  00115C  0100               	movlb	0	; () banked
  8495  00115E  5183               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  8496  001160  0D01               	mullw	1
  8497  001162  0E10               	movlw	16
  8498  001164  26F3               	addwf	prodl,f,c
  8499  001166  0E00               	movlw	0
  8500  001168  22F4               	addwfc	prodh,f,c
  8501  00116A  50F3               	movf	prodl,w,c
  8502  00116C  0100               	movlb	0	; () banked
  8503  00116E  0100               	movlb	0	; () banked
  8504  001170  25C9               	addwf	_ic_ptr& (0+255),w,b
  8505  001172  6EE1               	movwf	fsr1l,c
  8506  001174  50F4               	movf	prodh,w,c
  8507  001176  0100               	movlb	0	; () banked
  8508  001178  0100               	movlb	0	; () banked
  8509  00117A  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8510  00117C  6EE2               	movwf	fsr1h,c
  8511  00117E  CFDF FFE7          	movff	indf2,indf1
  8512                           
  8513                           ; BSR set to: 0
  8514  001182  0100               	movlb	0	; () banked
  8515  001184  EE20 F01A          	lfsr	2,26
  8516  001188  0100               	movlb	0	; () banked
  8517  00118A  51C9               	movf	_ic_ptr& (0+255),w,b
  8518  00118C  26D9               	addwf	fsr2l,f,c
  8519  00118E  0100               	movlb	0	; () banked
  8520  001190  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8521  001192  22DA               	addwfc	fsr2h,f,c
  8522  001194  2ADF               	incf	indf2,f,c
  8523  001196                     i2l4235:
  8524                           
  8525                           ; BSR set to: 0
  8526  001196  0100               	movlb	0	; () banked
  8527  001198  EE20 F01A          	lfsr	2,26
  8528  00119C  0100               	movlb	0	; () banked
  8529  00119E  51C9               	movf	_ic_ptr& (0+255),w,b
  8530  0011A0  26D9               	addwf	fsr2l,f,c
  8531  0011A2  0100               	movlb	0	; () banked
  8532  0011A4  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8533  0011A6  22DA               	addwfc	fsr2h,f,c
  8534  0011A8  50DF               	movf	indf2,w,c
  8535  0011AA  0100               	movlb	0	; () banked
  8536  0011AC  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8537  0011AE  0100               	movlb	0	; () banked
  8538  0011B0  0100               	movlb	0	; () banked
  8539  0011B2  5184               	movf	start_i2c_slave_reply@length& (0+255),w,b
  8540  0011B4  0100               	movlb	0	; () banked
  8541  0011B6  5D82               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  8542  0011B8  A0D8               	btfss	status,0,c
  8543  0011BA  D7AB               	goto	i2l4231
  8544                           
  8545                           ; BSR set to: 0
  8546                           ;my_i2c.c: 96: }
  8547                           ;my_i2c.c: 97: ic_ptr->outbuflen = length;
  8548                           
  8549                           ; BSR set to: 0
  8550  0011BC  0100               	movlb	0	; () banked
  8551  0011BE  EE20 F01A          	lfsr	2,26
  8552  0011C2  0100               	movlb	0	; () banked
  8553  0011C4  51C9               	movf	_ic_ptr& (0+255),w,b
  8554  0011C6  26D9               	addwf	fsr2l,f,c
  8555  0011C8  0100               	movlb	0	; () banked
  8556  0011CA  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8557  0011CC  22DA               	addwfc	fsr2h,f,c
  8558  0011CE  0100               	movlb	0	; () banked
  8559  0011D0  C084  FFDF         	movff	start_i2c_slave_reply@length,indf2
  8560                           
  8561                           ;my_i2c.c: 98: ic_ptr->outbufind = 1;
  8562  0011D4  0100               	movlb	0	; () banked
  8563  0011D6  EE20 F01B          	lfsr	2,27
  8564  0011DA  0100               	movlb	0	; () banked
  8565  0011DC  51C9               	movf	_ic_ptr& (0+255),w,b
  8566  0011DE  26D9               	addwf	fsr2l,f,c
  8567  0011E0  0100               	movlb	0	; () banked
  8568  0011E2  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8569  0011E4  22DA               	addwfc	fsr2h,f,c
  8570  0011E6  0E01               	movlw	1
  8571  0011E8  6EDF               	movwf	indf2,c
  8572                           
  8573                           ;my_i2c.c: 101: SSPBUF = ic_ptr->outbuffer[0];
  8574  0011EA  0100               	movlb	0	; () banked
  8575  0011EC  EE20 F010          	lfsr	2,16
  8576  0011F0  0100               	movlb	0	; () banked
  8577  0011F2  51C9               	movf	_ic_ptr& (0+255),w,b
  8578  0011F4  26D9               	addwf	fsr2l,f,c
  8579  0011F6  0100               	movlb	0	; () banked
  8580  0011F8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8581  0011FA  22DA               	addwfc	fsr2h,f,c
  8582  0011FC  50DF               	movf	indf2,w,c
  8583  0011FE  6EC9               	movwf	4041,c	;volatile
  8584                           
  8585                           ; BSR set to: 0
  8586                           ;my_i2c.c: 104: SSPCON1bits.CKP = 1;
  8587  001200  88C6               	bsf	4038,4,c	;volatile
  8588                           
  8589                           ; BSR set to: 0
  8590  001202  0012               	return	
  8591  001204                     __end_of_start_i2c_slave_reply:
  8592                           	opt stack 0
  8593                           pclatu	equ	0xFFB
  8594                           pclath	equ	0xFFA
  8595                           tblptru	equ	0xFF8
  8596                           tblptrh	equ	0xFF7
  8597                           tblptrl	equ	0xFF6
  8598                           tablat	equ	0xFF5
  8599                           prodh	equ	0xFF4
  8600                           prodl	equ	0xFF3
  8601                           intcon	equ	0xFF2
  8602                           intcon2	equ	0xFF1
  8603                           postinc0	equ	0xFEE
  8604                           fsr0h	equ	0xFEA
  8605                           fsr0l	equ	0xFE9
  8606                           wreg	equ	0xFE8
  8607                           indf1	equ	0xFE7
  8608                           postinc1	equ	0xFE6
  8609                           postdec1	equ	0xFE5
  8610                           fsr1h	equ	0xFE2
  8611                           fsr1l	equ	0xFE1
  8612                           bsr	equ	0xFE0
  8613                           indf2	equ	0xFDF
  8614                           postinc2	equ	0xFDE
  8615                           postdec2	equ	0xFDD
  8616                           fsr2h	equ	0xFDA
  8617                           fsr2l	equ	0xFD9
  8618                           status	equ	0xFD8
  8619                           
  8620 ;; *************** function _motorMove *****************
  8621 ;; Defined at:
  8622 ;;		line 5 in file "../src/motor.c"
  8623 ;; Parameters:    Size  Location     Type
  8624 ;;  left            1    wreg     unsigned char 
  8625 ;;  right           1    5[BANK0 ] unsigned char 
  8626 ;;  distance        1    6[BANK0 ] unsigned char 
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;  left            1    7[BANK0 ] unsigned char 
  8629 ;;  direction       2    8[BANK0 ] unsigned char [2]
  8630 ;; Return value:  Size  Location     Type
  8631 ;;		None               void
  8632 ;; Registers used:
  8633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8639 ;;      Params:         0       2       0       0       0
  8640 ;;      Locals:         0       3       0       0       0
  8641 ;;      Temps:          0       0       0       0       0
  8642 ;;      Totals:         0       5       0       0       0
  8643 ;;Total ram usage:        5 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:    1
  8646 ;; This function calls:
  8647 ;;		_WriteTimer0
  8648 ;;		i2_uart_trans
  8649 ;; This function is called by:
  8650 ;;		_i2c_slave_int_handler
  8651 ;;		_timer0_int_handler
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           	psect	text47
  8656  002018                     __ptext47:
  8657                           	opt stack 0
  8658  002018                     _motorMove:
  8659                           	opt stack 18
  8660                           
  8661                           ; BSR set to: 0
  8662                           ;incstack = 0
  8663                           ;motorMove@left stored from wreg
  8664  002018  CFE8 F087          	movff	wreg,motorMove@left
  8665                           
  8666                           ;motor.c: 7: distDesired = distance;
  8667  00201C  C086  F04F         	movff	motorMove@distance,_distDesired
  8668                           
  8669                           ;motor.c: 8: WriteTimer0(0);
  8670  002020  0E00               	movlw	0
  8671  002022  0100               	movlb	0	; () banked
  8672  002024  0100               	movlb	0	; () banked
  8673  002026  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  8674  002028  0E00               	movlw	0
  8675  00202A  0100               	movlb	0	; () banked
  8676  00202C  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  8677  00202E  EC5D  F011         	call	_WriteTimer0	;wreg free
  8678                           
  8679                           ;motor.c: 9: unsigned char direction[2];
  8680                           ;motor.c: 10: direction[0] = left;
  8681  002032  C087  F088         	movff	motorMove@left,motorMove@direction
  8682                           
  8683                           ;motor.c: 11: direction[1] = right;
  8684  002036  C085  F089         	movff	motorMove@right,motorMove@direction+1
  8685                           
  8686                           ;motor.c: 12: uart_trans(2, direction);
  8687  00203A  0100               	movlb	0	; () banked
  8688  00203C  0E00               	movlw	high motorMove@direction
  8689  00203E  0100               	movlb	0	; () banked
  8690  002040  0100               	movlb	0	; () banked
  8691  002042  6F81               	movwf	(i2uart_trans@data+1)& (0+255),b
  8692  002044  0100               	movlb	0	; () banked
  8693  002046  0E88               	movlw	low motorMove@direction
  8694  002048  0100               	movlb	0	; () banked
  8695  00204A  0100               	movlb	0	; () banked
  8696  00204C  6F80               	movwf	i2uart_trans@data& (0+255),b
  8697  00204E  0E02               	movlw	2
  8698  002050  EC09  F00B         	call	i2_uart_trans
  8699  002054  0012               	return	
  8700  002056                     __end_of_motorMove:
  8701                           	opt stack 0
  8702                           pclatu	equ	0xFFB
  8703                           pclath	equ	0xFFA
  8704                           tblptru	equ	0xFF8
  8705                           tblptrh	equ	0xFF7
  8706                           tblptrl	equ	0xFF6
  8707                           tablat	equ	0xFF5
  8708                           prodh	equ	0xFF4
  8709                           prodl	equ	0xFF3
  8710                           intcon	equ	0xFF2
  8711                           intcon2	equ	0xFF1
  8712                           postinc0	equ	0xFEE
  8713                           fsr0h	equ	0xFEA
  8714                           fsr0l	equ	0xFE9
  8715                           wreg	equ	0xFE8
  8716                           indf1	equ	0xFE7
  8717                           postinc1	equ	0xFE6
  8718                           postdec1	equ	0xFE5
  8719                           fsr1h	equ	0xFE2
  8720                           fsr1l	equ	0xFE1
  8721                           bsr	equ	0xFE0
  8722                           indf2	equ	0xFDF
  8723                           postinc2	equ	0xFDE
  8724                           postdec2	equ	0xFDD
  8725                           fsr2h	equ	0xFDA
  8726                           fsr2l	equ	0xFD9
  8727                           status	equ	0xFD8
  8728                           
  8729 ;; *************** function i2_uart_trans *****************
  8730 ;; Defined at:
  8731 ;;		line 61 in file "../src/my_uart.c"
  8732 ;; Parameters:    Size  Location     Type
  8733 ;;  length          1    wreg     unsigned char 
  8734 ;;  data            2    0[BANK0 ] PTR unsigned char 
  8735 ;;		 -> motorMove@direction(2), main@msgbuffer(11), 
  8736 ;; Auto vars:     Size  Location     Type
  8737 ;;  length          1    4[BANK0 ] unsigned char 
  8738 ;; Return value:  Size  Location     Type
  8739 ;;		None               void
  8740 ;; Registers used:
  8741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8742 ;; Tracked objects:
  8743 ;;		On entry : 0/0
  8744 ;;		On exit  : 0/0
  8745 ;;		Unchanged: 0/0
  8746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8747 ;;      Params:         0       2       0       0       0
  8748 ;;      Locals:         0       1       0       0       0
  8749 ;;      Temps:          0       2       0       0       0
  8750 ;;      Totals:         0       5       0       0       0
  8751 ;;Total ram usage:        5 bytes
  8752 ;; Hardware stack levels used:    1
  8753 ;; This function calls:
  8754 ;;		Nothing
  8755 ;; This function is called by:
  8756 ;;		_motorMove
  8757 ;; This function uses a non-reentrant model
  8758 ;;
  8759                           
  8760                           	psect	text48
  8761  001612                     __ptext48:
  8762                           	opt stack 0
  8763  001612                     i2_uart_trans:
  8764                           	opt stack 18
  8765                           
  8766                           ;incstack = 0
  8767                           ;i2uart_trans@length stored from wreg
  8768  001612  CFE8 F084          	movff	wreg,i2uart_trans@length
  8769                           
  8770                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  8771  001616  EE20 F00B          	lfsr	2,11
  8772  00161A  5057               	movf	_uc_ptr,w,c
  8773  00161C  26D9               	addwf	fsr2l,f,c
  8774  00161E  5058               	movf	_uc_ptr+1,w,c
  8775  001620  22DA               	addwfc	fsr2h,f,c
  8776  001622  0E00               	movlw	0
  8777  001624  6EDF               	movwf	indf2,c
  8778  001626  D035               	goto	i2l4605
  8779  001628                     i2l4601:
  8780                           
  8781                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  8782  001628  EE20 F00B          	lfsr	2,11
  8783  00162C  5057               	movf	_uc_ptr,w,c
  8784  00162E  26D9               	addwf	fsr2l,f,c
  8785  001630  5058               	movf	_uc_ptr+1,w,c
  8786  001632  22DA               	addwfc	fsr2h,f,c
  8787  001634  50DF               	movf	indf2,w,c
  8788  001636  0100               	movlb	0	; () banked
  8789  001638  6F82               	movwf	??i2_uart_trans& (0+255),b
  8790  00163A  0100               	movlb	0	; () banked
  8791  00163C  5182               	movf	??i2_uart_trans& (0+255),w,b
  8792  00163E  0D01               	mullw	1
  8793  001640  50F3               	movf	prodl,w,c
  8794  001642  0100               	movlb	0	; () banked
  8795  001644  0100               	movlb	0	; () banked
  8796  001646  2580               	addwf	i2uart_trans@data& (0+255),w,b
  8797  001648  6ED9               	movwf	fsr2l,c
  8798  00164A  50F4               	movf	prodh,w,c
  8799  00164C  0100               	movlb	0	; () banked
  8800  00164E  0100               	movlb	0	; () banked
  8801  001650  2181               	addwfc	(i2uart_trans@data+1)& (0+255),w,b
  8802  001652  6EDA               	movwf	fsr2h,c
  8803  001654  EE10 F00B          	lfsr	1,11
  8804  001658  5057               	movf	_uc_ptr,w,c
  8805  00165A  26E1               	addwf	fsr1l,f,c
  8806  00165C  5058               	movf	_uc_ptr+1,w,c
  8807  00165E  22E2               	addwfc	fsr1h,f,c
  8808  001660  50E7               	movf	indf1,w,c
  8809  001662  0100               	movlb	0	; () banked
  8810  001664  6F83               	movwf	(??i2_uart_trans+1)& (0+255),b
  8811  001666  0100               	movlb	0	; () banked
  8812  001668  5183               	movf	(??i2_uart_trans+1)& (0+255),w,b
  8813  00166A  0D01               	mullw	1
  8814  00166C  0E06               	movlw	6
  8815  00166E  26F3               	addwf	prodl,f,c
  8816  001670  0E00               	movlw	0
  8817  001672  22F4               	addwfc	prodh,f,c
  8818  001674  50F3               	movf	prodl,w,c
  8819  001676  2457               	addwf	_uc_ptr,w,c
  8820  001678  6EE1               	movwf	fsr1l,c
  8821  00167A  50F4               	movf	prodh,w,c
  8822  00167C  2058               	addwfc	_uc_ptr+1,w,c
  8823  00167E  6EE2               	movwf	fsr1h,c
  8824  001680  CFDF FFE7          	movff	indf2,indf1
  8825                           
  8826                           ; BSR set to: 0
  8827  001684  EE20 F00B          	lfsr	2,11
  8828  001688  5057               	movf	_uc_ptr,w,c
  8829  00168A  26D9               	addwf	fsr2l,f,c
  8830  00168C  5058               	movf	_uc_ptr+1,w,c
  8831  00168E  22DA               	addwfc	fsr2h,f,c
  8832  001690  2ADF               	incf	indf2,f,c
  8833  001692                     i2l4605:
  8834  001692  EE20 F00B          	lfsr	2,11
  8835  001696  5057               	movf	_uc_ptr,w,c
  8836  001698  26D9               	addwf	fsr2l,f,c
  8837  00169A  5058               	movf	_uc_ptr+1,w,c
  8838  00169C  22DA               	addwfc	fsr2h,f,c
  8839  00169E  50DF               	movf	indf2,w,c
  8840  0016A0  0100               	movlb	0	; () banked
  8841  0016A2  6F82               	movwf	??i2_uart_trans& (0+255),b
  8842  0016A4  0100               	movlb	0	; () banked
  8843  0016A6  0100               	movlb	0	; () banked
  8844  0016A8  5184               	movf	i2uart_trans@length& (0+255),w,b
  8845  0016AA  0100               	movlb	0	; () banked
  8846  0016AC  5D82               	subwf	??i2_uart_trans& (0+255),w,b
  8847  0016AE  A0D8               	btfss	status,0,c
  8848  0016B0  D7BB               	goto	i2l4601
  8849                           
  8850                           ; BSR set to: 0
  8851                           ;my_uart.c: 67: }
  8852                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  8853                           
  8854                           ; BSR set to: 0
  8855  0016B2  EE20 F00C          	lfsr	2,12
  8856  0016B6  5057               	movf	_uc_ptr,w,c
  8857  0016B8  26D9               	addwf	fsr2l,f,c
  8858  0016BA  5058               	movf	_uc_ptr+1,w,c
  8859  0016BC  22DA               	addwfc	fsr2h,f,c
  8860  0016BE  0E00               	movlw	0
  8861  0016C0  6EDF               	movwf	indf2,c
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  8865  0016C2  889D               	bsf	3997,4,c	;volatile
  8866                           
  8867                           ; BSR set to: 0
  8868  0016C4  0012               	return	
  8869  0016C6                     __end_ofi2_uart_trans:
  8870                           	opt stack 0
  8871                           pclatu	equ	0xFFB
  8872                           pclath	equ	0xFFA
  8873                           tblptru	equ	0xFF8
  8874                           tblptrh	equ	0xFF7
  8875                           tblptrl	equ	0xFF6
  8876                           tablat	equ	0xFF5
  8877                           prodh	equ	0xFF4
  8878                           prodl	equ	0xFF3
  8879                           intcon	equ	0xFF2
  8880                           intcon2	equ	0xFF1
  8881                           postinc0	equ	0xFEE
  8882                           fsr0h	equ	0xFEA
  8883                           fsr0l	equ	0xFE9
  8884                           wreg	equ	0xFE8
  8885                           indf1	equ	0xFE7
  8886                           postinc1	equ	0xFE6
  8887                           postdec1	equ	0xFE5
  8888                           fsr1h	equ	0xFE2
  8889                           fsr1l	equ	0xFE1
  8890                           bsr	equ	0xFE0
  8891                           indf2	equ	0xFDF
  8892                           postinc2	equ	0xFDE
  8893                           postdec2	equ	0xFDD
  8894                           fsr2h	equ	0xFDA
  8895                           fsr2l	equ	0xFD9
  8896                           status	equ	0xFD8
  8897                           
  8898 ;; *************** function _WriteTimer0 *****************
  8899 ;; Defined at:
  8900 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;  timer0          2    0[BANK0 ] unsigned int 
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;  timer           2    2[BANK0 ] struct Timers
  8905 ;; Return value:  Size  Location     Type
  8906 ;;		None               void
  8907 ;; Registers used:
  8908 ;;		None
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/0
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8914 ;;      Params:         0       2       0       0       0
  8915 ;;      Locals:         0       2       0       0       0
  8916 ;;      Temps:          0       0       0       0       0
  8917 ;;      Totals:         0       4       0       0       0
  8918 ;;Total ram usage:        4 bytes
  8919 ;; Hardware stack levels used:    1
  8920 ;; This function calls:
  8921 ;;		Nothing
  8922 ;; This function is called by:
  8923 ;;		_timer0_int_handler
  8924 ;;		_motorMove
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text49
  8929  0022BA                     __ptext49:
  8930                           	opt stack 0
  8931  0022BA                     _WriteTimer0:
  8932                           	opt stack 18
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;incstack = 0
  8936  0022BA  C080  F082         	movff	WriteTimer0@timer0,WriteTimer0@timer
  8937  0022BE  C081  F083         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  8938  0022C2  C083  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  8939  0022C6  C082  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  8940  0022CA  0012               	return	
  8941  0022CC                     __end_of_WriteTimer0:
  8942                           	opt stack 0
  8943                           pclatu	equ	0xFFB
  8944                           pclath	equ	0xFFA
  8945                           tblptru	equ	0xFF8
  8946                           tblptrh	equ	0xFF7
  8947                           tblptrl	equ	0xFF6
  8948                           tablat	equ	0xFF5
  8949                           prodh	equ	0xFF4
  8950                           prodl	equ	0xFF3
  8951                           intcon	equ	0xFF2
  8952                           intcon2	equ	0xFF1
  8953                           postinc0	equ	0xFEE
  8954                           fsr0h	equ	0xFEA
  8955                           fsr0l	equ	0xFE9
  8956                           wreg	equ	0xFE8
  8957                           indf1	equ	0xFE7
  8958                           postinc1	equ	0xFE6
  8959                           postdec1	equ	0xFE5
  8960                           fsr1h	equ	0xFE2
  8961                           fsr1l	equ	0xFE1
  8962                           bsr	equ	0xFE0
  8963                           indf2	equ	0xFDF
  8964                           postinc2	equ	0xFDE
  8965                           postdec2	equ	0xFDD
  8966                           fsr2h	equ	0xFDA
  8967                           fsr2l	equ	0xFD9
  8968                           status	equ	0xFD8
  8969                           
  8970 ;; *************** function _handle_start *****************
  8971 ;; Defined at:
  8972 ;;		line 110 in file "../src/my_i2c.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;  data_read       1    wreg     unsigned char 
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;  data_read       1    0[BANK0 ] unsigned char 
  8977 ;; Return value:  Size  Location     Type
  8978 ;;		None               void
  8979 ;; Registers used:
  8980 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8981 ;; Tracked objects:
  8982 ;;		On entry : 0/0
  8983 ;;		On exit  : 0/0
  8984 ;;		Unchanged: 0/0
  8985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8986 ;;      Params:         0       0       0       0       0
  8987 ;;      Locals:         0       1       0       0       0
  8988 ;;      Temps:          0       0       0       0       0
  8989 ;;      Totals:         0       1       0       0       0
  8990 ;;Total ram usage:        1 bytes
  8991 ;; Hardware stack levels used:    1
  8992 ;; This function calls:
  8993 ;;		Nothing
  8994 ;; This function is called by:
  8995 ;;		_i2c_slave_int_handler
  8996 ;; This function uses a non-reentrant model
  8997 ;;
  8998                           
  8999                           	psect	text50
  9000  001312                     __ptext50:
  9001                           	opt stack 0
  9002  001312                     _handle_start:
  9003                           	opt stack 18
  9004                           
  9005                           ;incstack = 0
  9006                           ;handle_start@data_read stored from wreg
  9007  001312  CFE8 F080          	movff	wreg,handle_start@data_read
  9008                           
  9009                           ;my_i2c.c: 111: ic_ptr->event_count = 1;
  9010  001316  0100               	movlb	0	; () banked
  9011  001318  EE20 F00C          	lfsr	2,12
  9012  00131C  0100               	movlb	0	; () banked
  9013  00131E  51C9               	movf	_ic_ptr& (0+255),w,b
  9014  001320  26D9               	addwf	fsr2l,f,c
  9015  001322  0100               	movlb	0	; () banked
  9016  001324  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9017  001326  22DA               	addwfc	fsr2h,f,c
  9018  001328  0E01               	movlw	1
  9019  00132A  6EDF               	movwf	indf2,c
  9020                           
  9021                           ;my_i2c.c: 112: ic_ptr->buflen = 0;
  9022  00132C  0100               	movlb	0	; () banked
  9023  00132E  EE20 F00A          	lfsr	2,10
  9024  001332  0100               	movlb	0	; () banked
  9025  001334  51C9               	movf	_ic_ptr& (0+255),w,b
  9026  001336  26D9               	addwf	fsr2l,f,c
  9027  001338  0100               	movlb	0	; () banked
  9028  00133A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9029  00133C  22DA               	addwfc	fsr2h,f,c
  9030  00133E  0E00               	movlw	0
  9031  001340  6EDF               	movwf	indf2,c
  9032                           
  9033                           ; BSR set to: 0
  9034                           ;my_i2c.c: 114: if (data_read) {
  9035  001342  0100               	movlb	0	; () banked
  9036  001344  0100               	movlb	0	; () banked
  9037  001346  5180               	movf	handle_start@data_read& (0+255),w,b
  9038  001348  B4D8               	btfsc	status,2,c
  9039  00134A  D03D               	goto	i2l4253
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;my_i2c.c: 115: if (SSPSTATbits.D_A == 1) {
  9043  00134C  AAC7               	btfss	4039,5,c	;volatile
  9044  00134E  D021               	goto	i2l323
  9045                           
  9046                           ; BSR set to: 0
  9047                           ;my_i2c.c: 118: ic_ptr->status = 0x5;
  9048  001350  0100               	movlb	0	; () banked
  9049  001352  EE20 F00D          	lfsr	2,13
  9050  001356  0100               	movlb	0	; () banked
  9051  001358  51C9               	movf	_ic_ptr& (0+255),w,b
  9052  00135A  26D9               	addwf	fsr2l,f,c
  9053  00135C  0100               	movlb	0	; () banked
  9054  00135E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9055  001360  22DA               	addwfc	fsr2h,f,c
  9056  001362  0E05               	movlw	5
  9057  001364  6EDF               	movwf	indf2,c
  9058                           
  9059                           ;my_i2c.c: 119: ic_ptr->error_count++;
  9060  001366  0100               	movlb	0	; () banked
  9061  001368  EE20 F00F          	lfsr	2,15
  9062  00136C  0100               	movlb	0	; () banked
  9063  00136E  51C9               	movf	_ic_ptr& (0+255),w,b
  9064  001370  26D9               	addwf	fsr2l,f,c
  9065  001372  0100               	movlb	0	; () banked
  9066  001374  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9067  001376  22DA               	addwfc	fsr2h,f,c
  9068  001378  2ADF               	incf	indf2,f,c
  9069                           
  9070                           ;my_i2c.c: 120: ic_ptr->error_code = 0x5;
  9071  00137A  0100               	movlb	0	; () banked
  9072  00137C  EE20 F00E          	lfsr	2,14
  9073  001380  0100               	movlb	0	; () banked
  9074  001382  51C9               	movf	_ic_ptr& (0+255),w,b
  9075  001384  26D9               	addwf	fsr2l,f,c
  9076  001386  0100               	movlb	0	; () banked
  9077  001388  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9078  00138A  22DA               	addwfc	fsr2h,f,c
  9079  00138C  0E05               	movlw	5
  9080  00138E  6EDF               	movwf	indf2,c
  9081                           
  9082                           ;my_i2c.c: 121: } else {
  9083  001390  0012               	return	
  9084  001392                     i2l323:
  9085                           
  9086                           ; BSR set to: 0
  9087                           ;my_i2c.c: 122: if (SSPSTATbits.R_W == 1) {
  9088  001392  A4C7               	btfss	4039,2,c	;volatile
  9089  001394  D00C               	goto	i2l4251
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;my_i2c.c: 123: ic_ptr->status = 0x8;
  9093  001396  0100               	movlb	0	; () banked
  9094  001398  EE20 F00D          	lfsr	2,13
  9095  00139C  0100               	movlb	0	; () banked
  9096  00139E  51C9               	movf	_ic_ptr& (0+255),w,b
  9097  0013A0  26D9               	addwf	fsr2l,f,c
  9098  0013A2  0100               	movlb	0	; () banked
  9099  0013A4  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9100  0013A6  22DA               	addwfc	fsr2h,f,c
  9101  0013A8  0E08               	movlw	8
  9102  0013AA  6EDF               	movwf	indf2,c
  9103                           
  9104                           ;my_i2c.c: 124: } else {
  9105  0013AC  0012               	return	
  9106  0013AE                     i2l4251:
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;my_i2c.c: 125: ic_ptr->status = 0x7;
  9110  0013AE  0100               	movlb	0	; () banked
  9111  0013B0  EE20 F00D          	lfsr	2,13
  9112  0013B4  0100               	movlb	0	; () banked
  9113  0013B6  51C9               	movf	_ic_ptr& (0+255),w,b
  9114  0013B8  26D9               	addwf	fsr2l,f,c
  9115  0013BA  0100               	movlb	0	; () banked
  9116  0013BC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9117  0013BE  22DA               	addwfc	fsr2h,f,c
  9118  0013C0  0E07               	movlw	7
  9119  0013C2  6EDF               	movwf	indf2,c
  9120  0013C4  0012               	return	
  9121  0013C6                     i2l4253:
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;my_i2c.c: 129: ic_ptr->status = 0x6;
  9125  0013C6  0100               	movlb	0	; () banked
  9126  0013C8  EE20 F00D          	lfsr	2,13
  9127  0013CC  0100               	movlb	0	; () banked
  9128  0013CE  51C9               	movf	_ic_ptr& (0+255),w,b
  9129  0013D0  26D9               	addwf	fsr2l,f,c
  9130  0013D2  0100               	movlb	0	; () banked
  9131  0013D4  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9132  0013D6  22DA               	addwfc	fsr2h,f,c
  9133  0013D8  0E06               	movlw	6
  9134  0013DA  6EDF               	movwf	indf2,c
  9135  0013DC  0012               	return	
  9136  0013DE                     __end_of_handle_start:
  9137                           	opt stack 0
  9138                           pclatu	equ	0xFFB
  9139                           pclath	equ	0xFFA
  9140                           tblptru	equ	0xFF8
  9141                           tblptrh	equ	0xFF7
  9142                           tblptrl	equ	0xFF6
  9143                           tablat	equ	0xFF5
  9144                           prodh	equ	0xFF4
  9145                           prodl	equ	0xFF3
  9146                           intcon	equ	0xFF2
  9147                           intcon2	equ	0xFF1
  9148                           postinc0	equ	0xFEE
  9149                           fsr0h	equ	0xFEA
  9150                           fsr0l	equ	0xFE9
  9151                           wreg	equ	0xFE8
  9152                           indf1	equ	0xFE7
  9153                           postinc1	equ	0xFE6
  9154                           postdec1	equ	0xFE5
  9155                           fsr1h	equ	0xFE2
  9156                           fsr1l	equ	0xFE1
  9157                           bsr	equ	0xFE0
  9158                           indf2	equ	0xFDF
  9159                           postinc2	equ	0xFDE
  9160                           postdec2	equ	0xFDD
  9161                           fsr2h	equ	0xFDA
  9162                           fsr2l	equ	0xFD9
  9163                           status	equ	0xFD8
  9164                           
  9165 ;; *************** function _ToMainHigh_sendmsg *****************
  9166 ;; Defined at:
  9167 ;;		line 126 in file "../src/messages.c"
  9168 ;; Parameters:    Size  Location     Type
  9169 ;;  length          1    wreg     unsigned char 
  9170 ;;  msgtype         1   22[BANK0 ] unsigned char 
  9171 ;;  data            2   23[BANK0 ] PTR void 
  9172 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), 
  9173 ;; Auto vars:     Size  Location     Type
  9174 ;;  length          1   25[BANK0 ] unsigned char 
  9175 ;; Return value:  Size  Location     Type
  9176 ;;                  1    wreg      char 
  9177 ;; Registers used:
  9178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9179 ;; Tracked objects:
  9180 ;;		On entry : 0/0
  9181 ;;		On exit  : 0/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9184 ;;      Params:         0       3       0       0       0
  9185 ;;      Locals:         0       1       0       0       0
  9186 ;;      Temps:          0       0       0       0       0
  9187 ;;      Totals:         0       4       0       0       0
  9188 ;;Total ram usage:        4 bytes
  9189 ;; Hardware stack levels used:    1
  9190 ;; Hardware stack levels required when called:    2
  9191 ;; This function calls:
  9192 ;;		i2_send_msg
  9193 ;; This function is called by:
  9194 ;;		_i2c_slave_int_handler
  9195 ;;		_i2c_master_int_handler
  9196 ;; This function uses a non-reentrant model
  9197 ;;
  9198                           
  9199                           	psect	text51
  9200  0020FA                     __ptext51:
  9201                           	opt stack 0
  9202  0020FA                     _ToMainHigh_sendmsg:
  9203                           	opt stack 16
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;incstack = 0
  9207                           ;ToMainHigh_sendmsg@length stored from wreg
  9208  0020FA  CFE8 F099          	movff	wreg,ToMainHigh_sendmsg@length
  9209                           
  9210                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  9211                           ;	Return value of _ToMainHigh_sendmsg is never used
  9212  0020FE  0101               	movlb	1	; () banked
  9213  002100  0E01               	movlw	high _ToMainHigh_MQ
  9214  002102  0100               	movlb	0	; () banked
  9215  002104  0100               	movlb	0	; () banked
  9216  002106  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  9217  002108  0101               	movlb	1	; () banked
  9218  00210A  0E00               	movlw	low _ToMainHigh_MQ
  9219  00210C  0100               	movlb	0	; () banked
  9220  00210E  0100               	movlb	0	; () banked
  9221  002110  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  9222  002112  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  9223  002116  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  9224  00211A  0100               	movlb	0	; () banked
  9225  00211C  0100               	movlb	0	; () banked
  9226  00211E  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  9227  002122  0100               	movlb	0	; () banked
  9228  002124  0100               	movlb	0	; () banked
  9229  002126  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  9230  00212A  EC5E  F007         	call	i2_send_msg	;wreg free
  9231  00212E  0012               	return	
  9232  002130                     __end_of_ToMainHigh_sendmsg:
  9233                           	opt stack 0
  9234                           pclatu	equ	0xFFB
  9235                           pclath	equ	0xFFA
  9236                           tblptru	equ	0xFF8
  9237                           tblptrh	equ	0xFF7
  9238                           tblptrl	equ	0xFF6
  9239                           tablat	equ	0xFF5
  9240                           prodh	equ	0xFF4
  9241                           prodl	equ	0xFF3
  9242                           intcon	equ	0xFF2
  9243                           intcon2	equ	0xFF1
  9244                           postinc0	equ	0xFEE
  9245                           fsr0h	equ	0xFEA
  9246                           fsr0l	equ	0xFE9
  9247                           wreg	equ	0xFE8
  9248                           indf1	equ	0xFE7
  9249                           postinc1	equ	0xFE6
  9250                           postdec1	equ	0xFE5
  9251                           fsr1h	equ	0xFE2
  9252                           fsr1l	equ	0xFE1
  9253                           bsr	equ	0xFE0
  9254                           indf2	equ	0xFDF
  9255                           postinc2	equ	0xFDE
  9256                           postdec2	equ	0xFDD
  9257                           fsr2h	equ	0xFDA
  9258                           fsr2l	equ	0xFD9
  9259                           status	equ	0xFD8
  9260                           
  9261 ;; *************** function i2_send_msg *****************
  9262 ;; Defined at:
  9263 ;;		line 24 in file "../src/messages.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  9266 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9267 ;;  length          1   12[BANK0 ] unsigned char 
  9268 ;;  msgtype         1   13[BANK0 ] unsigned char 
  9269 ;;  data            2   14[BANK0 ] PTR void 
  9270 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  9271 ;;		 -> main@uc(13), 
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  9274 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  9275 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9276 ;;  send_msg        2   17[BANK0 ] unsigned int 
  9277 ;;  send_msg        1   19[BANK0 ] unsigned char 
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  1    wreg      char 
  9280 ;; Registers used:
  9281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9287 ;;      Params:         0       6       0       0       0
  9288 ;;      Locals:         0       5       0       0       0
  9289 ;;      Temps:          0       1       0       0       0
  9290 ;;      Totals:         0      12       0       0       0
  9291 ;;Total ram usage:       12 bytes
  9292 ;; Hardware stack levels used:    1
  9293 ;; Hardware stack levels required when called:    1
  9294 ;; This function calls:
  9295 ;;		i2___awmod
  9296 ;;		i2_memcpy
  9297 ;; This function is called by:
  9298 ;;		_ToMainHigh_sendmsg
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           	psect	text52
  9303  000EBC                     __ptext52:
  9304                           	opt stack 0
  9305  000EBC                     i2_send_msg:
  9306                           	opt stack 16
  9307                           
  9308                           ;messages.c: 25: unsigned char slot;
  9309                           ;messages.c: 27: msg *qmsg;
  9310                           ;messages.c: 28: size_t tlength = length;
  9311                           
  9312                           ;incstack = 0
  9313  000EBC  0100               	movlb	0	; () banked
  9314  000EBE  0100               	movlb	0	; () banked
  9315  000EC0  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  9316  000EC4  0100               	movlb	0	; () banked
  9317  000EC6  0100               	movlb	0	; () banked
  9318  000EC8  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  9319                           
  9320                           ; BSR set to: 0
  9321                           ;messages.c: 38: slot = qptr->cur_write_ind;
  9322  000ECA  0100               	movlb	0	; () banked
  9323  000ECC  EE20 F041          	lfsr	2,65
  9324  000ED0  0100               	movlb	0	; () banked
  9325  000ED2  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9326  000ED4  26D9               	addwf	fsr2l,f,c
  9327  000ED6  0100               	movlb	0	; () banked
  9328  000ED8  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9329  000EDA  22DA               	addwfc	fsr2h,f,c
  9330  000EDC  50DF               	movf	indf2,w,c
  9331  000EDE  0100               	movlb	0	; () banked
  9332  000EE0  0100               	movlb	0	; () banked
  9333  000EE2  6F93               	movwf	i2send_msg@slot& (0+255),b
  9334                           
  9335                           ; BSR set to: 0
  9336                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  9337  000EE4  0100               	movlb	0	; () banked
  9338  000EE6  0100               	movlb	0	; () banked
  9339  000EE8  5193               	movf	i2send_msg@slot& (0+255),w,b
  9340  000EEA  0D0D               	mullw	13
  9341  000EEC  50F3               	movf	prodl,w,c
  9342  000EEE  0100               	movlb	0	; () banked
  9343  000EF0  0100               	movlb	0	; () banked
  9344  000EF2  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  9345  000EF4  0100               	movlb	0	; () banked
  9346  000EF6  0100               	movlb	0	; () banked
  9347  000EF8  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  9348  000EFA  50F4               	movf	prodh,w,c
  9349  000EFC  0100               	movlb	0	; () banked
  9350  000EFE  0100               	movlb	0	; () banked
  9351  000F00  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  9352  000F02  0100               	movlb	0	; () banked
  9353  000F04  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  9354                           
  9355                           ; BSR set to: 0
  9356                           ;messages.c: 41: if (qmsg->full != 0) {
  9357  000F06  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9358  000F0A  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9359  000F0E  50DF               	movf	indf2,w,c
  9360  000F10  B4D8               	btfsc	status,2,c
  9361  000F12  D002               	goto	i2l4583
  9362                           
  9363                           ; BSR set to: 0
  9364                           ;messages.c: 42: return (-1);
  9365  000F14  0EFF               	movlw	255
  9366  000F16  0012               	return	
  9367  000F18                     i2l4583:
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;messages.c: 43: }
  9371                           ;messages.c: 46: qmsg->length = length;
  9372  000F18  0100               	movlb	0	; () banked
  9373  000F1A  EE20 F001          	lfsr	2,1
  9374  000F1E  0100               	movlb	0	; () banked
  9375  000F20  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  9376  000F22  26D9               	addwf	fsr2l,f,c
  9377  000F24  0100               	movlb	0	; () banked
  9378  000F26  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9379  000F28  22DA               	addwfc	fsr2h,f,c
  9380  000F2A  0100               	movlb	0	; () banked
  9381  000F2C  C08C  FFDF         	movff	i2send_msg@length,indf2
  9382                           
  9383                           ;messages.c: 47: qmsg->msgtype = msgtype;
  9384  000F30  0100               	movlb	0	; () banked
  9385  000F32  EE20 F002          	lfsr	2,2
  9386  000F36  0100               	movlb	0	; () banked
  9387  000F38  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  9388  000F3A  26D9               	addwf	fsr2l,f,c
  9389  000F3C  0100               	movlb	0	; () banked
  9390  000F3E  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9391  000F40  22DA               	addwfc	fsr2h,f,c
  9392  000F42  0100               	movlb	0	; () banked
  9393  000F44  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  9394                           
  9395                           ; BSR set to: 0
  9396                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9397  000F48  0E03               	movlw	3
  9398  000F4A  0100               	movlb	0	; () banked
  9399  000F4C  0100               	movlb	0	; () banked
  9400  000F4E  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  9401  000F50  0100               	movlb	0	; () banked
  9402  000F52  0100               	movlb	0	; () banked
  9403  000F54  6F80               	movwf	i2memcpy@d1& (0+255),b
  9404  000F56  0E00               	movlw	0
  9405  000F58  0100               	movlb	0	; () banked
  9406  000F5A  0100               	movlb	0	; () banked
  9407  000F5C  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  9408  000F5E  0100               	movlb	0	; () banked
  9409  000F60  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  9410  000F62  0100               	movlb	0	; () banked
  9411  000F64  0100               	movlb	0	; () banked
  9412  000F66  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9413  000F6A  0100               	movlb	0	; () banked
  9414  000F6C  0100               	movlb	0	; () banked
  9415  000F6E  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  9416  000F72  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  9417  000F76  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9418  000F7A  EC13  F00F         	call	i2_memcpy	;wreg free
  9419                           
  9420                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  9421  000F7E  0100               	movlb	0	; () banked
  9422  000F80  EE20 F041          	lfsr	2,65
  9423  000F84  0100               	movlb	0	; () banked
  9424  000F86  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9425  000F88  26D9               	addwf	fsr2l,f,c
  9426  000F8A  0100               	movlb	0	; () banked
  9427  000F8C  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9428  000F8E  22DA               	addwfc	fsr2h,f,c
  9429  000F90  0100               	movlb	0	; () banked
  9430  000F92  EE10 F041          	lfsr	1,65
  9431  000F96  0100               	movlb	0	; () banked
  9432  000F98  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9433  000F9A  26E1               	addwf	fsr1l,f,c
  9434  000F9C  0100               	movlb	0	; () banked
  9435  000F9E  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9436  000FA0  22E2               	addwfc	fsr1h,f,c
  9437  000FA2  50E7               	movf	indf1,w,c
  9438  000FA4  0100               	movlb	0	; () banked
  9439  000FA6  6F90               	movwf	??i2_send_msg& (0+255),b
  9440  000FA8  0E01               	movlw	1
  9441  000FAA  0100               	movlb	0	; () banked
  9442  000FAC  2590               	addwf	??i2_send_msg& (0+255),w,b
  9443  000FAE  0100               	movlb	0	; () banked
  9444  000FB0  0100               	movlb	0	; () banked
  9445  000FB2  6F80               	movwf	i2___awmod@dividend& (0+255),b
  9446  000FB4  0100               	movlb	0	; () banked
  9447  000FB6  0100               	movlb	0	; () banked
  9448  000FB8  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  9449  000FBA  0E00               	movlw	0
  9450  000FBC  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  9451  000FBE  0E00               	movlw	0
  9452  000FC0  0100               	movlb	0	; () banked
  9453  000FC2  0100               	movlb	0	; () banked
  9454  000FC4  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  9455  000FC6  0E05               	movlw	5
  9456  000FC8  0100               	movlb	0	; () banked
  9457  000FCA  6F82               	movwf	i2___awmod@divisor& (0+255),b
  9458  000FCC  EC02  F009         	call	i2___awmod	;wreg free
  9459  000FD0  0100               	movlb	0	; () banked
  9460  000FD2  0100               	movlb	0	; () banked
  9461  000FD4  5180               	movf	?i2___awmod& (0+255),w,b
  9462  000FD6  6EDF               	movwf	indf2,c
  9463                           
  9464                           ; BSR set to: 0
  9465                           ;messages.c: 59: qmsg->full = 1;
  9466  000FD8  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9467  000FDC  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9468  000FE0  0E01               	movlw	1
  9469  000FE2  6EDF               	movwf	indf2,c
  9470                           
  9471                           ; BSR set to: 0
  9472                           ;messages.c: 60: return (1);
  9473  000FE4  0E01               	movlw	1
  9474  000FE6  0012               	return	
  9475  000FE8                     __end_ofi2_send_msg:
  9476                           	opt stack 0
  9477                           pclatu	equ	0xFFB
  9478                           pclath	equ	0xFFA
  9479                           tblptru	equ	0xFF8
  9480                           tblptrh	equ	0xFF7
  9481                           tblptrl	equ	0xFF6
  9482                           tablat	equ	0xFF5
  9483                           prodh	equ	0xFF4
  9484                           prodl	equ	0xFF3
  9485                           intcon	equ	0xFF2
  9486                           intcon2	equ	0xFF1
  9487                           postinc0	equ	0xFEE
  9488                           fsr0h	equ	0xFEA
  9489                           fsr0l	equ	0xFE9
  9490                           wreg	equ	0xFE8
  9491                           indf1	equ	0xFE7
  9492                           postinc1	equ	0xFE6
  9493                           postdec1	equ	0xFE5
  9494                           fsr1h	equ	0xFE2
  9495                           fsr1l	equ	0xFE1
  9496                           bsr	equ	0xFE0
  9497                           indf2	equ	0xFDF
  9498                           postinc2	equ	0xFDE
  9499                           postdec2	equ	0xFDD
  9500                           fsr2h	equ	0xFDA
  9501                           fsr2l	equ	0xFD9
  9502                           status	equ	0xFD8
  9503                           
  9504 ;; *************** function i2_memcpy *****************
  9505 ;; Defined at:
  9506 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  9507 ;; Parameters:    Size  Location     Type
  9508 ;;  d1              2    0[BANK0 ] PTR void 
  9509 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  9510 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9511 ;;		 -> main@msgbuffer(11), 
  9512 ;;  s1              2    2[BANK0 ] PTR const void 
  9513 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9514 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9515 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  9516 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  9517 ;;		 -> main@uc(13), 
  9518 ;;  n               2    4[BANK0 ] unsigned int 
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9521 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9522 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9523 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  9524 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  9525 ;;		 -> main@uc(13), 
  9526 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9527 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  9528 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9529 ;;		 -> main@msgbuffer(11), 
  9530 ;; Return value:  Size  Location     Type
  9531 ;;                  2    0[BANK0 ] PTR void 
  9532 ;; Registers used:
  9533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 0/0
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9539 ;;      Params:         0       6       0       0       0
  9540 ;;      Locals:         0       4       0       0       0
  9541 ;;      Temps:          0       0       0       0       0
  9542 ;;      Totals:         0      10       0       0       0
  9543 ;;Total ram usage:       10 bytes
  9544 ;; Hardware stack levels used:    1
  9545 ;; This function calls:
  9546 ;;		Nothing
  9547 ;; This function is called by:
  9548 ;;		i2_send_msg
  9549 ;; This function uses a non-reentrant model
  9550 ;;
  9551                           
  9552                           	psect	text53
  9553  001E26                     __ptext53:
  9554                           	opt stack 0
  9555  001E26                     i2_memcpy:
  9556                           	opt stack 16
  9557                           
  9558                           ; BSR set to: 0
  9559                           ;incstack = 0
  9560  001E26  0100               	movlb	0	; () banked
  9561  001E28  0100               	movlb	0	; () banked
  9562  001E2A  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9563  001E2E  0100               	movlb	0	; () banked
  9564  001E30  0100               	movlb	0	; () banked
  9565  001E32  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  9566  001E36  0100               	movlb	0	; () banked
  9567  001E38  0100               	movlb	0	; () banked
  9568  001E3A  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9569  001E3E  0100               	movlb	0	; () banked
  9570  001E40  0100               	movlb	0	; () banked
  9571  001E42  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  9572  001E46  D012               	goto	i2l4619
  9573  001E48                     i2l4613:
  9574                           
  9575                           ; BSR set to: 0
  9576  001E48  C088  FFD9         	movff	i2memcpy@s,fsr2l
  9577  001E4C  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  9578  001E50  C086  FFE1         	movff	i2memcpy@d,fsr1l
  9579  001E54  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  9580  001E58  CFDF FFE7          	movff	indf2,indf1
  9581                           
  9582                           ; BSR set to: 0
  9583  001E5C  0100               	movlb	0	; () banked
  9584  001E5E  0100               	movlb	0	; () banked
  9585  001E60  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  9586  001E62  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  9587                           
  9588                           ; BSR set to: 0
  9589  001E64  0100               	movlb	0	; () banked
  9590  001E66  0100               	movlb	0	; () banked
  9591  001E68  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  9592  001E6A  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  9593  001E6C                     i2l4619:
  9594                           
  9595                           ; BSR set to: 0
  9596  001E6C  0100               	movlb	0	; () banked
  9597  001E6E  0100               	movlb	0	; () banked
  9598  001E70  0784               	decf	i2memcpy@n& (0+255),f,b
  9599  001E72  A0D8               	btfss	status,0,c
  9600  001E74  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  9601  001E76  0100               	movlb	0	; () banked
  9602  001E78  2984               	incf	i2memcpy@n& (0+255),w,b
  9603  001E7A  B4D8               	btfsc	status,2,c
  9604  001E7C  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  9605  001E7E  B4D8               	btfsc	status,2,c
  9606                           
  9607                           ; BSR set to: 0
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;	Return value of i2_memcpy is never used
  9611  001E80  0012               	return	
  9612  001E82  D7E2               	goto	i2l4613
  9613  001E84                     __end_ofi2_memcpy:
  9614                           	opt stack 0
  9615                           pclatu	equ	0xFFB
  9616                           pclath	equ	0xFFA
  9617                           tblptru	equ	0xFF8
  9618                           tblptrh	equ	0xFF7
  9619                           tblptrl	equ	0xFF6
  9620                           tablat	equ	0xFF5
  9621                           prodh	equ	0xFF4
  9622                           prodl	equ	0xFF3
  9623                           intcon	equ	0xFF2
  9624                           intcon2	equ	0xFF1
  9625                           postinc0	equ	0xFEE
  9626                           fsr0h	equ	0xFEA
  9627                           fsr0l	equ	0xFE9
  9628                           wreg	equ	0xFE8
  9629                           indf1	equ	0xFE7
  9630                           postinc1	equ	0xFE6
  9631                           postdec1	equ	0xFE5
  9632                           fsr1h	equ	0xFE2
  9633                           fsr1l	equ	0xFE1
  9634                           bsr	equ	0xFE0
  9635                           indf2	equ	0xFDF
  9636                           postinc2	equ	0xFDE
  9637                           postdec2	equ	0xFDD
  9638                           fsr2h	equ	0xFDA
  9639                           fsr2l	equ	0xFD9
  9640                           status	equ	0xFD8
  9641                           
  9642 ;; *************** function i2___awmod *****************
  9643 ;; Defined at:
  9644 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  9645 ;; Parameters:    Size  Location     Type
  9646 ;;  dividend        2    0[BANK0 ] int 
  9647 ;;  divisor         2    2[BANK0 ] int 
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;  __awmod         1    6[BANK0 ] unsigned char 
  9650 ;;  __awmod         1    5[BANK0 ] unsigned char 
  9651 ;; Return value:  Size  Location     Type
  9652 ;;                  2    0[BANK0 ] int 
  9653 ;; Registers used:
  9654 ;;		wreg, status,2, status,0, prodl
  9655 ;; Tracked objects:
  9656 ;;		On entry : 0/0
  9657 ;;		On exit  : 0/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9660 ;;      Params:         0       4       0       0       0
  9661 ;;      Locals:         0       2       0       0       0
  9662 ;;      Temps:          0       1       0       0       0
  9663 ;;      Totals:         0       7       0       0       0
  9664 ;;Total ram usage:        7 bytes
  9665 ;; Hardware stack levels used:    1
  9666 ;; This function calls:
  9667 ;;		Nothing
  9668 ;; This function is called by:
  9669 ;;		i2_send_msg
  9670 ;; This function uses a non-reentrant model
  9671 ;;
  9672                           
  9673                           	psect	text54
  9674  001204                     __ptext54:
  9675                           	opt stack 0
  9676  001204                     i2___awmod:
  9677                           	opt stack 16
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;incstack = 0
  9681  001204  0100               	movlb	0	; () banked
  9682  001206  6F84               	movwf	??i2___awmod& (0+255),b
  9683  001208  0E00               	movlw	0
  9684  00120A  0100               	movlb	0	; () banked
  9685  00120C  0100               	movlb	0	; () banked
  9686  00120E  6F86               	movwf	i2___awmod@sign& (0+255),b
  9687  001210  0100               	movlb	0	; () banked
  9688  001212  5184               	movf	??i2___awmod& (0+255),w,b
  9689                           
  9690                           ; BSR set to: 0
  9691  001214  0100               	movlb	0	; () banked
  9692  001216  0100               	movlb	0	; () banked
  9693  001218  5181               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  9694  00121A  0A80               	xorlw	128
  9695  00121C  6EF3               	movwf	prodl,c
  9696  00121E  0E80               	movlw	128
  9697  001220  5CF3               	subwf	prodl,w,c
  9698  001222  0E00               	movlw	0
  9699  001224  B4D8               	btfsc	status,2,c
  9700  001226  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9701  001228  B0D8               	btfsc	status,0,c
  9702  00122A  D00F               	goto	i2l4629
  9703                           
  9704                           ; BSR set to: 0
  9705  00122C  0100               	movlb	0	; () banked
  9706  00122E  0100               	movlb	0	; () banked
  9707  001230  6D80               	negf	i2___awmod@dividend& (0+255),b
  9708  001232  0100               	movlb	0	; () banked
  9709  001234  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9710  001236  B0D8               	btfsc	status,0,c
  9711  001238  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9712                           
  9713                           ; BSR set to: 0
  9714  00123A  0100               	movlb	0	; () banked
  9715  00123C  6F84               	movwf	??i2___awmod& (0+255),b
  9716  00123E  0E01               	movlw	1
  9717  001240  0100               	movlb	0	; () banked
  9718  001242  0100               	movlb	0	; () banked
  9719  001244  6F86               	movwf	i2___awmod@sign& (0+255),b
  9720  001246  0100               	movlb	0	; () banked
  9721  001248  5184               	movf	??i2___awmod& (0+255),w,b
  9722  00124A                     i2l4629:
  9723                           
  9724                           ; BSR set to: 0
  9725  00124A  0100               	movlb	0	; () banked
  9726  00124C  0100               	movlb	0	; () banked
  9727  00124E  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9728  001250  0A80               	xorlw	128
  9729  001252  6EF3               	movwf	prodl,c
  9730  001254  0E80               	movlw	128
  9731  001256  5CF3               	subwf	prodl,w,c
  9732  001258  0E00               	movlw	0
  9733  00125A  B4D8               	btfsc	status,2,c
  9734  00125C  5D82               	subwf	i2___awmod@divisor& (0+255),w,b
  9735  00125E  B0D8               	btfsc	status,0,c
  9736  001260  D007               	goto	i2l4633
  9737                           
  9738                           ; BSR set to: 0
  9739  001262  0100               	movlb	0	; () banked
  9740  001264  0100               	movlb	0	; () banked
  9741  001266  6D82               	negf	i2___awmod@divisor& (0+255),b
  9742  001268  0100               	movlb	0	; () banked
  9743  00126A  1F83               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  9744  00126C  B0D8               	btfsc	status,0,c
  9745  00126E  2B83               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  9746  001270                     i2l4633:
  9747                           
  9748                           ; BSR set to: 0
  9749  001270  0100               	movlb	0	; () banked
  9750  001272  0100               	movlb	0	; () banked
  9751  001274  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9752  001276  1182               	iorwf	i2___awmod@divisor& (0+255),w,b
  9753  001278  B4D8               	btfsc	status,2,c
  9754  00127A  D03A               	goto	i2l4649
  9755                           
  9756                           ; BSR set to: 0
  9757  00127C  0100               	movlb	0	; () banked
  9758  00127E  6F84               	movwf	??i2___awmod& (0+255),b
  9759  001280  0E01               	movlw	1
  9760  001282  0100               	movlb	0	; () banked
  9761  001284  0100               	movlb	0	; () banked
  9762  001286  6F85               	movwf	i2___awmod@counter& (0+255),b
  9763  001288  0100               	movlb	0	; () banked
  9764  00128A  5184               	movf	??i2___awmod& (0+255),w,b
  9765  00128C  D009               	goto	i2l4639
  9766  00128E                     i2l4637:
  9767                           
  9768                           ; BSR set to: 0
  9769  00128E  0100               	movlb	0	; () banked
  9770  001290  0100               	movlb	0	; () banked
  9771  001292  0100               	movlb	0	; () banked
  9772  001294  90D8               	bcf	status,0,c
  9773  001296  3782               	rlcf	i2___awmod@divisor& (0+255),f,b
  9774  001298  3783               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  9775  00129A  0100               	movlb	0	; () banked
  9776  00129C  0100               	movlb	0	; () banked
  9777  00129E  2B85               	incf	i2___awmod@counter& (0+255),f,b
  9778  0012A0                     i2l4639:
  9779                           
  9780                           ; BSR set to: 0
  9781  0012A0  0100               	movlb	0	; () banked
  9782  0012A2  0100               	movlb	0	; () banked
  9783  0012A4  AF83               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  9784  0012A6  D7F3               	goto	i2l4637
  9785  0012A8                     i2l4641:
  9786                           
  9787                           ; BSR set to: 0
  9788  0012A8  0100               	movlb	0	; () banked
  9789  0012AA  0100               	movlb	0	; () banked
  9790  0012AC  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9791  0012AE  0100               	movlb	0	; () banked
  9792  0012B0  0100               	movlb	0	; () banked
  9793  0012B2  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9794  0012B4  0100               	movlb	0	; () banked
  9795  0012B6  0100               	movlb	0	; () banked
  9796  0012B8  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9797  0012BA  0100               	movlb	0	; () banked
  9798  0012BC  0100               	movlb	0	; () banked
  9799  0012BE  5981               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  9800  0012C0  A0D8               	btfss	status,0,c
  9801  0012C2  D00C               	goto	i2l4645
  9802                           
  9803                           ; BSR set to: 0
  9804  0012C4  0100               	movlb	0	; () banked
  9805  0012C6  0100               	movlb	0	; () banked
  9806  0012C8  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9807  0012CA  0100               	movlb	0	; () banked
  9808  0012CC  0100               	movlb	0	; () banked
  9809  0012CE  5F80               	subwf	i2___awmod@dividend& (0+255),f,b
  9810  0012D0  0100               	movlb	0	; () banked
  9811  0012D2  0100               	movlb	0	; () banked
  9812  0012D4  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9813  0012D6  0100               	movlb	0	; () banked
  9814  0012D8  0100               	movlb	0	; () banked
  9815  0012DA  5B81               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  9816  0012DC                     i2l4645:
  9817                           
  9818                           ; BSR set to: 0
  9819  0012DC  0100               	movlb	0	; () banked
  9820  0012DE  0100               	movlb	0	; () banked
  9821  0012E0  0100               	movlb	0	; () banked
  9822  0012E2  90D8               	bcf	status,0,c
  9823  0012E4  3383               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  9824  0012E6  3382               	rrcf	i2___awmod@divisor& (0+255),f,b
  9825                           
  9826                           ; BSR set to: 0
  9827  0012E8  0100               	movlb	0	; () banked
  9828  0012EA  0100               	movlb	0	; () banked
  9829  0012EC  2F85               	decfsz	i2___awmod@counter& (0+255),f,b
  9830  0012EE  D7DC               	goto	i2l4641
  9831  0012F0                     i2l4649:
  9832                           
  9833                           ; BSR set to: 0
  9834  0012F0  0100               	movlb	0	; () banked
  9835  0012F2  0100               	movlb	0	; () banked
  9836  0012F4  5186               	movf	i2___awmod@sign& (0+255),w,b
  9837  0012F6  B4D8               	btfsc	status,2,c
  9838  0012F8  D007               	goto	i2l4653
  9839                           
  9840                           ; BSR set to: 0
  9841  0012FA  0100               	movlb	0	; () banked
  9842  0012FC  0100               	movlb	0	; () banked
  9843  0012FE  6D80               	negf	i2___awmod@dividend& (0+255),b
  9844  001300  0100               	movlb	0	; () banked
  9845  001302  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9846  001304  B0D8               	btfsc	status,0,c
  9847  001306  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9848  001308                     i2l4653:
  9849                           
  9850                           ; BSR set to: 0
  9851  001308  C080  F080         	movff	i2___awmod@dividend,?i2___awmod
  9852  00130C  C081  F081         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9853  001310  0012               	return	
  9854  001312                     __end_ofi2___awmod:
  9855                           	opt stack 0
  9856                           pclatu	equ	0xFFB
  9857                           pclath	equ	0xFFA
  9858                           tblptru	equ	0xFF8
  9859                           tblptrh	equ	0xFF7
  9860                           tblptrl	equ	0xFF6
  9861                           tablat	equ	0xFF5
  9862                           prodh	equ	0xFF4
  9863                           prodl	equ	0xFF3
  9864                           intcon	equ	0xFF2
  9865                           intcon2	equ	0xFF1
  9866                           postinc0	equ	0xFEE
  9867                           fsr0h	equ	0xFEA
  9868                           fsr0l	equ	0xFE9
  9869                           wreg	equ	0xFE8
  9870                           indf1	equ	0xFE7
  9871                           postinc1	equ	0xFE6
  9872                           postdec1	equ	0xFE5
  9873                           fsr1h	equ	0xFE2
  9874                           fsr1l	equ	0xFE1
  9875                           bsr	equ	0xFE0
  9876                           indf2	equ	0xFDF
  9877                           postinc2	equ	0xFDE
  9878                           postdec2	equ	0xFDD
  9879                           fsr2h	equ	0xFDA
  9880                           fsr2l	equ	0xFD9
  9881                           status	equ	0xFD8
  9882                           
  9883 ;; *************** function _SleepIfOkay *****************
  9884 ;; Defined at:
  9885 ;;		line 228 in file "../src/messages.c"
  9886 ;; Parameters:    Size  Location     Type
  9887 ;;		None
  9888 ;; Auto vars:     Size  Location     Type
  9889 ;;		None
  9890 ;; Return value:  Size  Location     Type
  9891 ;;		None               void
  9892 ;; Registers used:
  9893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9894 ;; Tracked objects:
  9895 ;;		On entry : 0/0
  9896 ;;		On exit  : 0/0
  9897 ;;		Unchanged: 0/0
  9898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9899 ;;      Params:         0       0       0       0       0
  9900 ;;      Locals:         0       0       0       0       0
  9901 ;;      Temps:          0       0       0       0       0
  9902 ;;      Totals:         0       0       0       0       0
  9903 ;;Total ram usage:        0 bytes
  9904 ;; Hardware stack levels used:    1
  9905 ;; Hardware stack levels required when called:    2
  9906 ;; This function calls:
  9907 ;;		_enter_sleep_mode
  9908 ;;		i2_check_msg
  9909 ;;		i2_in_high_int
  9910 ;;		i2_in_low_int
  9911 ;; This function is called by:
  9912 ;;		_InterruptHandlerHigh
  9913 ;; This function uses a non-reentrant model
  9914 ;;
  9915                           
  9916                           	psect	text55
  9917  001CF6                     __ptext55:
  9918                           	opt stack 0
  9919  001CF6                     _SleepIfOkay:
  9920                           	opt stack 18
  9921                           
  9922                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  9923                           
  9924                           ; BSR set to: 0
  9925                           ;incstack = 0
  9926  001CF6  664D               	tstfsz	_MQ_Main_Willing_to_block,c
  9927  001CF8  D001               	goto	i2l3801
  9928  001CFA  0012               	return	
  9929  001CFC                     i2l3801:
  9930                           
  9931                           ;messages.c: 232: }
  9932                           ;messages.c: 235: if (in_low_int()) {
  9933  001CFC  EC65  F00F         	call	i2_in_low_int	;wreg free
  9934  001D00  0100               	movlb	0	; () banked
  9935  001D02  0100               	movlb	0	; () banked
  9936  001D04  5183               	movf	(?i2_in_low_int+1)& (0+255),w,b
  9937  001D06  0100               	movlb	0	; () banked
  9938  001D08  1182               	iorwf	?i2_in_low_int& (0+255),w,b
  9939  001D0A  A4D8               	btfss	status,2,c
  9940  001D0C  0012               	return	
  9941                           
  9942                           ; BSR set to: 0
  9943                           ;messages.c: 237: }
  9944                           ;messages.c: 240: if (!in_high_int()) {
  9945                           
  9946                           ; BSR set to: 0
  9947                           
  9948                           ; BSR set to: 0
  9949                           ;messages.c: 236: return;
  9950  001D0E  EC66  F011         	call	i2_in_high_int	;wreg free
  9951  001D12  0100               	movlb	0	; () banked
  9952  001D14  0100               	movlb	0	; () banked
  9953  001D16  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
  9954  001D18  0100               	movlb	0	; () banked
  9955  001D1A  1180               	iorwf	?i2_in_high_int& (0+255),w,b
  9956  001D1C  B4D8               	btfsc	status,2,c
  9957  001D1E  0012               	return	
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;messages.c: 242: }
  9961                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  9962                           
  9963                           ; BSR set to: 0
  9964                           
  9965                           ; BSR set to: 0
  9966                           ;messages.c: 241: return;
  9967  001D20  0101               	movlb	1	; () banked
  9968  001D22  0E01               	movlw	high _ToMainHigh_MQ
  9969  001D24  0100               	movlb	0	; () banked
  9970  001D26  0100               	movlb	0	; () banked
  9971  001D28  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9972  001D2A  0101               	movlb	1	; () banked
  9973  001D2C  0E00               	movlw	low _ToMainHigh_MQ
  9974  001D2E  0100               	movlb	0	; () banked
  9975  001D30  0100               	movlb	0	; () banked
  9976  001D32  6F80               	movwf	i2check_msg@qptr& (0+255),b
  9977  001D34  EC98  F010         	call	i2_check_msg	;wreg free
  9978  001D38  0900               	iorlw	0
  9979  001D3A  A4D8               	btfss	status,2,c
  9980  001D3C  0012               	return	
  9981                           
  9982                           ;messages.c: 249: }
  9983                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  9984                           
  9985                           ;messages.c: 248: return;
  9986  001D3E  0101               	movlb	1	; () banked
  9987  001D40  0E01               	movlw	high _ToMainLow_MQ
  9988  001D42  0100               	movlb	0	; () banked
  9989  001D44  0100               	movlb	0	; () banked
  9990  001D46  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9991  001D48  0101               	movlb	1	; () banked
  9992  001D4A  0E43               	movlw	low _ToMainLow_MQ
  9993  001D4C  0100               	movlb	0	; () banked
  9994  001D4E  0100               	movlb	0	; () banked
  9995  001D50  6F80               	movwf	i2check_msg@qptr& (0+255),b
  9996  001D52  EC98  F010         	call	i2_check_msg	;wreg free
  9997  001D56  0900               	iorlw	0
  9998  001D58  B4D8               	btfsc	status,2,c
  9999                           
 10000                           ;messages.c: 252: }
 10001                           ;messages.c: 253: enter_sleep_mode();
 10002                           
 10003                           ;messages.c: 251: return;
 10004  001D5A  EC82  F011         	call	_enter_sleep_mode	;wreg free
 10005  001D5E  0012               	return	
 10006  001D60                     __end_of_SleepIfOkay:
 10007                           	opt stack 0
 10008                           pclatu	equ	0xFFB
 10009                           pclath	equ	0xFFA
 10010                           tblptru	equ	0xFF8
 10011                           tblptrh	equ	0xFF7
 10012                           tblptrl	equ	0xFF6
 10013                           tablat	equ	0xFF5
 10014                           prodh	equ	0xFF4
 10015                           prodl	equ	0xFF3
 10016                           intcon	equ	0xFF2
 10017                           intcon2	equ	0xFF1
 10018                           postinc0	equ	0xFEE
 10019                           fsr0h	equ	0xFEA
 10020                           fsr0l	equ	0xFE9
 10021                           wreg	equ	0xFE8
 10022                           indf1	equ	0xFE7
 10023                           postinc1	equ	0xFE6
 10024                           postdec1	equ	0xFE5
 10025                           fsr1h	equ	0xFE2
 10026                           fsr1l	equ	0xFE1
 10027                           bsr	equ	0xFE0
 10028                           indf2	equ	0xFDF
 10029                           postinc2	equ	0xFDE
 10030                           postdec2	equ	0xFDD
 10031                           fsr2h	equ	0xFDA
 10032                           fsr2l	equ	0xFD9
 10033                           status	equ	0xFD8
 10034                           
 10035 ;; *************** function i2_in_low_int *****************
 10036 ;; Defined at:
 10037 ;;		line 31 in file "../src/interrupts.c"
 10038 ;; Parameters:    Size  Location     Type
 10039 ;;		None
 10040 ;; Auto vars:     Size  Location     Type
 10041 ;;		None
 10042 ;; Return value:  Size  Location     Type
 10043 ;;                  2    2[BANK0 ] int 
 10044 ;; Registers used:
 10045 ;;		wreg, status,2, status,0, cstack
 10046 ;; Tracked objects:
 10047 ;;		On entry : 0/0
 10048 ;;		On exit  : 0/0
 10049 ;;		Unchanged: 0/0
 10050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10051 ;;      Params:         0       2       0       0       0
 10052 ;;      Locals:         0       0       0       0       0
 10053 ;;      Temps:          0       0       0       0       0
 10054 ;;      Totals:         0       2       0       0       0
 10055 ;;Total ram usage:        2 bytes
 10056 ;; Hardware stack levels used:    1
 10057 ;; Hardware stack levels required when called:    1
 10058 ;; This function calls:
 10059 ;;		i2_in_high_int
 10060 ;; This function is called by:
 10061 ;;		_SleepIfOkay
 10062 ;; This function uses a non-reentrant model
 10063 ;;
 10064                           
 10065                           	psect	text56
 10066  001ECA                     __ptext56:
 10067                           	opt stack 0
 10068  001ECA                     i2_in_low_int:
 10069                           	opt stack 18
 10070                           
 10071                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
 10072                           
 10073                           ;incstack = 0
 10074  001ECA  ACF2               	btfss	intcon,6,c	;volatile
 10075  001ECC  D008               	goto	i2l4559
 10076                           
 10077                           ;interrupts.c: 33: return (0);
 10078  001ECE  0E00               	movlw	0
 10079  001ED0  0100               	movlb	0	; () banked
 10080  001ED2  0100               	movlb	0	; () banked
 10081  001ED4  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 10082  001ED6  0E00               	movlw	0
 10083  001ED8  0100               	movlb	0	; () banked
 10084  001EDA  6F82               	movwf	?i2_in_low_int& (0+255),b
 10085  001EDC  0012               	return	
 10086  001EDE                     i2l4559:
 10087  001EDE  EC66  F011         	call	i2_in_high_int	;wreg free
 10088  001EE2  0100               	movlb	0	; () banked
 10089  001EE4  0100               	movlb	0	; () banked
 10090  001EE6  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
 10091  001EE8  0100               	movlb	0	; () banked
 10092  001EEA  1180               	iorwf	?i2_in_high_int& (0+255),w,b
 10093  001EEC  B4D8               	btfsc	status,2,c
 10094  001EEE  D008               	goto	i2l4567
 10095                           
 10096                           ; BSR set to: 0
 10097                           ;interrupts.c: 35: return (0);
 10098  001EF0  0E00               	movlw	0
 10099  001EF2  0100               	movlb	0	; () banked
 10100  001EF4  0100               	movlb	0	; () banked
 10101  001EF6  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 10102  001EF8  0E00               	movlw	0
 10103  001EFA  0100               	movlb	0	; () banked
 10104  001EFC  6F82               	movwf	?i2_in_low_int& (0+255),b
 10105  001EFE  0012               	return	
 10106  001F00                     i2l4567:
 10107                           
 10108                           ; BSR set to: 0
 10109                           ;interrupts.c: 37: return (1);
 10110  001F00  0E00               	movlw	0
 10111  001F02  0100               	movlb	0	; () banked
 10112  001F04  0100               	movlb	0	; () banked
 10113  001F06  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 10114  001F08  0E01               	movlw	1
 10115  001F0A  0100               	movlb	0	; () banked
 10116  001F0C  6F82               	movwf	?i2_in_low_int& (0+255),b
 10117  001F0E  0012               	return	
 10118  001F10                     __end_ofi2_in_low_int:
 10119                           	opt stack 0
 10120                           pclatu	equ	0xFFB
 10121                           pclath	equ	0xFFA
 10122                           tblptru	equ	0xFF8
 10123                           tblptrh	equ	0xFF7
 10124                           tblptrl	equ	0xFF6
 10125                           tablat	equ	0xFF5
 10126                           prodh	equ	0xFF4
 10127                           prodl	equ	0xFF3
 10128                           intcon	equ	0xFF2
 10129                           intcon2	equ	0xFF1
 10130                           postinc0	equ	0xFEE
 10131                           fsr0h	equ	0xFEA
 10132                           fsr0l	equ	0xFE9
 10133                           wreg	equ	0xFE8
 10134                           indf1	equ	0xFE7
 10135                           postinc1	equ	0xFE6
 10136                           postdec1	equ	0xFE5
 10137                           fsr1h	equ	0xFE2
 10138                           fsr1l	equ	0xFE1
 10139                           bsr	equ	0xFE0
 10140                           indf2	equ	0xFDF
 10141                           postinc2	equ	0xFDE
 10142                           postdec2	equ	0xFDD
 10143                           fsr2h	equ	0xFDA
 10144                           fsr2l	equ	0xFD9
 10145                           status	equ	0xFD8
 10146                           
 10147 ;; *************** function i2_in_high_int *****************
 10148 ;; Defined at:
 10149 ;;		line 23 in file "../src/interrupts.c"
 10150 ;; Parameters:    Size  Location     Type
 10151 ;;		None
 10152 ;; Auto vars:     Size  Location     Type
 10153 ;;		None
 10154 ;; Return value:  Size  Location     Type
 10155 ;;                  2    0[BANK0 ] int 
 10156 ;; Registers used:
 10157 ;;		wreg, status,2
 10158 ;; Tracked objects:
 10159 ;;		On entry : 0/0
 10160 ;;		On exit  : 0/0
 10161 ;;		Unchanged: 0/0
 10162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10163 ;;      Params:         0       2       0       0       0
 10164 ;;      Locals:         0       0       0       0       0
 10165 ;;      Temps:          0       0       0       0       0
 10166 ;;      Totals:         0       2       0       0       0
 10167 ;;Total ram usage:        2 bytes
 10168 ;; Hardware stack levels used:    1
 10169 ;; This function calls:
 10170 ;;		Nothing
 10171 ;; This function is called by:
 10172 ;;		_SleepIfOkay
 10173 ;;		i2_in_low_int
 10174 ;; This function uses a non-reentrant model
 10175 ;;
 10176                           
 10177                           	psect	text57
 10178  0022CC                     __ptext57:
 10179                           	opt stack 0
 10180  0022CC                     i2_in_high_int:
 10181                           	opt stack 18
 10182                           
 10183                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
 10184                           
 10185                           ; BSR set to: 0
 10186                           ;incstack = 0
 10187  0022CC  0E00               	movlw	0
 10188  0022CE  AEF2               	btfss	intcon,7,c	;volatile
 10189  0022D0  0E01               	movlw	1
 10190  0022D2  0100               	movlb	0	; () banked
 10191  0022D4  0100               	movlb	0	; () banked
 10192  0022D6  6F80               	movwf	?i2_in_high_int& (0+255),b
 10193  0022D8  0100               	movlb	0	; () banked
 10194  0022DA  6B81               	clrf	(?i2_in_high_int+1)& (0+255),b
 10195  0022DC  0012               	return	
 10196  0022DE                     __end_ofi2_in_high_int:
 10197                           	opt stack 0
 10198                           pclatu	equ	0xFFB
 10199                           pclath	equ	0xFFA
 10200                           tblptru	equ	0xFF8
 10201                           tblptrh	equ	0xFF7
 10202                           tblptrl	equ	0xFF6
 10203                           tablat	equ	0xFF5
 10204                           prodh	equ	0xFF4
 10205                           prodl	equ	0xFF3
 10206                           intcon	equ	0xFF2
 10207                           intcon2	equ	0xFF1
 10208                           postinc0	equ	0xFEE
 10209                           fsr0h	equ	0xFEA
 10210                           fsr0l	equ	0xFE9
 10211                           wreg	equ	0xFE8
 10212                           indf1	equ	0xFE7
 10213                           postinc1	equ	0xFE6
 10214                           postdec1	equ	0xFE5
 10215                           fsr1h	equ	0xFE2
 10216                           fsr1l	equ	0xFE1
 10217                           bsr	equ	0xFE0
 10218                           indf2	equ	0xFDF
 10219                           postinc2	equ	0xFDE
 10220                           postdec2	equ	0xFDD
 10221                           fsr2h	equ	0xFDA
 10222                           fsr2l	equ	0xFD9
 10223                           status	equ	0xFD8
 10224                           
 10225 ;; *************** function i2_check_msg *****************
 10226 ;; Defined at:
 10227 ;;		line 222 in file "../src/messages.c"
 10228 ;; Parameters:    Size  Location     Type
 10229 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
 10230 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
 10231 ;; Auto vars:     Size  Location     Type
 10232 ;;		None
 10233 ;; Return value:  Size  Location     Type
 10234 ;;                  1    wreg      unsigned char 
 10235 ;; Registers used:
 10236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10237 ;; Tracked objects:
 10238 ;;		On entry : 0/0
 10239 ;;		On exit  : 0/0
 10240 ;;		Unchanged: 0/0
 10241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10242 ;;      Params:         0       2       0       0       0
 10243 ;;      Locals:         0       0       0       0       0
 10244 ;;      Temps:          0       1       0       0       0
 10245 ;;      Totals:         0       3       0       0       0
 10246 ;;Total ram usage:        3 bytes
 10247 ;; Hardware stack levels used:    1
 10248 ;; This function calls:
 10249 ;;		Nothing
 10250 ;; This function is called by:
 10251 ;;		_SleepIfOkay
 10252 ;; This function uses a non-reentrant model
 10253 ;;
 10254                           
 10255                           	psect	text58
 10256  002130                     __ptext58:
 10257                           	opt stack 0
 10258  002130                     i2_check_msg:
 10259                           	opt stack 19
 10260                           
 10261                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
 10262                           
 10263                           ; BSR set to: 0
 10264                           ;incstack = 0
 10265  002130  0100               	movlb	0	; () banked
 10266  002132  EE20 F042          	lfsr	2,66
 10267  002136  0100               	movlb	0	; () banked
 10268  002138  5180               	movf	i2check_msg@qptr& (0+255),w,b
 10269  00213A  26D9               	addwf	fsr2l,f,c
 10270  00213C  0100               	movlb	0	; () banked
 10271  00213E  5181               	movf	(i2check_msg@qptr+1)& (0+255),w,b
 10272  002140  22DA               	addwfc	fsr2h,f,c
 10273  002142  50DF               	movf	indf2,w,c
 10274  002144  0100               	movlb	0	; () banked
 10275  002146  6F82               	movwf	??i2_check_msg& (0+255),b
 10276  002148  0100               	movlb	0	; () banked
 10277  00214A  5182               	movf	??i2_check_msg& (0+255),w,b
 10278  00214C  0D0D               	mullw	13
 10279  00214E  50F3               	movf	prodl,w,c
 10280  002150  0100               	movlb	0	; () banked
 10281  002152  0100               	movlb	0	; () banked
 10282  002154  2580               	addwf	i2check_msg@qptr& (0+255),w,b
 10283  002156  6ED9               	movwf	fsr2l,c
 10284  002158  50F4               	movf	prodh,w,c
 10285  00215A  0100               	movlb	0	; () banked
 10286  00215C  0100               	movlb	0	; () banked
 10287  00215E  2181               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
 10288  002160  6EDA               	movwf	fsr2h,c
 10289  002162  50DF               	movf	indf2,w,c
 10290  002164  0012               	return	
 10291  002166                     __end_ofi2_check_msg:
 10292                           	opt stack 0
 10293                           pclatu	equ	0xFFB
 10294                           pclath	equ	0xFFA
 10295                           tblptru	equ	0xFF8
 10296                           tblptrh	equ	0xFF7
 10297                           tblptrl	equ	0xFF6
 10298                           tablat	equ	0xFF5
 10299                           prodh	equ	0xFF4
 10300                           prodl	equ	0xFF3
 10301                           intcon	equ	0xFF2
 10302                           intcon2	equ	0xFF1
 10303                           postinc0	equ	0xFEE
 10304                           fsr0h	equ	0xFEA
 10305                           fsr0l	equ	0xFE9
 10306                           wreg	equ	0xFE8
 10307                           indf1	equ	0xFE7
 10308                           postinc1	equ	0xFE6
 10309                           postdec1	equ	0xFE5
 10310                           fsr1h	equ	0xFE2
 10311                           fsr1l	equ	0xFE1
 10312                           bsr	equ	0xFE0
 10313                           indf2	equ	0xFDF
 10314                           postinc2	equ	0xFDE
 10315                           postdec2	equ	0xFDD
 10316                           fsr2h	equ	0xFDA
 10317                           fsr2l	equ	0xFD9
 10318                           status	equ	0xFD8
 10319                           
 10320 ;; *************** function _enter_sleep_mode *****************
 10321 ;; Defined at:
 10322 ;;		line 202 in file "../src/messages.c"
 10323 ;; Parameters:    Size  Location     Type
 10324 ;;		None
 10325 ;; Auto vars:     Size  Location     Type
 10326 ;;		None
 10327 ;; Return value:  Size  Location     Type
 10328 ;;		None               void
 10329 ;; Registers used:
 10330 ;;		None
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10336 ;;      Params:         0       0       0       0       0
 10337 ;;      Locals:         0       0       0       0       0
 10338 ;;      Temps:          0       0       0       0       0
 10339 ;;      Totals:         0       0       0       0       0
 10340 ;;Total ram usage:        0 bytes
 10341 ;; Hardware stack levels used:    1
 10342 ;; This function calls:
 10343 ;;		Nothing
 10344 ;; This function is called by:
 10345 ;;		_SleepIfOkay
 10346 ;; This function uses a non-reentrant model
 10347 ;;
 10348                           
 10349                           	psect	text59
 10350  002304                     __ptext59:
 10351                           	opt stack 0
 10352  002304                     _enter_sleep_mode:
 10353                           	opt stack 19
 10354                           
 10355                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;incstack = 0
 10359  002304  8ED3               	bsf	4051,7,c	;volatile
 10360  002306  0003               	sleep		;# 
 10361  002308  0012               	return	
 10362  00230A                     __end_of_enter_sleep_mode:
 10363                           	opt stack 0
 10364  0000                     pclatu	equ	0xFFB
 10365                           pclath	equ	0xFFA
 10366                           tblptru	equ	0xFF8
 10367                           tblptrh	equ	0xFF7
 10368                           tblptrl	equ	0xFF6
 10369                           tablat	equ	0xFF5
 10370                           prodh	equ	0xFF4
 10371                           prodl	equ	0xFF3
 10372                           intcon	equ	0xFF2
 10373                           intcon2	equ	0xFF1
 10374                           postinc0	equ	0xFEE
 10375                           fsr0h	equ	0xFEA
 10376                           fsr0l	equ	0xFE9
 10377                           wreg	equ	0xFE8
 10378                           indf1	equ	0xFE7
 10379                           postinc1	equ	0xFE6
 10380                           postdec1	equ	0xFE5
 10381                           fsr1h	equ	0xFE2
 10382                           fsr1l	equ	0xFE1
 10383                           bsr	equ	0xFE0
 10384                           indf2	equ	0xFDF
 10385                           postinc2	equ	0xFDE
 10386                           postdec2	equ	0xFDD
 10387                           fsr2h	equ	0xFDA
 10388                           fsr2l	equ	0xFD9
 10389                           status	equ	0xFD8
 10390                           pclatu	equ	0xFFB
 10391                           pclath	equ	0xFFA
 10392                           tblptru	equ	0xFF8
 10393                           tblptrh	equ	0xFF7
 10394                           tblptrl	equ	0xFF6
 10395                           tablat	equ	0xFF5
 10396                           prodh	equ	0xFF4
 10397                           prodl	equ	0xFF3
 10398                           intcon	equ	0xFF2
 10399                           intcon2	equ	0xFF1
 10400                           postinc0	equ	0xFEE
 10401                           fsr0h	equ	0xFEA
 10402                           fsr0l	equ	0xFE9
 10403                           wreg	equ	0xFE8
 10404                           indf1	equ	0xFE7
 10405                           postinc1	equ	0xFE6
 10406                           postdec1	equ	0xFE5
 10407                           fsr1h	equ	0xFE2
 10408                           fsr1l	equ	0xFE1
 10409                           bsr	equ	0xFE0
 10410                           indf2	equ	0xFDF
 10411                           postinc2	equ	0xFDE
 10412                           postdec2	equ	0xFDD
 10413                           fsr2h	equ	0xFDA
 10414                           fsr2l	equ	0xFD9
 10415                           status	equ	0xFD8
 10416                           
 10417                           	psect	param0
 10418  0000                     pclatu	equ	0xFFB
 10419                           pclath	equ	0xFFA
 10420                           tblptru	equ	0xFF8
 10421                           tblptrh	equ	0xFF7
 10422                           tblptrl	equ	0xFF6
 10423                           tablat	equ	0xFF5
 10424                           prodh	equ	0xFF4
 10425                           prodl	equ	0xFF3
 10426                           intcon	equ	0xFF2
 10427                           intcon2	equ	0xFF1
 10428                           postinc0	equ	0xFEE
 10429                           fsr0h	equ	0xFEA
 10430                           fsr0l	equ	0xFE9
 10431                           wreg	equ	0xFE8
 10432                           indf1	equ	0xFE7
 10433                           postinc1	equ	0xFE6
 10434                           postdec1	equ	0xFE5
 10435                           fsr1h	equ	0xFE2
 10436                           fsr1l	equ	0xFE1
 10437                           bsr	equ	0xFE0
 10438                           indf2	equ	0xFDF
 10439                           postinc2	equ	0xFDE
 10440                           postdec2	equ	0xFDD
 10441                           fsr2h	equ	0xFDA
 10442                           fsr2l	equ	0xFD9
 10443                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         306
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     44      88
    BANK0           128     63      76
    BANK1           256    100     236
    BANK2           256      0     134
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_trans@data	PTR unsigned char  size(2) Largest target is 11
		 -> motorMove@direction(BANK0[2]), main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 13
		 -> main@uc(BANK1[13]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK1[29]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 5
		 -> timer0_int_handler@motormsg(BANK0[5]), i2c_slave_int_handler@dist(BANK0[5]), i2c_slave_int_handler@sensormsg(BANK0[5]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK1[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@ic(BANK1[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _timer0_int_handler->_motorMove
    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->_ToMainHigh_sendmsg
    _motorMove->i2_uart_trans
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0   13968
                                             36 BANK1     64    64      0
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                         _uart_trans
 ---------------------------------------------------------------------------------
 (1) _uart_trans                                           5     3      2     157
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3347
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2658
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2435
                                             10 BANK1     12     6      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      7     3      4     545
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2969
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2969
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2746
                                             10 BANK1     14     7      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     637
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     347
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    3486
                                             27 COMRAM    17    17      0
                    _adc_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3398
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    3375
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    3022
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     809
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   0     0      0      88
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    7776
                                             49 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  9     9      0    1522
                                             10 BANK0      9     9      0
                        _WriteTimer0
                          _motorMove
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    5970
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_slave_int_handler                              23    23      0    5970
                                             26 BANK0     23    23      0
                 _ToMainHigh_sendmsg
                       _handle_start
                          _motorMove
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (12) _start_i2c_slave_reply                               5     3      2     288
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (12) _motorMove                                           5     3      2     891
                                              5 BANK0      5     3      2
                        _WriteTimer0
                       i2_uart_trans
 ---------------------------------------------------------------------------------
 (13) i2_uart_trans                                        5     3      2     230
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     229
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    3994
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    3381
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           7     3      4    1034
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
   _uart_trans

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
   _timer1_int_handler
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_trans_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_slave_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2___awmod
           i2_memcpy
       _handle_start
       _motorMove
         _WriteTimer0
         i2_uart_trans
       _start_i2c_slave_reply
   _timer0_int_handler
     _WriteTimer0
     _motorMove
       _WriteTimer0
       i2_uart_trans
     _start_i2c_slave_reply

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      86       8       52.3%
BITBANK1           100      0       0       5        0.0%
BANK1              100     64      EC       6       92.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80     3F      4C       4       59.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2C      58       1       69.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     216      11        0.0%
DATA                 0      0     216      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Mar 25 17:52:55 2014

          _MQ_Main_Willing_to_block 004D                         _SSPSTATbits 000FC7  
         __end_of_ToMainLow_recvmsg 1F96                                  bsr 000FE0  
         __end_of_ToMainLow_sendmsg 21DE                        __CFG_CP0$OFF 000000  
                               l152 0972                                 l550 1AB0  
                               l630 1838                                 l570 218C  
                               l634 1858                                 l635 185A  
                               l636 1868                                 l637 186A  
                               l569 218A                                 l593 2070  
                               l595 2088                                 l596 208A  
                               l863 2260     __size_of_uart_trans_int_handler 0068  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                      ___awmod@sign 018C                      _FromMainLow_MQ 0243  
                               prod 000FF3                                 wreg 000FE8  
                      __CFG_IESO$ON 000000           i2c_slave_int_handler@dist 00A1  
                      ?_in_high_int 0186                    ??_init_uart_recv 0188  
        i2c_slave_int_handler@F5136 00BF          i2c_slave_int_handler@F5138 00C4  
                              l1175 19A0                                l4001 1824  
                              l4111 0CF2                                l4009 183A  
                              l4107 0C6E                                l4061 1AD2  
                              l4127 1B7A                                l4073 1B2A  
                              l4145 0DEC                                l4067 1AFE  
                              l4083 1574                                l4165 1E0E  
                              l4511 1072                                l4503 102E  
                              l4159 1DEA                                l4087 15DE  
                              l4513 1084                                l4515 108C  
                              l4523 10D4                                l4507 1054  
                              l4179 0B60                                l4195 0C4E  
                              l3741 1EBA                                l3733 1E98  
                              l3901 09F6                                l4527 10EC  
                              l4519 10C0                                l4543 198C  
                              l4535 193E                                l3911 0AD6  
                              l3903 0A48                                l4537 1950  
                              l3755 1F44                                l4539 1958  
                              l3907 0A90                                l3915 0ADA  
                              l3961 2072                                l3893 0998  
                              l3887 0920                                l3895 09B8  
                              l3879 08DE                                l3889 0978  
                              _LATA 000F89                                _LATB 000F8A  
                              i1l67 0080                                u3947 2262  
                   _FromMainHigh_MQ 0200                __end_ofi2_uart_trans 16C6  
                     __CFG_FCMEN$ON 000000              ?_block_on_To_msgqueues 0001  
                              _main 0806                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr0l 000FE9  
                              fsr2h 000FDA                                indf1 000FE7  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                         main@msgtype 01BE  
                        i1_send_msg 149E                                pclat 000FFA  
                       i2_check_msg 2130                                prodh 000FF4  
                              prodl 000FF3               handle_start@data_read 0080  
                              start 00C6                       __CFG_FOSC2$ON 000000  
                  ?_adc_int_handler 0001                          i2_send_msg 0EBC  
         ToMainHigh_recvmsg@msgtype 019E                      send_msg@length 0192  
                   __end_of_OpenADC 1AB4         __size_of_timer0_int_handler 00A2  
           ??_i2c_slave_int_handler 009A                         _Delay1KTCYx 225C  
                             ?_main 0001                     __end_of___awmod 10F6  
                             _T0CON 000FD5                               _T1CON 000FCD  
                   __end_of___lwmod 19AA                          i1memcpy@d1 0001  
                             i1l456 1DC4                               i2l323 1392  
                             i2l360 052C                               i1l648 224C  
                             i2l362 0192                               i2l380 0366  
                             i2l366 01D6                               i2l394 053E  
                             i2l388 049E                          i1memcpy@s1 0003  
                             _RCREG 000FAE                               _RCSTA 000FAB  
                             _TMR0H 000FD7                               _TMR1H 000FCF  
                             _TMR0L 000FD6                               _TMR1L 000FCE  
                             _SPBRG 000FAF                               _PORTA 000F80  
                             _TRISA 000F92                               _TRISB 000F93  
                             _TRISC 000F94                               _TXREG 000FAD  
                             _TXSTA 000FAC                          i2memcpy@d1 0080  
                        i2memcpy@s1 0082                        ?_init_queues 0001  
         __size_of_enter_sleep_mode 0006                      i1___awmod@sign 0007  
                   __end_of_in_main 1F54          ToMainLow_recvmsg@maxlength 01A2  
           timer0_lthread@msgbuffer 018C             i2c_configure_slave@addr 0186  
                             tablat 000FF5                               status 000FD8  
            _uart_trans_int_handler 1D60                    __end_ofi1_memcpy 2018  
                __size_ofi1___awmod 009C                    __end_ofi2_memcpy 1E84  
                __size_ofi2___awmod 010E                     __initialization 1896  
                      __end_of_main 0AF4         __size_of_timer1_int_handler 000E  
        __size_of_ToMainLow_recvmsg 0042          __size_of_ToMainLow_sendmsg 0026  
             __size_ofi2_in_low_int 0046       __size_of_FromMainHigh_sendmsg 0036  
                            ??_main 01AA                     send_msg@msgtype 0193  
                     __activetblptr 000002                     send_msg@tlength 0197  
                        _SetChanADC 2200                __end_of_handle_start 13DE  
        timer0_int_handler@motormsg 008E                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADCON2 000FC0  
                            _ADRESH 000FC4             ??_uart_recv_int_handler 001B  
                            i1l1425 21EA                              i1l3551 2006  
                            i1l3545 1FEA                              i1l3571 1794  
                            i1l3581 17CA                              i1l3583 17CE  
                            i1l3591 17EC                              i1l3575 17B0  
                            i1l4703 147E                              i1l4721 0070  
                            i1l3595 17FA                              i1l3587 17E2  
                            i1l3579 17C2                              i1l4715 0066  
                        _OpenTimer0 2166                          _OpenTimer1 2056  
                            i1l4669 14D6                      __CFG_WDTEN$OFF 000000  
                            i2l4231 1112                              i2l4311 028E  
                            i2l4313 02CE                              i2l4305 0276  
                            i1l4697 143A                              i2l4251 13AE  
                            i2l4235 1196                              i2l4403 0748  
                            i2l4253 13C6                              i2l4341 042E  
                            i2l4335 03DA                              i2l3801 1CFC  
                            i2l4601 1628                              i2l4409 07B2  
                            i2l4417 07F4                              i2l4337 041C  
                            i2l4363 0500                              i2l4275 0188  
                            i2l4613 1E48                              i2l4605 1692  
                            i2l4293 020E                              i2l4269 0170  
                            i2l4391 06E2                              i2l4383 063C  
                            i2l4375 05A2                              i2l4295 023A  
                            i2l4641 12A8                              i2l4633 1270  
                            i2l4369 0542                              i2l4619 1E6C  
                            i2l4653 1308                              i2l4645 12DC  
                            i2l4637 128E                              i2l4629 124A  
                            i2l3773 19F2                              i2l3765 19E4  
                            i2l4567 1F00                              i2l4559 1EDE  
                            i2l4639 12A0                              i2l4583 0F18  
                            i2l4649 12F0         __end_of_i2c_configure_slave 21B8  
                     ??_SleepIfOkay 0084                  __size_of_ReadUSART 001E  
                            _OSCCON 000FD3                              _SPBRGH 000FB0  
                            _SSPADD 000FC8                              _SSPBUF 000FC9  
    __size_of_start_i2c_slave_reply 010E                         ?i1_send_msg 000B  
     __end_of_start_i2c_slave_reply 1204                  timer0_lthread@tptr 0186  
                         ??_OpenADC 0188                        i2_in_low_int 1ECA  
                       ?i2_send_msg 008A                      __CFG_XINST$OFF 000000  
                __size_of_OpenUSART 0092                     _i2c_int_handler 22FE  
                         ??___awmod 018A   i2c_slave_int_handler@data_written 00A9  
                   _i2c_master_send 0C52                    OpenTimer0@config 0186  
                            _ic_ptr 00C9                           ??___lwmod 018A  
                     main@msgbuffer 01AF                    __end_of_init_i2c 1CF6  
                  OpenTimer1@config 0186                              _memcpy 1DC8  
                            clear_0 189C                              clear_1 18A8  
                            clear_2 18B8                     ___awmod@divisor 0188  
                            _uc_ptr 0057                     ___awmod@counter 018B  
                            main@ic 01CD                              main@uc 01C0  
                  __end_of_recv_msg 0C52         start_i2c_slave_reply@length 0084  
                         ??_in_main 018C                   __end_ofi1___awmod 1804  
                  __end_of_send_msg 0EBC                        __pdataCOMRAM 0052  
                 __end_ofi2___awmod 1312                  i2uart_trans@length 0084  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 0189  
             __size_ofi2_uart_trans 00B4                      i2___awmod@sign 0086  
          ToMainLow_recvmsg@msgtype 019E                __size_of_in_high_int 0012  
                   __CFG_FOSC$HSPLL 000000                          __accesstop 0080  
           __end_of__initialization 1916          __end_of_ToMainHigh_recvmsg 1FD8  
        __end_of_ToMainHigh_sendmsg 2130         __end_of_init_timer1_lthread 2296  
               __end_of_SleepIfOkay 1D60                      __pcstackCOMRAM 0001  
                      __pidataBANK0 22EC                        __pidataBANK1 230F  
            __size_ofi2_in_high_int 0012                  __size_of_check_msg 0036  
                 __end_of_ReadUSART 225C                        i2_uart_trans 1612  
                       ?_SetChanADC 0001                 __size_ofi1_send_msg 00C0  
                         ?i1_memcpy 0001       __size_of_InterruptHandlerHigh 1A28  
       __end_of_InterruptHandlerLow 00C6                           ?i2_memcpy 0080  
                     _ToMainHigh_MQ 0100                   motorMove@distance 0086  
                  _enter_sleep_mode 2304                 __size_ofi2_send_msg 012C  
              timer1_lthread@length 01A4                       ReadUSART@data 0001  
                 __end_of_OpenUSART 1896                       check_msg@qptr 0186  
              timer1_lthread@retval 01A9             ??_block_on_To_msgqueues 018C  
              __size_of_init_queues 006E                          __pbssBANK0 00CB  
                        __pbssBANK1 0100                          __pbssBANK2 0200  
                       ?_OpenTimer0 0001                         ?_OpenTimer1 0001  
                        __pnvCOMRAM 0057             __end_of_i2c_int_handler 2304  
                      ?i2_check_msg 0080             __end_of_i2c_master_send 0D90  
                timer1_lthread@tptr 01A0         timer0_int_handler@motorcomm 008C  
                 recv_msg@maxlength 0192                     recv_msg@msgtype 0193  
                   recv_msg@tlength 019A               __size_of_handle_start 00CC  
                      ?_Delay1KTCYx 0001                    WriteTimer0@timer 0082  
                           ?_memcpy 0186                    WriteTimer1@timer 0003  
                     ??_WriteTimer0 0082                       ??_WriteTimer1 0003  
    __size_of_i2c_slave_int_handler 073C             __size_of_timer0_lthread 0012  
     __end_of_i2c_slave_int_handler 0806                  __size_of_motorMove 003E  
           __size_of_timer1_lthread 0072                          ??i1_memcpy 0007  
                        ??i2_memcpy 0086                    i1send_msg@length 000D  
                     i2_in_high_int 22CC                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _SSPSTAT 000FC7  
           ?_uart_trans_int_handler 0001                   __end_of_check_msg 20FA  
                         ?_init_i2c 0186                         _SleepIfOkay 1CF6  
                         ?_recv_msg 0190                             _OpenADC 1A30  
                        _in_low_int 1E84                        _handle_start 1312  
                           __Hparam 0000                 __size_of_SetChanADC 0020  
                         ?_send_msg 0190                             __Lparam 0000  
        __end_of_timer0_int_handler 1768                    init_uart_recv@uc 0186  
                           ___awmod 0FE8                             ___lwmod 1920  
                   __CFG_STVREN$OFF 000000  i2c_slave_int_handler@overrun_error 00AA  
                           __pcinit 1896                     __size_of_memcpy 005E  
          __size_of_adc_int_handler 0022                          _init_queue 1B32  
                           __ramtop 0400                 __size_of_OpenTimer0 002A  
               __size_of_OpenTimer1 0038                             __ptext0 0806  
                           __ptext1 155E                             __ptext2 1BAC  
                           __ptext3 1920                             __ptext4 208E  
                           __ptext5 0D90                             __ptext6 2272  
                           __ptext7 2220                             __ptext8 2284  
                           __ptext9 1C1E                           _T0CONbits 000FD5  
                           _in_main 1F10                           _T1CONbits 000FCD  
                  ___awmod@dividend 0186                 __end_of_WriteTimer0 22CC  
               __end_of_WriteTimer1 22BA                      ?i2_in_high_int 0080  
    __end_of_uart_trans_int_handler 1DC8                      OpenADC@config2 0186  
                           main@msg 01AC                      __pintcode_body 19AA  
              end_of_initialization 1916             timer1_lthread@msgbuffer 01A6  
      __end_of_FromMainHigh_sendmsg 20C4      __size_of_uart_recv_int_handler 00C0  
        FromMainHigh_sendmsg@length 019F                             memcpy@d 018C  
                           memcpy@n 018A                             memcpy@s 018E  
     __end_of_uart_recv_int_handler 149E                          ??_init_i2c 0188  
                     __Lmediumconst 0000                             int_func 19AA  
                      ??i1_send_msg 0011                   __end_of_motorMove 2056  
           __size_of_init_uart_recv 001E                    ?_i2c_int_handler 0001  
                  ?_i2c_master_send 0186                          ??_recv_msg 0197  
                      ??i2_send_msg 0090                          ??_send_msg 0196  
        __end_of_timer1_int_handler 22EC                           _RCSTAbits 000FAB  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 0096  
                        _uart_trans 155E                           _PORTAbits 000F80  
                __end_ofi1_send_msg 155E         FromMainHigh_sendmsg@msgtype 019C  
                         _TRISCbits 000F94                           i1___awmod 1768  
                __end_ofi2_send_msg 0FE8                           i2___awmod 1204  
                         _TXSTAbits 000FAC                          main@length 01BF  
                       ?_in_low_int 0188               timer0_lthread@msgtype 0188  
             _start_i2c_slave_reply 10F6        __size_of_i2c_configure_slave 0028  
              __size_ofi2_check_msg 0036            __end_of_enter_sleep_mode 230A  
                _ToMainHigh_recvmsg 1F96                           i1memcpy@d 0007  
                _ToMainHigh_sendmsg 20FA                           i1memcpy@n 0005  
                         i1memcpy@s 0009           i2c_master_send@recvlength 0186  
                     __pidataCOMRAM 230A                      _timer0_lthread 2272  
                       ?_init_queue 0186                           i2memcpy@d 0086  
                       _WriteTimer0 22BA                         _WriteTimer1 22A8  
                         i2memcpy@n 0084                           i2memcpy@s 0088  
                    _timer1_lthread 1BAC                      __end_of_memcpy 1E26  
                 _enable_interrupts 22F6                __size_of_Delay1KTCYx 0016  
                      ??_SetChanADC 0186           i2c_master_send@sendlength 018C  
               ?_ToMainHigh_recvmsg 019E                     ??i2_in_high_int 0082  
               ?_ToMainHigh_sendmsg 0096                  ?_enable_interrupts 0001  
               start_initialization 1896                       ??_in_high_int 0188  
                         _ReadUSART 223E                   ??_adc_int_handler 0001  
                        ?i1___awmod 0001                   __size_ofi1_memcpy 0040  
                 __size_ofi2_memcpy 005E           i2c_master_send@slave_addr 0189  
                        ?i2___awmod 0080                 ??_enable_interrupts 0186  
                      ??_OpenTimer0 0186                        ??_OpenTimer1 0186  
    __size_of_block_on_To_msgqueues 007E       __end_of_block_on_To_msgqueues 1B32  
                         _OpenUSART 1804        __end_of_InterruptHandlerHigh 1A30  
                        init_i2c@ic 0186                  motorMove@direction 0088  
              ??_ToMainHigh_recvmsg 01A2                ??_ToMainHigh_sendmsg 0099  
                __end_of_SetChanADC 2220              __end_of_timer0_lthread 2284  
                       __pdataBANK0 00BF                         __pdataBANK1 01EA  
            __end_of_timer1_lthread 1C1E                  i1___awmod@dividend 0001  
         __end_of_enable_interrupts 22FE                            ??_memcpy 018C  
             timer1_lthread@msgtype 01A2                         ?_uart_trans 0186  
              _FromMainHigh_sendmsg 208E        __size_of_init_timer1_lthread 0012  
                __end_of_OpenTimer0 2190                  __end_of_OpenTimer1 208E  
                       __pbssCOMRAM 002D                          ?_ReadUSART 0001  
                     ??_init_queues 018A                       __pcstackBANK0 0080  
                     __pcstackBANK1 0186                 __size_of_in_low_int 0046  
          start_i2c_slave_reply@msg 0080                           _adcbuffer 002D  
               __CFG_CCP2MX$DEFAULT 000000                     Delay1KTCYx@unit 0186  
          ToMainLow_sendmsg@msgtype 0017        __size_of_InterruptHandlerLow 00AE  
    i2c_slave_int_handler@data_read 00B0                 __end_of_in_high_int 22A8  
                        ?_OpenUSART 0186                        ?_SleepIfOkay 0001  
             ToMainLow_recvmsg@data 01A0                        _ToMainLow_MQ 0143  
               __size_of_init_queue 007A                      _init_uart_recv 2220  
                         _check_msg 20C4                           __pnvBANK0 00C9  
            ?_start_i2c_slave_reply 0080                   __size_of_init_i2c 006A  
                 OpenADC@portconfig 0187                            ?_OpenADC 0186  
                    motorMove@right 0085                        recv_msg@data 0195  
                      recv_msg@qmsg 019C                        recv_msg@slot 0199  
                      recv_msg@qptr 0190                   __size_of_recv_msg 015E  
                         __pintcode 0008                   __size_of_send_msg 012C  
                          ?___awmod 0186                     ?_timer0_lthread 0186  
                          ?___lwmod 0186                     ?_timer1_lthread 01A0  
             ?_FromMainHigh_sendmsg 019C                         __pintcodelo 0018  
                         _distMoved 00CB              ToMainHigh_recvmsg@data 01A0  
                          ?_in_main 018A                   WriteTimer0@timer0 0080  
                _timer0_int_handler 16C6                   WriteTimer1@timer1 0001  
             _i2c_slave_int_handler 00CA      i2c_slave_int_handler@error_buf 00A6  
                       ??i1___awmod 0005               ToMainLow_sendmsg@data 0018  
                       ??i2___awmod 0084                 ?_timer0_int_handler 0001  
    i2c_slave_int_handler@msg_ready 00AF                         _distDesired 004F  
            __end_of_init_uart_recv 223E                 __end_of_init_queues 1C8C  
       i2c_slave_int_handler@length 00AD                 __size_of_uart_trans 00B4  
                     OpenADC@config 018A                            _LATBbits 000F8A  
                   i2check_msg@qptr 0080                          ?_check_msg 0186  
                          _IPR1bits 000F9F                            _PIE1bits 000F9D  
                     ?i2_in_low_int 0082      i2c_slave_int_handler@sensormsg 009C  
                          i2u353_41 0720                            _PIR1bits 000F9E  
                          i2u356_41 07CA                            i2u286_41 16F4  
            ToMainHigh_sendmsg@data 0097                            _RCONbits 000FD0  
                         _motorMove 2018                    __CFG_WDTPS$32768 000000  
                         main@F5220 01EA                ??_timer0_int_handler 008A  
        __size_of_enable_interrupts 0008                   i1send_msg@msgtype 000E  
                 i1send_msg@tlength 0012                          _ADCON0bits 000FC2  
              timer0_lthread@length 018A                  _timer1_int_handler 22DE  
                          i1_memcpy 1FD8                _InterruptHandlerHigh 0008  
                       _leftEncoder 0050                         ??_ReadUSART 0001  
                          i2_memcpy 1E26                timer0_lthread@msgval 018E  
                       _in_high_int 2296                        send_msg@data 0194  
               _i2c_configure_slave 2190                        send_msg@qmsg 019A  
                      send_msg@slot 0199                        send_msg@qptr 0190  
                       _INTCON2bits 000FF1                           copy_data0 18EA  
                         copy_data1 190A                 ?_timer1_int_handler 0001  
                i2___awmod@dividend 0080                     ?_init_uart_recv 0186  
                       ??_OpenUSART 0188                     OpenUSART@config 018B  
                    ??i2_in_low_int 0084                            __Hparam0 0000  
             _uart_recv_int_handler 13DE                        ??_in_low_int 018A  
                          __Lparam0 0000                    __size_of_OpenADC 0084  
              ?_i2c_configure_slave 0001                          ?_motorMove 0085  
                 ?_enter_sleep_mode 0001                    i2uart_trans@data 0080  
            ??_FromMainHigh_sendmsg 019F                   i1___awmod@divisor 0003  
              ??_timer1_int_handler 0005                   i1___awmod@counter 0006  
                   _adc_int_handler 21DE            __size_of_i2c_int_handler 0006  
                  __size_of___awmod 010E                        _rightEncoder 0051  
                ??_enter_sleep_mode 0080            __size_of_i2c_master_send 013E  
                  __size_of___lwmod 008A                        ??_init_queue 0188  
                      ?_WriteTimer0 0080                        ?_WriteTimer1 0001  
          FromMainHigh_sendmsg@data 019D                       ?i2_uart_trans 0080  
           ToMainLow_sendmsg@length 001A              ?_i2c_slave_int_handler 0001  
                 main@t0thread_data 01BA               ?_InterruptHandlerHigh 0001  
                  __size_of_in_main 0044                   i2send_msg@msgtype 008D  
       ToMainHigh_recvmsg@maxlength 01A2                       motorMove@left 0087  
                 i2send_msg@tlength 0091             init_timer1_lthread@tptr 0186  
                       _init_queues 1C1E                  __end_of_in_low_int 1ECA  
                          __ptext10 1B32                            __ptext11 1C8C  
                          __ptext20 225C                            __ptext12 0C52  
                          __ptext21 1F54                            __ptext13 2190  
                          __ptext30 1A30                            __ptext22 1F96  
                          __ptext14 22F6                            __ptext23 0AF4  
                          __ptext15 1AB4                            __ptext40 22A8  
                          __ptext32 1D60                            __ptext24 1DC8  
                          __ptext16 1F10                            __ptext41 21DE  
                          __ptext33 13DE                            __ptext25 0FE8  
                          __ptext17 1E84                            __ptext50 1312  
                          __ptext34 21B8                            __ptext26 2200  
                          __ptext18 2296                            __ptext51 20FA  
                          __ptext43 16C6                            __ptext35 149E  
                          __ptext27 1804                            __ptext19 20C4  
                          __ptext52 0EBC                            __ptext44 22FE  
                          __ptext36 1FD8                            __ptext28 2056  
                          __ptext53 1E26                            __ptext45 00CA  
                          __ptext37 1768                            __ptext29 2166  
                          __ptext54 1204                            __ptext46 10F6  
                          __ptext38 223E                            __ptext55 1CF6  
                          __ptext47 2018                            __ptext39 22DE  
                          __ptext56 1ECA                            __ptext48 1612  
                          __ptext57 22CC                            __ptext49 22BA  
                          __ptext58 2130                            __ptext59 2304  
                    i1send_msg@data 000F                      i1send_msg@qmsg 0015  
                    i1send_msg@slot 0014                      i1send_msg@qptr 000B  
                          _init_i2c 1C8C                 _init_timer1_lthread 2284  
                     __size_of_main 02EE                       ??i2_check_msg 0082  
                 main@t1thread_data 01BC                         ??_check_msg 0188  
                __end_of_init_queue 1BAC                __size_of_SleepIfOkay 006A  
                          _recv_msg 0AF4    i2c_slave_int_handler@msg_to_send 00AC  
             ??_i2c_configure_slave 0186                            _send_msg 0D90  
                    init_queue@qptr 0186                       ??_Delay1KTCYx 0186  
                    ??i2_uart_trans 0082                    uart_trans@length 018A  
                      ??_uart_trans 0188                 _InterruptHandlerLow 0018  
              ?_init_timer1_lthread 0186            ??_uart_trans_int_handler 0001  
                 i2___awmod@divisor 0082                   i2___awmod@counter 0085  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
                      _UART_timeout 0049                      OpenUSART@spbrg 0186  
                          memcpy@d1 0186                            memcpy@s1 0188  
           timer0_int_handler@F5115 0052             timer0_int_handler@F5117 004B  
             __end_ofi2_in_high_int 22DE                    i2send_msg@length 008C  
                          intlevel1 0000                            intlevel2 0000  
              ?_InterruptHandlerLow 0001             ??_start_i2c_slave_reply 0082  
                  ___lwmod@dividend 0186              ?_uart_recv_int_handler 0001  
                __end_of_uart_trans 1612                   SetChanADC@channel 0187  
             _block_on_To_msgqueues 1AB4                       ?_handle_start 0001  
                  ??_timer0_lthread 018E         __size_of_ToMainHigh_recvmsg 0042  
           __end_of_adc_int_handler 2200         __size_of_ToMainHigh_sendmsg 0036  
                        _OSCCONbits 000FD3                    ??_timer1_lthread 01A8  
                       ??_motorMove 0087            ToMainHigh_sendmsg@length 0099  
               __end_ofi2_check_msg 2166               ??_init_timer1_lthread 0188  
            ??_InterruptHandlerHigh 00B1                   _ToMainLow_recvmsg 1F54  
                 _ToMainLow_sendmsg 21B8                  main@last_reg_recvd 01AE  
                   ___lwmod@divisor 0188                __end_ofi2_in_low_int 1F10  
                ?_ToMainLow_recvmsg 019E                 __end_of_Delay1KTCYx 2272  
                 ??_i2c_int_handler 00B1                     ___lwmod@counter 018B  
                ?_ToMainLow_sendmsg 0017                   ??_i2c_master_send 018A  
                i2c_master_send@msg 0187                      uart_trans@data 0186  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
                    i2send_msg@data 008E               ??_InterruptHandlerLow 001C  
               ??_ToMainLow_recvmsg 01A2                      i2send_msg@qmsg 0094  
                    i2send_msg@slot 0093                      i2send_msg@qptr 008A  
               ??_ToMainLow_sendmsg 001A       i2c_slave_int_handler@i2c_data 00AB  
                    ??_handle_start 0080                        _USART_Status 004E  
