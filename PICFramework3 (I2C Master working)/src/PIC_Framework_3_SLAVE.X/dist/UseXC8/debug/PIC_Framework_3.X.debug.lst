

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Thu Mar 06 10:30:44 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    80  0000                     
    81                           	psect	idataBANK0
    82  002094                     __pidataBANK0:
    83                           	opt stack 0
    84                           
    85                           ;initializer for i2c_slave_int_handler@F5128
    86  002094  01                 	db	1
    87  002095  01                 	db	1
    88  002096  02                 	db	2
    89  002097  03                 	db	3
    90  002098  06                 	db	6
    91                           
    92                           ;initializer for i2c_slave_int_handler@F5130
    93  002099  03                 	db	3
    94  00209A  04                 	db	4
    95  00209B  04                 	db	4
    96  00209C  00                 	db	0
    97  00209D  00                 	db	0
    98                           
    99                           ;initializer for i2c_slave_int_handler@F5132
   100  00209E  62                 	db	98
   101  00209F  9D                 	db	157
   102                           
   103                           	psect	idataBANK1
   104  0020C0                     __pidataBANK1:
   105                           	opt stack 0
   106                           
   107                           ;initializer for main@F5212
   108  0020C0  01                 	db	1
   109  0020C1  02                 	db	2
   110  0000                     _ADCON0	set	4034
   111  0000                     _ADCON0bits	set	4034
   112  0000                     _ADCON1	set	4033
   113  0000                     _ADCON2	set	4032
   114  0000                     _ADRESH	set	4036
   115  0000                     _INTCONbits	set	4082
   116  0000                     _IPR1bits	set	3999
   117  0000                     _LATA	set	3977
   118  0000                     _LATB	set	3978
   119  0000                     _LATBbits	set	3978
   120  0000                     _OSCCON	set	4051
   121  0000                     _OSCCONbits	set	4051
   122  0000                     _OSCTUNEbits	set	3995
   123  0000                     _PIE1bits	set	3997
   124  0000                     _PIR1bits	set	3998
   125  0000                     _PORTA	set	3968
   126  0000                     _RCONbits	set	4048
   127  0000                     _RCREG	set	4014
   128  0000                     _RCSTA	set	4011
   129  0000                     _RCSTAbits	set	4011
   130  0000                     _SPBRG	set	4015
   131  0000                     _SPBRGH	set	4016
   132  0000                     _SSPADD	set	4040
   133  0000                     _SSPBUF	set	4041
   134  0000                     _SSPCON1	set	4038
   135  0000                     _SSPCON1bits	set	4038
   136  0000                     _SSPCON2	set	4037
   137  0000                     _SSPCON2bits	set	4037
   138  0000                     _SSPSTAT	set	4039
   139  0000                     _SSPSTATbits	set	4039
   140  0000                     _T0CON	set	4053
   141  0000                     _T0CONbits	set	4053
   142  0000                     _T1CON	set	4045
   143  0000                     _T1CONbits	set	4045
   144  0000                     _TMR0H	set	4055
   145  0000                     _TMR0L	set	4054
   146  0000                     _TMR1H	set	4047
   147  0000                     _TMR1L	set	4046
   148  0000                     _TRISA	set	3986
   149  0000                     _TRISB	set	3987
   150  0000                     _TRISC	set	3988
   151  0000                     _TRISCbits	set	3988
   152  0000                     _TXREG	set	4013
   153  0000                     _TXSTA	set	4012
   154  0000                     _TXSTAbits	set	4012
   155                           
   156                           	psect	nvCOMRAM
   157  000052                     __pnvCOMRAM:
   158                           	opt stack 0
   159  000052                     _uc_ptr:
   160                           	opt stack 0
   161  000052                     	ds	2
   162                           
   163                           	psect	nvBANK0
   164  0000C9                     __pnvBANK0:
   165                           	opt stack 0
   166  0000C9                     _ic_ptr:
   167                           	opt stack 0
   168  0000C9                     	ds	2
   169                           
   170                           ; #config settings
   171  0000                     
   172                           	psect	cinit
   173  001B34                     __pcinit:
   174                           	opt stack 0
   175  001B34                     start_initialization:
   176                           	opt stack 0
   177  001B34                     __initialization:
   178                           	opt stack 0
   179                           
   180                           ; Clear objects allocated to BANK2 (134 bytes)
   181  001B34  EE02  F000         	lfsr	0,__pbssBANK2
   182  001B38  0E86               	movlw	134
   183  001B3A                     clear_0:
   184  001B3A  6AEE               	clrf	postinc0,c
   185  001B3C  06E8               	decf	wreg,f,c
   186  001B3E  E1FD               	bnz	clear_0
   187                           
   188                           ; Clear objects allocated to BANK1 (134 bytes)
   189  001B40  EE01  F000         	lfsr	0,__pbssBANK1
   190  001B44  0E86               	movlw	134
   191  001B46                     clear_1:
   192  001B46  6AEE               	clrf	postinc0,c
   193  001B48  06E8               	decf	wreg,f,c
   194  001B4A  E1FD               	bnz	clear_1
   195                           
   196                           ; Clear objects allocated to COMRAM (32 bytes)
   197  001B4C  EE00  F032         	lfsr	0,__pbssCOMRAM
   198  001B50  0E20               	movlw	32
   199  001B52                     clear_2:
   200  001B52  6AEE               	clrf	postinc0,c
   201  001B54  06E8               	decf	wreg,f,c
   202  001B56  E1FD               	bnz	clear_2
   203                           
   204                           ; Initialize objects allocated to BANK1 (2 bytes)
   205                           ; load TBLPTR registers with __pidataBANK1
   206  001B58  0EC0               	movlw	low __pidataBANK1
   207  001B5A  6EF6               	movwf	tblptrl,c
   208  001B5C  0E20               	movlw	high __pidataBANK1
   209  001B5E  6EF7               	movwf	tblptrh,c
   210  001B60  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   211  001B62  6EF8               	movwf	tblptru,c
   212  001B64  0009               	tblrd		*+	;fetch initializer
   213  001B66  CFF5 F1EA          	movff	tablat,__pdataBANK1
   214  001B6A  0009               	tblrd		*+	;fetch initializer
   215  001B6C  CFF5 F1EB          	movff	tablat,__pdataBANK1+1
   216                           
   217                           ; Initialize objects allocated to BANK0 (12 bytes)
   218                           ; load TBLPTR registers with __pidataBANK0
   219  001B70  0E94               	movlw	low __pidataBANK0
   220  001B72  6EF6               	movwf	tblptrl,c
   221  001B74  0E20               	movlw	high __pidataBANK0
   222  001B76  6EF7               	movwf	tblptrh,c
   223  001B78  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   224  001B7A  6EF8               	movwf	tblptru,c
   225  001B7C  EE00  F0BD         	lfsr	0,__pdataBANK0
   226  001B80  EE10 F00C          	lfsr	1,12
   227  001B84                     copy_data0:
   228  001B84  0009               	tblrd		*+
   229  001B86  CFF5 FFEE          	movff	tablat,postinc0
   230  001B8A  50E5               	movf	postdec1,w,c
   231  001B8C  50E1               	movf	fsr1l,w,c
   232  001B8E  E1FA               	bnz	copy_data0
   233  001B90                     end_of_initialization:
   234                           	opt stack 0
   235  001B90                     __end_of__initialization:
   236                           	opt stack 0
   237  001B90  0E00               	movlw	low (__Lmediumconst shr (0+16))
   238  001B92  6EF8               	movwf	tblptru,c
   239  001B94  0100               	movlb	0
   240  001B96  EFD8  F003         	goto	_main	;jump to C main() function
   241                           tblptru	equ	0xFF8
   242                           tblptrh	equ	0xFF7
   243                           tblptrl	equ	0xFF6
   244                           tablat	equ	0xFF5
   245                           postinc0	equ	0xFEE
   246                           wreg	equ	0xFE8
   247                           postdec1	equ	0xFE5
   248                           fsr1l	equ	0xFE1
   249                           
   250                           	psect	bssCOMRAM
   251  000032                     __pbssCOMRAM:
   252                           	opt stack 0
   253  000032                     _adcbuffer:
   254                           	opt stack 0
   255  000032                     	ds	28
   256  00004E                     _UART_timeout:
   257                           	opt stack 0
   258  00004E                     	ds	2
   259  000050                     _MQ_Main_Willing_to_block:
   260                           	opt stack 0
   261  000050                     	ds	1
   262  000051                     _USART_Status:
   263                           	opt stack 0
   264  000051                     	ds	1
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           postdec1	equ	0xFE5
   272                           fsr1l	equ	0xFE1
   273                           
   274                           	psect	dataBANK0
   275  0000BD                     __pdataBANK0:
   276                           	opt stack 0
   277  0000BD                     i2c_slave_int_handler@F5128:
   278                           	opt stack 0
   279  0000BD                     	ds	5
   280  0000C2                     i2c_slave_int_handler@F5130:
   281                           	opt stack 0
   282  0000C2                     	ds	5
   283  0000C7                     i2c_slave_int_handler@F5132:
   284                           	opt stack 0
   285  0000C7                     	ds	2
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           tblptrl	equ	0xFF6
   289                           tablat	equ	0xFF5
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           postdec1	equ	0xFE5
   293                           fsr1l	equ	0xFE1
   294                           
   295                           	psect	bssBANK1
   296  000100                     __pbssBANK1:
   297                           	opt stack 0
   298  000100                     _ToMainHigh_MQ:
   299                           	opt stack 0
   300  000100                     	ds	67
   301  000143                     _ToMainLow_MQ:
   302                           	opt stack 0
   303  000143                     	ds	67
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           wreg	equ	0xFE8
   310                           postdec1	equ	0xFE5
   311                           fsr1l	equ	0xFE1
   312                           
   313                           	psect	dataBANK1
   314  0001EA                     __pdataBANK1:
   315                           	opt stack 0
   316  0001EA                     main@F5212:
   317                           	opt stack 0
   318  0001EA                     	ds	2
   319                           tblptru	equ	0xFF8
   320                           tblptrh	equ	0xFF7
   321                           tblptrl	equ	0xFF6
   322                           tablat	equ	0xFF5
   323                           postinc0	equ	0xFEE
   324                           wreg	equ	0xFE8
   325                           postdec1	equ	0xFE5
   326                           fsr1l	equ	0xFE1
   327                           
   328                           	psect	bssBANK2
   329  000200                     __pbssBANK2:
   330                           	opt stack 0
   331  000200                     _FromMainHigh_MQ:
   332                           	opt stack 0
   333  000200                     	ds	67
   334  000243                     _FromMainLow_MQ:
   335                           	opt stack 0
   336  000243                     	ds	67
   337                           tblptru	equ	0xFF8
   338                           tblptrh	equ	0xFF7
   339                           tblptrl	equ	0xFF6
   340                           tablat	equ	0xFF5
   341                           postinc0	equ	0xFEE
   342                           wreg	equ	0xFE8
   343                           postdec1	equ	0xFE5
   344                           fsr1l	equ	0xFE1
   345                           
   346                           	psect	cstackBANK1
   347  000186                     __pcstackBANK1:
   348                           	opt stack 0
   349  000186                     ??_SetChanADC:
   350  000186                     ?_in_high_int:
   351                           	opt stack 0
   352  000186                     ?___awmod:
   353                           	opt stack 0
   354  000186                     ?___lwmod:
   355                           	opt stack 0
   356  000186                     i2c_master_send@recvlength:
   357                           	opt stack 0
   358  000186                     i2c_configure_slave@addr:
   359                           	opt stack 0
   360  000186                     OpenADC@config2:
   361                           	opt stack 0
   362  000186                     OpenTimer0@config:
   363                           	opt stack 0
   364  000186                     OpenTimer1@config:
   365                           	opt stack 0
   366  000186                     Delay1KTCYx@unit:
   367                           	opt stack 0
   368  000186                     init_queue@qptr:
   369                           	opt stack 0
   370  000186                     check_msg@qptr:
   371                           	opt stack 0
   372  000186                     init_i2c@ic:
   373                           	opt stack 0
   374  000186                     init_uart_recv@uc:
   375                           	opt stack 0
   376  000186                     uart_trans@data:
   377                           	opt stack 0
   378  000186                     timer0_lthread@tptr:
   379                           	opt stack 0
   380  000186                     init_timer1_lthread@tptr:
   381                           	opt stack 0
   382  000186                     OpenUSART@spbrg:
   383                           	opt stack 0
   384  000186                     ___awmod@dividend:
   385                           	opt stack 0
   386  000186                     ___lwmod@dividend:
   387                           	opt stack 0
   388  000186                     memcpy@d1:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x0
   392  000186                     	ds	1
   393  000187                     OpenADC@portconfig:
   394                           	opt stack 0
   395  000187                     SetChanADC@channel:
   396                           	opt stack 0
   397  000187                     i2c_master_send@msg:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x1
   401  000187                     	ds	1
   402  000188                     ??_OpenUSART:
   403  000188                     ??_OpenADC:
   404  000188                     ??_uart_trans:
   405  000188                     ??_init_queue:
   406  000188                     ??_check_msg:
   407  000188                     ?_in_low_int:
   408                           	opt stack 0
   409  000188                     timer0_lthread@msgtype:
   410                           	opt stack 0
   411  000188                     ___awmod@divisor:
   412                           	opt stack 0
   413  000188                     ___lwmod@divisor:
   414                           	opt stack 0
   415  000188                     memcpy@s1:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x2
   419  000188                     	ds	1
   420  000189                     init_queue@i:
   421                           	opt stack 0
   422  000189                     i2c_master_send@slave_addr:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x3
   426  000189                     	ds	1
   427  00018A                     ??_init_queues:
   428  00018A                     ??_i2c_master_send:
   429  00018A                     ??___awmod:
   430  00018A                     ??___lwmod:
   431  00018A                     ?_in_main:
   432                           	opt stack 0
   433  00018A                     uart_trans@length:
   434                           	opt stack 0
   435  00018A                     OpenADC@config:
   436                           	opt stack 0
   437  00018A                     timer0_lthread@length:
   438                           	opt stack 0
   439  00018A                     memcpy@n:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x4
   443  00018A                     	ds	1
   444  00018B                     OpenUSART@config:
   445                           	opt stack 0
   446  00018B                     ___awmod@counter:
   447                           	opt stack 0
   448  00018B                     ___lwmod@counter:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0x5
   452  00018B                     	ds	1
   453  00018C                     ??_block_on_To_msgqueues:
   454  00018C                     i2c_master_send@sendlength:
   455                           	opt stack 0
   456  00018C                     ___awmod@sign:
   457                           	opt stack 0
   458  00018C                     timer0_lthread@msgbuffer:
   459                           	opt stack 0
   460  00018C                     memcpy@d:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x6
   464  00018C                     	ds	2
   465  00018E                     timer0_lthread@msgval:
   466                           	opt stack 0
   467  00018E                     memcpy@s:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x8
   471  00018E                     	ds	2
   472  000190                     send_msg@qptr:
   473                           	opt stack 0
   474  000190                     recv_msg@qptr:
   475                           	opt stack 0
   476                           
   477                           ; 2 bytes @ 0xA
   478  000190                     	ds	2
   479  000192                     send_msg@length:
   480                           	opt stack 0
   481  000192                     recv_msg@maxlength:
   482                           	opt stack 0
   483                           
   484                           ; 1 bytes @ 0xC
   485  000192                     	ds	1
   486  000193                     send_msg@msgtype:
   487                           	opt stack 0
   488  000193                     recv_msg@msgtype:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0xD
   492  000193                     	ds	1
   493  000194                     send_msg@data:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0xE
   497  000194                     	ds	1
   498  000195                     recv_msg@data:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0xF
   502  000195                     	ds	1
   503  000196                     ??_send_msg:
   504                           
   505                           ; 0 bytes @ 0x10
   506  000196                     	ds	1
   507  000197                     ??_recv_msg:
   508  000197                     send_msg@tlength:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x11
   512  000197                     	ds	2
   513  000199                     send_msg@slot:
   514                           	opt stack 0
   515  000199                     recv_msg@slot:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x13
   519  000199                     	ds	1
   520  00019A                     send_msg@qmsg:
   521                           	opt stack 0
   522  00019A                     recv_msg@tlength:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x14
   526  00019A                     	ds	2
   527  00019C                     FromMainHigh_sendmsg@msgtype:
   528                           	opt stack 0
   529  00019C                     recv_msg@qmsg:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x16
   533  00019C                     	ds	1
   534  00019D                     FromMainHigh_sendmsg@data:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x17
   538  00019D                     	ds	1
   539  00019E                     ToMainLow_recvmsg@msgtype:
   540                           	opt stack 0
   541  00019E                     ToMainHigh_recvmsg@msgtype:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x18
   545  00019E                     	ds	1
   546  00019F                     FromMainHigh_sendmsg@length:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x19
   550  00019F                     	ds	1
   551  0001A0                     ToMainLow_recvmsg@data:
   552                           	opt stack 0
   553  0001A0                     ToMainHigh_recvmsg@data:
   554                           	opt stack 0
   555  0001A0                     timer1_lthread@tptr:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x1A
   559  0001A0                     	ds	2
   560  0001A2                     ToMainLow_recvmsg@maxlength:
   561                           	opt stack 0
   562  0001A2                     ToMainHigh_recvmsg@maxlength:
   563                           	opt stack 0
   564  0001A2                     timer1_lthread@msgtype:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x1C
   568  0001A2                     	ds	2
   569  0001A4                     timer1_lthread@length:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0x1E
   573  0001A4                     	ds	2
   574  0001A6                     timer1_lthread@msgbuffer:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x20
   578  0001A6                     	ds	2
   579  0001A8                     ??_timer1_lthread:
   580                           
   581                           ; 0 bytes @ 0x22
   582  0001A8                     	ds	1
   583  0001A9                     timer1_lthread@retval:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x23
   587  0001A9                     	ds	1
   588  0001AA                     ??_main:
   589                           
   590                           ; 0 bytes @ 0x24
   591  0001AA                     	ds	2
   592  0001AC                     main@msg:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x26
   596  0001AC                     	ds	2
   597  0001AE                     main@last_reg_recvd:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x28
   601  0001AE                     	ds	1
   602  0001AF                     main@msgbuffer:
   603                           	opt stack 0
   604                           
   605                           ; 11 bytes @ 0x29
   606  0001AF                     	ds	11
   607  0001BA                     main@t0thread_data:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x34
   611  0001BA                     	ds	2
   612  0001BC                     main@t1thread_data:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x36
   616  0001BC                     	ds	2
   617  0001BE                     main@msgtype:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x38
   621  0001BE                     	ds	1
   622  0001BF                     main@length:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x39
   626  0001BF                     	ds	1
   627  0001C0                     main@uc:
   628                           	opt stack 0
   629                           
   630                           ; 13 bytes @ 0x3A
   631  0001C0                     	ds	13
   632  0001CD                     main@ic:
   633                           	opt stack 0
   634                           
   635                           ; 29 bytes @ 0x47
   636  0001CD                     	ds	29
   637                           tblptru	equ	0xFF8
   638                           tblptrh	equ	0xFF7
   639                           tblptrl	equ	0xFF6
   640                           tablat	equ	0xFF5
   641                           postinc0	equ	0xFEE
   642                           wreg	equ	0xFE8
   643                           postdec1	equ	0xFE5
   644                           fsr1l	equ	0xFE1
   645                           
   646                           	psect	cstackBANK0
   647  000080                     __pcstackBANK0:
   648                           	opt stack 0
   649  000080                     i2___awmod@counter:
   650                           	opt stack 0
   651  000080                     i2memcpy@d1:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x0
   655  000080                     	ds	1
   656  000081                     i2___awmod@sign:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0x1
   660  000081                     	ds	1
   661  000082                     i2memcpy@s1:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x2
   665  000082                     	ds	2
   666  000084                     i2memcpy@n:
   667                           	opt stack 0
   668                           
   669                           ; 2 bytes @ 0x4
   670  000084                     	ds	2
   671  000086                     i2send_msg@qptr:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x6
   675  000086                     	ds	2
   676  000088                     i2send_msg@length:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x8
   680  000088                     	ds	1
   681  000089                     i2send_msg@msgtype:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x9
   685  000089                     	ds	1
   686  00008A                     i2send_msg@data:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0xA
   690  00008A                     	ds	2
   691  00008C                     ??i2_send_msg:
   692                           
   693                           ; 0 bytes @ 0xC
   694  00008C                     	ds	1
   695  00008D                     i2send_msg@tlength:
   696                           	opt stack 0
   697                           
   698                           ; 2 bytes @ 0xD
   699  00008D                     	ds	2
   700  00008F                     i2send_msg@slot:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0xF
   704  00008F                     	ds	1
   705  000090                     i2send_msg@qmsg:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x10
   709  000090                     	ds	2
   710  000092                     ToMainHigh_sendmsg@msgtype:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x12
   714  000092                     	ds	1
   715  000093                     ToMainHigh_sendmsg@data:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x13
   719  000093                     	ds	2
   720  000095                     ToMainHigh_sendmsg@length:
   721                           	opt stack 0
   722                           
   723                           ; 1 bytes @ 0x15
   724  000095                     	ds	1
   725  000096                     ??_i2c_slave_int_handler:
   726                           
   727                           ; 0 bytes @ 0x16
   728  000096                     	ds	2
   729  000098                     i2c_slave_int_handler@sensormsg:
   730                           	opt stack 0
   731                           
   732                           ; 5 bytes @ 0x18
   733  000098                     	ds	5
   734  00009D                     i2c_slave_int_handler@motormsg:
   735                           	opt stack 0
   736                           
   737                           ; 5 bytes @ 0x1D
   738  00009D                     	ds	5
   739  0000A2                     i2c_slave_int_handler@motorcomm:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x22
   743  0000A2                     	ds	2
   744  0000A4                     i2c_slave_int_handler@error_buf:
   745                           	opt stack 0
   746                           
   747                           ; 3 bytes @ 0x24
   748  0000A4                     	ds	3
   749  0000A7                     i2c_slave_int_handler@data_written:
   750                           	opt stack 0
   751                           
   752                           ; 1 bytes @ 0x27
   753  0000A7                     	ds	1
   754  0000A8                     i2c_slave_int_handler@overrun_error:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x28
   758  0000A8                     	ds	1
   759  0000A9                     i2c_slave_int_handler@i2c_data:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0x29
   763  0000A9                     	ds	1
   764  0000AA                     i2c_slave_int_handler@msg_to_send:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x2A
   768  0000AA                     	ds	1
   769  0000AB                     i2c_slave_int_handler@length:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x2B
   773  0000AB                     	ds	2
   774  0000AD                     i2c_slave_int_handler@msg_ready:
   775                           	opt stack 0
   776                           
   777                           ; 1 bytes @ 0x2D
   778  0000AD                     	ds	1
   779  0000AE                     i2c_slave_int_handler@data_read:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x2E
   783  0000AE                     	ds	1
   784  0000AF                     ??_InterruptHandlerHigh:
   785                           
   786                           ; 0 bytes @ 0x2F
   787  0000AF                     	ds	14
   788                           tblptru	equ	0xFF8
   789                           tblptrh	equ	0xFF7
   790                           tblptrl	equ	0xFF6
   791                           tablat	equ	0xFF5
   792                           postinc0	equ	0xFEE
   793                           wreg	equ	0xFE8
   794                           postdec1	equ	0xFE5
   795                           fsr1l	equ	0xFE1
   796                           
   797                           	psect	cstackCOMRAM
   798  000001                     __pcstackCOMRAM:
   799                           	opt stack 0
   800  000001                     ??_uart_trans_int_handler:
   801  000001                     ?i1___awmod:
   802                           	opt stack 0
   803  000001                     ReadUSART@data:
   804                           	opt stack 0
   805  000001                     WriteTimer1@timer1:
   806                           	opt stack 0
   807  000001                     i1memcpy@d1:
   808                           	opt stack 0
   809  000001                     i1___awmod@dividend:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x0
   813  000001                     	ds	2
   814  000003                     WriteTimer1@timer:
   815                           	opt stack 0
   816  000003                     i1memcpy@s1:
   817                           	opt stack 0
   818  000003                     i1___awmod@divisor:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x2
   822  000003                     	ds	2
   823  000005                     ??i1___awmod:
   824  000005                     i1memcpy@n:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0x4
   828  000005                     	ds	1
   829  000006                     i1___awmod@counter:
   830                           	opt stack 0
   831                           
   832                           ; 1 bytes @ 0x5
   833  000006                     	ds	1
   834  000007                     i1___awmod@sign:
   835                           	opt stack 0
   836  000007                     i1memcpy@d:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x6
   840  000007                     	ds	2
   841  000009                     i1memcpy@s:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0x8
   845  000009                     	ds	2
   846  00000B                     i1send_msg@qptr:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0xA
   850  00000B                     	ds	2
   851  00000D                     i1send_msg@length:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0xC
   855  00000D                     	ds	1
   856  00000E                     i1send_msg@msgtype:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0xD
   860  00000E                     	ds	1
   861  00000F                     i1send_msg@data:
   862                           	opt stack 0
   863                           
   864                           ; 2 bytes @ 0xE
   865  00000F                     	ds	2
   866  000011                     ??i1_send_msg:
   867                           
   868                           ; 0 bytes @ 0x10
   869  000011                     	ds	1
   870  000012                     i1send_msg@tlength:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0x11
   874  000012                     	ds	2
   875  000014                     i1send_msg@slot:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0x13
   879  000014                     	ds	1
   880  000015                     i1send_msg@qmsg:
   881                           	opt stack 0
   882                           
   883                           ; 2 bytes @ 0x14
   884  000015                     	ds	2
   885  000017                     ToMainLow_sendmsg@msgtype:
   886                           	opt stack 0
   887                           
   888                           ; 1 bytes @ 0x16
   889  000017                     	ds	1
   890  000018                     ToMainLow_sendmsg@data:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x17
   894  000018                     	ds	2
   895  00001A                     ToMainLow_sendmsg@length:
   896                           	opt stack 0
   897                           
   898                           ; 1 bytes @ 0x19
   899  00001A                     	ds	1
   900  00001B                     ??_uart_recv_int_handler:
   901                           
   902                           ; 0 bytes @ 0x1A
   903  00001B                     	ds	1
   904  00001C                     ??_InterruptHandlerLow:
   905                           
   906                           ; 0 bytes @ 0x1B
   907  00001C                     	ds	17
   908  00002D                     ?i2_in_high_int:
   909                           	opt stack 0
   910  00002D                     ?i2___awmod:
   911                           	opt stack 0
   912  00002D                     handle_start@data_read:
   913                           	opt stack 0
   914  00002D                     start_i2c_slave_reply@msg:
   915                           	opt stack 0
   916  00002D                     WriteTimer0@timer0:
   917                           	opt stack 0
   918  00002D                     i2check_msg@qptr:
   919                           	opt stack 0
   920  00002D                     i2uart_trans@data:
   921                           	opt stack 0
   922  00002D                     i2memcpy@d:
   923                           	opt stack 0
   924  00002D                     i2___awmod@dividend:
   925                           	opt stack 0
   926                           
   927                           ; 2 bytes @ 0x2C
   928  00002D                     	ds	2
   929  00002F                     ??_start_i2c_slave_reply:
   930  00002F                     ??i2_check_msg:
   931  00002F                     ??i2_uart_trans:
   932  00002F                     ?i2_in_low_int:
   933                           	opt stack 0
   934  00002F                     WriteTimer0@timer:
   935                           	opt stack 0
   936  00002F                     i2memcpy@s:
   937                           	opt stack 0
   938  00002F                     i2___awmod@divisor:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x2E
   942  00002F                     	ds	2
   943  000031                     ??i2___awmod:
   944  000031                     start_i2c_slave_reply@length:
   945                           	opt stack 0
   946  000031                     i2uart_trans@length:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x30
   950  000031                     	ds	1
   951  000032                     tblptru	equ	0xFF8
   952                           tblptrh	equ	0xFF7
   953                           tblptrl	equ	0xFF6
   954                           tablat	equ	0xFF5
   955                           postinc0	equ	0xFEE
   956                           wreg	equ	0xFE8
   957                           postdec1	equ	0xFE5
   958                           fsr1l	equ	0xFE1
   959                           
   960                           ; 0 bytes @ 0x31
   961 ;;
   962 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   963 ;;
   964 ;; *************** function _main *****************
   965 ;; Defined at:
   966 ;;		line 186 in file "../src/main.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;		None
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  ic             29   71[BANK1 ] struct __i2c_comm
   971 ;;  uc             13   58[BANK1 ] struct __uart_comm
   972 ;;  msgbuffer      11   41[BANK1 ] unsigned char [11]
   973 ;;  t1thread_dat    2   54[BANK1 ] struct __timer1_thread_s
   974 ;;  t0thread_dat    2   52[BANK1 ] struct __timer0_thread_s
   975 ;;  msg             2   38[BANK1 ] unsigned char [2]
   976 ;;  uthread_data    2    0        struct __uart_thread_str
   977 ;;  length          1   57[BANK1 ] char 
   978 ;;  msgtype         1   56[BANK1 ] unsigned char 
   979 ;;  last_reg_rec    1   40[BANK1 ] unsigned char 
   980 ;;  i               1    0        unsigned char 
   981 ;;  c               1    0        unsigned char 
   982 ;; Return value:  Size  Location     Type
   983 ;;		None               void
   984 ;; Registers used:
   985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   991 ;;      Params:         0       0       0       0       0
   992 ;;      Locals:         0       0      62       0       0
   993 ;;      Temps:          0       0       2       0       0
   994 ;;      Totals:         0       0      64       0       0
   995 ;;Total ram usage:       64 bytes
   996 ;; Hardware stack levels required when called:   15
   997 ;; This function calls:
   998 ;;		_OpenADC
   999 ;;		_OpenTimer0
  1000 ;;		_OpenTimer1
  1001 ;;		_OpenUSART
  1002 ;;		_SetChanADC
  1003 ;;		_ToMainHigh_recvmsg
  1004 ;;		_ToMainLow_recvmsg
  1005 ;;		_block_on_To_msgqueues
  1006 ;;		_enable_interrupts
  1007 ;;		_i2c_configure_slave
  1008 ;;		_i2c_master_send
  1009 ;;		_init_i2c
  1010 ;;		_init_queues
  1011 ;;		_init_timer1_lthread
  1012 ;;		_init_uart_recv
  1013 ;;		_timer0_lthread
  1014 ;;		_timer1_lthread
  1015 ;;		_uart_trans
  1016 ;; This function is called by:
  1017 ;;		Startup code after reset
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text0
  1022  0007B0                     __ptext0:
  1023                           	opt stack 0
  1024  0007B0                     _main:
  1025                           	opt stack 15
  1026                           
  1027                           ;main.c: 187: char c;
  1028                           ;main.c: 188: signed char length;
  1029                           ;main.c: 189: unsigned char msgtype;
  1030                           ;main.c: 190: unsigned char last_reg_recvd;
  1031                           ;main.c: 191: uart_comm uc;
  1032                           ;main.c: 192: i2c_comm ic;
  1033                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
  1034                           ;main.c: 194: unsigned char i;
  1035                           ;main.c: 195: uart_thread_struct uthread_data;
  1036                           ;main.c: 196: timer1_thread_struct t1thread_data;
  1037                           ;main.c: 197: timer0_thread_struct t0thread_data;
  1038                           ;main.c: 205: OSCCON = 0x82;
  1039                           
  1040                           ;incstack = 0
  1041  0007B0  0E82               	movlw	130
  1042  0007B2  6ED3               	movwf	4051,c	;volatile
  1043                           
  1044                           ;main.c: 206: OSCTUNEbits.PLLEN = 0;
  1045  0007B4  9C9B               	bcf	3995,6,c	;volatile
  1046                           
  1047                           ;main.c: 224: init_uart_recv(&uc);
  1048  0007B6  0101               	movlb	1	; () banked
  1049  0007B8  0E01               	movlw	high main@uc
  1050  0007BA  0101               	movlb	1	; () banked
  1051  0007BC  0101               	movlb	1	; () banked
  1052  0007BE  6F87               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1053  0007C0  0101               	movlb	1	; () banked
  1054  0007C2  0EC0               	movlw	low main@uc
  1055  0007C4  0101               	movlb	1	; () banked
  1056  0007C6  0101               	movlb	1	; () banked
  1057  0007C8  6F86               	movwf	init_uart_recv@uc& (0+255),b
  1058  0007CA  ECE4  F00F         	call	_init_uart_recv	;wreg free
  1059                           
  1060                           ;main.c: 227: init_i2c(&ic);
  1061  0007CE  0101               	movlb	1	; () banked
  1062  0007D0  0E01               	movlw	high main@ic
  1063  0007D2  0101               	movlb	1	; () banked
  1064  0007D4  0101               	movlb	1	; () banked
  1065  0007D6  6F87               	movwf	(init_i2c@ic+1)& (0+255),b
  1066  0007D8  0101               	movlb	1	; () banked
  1067  0007DA  0ECD               	movlw	low main@ic
  1068  0007DC  0101               	movlb	1	; () banked
  1069  0007DE  0101               	movlb	1	; () banked
  1070  0007E0  6F86               	movwf	init_i2c@ic& (0+255),b
  1071  0007E2  EC31  F00D         	call	_init_i2c	;wreg free
  1072                           
  1073                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1074  0007E6  0101               	movlb	1	; () banked
  1075  0007E8  0E01               	movlw	high main@t1thread_data
  1076  0007EA  0101               	movlb	1	; () banked
  1077  0007EC  0101               	movlb	1	; () banked
  1078  0007EE  6F87               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1079  0007F0  0101               	movlb	1	; () banked
  1080  0007F2  0EBC               	movlw	low main@t1thread_data
  1081  0007F4  0101               	movlb	1	; () banked
  1082  0007F6  0101               	movlb	1	; () banked
  1083  0007F8  6F86               	movwf	init_timer1_lthread@tptr& (0+255),b
  1084  0007FA  EC16  F010         	call	_init_timer1_lthread	;wreg free
  1085                           
  1086                           ;main.c: 233: init_queues();
  1087  0007FE  ECFA  F00C         	call	_init_queues	;wreg free
  1088                           
  1089                           ;main.c: 237: TRISB = 0x0;
  1090  000802  0E00               	movlw	0
  1091  000804  6E93               	movwf	3987,c	;volatile
  1092                           
  1093                           ;main.c: 238: LATB = 0x0;
  1094  000806  0E00               	movlw	0
  1095  000808  6E8A               	movwf	3978,c	;volatile
  1096                           
  1097                           ;main.c: 240: PORTA = 0x0;
  1098  00080A  0E00               	movlw	0
  1099  00080C  6E80               	movwf	3968,c	;volatile
  1100                           
  1101                           ;main.c: 241: LATA = 0x0;
  1102  00080E  0E00               	movlw	0
  1103  000810  6E89               	movwf	3977,c	;volatile
  1104                           
  1105                           ;main.c: 242: TRISA = 0x0F;
  1106  000812  0E0F               	movlw	15
  1107  000814  6E92               	movwf	3986,c	;volatile
  1108                           
  1109                           ;main.c: 255: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110101);
  1110  000816  0ED5               	movlw	213
  1111  000818  EC75  F00F         	call	_OpenTimer0
  1112                           
  1113                           ;main.c: 264: OpenTimer1(0b11111111 & 0b10111111 & 0b11001111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1114  00081C  0E85               	movlw	133
  1115  00081E  ECF1  F00E         	call	_OpenTimer1
  1116                           
  1117                           ;main.c: 272: IPR1bits.ADIP = 0;
  1118  000822  9C9F               	bcf	3999,6,c	;volatile
  1119                           
  1120                           ;main.c: 273: PIE1bits.ADIE = 1;
  1121  000824  8C9D               	bsf	3997,6,c	;volatile
  1122                           
  1123                           ;main.c: 275: IPR1bits.TMR1IP = 0;
  1124  000826  909F               	bcf	3999,0,c	;volatile
  1125                           
  1126                           ;main.c: 277: IPR1bits.RCIP = 0;
  1127  000828  9A9F               	bcf	3999,5,c	;volatile
  1128                           
  1129                           ;main.c: 279: IPR1bits.TXIP = 0;
  1130  00082A  989F               	bcf	3999,4,c	;volatile
  1131                           
  1132                           ;main.c: 281: IPR1bits.SSPIP = 1;
  1133  00082C  869F               	bsf	3999,3,c	;volatile
  1134                           
  1135                           ;main.c: 298: i2c_configure_slave(0xBE);
  1136  00082E  0EBE               	movlw	190
  1137  000830  EC8A  F00F         	call	_i2c_configure_slave
  1138                           
  1139                           ;main.c: 317: PIE1bits.SSPIE = 1;
  1140  000834  869D               	bsf	3997,3,c	;volatile
  1141                           
  1142                           ;main.c: 328: OpenUSART(0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1143                           ;main.c: 329: 0b11111111 & 0b11111111, 38);
  1144  000836  0E00               	movlw	0
  1145  000838  0101               	movlb	1	; () banked
  1146  00083A  0101               	movlb	1	; () banked
  1147  00083C  6F87               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1148  00083E  0E26               	movlw	38
  1149  000840  0101               	movlb	1	; () banked
  1150  000842  6F86               	movwf	OpenUSART@spbrg& (0+255),b
  1151  000844  0EFC               	movlw	252
  1152  000846  EC34  F00B         	call	_OpenUSART
  1153                           
  1154                           ;main.c: 330: RCSTAbits.SPEN = 1;
  1155  00084A  8EAB               	bsf	4011,7,c	;volatile
  1156                           
  1157                           ;main.c: 331: TRISC = 0xFF;
  1158  00084C  6894               	setf	3988,c	;volatile
  1159                           
  1160                           ;main.c: 338: enable_interrupts();
  1161  00084E  EC56  F010         	call	_enable_interrupts	;wreg free
  1162                           
  1163                           ;main.c: 352: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1164                           ;main.c: 353: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1165                           ;main.c: 354: 0b1011);
  1166  000852  0101               	movlb	1	; () banked
  1167  000854  6FAA               	movwf	??_main& (0+255),b
  1168  000856  0E0C               	movlw	12
  1169  000858  0101               	movlb	1	; () banked
  1170  00085A  0101               	movlb	1	; () banked
  1171  00085C  6F86               	movwf	OpenADC@config2& (0+255),b
  1172  00085E  0101               	movlb	1	; () banked
  1173  000860  51AA               	movf	??_main& (0+255),w,b
  1174  000862  0101               	movlb	1	; () banked
  1175  000864  6FAB               	movwf	(??_main+1)& (0+255),b
  1176  000866  0E0B               	movlw	11
  1177  000868  0101               	movlb	1	; () banked
  1178  00086A  0101               	movlb	1	; () banked
  1179  00086C  6F87               	movwf	OpenADC@portconfig& (0+255),b
  1180  00086E  0101               	movlb	1	; () banked
  1181  000870  51AB               	movf	(??_main+1)& (0+255),w,b
  1182  000872  0E53               	movlw	83
  1183  000874  ECC2  F00B         	call	_OpenADC
  1184                           
  1185                           ;main.c: 355: SetChanADC(0b10001111);
  1186  000878  0E8F               	movlw	143
  1187  00087A  ECD4  F00F         	call	_SetChanADC
  1188                           
  1189                           ;main.c: 366: unsigned char msg[2] = {0x01, 0x02};
  1190  00087E  C1EA  F1AC         	movff	main@F5212,main@msg
  1191  000882  C1EB  F1AD         	movff	main@F5212+1,main@msg+1
  1192  000886                     l3693:
  1193                           
  1194                           ;main.c: 377: block_on_To_msgqueues();
  1195  000886  EC45  F00C         	call	_block_on_To_msgqueues	;wreg free
  1196                           
  1197                           ;main.c: 384: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1198  00088A  0101               	movlb	1	; () banked
  1199  00088C  0E01               	movlw	high main@msgtype
  1200  00088E  0101               	movlb	1	; () banked
  1201  000890  0101               	movlb	1	; () banked
  1202  000892  6F9F               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1203  000894  0101               	movlb	1	; () banked
  1204  000896  0EBE               	movlw	low main@msgtype
  1205  000898  0101               	movlb	1	; () banked
  1206  00089A  0101               	movlb	1	; () banked
  1207  00089C  6F9E               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1208  00089E  0101               	movlb	1	; () banked
  1209  0008A0  0E01               	movlw	high main@msgbuffer
  1210  0008A2  0101               	movlb	1	; () banked
  1211  0008A4  0101               	movlb	1	; () banked
  1212  0008A6  6FA1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1213  0008A8  0101               	movlb	1	; () banked
  1214  0008AA  0EAF               	movlw	low main@msgbuffer
  1215  0008AC  0101               	movlb	1	; () banked
  1216  0008AE  0101               	movlb	1	; () banked
  1217  0008B0  6FA0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1218  0008B2  0E0A               	movlw	10
  1219  0008B4  ECB0  F00E         	call	_ToMainHigh_recvmsg
  1220  0008B8  0101               	movlb	1	; () banked
  1221  0008BA  0101               	movlb	1	; () banked
  1222  0008BC  6FBF               	movwf	main@length& (0+255),b
  1223                           
  1224                           ; BSR set to: 1
  1225                           ;main.c: 385: if (length < 0) {
  1226  0008BE  0101               	movlb	1	; () banked
  1227  0008C0  0101               	movlb	1	; () banked
  1228  0008C2  BFBF               	btfsc	main@length& (0+255),7,b
  1229  0008C4  D04D               	goto	l3709
  1230  0008C6  D03C               	goto	l3707
  1231  0008C8                     l3701:
  1232                           
  1233                           ; BSR set to: 1
  1234                           ;main.c: 393: {
  1235                           ;main.c: 394: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1236  0008C8  0101               	movlb	1	; () banked
  1237  0008CA  0E01               	movlw	high main@t0thread_data
  1238  0008CC  0101               	movlb	1	; () banked
  1239  0008CE  0101               	movlb	1	; () banked
  1240  0008D0  6F87               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1241  0008D2  0101               	movlb	1	; () banked
  1242  0008D4  0EBA               	movlw	low main@t0thread_data
  1243  0008D6  0101               	movlb	1	; () banked
  1244  0008D8  0101               	movlb	1	; () banked
  1245  0008DA  6F86               	movwf	timer0_lthread@tptr& (0+255),b
  1246  0008DC  0101               	movlb	1	; () banked
  1247  0008DE  0101               	movlb	1	; () banked
  1248  0008E0  C1BE  F188         	movff	main@msgtype,timer0_lthread@msgtype
  1249  0008E4  0101               	movlb	1	; () banked
  1250  0008E6  0101               	movlb	1	; () banked
  1251  0008E8  6B89               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1252  0008EA  0101               	movlb	1	; () banked
  1253  0008EC  0101               	movlb	1	; () banked
  1254  0008EE  51BF               	movf	main@length& (0+255),w,b
  1255  0008F0  0101               	movlb	1	; () banked
  1256  0008F2  0101               	movlb	1	; () banked
  1257  0008F4  6F8A               	movwf	timer0_lthread@length& (0+255),b
  1258  0008F6  0101               	movlb	1	; () banked
  1259  0008F8  6B8B               	clrf	(timer0_lthread@length+1)& (0+255),b
  1260  0008FA  0101               	movlb	1	; () banked
  1261  0008FC  BF8A               	btfsc	timer0_lthread@length& (0+255),7,b
  1262  0008FE  078B               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1263  000900  0101               	movlb	1	; () banked
  1264  000902  0E01               	movlw	high main@msgbuffer
  1265  000904  0101               	movlb	1	; () banked
  1266  000906  0101               	movlb	1	; () banked
  1267  000908  6F8D               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1268  00090A  0101               	movlb	1	; () banked
  1269  00090C  0EAF               	movlw	low main@msgbuffer
  1270  00090E  0101               	movlb	1	; () banked
  1271  000910  0101               	movlb	1	; () banked
  1272  000912  6F8C               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1273  000914  EC0D  F010         	call	_timer0_lthread	;wreg free
  1274                           
  1275                           ;main.c: 395: break;
  1276  000918  D023               	goto	l3709
  1277  00091A                     l132:
  1278                           
  1279                           ;main.c: 398: case 41:
  1280                           ;main.c: 399: {
  1281                           ;main.c: 402: last_reg_recvd = msgbuffer[0];
  1282  00091A  C1AF  F1AE         	movff	main@msgbuffer,main@last_reg_recvd
  1283                           
  1284                           ;main.c: 403: break;
  1285  00091E  D020               	goto	l3709
  1286  000920                     l3703:
  1287                           
  1288                           ;main.c: 406: {
  1289                           ;main.c: 409: uart_trans(length, msgbuffer);
  1290  000920  0101               	movlb	1	; () banked
  1291  000922  0E01               	movlw	high main@msgbuffer
  1292  000924  0101               	movlb	1	; () banked
  1293  000926  0101               	movlb	1	; () banked
  1294  000928  6F87               	movwf	(uart_trans@data+1)& (0+255),b
  1295  00092A  0101               	movlb	1	; () banked
  1296  00092C  0EAF               	movlw	low main@msgbuffer
  1297  00092E  0101               	movlb	1	; () banked
  1298  000930  0101               	movlb	1	; () banked
  1299  000932  6F86               	movwf	uart_trans@data& (0+255),b
  1300  000934  0101               	movlb	1	; () banked
  1301  000936  0101               	movlb	1	; () banked
  1302  000938  51BF               	movf	main@length& (0+255),w,b
  1303  00093A  ECE4  F009         	call	_uart_trans
  1304                           
  1305                           ;main.c: 412: break;
  1306  00093E  D010               	goto	l3709
  1307  000940                     l3707:
  1308  000940  0101               	movlb	1	; () banked
  1309  000942  0101               	movlb	1	; () banked
  1310  000944  51BE               	movf	main@msgtype& (0+255),w,b
  1311                           
  1312                           ; Switch size 1, requested type "space"
  1313                           ; Number of cases is 5, Range of values is 10 to 46
  1314                           ; switch strategies available:
  1315                           ; Name         Instructions Cycles
  1316                           ; simple_byte           16     9 (average)
  1317                           ;	Chosen strategy is simple_byte
  1318  000946  0A0A               	xorlw	10	; case 10
  1319  000948  B4D8               	btfsc	status,2,c
  1320  00094A  D7BE               	goto	l3701
  1321  00094C  0A22               	xorlw	34	; case 40
  1322  00094E  B4D8               	btfsc	status,2,c
  1323  000950  D7E4               	goto	l132
  1324  000952  0A01               	xorlw	1	; case 41
  1325  000954  B4D8               	btfsc	status,2,c
  1326  000956  D7E1               	goto	l132
  1327  000958  0A04               	xorlw	4	; case 45
  1328  00095A  B4D8               	btfsc	status,2,c
  1329  00095C  D7E1               	goto	l3703
  1330  00095E  0A03               	xorlw	3	; case 46
  1331  000960                     l3709:
  1332                           
  1333                           ;main.c: 427: }
  1334                           ;main.c: 430: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1335  000960  0101               	movlb	1	; () banked
  1336  000962  0E01               	movlw	high main@msgtype
  1337  000964  0101               	movlb	1	; () banked
  1338  000966  0101               	movlb	1	; () banked
  1339  000968  6F9F               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1340  00096A  0101               	movlb	1	; () banked
  1341  00096C  0EBE               	movlw	low main@msgtype
  1342  00096E  0101               	movlb	1	; () banked
  1343  000970  0101               	movlb	1	; () banked
  1344  000972  6F9E               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1345  000974  0101               	movlb	1	; () banked
  1346  000976  0E01               	movlw	high main@msgbuffer
  1347  000978  0101               	movlb	1	; () banked
  1348  00097A  0101               	movlb	1	; () banked
  1349  00097C  6FA1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1350  00097E  0101               	movlb	1	; () banked
  1351  000980  0EAF               	movlw	low main@msgbuffer
  1352  000982  0101               	movlb	1	; () banked
  1353  000984  0101               	movlb	1	; () banked
  1354  000986  6FA0               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1355  000988  0E0A               	movlw	10
  1356  00098A  EC8F  F00E         	call	_ToMainLow_recvmsg
  1357  00098E  0101               	movlb	1	; () banked
  1358  000990  0101               	movlb	1	; () banked
  1359  000992  6FBF               	movwf	main@length& (0+255),b
  1360                           
  1361                           ; BSR set to: 1
  1362                           ;main.c: 431: if (length < 0) {
  1363  000994  0101               	movlb	1	; () banked
  1364  000996  0101               	movlb	1	; () banked
  1365  000998  BFBF               	btfsc	main@length& (0+255),7,b
  1366  00099A  D775               	goto	l3693
  1367  00099C  D072               	goto	l3729
  1368  00099E                     l3715:
  1369                           
  1370                           ; BSR set to: 1
  1371                           ;main.c: 439: {
  1372                           ;main.c: 440: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1373  00099E  0101               	movlb	1	; () banked
  1374  0009A0  0E01               	movlw	high main@t1thread_data
  1375  0009A2  0101               	movlb	1	; () banked
  1376  0009A4  0101               	movlb	1	; () banked
  1377  0009A6  6FA1               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1378  0009A8  0101               	movlb	1	; () banked
  1379  0009AA  0EBC               	movlw	low main@t1thread_data
  1380  0009AC  0101               	movlb	1	; () banked
  1381  0009AE  0101               	movlb	1	; () banked
  1382  0009B0  6FA0               	movwf	timer1_lthread@tptr& (0+255),b
  1383  0009B2  0101               	movlb	1	; () banked
  1384  0009B4  0101               	movlb	1	; () banked
  1385  0009B6  C1BE  F1A2         	movff	main@msgtype,timer1_lthread@msgtype
  1386  0009BA  0101               	movlb	1	; () banked
  1387  0009BC  0101               	movlb	1	; () banked
  1388  0009BE  6BA3               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1389  0009C0  0101               	movlb	1	; () banked
  1390  0009C2  0101               	movlb	1	; () banked
  1391  0009C4  51BF               	movf	main@length& (0+255),w,b
  1392  0009C6  0101               	movlb	1	; () banked
  1393  0009C8  0101               	movlb	1	; () banked
  1394  0009CA  6FA4               	movwf	timer1_lthread@length& (0+255),b
  1395  0009CC  0101               	movlb	1	; () banked
  1396  0009CE  6BA5               	clrf	(timer1_lthread@length+1)& (0+255),b
  1397  0009D0  0101               	movlb	1	; () banked
  1398  0009D2  BFA4               	btfsc	timer1_lthread@length& (0+255),7,b
  1399  0009D4  07A5               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1400  0009D6  0101               	movlb	1	; () banked
  1401  0009D8  0E01               	movlw	high main@msgbuffer
  1402  0009DA  0101               	movlb	1	; () banked
  1403  0009DC  0101               	movlb	1	; () banked
  1404  0009DE  6FA7               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1405  0009E0  0101               	movlb	1	; () banked
  1406  0009E2  0EAF               	movlw	low main@msgbuffer
  1407  0009E4  0101               	movlb	1	; () banked
  1408  0009E6  0101               	movlb	1	; () banked
  1409  0009E8  6FA6               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1410  0009EA  ECC1  F00C         	call	_timer1_lthread	;wreg free
  1411                           
  1412                           ;main.c: 441: break;
  1413  0009EE  D74B               	goto	l3693
  1414  0009F0                     l3717:
  1415                           
  1416                           ;main.c: 444: case 31:
  1417                           ;main.c: 445: {
  1418                           ;main.c: 448: if(msgbuffer[0] == 0xBA){
  1419  0009F0  0101               	movlb	1	; () banked
  1420  0009F2  0101               	movlb	1	; () banked
  1421  0009F4  51AF               	movf	main@msgbuffer& (0+255),w,b
  1422  0009F6  0ABA               	xorlw	186
  1423  0009F8  A4D8               	btfss	status,2,c
  1424  0009FA  D01E               	goto	l3721
  1425                           
  1426                           ; BSR set to: 1
  1427                           ;main.c: 450: i2c_master_send(5, 5, msgbuffer, 0xBE);
  1428  0009FC  0101               	movlb	1	; () banked
  1429  0009FE  6FAA               	movwf	??_main& (0+255),b
  1430  000A00  0E05               	movlw	5
  1431  000A02  0101               	movlb	1	; () banked
  1432  000A04  0101               	movlb	1	; () banked
  1433  000A06  6F86               	movwf	i2c_master_send@recvlength& (0+255),b
  1434  000A08  0101               	movlb	1	; () banked
  1435  000A0A  51AA               	movf	??_main& (0+255),w,b
  1436  000A0C  0101               	movlb	1	; () banked
  1437  000A0E  0E01               	movlw	high main@msgbuffer
  1438  000A10  0101               	movlb	1	; () banked
  1439  000A12  0101               	movlb	1	; () banked
  1440  000A14  6F88               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1441  000A16  0101               	movlb	1	; () banked
  1442  000A18  0EAF               	movlw	low main@msgbuffer
  1443  000A1A  0101               	movlb	1	; () banked
  1444  000A1C  0101               	movlb	1	; () banked
  1445  000A1E  6F87               	movwf	i2c_master_send@msg& (0+255),b
  1446  000A20  0101               	movlb	1	; () banked
  1447  000A22  6FAB               	movwf	(??_main+1)& (0+255),b
  1448  000A24  0EBE               	movlw	190
  1449  000A26  0101               	movlb	1	; () banked
  1450  000A28  0101               	movlb	1	; () banked
  1451  000A2A  6F89               	movwf	i2c_master_send@slave_addr& (0+255),b
  1452  000A2C  0101               	movlb	1	; () banked
  1453  000A2E  51AB               	movf	(??_main+1)& (0+255),w,b
  1454  000A30  0E05               	movlw	5
  1455  000A32  ECFD  F005         	call	_i2c_master_send
  1456                           
  1457                           ;main.c: 451: } else if(msgbuffer[0] == 0xAA){
  1458  000A36  D023               	goto	l3725
  1459  000A38                     l3721:
  1460  000A38  0101               	movlb	1	; () banked
  1461  000A3A  0101               	movlb	1	; () banked
  1462  000A3C  51AF               	movf	main@msgbuffer& (0+255),w,b
  1463  000A3E  0AAA               	xorlw	170
  1464  000A40  A4D8               	btfss	status,2,c
  1465  000A42  D01D               	goto	l3725
  1466                           
  1467                           ; BSR set to: 1
  1468                           ;main.c: 453: i2c_master_send(1, 5, msgbuffer, 0x9E);
  1469  000A44  0101               	movlb	1	; () banked
  1470  000A46  6FAA               	movwf	??_main& (0+255),b
  1471  000A48  0E05               	movlw	5
  1472  000A4A  0101               	movlb	1	; () banked
  1473  000A4C  0101               	movlb	1	; () banked
  1474  000A4E  6F86               	movwf	i2c_master_send@recvlength& (0+255),b
  1475  000A50  0101               	movlb	1	; () banked
  1476  000A52  51AA               	movf	??_main& (0+255),w,b
  1477  000A54  0101               	movlb	1	; () banked
  1478  000A56  0E01               	movlw	high main@msgbuffer
  1479  000A58  0101               	movlb	1	; () banked
  1480  000A5A  0101               	movlb	1	; () banked
  1481  000A5C  6F88               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1482  000A5E  0101               	movlb	1	; () banked
  1483  000A60  0EAF               	movlw	low main@msgbuffer
  1484  000A62  0101               	movlb	1	; () banked
  1485  000A64  0101               	movlb	1	; () banked
  1486  000A66  6F87               	movwf	i2c_master_send@msg& (0+255),b
  1487  000A68  0101               	movlb	1	; () banked
  1488  000A6A  6FAB               	movwf	(??_main+1)& (0+255),b
  1489  000A6C  0E9E               	movlw	158
  1490  000A6E  0101               	movlb	1	; () banked
  1491  000A70  0101               	movlb	1	; () banked
  1492  000A72  6F89               	movwf	i2c_master_send@slave_addr& (0+255),b
  1493  000A74  0101               	movlb	1	; () banked
  1494  000A76  51AB               	movf	(??_main+1)& (0+255),w,b
  1495  000A78  0E01               	movlw	1
  1496  000A7A  ECFD  F005         	call	_i2c_master_send
  1497  000A7E                     l3725:
  1498                           
  1499                           ;main.c: 454: }
  1500                           ;main.c: 456: LATBbits.LATB2 = 0;
  1501  000A7E  948A               	bcf	3978,2,c	;volatile
  1502                           
  1503                           ;main.c: 458: break;
  1504  000A80  D702               	goto	l3693
  1505  000A82                     l3729:
  1506  000A82  0101               	movlb	1	; () banked
  1507  000A84  0101               	movlb	1	; () banked
  1508  000A86  51BE               	movf	main@msgtype& (0+255),w,b
  1509                           
  1510                           ; Switch size 1, requested type "space"
  1511                           ; Number of cases is 3, Range of values is 11 to 31
  1512                           ; switch strategies available:
  1513                           ; Name         Instructions Cycles
  1514                           ; simple_byte           10     6 (average)
  1515                           ;	Chosen strategy is simple_byte
  1516  000A88  0A0B               	xorlw	11	; case 11
  1517  000A8A  B4D8               	btfsc	status,2,c
  1518  000A8C  D788               	goto	l3715
  1519  000A8E  0A15               	xorlw	21	; case 30
  1520  000A90  B4D8               	btfsc	status,2,c
  1521  000A92  D7AE               	goto	l3717
  1522  000A94  0A01               	xorlw	1	; case 31
  1523  000A96  B4D8               	btfsc	status,2,c
  1524  000A98  D7AB               	goto	l3717
  1525  000A9A  D6F5               	goto	l3693
  1526  000A9C                     __end_of_main:
  1527                           	opt stack 0
  1528                           tblptru	equ	0xFF8
  1529                           tblptrh	equ	0xFF7
  1530                           tblptrl	equ	0xFF6
  1531                           tablat	equ	0xFF5
  1532                           postinc0	equ	0xFEE
  1533                           wreg	equ	0xFE8
  1534                           postdec1	equ	0xFE5
  1535                           fsr1l	equ	0xFE1
  1536                           status	equ	0xFD8
  1537                           
  1538 ;; *************** function _uart_trans *****************
  1539 ;; Defined at:
  1540 ;;		line 61 in file "../src/my_uart.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  length          1    wreg     unsigned char 
  1543 ;;  data            2    0[BANK1 ] PTR unsigned char 
  1544 ;;		 -> i2c_slave_int_handler@motorcomm(2), main@msgbuffer(11), 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  length          1    4[BANK1 ] unsigned char 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;		None               void
  1549 ;; Registers used:
  1550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1556 ;;      Params:         0       0       2       0       0
  1557 ;;      Locals:         0       0       1       0       0
  1558 ;;      Temps:          0       0       2       0       0
  1559 ;;      Totals:         0       0       5       0       0
  1560 ;;Total ram usage:        5 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:   11
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text1
  1571  0013C8                     __ptext1:
  1572                           	opt stack 0
  1573  0013C8                     _uart_trans:
  1574                           	opt stack 18
  1575                           
  1576                           ; BSR set to: 1
  1577                           ;incstack = 0
  1578                           ;uart_trans@length stored from wreg
  1579  0013C8  CFE8 F18A          	movff	wreg,uart_trans@length
  1580                           
  1581                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  1582  0013CC  EE20 F00B          	lfsr	2,11
  1583  0013D0  5052               	movf	_uc_ptr,w,c
  1584  0013D2  26D9               	addwf	fsr2l,f,c
  1585  0013D4  5053               	movf	_uc_ptr+1,w,c
  1586  0013D6  22DA               	addwfc	fsr2h,f,c
  1587  0013D8  0E00               	movlw	0
  1588  0013DA  6EDF               	movwf	indf2,c
  1589  0013DC  D035               	goto	l3901
  1590  0013DE                     l3897:
  1591                           
  1592                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  1593  0013DE  EE20 F00B          	lfsr	2,11
  1594  0013E2  5052               	movf	_uc_ptr,w,c
  1595  0013E4  26D9               	addwf	fsr2l,f,c
  1596  0013E6  5053               	movf	_uc_ptr+1,w,c
  1597  0013E8  22DA               	addwfc	fsr2h,f,c
  1598  0013EA  50DF               	movf	indf2,w,c
  1599  0013EC  0101               	movlb	1	; () banked
  1600  0013EE  6F88               	movwf	??_uart_trans& (0+255),b
  1601  0013F0  0101               	movlb	1	; () banked
  1602  0013F2  5188               	movf	??_uart_trans& (0+255),w,b
  1603  0013F4  0D01               	mullw	1
  1604  0013F6  50F3               	movf	prodl,w,c
  1605  0013F8  0101               	movlb	1	; () banked
  1606  0013FA  0101               	movlb	1	; () banked
  1607  0013FC  2586               	addwf	uart_trans@data& (0+255),w,b
  1608  0013FE  6ED9               	movwf	fsr2l,c
  1609  001400  50F4               	movf	prodh,w,c
  1610  001402  0101               	movlb	1	; () banked
  1611  001404  0101               	movlb	1	; () banked
  1612  001406  2187               	addwfc	(uart_trans@data+1)& (0+255),w,b
  1613  001408  6EDA               	movwf	fsr2h,c
  1614  00140A  EE10 F00B          	lfsr	1,11
  1615  00140E  5052               	movf	_uc_ptr,w,c
  1616  001410  26E1               	addwf	fsr1l,f,c
  1617  001412  5053               	movf	_uc_ptr+1,w,c
  1618  001414  22E2               	addwfc	fsr1h,f,c
  1619  001416  50E7               	movf	indf1,w,c
  1620  001418  0101               	movlb	1	; () banked
  1621  00141A  6F89               	movwf	(??_uart_trans+1)& (0+255),b
  1622  00141C  0101               	movlb	1	; () banked
  1623  00141E  5189               	movf	(??_uart_trans+1)& (0+255),w,b
  1624  001420  0D01               	mullw	1
  1625  001422  0E06               	movlw	6
  1626  001424  26F3               	addwf	prodl,f,c
  1627  001426  0E00               	movlw	0
  1628  001428  22F4               	addwfc	prodh,f,c
  1629  00142A  50F3               	movf	prodl,w,c
  1630  00142C  2452               	addwf	_uc_ptr,w,c
  1631  00142E  6EE1               	movwf	fsr1l,c
  1632  001430  50F4               	movf	prodh,w,c
  1633  001432  2053               	addwfc	_uc_ptr+1,w,c
  1634  001434  6EE2               	movwf	fsr1h,c
  1635  001436  CFDF FFE7          	movff	indf2,indf1
  1636                           
  1637                           ; BSR set to: 1
  1638  00143A  EE20 F00B          	lfsr	2,11
  1639  00143E  5052               	movf	_uc_ptr,w,c
  1640  001440  26D9               	addwf	fsr2l,f,c
  1641  001442  5053               	movf	_uc_ptr+1,w,c
  1642  001444  22DA               	addwfc	fsr2h,f,c
  1643  001446  2ADF               	incf	indf2,f,c
  1644  001448                     l3901:
  1645  001448  EE20 F00B          	lfsr	2,11
  1646  00144C  5052               	movf	_uc_ptr,w,c
  1647  00144E  26D9               	addwf	fsr2l,f,c
  1648  001450  5053               	movf	_uc_ptr+1,w,c
  1649  001452  22DA               	addwfc	fsr2h,f,c
  1650  001454  50DF               	movf	indf2,w,c
  1651  001456  0101               	movlb	1	; () banked
  1652  001458  6F88               	movwf	??_uart_trans& (0+255),b
  1653  00145A  0101               	movlb	1	; () banked
  1654  00145C  0101               	movlb	1	; () banked
  1655  00145E  518A               	movf	uart_trans@length& (0+255),w,b
  1656  001460  0101               	movlb	1	; () banked
  1657  001462  5D88               	subwf	??_uart_trans& (0+255),w,b
  1658  001464  A0D8               	btfss	status,0,c
  1659  001466  D7BB               	goto	l3897
  1660                           
  1661                           ; BSR set to: 1
  1662                           ;my_uart.c: 67: }
  1663                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  1664                           
  1665                           ; BSR set to: 1
  1666  001468  EE20 F00C          	lfsr	2,12
  1667  00146C  5052               	movf	_uc_ptr,w,c
  1668  00146E  26D9               	addwf	fsr2l,f,c
  1669  001470  5053               	movf	_uc_ptr+1,w,c
  1670  001472  22DA               	addwfc	fsr2h,f,c
  1671  001474  0E00               	movlw	0
  1672  001476  6EDF               	movwf	indf2,c
  1673                           
  1674                           ; BSR set to: 1
  1675                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  1676  001478  889D               	bsf	3997,4,c	;volatile
  1677                           
  1678                           ; BSR set to: 1
  1679  00147A  0012               	return	
  1680  00147C                     __end_of_uart_trans:
  1681                           	opt stack 0
  1682                           tblptru	equ	0xFF8
  1683                           tblptrh	equ	0xFF7
  1684                           tblptrl	equ	0xFF6
  1685                           tablat	equ	0xFF5
  1686                           prodh	equ	0xFF4
  1687                           prodl	equ	0xFF3
  1688                           postinc0	equ	0xFEE
  1689                           wreg	equ	0xFE8
  1690                           indf1	equ	0xFE7
  1691                           postdec1	equ	0xFE5
  1692                           fsr1h	equ	0xFE2
  1693                           fsr1l	equ	0xFE1
  1694                           indf2	equ	0xFDF
  1695                           fsr2h	equ	0xFDA
  1696                           fsr2l	equ	0xFD9
  1697                           status	equ	0xFD8
  1698                           
  1699 ;; *************** function _timer1_lthread *****************
  1700 ;; Defined at:
  1701 ;;		line 14 in file "../src/timer1_thread.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  1704 ;;		 -> main@t1thread_data(2), 
  1705 ;;  msgtype         2   28[BANK1 ] int 
  1706 ;;  length          2   30[BANK1 ] int 
  1707 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1708 ;;		 -> main@msgbuffer(11), 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  retval          1   35[BANK1 ] char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  2   26[BANK1 ] int 
  1713 ;; Registers used:
  1714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1720 ;;      Params:         0       0       8       0       0
  1721 ;;      Locals:         0       0       1       0       0
  1722 ;;      Temps:          0       0       1       0       0
  1723 ;;      Totals:         0       0      10       0       0
  1724 ;;Total ram usage:       10 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; Hardware stack levels required when called:   14
  1727 ;; This function calls:
  1728 ;;		_FromMainHigh_sendmsg
  1729 ;;		___lwmod
  1730 ;; This function is called by:
  1731 ;;		_main
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text2
  1736  001982                     __ptext2:
  1737                           	opt stack 0
  1738  001982                     _timer1_lthread:
  1739                           	opt stack 15
  1740                           
  1741                           ;timer1_thread.c: 15: signed char retval;
  1742                           ;timer1_thread.c: 17: tptr->msgcount++;
  1743                           
  1744                           ; BSR set to: 1
  1745                           ;incstack = 0
  1746  001982  C1A0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1747  001986  C1A1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1748  00198A  2ADE               	incf	postinc2,f,c
  1749  00198C  0E00               	movlw	0
  1750  00198E  22DD               	addwfc	postdec2,f,c
  1751                           
  1752                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1753  001990  C1A0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1754  001994  C1A1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1755  001998  0101               	movlb	1	; () banked
  1756  00199A  CFDE F186          	movff	postinc2,___lwmod@dividend
  1757  00199E  0101               	movlb	1	; () banked
  1758  0019A0  CFDD F187          	movff	postdec2,___lwmod@dividend+1
  1759  0019A4  0E00               	movlw	0
  1760  0019A6  0101               	movlb	1	; () banked
  1761  0019A8  0101               	movlb	1	; () banked
  1762  0019AA  6F89               	movwf	(___lwmod@divisor+1)& (0+255),b
  1763  0019AC  0E0A               	movlw	10
  1764  0019AE  0101               	movlb	1	; () banked
  1765  0019B0  6F88               	movwf	___lwmod@divisor& (0+255),b
  1766  0019B2  EC7D  F00B         	call	___lwmod	;wreg free
  1767  0019B6  0101               	movlb	1	; () banked
  1768  0019B8  0101               	movlb	1	; () banked
  1769  0019BA  5186               	movf	?___lwmod& (0+255),w,b
  1770  0019BC  0A09               	xorlw	9
  1771  0019BE  0101               	movlb	1	; () banked
  1772  0019C0  1187               	iorwf	(?___lwmod+1)& (0+255),w,b
  1773  0019C2  A4D8               	btfss	status,2,c
  1774  0019C4  0012               	return	
  1775                           
  1776                           ; BSR set to: 1
  1777                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1778  0019C6  0101               	movlb	1	; () banked
  1779  0019C8  6FA8               	movwf	??_timer1_lthread& (0+255),b
  1780  0019CA  0E14               	movlw	20
  1781  0019CC  0101               	movlb	1	; () banked
  1782  0019CE  0101               	movlb	1	; () banked
  1783  0019D0  6F9C               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1784  0019D2  0101               	movlb	1	; () banked
  1785  0019D4  51A8               	movf	??_timer1_lthread& (0+255),w,b
  1786  0019D6  0101               	movlb	1	; () banked
  1787  0019D8  0101               	movlb	1	; () banked
  1788  0019DA  C1A1  F19E         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1789  0019DE  0101               	movlb	1	; () banked
  1790  0019E0  0101               	movlb	1	; () banked
  1791  0019E2  C1A0  F19D         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1792  0019E6  0E02               	movlw	2
  1793  0019E8  EC0D  F00F         	call	_FromMainHigh_sendmsg
  1794  0019EC  0101               	movlb	1	; () banked
  1795  0019EE  0101               	movlb	1	; () banked
  1796  0019F0  6FA9               	movwf	timer1_lthread@retval& (0+255),b
  1797  0019F2  0012               	return	
  1798  0019F4                     __end_of_timer1_lthread:
  1799                           	opt stack 0
  1800                           tblptru	equ	0xFF8
  1801                           tblptrh	equ	0xFF7
  1802                           tblptrl	equ	0xFF6
  1803                           tablat	equ	0xFF5
  1804                           prodh	equ	0xFF4
  1805                           prodl	equ	0xFF3
  1806                           postinc0	equ	0xFEE
  1807                           wreg	equ	0xFE8
  1808                           indf1	equ	0xFE7
  1809                           postdec1	equ	0xFE5
  1810                           fsr1h	equ	0xFE2
  1811                           fsr1l	equ	0xFE1
  1812                           indf2	equ	0xFDF
  1813                           postinc2	equ	0xFDE
  1814                           postdec2	equ	0xFDD
  1815                           fsr2h	equ	0xFDA
  1816                           fsr2l	equ	0xFD9
  1817                           status	equ	0xFD8
  1818                           
  1819 ;; *************** function ___lwmod *****************
  1820 ;; Defined at:
  1821 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  dividend        2    0[BANK1 ] unsigned int 
  1824 ;;  divisor         2    2[BANK1 ] unsigned int 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  counter         1    5[BANK1 ] unsigned char 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  2    0[BANK1 ] unsigned int 
  1829 ;; Registers used:
  1830 ;;		wreg, status,2, status,0
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1836 ;;      Params:         0       0       4       0       0
  1837 ;;      Locals:         0       0       1       0       0
  1838 ;;      Temps:          0       0       1       0       0
  1839 ;;      Totals:         0       0       6       0       0
  1840 ;;Total ram usage:        6 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:   11
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_timer1_lthread
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text3
  1851  0016FA                     __ptext3:
  1852                           	opt stack 0
  1853  0016FA                     ___lwmod:
  1854                           	opt stack 17
  1855                           
  1856                           ; BSR set to: 1
  1857                           ;incstack = 0
  1858  0016FA  0101               	movlb	1	; () banked
  1859  0016FC  0101               	movlb	1	; () banked
  1860  0016FE  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1861  001700  1188               	iorwf	___lwmod@divisor& (0+255),w,b
  1862  001702  B4D8               	btfsc	status,2,c
  1863  001704  D03A               	goto	l1113
  1864                           
  1865                           ; BSR set to: 1
  1866  001706  0101               	movlb	1	; () banked
  1867  001708  6F8A               	movwf	??___lwmod& (0+255),b
  1868  00170A  0E01               	movlw	1
  1869  00170C  0101               	movlb	1	; () banked
  1870  00170E  0101               	movlb	1	; () banked
  1871  001710  6F8B               	movwf	___lwmod@counter& (0+255),b
  1872  001712  0101               	movlb	1	; () banked
  1873  001714  518A               	movf	??___lwmod& (0+255),w,b
  1874  001716  D009               	goto	l4309
  1875  001718                     l4307:
  1876                           
  1877                           ; BSR set to: 1
  1878  001718  0101               	movlb	1	; () banked
  1879  00171A  0101               	movlb	1	; () banked
  1880  00171C  0101               	movlb	1	; () banked
  1881  00171E  90D8               	bcf	status,0,c
  1882  001720  3788               	rlcf	___lwmod@divisor& (0+255),f,b
  1883  001722  3789               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1884  001724  0101               	movlb	1	; () banked
  1885  001726  0101               	movlb	1	; () banked
  1886  001728  2B8B               	incf	___lwmod@counter& (0+255),f,b
  1887  00172A                     l4309:
  1888                           
  1889                           ; BSR set to: 1
  1890  00172A  0101               	movlb	1	; () banked
  1891  00172C  0101               	movlb	1	; () banked
  1892  00172E  AF89               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1893  001730  D7F3               	goto	l4307
  1894  001732                     l4311:
  1895                           
  1896                           ; BSR set to: 1
  1897  001732  0101               	movlb	1	; () banked
  1898  001734  0101               	movlb	1	; () banked
  1899  001736  5188               	movf	___lwmod@divisor& (0+255),w,b
  1900  001738  0101               	movlb	1	; () banked
  1901  00173A  0101               	movlb	1	; () banked
  1902  00173C  5D86               	subwf	___lwmod@dividend& (0+255),w,b
  1903  00173E  0101               	movlb	1	; () banked
  1904  001740  0101               	movlb	1	; () banked
  1905  001742  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1906  001744  0101               	movlb	1	; () banked
  1907  001746  0101               	movlb	1	; () banked
  1908  001748  5987               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1909  00174A  A0D8               	btfss	status,0,c
  1910  00174C  D00C               	goto	l4315
  1911                           
  1912                           ; BSR set to: 1
  1913  00174E  0101               	movlb	1	; () banked
  1914  001750  0101               	movlb	1	; () banked
  1915  001752  5188               	movf	___lwmod@divisor& (0+255),w,b
  1916  001754  0101               	movlb	1	; () banked
  1917  001756  0101               	movlb	1	; () banked
  1918  001758  5F86               	subwf	___lwmod@dividend& (0+255),f,b
  1919  00175A  0101               	movlb	1	; () banked
  1920  00175C  0101               	movlb	1	; () banked
  1921  00175E  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1922  001760  0101               	movlb	1	; () banked
  1923  001762  0101               	movlb	1	; () banked
  1924  001764  5B87               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1925  001766                     l4315:
  1926                           
  1927                           ; BSR set to: 1
  1928  001766  0101               	movlb	1	; () banked
  1929  001768  0101               	movlb	1	; () banked
  1930  00176A  0101               	movlb	1	; () banked
  1931  00176C  90D8               	bcf	status,0,c
  1932  00176E  3389               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1933  001770  3388               	rrcf	___lwmod@divisor& (0+255),f,b
  1934                           
  1935                           ; BSR set to: 1
  1936  001772  0101               	movlb	1	; () banked
  1937  001774  0101               	movlb	1	; () banked
  1938  001776  2F8B               	decfsz	___lwmod@counter& (0+255),f,b
  1939  001778  D7DC               	goto	l4311
  1940  00177A                     l1113:
  1941                           
  1942                           ; BSR set to: 1
  1943  00177A  C186  F186         	movff	___lwmod@dividend,?___lwmod
  1944  00177E  C187  F187         	movff	___lwmod@dividend+1,?___lwmod+1
  1945                           
  1946                           ; BSR set to: 1
  1947  001782  0012               	return	
  1948  001784                     __end_of___lwmod:
  1949                           	opt stack 0
  1950                           tblptru	equ	0xFF8
  1951                           tblptrh	equ	0xFF7
  1952                           tblptrl	equ	0xFF6
  1953                           tablat	equ	0xFF5
  1954                           prodh	equ	0xFF4
  1955                           prodl	equ	0xFF3
  1956                           postinc0	equ	0xFEE
  1957                           wreg	equ	0xFE8
  1958                           indf1	equ	0xFE7
  1959                           postdec1	equ	0xFE5
  1960                           fsr1h	equ	0xFE2
  1961                           fsr1l	equ	0xFE1
  1962                           indf2	equ	0xFDF
  1963                           postinc2	equ	0xFDE
  1964                           postdec2	equ	0xFDD
  1965                           fsr2h	equ	0xFDA
  1966                           fsr2l	equ	0xFD9
  1967                           status	equ	0xFD8
  1968                           
  1969 ;; *************** function _FromMainHigh_sendmsg *****************
  1970 ;; Defined at:
  1971 ;;		line 174 in file "../src/messages.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  length          1    wreg     unsigned char 
  1974 ;;  msgtype         1   22[BANK1 ] unsigned char 
  1975 ;;  data            2   23[BANK1 ] PTR void 
  1976 ;;		 -> main@t1thread_data(2), 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  length          1   25[BANK1 ] unsigned char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      char 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1988 ;;      Params:         0       0       3       0       0
  1989 ;;      Locals:         0       0       1       0       0
  1990 ;;      Temps:          0       0       0       0       0
  1991 ;;      Totals:         0       0       4       0       0
  1992 ;;Total ram usage:        4 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:   13
  1995 ;; This function calls:
  1996 ;;		_send_msg
  1997 ;; This function is called by:
  1998 ;;		_timer1_lthread
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text4
  2003  001E1A                     __ptext4:
  2004                           	opt stack 0
  2005  001E1A                     _FromMainHigh_sendmsg:
  2006                           	opt stack 15
  2007                           
  2008                           ; BSR set to: 1
  2009                           ;incstack = 0
  2010                           ;FromMainHigh_sendmsg@length stored from wreg
  2011  001E1A  CFE8 F19F          	movff	wreg,FromMainHigh_sendmsg@length
  2012                           
  2013                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2014  001E1E  0102               	movlb	2	; () banked
  2015  001E20  0E02               	movlw	high _FromMainHigh_MQ
  2016  001E22  0101               	movlb	1	; () banked
  2017  001E24  0101               	movlb	1	; () banked
  2018  001E26  6F91               	movwf	(send_msg@qptr+1)& (0+255),b
  2019  001E28  0102               	movlb	2	; () banked
  2020  001E2A  0E00               	movlw	low _FromMainHigh_MQ
  2021  001E2C  0101               	movlb	1	; () banked
  2022  001E2E  0101               	movlb	1	; () banked
  2023  001E30  6F90               	movwf	send_msg@qptr& (0+255),b
  2024  001E32  C19F  F192         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2025  001E36  C19C  F193         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2026  001E3A  0101               	movlb	1	; () banked
  2027  001E3C  0101               	movlb	1	; () banked
  2028  001E3E  C19E  F195         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2029  001E42  0101               	movlb	1	; () banked
  2030  001E44  0101               	movlb	1	; () banked
  2031  001E46  C19D  F194         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2032  001E4A  EC9C  F006         	call	_send_msg	;wreg free
  2033  001E4E  0012               	return	
  2034  001E50                     __end_of_FromMainHigh_sendmsg:
  2035                           	opt stack 0
  2036                           tblptru	equ	0xFF8
  2037                           tblptrh	equ	0xFF7
  2038                           tblptrl	equ	0xFF6
  2039                           tablat	equ	0xFF5
  2040                           prodh	equ	0xFF4
  2041                           prodl	equ	0xFF3
  2042                           postinc0	equ	0xFEE
  2043                           wreg	equ	0xFE8
  2044                           indf1	equ	0xFE7
  2045                           postdec1	equ	0xFE5
  2046                           fsr1h	equ	0xFE2
  2047                           fsr1l	equ	0xFE1
  2048                           indf2	equ	0xFDF
  2049                           postinc2	equ	0xFDE
  2050                           postdec2	equ	0xFDD
  2051                           fsr2h	equ	0xFDA
  2052                           fsr2l	equ	0xFD9
  2053                           status	equ	0xFD8
  2054                           
  2055 ;; *************** function _send_msg *****************
  2056 ;; Defined at:
  2057 ;;		line 24 in file "../src/messages.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2060 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2061 ;;  length          1   12[BANK1 ] unsigned char 
  2062 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2063 ;;  data            2   14[BANK1 ] PTR void 
  2064 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  2065 ;;		 -> main@uc(13), 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  2068 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  2069 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2070 ;;  tlength         2   17[BANK1 ] unsigned int 
  2071 ;;  slot            1   19[BANK1 ] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      char 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2081 ;;      Params:         0       0       6       0       0
  2082 ;;      Locals:         0       0       5       0       0
  2083 ;;      Temps:          0       0       1       0       0
  2084 ;;      Totals:         0       0      12       0       0
  2085 ;;Total ram usage:       12 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:   12
  2088 ;; This function calls:
  2089 ;;		___awmod
  2090 ;;		_memcpy
  2091 ;; This function is called by:
  2092 ;;		_FromMainHigh_sendmsg
  2093 ;;		_FromMainLow_sendmsg
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text5
  2098  000D38                     __ptext5:
  2099                           	opt stack 0
  2100  000D38                     _send_msg:
  2101                           	opt stack 15
  2102                           
  2103                           ;messages.c: 25: unsigned char slot;
  2104                           ;messages.c: 27: msg *qmsg;
  2105                           ;messages.c: 28: size_t tlength = length;
  2106                           
  2107                           ;incstack = 0
  2108  000D38  0101               	movlb	1	; () banked
  2109  000D3A  0101               	movlb	1	; () banked
  2110  000D3C  C192  F197         	movff	send_msg@length,send_msg@tlength
  2111  000D40  0101               	movlb	1	; () banked
  2112  000D42  0101               	movlb	1	; () banked
  2113  000D44  6B98               	clrf	(send_msg@tlength+1)& (0+255),b
  2114                           
  2115                           ; BSR set to: 1
  2116                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2117  000D46  0101               	movlb	1	; () banked
  2118  000D48  EE20 F041          	lfsr	2,65
  2119  000D4C  0101               	movlb	1	; () banked
  2120  000D4E  5190               	movf	send_msg@qptr& (0+255),w,b
  2121  000D50  26D9               	addwf	fsr2l,f,c
  2122  000D52  0101               	movlb	1	; () banked
  2123  000D54  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  2124  000D56  22DA               	addwfc	fsr2h,f,c
  2125  000D58  50DF               	movf	indf2,w,c
  2126  000D5A  0101               	movlb	1	; () banked
  2127  000D5C  0101               	movlb	1	; () banked
  2128  000D5E  6F99               	movwf	send_msg@slot& (0+255),b
  2129                           
  2130                           ; BSR set to: 1
  2131                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2132  000D60  0101               	movlb	1	; () banked
  2133  000D62  0101               	movlb	1	; () banked
  2134  000D64  5199               	movf	send_msg@slot& (0+255),w,b
  2135  000D66  0D0D               	mullw	13
  2136  000D68  50F3               	movf	prodl,w,c
  2137  000D6A  0101               	movlb	1	; () banked
  2138  000D6C  0101               	movlb	1	; () banked
  2139  000D6E  2590               	addwf	send_msg@qptr& (0+255),w,b
  2140  000D70  0101               	movlb	1	; () banked
  2141  000D72  0101               	movlb	1	; () banked
  2142  000D74  6F9A               	movwf	send_msg@qmsg& (0+255),b
  2143  000D76  50F4               	movf	prodh,w,c
  2144  000D78  0101               	movlb	1	; () banked
  2145  000D7A  0101               	movlb	1	; () banked
  2146  000D7C  2191               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2147  000D7E  0101               	movlb	1	; () banked
  2148  000D80  6F9B               	movwf	(send_msg@qmsg+1)& (0+255),b
  2149                           
  2150                           ; BSR set to: 1
  2151                           ;messages.c: 41: if (qmsg->full != 0) {
  2152  000D82  C19A  FFD9         	movff	send_msg@qmsg,fsr2l
  2153  000D86  C19B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2154  000D8A  50DF               	movf	indf2,w,c
  2155  000D8C  B4D8               	btfsc	status,2,c
  2156  000D8E  D002               	goto	l3959
  2157                           
  2158                           ; BSR set to: 1
  2159                           ;messages.c: 42: return (-1);
  2160  000D90  0EFF               	movlw	255
  2161  000D92  0012               	return	
  2162  000D94                     l3959:
  2163                           
  2164                           ; BSR set to: 1
  2165                           ;messages.c: 43: }
  2166                           ;messages.c: 46: qmsg->length = length;
  2167  000D94  0101               	movlb	1	; () banked
  2168  000D96  EE20 F001          	lfsr	2,1
  2169  000D9A  0101               	movlb	1	; () banked
  2170  000D9C  519A               	movf	send_msg@qmsg& (0+255),w,b
  2171  000D9E  26D9               	addwf	fsr2l,f,c
  2172  000DA0  0101               	movlb	1	; () banked
  2173  000DA2  519B               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2174  000DA4  22DA               	addwfc	fsr2h,f,c
  2175  000DA6  0101               	movlb	1	; () banked
  2176  000DA8  C192  FFDF         	movff	send_msg@length,indf2
  2177                           
  2178                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2179  000DAC  0101               	movlb	1	; () banked
  2180  000DAE  EE20 F002          	lfsr	2,2
  2181  000DB2  0101               	movlb	1	; () banked
  2182  000DB4  519A               	movf	send_msg@qmsg& (0+255),w,b
  2183  000DB6  26D9               	addwf	fsr2l,f,c
  2184  000DB8  0101               	movlb	1	; () banked
  2185  000DBA  519B               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2186  000DBC  22DA               	addwfc	fsr2h,f,c
  2187  000DBE  0101               	movlb	1	; () banked
  2188  000DC0  C193  FFDF         	movff	send_msg@msgtype,indf2
  2189                           
  2190                           ; BSR set to: 1
  2191                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2192  000DC4  0E03               	movlw	3
  2193  000DC6  0101               	movlb	1	; () banked
  2194  000DC8  0101               	movlb	1	; () banked
  2195  000DCA  259A               	addwf	send_msg@qmsg& (0+255),w,b
  2196  000DCC  0101               	movlb	1	; () banked
  2197  000DCE  0101               	movlb	1	; () banked
  2198  000DD0  6F86               	movwf	memcpy@d1& (0+255),b
  2199  000DD2  0E00               	movlw	0
  2200  000DD4  0101               	movlb	1	; () banked
  2201  000DD6  0101               	movlb	1	; () banked
  2202  000DD8  219B               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2203  000DDA  0101               	movlb	1	; () banked
  2204  000DDC  6F87               	movwf	(memcpy@d1+1)& (0+255),b
  2205  000DDE  0101               	movlb	1	; () banked
  2206  000DE0  0101               	movlb	1	; () banked
  2207  000DE2  C195  F189         	movff	send_msg@data+1,memcpy@s1+1
  2208  000DE6  0101               	movlb	1	; () banked
  2209  000DE8  0101               	movlb	1	; () banked
  2210  000DEA  C194  F188         	movff	send_msg@data,memcpy@s1
  2211  000DEE  C197  F18A         	movff	send_msg@tlength,memcpy@n
  2212  000DF2  C198  F18B         	movff	send_msg@tlength+1,memcpy@n+1
  2213  000DF6  ECCD  F00D         	call	_memcpy	;wreg free
  2214                           
  2215                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  2216  000DFA  0101               	movlb	1	; () banked
  2217  000DFC  EE20 F041          	lfsr	2,65
  2218  000E00  0101               	movlb	1	; () banked
  2219  000E02  5190               	movf	send_msg@qptr& (0+255),w,b
  2220  000E04  26D9               	addwf	fsr2l,f,c
  2221  000E06  0101               	movlb	1	; () banked
  2222  000E08  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  2223  000E0A  22DA               	addwfc	fsr2h,f,c
  2224  000E0C  0101               	movlb	1	; () banked
  2225  000E0E  EE10 F041          	lfsr	1,65
  2226  000E12  0101               	movlb	1	; () banked
  2227  000E14  5190               	movf	send_msg@qptr& (0+255),w,b
  2228  000E16  26E1               	addwf	fsr1l,f,c
  2229  000E18  0101               	movlb	1	; () banked
  2230  000E1A  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  2231  000E1C  22E2               	addwfc	fsr1h,f,c
  2232  000E1E  50E7               	movf	indf1,w,c
  2233  000E20  0101               	movlb	1	; () banked
  2234  000E22  6F96               	movwf	??_send_msg& (0+255),b
  2235  000E24  0E01               	movlw	1
  2236  000E26  0101               	movlb	1	; () banked
  2237  000E28  2596               	addwf	??_send_msg& (0+255),w,b
  2238  000E2A  0101               	movlb	1	; () banked
  2239  000E2C  0101               	movlb	1	; () banked
  2240  000E2E  6F86               	movwf	___awmod@dividend& (0+255),b
  2241  000E30  0101               	movlb	1	; () banked
  2242  000E32  0101               	movlb	1	; () banked
  2243  000E34  6B87               	clrf	(___awmod@dividend+1)& (0+255),b
  2244  000E36  0E00               	movlw	0
  2245  000E38  2387               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  2246  000E3A  0E00               	movlw	0
  2247  000E3C  0101               	movlb	1	; () banked
  2248  000E3E  0101               	movlb	1	; () banked
  2249  000E40  6F89               	movwf	(___awmod@divisor+1)& (0+255),b
  2250  000E42  0E05               	movlw	5
  2251  000E44  0101               	movlb	1	; () banked
  2252  000E46  6F88               	movwf	___awmod@divisor& (0+255),b
  2253  000E48  ECBF  F007         	call	___awmod	;wreg free
  2254  000E4C  0101               	movlb	1	; () banked
  2255  000E4E  0101               	movlb	1	; () banked
  2256  000E50  5186               	movf	?___awmod& (0+255),w,b
  2257  000E52  6EDF               	movwf	indf2,c
  2258                           
  2259                           ; BSR set to: 1
  2260                           ;messages.c: 59: qmsg->full = 1;
  2261  000E54  C19A  FFD9         	movff	send_msg@qmsg,fsr2l
  2262  000E58  C19B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2263  000E5C  0E01               	movlw	1
  2264  000E5E  6EDF               	movwf	indf2,c
  2265                           
  2266                           ; BSR set to: 1
  2267                           ;messages.c: 60: return (1);
  2268  000E60  0E01               	movlw	1
  2269  000E62  0012               	return	
  2270  000E64                     __end_of_send_msg:
  2271                           	opt stack 0
  2272                           tblptru	equ	0xFF8
  2273                           tblptrh	equ	0xFF7
  2274                           tblptrl	equ	0xFF6
  2275                           tablat	equ	0xFF5
  2276                           prodh	equ	0xFF4
  2277                           prodl	equ	0xFF3
  2278                           postinc0	equ	0xFEE
  2279                           wreg	equ	0xFE8
  2280                           indf1	equ	0xFE7
  2281                           postdec1	equ	0xFE5
  2282                           fsr1h	equ	0xFE2
  2283                           fsr1l	equ	0xFE1
  2284                           indf2	equ	0xFDF
  2285                           postinc2	equ	0xFDE
  2286                           postdec2	equ	0xFDD
  2287                           fsr2h	equ	0xFDA
  2288                           fsr2l	equ	0xFD9
  2289                           status	equ	0xFD8
  2290                           
  2291 ;; *************** function _timer0_lthread *****************
  2292 ;; Defined at:
  2293 ;;		line 9 in file "../src/timer0_thread.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2296 ;;		 -> main@t0thread_data(2), 
  2297 ;;  msgtype         2    2[BANK1 ] int 
  2298 ;;  length          2    4[BANK1 ] int 
  2299 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2300 ;;		 -> main@msgbuffer(11), 
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2303 ;;		 -> main@msgbuffer(11), 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  2    0[BANK1 ] int 
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2313 ;;      Params:         0       0       8       0       0
  2314 ;;      Locals:         0       0       2       0       0
  2315 ;;      Temps:          0       0       0       0       0
  2316 ;;      Totals:         0       0      10       0       0
  2317 ;;Total ram usage:       10 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:   11
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_main
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text6
  2328  00201A                     __ptext6:
  2329                           	opt stack 0
  2330  00201A                     _timer0_lthread:
  2331                           	opt stack 18
  2332                           
  2333                           ;timer0_thread.c: 10: unsigned int *msgval;
  2334                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2335                           
  2336                           ; BSR set to: 1
  2337                           ;incstack = 0
  2338  00201A  0101               	movlb	1	; () banked
  2339  00201C  0101               	movlb	1	; () banked
  2340  00201E  C18D  F18F         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2341  002022  0101               	movlb	1	; () banked
  2342  002024  0101               	movlb	1	; () banked
  2343  002026  C18C  F18E         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2344                           
  2345                           ; BSR set to: 1
  2346  00202A  0012               	return	
  2347  00202C                     __end_of_timer0_lthread:
  2348                           	opt stack 0
  2349                           tblptru	equ	0xFF8
  2350                           tblptrh	equ	0xFF7
  2351                           tblptrl	equ	0xFF6
  2352                           tablat	equ	0xFF5
  2353                           prodh	equ	0xFF4
  2354                           prodl	equ	0xFF3
  2355                           postinc0	equ	0xFEE
  2356                           wreg	equ	0xFE8
  2357                           indf1	equ	0xFE7
  2358                           postdec1	equ	0xFE5
  2359                           fsr1h	equ	0xFE2
  2360                           fsr1l	equ	0xFE1
  2361                           indf2	equ	0xFDF
  2362                           postinc2	equ	0xFDE
  2363                           postdec2	equ	0xFDD
  2364                           fsr2h	equ	0xFDA
  2365                           fsr2l	equ	0xFD9
  2366                           status	equ	0xFD8
  2367                           
  2368 ;; *************** function _init_uart_recv *****************
  2369 ;; Defined at:
  2370 ;;		line 54 in file "../src/my_uart.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2373 ;;		 -> main@uc(13), 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;		None               void
  2378 ;; Registers used:
  2379 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2385 ;;      Params:         0       0       2       0       0
  2386 ;;      Locals:         0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0
  2388 ;;      Totals:         0       0       2       0       0
  2389 ;;Total ram usage:        2 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:   11
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_main
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text7
  2400  001FC8                     __ptext7:
  2401                           	opt stack 0
  2402  001FC8                     _init_uart_recv:
  2403                           	opt stack 18
  2404                           
  2405                           ;my_uart.c: 57: uc_ptr = uc;
  2406                           
  2407                           ; BSR set to: 1
  2408                           ;incstack = 0
  2409  001FC8  0101               	movlb	1	; () banked
  2410  001FCA  C187  F053         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2411  001FCE  0101               	movlb	1	; () banked
  2412  001FD0  C186  F052         	movff	init_uart_recv@uc,_uc_ptr
  2413                           
  2414                           ; BSR set to: 1
  2415                           ;my_uart.c: 58: uc_ptr->buflen = 0;
  2416  001FD4  EE20 F005          	lfsr	2,5
  2417  001FD8  5052               	movf	_uc_ptr,w,c
  2418  001FDA  26D9               	addwf	fsr2l,f,c
  2419  001FDC  5053               	movf	_uc_ptr+1,w,c
  2420  001FDE  22DA               	addwfc	fsr2h,f,c
  2421  001FE0  0E00               	movlw	0
  2422  001FE2  6EDF               	movwf	indf2,c
  2423                           
  2424                           ; BSR set to: 1
  2425  001FE4  0012               	return	
  2426  001FE6                     __end_of_init_uart_recv:
  2427                           	opt stack 0
  2428                           tblptru	equ	0xFF8
  2429                           tblptrh	equ	0xFF7
  2430                           tblptrl	equ	0xFF6
  2431                           tablat	equ	0xFF5
  2432                           prodh	equ	0xFF4
  2433                           prodl	equ	0xFF3
  2434                           postinc0	equ	0xFEE
  2435                           wreg	equ	0xFE8
  2436                           indf1	equ	0xFE7
  2437                           postdec1	equ	0xFE5
  2438                           fsr1h	equ	0xFE2
  2439                           fsr1l	equ	0xFE1
  2440                           indf2	equ	0xFDF
  2441                           postinc2	equ	0xFDE
  2442                           postdec2	equ	0xFDD
  2443                           fsr2h	equ	0xFDA
  2444                           fsr2l	equ	0xFD9
  2445                           status	equ	0xFD8
  2446                           
  2447 ;; *************** function _init_timer1_lthread *****************
  2448 ;; Defined at:
  2449 ;;		line 6 in file "../src/timer1_thread.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2452 ;;		 -> main@t1thread_data(2), 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;		None               void
  2457 ;; Registers used:
  2458 ;;		wreg, fsr2l, fsr2h
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2464 ;;      Params:         0       0       2       0       0
  2465 ;;      Locals:         0       0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0
  2467 ;;      Totals:         0       0       2       0       0
  2468 ;;Total ram usage:        2 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:   11
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_main
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text8
  2479  00202C                     __ptext8:
  2480                           	opt stack 0
  2481  00202C                     _init_timer1_lthread:
  2482                           	opt stack 18
  2483                           
  2484                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2485                           
  2486                           ; BSR set to: 1
  2487                           ;incstack = 0
  2488  00202C  C186  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2489  002030  C187  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2490  002034  0E00               	movlw	0
  2491  002036  6EDE               	movwf	postinc2,c
  2492  002038  0E00               	movlw	0
  2493  00203A  6EDD               	movwf	postdec2,c
  2494  00203C  0012               	return	
  2495  00203E                     __end_of_init_timer1_lthread:
  2496                           	opt stack 0
  2497                           tblptru	equ	0xFF8
  2498                           tblptrh	equ	0xFF7
  2499                           tblptrl	equ	0xFF6
  2500                           tablat	equ	0xFF5
  2501                           prodh	equ	0xFF4
  2502                           prodl	equ	0xFF3
  2503                           postinc0	equ	0xFEE
  2504                           wreg	equ	0xFE8
  2505                           indf1	equ	0xFE7
  2506                           postdec1	equ	0xFE5
  2507                           fsr1h	equ	0xFE2
  2508                           fsr1l	equ	0xFE1
  2509                           indf2	equ	0xFDF
  2510                           postinc2	equ	0xFDE
  2511                           postdec2	equ	0xFDD
  2512                           fsr2h	equ	0xFDA
  2513                           fsr2l	equ	0xFD9
  2514                           status	equ	0xFD8
  2515                           
  2516 ;; *************** function _init_queues *****************
  2517 ;; Defined at:
  2518 ;;		line 194 in file "../src/messages.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;		None               void
  2525 ;; Registers used:
  2526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2532 ;;      Params:         0       0       0       0       0
  2533 ;;      Locals:         0       0       0       0       0
  2534 ;;      Temps:          0       0       1       0       0
  2535 ;;      Totals:         0       0       1       0       0
  2536 ;;Total ram usage:        1 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:   12
  2539 ;; This function calls:
  2540 ;;		_init_queue
  2541 ;; This function is called by:
  2542 ;;		_main
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           	psect	text9
  2547  0019F4                     __ptext9:
  2548                           	opt stack 0
  2549  0019F4                     _init_queues:
  2550                           	opt stack 17
  2551                           
  2552                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2553                           
  2554                           ;incstack = 0
  2555  0019F4  0101               	movlb	1	; () banked
  2556  0019F6  6F8A               	movwf	??_init_queues& (0+255),b
  2557  0019F8  0E00               	movlw	0
  2558  0019FA  6E50               	movwf	_MQ_Main_Willing_to_block,c
  2559  0019FC  0101               	movlb	1	; () banked
  2560  0019FE  518A               	movf	??_init_queues& (0+255),w,b
  2561                           
  2562                           ; BSR set to: 1
  2563                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2564  001A00  0101               	movlb	1	; () banked
  2565  001A02  0E01               	movlw	high _ToMainLow_MQ
  2566  001A04  0101               	movlb	1	; () banked
  2567  001A06  0101               	movlb	1	; () banked
  2568  001A08  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2569  001A0A  0101               	movlb	1	; () banked
  2570  001A0C  0E43               	movlw	low _ToMainLow_MQ
  2571  001A0E  0101               	movlb	1	; () banked
  2572  001A10  0101               	movlb	1	; () banked
  2573  001A12  6F86               	movwf	init_queue@qptr& (0+255),b
  2574  001A14  EC84  F00C         	call	_init_queue	;wreg free
  2575                           
  2576                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2577  001A18  0101               	movlb	1	; () banked
  2578  001A1A  0E01               	movlw	high _ToMainHigh_MQ
  2579  001A1C  0101               	movlb	1	; () banked
  2580  001A1E  0101               	movlb	1	; () banked
  2581  001A20  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2582  001A22  0101               	movlb	1	; () banked
  2583  001A24  0E00               	movlw	low _ToMainHigh_MQ
  2584  001A26  0101               	movlb	1	; () banked
  2585  001A28  0101               	movlb	1	; () banked
  2586  001A2A  6F86               	movwf	init_queue@qptr& (0+255),b
  2587  001A2C  EC84  F00C         	call	_init_queue	;wreg free
  2588                           
  2589                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2590  001A30  0102               	movlb	2	; () banked
  2591  001A32  0E02               	movlw	high _FromMainLow_MQ
  2592  001A34  0101               	movlb	1	; () banked
  2593  001A36  0101               	movlb	1	; () banked
  2594  001A38  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2595  001A3A  0102               	movlb	2	; () banked
  2596  001A3C  0E43               	movlw	low _FromMainLow_MQ
  2597  001A3E  0101               	movlb	1	; () banked
  2598  001A40  0101               	movlb	1	; () banked
  2599  001A42  6F86               	movwf	init_queue@qptr& (0+255),b
  2600  001A44  EC84  F00C         	call	_init_queue	;wreg free
  2601                           
  2602                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2603  001A48  0102               	movlb	2	; () banked
  2604  001A4A  0E02               	movlw	high _FromMainHigh_MQ
  2605  001A4C  0101               	movlb	1	; () banked
  2606  001A4E  0101               	movlb	1	; () banked
  2607  001A50  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2608  001A52  0102               	movlb	2	; () banked
  2609  001A54  0E00               	movlw	low _FromMainHigh_MQ
  2610  001A56  0101               	movlb	1	; () banked
  2611  001A58  0101               	movlb	1	; () banked
  2612  001A5A  6F86               	movwf	init_queue@qptr& (0+255),b
  2613  001A5C  EC84  F00C         	call	_init_queue	;wreg free
  2614  001A60  0012               	return	
  2615  001A62                     __end_of_init_queues:
  2616                           	opt stack 0
  2617                           tblptru	equ	0xFF8
  2618                           tblptrh	equ	0xFF7
  2619                           tblptrl	equ	0xFF6
  2620                           tablat	equ	0xFF5
  2621                           prodh	equ	0xFF4
  2622                           prodl	equ	0xFF3
  2623                           postinc0	equ	0xFEE
  2624                           wreg	equ	0xFE8
  2625                           indf1	equ	0xFE7
  2626                           postdec1	equ	0xFE5
  2627                           fsr1h	equ	0xFE2
  2628                           fsr1l	equ	0xFE1
  2629                           indf2	equ	0xFDF
  2630                           postinc2	equ	0xFDE
  2631                           postdec2	equ	0xFDD
  2632                           fsr2h	equ	0xFDA
  2633                           fsr2l	equ	0xFD9
  2634                           status	equ	0xFD8
  2635                           
  2636 ;; *************** function _init_queue *****************
  2637 ;; Defined at:
  2638 ;;		line 14 in file "../src/messages.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2641 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  i               1    3[BANK1 ] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;		None               void
  2646 ;; Registers used:
  2647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2653 ;;      Params:         0       0       2       0       0
  2654 ;;      Locals:         0       0       1       0       0
  2655 ;;      Temps:          0       0       1       0       0
  2656 ;;      Totals:         0       0       4       0       0
  2657 ;;Total ram usage:        4 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; Hardware stack levels required when called:   11
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_init_queues
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text10
  2668  001908                     __ptext10:
  2669                           	opt stack 0
  2670  001908                     _init_queue:
  2671                           	opt stack 17
  2672                           
  2673                           ;messages.c: 15: unsigned char i;
  2674                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2675                           
  2676                           ;incstack = 0
  2677  001908  0101               	movlb	1	; () banked
  2678  00190A  EE20 F041          	lfsr	2,65
  2679  00190E  0101               	movlb	1	; () banked
  2680  001910  5186               	movf	init_queue@qptr& (0+255),w,b
  2681  001912  26D9               	addwf	fsr2l,f,c
  2682  001914  0101               	movlb	1	; () banked
  2683  001916  5187               	movf	(init_queue@qptr+1)& (0+255),w,b
  2684  001918  22DA               	addwfc	fsr2h,f,c
  2685  00191A  0E00               	movlw	0
  2686  00191C  6EDF               	movwf	indf2,c
  2687                           
  2688                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2689  00191E  0101               	movlb	1	; () banked
  2690  001920  EE20 F042          	lfsr	2,66
  2691  001924  0101               	movlb	1	; () banked
  2692  001926  5186               	movf	init_queue@qptr& (0+255),w,b
  2693  001928  26D9               	addwf	fsr2l,f,c
  2694  00192A  0101               	movlb	1	; () banked
  2695  00192C  5187               	movf	(init_queue@qptr+1)& (0+255),w,b
  2696  00192E  22DA               	addwfc	fsr2h,f,c
  2697  001930  0E00               	movlw	0
  2698  001932  6EDF               	movwf	indf2,c
  2699                           
  2700                           ; BSR set to: 1
  2701                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2702  001934  0101               	movlb	1	; () banked
  2703  001936  6F88               	movwf	??_init_queue& (0+255),b
  2704  001938  0E00               	movlw	0
  2705  00193A  0101               	movlb	1	; () banked
  2706  00193C  0101               	movlb	1	; () banked
  2707  00193E  6F89               	movwf	init_queue@i& (0+255),b
  2708  001940  0101               	movlb	1	; () banked
  2709  001942  5188               	movf	??_init_queue& (0+255),w,b
  2710                           
  2711                           ; BSR set to: 1
  2712  001944  0E04               	movlw	4
  2713  001946  0101               	movlb	1	; () banked
  2714  001948  0101               	movlb	1	; () banked
  2715  00194A  6589               	cpfsgt	init_queue@i& (0+255),b
  2716  00194C  D001               	goto	l3941
  2717  00194E  0012               	return	
  2718  001950                     l3941:
  2719                           
  2720                           ; BSR set to: 1
  2721                           ;messages.c: 20: qptr->queue[i].full = 0;
  2722  001950  0101               	movlb	1	; () banked
  2723  001952  0101               	movlb	1	; () banked
  2724  001954  5189               	movf	init_queue@i& (0+255),w,b
  2725  001956  0D0D               	mullw	13
  2726  001958  50F3               	movf	prodl,w,c
  2727  00195A  0101               	movlb	1	; () banked
  2728  00195C  0101               	movlb	1	; () banked
  2729  00195E  2586               	addwf	init_queue@qptr& (0+255),w,b
  2730  001960  6ED9               	movwf	fsr2l,c
  2731  001962  50F4               	movf	prodh,w,c
  2732  001964  0101               	movlb	1	; () banked
  2733  001966  0101               	movlb	1	; () banked
  2734  001968  2187               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2735  00196A  6EDA               	movwf	fsr2h,c
  2736  00196C  0E00               	movlw	0
  2737  00196E  6EDF               	movwf	indf2,c
  2738                           
  2739                           ; BSR set to: 1
  2740  001970  0101               	movlb	1	; () banked
  2741  001972  0101               	movlb	1	; () banked
  2742  001974  2B89               	incf	init_queue@i& (0+255),f,b
  2743                           
  2744                           ; BSR set to: 1
  2745  001976  0E04               	movlw	4
  2746  001978  0101               	movlb	1	; () banked
  2747  00197A  0101               	movlb	1	; () banked
  2748  00197C  6589               	cpfsgt	init_queue@i& (0+255),b
  2749  00197E  D7E8               	goto	l3941
  2750  001980  0012               	return	
  2751  001982                     __end_of_init_queue:
  2752                           	opt stack 0
  2753                           tblptru	equ	0xFF8
  2754                           tblptrh	equ	0xFF7
  2755                           tblptrl	equ	0xFF6
  2756                           tablat	equ	0xFF5
  2757                           prodh	equ	0xFF4
  2758                           prodl	equ	0xFF3
  2759                           postinc0	equ	0xFEE
  2760                           wreg	equ	0xFE8
  2761                           indf1	equ	0xFE7
  2762                           postdec1	equ	0xFE5
  2763                           fsr1h	equ	0xFE2
  2764                           fsr1l	equ	0xFE1
  2765                           indf2	equ	0xFDF
  2766                           postinc2	equ	0xFDE
  2767                           postdec2	equ	0xFDD
  2768                           fsr2h	equ	0xFDA
  2769                           fsr2l	equ	0xFD9
  2770                           status	equ	0xFD8
  2771                           
  2772 ;; *************** function _init_i2c *****************
  2773 ;; Defined at:
  2774 ;;		line 433 in file "../src/my_i2c.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  2777 ;;		 -> main@ic(29), 
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;		None
  2780 ;; Return value:  Size  Location     Type
  2781 ;;		None               void
  2782 ;; Registers used:
  2783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2789 ;;      Params:         0       0       2       0       0
  2790 ;;      Locals:         0       0       0       0       0
  2791 ;;      Temps:          0       0       0       0       0
  2792 ;;      Totals:         0       0       2       0       0
  2793 ;;Total ram usage:        2 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; Hardware stack levels required when called:   11
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_main
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text11
  2804  001A62                     __ptext11:
  2805                           	opt stack 0
  2806  001A62                     _init_i2c:
  2807                           	opt stack 18
  2808                           
  2809                           ;my_i2c.c: 434: ic_ptr = ic;
  2810                           
  2811                           ; BSR set to: 1
  2812                           ;incstack = 0
  2813  001A62  0101               	movlb	1	; () banked
  2814  001A64  0100               	movlb	0	; () banked
  2815  001A66  C187  F0CA         	movff	init_i2c@ic+1,_ic_ptr+1
  2816  001A6A  0101               	movlb	1	; () banked
  2817  001A6C  0100               	movlb	0	; () banked
  2818  001A6E  C186  F0C9         	movff	init_i2c@ic,_ic_ptr
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;my_i2c.c: 435: ic_ptr->buflen = 0;
  2822  001A72  0100               	movlb	0	; () banked
  2823  001A74  EE20 F00A          	lfsr	2,10
  2824  001A78  0100               	movlb	0	; () banked
  2825  001A7A  51C9               	movf	_ic_ptr& (0+255),w,b
  2826  001A7C  26D9               	addwf	fsr2l,f,c
  2827  001A7E  0100               	movlb	0	; () banked
  2828  001A80  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  2829  001A82  22DA               	addwfc	fsr2h,f,c
  2830  001A84  0E00               	movlw	0
  2831  001A86  6EDF               	movwf	indf2,c
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;my_i2c.c: 436: ic_ptr->event_count = 0;
  2835  001A88  0100               	movlb	0	; () banked
  2836  001A8A  EE20 F00C          	lfsr	2,12
  2837  001A8E  0100               	movlb	0	; () banked
  2838  001A90  51C9               	movf	_ic_ptr& (0+255),w,b
  2839  001A92  26D9               	addwf	fsr2l,f,c
  2840  001A94  0100               	movlb	0	; () banked
  2841  001A96  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  2842  001A98  22DA               	addwfc	fsr2h,f,c
  2843  001A9A  0E00               	movlw	0
  2844  001A9C  6EDF               	movwf	indf2,c
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;my_i2c.c: 437: ic_ptr->status = 0x5;
  2848  001A9E  0100               	movlb	0	; () banked
  2849  001AA0  EE20 F00D          	lfsr	2,13
  2850  001AA4  0100               	movlb	0	; () banked
  2851  001AA6  51C9               	movf	_ic_ptr& (0+255),w,b
  2852  001AA8  26D9               	addwf	fsr2l,f,c
  2853  001AAA  0100               	movlb	0	; () banked
  2854  001AAC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  2855  001AAE  22DA               	addwfc	fsr2h,f,c
  2856  001AB0  0E05               	movlw	5
  2857  001AB2  6EDF               	movwf	indf2,c
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;my_i2c.c: 438: ic_ptr->error_count = 0;
  2861  001AB4  0100               	movlb	0	; () banked
  2862  001AB6  EE20 F00F          	lfsr	2,15
  2863  001ABA  0100               	movlb	0	; () banked
  2864  001ABC  51C9               	movf	_ic_ptr& (0+255),w,b
  2865  001ABE  26D9               	addwf	fsr2l,f,c
  2866  001AC0  0100               	movlb	0	; () banked
  2867  001AC2  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  2868  001AC4  22DA               	addwfc	fsr2h,f,c
  2869  001AC6  0E00               	movlw	0
  2870  001AC8  6EDF               	movwf	indf2,c
  2871                           
  2872                           ; BSR set to: 0
  2873  001ACA  0012               	return	
  2874  001ACC                     __end_of_init_i2c:
  2875                           	opt stack 0
  2876                           tblptru	equ	0xFF8
  2877                           tblptrh	equ	0xFF7
  2878                           tblptrl	equ	0xFF6
  2879                           tablat	equ	0xFF5
  2880                           prodh	equ	0xFF4
  2881                           prodl	equ	0xFF3
  2882                           postinc0	equ	0xFEE
  2883                           wreg	equ	0xFE8
  2884                           indf1	equ	0xFE7
  2885                           postdec1	equ	0xFE5
  2886                           fsr1h	equ	0xFE2
  2887                           fsr1l	equ	0xFE1
  2888                           indf2	equ	0xFDF
  2889                           postinc2	equ	0xFDE
  2890                           postdec2	equ	0xFDD
  2891                           fsr2h	equ	0xFDA
  2892                           fsr2l	equ	0xFD9
  2893                           status	equ	0xFD8
  2894                           
  2895 ;; *************** function _i2c_master_send *****************
  2896 ;; Defined at:
  2897 ;;		line 44 in file "../src/my_i2c.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  sendlength      1    wreg     unsigned char 
  2900 ;;  recvlength      1    0[BANK1 ] unsigned char 
  2901 ;;  msg             2    1[BANK1 ] PTR unsigned char 
  2902 ;;		 -> main@msgbuffer(11), 
  2903 ;;  slave_addr      1    3[BANK1 ] unsigned char 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  sendlength      1    6[BANK1 ] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      unsigned char 
  2908 ;; Registers used:
  2909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2915 ;;      Params:         0       0       4       0       0
  2916 ;;      Locals:         0       0       1       0       0
  2917 ;;      Temps:          0       0       2       0       0
  2918 ;;      Totals:         0       0       7       0       0
  2919 ;;Total ram usage:        7 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:   11
  2922 ;; This function calls:
  2923 ;;		Nothing
  2924 ;; This function is called by:
  2925 ;;		_main
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text12
  2930  000BFA                     __ptext12:
  2931                           	opt stack 0
  2932  000BFA                     _i2c_master_send:
  2933                           	opt stack 18
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;incstack = 0
  2937                           ;i2c_master_send@sendlength stored from wreg
  2938  000BFA  CFE8 F18C          	movff	wreg,i2c_master_send@sendlength
  2939                           
  2940                           ;my_i2c.c: 46: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < sendlength; ic_ptr->outbu
      +                          flen++) {
  2941  000BFE  0100               	movlb	0	; () banked
  2942  000C00  EE20 F01A          	lfsr	2,26
  2943  000C04  0100               	movlb	0	; () banked
  2944  000C06  51C9               	movf	_ic_ptr& (0+255),w,b
  2945  000C08  26D9               	addwf	fsr2l,f,c
  2946  000C0A  0100               	movlb	0	; () banked
  2947  000C0C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  2948  000C0E  22DA               	addwfc	fsr2h,f,c
  2949  000C10  0E00               	movlw	0
  2950  000C12  6EDF               	movwf	indf2,c
  2951  000C14  D042               	goto	l3925
  2952  000C16                     l3921:
  2953                           
  2954                           ;my_i2c.c: 47: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2955  000C16  0100               	movlb	0	; () banked
  2956  000C18  EE20 F01A          	lfsr	2,26
  2957  000C1C  0100               	movlb	0	; () banked
  2958  000C1E  51C9               	movf	_ic_ptr& (0+255),w,b
  2959  000C20  26D9               	addwf	fsr2l,f,c
  2960  000C22  0100               	movlb	0	; () banked
  2961  000C24  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  2962  000C26  22DA               	addwfc	fsr2h,f,c
  2963  000C28  50DF               	movf	indf2,w,c
  2964  000C2A  0101               	movlb	1	; () banked
  2965  000C2C  6F8A               	movwf	??_i2c_master_send& (0+255),b
  2966  000C2E  0101               	movlb	1	; () banked
  2967  000C30  518A               	movf	??_i2c_master_send& (0+255),w,b
  2968  000C32  0D01               	mullw	1
  2969  000C34  50F3               	movf	prodl,w,c
  2970  000C36  0101               	movlb	1	; () banked
  2971  000C38  0101               	movlb	1	; () banked
  2972  000C3A  2587               	addwf	i2c_master_send@msg& (0+255),w,b
  2973  000C3C  6ED9               	movwf	fsr2l,c
  2974  000C3E  50F4               	movf	prodh,w,c
  2975  000C40  0101               	movlb	1	; () banked
  2976  000C42  0101               	movlb	1	; () banked
  2977  000C44  2188               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  2978  000C46  6EDA               	movwf	fsr2h,c
  2979  000C48  0100               	movlb	0	; () banked
  2980  000C4A  EE10 F01A          	lfsr	1,26
  2981  000C4E  0100               	movlb	0	; () banked
  2982  000C50  51C9               	movf	_ic_ptr& (0+255),w,b
  2983  000C52  26E1               	addwf	fsr1l,f,c
  2984  000C54  0100               	movlb	0	; () banked
  2985  000C56  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  2986  000C58  22E2               	addwfc	fsr1h,f,c
  2987  000C5A  50E7               	movf	indf1,w,c
  2988  000C5C  0101               	movlb	1	; () banked
  2989  000C5E  6F8B               	movwf	(??_i2c_master_send+1)& (0+255),b
  2990  000C60  0101               	movlb	1	; () banked
  2991  000C62  518B               	movf	(??_i2c_master_send+1)& (0+255),w,b
  2992  000C64  0D01               	mullw	1
  2993  000C66  0E10               	movlw	16
  2994  000C68  26F3               	addwf	prodl,f,c
  2995  000C6A  0E00               	movlw	0
  2996  000C6C  22F4               	addwfc	prodh,f,c
  2997  000C6E  50F3               	movf	prodl,w,c
  2998  000C70  0100               	movlb	0	; () banked
  2999  000C72  0100               	movlb	0	; () banked
  3000  000C74  25C9               	addwf	_ic_ptr& (0+255),w,b
  3001  000C76  6EE1               	movwf	fsr1l,c
  3002  000C78  50F4               	movf	prodh,w,c
  3003  000C7A  0100               	movlb	0	; () banked
  3004  000C7C  0100               	movlb	0	; () banked
  3005  000C7E  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3006  000C80  6EE2               	movwf	fsr1h,c
  3007  000C82  CFDF FFE7          	movff	indf2,indf1
  3008                           
  3009                           ; BSR set to: 0
  3010  000C86  0100               	movlb	0	; () banked
  3011  000C88  EE20 F01A          	lfsr	2,26
  3012  000C8C  0100               	movlb	0	; () banked
  3013  000C8E  51C9               	movf	_ic_ptr& (0+255),w,b
  3014  000C90  26D9               	addwf	fsr2l,f,c
  3015  000C92  0100               	movlb	0	; () banked
  3016  000C94  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3017  000C96  22DA               	addwfc	fsr2h,f,c
  3018  000C98  2ADF               	incf	indf2,f,c
  3019  000C9A                     l3925:
  3020                           
  3021                           ; BSR set to: 0
  3022  000C9A  0100               	movlb	0	; () banked
  3023  000C9C  EE20 F01A          	lfsr	2,26
  3024  000CA0  0100               	movlb	0	; () banked
  3025  000CA2  51C9               	movf	_ic_ptr& (0+255),w,b
  3026  000CA4  26D9               	addwf	fsr2l,f,c
  3027  000CA6  0100               	movlb	0	; () banked
  3028  000CA8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3029  000CAA  22DA               	addwfc	fsr2h,f,c
  3030  000CAC  50DF               	movf	indf2,w,c
  3031  000CAE  0101               	movlb	1	; () banked
  3032  000CB0  6F8A               	movwf	??_i2c_master_send& (0+255),b
  3033  000CB2  0101               	movlb	1	; () banked
  3034  000CB4  0101               	movlb	1	; () banked
  3035  000CB6  518C               	movf	i2c_master_send@sendlength& (0+255),w,b
  3036  000CB8  0101               	movlb	1	; () banked
  3037  000CBA  5D8A               	subwf	??_i2c_master_send& (0+255),w,b
  3038  000CBC  A0D8               	btfss	status,0,c
  3039  000CBE  D7AB               	goto	l3921
  3040                           
  3041                           ; BSR set to: 1
  3042                           ;my_i2c.c: 48: }
  3043                           ;my_i2c.c: 50: ic_ptr->slave_addr = slave_addr;
  3044                           
  3045                           ; BSR set to: 1
  3046  000CC0  0100               	movlb	0	; () banked
  3047  000CC2  EE20 F01C          	lfsr	2,28
  3048  000CC6  0100               	movlb	0	; () banked
  3049  000CC8  51C9               	movf	_ic_ptr& (0+255),w,b
  3050  000CCA  26D9               	addwf	fsr2l,f,c
  3051  000CCC  0100               	movlb	0	; () banked
  3052  000CCE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3053  000CD0  22DA               	addwfc	fsr2h,f,c
  3054  000CD2  0101               	movlb	1	; () banked
  3055  000CD4  C189  FFDF         	movff	i2c_master_send@slave_addr,indf2
  3056                           
  3057                           ;my_i2c.c: 51: ic_ptr->outbuflen = sendlength;
  3058  000CD8  0100               	movlb	0	; () banked
  3059  000CDA  EE20 F01A          	lfsr	2,26
  3060  000CDE  0100               	movlb	0	; () banked
  3061  000CE0  51C9               	movf	_ic_ptr& (0+255),w,b
  3062  000CE2  26D9               	addwf	fsr2l,f,c
  3063  000CE4  0100               	movlb	0	; () banked
  3064  000CE6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3065  000CE8  22DA               	addwfc	fsr2h,f,c
  3066  000CEA  0101               	movlb	1	; () banked
  3067  000CEC  C18C  FFDF         	movff	i2c_master_send@sendlength,indf2
  3068                           
  3069                           ;my_i2c.c: 52: ic_ptr->buflen = recvlength;
  3070  000CF0  0100               	movlb	0	; () banked
  3071  000CF2  EE20 F00A          	lfsr	2,10
  3072  000CF6  0100               	movlb	0	; () banked
  3073  000CF8  51C9               	movf	_ic_ptr& (0+255),w,b
  3074  000CFA  26D9               	addwf	fsr2l,f,c
  3075  000CFC  0100               	movlb	0	; () banked
  3076  000CFE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3077  000D00  22DA               	addwfc	fsr2h,f,c
  3078  000D02  0101               	movlb	1	; () banked
  3079  000D04  C186  FFDF         	movff	i2c_master_send@recvlength,indf2
  3080                           
  3081                           ;my_i2c.c: 53: ic_ptr->status = 0xA;
  3082  000D08  0100               	movlb	0	; () banked
  3083  000D0A  EE20 F00D          	lfsr	2,13
  3084  000D0E  0100               	movlb	0	; () banked
  3085  000D10  51C9               	movf	_ic_ptr& (0+255),w,b
  3086  000D12  26D9               	addwf	fsr2l,f,c
  3087  000D14  0100               	movlb	0	; () banked
  3088  000D16  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3089  000D18  22DA               	addwfc	fsr2h,f,c
  3090  000D1A  0E0A               	movlw	10
  3091  000D1C  6EDF               	movwf	indf2,c
  3092                           
  3093                           ;my_i2c.c: 54: ic_ptr->outbufind = 0;
  3094  000D1E  0100               	movlb	0	; () banked
  3095  000D20  EE20 F01B          	lfsr	2,27
  3096  000D24  0100               	movlb	0	; () banked
  3097  000D26  51C9               	movf	_ic_ptr& (0+255),w,b
  3098  000D28  26D9               	addwf	fsr2l,f,c
  3099  000D2A  0100               	movlb	0	; () banked
  3100  000D2C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3101  000D2E  22DA               	addwfc	fsr2h,f,c
  3102  000D30  0E00               	movlw	0
  3103  000D32  6EDF               	movwf	indf2,c
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;my_i2c.c: 56: SSPCON2bits.SEN = 1;
  3107  000D34  80C5               	bsf	4037,0,c	;volatile
  3108  000D36  0012               	return	
  3109  000D38                     __end_of_i2c_master_send:
  3110                           	opt stack 0
  3111                           tblptru	equ	0xFF8
  3112                           tblptrh	equ	0xFF7
  3113                           tblptrl	equ	0xFF6
  3114                           tablat	equ	0xFF5
  3115                           prodh	equ	0xFF4
  3116                           prodl	equ	0xFF3
  3117                           postinc0	equ	0xFEE
  3118                           wreg	equ	0xFE8
  3119                           indf1	equ	0xFE7
  3120                           postdec1	equ	0xFE5
  3121                           fsr1h	equ	0xFE2
  3122                           fsr1l	equ	0xFE1
  3123                           indf2	equ	0xFDF
  3124                           postinc2	equ	0xFDE
  3125                           postdec2	equ	0xFDD
  3126                           fsr2h	equ	0xFDA
  3127                           fsr2l	equ	0xFD9
  3128                           status	equ	0xFD8
  3129                           
  3130 ;; *************** function _i2c_configure_slave *****************
  3131 ;; Defined at:
  3132 ;;		line 444 in file "../src/my_i2c.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  addr            1    wreg     unsigned char 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  addr            1    0[BANK1 ] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;		None               void
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3146 ;;      Params:         0       0       0       0       0
  3147 ;;      Locals:         0       0       1       0       0
  3148 ;;      Temps:          0       0       0       0       0
  3149 ;;      Totals:         0       0       1       0       0
  3150 ;;Total ram usage:        1 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:   11
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_main
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text13
  3161  001F14                     __ptext13:
  3162                           	opt stack 0
  3163  001F14                     _i2c_configure_slave:
  3164                           	opt stack 18
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;incstack = 0
  3168                           ;i2c_configure_slave@addr stored from wreg
  3169  001F14  CFE8 F186          	movff	wreg,i2c_configure_slave@addr
  3170                           
  3171                           ;my_i2c.c: 456: TRISCbits.TRISC3 = 1;
  3172  001F18  8694               	bsf	3988,3,c	;volatile
  3173                           
  3174                           ;my_i2c.c: 457: TRISCbits.TRISC4 = 1;
  3175  001F1A  8894               	bsf	3988,4,c	;volatile
  3176                           
  3177                           ;my_i2c.c: 462: SSPADD = addr;
  3178  001F1C  C186  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3179                           
  3180                           ;my_i2c.c: 464: SSPSTAT = 0x0;
  3181  001F20  0E00               	movlw	0
  3182  001F22  6EC7               	movwf	4039,c	;volatile
  3183                           
  3184                           ;my_i2c.c: 465: SSPCON1 = 0x0;
  3185  001F24  0E00               	movlw	0
  3186  001F26  6EC6               	movwf	4038,c	;volatile
  3187                           
  3188                           ;my_i2c.c: 466: SSPCON2 = 0x0;
  3189  001F28  0E00               	movlw	0
  3190  001F2A  6EC5               	movwf	4037,c	;volatile
  3191                           
  3192                           ;my_i2c.c: 467: SSPCON1 |= 0x0E;
  3193  001F2C  0E0E               	movlw	14
  3194  001F2E  12C6               	iorwf	4038,f,c	;volatile
  3195                           
  3196                           ;my_i2c.c: 468: SSPSTAT |= 0b10000000;
  3197  001F30  8EC7               	bsf	4039,7,c	;volatile
  3198                           
  3199                           ;my_i2c.c: 471: TRISCbits.TRISC3 = 1;
  3200  001F32  8694               	bsf	3988,3,c	;volatile
  3201                           
  3202                           ;my_i2c.c: 472: TRISCbits.TRISC4 = 1;
  3203  001F34  8894               	bsf	3988,4,c	;volatile
  3204                           
  3205                           ;my_i2c.c: 493: SSPCON2bits.SEN = 1;
  3206  001F36  80C5               	bsf	4037,0,c	;volatile
  3207                           
  3208                           ;my_i2c.c: 494: SSPCON1 |= 0b00100000;
  3209  001F38  8AC6               	bsf	4038,5,c	;volatile
  3210  001F3A  0012               	return	
  3211  001F3C                     __end_of_i2c_configure_slave:
  3212                           	opt stack 0
  3213                           tblptru	equ	0xFF8
  3214                           tblptrh	equ	0xFF7
  3215                           tblptrl	equ	0xFF6
  3216                           tablat	equ	0xFF5
  3217                           prodh	equ	0xFF4
  3218                           prodl	equ	0xFF3
  3219                           postinc0	equ	0xFEE
  3220                           wreg	equ	0xFE8
  3221                           indf1	equ	0xFE7
  3222                           postdec1	equ	0xFE5
  3223                           fsr1h	equ	0xFE2
  3224                           fsr1l	equ	0xFE1
  3225                           indf2	equ	0xFDF
  3226                           postinc2	equ	0xFDE
  3227                           postdec2	equ	0xFDD
  3228                           fsr2h	equ	0xFDA
  3229                           fsr2l	equ	0xFD9
  3230                           status	equ	0xFD8
  3231                           
  3232 ;; *************** function _enable_interrupts *****************
  3233 ;; Defined at:
  3234 ;;		line 15 in file "../src/interrupts.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;		None
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;		None
  3239 ;; Return value:  Size  Location     Type
  3240 ;;		None               void
  3241 ;; Registers used:
  3242 ;;		None
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3248 ;;      Params:         0       0       0       0       0
  3249 ;;      Locals:         0       0       0       0       0
  3250 ;;      Temps:          0       0       0       0       0
  3251 ;;      Totals:         0       0       0       0       0
  3252 ;;Total ram usage:        0 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:   11
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_main
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           	psect	text14
  3263  0020AC                     __ptext14:
  3264                           	opt stack 0
  3265  0020AC                     _enable_interrupts:
  3266                           	opt stack 18
  3267                           
  3268                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3269                           
  3270                           ;incstack = 0
  3271  0020AC  8ED0               	bsf	4048,7,c	;volatile
  3272                           
  3273                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3274  0020AE  8EF2               	bsf	intcon,7,c	;volatile
  3275                           
  3276                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3277  0020B0  8CF2               	bsf	intcon,6,c	;volatile
  3278  0020B2  0012               	return	
  3279  0020B4                     __end_of_enable_interrupts:
  3280                           	opt stack 0
  3281                           tblptru	equ	0xFF8
  3282                           tblptrh	equ	0xFF7
  3283                           tblptrl	equ	0xFF6
  3284                           tablat	equ	0xFF5
  3285                           prodh	equ	0xFF4
  3286                           prodl	equ	0xFF3
  3287                           intcon	equ	0xFF2
  3288                           postinc0	equ	0xFEE
  3289                           wreg	equ	0xFE8
  3290                           indf1	equ	0xFE7
  3291                           postdec1	equ	0xFE5
  3292                           fsr1h	equ	0xFE2
  3293                           fsr1l	equ	0xFE1
  3294                           indf2	equ	0xFDF
  3295                           postinc2	equ	0xFDE
  3296                           postdec2	equ	0xFDD
  3297                           fsr2h	equ	0xFDA
  3298                           fsr2l	equ	0xFD9
  3299                           status	equ	0xFD8
  3300                           
  3301 ;; *************** function _block_on_To_msgqueues *****************
  3302 ;; Defined at:
  3303 ;;		line 258 in file "../src/messages.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;		None
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;		None               void
  3310 ;; Registers used:
  3311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3317 ;;      Params:         0       0       0       0       0
  3318 ;;      Locals:         0       0       0       0       0
  3319 ;;      Temps:          0       0       1       0       0
  3320 ;;      Totals:         0       0       1       0       0
  3321 ;;Total ram usage:        1 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:   14
  3324 ;; This function calls:
  3325 ;;		_Delay1KTCYx
  3326 ;;		_check_msg
  3327 ;;		_in_main
  3328 ;; This function is called by:
  3329 ;;		_main
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text15
  3334  00188A                     __ptext15:
  3335                           	opt stack 0
  3336  00188A                     _block_on_To_msgqueues:
  3337                           	opt stack 15
  3338                           
  3339                           ;messages.c: 259: if (!in_main()) {
  3340                           
  3341                           ;incstack = 0
  3342  00188A  EC6D  F00E         	call	_in_main	;wreg free
  3343  00188E  0101               	movlb	1	; () banked
  3344  001890  0101               	movlb	1	; () banked
  3345  001892  518B               	movf	(?_in_main+1)& (0+255),w,b
  3346  001894  0101               	movlb	1	; () banked
  3347  001896  118A               	iorwf	?_in_main& (0+255),w,b
  3348  001898  B4D8               	btfsc	status,2,c
  3349  00189A  0012               	return	
  3350                           
  3351                           ; BSR set to: 1
  3352                           ;messages.c: 261: }
  3353                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3354                           
  3355                           ; BSR set to: 1
  3356                           
  3357                           ; BSR set to: 1
  3358                           ;messages.c: 260: return;
  3359  00189C  0101               	movlb	1	; () banked
  3360  00189E  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  3361  0018A0  0E01               	movlw	1
  3362  0018A2  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3363  0018A4  0101               	movlb	1	; () banked
  3364  0018A6  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3365  0018A8                     l3875:
  3366                           
  3367                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3368  0018A8  0101               	movlb	1	; () banked
  3369  0018AA  0E01               	movlw	high _ToMainHigh_MQ
  3370  0018AC  0101               	movlb	1	; () banked
  3371  0018AE  0101               	movlb	1	; () banked
  3372  0018B0  6F87               	movwf	(check_msg@qptr+1)& (0+255),b
  3373  0018B2  0101               	movlb	1	; () banked
  3374  0018B4  0E00               	movlw	low _ToMainHigh_MQ
  3375  0018B6  0101               	movlb	1	; () banked
  3376  0018B8  0101               	movlb	1	; () banked
  3377  0018BA  6F86               	movwf	check_msg@qptr& (0+255),b
  3378  0018BC  EC28  F00F         	call	_check_msg	;wreg free
  3379  0018C0  0900               	iorlw	0
  3380  0018C2  B4D8               	btfsc	status,2,c
  3381  0018C4  D007               	goto	l3881
  3382                           
  3383                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3384  0018C6  0101               	movlb	1	; () banked
  3385  0018C8  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  3386  0018CA  0E00               	movlw	0
  3387  0018CC  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3388  0018CE  0101               	movlb	1	; () banked
  3389  0018D0  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3390  0018D2  0012               	return	
  3391  0018D4                     l3881:
  3392                           
  3393                           ;messages.c: 271: }
  3394                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3395  0018D4  0101               	movlb	1	; () banked
  3396  0018D6  0E01               	movlw	high _ToMainLow_MQ
  3397  0018D8  0101               	movlb	1	; () banked
  3398  0018DA  0101               	movlb	1	; () banked
  3399  0018DC  6F87               	movwf	(check_msg@qptr+1)& (0+255),b
  3400  0018DE  0101               	movlb	1	; () banked
  3401  0018E0  0E43               	movlw	low _ToMainLow_MQ
  3402  0018E2  0101               	movlb	1	; () banked
  3403  0018E4  0101               	movlb	1	; () banked
  3404  0018E6  6F86               	movwf	check_msg@qptr& (0+255),b
  3405  0018E8  EC28  F00F         	call	_check_msg	;wreg free
  3406  0018EC  0900               	iorlw	0
  3407  0018EE  B4D8               	btfsc	status,2,c
  3408  0018F0  D007               	goto	l3887
  3409                           
  3410                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3411  0018F2  0101               	movlb	1	; () banked
  3412  0018F4  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  3413  0018F6  0E00               	movlw	0
  3414  0018F8  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3415  0018FA  0101               	movlb	1	; () banked
  3416  0018FC  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3417  0018FE  0012               	return	
  3418  001900                     l3887:
  3419                           
  3420                           ;messages.c: 278: }
  3421                           ;messages.c: 279: Delay1KTCYx(10);
  3422  001900  0E0A               	movlw	10
  3423  001902  EC02  F010         	call	_Delay1KTCYx
  3424  001906  D7D0               	goto	l3875
  3425  001908                     __end_of_block_on_To_msgqueues:
  3426                           	opt stack 0
  3427                           tblptru	equ	0xFF8
  3428                           tblptrh	equ	0xFF7
  3429                           tblptrl	equ	0xFF6
  3430                           tablat	equ	0xFF5
  3431                           prodh	equ	0xFF4
  3432                           prodl	equ	0xFF3
  3433                           intcon	equ	0xFF2
  3434                           postinc0	equ	0xFEE
  3435                           wreg	equ	0xFE8
  3436                           indf1	equ	0xFE7
  3437                           postdec1	equ	0xFE5
  3438                           fsr1h	equ	0xFE2
  3439                           fsr1l	equ	0xFE1
  3440                           indf2	equ	0xFDF
  3441                           postinc2	equ	0xFDE
  3442                           postdec2	equ	0xFDD
  3443                           fsr2h	equ	0xFDA
  3444                           fsr2l	equ	0xFD9
  3445                           status	equ	0xFD8
  3446                           
  3447 ;; *************** function _in_main *****************
  3448 ;; Defined at:
  3449 ;;		line 41 in file "../src/interrupts.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;		None
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  2    4[BANK1 ] int 
  3456 ;; Registers used:
  3457 ;;		wreg, status,2, status,0, cstack
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3463 ;;      Params:         0       0       2       0       0
  3464 ;;      Locals:         0       0       0       0       0
  3465 ;;      Temps:          0       0       0       0       0
  3466 ;;      Totals:         0       0       2       0       0
  3467 ;;Total ram usage:        2 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:   13
  3470 ;; This function calls:
  3471 ;;		_in_high_int
  3472 ;;		_in_low_int
  3473 ;; This function is called by:
  3474 ;;		_block_on_To_msgqueues
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text16
  3479  001CDA                     __ptext16:
  3480                           	opt stack 0
  3481  001CDA                     _in_main:
  3482                           	opt stack 15
  3483                           
  3484                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3485                           
  3486                           ;incstack = 0
  3487  001CDA  EC4A  F00E         	call	_in_low_int	;wreg free
  3488  001CDE  0101               	movlb	1	; () banked
  3489  001CE0  0101               	movlb	1	; () banked
  3490  001CE2  5189               	movf	(?_in_low_int+1)& (0+255),w,b
  3491  001CE4  0101               	movlb	1	; () banked
  3492  001CE6  1188               	iorwf	?_in_low_int& (0+255),w,b
  3493  001CE8  A4D8               	btfss	status,2,c
  3494  001CEA  D011               	goto	l3617
  3495                           
  3496                           ; BSR set to: 1
  3497  001CEC  EC1F  F010         	call	_in_high_int	;wreg free
  3498  001CF0  0101               	movlb	1	; () banked
  3499  001CF2  0101               	movlb	1	; () banked
  3500  001CF4  5187               	movf	(?_in_high_int+1)& (0+255),w,b
  3501  001CF6  0101               	movlb	1	; () banked
  3502  001CF8  1186               	iorwf	?_in_high_int& (0+255),w,b
  3503  001CFA  A4D8               	btfss	status,2,c
  3504  001CFC  D008               	goto	l3617
  3505                           
  3506                           ; BSR set to: 1
  3507                           ;interrupts.c: 43: return (1);
  3508  001CFE  0E00               	movlw	0
  3509  001D00  0101               	movlb	1	; () banked
  3510  001D02  0101               	movlb	1	; () banked
  3511  001D04  6F8B               	movwf	(?_in_main+1)& (0+255),b
  3512  001D06  0E01               	movlw	1
  3513  001D08  0101               	movlb	1	; () banked
  3514  001D0A  6F8A               	movwf	?_in_main& (0+255),b
  3515  001D0C  0012               	return	
  3516  001D0E                     l3617:
  3517                           
  3518                           ; BSR set to: 1
  3519                           ;interrupts.c: 45: return (0);
  3520  001D0E  0E00               	movlw	0
  3521  001D10  0101               	movlb	1	; () banked
  3522  001D12  0101               	movlb	1	; () banked
  3523  001D14  6F8B               	movwf	(?_in_main+1)& (0+255),b
  3524  001D16  0E00               	movlw	0
  3525  001D18  0101               	movlb	1	; () banked
  3526  001D1A  6F8A               	movwf	?_in_main& (0+255),b
  3527  001D1C  0012               	return	
  3528  001D1E                     __end_of_in_main:
  3529                           	opt stack 0
  3530                           tblptru	equ	0xFF8
  3531                           tblptrh	equ	0xFF7
  3532                           tblptrl	equ	0xFF6
  3533                           tablat	equ	0xFF5
  3534                           prodh	equ	0xFF4
  3535                           prodl	equ	0xFF3
  3536                           intcon	equ	0xFF2
  3537                           postinc0	equ	0xFEE
  3538                           wreg	equ	0xFE8
  3539                           indf1	equ	0xFE7
  3540                           postdec1	equ	0xFE5
  3541                           fsr1h	equ	0xFE2
  3542                           fsr1l	equ	0xFE1
  3543                           indf2	equ	0xFDF
  3544                           postinc2	equ	0xFDE
  3545                           postdec2	equ	0xFDD
  3546                           fsr2h	equ	0xFDA
  3547                           fsr2l	equ	0xFD9
  3548                           status	equ	0xFD8
  3549                           
  3550 ;; *************** function _in_low_int *****************
  3551 ;; Defined at:
  3552 ;;		line 31 in file "../src/interrupts.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  2    2[BANK1 ] int 
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, status,0, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3566 ;;      Params:         0       0       2       0       0
  3567 ;;      Locals:         0       0       0       0       0
  3568 ;;      Temps:          0       0       0       0       0
  3569 ;;      Totals:         0       0       2       0       0
  3570 ;;Total ram usage:        2 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:   12
  3573 ;; This function calls:
  3574 ;;		_in_high_int
  3575 ;; This function is called by:
  3576 ;;		_in_main
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text17
  3581  001C94                     __ptext17:
  3582                           	opt stack 0
  3583  001C94                     _in_low_int:
  3584                           	opt stack 15
  3585                           
  3586                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3587                           
  3588                           ; BSR set to: 1
  3589                           ;incstack = 0
  3590  001C94  ACF2               	btfss	intcon,6,c	;volatile
  3591  001C96  D008               	goto	l3595
  3592                           
  3593                           ;interrupts.c: 33: return (0);
  3594  001C98  0E00               	movlw	0
  3595  001C9A  0101               	movlb	1	; () banked
  3596  001C9C  0101               	movlb	1	; () banked
  3597  001C9E  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3598  001CA0  0E00               	movlw	0
  3599  001CA2  0101               	movlb	1	; () banked
  3600  001CA4  6F88               	movwf	?_in_low_int& (0+255),b
  3601  001CA6  0012               	return	
  3602  001CA8                     l3595:
  3603  001CA8  EC1F  F010         	call	_in_high_int	;wreg free
  3604  001CAC  0101               	movlb	1	; () banked
  3605  001CAE  0101               	movlb	1	; () banked
  3606  001CB0  5187               	movf	(?_in_high_int+1)& (0+255),w,b
  3607  001CB2  0101               	movlb	1	; () banked
  3608  001CB4  1186               	iorwf	?_in_high_int& (0+255),w,b
  3609  001CB6  B4D8               	btfsc	status,2,c
  3610  001CB8  D008               	goto	l3603
  3611                           
  3612                           ; BSR set to: 1
  3613                           ;interrupts.c: 35: return (0);
  3614  001CBA  0E00               	movlw	0
  3615  001CBC  0101               	movlb	1	; () banked
  3616  001CBE  0101               	movlb	1	; () banked
  3617  001CC0  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3618  001CC2  0E00               	movlw	0
  3619  001CC4  0101               	movlb	1	; () banked
  3620  001CC6  6F88               	movwf	?_in_low_int& (0+255),b
  3621  001CC8  0012               	return	
  3622  001CCA                     l3603:
  3623                           
  3624                           ; BSR set to: 1
  3625                           ;interrupts.c: 37: return (1);
  3626  001CCA  0E00               	movlw	0
  3627  001CCC  0101               	movlb	1	; () banked
  3628  001CCE  0101               	movlb	1	; () banked
  3629  001CD0  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3630  001CD2  0E01               	movlw	1
  3631  001CD4  0101               	movlb	1	; () banked
  3632  001CD6  6F88               	movwf	?_in_low_int& (0+255),b
  3633  001CD8  0012               	return	
  3634  001CDA                     __end_of_in_low_int:
  3635                           	opt stack 0
  3636                           tblptru	equ	0xFF8
  3637                           tblptrh	equ	0xFF7
  3638                           tblptrl	equ	0xFF6
  3639                           tablat	equ	0xFF5
  3640                           prodh	equ	0xFF4
  3641                           prodl	equ	0xFF3
  3642                           intcon	equ	0xFF2
  3643                           postinc0	equ	0xFEE
  3644                           wreg	equ	0xFE8
  3645                           indf1	equ	0xFE7
  3646                           postdec1	equ	0xFE5
  3647                           fsr1h	equ	0xFE2
  3648                           fsr1l	equ	0xFE1
  3649                           indf2	equ	0xFDF
  3650                           postinc2	equ	0xFDE
  3651                           postdec2	equ	0xFDD
  3652                           fsr2h	equ	0xFDA
  3653                           fsr2l	equ	0xFD9
  3654                           status	equ	0xFD8
  3655                           
  3656 ;; *************** function _in_high_int *****************
  3657 ;; Defined at:
  3658 ;;		line 23 in file "../src/interrupts.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;		None
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;		None
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  2    0[BANK1 ] int 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3672 ;;      Params:         0       0       2       0       0
  3673 ;;      Locals:         0       0       0       0       0
  3674 ;;      Temps:          0       0       0       0       0
  3675 ;;      Totals:         0       0       2       0       0
  3676 ;;Total ram usage:        2 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:   11
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		_in_low_int
  3683 ;;		_in_main
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           	psect	text18
  3688  00203E                     __ptext18:
  3689                           	opt stack 0
  3690  00203E                     _in_high_int:
  3691                           	opt stack 15
  3692                           
  3693                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  3694                           
  3695                           ; BSR set to: 1
  3696                           ;incstack = 0
  3697  00203E  0E00               	movlw	0
  3698  002040  AEF2               	btfss	intcon,7,c	;volatile
  3699  002042  0E01               	movlw	1
  3700  002044  0101               	movlb	1	; () banked
  3701  002046  0101               	movlb	1	; () banked
  3702  002048  6F86               	movwf	?_in_high_int& (0+255),b
  3703  00204A  0101               	movlb	1	; () banked
  3704  00204C  6B87               	clrf	(?_in_high_int+1)& (0+255),b
  3705  00204E  0012               	return	
  3706  002050                     __end_of_in_high_int:
  3707                           	opt stack 0
  3708                           tblptru	equ	0xFF8
  3709                           tblptrh	equ	0xFF7
  3710                           tblptrl	equ	0xFF6
  3711                           tablat	equ	0xFF5
  3712                           prodh	equ	0xFF4
  3713                           prodl	equ	0xFF3
  3714                           intcon	equ	0xFF2
  3715                           postinc0	equ	0xFEE
  3716                           wreg	equ	0xFE8
  3717                           indf1	equ	0xFE7
  3718                           postdec1	equ	0xFE5
  3719                           fsr1h	equ	0xFE2
  3720                           fsr1l	equ	0xFE1
  3721                           indf2	equ	0xFDF
  3722                           postinc2	equ	0xFDE
  3723                           postdec2	equ	0xFDD
  3724                           fsr2h	equ	0xFDA
  3725                           fsr2l	equ	0xFD9
  3726                           status	equ	0xFD8
  3727                           
  3728 ;; *************** function _check_msg *****************
  3729 ;; Defined at:
  3730 ;;		line 222 in file "../src/messages.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3733 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      unsigned char 
  3738 ;; Registers used:
  3739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3745 ;;      Params:         0       0       2       0       0
  3746 ;;      Locals:         0       0       0       0       0
  3747 ;;      Temps:          0       0       1       0       0
  3748 ;;      Totals:         0       0       3       0       0
  3749 ;;Total ram usage:        3 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:   11
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_block_on_To_msgqueues
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text19
  3760  001E50                     __ptext19:
  3761                           	opt stack 0
  3762  001E50                     _check_msg:
  3763                           	opt stack 17
  3764                           
  3765                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3766                           
  3767                           ; BSR set to: 1
  3768                           ;incstack = 0
  3769  001E50  0101               	movlb	1	; () banked
  3770  001E52  EE20 F042          	lfsr	2,66
  3771  001E56  0101               	movlb	1	; () banked
  3772  001E58  5186               	movf	check_msg@qptr& (0+255),w,b
  3773  001E5A  26D9               	addwf	fsr2l,f,c
  3774  001E5C  0101               	movlb	1	; () banked
  3775  001E5E  5187               	movf	(check_msg@qptr+1)& (0+255),w,b
  3776  001E60  22DA               	addwfc	fsr2h,f,c
  3777  001E62  50DF               	movf	indf2,w,c
  3778  001E64  0101               	movlb	1	; () banked
  3779  001E66  6F88               	movwf	??_check_msg& (0+255),b
  3780  001E68  0101               	movlb	1	; () banked
  3781  001E6A  5188               	movf	??_check_msg& (0+255),w,b
  3782  001E6C  0D0D               	mullw	13
  3783  001E6E  50F3               	movf	prodl,w,c
  3784  001E70  0101               	movlb	1	; () banked
  3785  001E72  0101               	movlb	1	; () banked
  3786  001E74  2586               	addwf	check_msg@qptr& (0+255),w,b
  3787  001E76  6ED9               	movwf	fsr2l,c
  3788  001E78  50F4               	movf	prodh,w,c
  3789  001E7A  0101               	movlb	1	; () banked
  3790  001E7C  0101               	movlb	1	; () banked
  3791  001E7E  2187               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3792  001E80  6EDA               	movwf	fsr2h,c
  3793  001E82  50DF               	movf	indf2,w,c
  3794  001E84  0012               	return	
  3795  001E86                     __end_of_check_msg:
  3796                           	opt stack 0
  3797                           tblptru	equ	0xFF8
  3798                           tblptrh	equ	0xFF7
  3799                           tblptrl	equ	0xFF6
  3800                           tablat	equ	0xFF5
  3801                           prodh	equ	0xFF4
  3802                           prodl	equ	0xFF3
  3803                           intcon	equ	0xFF2
  3804                           postinc0	equ	0xFEE
  3805                           wreg	equ	0xFE8
  3806                           indf1	equ	0xFE7
  3807                           postdec1	equ	0xFE5
  3808                           fsr1h	equ	0xFE2
  3809                           fsr1l	equ	0xFE1
  3810                           indf2	equ	0xFDF
  3811                           postinc2	equ	0xFDE
  3812                           postdec2	equ	0xFDD
  3813                           fsr2h	equ	0xFDA
  3814                           fsr2l	equ	0xFD9
  3815                           status	equ	0xFD8
  3816                           
  3817 ;; *************** function _Delay1KTCYx *****************
  3818 ;; Defined at:
  3819 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  unit            1    wreg     unsigned char 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  unit            1    0[BANK1 ] unsigned char 
  3824 ;; Return value:  Size  Location     Type
  3825 ;;		None               void
  3826 ;; Registers used:
  3827 ;;		wreg
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3833 ;;      Params:         0       0       0       0       0
  3834 ;;      Locals:         0       0       1       0       0
  3835 ;;      Temps:          0       0       0       0       0
  3836 ;;      Totals:         0       0       1       0       0
  3837 ;;Total ram usage:        1 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:   11
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_block_on_To_msgqueues
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           	psect	text20
  3848  002004                     __ptext20:
  3849                           	opt stack 0
  3850  002004                     _Delay1KTCYx:
  3851                           	opt stack 17
  3852                           
  3853                           ; BSR set to: 1
  3854                           ;incstack = 0
  3855                           ;Delay1KTCYx@unit stored from wreg
  3856  002004  CFE8 F186          	movff	wreg,Delay1KTCYx@unit
  3857  002008                     l801:
  3858  002008  0EFA               	movlw	250
  3859  00200A                     u3737:
  3860  00200A  F000               	nop	
  3861  00200C  2EE8               	decfsz	wreg,f,c
  3862  00200E  D7FD               	goto	u3737
  3863  002010  0101               	movlb	1	; () banked
  3864  002012  0101               	movlb	1	; () banked
  3865  002014  2F86               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3866  002016  D7F8               	goto	l801
  3867  002018  0012               	return	
  3868  00201A                     __end_of_Delay1KTCYx:
  3869                           	opt stack 0
  3870                           tblptru	equ	0xFF8
  3871                           tblptrh	equ	0xFF7
  3872                           tblptrl	equ	0xFF6
  3873                           tablat	equ	0xFF5
  3874                           prodh	equ	0xFF4
  3875                           prodl	equ	0xFF3
  3876                           intcon	equ	0xFF2
  3877                           postinc0	equ	0xFEE
  3878                           wreg	equ	0xFE8
  3879                           indf1	equ	0xFE7
  3880                           postdec1	equ	0xFE5
  3881                           fsr1h	equ	0xFE2
  3882                           fsr1l	equ	0xFE1
  3883                           indf2	equ	0xFDF
  3884                           postinc2	equ	0xFDE
  3885                           postdec2	equ	0xFDD
  3886                           fsr2h	equ	0xFDA
  3887                           fsr2l	equ	0xFD9
  3888                           status	equ	0xFD8
  3889                           
  3890 ;; *************** function _ToMainLow_recvmsg *****************
  3891 ;; Defined at:
  3892 ;;		line 112 in file "../src/messages.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  maxlength       1    wreg     unsigned char 
  3895 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3896 ;;		 -> main@msgtype(1), 
  3897 ;;  data            2   26[BANK1 ] PTR void 
  3898 ;;		 -> main@msgbuffer(11), 
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      char 
  3903 ;; Registers used:
  3904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3910 ;;      Params:         0       0       4       0       0
  3911 ;;      Locals:         0       0       1       0       0
  3912 ;;      Temps:          0       0       0       0       0
  3913 ;;      Totals:         0       0       5       0       0
  3914 ;;Total ram usage:        5 bytes
  3915 ;; Hardware stack levels used:    1
  3916 ;; Hardware stack levels required when called:   13
  3917 ;; This function calls:
  3918 ;;		_recv_msg
  3919 ;; This function is called by:
  3920 ;;		_main
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           	psect	text21
  3925  001D1E                     __ptext21:
  3926                           	opt stack 0
  3927  001D1E                     _ToMainLow_recvmsg:
  3928                           	opt stack 16
  3929                           
  3930                           ; BSR set to: 1
  3931                           ;incstack = 0
  3932                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3933  001D1E  CFE8 F1A2          	movff	wreg,ToMainLow_recvmsg@maxlength
  3934                           
  3935                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3936  001D22  0101               	movlb	1	; () banked
  3937  001D24  0E01               	movlw	high _ToMainLow_MQ
  3938  001D26  0101               	movlb	1	; () banked
  3939  001D28  0101               	movlb	1	; () banked
  3940  001D2A  6F91               	movwf	(recv_msg@qptr+1)& (0+255),b
  3941  001D2C  0101               	movlb	1	; () banked
  3942  001D2E  0E43               	movlw	low _ToMainLow_MQ
  3943  001D30  0101               	movlb	1	; () banked
  3944  001D32  0101               	movlb	1	; () banked
  3945  001D34  6F90               	movwf	recv_msg@qptr& (0+255),b
  3946  001D36  C1A2  F192         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3947  001D3A  0101               	movlb	1	; () banked
  3948  001D3C  0101               	movlb	1	; () banked
  3949  001D3E  C19F  F194         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3950  001D42  0101               	movlb	1	; () banked
  3951  001D44  0101               	movlb	1	; () banked
  3952  001D46  C19E  F193         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3953  001D4A  0101               	movlb	1	; () banked
  3954  001D4C  0101               	movlb	1	; () banked
  3955  001D4E  C1A1  F196         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3956  001D52  0101               	movlb	1	; () banked
  3957  001D54  0101               	movlb	1	; () banked
  3958  001D56  C1A0  F195         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3959  001D5A  EC4E  F005         	call	_recv_msg	;wreg free
  3960  001D5E  0012               	return	
  3961  001D60                     __end_of_ToMainLow_recvmsg:
  3962                           	opt stack 0
  3963                           tblptru	equ	0xFF8
  3964                           tblptrh	equ	0xFF7
  3965                           tblptrl	equ	0xFF6
  3966                           tablat	equ	0xFF5
  3967                           prodh	equ	0xFF4
  3968                           prodl	equ	0xFF3
  3969                           intcon	equ	0xFF2
  3970                           postinc0	equ	0xFEE
  3971                           wreg	equ	0xFE8
  3972                           indf1	equ	0xFE7
  3973                           postdec1	equ	0xFE5
  3974                           fsr1h	equ	0xFE2
  3975                           fsr1l	equ	0xFE1
  3976                           indf2	equ	0xFDF
  3977                           postinc2	equ	0xFDE
  3978                           postdec2	equ	0xFDD
  3979                           fsr2h	equ	0xFDA
  3980                           fsr2l	equ	0xFD9
  3981                           status	equ	0xFD8
  3982                           
  3983 ;; *************** function _ToMainHigh_recvmsg *****************
  3984 ;; Defined at:
  3985 ;;		line 135 in file "../src/messages.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  maxlength       1    wreg     unsigned char 
  3988 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3989 ;;		 -> main@msgtype(1), 
  3990 ;;  data            2   26[BANK1 ] PTR void 
  3991 ;;		 -> main@msgbuffer(11), 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      char 
  3996 ;; Registers used:
  3997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4003 ;;      Params:         0       0       4       0       0
  4004 ;;      Locals:         0       0       1       0       0
  4005 ;;      Temps:          0       0       0       0       0
  4006 ;;      Totals:         0       0       5       0       0
  4007 ;;Total ram usage:        5 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:   13
  4010 ;; This function calls:
  4011 ;;		_recv_msg
  4012 ;; This function is called by:
  4013 ;;		_main
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           	psect	text22
  4018  001D60                     __ptext22:
  4019                           	opt stack 0
  4020  001D60                     _ToMainHigh_recvmsg:
  4021                           	opt stack 16
  4022                           
  4023                           ;incstack = 0
  4024                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4025  001D60  CFE8 F1A2          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4026                           
  4027                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4028  001D64  0101               	movlb	1	; () banked
  4029  001D66  0E01               	movlw	high _ToMainHigh_MQ
  4030  001D68  0101               	movlb	1	; () banked
  4031  001D6A  0101               	movlb	1	; () banked
  4032  001D6C  6F91               	movwf	(recv_msg@qptr+1)& (0+255),b
  4033  001D6E  0101               	movlb	1	; () banked
  4034  001D70  0E00               	movlw	low _ToMainHigh_MQ
  4035  001D72  0101               	movlb	1	; () banked
  4036  001D74  0101               	movlb	1	; () banked
  4037  001D76  6F90               	movwf	recv_msg@qptr& (0+255),b
  4038  001D78  C1A2  F192         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4039  001D7C  0101               	movlb	1	; () banked
  4040  001D7E  0101               	movlb	1	; () banked
  4041  001D80  C19F  F194         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4042  001D84  0101               	movlb	1	; () banked
  4043  001D86  0101               	movlb	1	; () banked
  4044  001D88  C19E  F193         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4045  001D8C  0101               	movlb	1	; () banked
  4046  001D8E  0101               	movlb	1	; () banked
  4047  001D90  C1A1  F196         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4048  001D94  0101               	movlb	1	; () banked
  4049  001D96  0101               	movlb	1	; () banked
  4050  001D98  C1A0  F195         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4051  001D9C  EC4E  F005         	call	_recv_msg	;wreg free
  4052  001DA0  0012               	return	
  4053  001DA2                     __end_of_ToMainHigh_recvmsg:
  4054                           	opt stack 0
  4055                           tblptru	equ	0xFF8
  4056                           tblptrh	equ	0xFF7
  4057                           tblptrl	equ	0xFF6
  4058                           tablat	equ	0xFF5
  4059                           prodh	equ	0xFF4
  4060                           prodl	equ	0xFF3
  4061                           intcon	equ	0xFF2
  4062                           postinc0	equ	0xFEE
  4063                           wreg	equ	0xFE8
  4064                           indf1	equ	0xFE7
  4065                           postdec1	equ	0xFE5
  4066                           fsr1h	equ	0xFE2
  4067                           fsr1l	equ	0xFE1
  4068                           indf2	equ	0xFDF
  4069                           postinc2	equ	0xFDE
  4070                           postdec2	equ	0xFDD
  4071                           fsr2h	equ	0xFDA
  4072                           fsr2l	equ	0xFD9
  4073                           status	equ	0xFD8
  4074                           
  4075 ;; *************** function _recv_msg *****************
  4076 ;; Defined at:
  4077 ;;		line 63 in file "../src/messages.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4080 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4081 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4082 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  4083 ;;		 -> main@msgtype(1), 
  4084 ;;  data            2   15[BANK1 ] PTR void 
  4085 ;;		 -> main@msgbuffer(11), 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  4088 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4089 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4090 ;;  tlength         2   20[BANK1 ] unsigned int 
  4091 ;;  slot            1   19[BANK1 ] unsigned char 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  1    wreg      char 
  4094 ;; Registers used:
  4095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4101 ;;      Params:         0       0       7       0       0
  4102 ;;      Locals:         0       0       5       0       0
  4103 ;;      Temps:          0       0       2       0       0
  4104 ;;      Totals:         0       0      14       0       0
  4105 ;;Total ram usage:       14 bytes
  4106 ;; Hardware stack levels used:    1
  4107 ;; Hardware stack levels required when called:   12
  4108 ;; This function calls:
  4109 ;;		___awmod
  4110 ;;		_memcpy
  4111 ;; This function is called by:
  4112 ;;		_ToMainLow_recvmsg
  4113 ;;		_ToMainHigh_recvmsg
  4114 ;;		_FromMainLow_recvmsg
  4115 ;;		_FromMainHigh_recvmsg
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text23
  4120  000A9C                     __ptext23:
  4121                           	opt stack 0
  4122  000A9C                     _recv_msg:
  4123                           	opt stack 16
  4124                           
  4125                           ;messages.c: 64: unsigned char slot;
  4126                           ;messages.c: 68: msg *qmsg;
  4127                           ;messages.c: 69: size_t tlength;
  4128                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4129                           
  4130                           ;incstack = 0
  4131  000A9C  0101               	movlb	1	; () banked
  4132  000A9E  EE20 F042          	lfsr	2,66
  4133  000AA2  0101               	movlb	1	; () banked
  4134  000AA4  5190               	movf	recv_msg@qptr& (0+255),w,b
  4135  000AA6  26D9               	addwf	fsr2l,f,c
  4136  000AA8  0101               	movlb	1	; () banked
  4137  000AAA  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4138  000AAC  22DA               	addwfc	fsr2h,f,c
  4139  000AAE  50DF               	movf	indf2,w,c
  4140  000AB0  0101               	movlb	1	; () banked
  4141  000AB2  0101               	movlb	1	; () banked
  4142  000AB4  6F99               	movwf	recv_msg@slot& (0+255),b
  4143                           
  4144                           ; BSR set to: 1
  4145                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4146  000AB6  0101               	movlb	1	; () banked
  4147  000AB8  0101               	movlb	1	; () banked
  4148  000ABA  5199               	movf	recv_msg@slot& (0+255),w,b
  4149  000ABC  0D0D               	mullw	13
  4150  000ABE  50F3               	movf	prodl,w,c
  4151  000AC0  0101               	movlb	1	; () banked
  4152  000AC2  0101               	movlb	1	; () banked
  4153  000AC4  2590               	addwf	recv_msg@qptr& (0+255),w,b
  4154  000AC6  0101               	movlb	1	; () banked
  4155  000AC8  0101               	movlb	1	; () banked
  4156  000ACA  6F9C               	movwf	recv_msg@qmsg& (0+255),b
  4157  000ACC  50F4               	movf	prodh,w,c
  4158  000ACE  0101               	movlb	1	; () banked
  4159  000AD0  0101               	movlb	1	; () banked
  4160  000AD2  2191               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4161  000AD4  0101               	movlb	1	; () banked
  4162  000AD6  6F9D               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4163                           
  4164                           ; BSR set to: 1
  4165                           ;messages.c: 74: if (qmsg->full == 1) {
  4166  000AD8  0E01               	movlw	1
  4167  000ADA  C19C  FFD9         	movff	recv_msg@qmsg,fsr2l
  4168  000ADE  C19D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4169  000AE2  62DF               	cpfseq	indf2,c
  4170  000AE4  D088               	goto	l4009
  4171                           
  4172                           ; BSR set to: 1
  4173                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4174  000AE6  0101               	movlb	1	; () banked
  4175  000AE8  EE20 F001          	lfsr	2,1
  4176  000AEC  0101               	movlb	1	; () banked
  4177  000AEE  519C               	movf	recv_msg@qmsg& (0+255),w,b
  4178  000AF0  26D9               	addwf	fsr2l,f,c
  4179  000AF2  0101               	movlb	1	; () banked
  4180  000AF4  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4181  000AF6  22DA               	addwfc	fsr2h,f,c
  4182  000AF8  50DF               	movf	indf2,w,c
  4183  000AFA  0101               	movlb	1	; () banked
  4184  000AFC  0101               	movlb	1	; () banked
  4185  000AFE  5D92               	subwf	recv_msg@maxlength& (0+255),w,b
  4186  000B00  B0D8               	btfsc	status,0,c
  4187  000B02  D002               	goto	l3993
  4188                           
  4189                           ; BSR set to: 1
  4190                           ;messages.c: 77: return (-3);
  4191  000B04  0EFD               	movlw	253
  4192  000B06  0012               	return	
  4193  000B08                     l3993:
  4194                           
  4195                           ; BSR set to: 1
  4196                           ;messages.c: 78: }
  4197                           ;messages.c: 80: tlength = qmsg->length;
  4198  000B08  0101               	movlb	1	; () banked
  4199  000B0A  EE20 F001          	lfsr	2,1
  4200  000B0E  0101               	movlb	1	; () banked
  4201  000B10  519C               	movf	recv_msg@qmsg& (0+255),w,b
  4202  000B12  26D9               	addwf	fsr2l,f,c
  4203  000B14  0101               	movlb	1	; () banked
  4204  000B16  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4205  000B18  22DA               	addwfc	fsr2h,f,c
  4206  000B1A  50DF               	movf	indf2,w,c
  4207  000B1C  0101               	movlb	1	; () banked
  4208  000B1E  6F97               	movwf	??_recv_msg& (0+255),b
  4209  000B20  0101               	movlb	1	; () banked
  4210  000B22  5197               	movf	??_recv_msg& (0+255),w,b
  4211  000B24  0101               	movlb	1	; () banked
  4212  000B26  0101               	movlb	1	; () banked
  4213  000B28  6F9A               	movwf	recv_msg@tlength& (0+255),b
  4214  000B2A  0101               	movlb	1	; () banked
  4215  000B2C  6B9B               	clrf	(recv_msg@tlength+1)& (0+255),b
  4216                           
  4217                           ; BSR set to: 1
  4218                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4219  000B2E  0101               	movlb	1	; () banked
  4220  000B30  0101               	movlb	1	; () banked
  4221  000B32  C196  F187         	movff	recv_msg@data+1,memcpy@d1+1
  4222  000B36  0101               	movlb	1	; () banked
  4223  000B38  0101               	movlb	1	; () banked
  4224  000B3A  C195  F186         	movff	recv_msg@data,memcpy@d1
  4225  000B3E  0E03               	movlw	3
  4226  000B40  0101               	movlb	1	; () banked
  4227  000B42  0101               	movlb	1	; () banked
  4228  000B44  259C               	addwf	recv_msg@qmsg& (0+255),w,b
  4229  000B46  0101               	movlb	1	; () banked
  4230  000B48  6F97               	movwf	??_recv_msg& (0+255),b
  4231  000B4A  0E00               	movlw	0
  4232  000B4C  0101               	movlb	1	; () banked
  4233  000B4E  0101               	movlb	1	; () banked
  4234  000B50  219D               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4235  000B52  0101               	movlb	1	; () banked
  4236  000B54  6F98               	movwf	(??_recv_msg+1)& (0+255),b
  4237  000B56  C197  F188         	movff	??_recv_msg,memcpy@s1
  4238  000B5A  C198  F189         	movff	??_recv_msg+1,memcpy@s1+1
  4239  000B5E  C19A  F18A         	movff	recv_msg@tlength,memcpy@n
  4240  000B62  C19B  F18B         	movff	recv_msg@tlength+1,memcpy@n+1
  4241  000B66  ECCD  F00D         	call	_memcpy	;wreg free
  4242                           
  4243                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  4244  000B6A  0101               	movlb	1	; () banked
  4245  000B6C  EE20 F042          	lfsr	2,66
  4246  000B70  0101               	movlb	1	; () banked
  4247  000B72  5190               	movf	recv_msg@qptr& (0+255),w,b
  4248  000B74  26D9               	addwf	fsr2l,f,c
  4249  000B76  0101               	movlb	1	; () banked
  4250  000B78  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4251  000B7A  22DA               	addwfc	fsr2h,f,c
  4252  000B7C  0101               	movlb	1	; () banked
  4253  000B7E  EE10 F042          	lfsr	1,66
  4254  000B82  0101               	movlb	1	; () banked
  4255  000B84  5190               	movf	recv_msg@qptr& (0+255),w,b
  4256  000B86  26E1               	addwf	fsr1l,f,c
  4257  000B88  0101               	movlb	1	; () banked
  4258  000B8A  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4259  000B8C  22E2               	addwfc	fsr1h,f,c
  4260  000B8E  50E7               	movf	indf1,w,c
  4261  000B90  0101               	movlb	1	; () banked
  4262  000B92  6F97               	movwf	??_recv_msg& (0+255),b
  4263  000B94  0E01               	movlw	1
  4264  000B96  0101               	movlb	1	; () banked
  4265  000B98  2597               	addwf	??_recv_msg& (0+255),w,b
  4266  000B9A  0101               	movlb	1	; () banked
  4267  000B9C  0101               	movlb	1	; () banked
  4268  000B9E  6F86               	movwf	___awmod@dividend& (0+255),b
  4269  000BA0  0101               	movlb	1	; () banked
  4270  000BA2  0101               	movlb	1	; () banked
  4271  000BA4  6B87               	clrf	(___awmod@dividend+1)& (0+255),b
  4272  000BA6  0E00               	movlw	0
  4273  000BA8  2387               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4274  000BAA  0E00               	movlw	0
  4275  000BAC  0101               	movlb	1	; () banked
  4276  000BAE  0101               	movlb	1	; () banked
  4277  000BB0  6F89               	movwf	(___awmod@divisor+1)& (0+255),b
  4278  000BB2  0E05               	movlw	5
  4279  000BB4  0101               	movlb	1	; () banked
  4280  000BB6  6F88               	movwf	___awmod@divisor& (0+255),b
  4281  000BB8  ECBF  F007         	call	___awmod	;wreg free
  4282  000BBC  0101               	movlb	1	; () banked
  4283  000BBE  0101               	movlb	1	; () banked
  4284  000BC0  5186               	movf	?___awmod& (0+255),w,b
  4285  000BC2  6EDF               	movwf	indf2,c
  4286                           
  4287                           ; BSR set to: 1
  4288                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4289  000BC4  0101               	movlb	1	; () banked
  4290  000BC6  EE20 F002          	lfsr	2,2
  4291  000BCA  0101               	movlb	1	; () banked
  4292  000BCC  519C               	movf	recv_msg@qmsg& (0+255),w,b
  4293  000BCE  26D9               	addwf	fsr2l,f,c
  4294  000BD0  0101               	movlb	1	; () banked
  4295  000BD2  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4296  000BD4  22DA               	addwfc	fsr2h,f,c
  4297  000BD6  C193  FFE1         	movff	recv_msg@msgtype,fsr1l
  4298  000BDA  C194  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4299  000BDE  CFDF FFE7          	movff	indf2,indf1
  4300                           
  4301                           ; BSR set to: 1
  4302                           ;messages.c: 91: qmsg->full = 0;
  4303  000BE2  C19C  FFD9         	movff	recv_msg@qmsg,fsr2l
  4304  000BE6  C19D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4305  000BEA  0E00               	movlw	0
  4306  000BEC  6EDF               	movwf	indf2,c
  4307                           
  4308                           ; BSR set to: 1
  4309                           ;messages.c: 92: return (tlength);
  4310  000BEE  0101               	movlb	1	; () banked
  4311  000BF0  0101               	movlb	1	; () banked
  4312  000BF2  519A               	movf	recv_msg@tlength& (0+255),w,b
  4313  000BF4  0012               	return	
  4314  000BF6                     l4009:
  4315                           
  4316                           ; BSR set to: 1
  4317                           ;messages.c: 94: return (-4);
  4318  000BF6  0EFC               	movlw	252
  4319  000BF8  0012               	return	
  4320  000BFA                     __end_of_recv_msg:
  4321                           	opt stack 0
  4322                           tblptru	equ	0xFF8
  4323                           tblptrh	equ	0xFF7
  4324                           tblptrl	equ	0xFF6
  4325                           tablat	equ	0xFF5
  4326                           prodh	equ	0xFF4
  4327                           prodl	equ	0xFF3
  4328                           intcon	equ	0xFF2
  4329                           postinc0	equ	0xFEE
  4330                           wreg	equ	0xFE8
  4331                           indf1	equ	0xFE7
  4332                           postdec1	equ	0xFE5
  4333                           fsr1h	equ	0xFE2
  4334                           fsr1l	equ	0xFE1
  4335                           indf2	equ	0xFDF
  4336                           postinc2	equ	0xFDE
  4337                           postdec2	equ	0xFDD
  4338                           fsr2h	equ	0xFDA
  4339                           fsr2l	equ	0xFD9
  4340                           status	equ	0xFD8
  4341                           
  4342 ;; *************** function _memcpy *****************
  4343 ;; Defined at:
  4344 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;  d1              2    0[BANK1 ] PTR void 
  4347 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4348 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4349 ;;		 -> main@msgbuffer(11), 
  4350 ;;  s1              2    2[BANK1 ] PTR const void 
  4351 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4352 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4353 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4354 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4355 ;;		 -> main@uc(13), 
  4356 ;;  n               2    4[BANK1 ] unsigned int 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4359 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4360 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4361 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4362 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4363 ;;		 -> main@uc(13), 
  4364 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4365 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4366 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4367 ;;		 -> main@msgbuffer(11), 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  2    0[BANK1 ] PTR void 
  4370 ;; Registers used:
  4371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4377 ;;      Params:         0       0       6       0       0
  4378 ;;      Locals:         0       0       4       0       0
  4379 ;;      Temps:          0       0       0       0       0
  4380 ;;      Totals:         0       0      10       0       0
  4381 ;;Total ram usage:       10 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:   11
  4384 ;; This function calls:
  4385 ;;		Nothing
  4386 ;; This function is called by:
  4387 ;;		_send_msg
  4388 ;;		_recv_msg
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text24
  4393  001B9A                     __ptext24:
  4394                           	opt stack 0
  4395  001B9A                     _memcpy:
  4396                           	opt stack 15
  4397                           
  4398                           ; BSR set to: 1
  4399                           ;incstack = 0
  4400  001B9A  0101               	movlb	1	; () banked
  4401  001B9C  0101               	movlb	1	; () banked
  4402  001B9E  C189  F18F         	movff	memcpy@s1+1,memcpy@s+1
  4403  001BA2  0101               	movlb	1	; () banked
  4404  001BA4  0101               	movlb	1	; () banked
  4405  001BA6  C188  F18E         	movff	memcpy@s1,memcpy@s
  4406  001BAA  0101               	movlb	1	; () banked
  4407  001BAC  0101               	movlb	1	; () banked
  4408  001BAE  C187  F18D         	movff	memcpy@d1+1,memcpy@d+1
  4409  001BB2  0101               	movlb	1	; () banked
  4410  001BB4  0101               	movlb	1	; () banked
  4411  001BB6  C186  F18C         	movff	memcpy@d1,memcpy@d
  4412  001BBA  D012               	goto	l3979
  4413  001BBC                     l3973:
  4414                           
  4415                           ; BSR set to: 1
  4416  001BBC  C18E  FFD9         	movff	memcpy@s,fsr2l
  4417  001BC0  C18F  FFDA         	movff	memcpy@s+1,fsr2h
  4418  001BC4  C18C  FFE1         	movff	memcpy@d,fsr1l
  4419  001BC8  C18D  FFE2         	movff	memcpy@d+1,fsr1h
  4420  001BCC  CFDF FFE7          	movff	indf2,indf1
  4421                           
  4422                           ; BSR set to: 1
  4423  001BD0  0101               	movlb	1	; () banked
  4424  001BD2  0101               	movlb	1	; () banked
  4425  001BD4  4B8E               	infsnz	memcpy@s& (0+255),f,b
  4426  001BD6  2B8F               	incf	(memcpy@s+1)& (0+255),f,b
  4427                           
  4428                           ; BSR set to: 1
  4429  001BD8  0101               	movlb	1	; () banked
  4430  001BDA  0101               	movlb	1	; () banked
  4431  001BDC  4B8C               	infsnz	memcpy@d& (0+255),f,b
  4432  001BDE  2B8D               	incf	(memcpy@d+1)& (0+255),f,b
  4433  001BE0                     l3979:
  4434                           
  4435                           ; BSR set to: 1
  4436  001BE0  0101               	movlb	1	; () banked
  4437  001BE2  0101               	movlb	1	; () banked
  4438  001BE4  078A               	decf	memcpy@n& (0+255),f,b
  4439  001BE6  A0D8               	btfss	status,0,c
  4440  001BE8  078B               	decf	(memcpy@n+1)& (0+255),f,b
  4441  001BEA  0101               	movlb	1	; () banked
  4442  001BEC  298A               	incf	memcpy@n& (0+255),w,b
  4443  001BEE  B4D8               	btfsc	status,2,c
  4444  001BF0  298B               	incf	(memcpy@n+1)& (0+255),w,b
  4445  001BF2  B4D8               	btfsc	status,2,c
  4446                           
  4447                           ; BSR set to: 1
  4448                           
  4449                           ; BSR set to: 1
  4450                           ;	Return value of _memcpy is never used
  4451  001BF4  0012               	return	
  4452  001BF6  D7E2               	goto	l3973
  4453  001BF8                     __end_of_memcpy:
  4454                           	opt stack 0
  4455                           tblptru	equ	0xFF8
  4456                           tblptrh	equ	0xFF7
  4457                           tblptrl	equ	0xFF6
  4458                           tablat	equ	0xFF5
  4459                           prodh	equ	0xFF4
  4460                           prodl	equ	0xFF3
  4461                           intcon	equ	0xFF2
  4462                           postinc0	equ	0xFEE
  4463                           wreg	equ	0xFE8
  4464                           indf1	equ	0xFE7
  4465                           postdec1	equ	0xFE5
  4466                           fsr1h	equ	0xFE2
  4467                           fsr1l	equ	0xFE1
  4468                           indf2	equ	0xFDF
  4469                           postinc2	equ	0xFDE
  4470                           postdec2	equ	0xFDD
  4471                           fsr2h	equ	0xFDA
  4472                           fsr2l	equ	0xFD9
  4473                           status	equ	0xFD8
  4474                           
  4475 ;; *************** function ___awmod *****************
  4476 ;; Defined at:
  4477 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;  dividend        2    0[BANK1 ] int 
  4480 ;;  divisor         2    2[BANK1 ] int 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  sign            1    6[BANK1 ] unsigned char 
  4483 ;;  counter         1    5[BANK1 ] unsigned char 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  2    0[BANK1 ] int 
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0, prodl
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4493 ;;      Params:         0       0       4       0       0
  4494 ;;      Locals:         0       0       2       0       0
  4495 ;;      Temps:          0       0       1       0       0
  4496 ;;      Totals:         0       0       7       0       0
  4497 ;;Total ram usage:        7 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:   11
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		_send_msg
  4504 ;;		_recv_msg
  4505 ;;		i1_send_msg
  4506 ;;		i2_send_msg
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text25
  4511  000F7E                     __ptext25:
  4512                           	opt stack 0
  4513  000F7E                     ___awmod:
  4514                           	opt stack 15
  4515                           
  4516                           ; BSR set to: 1
  4517                           ;incstack = 0
  4518  000F7E  0101               	movlb	1	; () banked
  4519  000F80  6F8A               	movwf	??___awmod& (0+255),b
  4520  000F82  0E00               	movlw	0
  4521  000F84  0101               	movlb	1	; () banked
  4522  000F86  0101               	movlb	1	; () banked
  4523  000F88  6F8C               	movwf	___awmod@sign& (0+255),b
  4524  000F8A  0101               	movlb	1	; () banked
  4525  000F8C  518A               	movf	??___awmod& (0+255),w,b
  4526                           
  4527                           ; BSR set to: 1
  4528  000F8E  0101               	movlb	1	; () banked
  4529  000F90  0101               	movlb	1	; () banked
  4530  000F92  5187               	movf	(___awmod@dividend+1)& (0+255),w,b
  4531  000F94  0A80               	xorlw	128
  4532  000F96  6EF3               	movwf	prodl,c
  4533  000F98  0E80               	movlw	128
  4534  000F9A  5CF3               	subwf	prodl,w,c
  4535  000F9C  0E00               	movlw	0
  4536  000F9E  B4D8               	btfsc	status,2,c
  4537  000FA0  5D86               	subwf	___awmod@dividend& (0+255),w,b
  4538  000FA2  B0D8               	btfsc	status,0,c
  4539  000FA4  D00F               	goto	l4275
  4540                           
  4541                           ; BSR set to: 1
  4542  000FA6  0101               	movlb	1	; () banked
  4543  000FA8  0101               	movlb	1	; () banked
  4544  000FAA  6D86               	negf	___awmod@dividend& (0+255),b
  4545  000FAC  0101               	movlb	1	; () banked
  4546  000FAE  1F87               	comf	(___awmod@dividend+1)& (0+255),f,b
  4547  000FB0  B0D8               	btfsc	status,0,c
  4548  000FB2  2B87               	incf	(___awmod@dividend+1)& (0+255),f,b
  4549                           
  4550                           ; BSR set to: 1
  4551  000FB4  0101               	movlb	1	; () banked
  4552  000FB6  6F8A               	movwf	??___awmod& (0+255),b
  4553  000FB8  0E01               	movlw	1
  4554  000FBA  0101               	movlb	1	; () banked
  4555  000FBC  0101               	movlb	1	; () banked
  4556  000FBE  6F8C               	movwf	___awmod@sign& (0+255),b
  4557  000FC0  0101               	movlb	1	; () banked
  4558  000FC2  518A               	movf	??___awmod& (0+255),w,b
  4559  000FC4                     l4275:
  4560                           
  4561                           ; BSR set to: 1
  4562  000FC4  0101               	movlb	1	; () banked
  4563  000FC6  0101               	movlb	1	; () banked
  4564  000FC8  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4565  000FCA  0A80               	xorlw	128
  4566  000FCC  6EF3               	movwf	prodl,c
  4567  000FCE  0E80               	movlw	128
  4568  000FD0  5CF3               	subwf	prodl,w,c
  4569  000FD2  0E00               	movlw	0
  4570  000FD4  B4D8               	btfsc	status,2,c
  4571  000FD6  5D88               	subwf	___awmod@divisor& (0+255),w,b
  4572  000FD8  B0D8               	btfsc	status,0,c
  4573  000FDA  D007               	goto	l4279
  4574                           
  4575                           ; BSR set to: 1
  4576  000FDC  0101               	movlb	1	; () banked
  4577  000FDE  0101               	movlb	1	; () banked
  4578  000FE0  6D88               	negf	___awmod@divisor& (0+255),b
  4579  000FE2  0101               	movlb	1	; () banked
  4580  000FE4  1F89               	comf	(___awmod@divisor+1)& (0+255),f,b
  4581  000FE6  B0D8               	btfsc	status,0,c
  4582  000FE8  2B89               	incf	(___awmod@divisor+1)& (0+255),f,b
  4583  000FEA                     l4279:
  4584                           
  4585                           ; BSR set to: 1
  4586  000FEA  0101               	movlb	1	; () banked
  4587  000FEC  0101               	movlb	1	; () banked
  4588  000FEE  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4589  000FF0  1188               	iorwf	___awmod@divisor& (0+255),w,b
  4590  000FF2  B4D8               	btfsc	status,2,c
  4591  000FF4  D03A               	goto	l4295
  4592                           
  4593                           ; BSR set to: 1
  4594  000FF6  0101               	movlb	1	; () banked
  4595  000FF8  6F8A               	movwf	??___awmod& (0+255),b
  4596  000FFA  0E01               	movlw	1
  4597  000FFC  0101               	movlb	1	; () banked
  4598  000FFE  0101               	movlb	1	; () banked
  4599  001000  6F8B               	movwf	___awmod@counter& (0+255),b
  4600  001002  0101               	movlb	1	; () banked
  4601  001004  518A               	movf	??___awmod& (0+255),w,b
  4602  001006  D009               	goto	l4285
  4603  001008                     l4283:
  4604                           
  4605                           ; BSR set to: 1
  4606  001008  0101               	movlb	1	; () banked
  4607  00100A  0101               	movlb	1	; () banked
  4608  00100C  0101               	movlb	1	; () banked
  4609  00100E  90D8               	bcf	status,0,c
  4610  001010  3788               	rlcf	___awmod@divisor& (0+255),f,b
  4611  001012  3789               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4612  001014  0101               	movlb	1	; () banked
  4613  001016  0101               	movlb	1	; () banked
  4614  001018  2B8B               	incf	___awmod@counter& (0+255),f,b
  4615  00101A                     l4285:
  4616                           
  4617                           ; BSR set to: 1
  4618  00101A  0101               	movlb	1	; () banked
  4619  00101C  0101               	movlb	1	; () banked
  4620  00101E  AF89               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4621  001020  D7F3               	goto	l4283
  4622  001022                     l4287:
  4623                           
  4624                           ; BSR set to: 1
  4625  001022  0101               	movlb	1	; () banked
  4626  001024  0101               	movlb	1	; () banked
  4627  001026  5188               	movf	___awmod@divisor& (0+255),w,b
  4628  001028  0101               	movlb	1	; () banked
  4629  00102A  0101               	movlb	1	; () banked
  4630  00102C  5D86               	subwf	___awmod@dividend& (0+255),w,b
  4631  00102E  0101               	movlb	1	; () banked
  4632  001030  0101               	movlb	1	; () banked
  4633  001032  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4634  001034  0101               	movlb	1	; () banked
  4635  001036  0101               	movlb	1	; () banked
  4636  001038  5987               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4637  00103A  A0D8               	btfss	status,0,c
  4638  00103C  D00C               	goto	l4291
  4639                           
  4640                           ; BSR set to: 1
  4641  00103E  0101               	movlb	1	; () banked
  4642  001040  0101               	movlb	1	; () banked
  4643  001042  5188               	movf	___awmod@divisor& (0+255),w,b
  4644  001044  0101               	movlb	1	; () banked
  4645  001046  0101               	movlb	1	; () banked
  4646  001048  5F86               	subwf	___awmod@dividend& (0+255),f,b
  4647  00104A  0101               	movlb	1	; () banked
  4648  00104C  0101               	movlb	1	; () banked
  4649  00104E  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  4650  001050  0101               	movlb	1	; () banked
  4651  001052  0101               	movlb	1	; () banked
  4652  001054  5B87               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4653  001056                     l4291:
  4654                           
  4655                           ; BSR set to: 1
  4656  001056  0101               	movlb	1	; () banked
  4657  001058  0101               	movlb	1	; () banked
  4658  00105A  0101               	movlb	1	; () banked
  4659  00105C  90D8               	bcf	status,0,c
  4660  00105E  3389               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4661  001060  3388               	rrcf	___awmod@divisor& (0+255),f,b
  4662                           
  4663                           ; BSR set to: 1
  4664  001062  0101               	movlb	1	; () banked
  4665  001064  0101               	movlb	1	; () banked
  4666  001066  2F8B               	decfsz	___awmod@counter& (0+255),f,b
  4667  001068  D7DC               	goto	l4287
  4668  00106A                     l4295:
  4669                           
  4670                           ; BSR set to: 1
  4671  00106A  0101               	movlb	1	; () banked
  4672  00106C  0101               	movlb	1	; () banked
  4673  00106E  518C               	movf	___awmod@sign& (0+255),w,b
  4674  001070  B4D8               	btfsc	status,2,c
  4675  001072  D007               	goto	l4299
  4676                           
  4677                           ; BSR set to: 1
  4678  001074  0101               	movlb	1	; () banked
  4679  001076  0101               	movlb	1	; () banked
  4680  001078  6D86               	negf	___awmod@dividend& (0+255),b
  4681  00107A  0101               	movlb	1	; () banked
  4682  00107C  1F87               	comf	(___awmod@dividend+1)& (0+255),f,b
  4683  00107E  B0D8               	btfsc	status,0,c
  4684  001080  2B87               	incf	(___awmod@dividend+1)& (0+255),f,b
  4685  001082                     l4299:
  4686                           
  4687                           ; BSR set to: 1
  4688  001082  C186  F186         	movff	___awmod@dividend,?___awmod
  4689  001086  C187  F187         	movff	___awmod@dividend+1,?___awmod+1
  4690  00108A  0012               	return	
  4691  00108C                     __end_of___awmod:
  4692                           	opt stack 0
  4693                           tblptru	equ	0xFF8
  4694                           tblptrh	equ	0xFF7
  4695                           tblptrl	equ	0xFF6
  4696                           tablat	equ	0xFF5
  4697                           prodh	equ	0xFF4
  4698                           prodl	equ	0xFF3
  4699                           intcon	equ	0xFF2
  4700                           postinc0	equ	0xFEE
  4701                           wreg	equ	0xFE8
  4702                           indf1	equ	0xFE7
  4703                           postdec1	equ	0xFE5
  4704                           fsr1h	equ	0xFE2
  4705                           fsr1l	equ	0xFE1
  4706                           indf2	equ	0xFDF
  4707                           postinc2	equ	0xFDE
  4708                           postdec2	equ	0xFDD
  4709                           fsr2h	equ	0xFDA
  4710                           fsr2l	equ	0xFD9
  4711                           status	equ	0xFD8
  4712                           
  4713 ;; *************** function _SetChanADC *****************
  4714 ;; Defined at:
  4715 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;  channel         1    wreg     unsigned char 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;  channel         1    1[BANK1 ] unsigned char 
  4720 ;; Return value:  Size  Location     Type
  4721 ;;		None               void
  4722 ;; Registers used:
  4723 ;;		wreg, status,2, status,0
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4729 ;;      Params:         0       0       0       0       0
  4730 ;;      Locals:         0       0       1       0       0
  4731 ;;      Temps:          0       0       1       0       0
  4732 ;;      Totals:         0       0       2       0       0
  4733 ;;Total ram usage:        2 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:   11
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_main
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text26
  4744  001FA8                     __ptext26:
  4745                           	opt stack 0
  4746  001FA8                     _SetChanADC:
  4747                           	opt stack 18
  4748                           
  4749                           ; BSR set to: 1
  4750                           ;incstack = 0
  4751                           ;SetChanADC@channel stored from wreg
  4752  001FA8  CFE8 F187          	movff	wreg,SetChanADC@channel
  4753  001FAC  CFC2 F186          	movff	4034,??_SetChanADC	;volatile
  4754  001FB0  0EC3               	movlw	195
  4755  001FB2  0101               	movlb	1	; () banked
  4756  001FB4  1786               	andwf	??_SetChanADC& (0+255),f,b
  4757  001FB6  0101               	movlb	1	; () banked
  4758  001FB8  0101               	movlb	1	; () banked
  4759  001FBA  90D8               	bcf	status,0,c
  4760  001FBC  3187               	rrcf	SetChanADC@channel& (0+255),w,b
  4761  001FBE  0B3C               	andlw	60
  4762  001FC0  0101               	movlb	1	; () banked
  4763  001FC2  1186               	iorwf	??_SetChanADC& (0+255),w,b
  4764  001FC4  6EC2               	movwf	4034,c	;volatile
  4765                           
  4766                           ; BSR set to: 1
  4767  001FC6  0012               	return	
  4768  001FC8                     __end_of_SetChanADC:
  4769                           	opt stack 0
  4770                           tblptru	equ	0xFF8
  4771                           tblptrh	equ	0xFF7
  4772                           tblptrl	equ	0xFF6
  4773                           tablat	equ	0xFF5
  4774                           prodh	equ	0xFF4
  4775                           prodl	equ	0xFF3
  4776                           intcon	equ	0xFF2
  4777                           postinc0	equ	0xFEE
  4778                           wreg	equ	0xFE8
  4779                           indf1	equ	0xFE7
  4780                           postdec1	equ	0xFE5
  4781                           fsr1h	equ	0xFE2
  4782                           fsr1l	equ	0xFE1
  4783                           indf2	equ	0xFDF
  4784                           postinc2	equ	0xFDE
  4785                           postdec2	equ	0xFDD
  4786                           fsr2h	equ	0xFDA
  4787                           fsr2l	equ	0xFD9
  4788                           status	equ	0xFD8
  4789                           
  4790 ;; *************** function _OpenUSART *****************
  4791 ;; Defined at:
  4792 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;  config          1    wreg     unsigned char 
  4795 ;;  spbrg           2    0[BANK1 ] unsigned int 
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;  config          1    5[BANK1 ] unsigned char 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;		None               void
  4800 ;; Registers used:
  4801 ;;		wreg, status,2
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4807 ;;      Params:         0       0       2       0       0
  4808 ;;      Locals:         0       0       1       0       0
  4809 ;;      Temps:          0       0       3       0       0
  4810 ;;      Totals:         0       0       6       0       0
  4811 ;;Total ram usage:        6 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:   11
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_main
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text27
  4822  001668                     __ptext27:
  4823                           	opt stack 0
  4824  001668                     _OpenUSART:
  4825                           	opt stack 18
  4826                           
  4827                           ; BSR set to: 1
  4828                           ;incstack = 0
  4829                           ;OpenUSART@config stored from wreg
  4830  001668  CFE8 F18B          	movff	wreg,OpenUSART@config
  4831  00166C  0E00               	movlw	0
  4832  00166E  6EAC               	movwf	4012,c	;volatile
  4833  001670  0E00               	movlw	0
  4834  001672  6EAB               	movwf	4011,c	;volatile
  4835  001674  0101               	movlb	1	; () banked
  4836  001676  0101               	movlb	1	; () banked
  4837  001678  B18B               	btfsc	OpenUSART@config& (0+255),0,b
  4838                           
  4839                           ; BSR set to: 1
  4840  00167A  88AC               	bsf	4012,4,c	;volatile
  4841                           
  4842                           ; BSR set to: 1
  4843                           
  4844                           ; BSR set to: 1
  4845  00167C  0101               	movlb	1	; () banked
  4846  00167E  0101               	movlb	1	; () banked
  4847  001680  A38B               	btfss	OpenUSART@config& (0+255),1,b
  4848  001682  D002               	goto	l3815
  4849                           
  4850                           ; BSR set to: 1
  4851  001684  8CAC               	bsf	4012,6,c	;volatile
  4852  001686  8CAB               	bsf	4011,6,c	;volatile
  4853  001688                     l3815:
  4854                           
  4855                           ; BSR set to: 1
  4856  001688  0101               	movlb	1	; () banked
  4857  00168A  0101               	movlb	1	; () banked
  4858  00168C  B58B               	btfsc	OpenUSART@config& (0+255),2,b
  4859                           
  4860                           ; BSR set to: 1
  4861  00168E  8EAC               	bsf	4012,7,c	;volatile
  4862                           
  4863                           ; BSR set to: 1
  4864                           
  4865                           ; BSR set to: 1
  4866  001690  0101               	movlb	1	; () banked
  4867  001692  0101               	movlb	1	; () banked
  4868  001694  A78B               	btfss	OpenUSART@config& (0+255),3,b
  4869  001696  D002               	goto	l568
  4870                           
  4871                           ; BSR set to: 1
  4872  001698  88AB               	bsf	4011,4,c	;volatile
  4873  00169A  D001               	goto	l3823
  4874  00169C                     l568:
  4875                           
  4876                           ; BSR set to: 1
  4877  00169C  8AAB               	bsf	4011,5,c	;volatile
  4878  00169E                     l3823:
  4879                           
  4880                           ; BSR set to: 1
  4881  00169E  0101               	movlb	1	; () banked
  4882  0016A0  0101               	movlb	1	; () banked
  4883  0016A2  B98B               	btfsc	OpenUSART@config& (0+255),4,b
  4884                           
  4885                           ; BSR set to: 1
  4886  0016A4  84AC               	bsf	4012,2,c	;volatile
  4887                           
  4888                           ; BSR set to: 1
  4889  0016A6  989E               	bcf	3998,4,c	;volatile
  4890                           
  4891                           ; BSR set to: 1
  4892  0016A8  0101               	movlb	1	; () banked
  4893  0016AA  0101               	movlb	1	; () banked
  4894  0016AC  BB8B               	btfsc	OpenUSART@config& (0+255),5,b
  4895                           
  4896                           ; BSR set to: 1
  4897  0016AE  86AB               	bsf	4011,3,c	;volatile
  4898                           
  4899                           ; BSR set to: 1
  4900                           
  4901                           ; BSR set to: 1
  4902  0016B0  0101               	movlb	1	; () banked
  4903  0016B2  0101               	movlb	1	; () banked
  4904  0016B4  AD8B               	btfss	OpenUSART@config& (0+255),6,b
  4905  0016B6  D002               	goto	l572
  4906                           
  4907                           ; BSR set to: 1
  4908  0016B8  8A9D               	bsf	3997,5,c	;volatile
  4909  0016BA  D001               	goto	l573
  4910  0016BC                     l572:
  4911                           
  4912                           ; BSR set to: 1
  4913  0016BC  9A9D               	bcf	3997,5,c	;volatile
  4914  0016BE                     l573:
  4915                           
  4916                           ; BSR set to: 1
  4917  0016BE  9A9E               	bcf	3998,5,c	;volatile
  4918                           
  4919                           ; BSR set to: 1
  4920  0016C0  0101               	movlb	1	; () banked
  4921  0016C2  0101               	movlb	1	; () banked
  4922  0016C4  AF8B               	btfss	OpenUSART@config& (0+255),7,b
  4923  0016C6  D002               	goto	l574
  4924                           
  4925                           ; BSR set to: 1
  4926  0016C8  889D               	bsf	3997,4,c	;volatile
  4927  0016CA  D001               	goto	l575
  4928  0016CC                     l574:
  4929                           
  4930                           ; BSR set to: 1
  4931  0016CC  989D               	bcf	3997,4,c	;volatile
  4932  0016CE                     l575:
  4933                           
  4934                           ; BSR set to: 1
  4935  0016CE  C186  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4936                           
  4937                           ; BSR set to: 1
  4938  0016D2  0101               	movlb	1	; () banked
  4939  0016D4  C187  F188         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4940  0016D8  C188  F189         	movff	??_OpenUSART,??_OpenUSART+1
  4941  0016DC  0101               	movlb	1	; () banked
  4942  0016DE  6B8A               	clrf	(??_OpenUSART+2)& (0+255),b
  4943  0016E0  0101               	movlb	1	; () banked
  4944  0016E2  5189               	movf	(??_OpenUSART+1)& (0+255),w,b
  4945  0016E4  6EB0               	movwf	4016,c	;volatile
  4946                           
  4947                           ; BSR set to: 1
  4948  0016E6  8AAC               	bsf	4012,5,c	;volatile
  4949                           
  4950                           ; BSR set to: 1
  4951  0016E8  8EAB               	bsf	4011,7,c	;volatile
  4952                           
  4953                           ; BSR set to: 1
  4954  0016EA  9C94               	bcf	3988,6,c	;volatile
  4955                           
  4956                           ; BSR set to: 1
  4957  0016EC  8E94               	bsf	3988,7,c	;volatile
  4958                           
  4959                           ; BSR set to: 1
  4960  0016EE  A8AC               	btfss	4012,4,c	;volatile
  4961  0016F0  0012               	return	
  4962                           
  4963                           ; BSR set to: 1
  4964  0016F2  BEAC               	btfsc	4012,7,c	;volatile
  4965  0016F4  0012               	return	
  4966                           
  4967                           ; BSR set to: 1
  4968  0016F6  8C94               	bsf	3988,6,c	;volatile
  4969  0016F8  0012               	return	
  4970  0016FA                     __end_of_OpenUSART:
  4971                           	opt stack 0
  4972                           tblptru	equ	0xFF8
  4973                           tblptrh	equ	0xFF7
  4974                           tblptrl	equ	0xFF6
  4975                           tablat	equ	0xFF5
  4976                           prodh	equ	0xFF4
  4977                           prodl	equ	0xFF3
  4978                           intcon	equ	0xFF2
  4979                           postinc0	equ	0xFEE
  4980                           wreg	equ	0xFE8
  4981                           indf1	equ	0xFE7
  4982                           postdec1	equ	0xFE5
  4983                           fsr1h	equ	0xFE2
  4984                           fsr1l	equ	0xFE1
  4985                           indf2	equ	0xFDF
  4986                           postinc2	equ	0xFDE
  4987                           postdec2	equ	0xFDD
  4988                           fsr2h	equ	0xFDA
  4989                           fsr2l	equ	0xFD9
  4990                           status	equ	0xFD8
  4991                           
  4992 ;; *************** function _OpenTimer1 *****************
  4993 ;; Defined at:
  4994 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  config          1    wreg     unsigned char 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;  config          1    0[BANK1 ] unsigned char 
  4999 ;; Return value:  Size  Location     Type
  5000 ;;		None               void
  5001 ;; Registers used:
  5002 ;;		wreg, status,2, status,0
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5008 ;;      Params:         0       0       0       0       0
  5009 ;;      Locals:         0       0       1       0       0
  5010 ;;      Temps:          0       0       0       0       0
  5011 ;;      Totals:         0       0       1       0       0
  5012 ;;Total ram usage:        1 bytes
  5013 ;; Hardware stack levels used:    1
  5014 ;; Hardware stack levels required when called:   11
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_main
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text28
  5023  001DE2                     __ptext28:
  5024                           	opt stack 0
  5025  001DE2                     _OpenTimer1:
  5026                           	opt stack 18
  5027                           
  5028                           ; BSR set to: 1
  5029                           ;incstack = 0
  5030                           ;OpenTimer1@config stored from wreg
  5031  001DE2  CFE8 F186          	movff	wreg,OpenTimer1@config
  5032  001DE6  0101               	movlb	1	; () banked
  5033  001DE8  0101               	movlb	1	; () banked
  5034  001DEA  5186               	movf	OpenTimer1@config& (0+255),w,b
  5035  001DEC  0B7E               	andlw	126
  5036  001DEE  6ECD               	movwf	4045,c	;volatile
  5037                           
  5038                           ; BSR set to: 1
  5039  001DF0  0101               	movlb	1	; () banked
  5040  001DF2  0101               	movlb	1	; () banked
  5041  001DF4  AD86               	btfss	OpenTimer1@config& (0+255),6,b
  5042  001DF6  D002               	goto	l531
  5043                           
  5044                           ; BSR set to: 1
  5045  001DF8  8ECD               	bsf	4045,7,c	;volatile
  5046  001DFA  D001               	goto	l3775
  5047  001DFC                     l531:
  5048                           
  5049                           ; BSR set to: 1
  5050  001DFC  9ECD               	bcf	4045,7,c	;volatile
  5051  001DFE                     l3775:
  5052                           
  5053                           ; BSR set to: 1
  5054  001DFE  0E00               	movlw	0
  5055  001E00  6ECF               	movwf	4047,c	;volatile
  5056  001E02  0E00               	movlw	0
  5057  001E04  6ECE               	movwf	4046,c	;volatile
  5058                           
  5059                           ; BSR set to: 1
  5060  001E06  909E               	bcf	3998,0,c	;volatile
  5061                           
  5062                           ; BSR set to: 1
  5063  001E08  0101               	movlb	1	; () banked
  5064  001E0A  0101               	movlb	1	; () banked
  5065  001E0C  AF86               	btfss	OpenTimer1@config& (0+255),7,b
  5066  001E0E  D002               	goto	l533
  5067                           
  5068                           ; BSR set to: 1
  5069  001E10  809D               	bsf	3997,0,c	;volatile
  5070  001E12  D001               	goto	l534
  5071  001E14                     l533:
  5072                           
  5073                           ; BSR set to: 1
  5074  001E14  909D               	bcf	3997,0,c	;volatile
  5075  001E16                     l534:
  5076                           
  5077                           ; BSR set to: 1
  5078  001E16  80CD               	bsf	4045,0,c	;volatile
  5079                           
  5080                           ; BSR set to: 1
  5081  001E18  0012               	return	
  5082  001E1A                     __end_of_OpenTimer1:
  5083                           	opt stack 0
  5084                           tblptru	equ	0xFF8
  5085                           tblptrh	equ	0xFF7
  5086                           tblptrl	equ	0xFF6
  5087                           tablat	equ	0xFF5
  5088                           prodh	equ	0xFF4
  5089                           prodl	equ	0xFF3
  5090                           intcon	equ	0xFF2
  5091                           postinc0	equ	0xFEE
  5092                           wreg	equ	0xFE8
  5093                           indf1	equ	0xFE7
  5094                           postdec1	equ	0xFE5
  5095                           fsr1h	equ	0xFE2
  5096                           fsr1l	equ	0xFE1
  5097                           indf2	equ	0xFDF
  5098                           postinc2	equ	0xFDE
  5099                           postdec2	equ	0xFDD
  5100                           fsr2h	equ	0xFDA
  5101                           fsr2l	equ	0xFD9
  5102                           status	equ	0xFD8
  5103                           
  5104 ;; *************** function _OpenTimer0 *****************
  5105 ;; Defined at:
  5106 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;  config          1    wreg     unsigned char 
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;  config          1    0[BANK1 ] unsigned char 
  5111 ;; Return value:  Size  Location     Type
  5112 ;;		None               void
  5113 ;; Registers used:
  5114 ;;		wreg, status,2, status,0
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5120 ;;      Params:         0       0       0       0       0
  5121 ;;      Locals:         0       0       1       0       0
  5122 ;;      Temps:          0       0       0       0       0
  5123 ;;      Totals:         0       0       1       0       0
  5124 ;;Total ram usage:        1 bytes
  5125 ;; Hardware stack levels used:    1
  5126 ;; Hardware stack levels required when called:   11
  5127 ;; This function calls:
  5128 ;;		Nothing
  5129 ;; This function is called by:
  5130 ;;		_main
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           	psect	text29
  5135  001EEA                     __ptext29:
  5136                           	opt stack 0
  5137  001EEA                     _OpenTimer0:
  5138                           	opt stack 18
  5139                           
  5140                           ; BSR set to: 1
  5141                           ;incstack = 0
  5142                           ;OpenTimer0@config stored from wreg
  5143  001EEA  CFE8 F186          	movff	wreg,OpenTimer0@config
  5144  001EEE  0101               	movlb	1	; () banked
  5145  001EF0  0101               	movlb	1	; () banked
  5146  001EF2  5186               	movf	OpenTimer0@config& (0+255),w,b
  5147  001EF4  0B7F               	andlw	127
  5148  001EF6  6ED5               	movwf	4053,c	;volatile
  5149                           
  5150                           ; BSR set to: 1
  5151  001EF8  0E00               	movlw	0
  5152  001EFA  6ED7               	movwf	4055,c	;volatile
  5153                           
  5154                           ; BSR set to: 1
  5155  001EFC  0E00               	movlw	0
  5156  001EFE  6ED6               	movwf	4054,c	;volatile
  5157                           
  5158                           ; BSR set to: 1
  5159  001F00  94F2               	bcf	intcon,2,c	;volatile
  5160                           
  5161                           ; BSR set to: 1
  5162  001F02  0101               	movlb	1	; () banked
  5163  001F04  0101               	movlb	1	; () banked
  5164  001F06  AF86               	btfss	OpenTimer0@config& (0+255),7,b
  5165  001F08  D002               	goto	l507
  5166                           
  5167                           ; BSR set to: 1
  5168  001F0A  8AF2               	bsf	intcon,5,c	;volatile
  5169  001F0C  D001               	goto	l508
  5170  001F0E                     l507:
  5171                           
  5172                           ; BSR set to: 1
  5173  001F0E  9AF2               	bcf	intcon,5,c	;volatile
  5174  001F10                     l508:
  5175                           
  5176                           ; BSR set to: 1
  5177  001F10  8ED5               	bsf	4053,7,c	;volatile
  5178                           
  5179                           ; BSR set to: 1
  5180  001F12  0012               	return	
  5181  001F14                     __end_of_OpenTimer0:
  5182                           	opt stack 0
  5183                           tblptru	equ	0xFF8
  5184                           tblptrh	equ	0xFF7
  5185                           tblptrl	equ	0xFF6
  5186                           tablat	equ	0xFF5
  5187                           prodh	equ	0xFF4
  5188                           prodl	equ	0xFF3
  5189                           intcon	equ	0xFF2
  5190                           postinc0	equ	0xFEE
  5191                           wreg	equ	0xFE8
  5192                           indf1	equ	0xFE7
  5193                           postdec1	equ	0xFE5
  5194                           fsr1h	equ	0xFE2
  5195                           fsr1l	equ	0xFE1
  5196                           indf2	equ	0xFDF
  5197                           postinc2	equ	0xFDE
  5198                           postdec2	equ	0xFDD
  5199                           fsr2h	equ	0xFDA
  5200                           fsr2l	equ	0xFD9
  5201                           status	equ	0xFD8
  5202                           
  5203 ;; *************** function _OpenADC *****************
  5204 ;; Defined at:
  5205 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;  config          1    wreg     unsigned char 
  5208 ;;  config2         1    0[BANK1 ] unsigned char 
  5209 ;;  portconfig      1    1[BANK1 ] unsigned char 
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;  config          1    4[BANK1 ] unsigned char 
  5212 ;; Return value:  Size  Location     Type
  5213 ;;		None               void
  5214 ;; Registers used:
  5215 ;;		wreg, status,2, status,0
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5221 ;;      Params:         0       0       2       0       0
  5222 ;;      Locals:         0       0       1       0       0
  5223 ;;      Temps:          0       0       2       0       0
  5224 ;;      Totals:         0       0       5       0       0
  5225 ;;Total ram usage:        5 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; Hardware stack levels required when called:   11
  5228 ;; This function calls:
  5229 ;;		Nothing
  5230 ;; This function is called by:
  5231 ;;		_main
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           	psect	text30
  5236  001784                     __ptext30:
  5237                           	opt stack 0
  5238  001784                     _OpenADC:
  5239                           	opt stack 18
  5240                           
  5241                           ; BSR set to: 1
  5242                           ;incstack = 0
  5243                           ;OpenADC@config stored from wreg
  5244  001784  CFE8 F18A          	movff	wreg,OpenADC@config
  5245  001788  0E00               	movlw	0
  5246  00178A  6EC2               	movwf	4034,c	;volatile
  5247  00178C  0E00               	movlw	0
  5248  00178E  6EC0               	movwf	4032,c	;volatile
  5249  001790  0101               	movlb	1	; () banked
  5250  001792  0101               	movlb	1	; () banked
  5251  001794  90D8               	bcf	status,0,c
  5252  001796  3186               	rrcf	OpenADC@config2& (0+255),w,b
  5253  001798  0B3C               	andlw	60
  5254  00179A  6EC2               	movwf	4034,c	;volatile
  5255                           
  5256                           ; BSR set to: 1
  5257  00179C  C186  F188         	movff	OpenADC@config2,??_OpenADC
  5258  0017A0  0101               	movlb	1	; () banked
  5259  0017A2  3B88               	swapf	??_OpenADC& (0+255),f,b
  5260  0017A4  0EF0               	movlw	240
  5261  0017A6  1788               	andwf	??_OpenADC& (0+255),f,b
  5262  0017A8  0E30               	movlw	48
  5263  0017AA  0101               	movlb	1	; () banked
  5264  0017AC  1788               	andwf	??_OpenADC& (0+255),f,b
  5265  0017AE  0101               	movlb	1	; () banked
  5266  0017B0  0101               	movlb	1	; () banked
  5267  0017B2  5187               	movf	OpenADC@portconfig& (0+255),w,b
  5268  0017B4  0B0F               	andlw	15
  5269  0017B6  0101               	movlb	1	; () banked
  5270  0017B8  1188               	iorwf	??_OpenADC& (0+255),w,b
  5271  0017BA  6EC1               	movwf	4033,c	;volatile
  5272                           
  5273                           ; BSR set to: 1
  5274  0017BC  C18A  F188         	movff	OpenADC@config,??_OpenADC
  5275  0017C0  0101               	movlb	1	; () banked
  5276  0017C2  90D8               	bcf	status,0,c
  5277  0017C4  3788               	rlcf	??_OpenADC& (0+255),f,b
  5278  0017C6  0101               	movlb	1	; () banked
  5279  0017C8  90D8               	bcf	status,0,c
  5280  0017CA  3788               	rlcf	??_OpenADC& (0+255),f,b
  5281  0017CC  0E38               	movlw	56
  5282  0017CE  0101               	movlb	1	; () banked
  5283  0017D0  1788               	andwf	??_OpenADC& (0+255),f,b
  5284  0017D2  C18A  F189         	movff	OpenADC@config,??_OpenADC+1
  5285  0017D6  0101               	movlb	1	; () banked
  5286  0017D8  3B89               	swapf	(??_OpenADC+1)& (0+255),f,b
  5287  0017DA  0E0F               	movlw	15
  5288  0017DC  1789               	andwf	(??_OpenADC+1)& (0+255),f,b
  5289  0017DE  0E07               	movlw	7
  5290  0017E0  0101               	movlb	1	; () banked
  5291  0017E2  1789               	andwf	(??_OpenADC+1)& (0+255),f,b
  5292  0017E4  0101               	movlb	1	; () banked
  5293  0017E6  0101               	movlb	1	; () banked
  5294  0017E8  518A               	movf	OpenADC@config& (0+255),w,b
  5295  0017EA  0B80               	andlw	128
  5296  0017EC  0101               	movlb	1	; () banked
  5297  0017EE  1189               	iorwf	(??_OpenADC+1)& (0+255),w,b
  5298  0017F0  0101               	movlb	1	; () banked
  5299  0017F2  1188               	iorwf	??_OpenADC& (0+255),w,b
  5300  0017F4  6EC0               	movwf	4032,c	;volatile
  5301                           
  5302                           ; BSR set to: 1
  5303  0017F6  0101               	movlb	1	; () banked
  5304  0017F8  0101               	movlb	1	; () banked
  5305  0017FA  AF86               	btfss	OpenADC@config2& (0+255),7,b
  5306  0017FC  D003               	goto	l488
  5307                           
  5308                           ; BSR set to: 1
  5309  0017FE  9C9E               	bcf	3998,6,c	;volatile
  5310  001800  8C9D               	bsf	3997,6,c	;volatile
  5311  001802  8CF2               	bsf	intcon,6,c	;volatile
  5312  001804                     l488:
  5313                           
  5314                           ; BSR set to: 1
  5315  001804  80C2               	bsf	4034,0,c	;volatile
  5316                           
  5317                           ; BSR set to: 1
  5318  001806  0012               	return	
  5319  001808                     __end_of_OpenADC:
  5320                           	opt stack 0
  5321                           tblptru	equ	0xFF8
  5322                           tblptrh	equ	0xFF7
  5323                           tblptrl	equ	0xFF6
  5324                           tablat	equ	0xFF5
  5325                           prodh	equ	0xFF4
  5326                           prodl	equ	0xFF3
  5327                           intcon	equ	0xFF2
  5328                           postinc0	equ	0xFEE
  5329                           wreg	equ	0xFE8
  5330                           indf1	equ	0xFE7
  5331                           postdec1	equ	0xFE5
  5332                           fsr1h	equ	0xFE2
  5333                           fsr1l	equ	0xFE1
  5334                           indf2	equ	0xFDF
  5335                           postinc2	equ	0xFDE
  5336                           postdec2	equ	0xFDD
  5337                           fsr2h	equ	0xFDA
  5338                           fsr2l	equ	0xFD9
  5339                           status	equ	0xFD8
  5340                           
  5341 ;; *************** function _InterruptHandlerLow *****************
  5342 ;; Defined at:
  5343 ;;		line 126 in file "../src/interrupts.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;		None
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;		None
  5348 ;; Return value:  Size  Location     Type
  5349 ;;		None               void
  5350 ;; Registers used:
  5351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5357 ;;      Params:         0       0       0       0       0
  5358 ;;      Locals:         0       0       0       0       0
  5359 ;;      Temps:         17       0       0       0       0
  5360 ;;      Totals:        17       0       0       0       0
  5361 ;;Total ram usage:       17 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:   10
  5364 ;; This function calls:
  5365 ;;		_adc_int_handler
  5366 ;;		_timer1_int_handler
  5367 ;;		_uart_recv_int_handler
  5368 ;;		_uart_trans_int_handler
  5369 ;; This function is called by:
  5370 ;;		Interrupt level 1
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374                           	psect	intcodelo
  5375  000018                     __pintcodelo:
  5376                           	opt stack 0
  5377  000018                     _InterruptHandlerLow:
  5378                           	opt stack 15
  5379                           
  5380                           ; BSR set to: 1
  5381                           ;incstack = 0
  5382  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  5383  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  5384  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  5385  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  5386  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  5387  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  5388  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  5389  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  5390  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  5391  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  5392  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  5393  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  5394  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  5395  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  5396  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  5397  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  5398  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  5399                           
  5400                           ;interrupts.c: 128: if(PIR1bits.ADIF){
  5401  00005C  AC9E               	btfss	3998,6,c	;volatile
  5402  00005E  D003               	goto	i1l4447
  5403                           
  5404                           ;interrupts.c: 130: PIR1bits.ADIF = 0;
  5405  000060  9C9E               	bcf	3998,6,c	;volatile
  5406                           
  5407                           ;interrupts.c: 131: adc_int_handler();
  5408  000062  ECC3  F00F         	call	_adc_int_handler	;wreg free
  5409  000066                     i1l4447:
  5410                           
  5411                           ;interrupts.c: 132: }
  5412                           ;interrupts.c: 135: if (PIR1bits.TMR1IF) {
  5413  000066  A09E               	btfss	3998,0,c	;volatile
  5414  000068  D003               	goto	i1l4453
  5415                           
  5416                           ;interrupts.c: 136: PIR1bits.TMR1IF = 0;
  5417  00006A  909E               	bcf	3998,0,c	;volatile
  5418                           
  5419                           ;interrupts.c: 137: timer1_int_handler();
  5420  00006C  EC43  F010         	call	_timer1_int_handler	;wreg free
  5421  000070                     i1l4453:
  5422                           
  5423                           ;interrupts.c: 139: }
  5424                           ;interrupts.c: 141: if (PIR1bits.TXIF) {
  5425  000070  B89E               	btfsc	3998,4,c	;volatile
  5426                           
  5427                           ;interrupts.c: 143: uart_trans_int_handler();
  5428  000072  EC66  F00D         	call	_uart_trans_int_handler	;wreg free
  5429                           
  5430                           ;interrupts.c: 144: }
  5431                           ;interrupts.c: 146: if (PIR1bits.RCIF) {
  5432  000076  AA9E               	btfss	3998,5,c	;volatile
  5433  000078  D003               	goto	i1l57
  5434                           
  5435                           ;interrupts.c: 147: PIR1bits.RCIF = 0;
  5436  00007A  9A9E               	bcf	3998,5,c	;volatile
  5437                           
  5438                           ;interrupts.c: 149: uart_recv_int_handler();
  5439  00007C  EC24  F009         	call	_uart_recv_int_handler	;wreg free
  5440  000080                     i1l57:
  5441  000080  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5442  000084  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5443  000088  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5444  00008C  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5445  000090  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5446  000094  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5447  000098  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5448  00009C  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5449  0000A0  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5450  0000A4  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5451  0000A8  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5452  0000AC  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5453  0000B0  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5454  0000B4  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5455  0000B8  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5456  0000BC  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5457  0000C0  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5458  0000C4  0010               	retfie	
  5459  0000C6                     __end_of_InterruptHandlerLow:
  5460                           	opt stack 0
  5461                           pclatu	equ	0xFFB
  5462                           pclath	equ	0xFFA
  5463                           tblptru	equ	0xFF8
  5464                           tblptrh	equ	0xFF7
  5465                           tblptrl	equ	0xFF6
  5466                           tablat	equ	0xFF5
  5467                           prodh	equ	0xFF4
  5468                           prodl	equ	0xFF3
  5469                           intcon	equ	0xFF2
  5470                           postinc0	equ	0xFEE
  5471                           fsr0h	equ	0xFEA
  5472                           fsr0l	equ	0xFE9
  5473                           wreg	equ	0xFE8
  5474                           indf1	equ	0xFE7
  5475                           postdec1	equ	0xFE5
  5476                           fsr1h	equ	0xFE2
  5477                           fsr1l	equ	0xFE1
  5478                           bsr	equ	0xFE0
  5479                           indf2	equ	0xFDF
  5480                           postinc2	equ	0xFDE
  5481                           postdec2	equ	0xFDD
  5482                           fsr2h	equ	0xFDA
  5483                           fsr2l	equ	0xFD9
  5484                           status	equ	0xFD8
  5485                           
  5486 ;; *************** function _uart_trans_int_handler *****************
  5487 ;; Defined at:
  5488 ;;		line 73 in file "../src/my_uart.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;		None
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;		None
  5493 ;; Return value:  Size  Location     Type
  5494 ;;		None               void
  5495 ;; Registers used:
  5496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5502 ;;      Params:         0       0       0       0       0
  5503 ;;      Locals:         0       0       0       0       0
  5504 ;;      Temps:          1       0       0       0       0
  5505 ;;      Totals:         1       0       0       0       0
  5506 ;;Total ram usage:        1 bytes
  5507 ;; Hardware stack levels used:    1
  5508 ;; Hardware stack levels required when called:    6
  5509 ;; This function calls:
  5510 ;;		Nothing
  5511 ;; This function is called by:
  5512 ;;		_InterruptHandlerLow
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text32
  5517  001ACC                     __ptext32:
  5518                           	opt stack 0
  5519  001ACC                     _uart_trans_int_handler:
  5520                           	opt stack 18
  5521                           
  5522                           ;my_uart.c: 75: if(TXSTAbits.TRMT){
  5523                           
  5524                           ;incstack = 0
  5525  001ACC  A2AC               	btfss	4012,1,c	;volatile
  5526  001ACE  0012               	return	
  5527                           
  5528                           ;my_uart.c: 76: if(uc_ptr->txBufind < uc_ptr->txBuflen){
  5529  001AD0  EE20 F00C          	lfsr	2,12
  5530  001AD4  5052               	movf	_uc_ptr,w,c
  5531  001AD6  26D9               	addwf	fsr2l,f,c
  5532  001AD8  5053               	movf	_uc_ptr+1,w,c
  5533  001ADA  22DA               	addwfc	fsr2h,f,c
  5534  001ADC  50DF               	movf	indf2,w,c
  5535  001ADE  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5536  001AE0  EE20 F00B          	lfsr	2,11
  5537  001AE4  5052               	movf	_uc_ptr,w,c
  5538  001AE6  26D9               	addwf	fsr2l,f,c
  5539  001AE8  5053               	movf	_uc_ptr+1,w,c
  5540  001AEA  22DA               	addwfc	fsr2h,f,c
  5541  001AEC  50DF               	movf	indf2,w,c
  5542  001AEE  5C01               	subwf	??_uart_trans_int_handler,w,c
  5543  001AF0  B0D8               	btfsc	status,0,c
  5544  001AF2  D01E               	goto	i1l428
  5545                           
  5546                           ;my_uart.c: 77: TXREG = uc_ptr->txBuff[uc_ptr->txBufind];
  5547  001AF4  EE20 F00C          	lfsr	2,12
  5548  001AF8  5052               	movf	_uc_ptr,w,c
  5549  001AFA  26D9               	addwf	fsr2l,f,c
  5550  001AFC  5053               	movf	_uc_ptr+1,w,c
  5551  001AFE  22DA               	addwfc	fsr2h,f,c
  5552  001B00  50DF               	movf	indf2,w,c
  5553  001B02  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5554  001B04  5001               	movf	??_uart_trans_int_handler,w,c
  5555  001B06  0D01               	mullw	1
  5556  001B08  0E06               	movlw	6
  5557  001B0A  26F3               	addwf	prodl,f,c
  5558  001B0C  0E00               	movlw	0
  5559  001B0E  22F4               	addwfc	prodh,f,c
  5560  001B10  50F3               	movf	prodl,w,c
  5561  001B12  2452               	addwf	_uc_ptr,w,c
  5562  001B14  6ED9               	movwf	fsr2l,c
  5563  001B16  50F4               	movf	prodh,w,c
  5564  001B18  2053               	addwfc	_uc_ptr+1,w,c
  5565  001B1A  6EDA               	movwf	fsr2h,c
  5566  001B1C  50DF               	movf	indf2,w,c
  5567  001B1E  6EAD               	movwf	4013,c	;volatile
  5568                           
  5569                           ;my_uart.c: 79: uc_ptr->txBufind++;
  5570  001B20  EE20 F00C          	lfsr	2,12
  5571  001B24  5052               	movf	_uc_ptr,w,c
  5572  001B26  26D9               	addwf	fsr2l,f,c
  5573  001B28  5053               	movf	_uc_ptr+1,w,c
  5574  001B2A  22DA               	addwfc	fsr2h,f,c
  5575  001B2C  2ADF               	incf	indf2,f,c
  5576                           
  5577                           ;my_uart.c: 80: } else
  5578  001B2E  0012               	return	
  5579  001B30                     i1l428:
  5580                           
  5581                           ;my_uart.c: 81: PIE1bits.TX1IE = 0;
  5582  001B30  989D               	bcf	3997,4,c	;volatile
  5583  001B32  0012               	return	
  5584  001B34                     __end_of_uart_trans_int_handler:
  5585                           	opt stack 0
  5586                           pclatu	equ	0xFFB
  5587                           pclath	equ	0xFFA
  5588                           tblptru	equ	0xFF8
  5589                           tblptrh	equ	0xFF7
  5590                           tblptrl	equ	0xFF6
  5591                           tablat	equ	0xFF5
  5592                           prodh	equ	0xFF4
  5593                           prodl	equ	0xFF3
  5594                           intcon	equ	0xFF2
  5595                           postinc0	equ	0xFEE
  5596                           fsr0h	equ	0xFEA
  5597                           fsr0l	equ	0xFE9
  5598                           wreg	equ	0xFE8
  5599                           indf1	equ	0xFE7
  5600                           postdec1	equ	0xFE5
  5601                           fsr1h	equ	0xFE2
  5602                           fsr1l	equ	0xFE1
  5603                           bsr	equ	0xFE0
  5604                           indf2	equ	0xFDF
  5605                           postinc2	equ	0xFDE
  5606                           postdec2	equ	0xFDD
  5607                           fsr2h	equ	0xFDA
  5608                           fsr2l	equ	0xFD9
  5609                           status	equ	0xFD8
  5610                           
  5611 ;; *************** function _uart_recv_int_handler *****************
  5612 ;; Defined at:
  5613 ;;		line 11 in file "../src/my_uart.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;		None
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;		None
  5618 ;; Return value:  Size  Location     Type
  5619 ;;		None               void
  5620 ;; Registers used:
  5621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5627 ;;      Params:         0       0       0       0       0
  5628 ;;      Locals:         0       0       0       0       0
  5629 ;;      Temps:          1       0       0       0       0
  5630 ;;      Totals:         1       0       0       0       0
  5631 ;;Total ram usage:        1 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:    9
  5634 ;; This function calls:
  5635 ;;		_ReadUSART
  5636 ;;		_ToMainLow_sendmsg
  5637 ;; This function is called by:
  5638 ;;		_InterruptHandlerLow
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text33
  5643  001248                     __ptext33:
  5644                           	opt stack 0
  5645  001248                     _uart_recv_int_handler:
  5646                           	opt stack 15
  5647                           
  5648                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  5649                           
  5650                           ;incstack = 0
  5651  001248  AA9E               	btfss	3998,5,c	;volatile
  5652  00124A  D04E               	goto	i1l4435
  5653                           
  5654                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5655  00124C  EE20 F005          	lfsr	2,5
  5656  001250  5052               	movf	_uc_ptr,w,c
  5657  001252  26D9               	addwf	fsr2l,f,c
  5658  001254  5053               	movf	_uc_ptr+1,w,c
  5659  001256  22DA               	addwfc	fsr2h,f,c
  5660  001258  50DF               	movf	indf2,w,c
  5661  00125A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5662  00125C  501B               	movf	??_uart_recv_int_handler,w,c
  5663  00125E  0D01               	mullw	1
  5664  001260  50F3               	movf	prodl,w,c
  5665  001262  2452               	addwf	_uc_ptr,w,c
  5666  001264  6ED9               	movwf	fsr2l,c
  5667  001266  50F4               	movf	prodh,w,c
  5668  001268  2053               	addwfc	_uc_ptr+1,w,c
  5669  00126A  6EDA               	movwf	fsr2h,c
  5670  00126C  ECF3  F00F         	call	_ReadUSART	;wreg free
  5671  001270  6EDF               	movwf	indf2,c
  5672                           
  5673                           ;my_uart.c: 25: uc_ptr->buflen++;
  5674  001272  EE20 F005          	lfsr	2,5
  5675  001276  5052               	movf	_uc_ptr,w,c
  5676  001278  26D9               	addwf	fsr2l,f,c
  5677  00127A  5053               	movf	_uc_ptr+1,w,c
  5678  00127C  22DA               	addwfc	fsr2h,f,c
  5679  00127E  2ADF               	incf	indf2,f,c
  5680                           
  5681                           ;my_uart.c: 26: if(UART_timeout > 200){
  5682  001280  0EC9               	movlw	201
  5683  001282  5C4E               	subwf	_UART_timeout,w,c
  5684  001284  0E00               	movlw	0
  5685  001286  584F               	subwfb	_UART_timeout+1,w,c
  5686  001288  A0D8               	btfss	status,0,c
  5687  00128A  D00C               	goto	i1l4429
  5688                           
  5689                           ;my_uart.c: 27: uc_ptr->buflen = 1;
  5690  00128C  EE20 F005          	lfsr	2,5
  5691  001290  5052               	movf	_uc_ptr,w,c
  5692  001292  26D9               	addwf	fsr2l,f,c
  5693  001294  5053               	movf	_uc_ptr+1,w,c
  5694  001296  22DA               	addwfc	fsr2h,f,c
  5695  001298  0E01               	movlw	1
  5696  00129A  6EDF               	movwf	indf2,c
  5697                           
  5698                           ;my_uart.c: 28: UART_timeout = 0;
  5699  00129C  0E00               	movlw	0
  5700  00129E  6E4F               	movwf	_UART_timeout+1,c
  5701  0012A0  0E00               	movlw	0
  5702  0012A2  6E4E               	movwf	_UART_timeout,c
  5703  0012A4                     i1l4429:
  5704                           
  5705                           ;my_uart.c: 29: }
  5706                           ;my_uart.c: 32: if (uc_ptr->buflen == 5) {
  5707  0012A4  EE20 F005          	lfsr	2,5
  5708  0012A8  5052               	movf	_uc_ptr,w,c
  5709  0012AA  26D9               	addwf	fsr2l,f,c
  5710  0012AC  5053               	movf	_uc_ptr+1,w,c
  5711  0012AE  22DA               	addwfc	fsr2h,f,c
  5712  0012B0  0E05               	movlw	5
  5713  0012B2  62DF               	cpfseq	indf2,c
  5714  0012B4  D019               	goto	i1l4435
  5715                           
  5716                           ;my_uart.c: 33: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5717  0012B6  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5718  0012B8  0E1F               	movlw	31
  5719  0012BA  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5720  0012BC  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5721  0012BE  C053  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5722  0012C2  C052  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5723  0012C6  EE20 F005          	lfsr	2,5
  5724  0012CA  5052               	movf	_uc_ptr,w,c
  5725  0012CC  26D9               	addwf	fsr2l,f,c
  5726  0012CE  5053               	movf	_uc_ptr+1,w,c
  5727  0012D0  22DA               	addwfc	fsr2h,f,c
  5728  0012D2  50DF               	movf	indf2,w,c
  5729  0012D4  EC9E  F00F         	call	_ToMainLow_sendmsg
  5730                           
  5731                           ;my_uart.c: 34: uc_ptr->buflen = 0;
  5732  0012D8  EE20 F005          	lfsr	2,5
  5733  0012DC  5052               	movf	_uc_ptr,w,c
  5734  0012DE  26D9               	addwf	fsr2l,f,c
  5735  0012E0  5053               	movf	_uc_ptr+1,w,c
  5736  0012E2  22DA               	addwfc	fsr2h,f,c
  5737  0012E4  0E00               	movlw	0
  5738  0012E6  6EDF               	movwf	indf2,c
  5739  0012E8                     i1l4435:
  5740                           
  5741                           ;my_uart.c: 35: }
  5742                           ;my_uart.c: 36: }
  5743                           ;my_uart.c: 43: if (USART_Status.OVERRUN_ERROR == 1) {
  5744  0012E8  A651               	btfss	_USART_Status,3,c
  5745  0012EA  0012               	return	
  5746                           
  5747                           ;my_uart.c: 48: RCSTAbits.CREN = 0;
  5748  0012EC  98AB               	bcf	4011,4,c	;volatile
  5749                           
  5750                           ;my_uart.c: 49: RCSTAbits.CREN = 1;
  5751  0012EE  88AB               	bsf	4011,4,c	;volatile
  5752                           
  5753                           ;my_uart.c: 50: ToMainLow_sendmsg(0, 30, (void *) 0);
  5754  0012F0  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5755  0012F2  0E1E               	movlw	30
  5756  0012F4  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5757  0012F6  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5758  0012F8  0E00               	movlw	0
  5759  0012FA  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5760  0012FC  0E00               	movlw	0
  5761  0012FE  6E18               	movwf	ToMainLow_sendmsg@data,c
  5762  001300  0E00               	movlw	0
  5763  001302  EC9E  F00F         	call	_ToMainLow_sendmsg
  5764  001306  0012               	return	
  5765  001308                     __end_of_uart_recv_int_handler:
  5766                           	opt stack 0
  5767                           pclatu	equ	0xFFB
  5768                           pclath	equ	0xFFA
  5769                           tblptru	equ	0xFF8
  5770                           tblptrh	equ	0xFF7
  5771                           tblptrl	equ	0xFF6
  5772                           tablat	equ	0xFF5
  5773                           prodh	equ	0xFF4
  5774                           prodl	equ	0xFF3
  5775                           intcon	equ	0xFF2
  5776                           postinc0	equ	0xFEE
  5777                           fsr0h	equ	0xFEA
  5778                           fsr0l	equ	0xFE9
  5779                           wreg	equ	0xFE8
  5780                           indf1	equ	0xFE7
  5781                           postdec1	equ	0xFE5
  5782                           fsr1h	equ	0xFE2
  5783                           fsr1l	equ	0xFE1
  5784                           bsr	equ	0xFE0
  5785                           indf2	equ	0xFDF
  5786                           postinc2	equ	0xFDE
  5787                           postdec2	equ	0xFDD
  5788                           fsr2h	equ	0xFDA
  5789                           fsr2l	equ	0xFD9
  5790                           status	equ	0xFD8
  5791                           
  5792 ;; *************** function _ToMainLow_sendmsg *****************
  5793 ;; Defined at:
  5794 ;;		line 103 in file "../src/messages.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;  length          1    wreg     unsigned char 
  5797 ;;  msgtype         1   22[COMRAM] unsigned char 
  5798 ;;  data            2   23[COMRAM] PTR void 
  5799 ;;		 -> NULL(0), main@uc(13), 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;  length          1   25[COMRAM] unsigned char 
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  1    wreg      char 
  5804 ;; Registers used:
  5805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5811 ;;      Params:         3       0       0       0       0
  5812 ;;      Locals:         1       0       0       0       0
  5813 ;;      Temps:          0       0       0       0       0
  5814 ;;      Totals:         4       0       0       0       0
  5815 ;;Total ram usage:        4 bytes
  5816 ;; Hardware stack levels used:    1
  5817 ;; Hardware stack levels required when called:    8
  5818 ;; This function calls:
  5819 ;;		i1_send_msg
  5820 ;; This function is called by:
  5821 ;;		_uart_recv_int_handler
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           	psect	text34
  5826  001F3C                     __ptext34:
  5827                           	opt stack 0
  5828  001F3C                     _ToMainLow_sendmsg:
  5829                           	opt stack 15
  5830                           
  5831                           ;incstack = 0
  5832                           ;ToMainLow_sendmsg@length stored from wreg
  5833  001F3C  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5834                           
  5835                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5836                           ;	Return value of _ToMainLow_sendmsg is never used
  5837  001F40  0101               	movlb	1	; () banked
  5838  001F42  0E01               	movlw	high _ToMainLow_MQ
  5839  001F44  6E0C               	movwf	i1send_msg@qptr+1,c
  5840  001F46  0101               	movlb	1	; () banked
  5841  001F48  0E43               	movlw	low _ToMainLow_MQ
  5842  001F4A  6E0B               	movwf	i1send_msg@qptr,c
  5843  001F4C  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5844  001F50  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5845  001F54  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5846  001F58  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5847  001F5C  EC84  F009         	call	i1_send_msg	;wreg free
  5848  001F60  0012               	return	
  5849  001F62                     __end_of_ToMainLow_sendmsg:
  5850                           	opt stack 0
  5851                           pclatu	equ	0xFFB
  5852                           pclath	equ	0xFFA
  5853                           tblptru	equ	0xFF8
  5854                           tblptrh	equ	0xFF7
  5855                           tblptrl	equ	0xFF6
  5856                           tablat	equ	0xFF5
  5857                           prodh	equ	0xFF4
  5858                           prodl	equ	0xFF3
  5859                           intcon	equ	0xFF2
  5860                           postinc0	equ	0xFEE
  5861                           fsr0h	equ	0xFEA
  5862                           fsr0l	equ	0xFE9
  5863                           wreg	equ	0xFE8
  5864                           indf1	equ	0xFE7
  5865                           postdec1	equ	0xFE5
  5866                           fsr1h	equ	0xFE2
  5867                           fsr1l	equ	0xFE1
  5868                           bsr	equ	0xFE0
  5869                           indf2	equ	0xFDF
  5870                           postinc2	equ	0xFDE
  5871                           postdec2	equ	0xFDD
  5872                           fsr2h	equ	0xFDA
  5873                           fsr2l	equ	0xFD9
  5874                           status	equ	0xFD8
  5875                           
  5876 ;; *************** function i1_send_msg *****************
  5877 ;; Defined at:
  5878 ;;		line 24 in file "../src/messages.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5881 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5882 ;;  length          1   12[COMRAM] unsigned char 
  5883 ;;  msgtype         1   13[COMRAM] unsigned char 
  5884 ;;  data            2   14[COMRAM] PTR void 
  5885 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  5886 ;;		 -> main@uc(13), 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5889 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  5890 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5891 ;;  send_msg        2   17[COMRAM] unsigned int 
  5892 ;;  send_msg        1   19[COMRAM] unsigned char 
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  1    wreg      char 
  5895 ;; Registers used:
  5896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5902 ;;      Params:         6       0       0       0       0
  5903 ;;      Locals:         5       0       0       0       0
  5904 ;;      Temps:          1       0       0       0       0
  5905 ;;      Totals:        12       0       0       0       0
  5906 ;;Total ram usage:       12 bytes
  5907 ;; Hardware stack levels used:    1
  5908 ;; Hardware stack levels required when called:    7
  5909 ;; This function calls:
  5910 ;;		i1___awmod
  5911 ;;		i1_memcpy
  5912 ;; This function is called by:
  5913 ;;		_ToMainLow_sendmsg
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           	psect	text35
  5918  001308                     __ptext35:
  5919                           	opt stack 0
  5920  001308                     i1_send_msg:
  5921                           	opt stack 15
  5922                           
  5923                           ;messages.c: 25: unsigned char slot;
  5924                           ;messages.c: 27: msg *qmsg;
  5925                           ;messages.c: 28: size_t tlength = length;
  5926                           
  5927                           ;incstack = 0
  5928  001308  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5929  00130C  6A13               	clrf	i1send_msg@tlength+1,c
  5930                           
  5931                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5932  00130E  EE20 F041          	lfsr	2,65
  5933  001312  500B               	movf	i1send_msg@qptr,w,c
  5934  001314  26D9               	addwf	fsr2l,f,c
  5935  001316  500C               	movf	i1send_msg@qptr+1,w,c
  5936  001318  22DA               	addwfc	fsr2h,f,c
  5937  00131A  50DF               	movf	indf2,w,c
  5938  00131C  6E14               	movwf	i1send_msg@slot,c
  5939                           
  5940                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5941  00131E  5014               	movf	i1send_msg@slot,w,c
  5942  001320  0D0D               	mullw	13
  5943  001322  50F3               	movf	prodl,w,c
  5944  001324  240B               	addwf	i1send_msg@qptr,w,c
  5945  001326  6E15               	movwf	i1send_msg@qmsg,c
  5946  001328  50F4               	movf	prodh,w,c
  5947  00132A  200C               	addwfc	i1send_msg@qptr+1,w,c
  5948  00132C  6E16               	movwf	i1send_msg@qmsg+1,c
  5949                           
  5950                           ;messages.c: 41: if (qmsg->full != 0) {
  5951  00132E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5952  001332  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5953  001336  50DF               	movf	indf2,w,c
  5954  001338  B4D8               	btfsc	status,2,c
  5955  00133A  D002               	goto	i1l4401
  5956                           
  5957                           ;messages.c: 42: return (-1);
  5958  00133C  0EFF               	movlw	255
  5959  00133E  0012               	return	
  5960  001340                     i1l4401:
  5961                           
  5962                           ;messages.c: 43: }
  5963                           ;messages.c: 46: qmsg->length = length;
  5964  001340  EE20 F001          	lfsr	2,1
  5965  001344  5015               	movf	i1send_msg@qmsg,w,c
  5966  001346  26D9               	addwf	fsr2l,f,c
  5967  001348  5016               	movf	i1send_msg@qmsg+1,w,c
  5968  00134A  22DA               	addwfc	fsr2h,f,c
  5969  00134C  C00D  FFDF         	movff	i1send_msg@length,indf2
  5970                           
  5971                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5972  001350  EE20 F002          	lfsr	2,2
  5973  001354  5015               	movf	i1send_msg@qmsg,w,c
  5974  001356  26D9               	addwf	fsr2l,f,c
  5975  001358  5016               	movf	i1send_msg@qmsg+1,w,c
  5976  00135A  22DA               	addwfc	fsr2h,f,c
  5977  00135C  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5978                           
  5979                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5980  001360  0E03               	movlw	3
  5981  001362  2415               	addwf	i1send_msg@qmsg,w,c
  5982  001364  6E01               	movwf	i1memcpy@d1,c
  5983  001366  0E00               	movlw	0
  5984  001368  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5985  00136A  6E02               	movwf	i1memcpy@d1+1,c
  5986  00136C  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5987  001370  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5988  001374  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5989  001378  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5990  00137C  ECD1  F00E         	call	i1_memcpy	;wreg free
  5991                           
  5992                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  5993  001380  EE20 F041          	lfsr	2,65
  5994  001384  500B               	movf	i1send_msg@qptr,w,c
  5995  001386  26D9               	addwf	fsr2l,f,c
  5996  001388  500C               	movf	i1send_msg@qptr+1,w,c
  5997  00138A  22DA               	addwfc	fsr2h,f,c
  5998  00138C  EE10 F041          	lfsr	1,65
  5999  001390  500B               	movf	i1send_msg@qptr,w,c
  6000  001392  26E1               	addwf	fsr1l,f,c
  6001  001394  500C               	movf	i1send_msg@qptr+1,w,c
  6002  001396  22E2               	addwfc	fsr1h,f,c
  6003  001398  50E7               	movf	indf1,w,c
  6004  00139A  6E11               	movwf	??i1_send_msg& (0+255),c
  6005  00139C  0E01               	movlw	1
  6006  00139E  2411               	addwf	??i1_send_msg,w,c
  6007  0013A0  6E01               	movwf	i1___awmod@dividend,c
  6008  0013A2  6A02               	clrf	i1___awmod@dividend+1,c
  6009  0013A4  0E00               	movlw	0
  6010  0013A6  2202               	addwfc	i1___awmod@dividend+1,f,c
  6011  0013A8  0E00               	movlw	0
  6012  0013AA  6E04               	movwf	i1___awmod@divisor+1,c
  6013  0013AC  0E05               	movlw	5
  6014  0013AE  6E03               	movwf	i1___awmod@divisor,c
  6015  0013B0  EC98  F00A         	call	i1___awmod	;wreg free
  6016  0013B4  5001               	movf	?i1___awmod,w,c
  6017  0013B6  6EDF               	movwf	indf2,c
  6018                           
  6019                           ;messages.c: 59: qmsg->full = 1;
  6020  0013B8  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6021  0013BC  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6022  0013C0  0E01               	movlw	1
  6023  0013C2  6EDF               	movwf	indf2,c
  6024                           
  6025                           ;messages.c: 60: return (1);
  6026  0013C4  0E01               	movlw	1
  6027  0013C6  0012               	return	
  6028  0013C8                     __end_ofi1_send_msg:
  6029                           	opt stack 0
  6030                           pclatu	equ	0xFFB
  6031                           pclath	equ	0xFFA
  6032                           tblptru	equ	0xFF8
  6033                           tblptrh	equ	0xFF7
  6034                           tblptrl	equ	0xFF6
  6035                           tablat	equ	0xFF5
  6036                           prodh	equ	0xFF4
  6037                           prodl	equ	0xFF3
  6038                           intcon	equ	0xFF2
  6039                           postinc0	equ	0xFEE
  6040                           fsr0h	equ	0xFEA
  6041                           fsr0l	equ	0xFE9
  6042                           wreg	equ	0xFE8
  6043                           indf1	equ	0xFE7
  6044                           postdec1	equ	0xFE5
  6045                           fsr1h	equ	0xFE2
  6046                           fsr1l	equ	0xFE1
  6047                           bsr	equ	0xFE0
  6048                           indf2	equ	0xFDF
  6049                           postinc2	equ	0xFDE
  6050                           postdec2	equ	0xFDD
  6051                           fsr2h	equ	0xFDA
  6052                           fsr2l	equ	0xFD9
  6053                           status	equ	0xFD8
  6054                           
  6055 ;; *************** function i1_memcpy *****************
  6056 ;; Defined at:
  6057 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;  d1              2    0[COMRAM] PTR void 
  6060 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6061 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6062 ;;		 -> main@msgbuffer(11), 
  6063 ;;  s1              2    2[COMRAM] PTR const void 
  6064 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6065 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6066 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6067 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6068 ;;		 -> main@uc(13), 
  6069 ;;  n               2    4[COMRAM] unsigned int 
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6072 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6073 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6074 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6075 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6076 ;;		 -> main@uc(13), 
  6077 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6078 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6079 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6080 ;;		 -> main@msgbuffer(11), 
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  2    0[COMRAM] PTR void 
  6083 ;; Registers used:
  6084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6090 ;;      Params:         6       0       0       0       0
  6091 ;;      Locals:         4       0       0       0       0
  6092 ;;      Temps:          0       0       0       0       0
  6093 ;;      Totals:        10       0       0       0       0
  6094 ;;Total ram usage:       10 bytes
  6095 ;; Hardware stack levels used:    1
  6096 ;; Hardware stack levels required when called:    6
  6097 ;; This function calls:
  6098 ;;		Nothing
  6099 ;; This function is called by:
  6100 ;;		i1_send_msg
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text36
  6105  001DA2                     __ptext36:
  6106                           	opt stack 0
  6107  001DA2                     i1_memcpy:
  6108                           	opt stack 15
  6109                           
  6110                           ;incstack = 0
  6111  001DA2  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6112  001DA6  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6113  001DAA  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6114  001DAE  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6115  001DB2  D00E               	goto	i1l3413
  6116  001DB4                     i1l3407:
  6117  001DB4  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6118  001DB8  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6119  001DBC  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6120  001DC0  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6121  001DC4  CFDF FFE7          	movff	indf2,indf1
  6122  001DC8  4A09               	infsnz	i1memcpy@s,f,c
  6123  001DCA  2A0A               	incf	i1memcpy@s+1,f,c
  6124  001DCC  4A07               	infsnz	i1memcpy@d,f,c
  6125  001DCE  2A08               	incf	i1memcpy@d+1,f,c
  6126  001DD0                     i1l3413:
  6127  001DD0  0605               	decf	i1memcpy@n,f,c
  6128  001DD2  A0D8               	btfss	status,0,c
  6129  001DD4  0606               	decf	i1memcpy@n+1,f,c
  6130  001DD6  2805               	incf	i1memcpy@n& (0+255),w,c
  6131  001DD8  B4D8               	btfsc	status,2,c
  6132  001DDA  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6133  001DDC  B4D8               	btfsc	status,2,c
  6134                           
  6135                           ;	Return value of i1_memcpy is never used
  6136  001DDE  0012               	return	
  6137  001DE0  D7E9               	goto	i1l3407
  6138  001DE2                     __end_ofi1_memcpy:
  6139                           	opt stack 0
  6140                           pclatu	equ	0xFFB
  6141                           pclath	equ	0xFFA
  6142                           tblptru	equ	0xFF8
  6143                           tblptrh	equ	0xFF7
  6144                           tblptrl	equ	0xFF6
  6145                           tablat	equ	0xFF5
  6146                           prodh	equ	0xFF4
  6147                           prodl	equ	0xFF3
  6148                           intcon	equ	0xFF2
  6149                           postinc0	equ	0xFEE
  6150                           fsr0h	equ	0xFEA
  6151                           fsr0l	equ	0xFE9
  6152                           wreg	equ	0xFE8
  6153                           indf1	equ	0xFE7
  6154                           postdec1	equ	0xFE5
  6155                           fsr1h	equ	0xFE2
  6156                           fsr1l	equ	0xFE1
  6157                           bsr	equ	0xFE0
  6158                           indf2	equ	0xFDF
  6159                           postinc2	equ	0xFDE
  6160                           postdec2	equ	0xFDD
  6161                           fsr2h	equ	0xFDA
  6162                           fsr2l	equ	0xFD9
  6163                           status	equ	0xFD8
  6164                           
  6165 ;; *************** function i1___awmod *****************
  6166 ;; Defined at:
  6167 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  dividend        2    0[COMRAM] int 
  6170 ;;  divisor         2    2[COMRAM] int 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;  __awmod         1    6[COMRAM] unsigned char 
  6173 ;;  __awmod         1    5[COMRAM] unsigned char 
  6174 ;; Return value:  Size  Location     Type
  6175 ;;                  2    0[COMRAM] int 
  6176 ;; Registers used:
  6177 ;;		wreg, status,2, status,0, prodl
  6178 ;; Tracked objects:
  6179 ;;		On entry : 0/0
  6180 ;;		On exit  : 0/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6183 ;;      Params:         4       0       0       0       0
  6184 ;;      Locals:         2       0       0       0       0
  6185 ;;      Temps:          1       0       0       0       0
  6186 ;;      Totals:         7       0       0       0       0
  6187 ;;Total ram usage:        7 bytes
  6188 ;; Hardware stack levels used:    1
  6189 ;; Hardware stack levels required when called:    6
  6190 ;; This function calls:
  6191 ;;		Nothing
  6192 ;; This function is called by:
  6193 ;;		i1_send_msg
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           	psect	text37
  6198  001530                     __ptext37:
  6199                           	opt stack 0
  6200  001530                     i1___awmod:
  6201                           	opt stack 15
  6202                           
  6203                           ;incstack = 0
  6204  001530  6E05               	movwf	??i1___awmod& (0+255),c
  6205  001532  0E00               	movlw	0
  6206  001534  6E07               	movwf	i1___awmod@sign,c
  6207  001536  5005               	movf	??i1___awmod& (0+255),w,c
  6208  001538  5002               	movf	i1___awmod@dividend+1,w,c
  6209  00153A  0A80               	xorlw	128
  6210  00153C  6EF3               	movwf	prodl,c
  6211  00153E  0E80               	movlw	128
  6212  001540  5CF3               	subwf	prodl,w,c
  6213  001542  0E00               	movlw	0
  6214  001544  B4D8               	btfsc	status,2,c
  6215  001546  5C01               	subwf	i1___awmod@dividend,w,c
  6216  001548  B0D8               	btfsc	status,0,c
  6217  00154A  D008               	goto	i1l3433
  6218  00154C  6C01               	negf	i1___awmod@dividend,c
  6219  00154E  1E02               	comf	i1___awmod@dividend+1,f,c
  6220  001550  B0D8               	btfsc	status,0,c
  6221  001552  2A02               	incf	i1___awmod@dividend+1,f,c
  6222  001554  6E05               	movwf	??i1___awmod& (0+255),c
  6223  001556  0E01               	movlw	1
  6224  001558  6E07               	movwf	i1___awmod@sign,c
  6225  00155A  5005               	movf	??i1___awmod& (0+255),w,c
  6226  00155C                     i1l3433:
  6227  00155C  5004               	movf	i1___awmod@divisor+1,w,c
  6228  00155E  0A80               	xorlw	128
  6229  001560  6EF3               	movwf	prodl,c
  6230  001562  0E80               	movlw	128
  6231  001564  5CF3               	subwf	prodl,w,c
  6232  001566  0E00               	movlw	0
  6233  001568  B4D8               	btfsc	status,2,c
  6234  00156A  5C03               	subwf	i1___awmod@divisor,w,c
  6235  00156C  B0D8               	btfsc	status,0,c
  6236  00156E  D004               	goto	i1l3437
  6237  001570  6C03               	negf	i1___awmod@divisor,c
  6238  001572  1E04               	comf	i1___awmod@divisor+1,f,c
  6239  001574  B0D8               	btfsc	status,0,c
  6240  001576  2A04               	incf	i1___awmod@divisor+1,f,c
  6241  001578                     i1l3437:
  6242  001578  5004               	movf	i1___awmod@divisor+1,w,c
  6243  00157A  1003               	iorwf	i1___awmod@divisor,w,c
  6244  00157C  B4D8               	btfsc	status,2,c
  6245  00157E  D01A               	goto	i1l3453
  6246  001580  6E05               	movwf	??i1___awmod& (0+255),c
  6247  001582  0E01               	movlw	1
  6248  001584  6E06               	movwf	i1___awmod@counter,c
  6249  001586  5005               	movf	??i1___awmod& (0+255),w,c
  6250  001588  D004               	goto	i1l3443
  6251  00158A                     i1l3441:
  6252  00158A  90D8               	bcf	status,0,c
  6253  00158C  3603               	rlcf	i1___awmod@divisor,f,c
  6254  00158E  3604               	rlcf	i1___awmod@divisor+1,f,c
  6255  001590  2A06               	incf	i1___awmod@counter,f,c
  6256  001592                     i1l3443:
  6257  001592  AE04               	btfss	i1___awmod@divisor+1,7,c
  6258  001594  D7FA               	goto	i1l3441
  6259  001596                     i1l3445:
  6260  001596  5003               	movf	i1___awmod@divisor,w,c
  6261  001598  5C01               	subwf	i1___awmod@dividend,w,c
  6262  00159A  5004               	movf	i1___awmod@divisor+1,w,c
  6263  00159C  5802               	subwfb	i1___awmod@dividend+1,w,c
  6264  00159E  A0D8               	btfss	status,0,c
  6265  0015A0  D004               	goto	i1l3449
  6266  0015A2  5003               	movf	i1___awmod@divisor,w,c
  6267  0015A4  5E01               	subwf	i1___awmod@dividend,f,c
  6268  0015A6  5004               	movf	i1___awmod@divisor+1,w,c
  6269  0015A8  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6270  0015AA                     i1l3449:
  6271  0015AA  90D8               	bcf	status,0,c
  6272  0015AC  3204               	rrcf	i1___awmod@divisor+1,f,c
  6273  0015AE  3203               	rrcf	i1___awmod@divisor,f,c
  6274  0015B0  2E06               	decfsz	i1___awmod@counter,f,c
  6275  0015B2  D7F1               	goto	i1l3445
  6276  0015B4                     i1l3453:
  6277  0015B4  5007               	movf	i1___awmod@sign,w,c
  6278  0015B6  B4D8               	btfsc	status,2,c
  6279  0015B8  D004               	goto	i1l3457
  6280  0015BA  6C01               	negf	i1___awmod@dividend,c
  6281  0015BC  1E02               	comf	i1___awmod@dividend+1,f,c
  6282  0015BE  B0D8               	btfsc	status,0,c
  6283  0015C0  2A02               	incf	i1___awmod@dividend+1,f,c
  6284  0015C2                     i1l3457:
  6285  0015C2  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6286  0015C6  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6287  0015CA  0012               	return	
  6288  0015CC                     __end_ofi1___awmod:
  6289                           	opt stack 0
  6290                           pclatu	equ	0xFFB
  6291                           pclath	equ	0xFFA
  6292                           tblptru	equ	0xFF8
  6293                           tblptrh	equ	0xFF7
  6294                           tblptrl	equ	0xFF6
  6295                           tablat	equ	0xFF5
  6296                           prodh	equ	0xFF4
  6297                           prodl	equ	0xFF3
  6298                           intcon	equ	0xFF2
  6299                           postinc0	equ	0xFEE
  6300                           fsr0h	equ	0xFEA
  6301                           fsr0l	equ	0xFE9
  6302                           wreg	equ	0xFE8
  6303                           indf1	equ	0xFE7
  6304                           postdec1	equ	0xFE5
  6305                           fsr1h	equ	0xFE2
  6306                           fsr1l	equ	0xFE1
  6307                           bsr	equ	0xFE0
  6308                           indf2	equ	0xFDF
  6309                           postinc2	equ	0xFDE
  6310                           postdec2	equ	0xFDD
  6311                           fsr2h	equ	0xFDA
  6312                           fsr2l	equ	0xFD9
  6313                           status	equ	0xFD8
  6314                           
  6315 ;; *************** function _ReadUSART *****************
  6316 ;; Defined at:
  6317 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;		None
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;  data            1    0[COMRAM] unsigned char 
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  1    wreg      unsigned char 
  6324 ;; Registers used:
  6325 ;;		wreg, status,2, status,0
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6331 ;;      Params:         0       0       0       0       0
  6332 ;;      Locals:         1       0       0       0       0
  6333 ;;      Temps:          0       0       0       0       0
  6334 ;;      Totals:         1       0       0       0       0
  6335 ;;Total ram usage:        1 bytes
  6336 ;; Hardware stack levels used:    1
  6337 ;; Hardware stack levels required when called:    6
  6338 ;; This function calls:
  6339 ;;		Nothing
  6340 ;; This function is called by:
  6341 ;;		_uart_recv_int_handler
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           	psect	text38
  6346  001FE6                     __ptext38:
  6347                           	opt stack 0
  6348  001FE6                     _ReadUSART:
  6349                           	opt stack 17
  6350                           
  6351                           ;incstack = 0
  6352  001FE6  0EF2               	movlw	242
  6353  001FE8  1651               	andwf	_USART_Status,f,c
  6354  001FEA  ACAB               	btfss	4011,6,c	;volatile
  6355  001FEC  D003               	goto	i1l586
  6356  001FEE  9051               	bcf	_USART_Status,0,c
  6357  001FF0  B0AB               	btfsc	4011,0,c	;volatile
  6358  001FF2  8051               	bsf	_USART_Status,0,c
  6359  001FF4                     i1l586:
  6360  001FF4  B4AB               	btfsc	4011,2,c	;volatile
  6361  001FF6  8451               	bsf	_USART_Status,2,c
  6362  001FF8  B2AB               	btfsc	4011,1,c	;volatile
  6363  001FFA  8651               	bsf	_USART_Status,3,c
  6364  001FFC  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6365  002000  5001               	movf	ReadUSART@data,w,c
  6366  002002  0012               	return	
  6367  002004                     __end_of_ReadUSART:
  6368                           	opt stack 0
  6369                           pclatu	equ	0xFFB
  6370                           pclath	equ	0xFFA
  6371                           tblptru	equ	0xFF8
  6372                           tblptrh	equ	0xFF7
  6373                           tblptrl	equ	0xFF6
  6374                           tablat	equ	0xFF5
  6375                           prodh	equ	0xFF4
  6376                           prodl	equ	0xFF3
  6377                           intcon	equ	0xFF2
  6378                           postinc0	equ	0xFEE
  6379                           fsr0h	equ	0xFEA
  6380                           fsr0l	equ	0xFE9
  6381                           wreg	equ	0xFE8
  6382                           indf1	equ	0xFE7
  6383                           postdec1	equ	0xFE5
  6384                           fsr1h	equ	0xFE2
  6385                           fsr1l	equ	0xFE1
  6386                           bsr	equ	0xFE0
  6387                           indf2	equ	0xFDF
  6388                           postinc2	equ	0xFDE
  6389                           postdec2	equ	0xFDD
  6390                           fsr2h	equ	0xFDA
  6391                           fsr2l	equ	0xFD9
  6392                           status	equ	0xFD8
  6393                           
  6394 ;; *************** function _timer1_int_handler *****************
  6395 ;; Defined at:
  6396 ;;		line 46 in file "../src/user_interrupts.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;		None
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;		None
  6401 ;; Return value:  Size  Location     Type
  6402 ;;		None               void
  6403 ;; Registers used:
  6404 ;;		wreg, status,2, cstack
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6410 ;;      Params:         0       0       0       0       0
  6411 ;;      Locals:         0       0       0       0       0
  6412 ;;      Temps:          0       0       0       0       0
  6413 ;;      Totals:         0       0       0       0       0
  6414 ;;Total ram usage:        0 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:    7
  6417 ;; This function calls:
  6418 ;;		_WriteTimer1
  6419 ;; This function is called by:
  6420 ;;		_InterruptHandlerLow
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text39
  6425  002086                     __ptext39:
  6426                           	opt stack 0
  6427  002086                     _timer1_int_handler:
  6428                           	opt stack 17
  6429                           
  6430                           ;user_interrupts.c: 58: WriteTimer1(0);
  6431                           
  6432                           ;incstack = 0
  6433  002086  0E00               	movlw	0
  6434  002088  6E02               	movwf	WriteTimer1@timer1+1,c
  6435  00208A  0E00               	movlw	0
  6436  00208C  6E01               	movwf	WriteTimer1@timer1,c
  6437  00208E  EC28  F010         	call	_WriteTimer1	;wreg free
  6438  002092  0012               	return	
  6439  002094                     __end_of_timer1_int_handler:
  6440                           	opt stack 0
  6441                           pclatu	equ	0xFFB
  6442                           pclath	equ	0xFFA
  6443                           tblptru	equ	0xFF8
  6444                           tblptrh	equ	0xFF7
  6445                           tblptrl	equ	0xFF6
  6446                           tablat	equ	0xFF5
  6447                           prodh	equ	0xFF4
  6448                           prodl	equ	0xFF3
  6449                           intcon	equ	0xFF2
  6450                           postinc0	equ	0xFEE
  6451                           fsr0h	equ	0xFEA
  6452                           fsr0l	equ	0xFE9
  6453                           wreg	equ	0xFE8
  6454                           indf1	equ	0xFE7
  6455                           postdec1	equ	0xFE5
  6456                           fsr1h	equ	0xFE2
  6457                           fsr1l	equ	0xFE1
  6458                           bsr	equ	0xFE0
  6459                           indf2	equ	0xFDF
  6460                           postinc2	equ	0xFDE
  6461                           postdec2	equ	0xFDD
  6462                           fsr2h	equ	0xFDA
  6463                           fsr2l	equ	0xFD9
  6464                           status	equ	0xFD8
  6465                           
  6466 ;; *************** function _WriteTimer1 *****************
  6467 ;; Defined at:
  6468 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;  timer1          2    0[COMRAM] unsigned int 
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;  timer           2    2[COMRAM] struct Timers
  6473 ;; Return value:  Size  Location     Type
  6474 ;;		None               void
  6475 ;; Registers used:
  6476 ;;		None
  6477 ;; Tracked objects:
  6478 ;;		On entry : 0/0
  6479 ;;		On exit  : 0/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6482 ;;      Params:         2       0       0       0       0
  6483 ;;      Locals:         2       0       0       0       0
  6484 ;;      Temps:          0       0       0       0       0
  6485 ;;      Totals:         4       0       0       0       0
  6486 ;;Total ram usage:        4 bytes
  6487 ;; Hardware stack levels used:    1
  6488 ;; Hardware stack levels required when called:    6
  6489 ;; This function calls:
  6490 ;;		Nothing
  6491 ;; This function is called by:
  6492 ;;		_timer1_int_handler
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text40
  6497  002050                     __ptext40:
  6498                           	opt stack 0
  6499  002050                     _WriteTimer1:
  6500                           	opt stack 17
  6501                           
  6502                           ;incstack = 0
  6503  002050  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6504  002054  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6505  002058  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6506  00205C  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6507  002060  0012               	return	
  6508  002062                     __end_of_WriteTimer1:
  6509                           	opt stack 0
  6510                           pclatu	equ	0xFFB
  6511                           pclath	equ	0xFFA
  6512                           tblptru	equ	0xFF8
  6513                           tblptrh	equ	0xFF7
  6514                           tblptrl	equ	0xFF6
  6515                           tablat	equ	0xFF5
  6516                           prodh	equ	0xFF4
  6517                           prodl	equ	0xFF3
  6518                           intcon	equ	0xFF2
  6519                           postinc0	equ	0xFEE
  6520                           fsr0h	equ	0xFEA
  6521                           fsr0l	equ	0xFE9
  6522                           wreg	equ	0xFE8
  6523                           indf1	equ	0xFE7
  6524                           postdec1	equ	0xFE5
  6525                           fsr1h	equ	0xFE2
  6526                           fsr1l	equ	0xFE1
  6527                           bsr	equ	0xFE0
  6528                           indf2	equ	0xFDF
  6529                           postinc2	equ	0xFDE
  6530                           postdec2	equ	0xFDD
  6531                           fsr2h	equ	0xFDA
  6532                           fsr2l	equ	0xFD9
  6533                           status	equ	0xFD8
  6534                           
  6535 ;; *************** function _adc_int_handler *****************
  6536 ;; Defined at:
  6537 ;;		line 61 in file "../src/user_interrupts.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;		None
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;		None
  6542 ;; Return value:  Size  Location     Type
  6543 ;;		None               void
  6544 ;; Registers used:
  6545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6551 ;;      Params:         0       0       0       0       0
  6552 ;;      Locals:         0       0       0       0       0
  6553 ;;      Temps:          0       0       0       0       0
  6554 ;;      Totals:         0       0       0       0       0
  6555 ;;Total ram usage:        0 bytes
  6556 ;; Hardware stack levels used:    1
  6557 ;; Hardware stack levels required when called:    6
  6558 ;; This function calls:
  6559 ;;		Nothing
  6560 ;; This function is called by:
  6561 ;;		_InterruptHandlerLow
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565                           	psect	text41
  6566  001F86                     __ptext41:
  6567                           	opt stack 0
  6568  001F86                     _adc_int_handler:
  6569                           	opt stack 18
  6570                           
  6571                           ;user_interrupts.c: 63: if(adcbuffer[0] < 27)
  6572                           
  6573                           ;incstack = 0
  6574  001F86  0E1B               	movlw	27
  6575  001F88  5C32               	subwf	_adcbuffer,w,c
  6576  001F8A  B0D8               	btfsc	status,0,c
  6577  001F8C  D002               	goto	i1l1345
  6578                           
  6579                           ;user_interrupts.c: 64: adcbuffer[0] = adcbuffer[0] + 1;
  6580  001F8E  2832               	incf	_adcbuffer,w,c
  6581  001F90  6E32               	movwf	_adcbuffer,c
  6582  001F92                     i1l1345:
  6583                           
  6584                           ;user_interrupts.c: 71: adcbuffer[adcbuffer[0]] = ADRESH;
  6585  001F92  5032               	movf	_adcbuffer,w,c
  6586  001F94  0D01               	mullw	1
  6587  001F96  0E32               	movlw	low _adcbuffer
  6588  001F98  24F3               	addwf	prodl,w,c
  6589  001F9A  6ED9               	movwf	fsr2l,c
  6590  001F9C  0E00               	movlw	high _adcbuffer
  6591  001F9E  20F4               	addwfc	prodh,w,c
  6592  001FA0  6EDA               	movwf	fsr2h,c
  6593  001FA2  CFC4 FFDF          	movff	4036,indf2	;volatile
  6594  001FA6  0012               	return	
  6595  001FA8                     __end_of_adc_int_handler:
  6596                           	opt stack 0
  6597                           pclatu	equ	0xFFB
  6598                           pclath	equ	0xFFA
  6599                           tblptru	equ	0xFF8
  6600                           tblptrh	equ	0xFF7
  6601                           tblptrl	equ	0xFF6
  6602                           tablat	equ	0xFF5
  6603                           prodh	equ	0xFF4
  6604                           prodl	equ	0xFF3
  6605                           intcon	equ	0xFF2
  6606                           postinc0	equ	0xFEE
  6607                           fsr0h	equ	0xFEA
  6608                           fsr0l	equ	0xFE9
  6609                           wreg	equ	0xFE8
  6610                           indf1	equ	0xFE7
  6611                           postdec1	equ	0xFE5
  6612                           fsr1h	equ	0xFE2
  6613                           fsr1l	equ	0xFE1
  6614                           bsr	equ	0xFE0
  6615                           indf2	equ	0xFDF
  6616                           postinc2	equ	0xFDE
  6617                           postdec2	equ	0xFDD
  6618                           fsr2h	equ	0xFDA
  6619                           fsr2l	equ	0xFD9
  6620                           status	equ	0xFD8
  6621                           
  6622 ;; *************** function _InterruptHandlerHigh *****************
  6623 ;; Defined at:
  6624 ;;		line 84 in file "../src/interrupts.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;		None
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;		None
  6629 ;; Return value:  Size  Location     Type
  6630 ;;		None               void
  6631 ;; Registers used:
  6632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6638 ;;      Params:         0       0       0       0       0
  6639 ;;      Locals:         0       0       0       0       0
  6640 ;;      Temps:          0      14       0       0       0
  6641 ;;      Totals:         0      14       0       0       0
  6642 ;;Total ram usage:       14 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; Hardware stack levels required when called:    5
  6645 ;; This function calls:
  6646 ;;		_SleepIfOkay
  6647 ;;		_i2c_int_handler
  6648 ;;		_timer0_int_handler
  6649 ;; This function is called by:
  6650 ;;		Interrupt level 2
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           	psect	intcode
  6655  000008                     __pintcode:
  6656                           	opt stack 0
  6657  000008                     _InterruptHandlerHigh:
  6658                           	opt stack 15
  6659                           
  6660                           ;incstack = 0
  6661  000008  CFFA F0AF          	movff	pclath,??_InterruptHandlerHigh
  6662  00000C  CFFB F0B0          	movff	pclatu,??_InterruptHandlerHigh+1
  6663  000010  EF04  F00C         	goto	int_func
  6664                           pclatu	equ	0xFFB
  6665                           pclath	equ	0xFFA
  6666                           tblptru	equ	0xFF8
  6667                           tblptrh	equ	0xFF7
  6668                           tblptrl	equ	0xFF6
  6669                           tablat	equ	0xFF5
  6670                           prodh	equ	0xFF4
  6671                           prodl	equ	0xFF3
  6672                           intcon	equ	0xFF2
  6673                           postinc0	equ	0xFEE
  6674                           fsr0h	equ	0xFEA
  6675                           fsr0l	equ	0xFE9
  6676                           wreg	equ	0xFE8
  6677                           indf1	equ	0xFE7
  6678                           postdec1	equ	0xFE5
  6679                           fsr1h	equ	0xFE2
  6680                           fsr1l	equ	0xFE1
  6681                           bsr	equ	0xFE0
  6682                           indf2	equ	0xFDF
  6683                           postinc2	equ	0xFDE
  6684                           postdec2	equ	0xFDD
  6685                           fsr2h	equ	0xFDA
  6686                           fsr2l	equ	0xFD9
  6687                           status	equ	0xFD8
  6688                           
  6689                           	psect	intcode_body
  6690  001808                     __pintcode_body:
  6691                           	opt stack 15
  6692  001808                     int_func:
  6693                           	opt stack 15
  6694  001808  CFE9 F0B1          	movff	fsr0l,??_InterruptHandlerHigh+2
  6695  00180C  CFEA F0B2          	movff	fsr0h,??_InterruptHandlerHigh+3
  6696  001810  CFE1 F0B3          	movff	fsr1l,??_InterruptHandlerHigh+4
  6697  001814  CFE2 F0B4          	movff	fsr1h,??_InterruptHandlerHigh+5
  6698  001818  CFD9 F0B5          	movff	fsr2l,??_InterruptHandlerHigh+6
  6699  00181C  CFDA F0B6          	movff	fsr2h,??_InterruptHandlerHigh+7
  6700  001820  CFF3 F0B7          	movff	prodl,??_InterruptHandlerHigh+8
  6701  001824  CFF4 F0B8          	movff	prodh,??_InterruptHandlerHigh+9
  6702  001828  CFF6 F0B9          	movff	tblptrl,??_InterruptHandlerHigh+10
  6703  00182C  CFF7 F0BA          	movff	tblptrh,??_InterruptHandlerHigh+11
  6704  001830  CFF8 F0BB          	movff	tblptru,??_InterruptHandlerHigh+12
  6705  001834  CFF5 F0BC          	movff	tablat,??_InterruptHandlerHigh+13
  6706                           
  6707                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  6708  001838  A69E               	btfss	3998,3,c	;volatile
  6709  00183A  D003               	goto	i2l3627
  6710                           
  6711                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  6712  00183C  969E               	bcf	3998,3,c	;volatile
  6713                           
  6714                           ;interrupts.c: 94: i2c_int_handler();
  6715  00183E  EC5A  F010         	call	_i2c_int_handler	;wreg free
  6716  001842                     i2l3627:
  6717                           
  6718                           ;interrupts.c: 96: }
  6719                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  6720  001842  A4F2               	btfss	intcon,2,c	;volatile
  6721  001844  D003               	goto	i2l3633
  6722                           
  6723                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  6724  001846  94F2               	bcf	intcon,2,c	;volatile
  6725                           
  6726                           ;interrupts.c: 103: timer0_int_handler();
  6727  001848  EC31  F010         	call	_timer0_int_handler	;wreg free
  6728  00184C                     i2l3633:
  6729                           
  6730                           ;interrupts.c: 104: }
  6731                           ;interrupts.c: 113: SleepIfOkay();
  6732  00184C  EC23  F00E         	call	_SleepIfOkay	;wreg free
  6733  001850  C0BC  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6734  001854  C0BB  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6735  001858  C0BA  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6736  00185C  C0B9  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6737  001860  C0B8  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6738  001864  C0B7  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6739  001868  C0B6  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6740  00186C  C0B5  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6741  001870  C0B4  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6742  001874  C0B3  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6743  001878  C0B2  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6744  00187C  C0B1  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6745  001880  C0B0  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6746  001884  C0AF  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6747  001888  0011               	retfie		f
  6748  00188A                     __end_of_InterruptHandlerHigh:
  6749                           	opt stack 0
  6750                           pclatu	equ	0xFFB
  6751                           pclath	equ	0xFFA
  6752                           tblptru	equ	0xFF8
  6753                           tblptrh	equ	0xFF7
  6754                           tblptrl	equ	0xFF6
  6755                           tablat	equ	0xFF5
  6756                           prodh	equ	0xFF4
  6757                           prodl	equ	0xFF3
  6758                           intcon	equ	0xFF2
  6759                           postinc0	equ	0xFEE
  6760                           fsr0h	equ	0xFEA
  6761                           fsr0l	equ	0xFE9
  6762                           wreg	equ	0xFE8
  6763                           indf1	equ	0xFE7
  6764                           postdec1	equ	0xFE5
  6765                           fsr1h	equ	0xFE2
  6766                           fsr1l	equ	0xFE1
  6767                           bsr	equ	0xFE0
  6768                           indf2	equ	0xFDF
  6769                           postinc2	equ	0xFDE
  6770                           postdec2	equ	0xFDD
  6771                           fsr2h	equ	0xFDA
  6772                           fsr2l	equ	0xFD9
  6773                           status	equ	0xFD8
  6774                           
  6775 ;; *************** function _timer0_int_handler *****************
  6776 ;; Defined at:
  6777 ;;		line 16 in file "../src/user_interrupts.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;		None
  6780 ;; Auto vars:     Size  Location     Type
  6781 ;;		None
  6782 ;; Return value:  Size  Location     Type
  6783 ;;		None               void
  6784 ;; Registers used:
  6785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6786 ;; Tracked objects:
  6787 ;;		On entry : 0/0
  6788 ;;		On exit  : 0/0
  6789 ;;		Unchanged: 0/0
  6790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6791 ;;      Params:         0       0       0       0       0
  6792 ;;      Locals:         0       0       0       0       0
  6793 ;;      Temps:          0       0       0       0       0
  6794 ;;      Totals:         0       0       0       0       0
  6795 ;;Total ram usage:        0 bytes
  6796 ;; Hardware stack levels used:    1
  6797 ;; Hardware stack levels required when called:    1
  6798 ;; This function calls:
  6799 ;;		_WriteTimer0
  6800 ;; This function is called by:
  6801 ;;		_InterruptHandlerHigh
  6802 ;; This function uses a non-reentrant model
  6803 ;;
  6804                           
  6805                           	psect	text43
  6806  002062                     __ptext43:
  6807                           	opt stack 0
  6808  002062                     _timer0_int_handler:
  6809                           	opt stack 18
  6810                           
  6811                           ;user_interrupts.c: 17: WriteTimer0(0);
  6812                           
  6813                           ;incstack = 0
  6814  002062  0E00               	movlw	0
  6815  002064  6E2E               	movwf	WriteTimer0@timer0+1,c
  6816  002066  0E00               	movlw	0
  6817  002068  6E2D               	movwf	WriteTimer0@timer0,c
  6818  00206A  EC3A  F010         	call	_WriteTimer0	;wreg free
  6819                           
  6820                           ;user_interrupts.c: 33: UART_timeout++;
  6821  00206E  4A4E               	infsnz	_UART_timeout,f,c
  6822  002070  2A4F               	incf	_UART_timeout+1,f,c
  6823  002072  0012               	return	
  6824  002074                     __end_of_timer0_int_handler:
  6825                           	opt stack 0
  6826                           pclatu	equ	0xFFB
  6827                           pclath	equ	0xFFA
  6828                           tblptru	equ	0xFF8
  6829                           tblptrh	equ	0xFF7
  6830                           tblptrl	equ	0xFF6
  6831                           tablat	equ	0xFF5
  6832                           prodh	equ	0xFF4
  6833                           prodl	equ	0xFF3
  6834                           intcon	equ	0xFF2
  6835                           postinc0	equ	0xFEE
  6836                           fsr0h	equ	0xFEA
  6837                           fsr0l	equ	0xFE9
  6838                           wreg	equ	0xFE8
  6839                           indf1	equ	0xFE7
  6840                           postdec1	equ	0xFE5
  6841                           fsr1h	equ	0xFE2
  6842                           fsr1l	equ	0xFE1
  6843                           bsr	equ	0xFE0
  6844                           indf2	equ	0xFDF
  6845                           postinc2	equ	0xFDE
  6846                           postdec2	equ	0xFDD
  6847                           fsr2h	equ	0xFDA
  6848                           fsr2l	equ	0xFD9
  6849                           status	equ	0xFD8
  6850                           
  6851 ;; *************** function _WriteTimer0 *****************
  6852 ;; Defined at:
  6853 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  timer0          2   44[COMRAM] unsigned int 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  timer           2   46[COMRAM] struct Timers
  6858 ;; Return value:  Size  Location     Type
  6859 ;;		None               void
  6860 ;; Registers used:
  6861 ;;		None
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6867 ;;      Params:         2       0       0       0       0
  6868 ;;      Locals:         2       0       0       0       0
  6869 ;;      Temps:          0       0       0       0       0
  6870 ;;      Totals:         4       0       0       0       0
  6871 ;;Total ram usage:        4 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; This function calls:
  6874 ;;		Nothing
  6875 ;; This function is called by:
  6876 ;;		_timer0_int_handler
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           
  6880                           	psect	text44
  6881  002074                     __ptext44:
  6882                           	opt stack 0
  6883  002074                     _WriteTimer0:
  6884                           	opt stack 18
  6885                           
  6886                           ;incstack = 0
  6887  002074  C02D  F02F         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6888  002078  C02E  F030         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6889  00207C  C030  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6890  002080  C02F  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6891  002084  0012               	return	
  6892  002086                     __end_of_WriteTimer0:
  6893                           	opt stack 0
  6894                           pclatu	equ	0xFFB
  6895                           pclath	equ	0xFFA
  6896                           tblptru	equ	0xFF8
  6897                           tblptrh	equ	0xFF7
  6898                           tblptrl	equ	0xFF6
  6899                           tablat	equ	0xFF5
  6900                           prodh	equ	0xFF4
  6901                           prodl	equ	0xFF3
  6902                           intcon	equ	0xFF2
  6903                           postinc0	equ	0xFEE
  6904                           fsr0h	equ	0xFEA
  6905                           fsr0l	equ	0xFE9
  6906                           wreg	equ	0xFE8
  6907                           indf1	equ	0xFE7
  6908                           postdec1	equ	0xFE5
  6909                           fsr1h	equ	0xFE2
  6910                           fsr1l	equ	0xFE1
  6911                           bsr	equ	0xFE0
  6912                           indf2	equ	0xFDF
  6913                           postinc2	equ	0xFDE
  6914                           postdec2	equ	0xFDD
  6915                           fsr2h	equ	0xFDA
  6916                           fsr2l	equ	0xFD9
  6917                           status	equ	0xFD8
  6918                           
  6919 ;; *************** function _i2c_int_handler *****************
  6920 ;; Defined at:
  6921 ;;		line 139 in file "../src/my_i2c.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;		None
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;		None
  6926 ;; Return value:  Size  Location     Type
  6927 ;;		None               void
  6928 ;; Registers used:
  6929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6935 ;;      Params:         0       0       0       0       0
  6936 ;;      Locals:         0       0       0       0       0
  6937 ;;      Temps:          0       0       0       0       0
  6938 ;;      Totals:         0       0       0       0       0
  6939 ;;Total ram usage:        0 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:    4
  6942 ;; This function calls:
  6943 ;;		_i2c_slave_int_handler
  6944 ;; This function is called by:
  6945 ;;		_InterruptHandlerHigh
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text45
  6950  0020B4                     __ptext45:
  6951                           	opt stack 0
  6952  0020B4                     _i2c_int_handler:
  6953                           	opt stack 15
  6954                           
  6955                           ;my_i2c.c: 143: i2c_slave_int_handler();
  6956                           
  6957                           ;incstack = 0
  6958  0020B4  EC65  F000         	call	_i2c_slave_int_handler	;wreg free
  6959  0020B8  0012               	return	
  6960  0020BA                     __end_of_i2c_int_handler:
  6961                           	opt stack 0
  6962                           pclatu	equ	0xFFB
  6963                           pclath	equ	0xFFA
  6964                           tblptru	equ	0xFF8
  6965                           tblptrh	equ	0xFF7
  6966                           tblptrl	equ	0xFF6
  6967                           tablat	equ	0xFF5
  6968                           prodh	equ	0xFF4
  6969                           prodl	equ	0xFF3
  6970                           intcon	equ	0xFF2
  6971                           postinc0	equ	0xFEE
  6972                           fsr0h	equ	0xFEA
  6973                           fsr0l	equ	0xFE9
  6974                           wreg	equ	0xFE8
  6975                           indf1	equ	0xFE7
  6976                           postdec1	equ	0xFE5
  6977                           fsr1h	equ	0xFE2
  6978                           fsr1l	equ	0xFE1
  6979                           bsr	equ	0xFE0
  6980                           indf2	equ	0xFDF
  6981                           postinc2	equ	0xFDE
  6982                           postdec2	equ	0xFDD
  6983                           fsr2h	equ	0xFDA
  6984                           fsr2l	equ	0xFD9
  6985                           status	equ	0xFD8
  6986                           
  6987 ;; *************** function _i2c_slave_int_handler *****************
  6988 ;; Defined at:
  6989 ;;		line 248 in file "../src/my_i2c.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;		None
  6992 ;; Auto vars:     Size  Location     Type
  6993 ;;  motormsg        5   29[BANK0 ] unsigned char [5]
  6994 ;;  motorcomm       2   34[BANK0 ] unsigned char [2]
  6995 ;;  sensormsg       5   24[BANK0 ] unsigned char [5]
  6996 ;;  length          2   43[BANK0 ] int 
  6997 ;;  error_buf       3   36[BANK0 ] unsigned char [3]
  6998 ;;  data_read       1   46[BANK0 ] unsigned char 
  6999 ;;  msg_ready       1   45[BANK0 ] unsigned char 
  7000 ;;  msg_to_send     1   42[BANK0 ] unsigned char 
  7001 ;;  i2c_data        1   41[BANK0 ] unsigned char 
  7002 ;;  overrun_erro    1   40[BANK0 ] unsigned char 
  7003 ;;  data_written    1   39[BANK0 ] unsigned char 
  7004 ;; Return value:  Size  Location     Type
  7005 ;;		None               void
  7006 ;; Registers used:
  7007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7013 ;;      Params:         0       0       0       0       0
  7014 ;;      Locals:         0      23       0       0       0
  7015 ;;      Temps:          0       2       0       0       0
  7016 ;;      Totals:         0      25       0       0       0
  7017 ;;Total ram usage:       25 bytes
  7018 ;; Hardware stack levels used:    1
  7019 ;; Hardware stack levels required when called:    3
  7020 ;; This function calls:
  7021 ;;		_ToMainHigh_sendmsg
  7022 ;;		_handle_start
  7023 ;;		_start_i2c_slave_reply
  7024 ;;		i2_uart_trans
  7025 ;; This function is called by:
  7026 ;;		_i2c_int_handler
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text46
  7031  0000CA                     __ptext46:
  7032                           	opt stack 0
  7033  0000CA                     _i2c_slave_int_handler:
  7034                           	opt stack 15
  7035                           
  7036                           ;my_i2c.c: 249: unsigned char i2c_data;
  7037                           ;my_i2c.c: 250: unsigned char data_read = 0;
  7038                           
  7039                           ;incstack = 0
  7040  0000CA  0100               	movlb	0	; () banked
  7041  0000CC  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7042  0000CE  0E00               	movlw	0
  7043  0000D0  0100               	movlb	0	; () banked
  7044  0000D2  0100               	movlb	0	; () banked
  7045  0000D4  6FAE               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7046  0000D6  0100               	movlb	0	; () banked
  7047  0000D8  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7048                           
  7049                           ;my_i2c.c: 251: unsigned char data_written = 0;
  7050  0000DA  0100               	movlb	0	; () banked
  7051  0000DC  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7052  0000DE  0E00               	movlw	0
  7053  0000E0  0100               	movlb	0	; () banked
  7054  0000E2  0100               	movlb	0	; () banked
  7055  0000E4  6FA7               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7056  0000E6  0100               	movlb	0	; () banked
  7057  0000E8  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7058                           
  7059                           ;my_i2c.c: 252: unsigned char msg_ready = 0;
  7060  0000EA  0100               	movlb	0	; () banked
  7061  0000EC  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7062  0000EE  0E00               	movlw	0
  7063  0000F0  0100               	movlb	0	; () banked
  7064  0000F2  0100               	movlb	0	; () banked
  7065  0000F4  6FAD               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7066  0000F6  0100               	movlb	0	; () banked
  7067  0000F8  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7068                           
  7069                           ;my_i2c.c: 253: unsigned char msg_to_send = 0;
  7070  0000FA  0100               	movlb	0	; () banked
  7071  0000FC  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7072  0000FE  0E00               	movlw	0
  7073  000100  0100               	movlb	0	; () banked
  7074  000102  0100               	movlb	0	; () banked
  7075  000104  6FAA               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7076  000106  0100               	movlb	0	; () banked
  7077  000108  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7078                           
  7079                           ;my_i2c.c: 254: unsigned char overrun_error = 0;
  7080  00010A  0100               	movlb	0	; () banked
  7081  00010C  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7082  00010E  0E00               	movlw	0
  7083  000110  0100               	movlb	0	; () banked
  7084  000112  0100               	movlb	0	; () banked
  7085  000114  6FA8               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7086  000116  0100               	movlb	0	; () banked
  7087  000118  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7088                           
  7089                           ; BSR set to: 0
  7090                           ;my_i2c.c: 255: unsigned char error_buf[3];
  7091                           ;my_i2c.c: 258: if (SSPCON1bits.SSPOV == 1) {
  7092  00011A  ACC6               	btfss	4038,6,c	;volatile
  7093  00011C  D029               	goto	i2l4055
  7094                           
  7095                           ; BSR set to: 0
  7096                           ;my_i2c.c: 259: SSPCON1bits.SSPOV = 0;
  7097  00011E  9CC6               	bcf	4038,6,c	;volatile
  7098                           
  7099                           ; BSR set to: 0
  7100                           ;my_i2c.c: 263: ic_ptr->status = 0x5;
  7101  000120  0100               	movlb	0	; () banked
  7102  000122  EE20 F00D          	lfsr	2,13
  7103  000126  0100               	movlb	0	; () banked
  7104  000128  51C9               	movf	_ic_ptr& (0+255),w,b
  7105  00012A  26D9               	addwf	fsr2l,f,c
  7106  00012C  0100               	movlb	0	; () banked
  7107  00012E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7108  000130  22DA               	addwfc	fsr2h,f,c
  7109  000132  0E05               	movlw	5
  7110  000134  6EDF               	movwf	indf2,c
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;my_i2c.c: 264: overrun_error = 1;
  7114  000136  0100               	movlb	0	; () banked
  7115  000138  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7116  00013A  0E01               	movlw	1
  7117  00013C  0100               	movlb	0	; () banked
  7118  00013E  0100               	movlb	0	; () banked
  7119  000140  6FA8               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7120  000142  0100               	movlb	0	; () banked
  7121  000144  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;my_i2c.c: 265: ic_ptr->error_count++;
  7125  000146  0100               	movlb	0	; () banked
  7126  000148  EE20 F00F          	lfsr	2,15
  7127  00014C  0100               	movlb	0	; () banked
  7128  00014E  51C9               	movf	_ic_ptr& (0+255),w,b
  7129  000150  26D9               	addwf	fsr2l,f,c
  7130  000152  0100               	movlb	0	; () banked
  7131  000154  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7132  000156  22DA               	addwfc	fsr2h,f,c
  7133  000158  2ADF               	incf	indf2,f,c
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;my_i2c.c: 266: ic_ptr->error_code = 0x4;
  7137  00015A  0100               	movlb	0	; () banked
  7138  00015C  EE20 F00E          	lfsr	2,14
  7139  000160  0100               	movlb	0	; () banked
  7140  000162  51C9               	movf	_ic_ptr& (0+255),w,b
  7141  000164  26D9               	addwf	fsr2l,f,c
  7142  000166  0100               	movlb	0	; () banked
  7143  000168  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7144  00016A  22DA               	addwfc	fsr2h,f,c
  7145  00016C  0E04               	movlw	4
  7146  00016E  6EDF               	movwf	indf2,c
  7147  000170                     i2l4055:
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;my_i2c.c: 267: }
  7151                           ;my_i2c.c: 269: if (SSPSTATbits.BF == 1) {
  7152  000170  A0C7               	btfss	4039,0,c	;volatile
  7153  000172  D00A               	goto	i2l4061
  7154                           
  7155                           ; BSR set to: 0
  7156                           ;my_i2c.c: 270: i2c_data = SSPBUF;
  7157  000174  CFC9 F0A9          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;my_i2c.c: 271: data_read = 1;
  7161  000178  0100               	movlb	0	; () banked
  7162  00017A  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7163  00017C  0E01               	movlw	1
  7164  00017E  0100               	movlb	0	; () banked
  7165  000180  0100               	movlb	0	; () banked
  7166  000182  6FAE               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7167  000184  0100               	movlb	0	; () banked
  7168  000186  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7169  000188                     i2l4061:
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;my_i2c.c: 272: }
  7173                           ;my_i2c.c: 274: if (!overrun_error) {
  7174  000188  0100               	movlb	0	; () banked
  7175  00018A  0100               	movlb	0	; () banked
  7176  00018C  67A8               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  7177  00018E  D1CE               	goto	i2l332
  7178  000190  D1B7               	goto	i2l4149
  7179  000192                     i2l334:
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;my_i2c.c: 277: {
  7183                           ;my_i2c.c: 279: if (SSPSTATbits.S == 1) {
  7184  000192  A6C7               	btfss	4039,3,c	;volatile
  7185  000194  D1CB               	goto	i2l332
  7186                           
  7187                           ; BSR set to: 0
  7188                           ;my_i2c.c: 280: handle_start(data_read);
  7189  000196  0100               	movlb	0	; () banked
  7190  000198  0100               	movlb	0	; () banked
  7191  00019A  51AE               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7192  00019C  ECC0  F008         	call	_handle_start
  7193                           
  7194                           ;my_i2c.c: 282: if (ic_ptr->status == 0x8) {
  7195  0001A0  0100               	movlb	0	; () banked
  7196  0001A2  EE20 F00D          	lfsr	2,13
  7197  0001A6  0100               	movlb	0	; () banked
  7198  0001A8  51C9               	movf	_ic_ptr& (0+255),w,b
  7199  0001AA  26D9               	addwf	fsr2l,f,c
  7200  0001AC  0100               	movlb	0	; () banked
  7201  0001AE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7202  0001B0  22DA               	addwfc	fsr2h,f,c
  7203  0001B2  0E08               	movlw	8
  7204  0001B4  62DF               	cpfseq	indf2,c
  7205  0001B6  D1BA               	goto	i2l332
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;my_i2c.c: 283: data_read = 0;
  7209  0001B8  0100               	movlb	0	; () banked
  7210  0001BA  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7211  0001BC  0E00               	movlw	0
  7212  0001BE  0100               	movlb	0	; () banked
  7213  0001C0  0100               	movlb	0	; () banked
  7214  0001C2  6FAE               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7215  0001C4  0100               	movlb	0	; () banked
  7216  0001C6  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7217                           
  7218                           ;my_i2c.c: 284: msg_to_send = 1;
  7219  0001C8  0100               	movlb	0	; () banked
  7220  0001CA  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7221  0001CC  0E01               	movlw	1
  7222  0001CE  0100               	movlb	0	; () banked
  7223  0001D0  0100               	movlb	0	; () banked
  7224  0001D2  6FAA               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7225  0001D4  D187               	goto	L6
  7226  0001D6                     i2l338:
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;my_i2c.c: 290: {
  7230                           ;my_i2c.c: 292: if (SSPSTATbits.P == 1) {
  7231  0001D6  A8C7               	btfss	4039,4,c	;volatile
  7232  0001D8  D030               	goto	i2l4081
  7233                           
  7234                           ; BSR set to: 0
  7235                           ;my_i2c.c: 295: ic_ptr->event_count++;
  7236  0001DA  0100               	movlb	0	; () banked
  7237  0001DC  EE20 F00C          	lfsr	2,12
  7238  0001E0  0100               	movlb	0	; () banked
  7239  0001E2  51C9               	movf	_ic_ptr& (0+255),w,b
  7240  0001E4  26D9               	addwf	fsr2l,f,c
  7241  0001E6  0100               	movlb	0	; () banked
  7242  0001E8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7243  0001EA  22DA               	addwfc	fsr2h,f,c
  7244  0001EC  2ADF               	incf	indf2,f,c
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;my_i2c.c: 296: if (data_read) {
  7248  0001EE  0100               	movlb	0	; () banked
  7249  0001F0  0100               	movlb	0	; () banked
  7250  0001F2  51AE               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7251  0001F4  B4D8               	btfsc	status,2,c
  7252  0001F6  D179               	goto	L8
  7253                           
  7254                           ; BSR set to: 0
  7255                           ;my_i2c.c: 297: if (SSPSTATbits.D_A == 0) {
  7256  0001F8  BAC7               	btfsc	4039,5,c	;volatile
  7257  0001FA  D009               	goto	i2l4079
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;my_i2c.c: 298: msg_ready = 1;
  7261  0001FC  0100               	movlb	0	; () banked
  7262  0001FE  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7263  000200  0E01               	movlw	1
  7264  000202  0100               	movlb	0	; () banked
  7265  000204  0100               	movlb	0	; () banked
  7266  000206  6FAD               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7267  000208  0100               	movlb	0	; () banked
  7268  00020A  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7269                           
  7270                           ;my_i2c.c: 299: } else {
  7271  00020C  D16E               	goto	L8
  7272  00020E                     i2l4079:
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;my_i2c.c: 300: ic_ptr->error_count++;
  7276  00020E  0100               	movlb	0	; () banked
  7277  000210  EE20 F00F          	lfsr	2,15
  7278  000214  0100               	movlb	0	; () banked
  7279  000216  51C9               	movf	_ic_ptr& (0+255),w,b
  7280  000218  26D9               	addwf	fsr2l,f,c
  7281  00021A  0100               	movlb	0	; () banked
  7282  00021C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7283  00021E  22DA               	addwfc	fsr2h,f,c
  7284  000220  2ADF               	incf	indf2,f,c
  7285                           
  7286                           ;my_i2c.c: 301: ic_ptr->error_code = 0x6;
  7287  000222  0100               	movlb	0	; () banked
  7288  000224  EE20 F00E          	lfsr	2,14
  7289  000228  0100               	movlb	0	; () banked
  7290  00022A  51C9               	movf	_ic_ptr& (0+255),w,b
  7291  00022C  26D9               	addwf	fsr2l,f,c
  7292  00022E  0100               	movlb	0	; () banked
  7293  000230  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7294  000232  22DA               	addwfc	fsr2h,f,c
  7295  000234  0E06               	movlw	6
  7296  000236  6EDF               	movwf	indf2,c
  7297                           
  7298                           ; BSR set to: 0
  7299  000238  D158               	goto	L8
  7300  00023A                     i2l4081:
  7301                           
  7302                           ; BSR set to: 0
  7303  00023A  0100               	movlb	0	; () banked
  7304  00023C  0100               	movlb	0	; () banked
  7305  00023E  51AE               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7306  000240  B4D8               	btfsc	status,2,c
  7307  000242  D174               	goto	i2l332
  7308                           
  7309                           ; BSR set to: 0
  7310                           ;my_i2c.c: 306: ic_ptr->event_count++;
  7311  000244  0100               	movlb	0	; () banked
  7312  000246  EE20 F00C          	lfsr	2,12
  7313  00024A  0100               	movlb	0	; () banked
  7314  00024C  51C9               	movf	_ic_ptr& (0+255),w,b
  7315  00024E  26D9               	addwf	fsr2l,f,c
  7316  000250  0100               	movlb	0	; () banked
  7317  000252  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7318  000254  22DA               	addwfc	fsr2h,f,c
  7319  000256  2ADF               	incf	indf2,f,c
  7320                           
  7321                           ; BSR set to: 0
  7322                           ;my_i2c.c: 307: if (SSPSTATbits.D_A == 0) {
  7323  000258  BAC7               	btfsc	4039,5,c	;volatile
  7324  00025A  D019               	goto	i2l4097
  7325                           
  7326                           ; BSR set to: 0
  7327                           ;my_i2c.c: 308: if (SSPSTATbits.R_W == 0) {
  7328  00025C  B4C7               	btfsc	4039,2,c	;volatile
  7329  00025E  D00B               	goto	i2l4091
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;my_i2c.c: 309: ic_ptr->status = 0x7;
  7333  000260  0100               	movlb	0	; () banked
  7334  000262  EE20 F00D          	lfsr	2,13
  7335  000266  0100               	movlb	0	; () banked
  7336  000268  51C9               	movf	_ic_ptr& (0+255),w,b
  7337  00026A  26D9               	addwf	fsr2l,f,c
  7338  00026C  0100               	movlb	0	; () banked
  7339  00026E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7340  000270  22DA               	addwfc	fsr2h,f,c
  7341  000272  0E07               	movlw	7
  7342  000274  D076               	goto	L5
  7343  000276                     i2l4091:
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;my_i2c.c: 311: ic_ptr->status = 0x8;
  7347  000276  0100               	movlb	0	; () banked
  7348  000278  EE20 F00D          	lfsr	2,13
  7349  00027C  0100               	movlb	0	; () banked
  7350  00027E  51C9               	movf	_ic_ptr& (0+255),w,b
  7351  000280  26D9               	addwf	fsr2l,f,c
  7352  000282  0100               	movlb	0	; () banked
  7353  000284  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7354  000286  22DA               	addwfc	fsr2h,f,c
  7355  000288  0E08               	movlw	8
  7356  00028A  6EDF               	movwf	indf2,c
  7357  00028C  D11D               	goto	L9
  7358  00028E                     i2l4097:
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;my_i2c.c: 317: ic_ptr->error_count++;
  7362  00028E  0100               	movlb	0	; () banked
  7363  000290  EE20 F00F          	lfsr	2,15
  7364  000294  0100               	movlb	0	; () banked
  7365  000296  51C9               	movf	_ic_ptr& (0+255),w,b
  7366  000298  26D9               	addwf	fsr2l,f,c
  7367  00029A  0100               	movlb	0	; () banked
  7368  00029C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7369  00029E  22DA               	addwfc	fsr2h,f,c
  7370  0002A0  2ADF               	incf	indf2,f,c
  7371                           
  7372                           ;my_i2c.c: 318: ic_ptr->status = 0x5;
  7373  0002A2  0100               	movlb	0	; () banked
  7374  0002A4  EE20 F00D          	lfsr	2,13
  7375  0002A8  0100               	movlb	0	; () banked
  7376  0002AA  51C9               	movf	_ic_ptr& (0+255),w,b
  7377  0002AC  26D9               	addwf	fsr2l,f,c
  7378  0002AE  0100               	movlb	0	; () banked
  7379  0002B0  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7380  0002B2  22DA               	addwfc	fsr2h,f,c
  7381  0002B4  0E05               	movlw	5
  7382  0002B6  6EDF               	movwf	indf2,c
  7383                           
  7384                           ;my_i2c.c: 319: ic_ptr->error_code = 0x6;
  7385  0002B8  0100               	movlb	0	; () banked
  7386  0002BA  EE20 F00E          	lfsr	2,14
  7387  0002BE  0100               	movlb	0	; () banked
  7388  0002C0  51C9               	movf	_ic_ptr& (0+255),w,b
  7389  0002C2  26D9               	addwf	fsr2l,f,c
  7390  0002C4  0100               	movlb	0	; () banked
  7391  0002C6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7392  0002C8  22DA               	addwfc	fsr2h,f,c
  7393  0002CA  0E06               	movlw	6
  7394  0002CC  D04A               	goto	L5
  7395  0002CE                     i2l4099:
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;my_i2c.c: 325: {
  7399                           ;my_i2c.c: 326: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7400  0002CE  0100               	movlb	0	; () banked
  7401  0002D0  EE20 F01B          	lfsr	2,27
  7402  0002D4  0100               	movlb	0	; () banked
  7403  0002D6  51C9               	movf	_ic_ptr& (0+255),w,b
  7404  0002D8  26D9               	addwf	fsr2l,f,c
  7405  0002DA  0100               	movlb	0	; () banked
  7406  0002DC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7407  0002DE  22DA               	addwfc	fsr2h,f,c
  7408  0002E0  50DF               	movf	indf2,w,c
  7409  0002E2  0100               	movlb	0	; () banked
  7410  0002E4  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7411  0002E6  0100               	movlb	0	; () banked
  7412  0002E8  EE20 F01A          	lfsr	2,26
  7413  0002EC  0100               	movlb	0	; () banked
  7414  0002EE  51C9               	movf	_ic_ptr& (0+255),w,b
  7415  0002F0  26D9               	addwf	fsr2l,f,c
  7416  0002F2  0100               	movlb	0	; () banked
  7417  0002F4  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7418  0002F6  22DA               	addwfc	fsr2h,f,c
  7419  0002F8  50DF               	movf	indf2,w,c
  7420  0002FA  0100               	movlb	0	; () banked
  7421  0002FC  5D96               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  7422  0002FE  B0D8               	btfsc	status,0,c
  7423  000300  D0F4               	goto	L8
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;my_i2c.c: 327: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7427  000302  0100               	movlb	0	; () banked
  7428  000304  EE20 F01B          	lfsr	2,27
  7429  000308  0100               	movlb	0	; () banked
  7430  00030A  51C9               	movf	_ic_ptr& (0+255),w,b
  7431  00030C  26D9               	addwf	fsr2l,f,c
  7432  00030E  0100               	movlb	0	; () banked
  7433  000310  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7434  000312  22DA               	addwfc	fsr2h,f,c
  7435  000314  50DF               	movf	indf2,w,c
  7436  000316  0100               	movlb	0	; () banked
  7437  000318  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7438  00031A  0100               	movlb	0	; () banked
  7439  00031C  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7440  00031E  0D01               	mullw	1
  7441  000320  0E10               	movlw	16
  7442  000322  26F3               	addwf	prodl,f,c
  7443  000324  0E00               	movlw	0
  7444  000326  22F4               	addwfc	prodh,f,c
  7445  000328  50F3               	movf	prodl,w,c
  7446  00032A  0100               	movlb	0	; () banked
  7447  00032C  0100               	movlb	0	; () banked
  7448  00032E  25C9               	addwf	_ic_ptr& (0+255),w,b
  7449  000330  6ED9               	movwf	fsr2l,c
  7450  000332  50F4               	movf	prodh,w,c
  7451  000334  0100               	movlb	0	; () banked
  7452  000336  0100               	movlb	0	; () banked
  7453  000338  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7454  00033A  6EDA               	movwf	fsr2h,c
  7455  00033C  50DF               	movf	indf2,w,c
  7456  00033E  6EC9               	movwf	4041,c	;volatile
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;my_i2c.c: 328: ic_ptr->outbufind++;
  7460  000340  0100               	movlb	0	; () banked
  7461  000342  EE20 F01B          	lfsr	2,27
  7462  000346  0100               	movlb	0	; () banked
  7463  000348  51C9               	movf	_ic_ptr& (0+255),w,b
  7464  00034A  26D9               	addwf	fsr2l,f,c
  7465  00034C  0100               	movlb	0	; () banked
  7466  00034E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7467  000350  22DA               	addwfc	fsr2h,f,c
  7468  000352  2ADF               	incf	indf2,f,c
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;my_i2c.c: 329: data_written = 1;
  7472  000354  0100               	movlb	0	; () banked
  7473  000356  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7474  000358  0E01               	movlw	1
  7475  00035A  0100               	movlb	0	; () banked
  7476  00035C  0100               	movlb	0	; () banked
  7477  00035E  6FA7               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7478  000360  D0C1               	goto	L6
  7479  000362                     L5:
  7480  000362  6EDF               	movwf	indf2,c
  7481  000364  D0E3               	goto	i2l332
  7482  000366                     i2l352:
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;my_i2c.c: 337: {
  7486                           ;my_i2c.c: 339: if (SSPSTATbits.P == 1) {
  7487  000366  A8C7               	btfss	4039,4,c	;volatile
  7488  000368  D062               	goto	i2l4127
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;my_i2c.c: 341: ic_ptr->event_count++;
  7492  00036A  0100               	movlb	0	; () banked
  7493  00036C  EE20 F00C          	lfsr	2,12
  7494  000370  0100               	movlb	0	; () banked
  7495  000372  51C9               	movf	_ic_ptr& (0+255),w,b
  7496  000374  26D9               	addwf	fsr2l,f,c
  7497  000376  0100               	movlb	0	; () banked
  7498  000378  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7499  00037A  22DA               	addwfc	fsr2h,f,c
  7500  00037C  2ADF               	incf	indf2,f,c
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;my_i2c.c: 342: if (data_read) {
  7504  00037E  0100               	movlb	0	; () banked
  7505  000380  0100               	movlb	0	; () banked
  7506  000382  51AE               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7507  000384  B4D8               	btfsc	status,2,c
  7508  000386  D04A               	goto	i2l4123
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;my_i2c.c: 343: if (SSPSTATbits.D_A == 1) {
  7512  000388  AAC7               	btfss	4039,5,c	;volatile
  7513  00038A  D027               	goto	i2l4121
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;my_i2c.c: 344: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7517  00038C  0100               	movlb	0	; () banked
  7518  00038E  EE20 F00A          	lfsr	2,10
  7519  000392  0100               	movlb	0	; () banked
  7520  000394  51C9               	movf	_ic_ptr& (0+255),w,b
  7521  000396  26D9               	addwf	fsr2l,f,c
  7522  000398  0100               	movlb	0	; () banked
  7523  00039A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7524  00039C  22DA               	addwfc	fsr2h,f,c
  7525  00039E  50DF               	movf	indf2,w,c
  7526  0003A0  0100               	movlb	0	; () banked
  7527  0003A2  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7528  0003A4  0100               	movlb	0	; () banked
  7529  0003A6  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7530  0003A8  0D01               	mullw	1
  7531  0003AA  50F3               	movf	prodl,w,c
  7532  0003AC  0100               	movlb	0	; () banked
  7533  0003AE  0100               	movlb	0	; () banked
  7534  0003B0  25C9               	addwf	_ic_ptr& (0+255),w,b
  7535  0003B2  6ED9               	movwf	fsr2l,c
  7536  0003B4  50F4               	movf	prodh,w,c
  7537  0003B6  0100               	movlb	0	; () banked
  7538  0003B8  0100               	movlb	0	; () banked
  7539  0003BA  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7540  0003BC  6EDA               	movwf	fsr2h,c
  7541  0003BE  0100               	movlb	0	; () banked
  7542  0003C0  C0A9  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;my_i2c.c: 345: ic_ptr->buflen++;
  7546  0003C4  0100               	movlb	0	; () banked
  7547  0003C6  EE20 F00A          	lfsr	2,10
  7548  0003CA  0100               	movlb	0	; () banked
  7549  0003CC  51C9               	movf	_ic_ptr& (0+255),w,b
  7550  0003CE  26D9               	addwf	fsr2l,f,c
  7551  0003D0  0100               	movlb	0	; () banked
  7552  0003D2  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7553  0003D4  22DA               	addwfc	fsr2h,f,c
  7554  0003D6  2ADF               	incf	indf2,f,c
  7555  0003D8  D021               	goto	i2l4123
  7556  0003DA                     i2l4121:
  7557                           
  7558                           ; BSR set to: 0
  7559                           ;my_i2c.c: 348: ic_ptr->error_count++;
  7560  0003DA  0100               	movlb	0	; () banked
  7561  0003DC  EE20 F00F          	lfsr	2,15
  7562  0003E0  0100               	movlb	0	; () banked
  7563  0003E2  51C9               	movf	_ic_ptr& (0+255),w,b
  7564  0003E4  26D9               	addwf	fsr2l,f,c
  7565  0003E6  0100               	movlb	0	; () banked
  7566  0003E8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7567  0003EA  22DA               	addwfc	fsr2h,f,c
  7568  0003EC  2ADF               	incf	indf2,f,c
  7569                           
  7570                           ;my_i2c.c: 349: ic_ptr->error_code = 0x6;
  7571  0003EE  0100               	movlb	0	; () banked
  7572  0003F0  EE20 F00E          	lfsr	2,14
  7573  0003F4  0100               	movlb	0	; () banked
  7574  0003F6  51C9               	movf	_ic_ptr& (0+255),w,b
  7575  0003F8  26D9               	addwf	fsr2l,f,c
  7576  0003FA  0100               	movlb	0	; () banked
  7577  0003FC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7578  0003FE  22DA               	addwfc	fsr2h,f,c
  7579  000400  0E06               	movlw	6
  7580  000402  6EDF               	movwf	indf2,c
  7581                           
  7582                           ;my_i2c.c: 350: ic_ptr->status = 0x5;
  7583  000404  0100               	movlb	0	; () banked
  7584  000406  EE20 F00D          	lfsr	2,13
  7585  00040A  0100               	movlb	0	; () banked
  7586  00040C  51C9               	movf	_ic_ptr& (0+255),w,b
  7587  00040E  26D9               	addwf	fsr2l,f,c
  7588  000410  0100               	movlb	0	; () banked
  7589  000412  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7590  000414  22DA               	addwfc	fsr2h,f,c
  7591  000416  0E05               	movlw	5
  7592  000418  6EDF               	movwf	indf2,c
  7593  00041A  D067               	goto	L8
  7594  00041C                     i2l4123:
  7595                           
  7596                           ; BSR set to: 0
  7597                           ;my_i2c.c: 353: msg_ready = 1;
  7598  00041C  0100               	movlb	0	; () banked
  7599  00041E  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7600  000420  0E01               	movlw	1
  7601  000422  0100               	movlb	0	; () banked
  7602  000424  0100               	movlb	0	; () banked
  7603  000426  6FAD               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7604  000428  0100               	movlb	0	; () banked
  7605  00042A  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7606                           
  7607                           ; BSR set to: 0
  7608  00042C  D05E               	goto	L8
  7609  00042E                     i2l4127:
  7610                           
  7611                           ; BSR set to: 0
  7612  00042E  0100               	movlb	0	; () banked
  7613  000430  0100               	movlb	0	; () banked
  7614  000432  51AE               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7615  000434  B4D8               	btfsc	status,2,c
  7616  000436  D07A               	goto	i2l332
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;my_i2c.c: 357: ic_ptr->event_count++;
  7620  000438  0100               	movlb	0	; () banked
  7621  00043A  EE20 F00C          	lfsr	2,12
  7622  00043E  0100               	movlb	0	; () banked
  7623  000440  51C9               	movf	_ic_ptr& (0+255),w,b
  7624  000442  26D9               	addwf	fsr2l,f,c
  7625  000444  0100               	movlb	0	; () banked
  7626  000446  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7627  000448  22DA               	addwfc	fsr2h,f,c
  7628  00044A  2ADF               	incf	indf2,f,c
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;my_i2c.c: 358: if (SSPSTATbits.D_A == 1) {
  7632  00044C  AAC7               	btfss	4039,5,c	;volatile
  7633  00044E  D027               	goto	i2l360
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;my_i2c.c: 359: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7637  000450  0100               	movlb	0	; () banked
  7638  000452  EE20 F00A          	lfsr	2,10
  7639  000456  0100               	movlb	0	; () banked
  7640  000458  51C9               	movf	_ic_ptr& (0+255),w,b
  7641  00045A  26D9               	addwf	fsr2l,f,c
  7642  00045C  0100               	movlb	0	; () banked
  7643  00045E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7644  000460  22DA               	addwfc	fsr2h,f,c
  7645  000462  50DF               	movf	indf2,w,c
  7646  000464  0100               	movlb	0	; () banked
  7647  000466  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7648  000468  0100               	movlb	0	; () banked
  7649  00046A  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7650  00046C  0D01               	mullw	1
  7651  00046E  50F3               	movf	prodl,w,c
  7652  000470  0100               	movlb	0	; () banked
  7653  000472  0100               	movlb	0	; () banked
  7654  000474  25C9               	addwf	_ic_ptr& (0+255),w,b
  7655  000476  6ED9               	movwf	fsr2l,c
  7656  000478  50F4               	movf	prodh,w,c
  7657  00047A  0100               	movlb	0	; () banked
  7658  00047C  0100               	movlb	0	; () banked
  7659  00047E  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7660  000480  6EDA               	movwf	fsr2h,c
  7661  000482  0100               	movlb	0	; () banked
  7662  000484  C0A9  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;my_i2c.c: 360: ic_ptr->buflen++;
  7666  000488  0100               	movlb	0	; () banked
  7667  00048A  EE20 F00A          	lfsr	2,10
  7668  00048E  0100               	movlb	0	; () banked
  7669  000490  51C9               	movf	_ic_ptr& (0+255),w,b
  7670  000492  26D9               	addwf	fsr2l,f,c
  7671  000494  0100               	movlb	0	; () banked
  7672  000496  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7673  000498  22DA               	addwfc	fsr2h,f,c
  7674  00049A  2ADF               	incf	indf2,f,c
  7675                           
  7676                           ;my_i2c.c: 361: } else {
  7677  00049C  D047               	goto	i2l332
  7678  00049E                     i2l360:
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;my_i2c.c: 362: if (SSPSTATbits.R_W == 1) {
  7682  00049E  A4C7               	btfss	4039,2,c	;volatile
  7683  0004A0  D6B6               	goto	i2l4079
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;my_i2c.c: 363: ic_ptr->status = 0x8;
  7687  0004A2  0100               	movlb	0	; () banked
  7688  0004A4  EE20 F00D          	lfsr	2,13
  7689  0004A8  0100               	movlb	0	; () banked
  7690  0004AA  51C9               	movf	_ic_ptr& (0+255),w,b
  7691  0004AC  26D9               	addwf	fsr2l,f,c
  7692  0004AE  0100               	movlb	0	; () banked
  7693  0004B0  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7694  0004B2  22DA               	addwfc	fsr2h,f,c
  7695  0004B4  0E08               	movlw	8
  7696  0004B6  6EDF               	movwf	indf2,c
  7697                           
  7698                           ; BSR set to: 0
  7699                           ;my_i2c.c: 364: msg_ready = 1;
  7700  0004B8  0100               	movlb	0	; () banked
  7701  0004BA  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7702  0004BC  0E01               	movlw	1
  7703  0004BE  0100               	movlb	0	; () banked
  7704  0004C0  0100               	movlb	0	; () banked
  7705  0004C2  6FAD               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7706  0004C4  0100               	movlb	0	; () banked
  7707  0004C6  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7708  0004C8                     L9:
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;my_i2c.c: 365: msg_to_send = 1;
  7712  0004C8  0100               	movlb	0	; () banked
  7713  0004CA  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7714  0004CC  0E01               	movlw	1
  7715  0004CE  0100               	movlb	0	; () banked
  7716  0004D0  0100               	movlb	0	; () banked
  7717  0004D2  6FAA               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7718  0004D4  0100               	movlb	0	; () banked
  7719  0004D6  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;my_i2c.c: 367: data_read = 0;
  7723  0004D8  0100               	movlb	0	; () banked
  7724  0004DA  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7725  0004DC  0E00               	movlw	0
  7726  0004DE  0100               	movlb	0	; () banked
  7727  0004E0  0100               	movlb	0	; () banked
  7728  0004E2  6FAE               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7729  0004E4                     L6:
  7730  0004E4  0100               	movlb	0	; () banked
  7731  0004E6  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7732                           
  7733                           ;my_i2c.c: 368: } else {
  7734  0004E8  D021               	goto	i2l332
  7735  0004EA                     L8:
  7736                           
  7737                           ;my_i2c.c: 371: ic_ptr->status = 0x5;
  7738  0004EA  0100               	movlb	0	; () banked
  7739  0004EC  EE20 F00D          	lfsr	2,13
  7740  0004F0  0100               	movlb	0	; () banked
  7741  0004F2  51C9               	movf	_ic_ptr& (0+255),w,b
  7742  0004F4  26D9               	addwf	fsr2l,f,c
  7743  0004F6  0100               	movlb	0	; () banked
  7744  0004F8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7745  0004FA  22DA               	addwfc	fsr2h,f,c
  7746  0004FC  0E05               	movlw	5
  7747  0004FE  D731               	goto	L5
  7748  000500                     i2l4149:
  7749                           
  7750                           ; BSR set to: 0
  7751  000500  0100               	movlb	0	; () banked
  7752  000502  EE20 F00D          	lfsr	2,13
  7753  000506  0100               	movlb	0	; () banked
  7754  000508  51C9               	movf	_ic_ptr& (0+255),w,b
  7755  00050A  26D9               	addwf	fsr2l,f,c
  7756  00050C  0100               	movlb	0	; () banked
  7757  00050E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7758  000510  22DA               	addwfc	fsr2h,f,c
  7759  000512  50DF               	movf	indf2,w,c
  7760                           
  7761                           ; Switch size 1, requested type "space"
  7762                           ; Number of cases is 4, Range of values is 5 to 8
  7763                           ; switch strategies available:
  7764                           ; Name         Instructions Cycles
  7765                           ; simple_byte           13     7 (average)
  7766                           ;	Chosen strategy is simple_byte
  7767  000514  0A05               	xorlw	5	; case 5
  7768  000516  B4D8               	btfsc	status,2,c
  7769  000518  D63C               	goto	i2l334
  7770  00051A  0A03               	xorlw	3	; case 6
  7771  00051C  B4D8               	btfsc	status,2,c
  7772  00051E  D65B               	goto	i2l338
  7773  000520  0A01               	xorlw	1	; case 7
  7774  000522  B4D8               	btfsc	status,2,c
  7775  000524  D720               	goto	i2l352
  7776  000526  0A0F               	xorlw	15	; case 8
  7777  000528  B4D8               	btfsc	status,2,c
  7778  00052A  D6D1               	goto	i2l4099
  7779  00052C                     i2l332:
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;my_i2c.c: 378: }
  7783                           ;my_i2c.c: 381: if (data_read || data_written) {
  7784  00052C  0100               	movlb	0	; () banked
  7785  00052E  0100               	movlb	0	; () banked
  7786  000530  67AE               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  7787  000532  D005               	goto	i2l366
  7788                           
  7789                           ; BSR set to: 0
  7790  000534  0100               	movlb	0	; () banked
  7791  000536  0100               	movlb	0	; () banked
  7792  000538  51A7               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  7793  00053A  B4D8               	btfsc	status,2,c
  7794  00053C  D002               	goto	i2l4155
  7795  00053E                     i2l366:
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;my_i2c.c: 383: if (SSPCON1bits.CKP == 0) {
  7799  00053E  A8C6               	btfss	4038,4,c	;volatile
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;my_i2c.c: 384: SSPCON1bits.CKP = 1;
  7803  000540  88C6               	bsf	4038,4,c	;volatile
  7804  000542                     i2l4155:
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;my_i2c.c: 385: }
  7808                           ;my_i2c.c: 386: }
  7809                           ;my_i2c.c: 389: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7810  000542  0100               	movlb	0	; () banked
  7811  000544  EE20 F00A          	lfsr	2,10
  7812  000548  0100               	movlb	0	; () banked
  7813  00054A  51C9               	movf	_ic_ptr& (0+255),w,b
  7814  00054C  26D9               	addwf	fsr2l,f,c
  7815  00054E  0100               	movlb	0	; () banked
  7816  000550  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7817  000552  22DA               	addwfc	fsr2h,f,c
  7818  000554  0E08               	movlw	8
  7819  000556  64DF               	cpfsgt	indf2,c
  7820  000558  D024               	goto	i2l4161
  7821                           
  7822                           ; BSR set to: 0
  7823  00055A  0100               	movlb	0	; () banked
  7824  00055C  0100               	movlb	0	; () banked
  7825  00055E  67AD               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  7826  000560  D020               	goto	i2l4161
  7827                           
  7828                           ; BSR set to: 0
  7829                           ;my_i2c.c: 390: ic_ptr->status = 0x5;
  7830  000562  0100               	movlb	0	; () banked
  7831  000564  EE20 F00D          	lfsr	2,13
  7832  000568  0100               	movlb	0	; () banked
  7833  00056A  51C9               	movf	_ic_ptr& (0+255),w,b
  7834  00056C  26D9               	addwf	fsr2l,f,c
  7835  00056E  0100               	movlb	0	; () banked
  7836  000570  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7837  000572  22DA               	addwfc	fsr2h,f,c
  7838  000574  0E05               	movlw	5
  7839  000576  6EDF               	movwf	indf2,c
  7840                           
  7841                           ;my_i2c.c: 391: ic_ptr->error_count++;
  7842  000578  0100               	movlb	0	; () banked
  7843  00057A  EE20 F00F          	lfsr	2,15
  7844  00057E  0100               	movlb	0	; () banked
  7845  000580  51C9               	movf	_ic_ptr& (0+255),w,b
  7846  000582  26D9               	addwf	fsr2l,f,c
  7847  000584  0100               	movlb	0	; () banked
  7848  000586  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7849  000588  22DA               	addwfc	fsr2h,f,c
  7850  00058A  2ADF               	incf	indf2,f,c
  7851                           
  7852                           ;my_i2c.c: 392: ic_ptr->error_code = 0x7;
  7853  00058C  0100               	movlb	0	; () banked
  7854  00058E  EE20 F00E          	lfsr	2,14
  7855  000592  0100               	movlb	0	; () banked
  7856  000594  51C9               	movf	_ic_ptr& (0+255),w,b
  7857  000596  26D9               	addwf	fsr2l,f,c
  7858  000598  0100               	movlb	0	; () banked
  7859  00059A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7860  00059C  22DA               	addwfc	fsr2h,f,c
  7861  00059E  0E07               	movlw	7
  7862  0005A0  6EDF               	movwf	indf2,c
  7863  0005A2                     i2l4161:
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;my_i2c.c: 393: }
  7867                           ;my_i2c.c: 395: if (msg_ready) {
  7868  0005A2  0100               	movlb	0	; () banked
  7869  0005A4  0100               	movlb	0	; () banked
  7870  0005A6  51AD               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  7871  0005A8  B4D8               	btfsc	status,2,c
  7872  0005AA  D048               	goto	i2l4169
  7873                           
  7874                           ; BSR set to: 0
  7875                           ;my_i2c.c: 396: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7876  0005AC  0100               	movlb	0	; () banked
  7877  0005AE  EE20 F00C          	lfsr	2,12
  7878  0005B2  0100               	movlb	0	; () banked
  7879  0005B4  51C9               	movf	_ic_ptr& (0+255),w,b
  7880  0005B6  26D9               	addwf	fsr2l,f,c
  7881  0005B8  0100               	movlb	0	; () banked
  7882  0005BA  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7883  0005BC  22DA               	addwfc	fsr2h,f,c
  7884  0005BE  0100               	movlb	0	; () banked
  7885  0005C0  EE10 F00A          	lfsr	1,10
  7886  0005C4  0100               	movlb	0	; () banked
  7887  0005C6  51C9               	movf	_ic_ptr& (0+255),w,b
  7888  0005C8  26E1               	addwf	fsr1l,f,c
  7889  0005CA  0100               	movlb	0	; () banked
  7890  0005CC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7891  0005CE  22E2               	addwfc	fsr1h,f,c
  7892  0005D0  50E7               	movf	indf1,w,c
  7893  0005D2  0100               	movlb	0	; () banked
  7894  0005D4  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7895  0005D6  0100               	movlb	0	; () banked
  7896  0005D8  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7897  0005DA  0D01               	mullw	1
  7898  0005DC  50F3               	movf	prodl,w,c
  7899  0005DE  0100               	movlb	0	; () banked
  7900  0005E0  0100               	movlb	0	; () banked
  7901  0005E2  25C9               	addwf	_ic_ptr& (0+255),w,b
  7902  0005E4  6EE1               	movwf	fsr1l,c
  7903  0005E6  50F4               	movf	prodh,w,c
  7904  0005E8  0100               	movlb	0	; () banked
  7905  0005EA  0100               	movlb	0	; () banked
  7906  0005EC  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7907  0005EE  6EE2               	movwf	fsr1h,c
  7908  0005F0  CFDF FFE7          	movff	indf2,indf1
  7909                           
  7910                           ; BSR set to: 0
  7911                           ;my_i2c.c: 397: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7912  0005F4  0100               	movlb	0	; () banked
  7913  0005F6  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  7914  0005F8  0E28               	movlw	40
  7915  0005FA  0100               	movlb	0	; () banked
  7916  0005FC  0100               	movlb	0	; () banked
  7917  0005FE  6F92               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7918  000600  0100               	movlb	0	; () banked
  7919  000602  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7920  000604  0100               	movlb	0	; () banked
  7921  000606  0100               	movlb	0	; () banked
  7922  000608  C0CA  F094         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7923  00060C  0100               	movlb	0	; () banked
  7924  00060E  0100               	movlb	0	; () banked
  7925  000610  C0C9  F093         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7926  000614  0100               	movlb	0	; () banked
  7927  000616  EE20 F00A          	lfsr	2,10
  7928  00061A  0100               	movlb	0	; () banked
  7929  00061C  51C9               	movf	_ic_ptr& (0+255),w,b
  7930  00061E  26D9               	addwf	fsr2l,f,c
  7931  000620  0100               	movlb	0	; () banked
  7932  000622  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7933  000624  22DA               	addwfc	fsr2h,f,c
  7934  000626  50DF               	movf	indf2,w,c
  7935  000628  0100               	movlb	0	; () banked
  7936  00062A  6F97               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  7937  00062C  0100               	movlb	0	; () banked
  7938  00062E  2997               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  7939  000630  EC43  F00F         	call	_ToMainHigh_sendmsg
  7940                           
  7941                           ;my_i2c.c: 398: ic_ptr->buflen = 0;
  7942  000634  0100               	movlb	0	; () banked
  7943  000636  EE20 F00A          	lfsr	2,10
  7944  00063A  D04B               	goto	L7
  7945  00063C                     i2l4169:
  7946                           
  7947                           ; BSR set to: 0
  7948  00063C  0100               	movlb	0	; () banked
  7949  00063E  EE20 F00F          	lfsr	2,15
  7950  000642  0100               	movlb	0	; () banked
  7951  000644  51C9               	movf	_ic_ptr& (0+255),w,b
  7952  000646  26D9               	addwf	fsr2l,f,c
  7953  000648  0100               	movlb	0	; () banked
  7954  00064A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7955  00064C  22DA               	addwfc	fsr2h,f,c
  7956  00064E  50DF               	movf	indf2,w,c
  7957  000650  B4D8               	btfsc	status,2,c
  7958  000652  D047               	goto	i2l4177
  7959                           
  7960                           ; BSR set to: 0
  7961                           ;my_i2c.c: 400: error_buf[0] = ic_ptr->error_count;
  7962  000654  0100               	movlb	0	; () banked
  7963  000656  EE20 F00F          	lfsr	2,15
  7964  00065A  0100               	movlb	0	; () banked
  7965  00065C  51C9               	movf	_ic_ptr& (0+255),w,b
  7966  00065E  26D9               	addwf	fsr2l,f,c
  7967  000660  0100               	movlb	0	; () banked
  7968  000662  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7969  000664  22DA               	addwfc	fsr2h,f,c
  7970  000666  50DF               	movf	indf2,w,c
  7971  000668  0100               	movlb	0	; () banked
  7972  00066A  0100               	movlb	0	; () banked
  7973  00066C  6FA4               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  7974                           
  7975                           ;my_i2c.c: 401: error_buf[1] = ic_ptr->error_code;
  7976  00066E  0100               	movlb	0	; () banked
  7977  000670  EE20 F00E          	lfsr	2,14
  7978  000674  0100               	movlb	0	; () banked
  7979  000676  51C9               	movf	_ic_ptr& (0+255),w,b
  7980  000678  26D9               	addwf	fsr2l,f,c
  7981  00067A  0100               	movlb	0	; () banked
  7982  00067C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7983  00067E  22DA               	addwfc	fsr2h,f,c
  7984  000680  50DF               	movf	indf2,w,c
  7985  000682  0100               	movlb	0	; () banked
  7986  000684  0100               	movlb	0	; () banked
  7987  000686  6FA5               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  7988                           
  7989                           ;my_i2c.c: 402: error_buf[2] = ic_ptr->event_count;
  7990  000688  0100               	movlb	0	; () banked
  7991  00068A  EE20 F00C          	lfsr	2,12
  7992  00068E  0100               	movlb	0	; () banked
  7993  000690  51C9               	movf	_ic_ptr& (0+255),w,b
  7994  000692  26D9               	addwf	fsr2l,f,c
  7995  000694  0100               	movlb	0	; () banked
  7996  000696  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7997  000698  22DA               	addwfc	fsr2h,f,c
  7998  00069A  50DF               	movf	indf2,w,c
  7999  00069C  0100               	movlb	0	; () banked
  8000  00069E  0100               	movlb	0	; () banked
  8001  0006A0  6FA6               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;my_i2c.c: 403: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8005  0006A2  0100               	movlb	0	; () banked
  8006  0006A4  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  8007  0006A6  0E29               	movlw	41
  8008  0006A8  0100               	movlb	0	; () banked
  8009  0006AA  0100               	movlb	0	; () banked
  8010  0006AC  6F92               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8011  0006AE  0100               	movlb	0	; () banked
  8012  0006B0  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8013  0006B2  0100               	movlb	0	; () banked
  8014  0006B4  0E00               	movlw	high i2c_slave_int_handler@error_buf
  8015  0006B6  0100               	movlb	0	; () banked
  8016  0006B8  0100               	movlb	0	; () banked
  8017  0006BA  6F94               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8018  0006BC  0100               	movlb	0	; () banked
  8019  0006BE  0EA4               	movlw	low i2c_slave_int_handler@error_buf
  8020  0006C0  0100               	movlb	0	; () banked
  8021  0006C2  0100               	movlb	0	; () banked
  8022  0006C4  6F93               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8023  0006C6  0E03               	movlw	3
  8024  0006C8  EC43  F00F         	call	_ToMainHigh_sendmsg
  8025                           
  8026                           ;my_i2c.c: 404: ic_ptr->error_count = 0;
  8027  0006CC  0100               	movlb	0	; () banked
  8028  0006CE  EE20 F00F          	lfsr	2,15
  8029  0006D2                     L7:
  8030  0006D2  0100               	movlb	0	; () banked
  8031  0006D4  51C9               	movf	_ic_ptr& (0+255),w,b
  8032  0006D6  26D9               	addwf	fsr2l,f,c
  8033  0006D8  0100               	movlb	0	; () banked
  8034  0006DA  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8035  0006DC  22DA               	addwfc	fsr2h,f,c
  8036  0006DE  0E00               	movlw	0
  8037  0006E0  6EDF               	movwf	indf2,c
  8038  0006E2                     i2l4177:
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;my_i2c.c: 405: }
  8042                           ;my_i2c.c: 406: if (msg_to_send) {
  8043  0006E2  0100               	movlb	0	; () banked
  8044  0006E4  0100               	movlb	0	; () banked
  8045  0006E6  51AA               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  8046  0006E8  B4D8               	btfsc	status,2,c
  8047  0006EA  0012               	return	
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;my_i2c.c: 407: int length = 0;
  8051  0006EC  0E00               	movlw	0
  8052  0006EE  0100               	movlb	0	; () banked
  8053  0006F0  0100               	movlb	0	; () banked
  8054  0006F2  6FAC               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  8055  0006F4  0E00               	movlw	0
  8056  0006F6  0100               	movlb	0	; () banked
  8057  0006F8  6FAB               	movwf	i2c_slave_int_handler@length& (0+255),b
  8058                           
  8059                           ; BSR set to: 0
  8060                           ;my_i2c.c: 411: if(ic_ptr->buffer[0] == 0xAA){
  8061  0006FA  0EAA               	movlw	170
  8062  0006FC  C0C9  FFD9         	movff	_ic_ptr,fsr2l
  8063  000700  C0CA  FFDA         	movff	_ic_ptr+1,fsr2h
  8064  000704  62DF               	cpfseq	indf2,c
  8065  000706  D01C               	goto	i2l4189
  8066                           
  8067                           ; BSR set to: 0
  8068                           ;my_i2c.c: 412: length = 5;
  8069  000708  0E00               	movlw	0
  8070  00070A  0100               	movlb	0	; () banked
  8071  00070C  0100               	movlb	0	; () banked
  8072  00070E  6FAC               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  8073  000710  0E05               	movlw	5
  8074  000712  0100               	movlb	0	; () banked
  8075  000714  6FAB               	movwf	i2c_slave_int_handler@length& (0+255),b
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;my_i2c.c: 414: unsigned char sensormsg[5] = {0x01, 0x01, 0x02, 0x03, ((0x01 + 0x02 + 0x
      +                          03) & 0x17)};
  8079  000716  EE20  F0BD         	lfsr	2,i2c_slave_int_handler@F5128
  8080  00071A  EE10  F098         	lfsr	1,i2c_slave_int_handler@sensormsg
  8081  00071E  0E05               	movlw	5
  8082  000720                     i2u336_41:
  8083  000720  CFDE FFE6          	movff	postinc2,postinc1
  8084  000724  2EE8               	decfsz	wreg,f,c
  8085  000726  D7FC               	goto	i2u336_41
  8086                           
  8087                           ; BSR set to: 0
  8088                           ;my_i2c.c: 415: start_i2c_slave_reply(length, sensormsg);
  8089  000728  0100               	movlb	0	; () banked
  8090  00072A  0E00               	movlw	high i2c_slave_int_handler@sensormsg
  8091  00072C  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  8092  00072E  0100               	movlb	0	; () banked
  8093  000730  0E98               	movlw	low i2c_slave_int_handler@sensormsg
  8094  000732  6E2D               	movwf	start_i2c_slave_reply@msg,c
  8095  000734  0100               	movlb	0	; () banked
  8096  000736  0100               	movlb	0	; () banked
  8097  000738  51AB               	movf	i2c_slave_int_handler@length& (0+255),w,b
  8098  00073A  EC46  F008         	call	_start_i2c_slave_reply
  8099                           
  8100                           ;my_i2c.c: 417: } else if(ic_ptr->buffer[0] == 0xBA){
  8101  00073E  D02F               	goto	i2l4201
  8102  000740                     i2l4189:
  8103  000740  0EBA               	movlw	186
  8104  000742  C0C9  FFD9         	movff	_ic_ptr,fsr2l
  8105  000746  C0CA  FFDA         	movff	_ic_ptr+1,fsr2h
  8106  00074A  62DF               	cpfseq	indf2,c
  8107  00074C  D028               	goto	i2l4201
  8108                           
  8109                           ;my_i2c.c: 419: length = 5;
  8110  00074E  0E00               	movlw	0
  8111  000750  0100               	movlb	0	; () banked
  8112  000752  0100               	movlb	0	; () banked
  8113  000754  6FAC               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  8114  000756  0E05               	movlw	5
  8115  000758  0100               	movlb	0	; () banked
  8116  00075A  6FAB               	movwf	i2c_slave_int_handler@length& (0+255),b
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;my_i2c.c: 421: unsigned char motormsg[5] = {0x03, 0x04, ((0x04) & 0x17), 0x00, 0x00};
  8120  00075C  EE20  F0C2         	lfsr	2,i2c_slave_int_handler@F5130
  8121  000760  EE10  F09D         	lfsr	1,i2c_slave_int_handler@motormsg
  8122  000764  0E05               	movlw	5
  8123  000766                     i2u338_41:
  8124  000766  CFDE FFE6          	movff	postinc2,postinc1
  8125  00076A  2EE8               	decfsz	wreg,f,c
  8126  00076C  D7FC               	goto	i2u338_41
  8127                           
  8128                           ; BSR set to: 0
  8129                           ;my_i2c.c: 422: start_i2c_slave_reply(length, motormsg);
  8130  00076E  0100               	movlb	0	; () banked
  8131  000770  0E00               	movlw	high i2c_slave_int_handler@motormsg
  8132  000772  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  8133  000774  0100               	movlb	0	; () banked
  8134  000776  0E9D               	movlw	low i2c_slave_int_handler@motormsg
  8135  000778  6E2D               	movwf	start_i2c_slave_reply@msg,c
  8136  00077A  0100               	movlb	0	; () banked
  8137  00077C  0100               	movlb	0	; () banked
  8138  00077E  51AB               	movf	i2c_slave_int_handler@length& (0+255),w,b
  8139  000780  EC46  F008         	call	_start_i2c_slave_reply
  8140                           
  8141                           ;my_i2c.c: 423: unsigned char motorcomm[2] = {0x62, 0x9D};
  8142  000784  C0C7  F0A2         	movff	i2c_slave_int_handler@F5132,i2c_slave_int_handler@motorcomm
  8143  000788  C0C8  F0A3         	movff	i2c_slave_int_handler@F5132+1,i2c_slave_int_handler@motorcomm+1
  8144                           
  8145                           ;my_i2c.c: 424: uart_trans(2, motorcomm);
  8146  00078C  0100               	movlb	0	; () banked
  8147  00078E  0E00               	movlw	high i2c_slave_int_handler@motorcomm
  8148  000790  6E2E               	movwf	i2uart_trans@data+1,c
  8149  000792  0100               	movlb	0	; () banked
  8150  000794  0EA2               	movlw	low i2c_slave_int_handler@motorcomm
  8151  000796  6E2D               	movwf	i2uart_trans@data,c
  8152  000798  0E02               	movlw	2
  8153  00079A  ECE6  F00A         	call	i2_uart_trans
  8154  00079E                     i2l4201:
  8155                           
  8156                           ;my_i2c.c: 425: }
  8157                           ;my_i2c.c: 426: msg_to_send = 0;
  8158  00079E  0100               	movlb	0	; () banked
  8159  0007A0  6F96               	movwf	??_i2c_slave_int_handler& (0+255),b
  8160  0007A2  0E00               	movlw	0
  8161  0007A4  0100               	movlb	0	; () banked
  8162  0007A6  0100               	movlb	0	; () banked
  8163  0007A8  6FAA               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  8164  0007AA  0100               	movlb	0	; () banked
  8165  0007AC  5196               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8166  0007AE  0012               	return	
  8167  0007B0                     __end_of_i2c_slave_int_handler:
  8168                           	opt stack 0
  8169                           pclatu	equ	0xFFB
  8170                           pclath	equ	0xFFA
  8171                           tblptru	equ	0xFF8
  8172                           tblptrh	equ	0xFF7
  8173                           tblptrl	equ	0xFF6
  8174                           tablat	equ	0xFF5
  8175                           prodh	equ	0xFF4
  8176                           prodl	equ	0xFF3
  8177                           intcon	equ	0xFF2
  8178                           postinc0	equ	0xFEE
  8179                           fsr0h	equ	0xFEA
  8180                           fsr0l	equ	0xFE9
  8181                           wreg	equ	0xFE8
  8182                           indf1	equ	0xFE7
  8183                           postinc1	equ	0xFE6
  8184                           postdec1	equ	0xFE5
  8185                           fsr1h	equ	0xFE2
  8186                           fsr1l	equ	0xFE1
  8187                           bsr	equ	0xFE0
  8188                           indf2	equ	0xFDF
  8189                           postinc2	equ	0xFDE
  8190                           postdec2	equ	0xFDD
  8191                           fsr2h	equ	0xFDA
  8192                           fsr2l	equ	0xFD9
  8193                           status	equ	0xFD8
  8194                           
  8195 ;; *************** function i2_uart_trans *****************
  8196 ;; Defined at:
  8197 ;;		line 61 in file "../src/my_uart.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;  length          1    wreg     unsigned char 
  8200 ;;  data            2   44[COMRAM] PTR unsigned char 
  8201 ;;		 -> i2c_slave_int_handler@motorcomm(2), main@msgbuffer(11), 
  8202 ;; Auto vars:     Size  Location     Type
  8203 ;;  length          1   48[COMRAM] unsigned char 
  8204 ;; Return value:  Size  Location     Type
  8205 ;;		None               void
  8206 ;; Registers used:
  8207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8208 ;; Tracked objects:
  8209 ;;		On entry : 0/0
  8210 ;;		On exit  : 0/0
  8211 ;;		Unchanged: 0/0
  8212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8213 ;;      Params:         2       0       0       0       0
  8214 ;;      Locals:         1       0       0       0       0
  8215 ;;      Temps:          2       0       0       0       0
  8216 ;;      Totals:         5       0       0       0       0
  8217 ;;Total ram usage:        5 bytes
  8218 ;; Hardware stack levels used:    1
  8219 ;; This function calls:
  8220 ;;		Nothing
  8221 ;; This function is called by:
  8222 ;;		_i2c_slave_int_handler
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           	psect	text47
  8227  0015CC                     __ptext47:
  8228                           	opt stack 0
  8229  0015CC                     i2_uart_trans:
  8230                           	opt stack 17
  8231                           
  8232                           ; BSR set to: 0
  8233                           ;incstack = 0
  8234                           ;i2uart_trans@length stored from wreg
  8235  0015CC  CFE8 F031          	movff	wreg,i2uart_trans@length
  8236                           
  8237                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  8238  0015D0  EE20 F00B          	lfsr	2,11
  8239  0015D4  5052               	movf	_uc_ptr,w,c
  8240  0015D6  26D9               	addwf	fsr2l,f,c
  8241  0015D8  5053               	movf	_uc_ptr+1,w,c
  8242  0015DA  22DA               	addwfc	fsr2h,f,c
  8243  0015DC  0E00               	movlw	0
  8244  0015DE  6EDF               	movwf	indf2,c
  8245  0015E0  D02D               	goto	i2l3399
  8246  0015E2                     i2l3395:
  8247                           
  8248                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  8249  0015E2  EE20 F00B          	lfsr	2,11
  8250  0015E6  5052               	movf	_uc_ptr,w,c
  8251  0015E8  26D9               	addwf	fsr2l,f,c
  8252  0015EA  5053               	movf	_uc_ptr+1,w,c
  8253  0015EC  22DA               	addwfc	fsr2h,f,c
  8254  0015EE  50DF               	movf	indf2,w,c
  8255  0015F0  6E2F               	movwf	??i2_uart_trans& (0+255),c
  8256  0015F2  502F               	movf	??i2_uart_trans,w,c
  8257  0015F4  0D01               	mullw	1
  8258  0015F6  50F3               	movf	prodl,w,c
  8259  0015F8  242D               	addwf	i2uart_trans@data,w,c
  8260  0015FA  6ED9               	movwf	fsr2l,c
  8261  0015FC  50F4               	movf	prodh,w,c
  8262  0015FE  202E               	addwfc	i2uart_trans@data+1,w,c
  8263  001600  6EDA               	movwf	fsr2h,c
  8264  001602  EE10 F00B          	lfsr	1,11
  8265  001606  5052               	movf	_uc_ptr,w,c
  8266  001608  26E1               	addwf	fsr1l,f,c
  8267  00160A  5053               	movf	_uc_ptr+1,w,c
  8268  00160C  22E2               	addwfc	fsr1h,f,c
  8269  00160E  50E7               	movf	indf1,w,c
  8270  001610  6E30               	movwf	(??i2_uart_trans+1)& (0+255),c
  8271  001612  5030               	movf	??i2_uart_trans+1,w,c
  8272  001614  0D01               	mullw	1
  8273  001616  0E06               	movlw	6
  8274  001618  26F3               	addwf	prodl,f,c
  8275  00161A  0E00               	movlw	0
  8276  00161C  22F4               	addwfc	prodh,f,c
  8277  00161E  50F3               	movf	prodl,w,c
  8278  001620  2452               	addwf	_uc_ptr,w,c
  8279  001622  6EE1               	movwf	fsr1l,c
  8280  001624  50F4               	movf	prodh,w,c
  8281  001626  2053               	addwfc	_uc_ptr+1,w,c
  8282  001628  6EE2               	movwf	fsr1h,c
  8283  00162A  CFDF FFE7          	movff	indf2,indf1
  8284  00162E  EE20 F00B          	lfsr	2,11
  8285  001632  5052               	movf	_uc_ptr,w,c
  8286  001634  26D9               	addwf	fsr2l,f,c
  8287  001636  5053               	movf	_uc_ptr+1,w,c
  8288  001638  22DA               	addwfc	fsr2h,f,c
  8289  00163A  2ADF               	incf	indf2,f,c
  8290  00163C                     i2l3399:
  8291  00163C  EE20 F00B          	lfsr	2,11
  8292  001640  5052               	movf	_uc_ptr,w,c
  8293  001642  26D9               	addwf	fsr2l,f,c
  8294  001644  5053               	movf	_uc_ptr+1,w,c
  8295  001646  22DA               	addwfc	fsr2h,f,c
  8296  001648  50DF               	movf	indf2,w,c
  8297  00164A  6E2F               	movwf	??i2_uart_trans& (0+255),c
  8298  00164C  5031               	movf	i2uart_trans@length,w,c
  8299  00164E  5C2F               	subwf	??i2_uart_trans,w,c
  8300  001650  A0D8               	btfss	status,0,c
  8301  001652  D7C7               	goto	i2l3395
  8302                           
  8303                           ;my_uart.c: 67: }
  8304                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  8305  001654  EE20 F00C          	lfsr	2,12
  8306  001658  5052               	movf	_uc_ptr,w,c
  8307  00165A  26D9               	addwf	fsr2l,f,c
  8308  00165C  5053               	movf	_uc_ptr+1,w,c
  8309  00165E  22DA               	addwfc	fsr2h,f,c
  8310  001660  0E00               	movlw	0
  8311  001662  6EDF               	movwf	indf2,c
  8312                           
  8313                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  8314  001664  889D               	bsf	3997,4,c	;volatile
  8315  001666  0012               	return	
  8316  001668                     __end_ofi2_uart_trans:
  8317                           	opt stack 0
  8318                           pclatu	equ	0xFFB
  8319                           pclath	equ	0xFFA
  8320                           tblptru	equ	0xFF8
  8321                           tblptrh	equ	0xFF7
  8322                           tblptrl	equ	0xFF6
  8323                           tablat	equ	0xFF5
  8324                           prodh	equ	0xFF4
  8325                           prodl	equ	0xFF3
  8326                           intcon	equ	0xFF2
  8327                           postinc0	equ	0xFEE
  8328                           fsr0h	equ	0xFEA
  8329                           fsr0l	equ	0xFE9
  8330                           wreg	equ	0xFE8
  8331                           indf1	equ	0xFE7
  8332                           postinc1	equ	0xFE6
  8333                           postdec1	equ	0xFE5
  8334                           fsr1h	equ	0xFE2
  8335                           fsr1l	equ	0xFE1
  8336                           bsr	equ	0xFE0
  8337                           indf2	equ	0xFDF
  8338                           postinc2	equ	0xFDE
  8339                           postdec2	equ	0xFDD
  8340                           fsr2h	equ	0xFDA
  8341                           fsr2l	equ	0xFD9
  8342                           status	equ	0xFD8
  8343                           
  8344 ;; *************** function _start_i2c_slave_reply *****************
  8345 ;; Defined at:
  8346 ;;		line 92 in file "../src/my_i2c.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  length          1    wreg     unsigned char 
  8349 ;;  msg             2   44[COMRAM] PTR unsigned char 
  8350 ;;		 -> i2c_slave_int_handler@motormsg(5), i2c_slave_int_handler@sensormsg(5), 
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;  length          1   48[COMRAM] unsigned char 
  8353 ;; Return value:  Size  Location     Type
  8354 ;;		None               void
  8355 ;; Registers used:
  8356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8362 ;;      Params:         2       0       0       0       0
  8363 ;;      Locals:         1       0       0       0       0
  8364 ;;      Temps:          2       0       0       0       0
  8365 ;;      Totals:         5       0       0       0       0
  8366 ;;Total ram usage:        5 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; This function calls:
  8369 ;;		Nothing
  8370 ;; This function is called by:
  8371 ;;		_i2c_slave_int_handler
  8372 ;; This function uses a non-reentrant model
  8373 ;;
  8374                           
  8375                           	psect	text48
  8376  00108C                     __ptext48:
  8377                           	opt stack 0
  8378  00108C                     _start_i2c_slave_reply:
  8379                           	opt stack 17
  8380                           
  8381                           ;incstack = 0
  8382                           ;start_i2c_slave_reply@length stored from wreg
  8383  00108C  CFE8 F031          	movff	wreg,start_i2c_slave_reply@length
  8384                           
  8385                           ;my_i2c.c: 94: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  8386  001090  0100               	movlb	0	; () banked
  8387  001092  EE20 F01A          	lfsr	2,26
  8388  001096  0100               	movlb	0	; () banked
  8389  001098  51C9               	movf	_ic_ptr& (0+255),w,b
  8390  00109A  26D9               	addwf	fsr2l,f,c
  8391  00109C  0100               	movlb	0	; () banked
  8392  00109E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8393  0010A0  22DA               	addwfc	fsr2h,f,c
  8394  0010A2  0E00               	movlw	0
  8395  0010A4  6EDF               	movwf	indf2,c
  8396  0010A6  D03A               	goto	i2l3027
  8397  0010A8                     i2l3023:
  8398                           
  8399                           ; BSR set to: 0
  8400                           ;my_i2c.c: 95: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  8401  0010A8  0100               	movlb	0	; () banked
  8402  0010AA  EE20 F01A          	lfsr	2,26
  8403  0010AE  0100               	movlb	0	; () banked
  8404  0010B0  51C9               	movf	_ic_ptr& (0+255),w,b
  8405  0010B2  26D9               	addwf	fsr2l,f,c
  8406  0010B4  0100               	movlb	0	; () banked
  8407  0010B6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8408  0010B8  22DA               	addwfc	fsr2h,f,c
  8409  0010BA  50DF               	movf	indf2,w,c
  8410  0010BC  6E2F               	movwf	??_start_i2c_slave_reply& (0+255),c
  8411  0010BE  502F               	movf	??_start_i2c_slave_reply,w,c
  8412  0010C0  0D01               	mullw	1
  8413  0010C2  50F3               	movf	prodl,w,c
  8414  0010C4  242D               	addwf	start_i2c_slave_reply@msg,w,c
  8415  0010C6  6ED9               	movwf	fsr2l,c
  8416  0010C8  50F4               	movf	prodh,w,c
  8417  0010CA  202E               	addwfc	start_i2c_slave_reply@msg+1,w,c
  8418  0010CC  6EDA               	movwf	fsr2h,c
  8419  0010CE  0100               	movlb	0	; () banked
  8420  0010D0  EE10 F01A          	lfsr	1,26
  8421  0010D4  0100               	movlb	0	; () banked
  8422  0010D6  51C9               	movf	_ic_ptr& (0+255),w,b
  8423  0010D8  26E1               	addwf	fsr1l,f,c
  8424  0010DA  0100               	movlb	0	; () banked
  8425  0010DC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8426  0010DE  22E2               	addwfc	fsr1h,f,c
  8427  0010E0  50E7               	movf	indf1,w,c
  8428  0010E2  6E30               	movwf	(??_start_i2c_slave_reply+1)& (0+255),c
  8429  0010E4  5030               	movf	??_start_i2c_slave_reply+1,w,c
  8430  0010E6  0D01               	mullw	1
  8431  0010E8  0E10               	movlw	16
  8432  0010EA  26F3               	addwf	prodl,f,c
  8433  0010EC  0E00               	movlw	0
  8434  0010EE  22F4               	addwfc	prodh,f,c
  8435  0010F0  50F3               	movf	prodl,w,c
  8436  0010F2  0100               	movlb	0	; () banked
  8437  0010F4  0100               	movlb	0	; () banked
  8438  0010F6  25C9               	addwf	_ic_ptr& (0+255),w,b
  8439  0010F8  6EE1               	movwf	fsr1l,c
  8440  0010FA  50F4               	movf	prodh,w,c
  8441  0010FC  0100               	movlb	0	; () banked
  8442  0010FE  0100               	movlb	0	; () banked
  8443  001100  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8444  001102  6EE2               	movwf	fsr1h,c
  8445  001104  CFDF FFE7          	movff	indf2,indf1
  8446                           
  8447                           ; BSR set to: 0
  8448  001108  0100               	movlb	0	; () banked
  8449  00110A  EE20 F01A          	lfsr	2,26
  8450  00110E  0100               	movlb	0	; () banked
  8451  001110  51C9               	movf	_ic_ptr& (0+255),w,b
  8452  001112  26D9               	addwf	fsr2l,f,c
  8453  001114  0100               	movlb	0	; () banked
  8454  001116  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8455  001118  22DA               	addwfc	fsr2h,f,c
  8456  00111A  2ADF               	incf	indf2,f,c
  8457  00111C                     i2l3027:
  8458                           
  8459                           ; BSR set to: 0
  8460  00111C  0100               	movlb	0	; () banked
  8461  00111E  EE20 F01A          	lfsr	2,26
  8462  001122  0100               	movlb	0	; () banked
  8463  001124  51C9               	movf	_ic_ptr& (0+255),w,b
  8464  001126  26D9               	addwf	fsr2l,f,c
  8465  001128  0100               	movlb	0	; () banked
  8466  00112A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8467  00112C  22DA               	addwfc	fsr2h,f,c
  8468  00112E  50DF               	movf	indf2,w,c
  8469  001130  6E2F               	movwf	??_start_i2c_slave_reply& (0+255),c
  8470  001132  5031               	movf	start_i2c_slave_reply@length,w,c
  8471  001134  5C2F               	subwf	??_start_i2c_slave_reply,w,c
  8472  001136  A0D8               	btfss	status,0,c
  8473  001138  D7B7               	goto	i2l3023
  8474                           
  8475                           ; BSR set to: 0
  8476                           ;my_i2c.c: 96: }
  8477                           ;my_i2c.c: 97: ic_ptr->outbuflen = length;
  8478                           
  8479                           ; BSR set to: 0
  8480  00113A  0100               	movlb	0	; () banked
  8481  00113C  EE20 F01A          	lfsr	2,26
  8482  001140  0100               	movlb	0	; () banked
  8483  001142  51C9               	movf	_ic_ptr& (0+255),w,b
  8484  001144  26D9               	addwf	fsr2l,f,c
  8485  001146  0100               	movlb	0	; () banked
  8486  001148  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8487  00114A  22DA               	addwfc	fsr2h,f,c
  8488  00114C  C031  FFDF         	movff	start_i2c_slave_reply@length,indf2
  8489                           
  8490                           ;my_i2c.c: 98: ic_ptr->outbufind = 1;
  8491  001150  0100               	movlb	0	; () banked
  8492  001152  EE20 F01B          	lfsr	2,27
  8493  001156  0100               	movlb	0	; () banked
  8494  001158  51C9               	movf	_ic_ptr& (0+255),w,b
  8495  00115A  26D9               	addwf	fsr2l,f,c
  8496  00115C  0100               	movlb	0	; () banked
  8497  00115E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8498  001160  22DA               	addwfc	fsr2h,f,c
  8499  001162  0E01               	movlw	1
  8500  001164  6EDF               	movwf	indf2,c
  8501                           
  8502                           ;my_i2c.c: 101: SSPBUF = ic_ptr->outbuffer[0];
  8503  001166  0100               	movlb	0	; () banked
  8504  001168  EE20 F010          	lfsr	2,16
  8505  00116C  0100               	movlb	0	; () banked
  8506  00116E  51C9               	movf	_ic_ptr& (0+255),w,b
  8507  001170  26D9               	addwf	fsr2l,f,c
  8508  001172  0100               	movlb	0	; () banked
  8509  001174  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8510  001176  22DA               	addwfc	fsr2h,f,c
  8511  001178  50DF               	movf	indf2,w,c
  8512  00117A  6EC9               	movwf	4041,c	;volatile
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;my_i2c.c: 104: SSPCON1bits.CKP = 1;
  8516  00117C  88C6               	bsf	4038,4,c	;volatile
  8517                           
  8518                           ; BSR set to: 0
  8519  00117E  0012               	return	
  8520  001180                     __end_of_start_i2c_slave_reply:
  8521                           	opt stack 0
  8522                           pclatu	equ	0xFFB
  8523                           pclath	equ	0xFFA
  8524                           tblptru	equ	0xFF8
  8525                           tblptrh	equ	0xFF7
  8526                           tblptrl	equ	0xFF6
  8527                           tablat	equ	0xFF5
  8528                           prodh	equ	0xFF4
  8529                           prodl	equ	0xFF3
  8530                           intcon	equ	0xFF2
  8531                           postinc0	equ	0xFEE
  8532                           fsr0h	equ	0xFEA
  8533                           fsr0l	equ	0xFE9
  8534                           wreg	equ	0xFE8
  8535                           indf1	equ	0xFE7
  8536                           postinc1	equ	0xFE6
  8537                           postdec1	equ	0xFE5
  8538                           fsr1h	equ	0xFE2
  8539                           fsr1l	equ	0xFE1
  8540                           bsr	equ	0xFE0
  8541                           indf2	equ	0xFDF
  8542                           postinc2	equ	0xFDE
  8543                           postdec2	equ	0xFDD
  8544                           fsr2h	equ	0xFDA
  8545                           fsr2l	equ	0xFD9
  8546                           status	equ	0xFD8
  8547                           
  8548 ;; *************** function _handle_start *****************
  8549 ;; Defined at:
  8550 ;;		line 110 in file "../src/my_i2c.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;  data_read       1    wreg     unsigned char 
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;  data_read       1   44[COMRAM] unsigned char 
  8555 ;; Return value:  Size  Location     Type
  8556 ;;		None               void
  8557 ;; Registers used:
  8558 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8564 ;;      Params:         0       0       0       0       0
  8565 ;;      Locals:         1       0       0       0       0
  8566 ;;      Temps:          0       0       0       0       0
  8567 ;;      Totals:         1       0       0       0       0
  8568 ;;Total ram usage:        1 bytes
  8569 ;; Hardware stack levels used:    1
  8570 ;; This function calls:
  8571 ;;		Nothing
  8572 ;; This function is called by:
  8573 ;;		_i2c_slave_int_handler
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577                           	psect	text49
  8578  001180                     __ptext49:
  8579                           	opt stack 0
  8580  001180                     _handle_start:
  8581                           	opt stack 17
  8582                           
  8583                           ; BSR set to: 0
  8584                           ;incstack = 0
  8585                           ;handle_start@data_read stored from wreg
  8586  001180  CFE8 F02D          	movff	wreg,handle_start@data_read
  8587                           
  8588                           ;my_i2c.c: 111: ic_ptr->event_count = 1;
  8589  001184  0100               	movlb	0	; () banked
  8590  001186  EE20 F00C          	lfsr	2,12
  8591  00118A  0100               	movlb	0	; () banked
  8592  00118C  51C9               	movf	_ic_ptr& (0+255),w,b
  8593  00118E  26D9               	addwf	fsr2l,f,c
  8594  001190  0100               	movlb	0	; () banked
  8595  001192  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8596  001194  22DA               	addwfc	fsr2h,f,c
  8597  001196  0E01               	movlw	1
  8598  001198  6EDF               	movwf	indf2,c
  8599                           
  8600                           ;my_i2c.c: 112: ic_ptr->buflen = 0;
  8601  00119A  0100               	movlb	0	; () banked
  8602  00119C  EE20 F00A          	lfsr	2,10
  8603  0011A0  0100               	movlb	0	; () banked
  8604  0011A2  51C9               	movf	_ic_ptr& (0+255),w,b
  8605  0011A4  26D9               	addwf	fsr2l,f,c
  8606  0011A6  0100               	movlb	0	; () banked
  8607  0011A8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8608  0011AA  22DA               	addwfc	fsr2h,f,c
  8609  0011AC  0E00               	movlw	0
  8610  0011AE  6EDF               	movwf	indf2,c
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;my_i2c.c: 114: if (data_read) {
  8614  0011B0  502D               	movf	handle_start@data_read,w,c
  8615  0011B2  B4D8               	btfsc	status,2,c
  8616  0011B4  D03D               	goto	i2l3045
  8617                           
  8618                           ; BSR set to: 0
  8619                           ;my_i2c.c: 115: if (SSPSTATbits.D_A == 1) {
  8620  0011B6  AAC7               	btfss	4039,5,c	;volatile
  8621  0011B8  D021               	goto	i2l295
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;my_i2c.c: 118: ic_ptr->status = 0x5;
  8625  0011BA  0100               	movlb	0	; () banked
  8626  0011BC  EE20 F00D          	lfsr	2,13
  8627  0011C0  0100               	movlb	0	; () banked
  8628  0011C2  51C9               	movf	_ic_ptr& (0+255),w,b
  8629  0011C4  26D9               	addwf	fsr2l,f,c
  8630  0011C6  0100               	movlb	0	; () banked
  8631  0011C8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8632  0011CA  22DA               	addwfc	fsr2h,f,c
  8633  0011CC  0E05               	movlw	5
  8634  0011CE  6EDF               	movwf	indf2,c
  8635                           
  8636                           ;my_i2c.c: 119: ic_ptr->error_count++;
  8637  0011D0  0100               	movlb	0	; () banked
  8638  0011D2  EE20 F00F          	lfsr	2,15
  8639  0011D6  0100               	movlb	0	; () banked
  8640  0011D8  51C9               	movf	_ic_ptr& (0+255),w,b
  8641  0011DA  26D9               	addwf	fsr2l,f,c
  8642  0011DC  0100               	movlb	0	; () banked
  8643  0011DE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8644  0011E0  22DA               	addwfc	fsr2h,f,c
  8645  0011E2  2ADF               	incf	indf2,f,c
  8646                           
  8647                           ;my_i2c.c: 120: ic_ptr->error_code = 0x5;
  8648  0011E4  0100               	movlb	0	; () banked
  8649  0011E6  EE20 F00E          	lfsr	2,14
  8650  0011EA  0100               	movlb	0	; () banked
  8651  0011EC  51C9               	movf	_ic_ptr& (0+255),w,b
  8652  0011EE  26D9               	addwf	fsr2l,f,c
  8653  0011F0  0100               	movlb	0	; () banked
  8654  0011F2  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8655  0011F4  22DA               	addwfc	fsr2h,f,c
  8656  0011F6  0E05               	movlw	5
  8657  0011F8  6EDF               	movwf	indf2,c
  8658                           
  8659                           ;my_i2c.c: 121: } else {
  8660  0011FA  0012               	return	
  8661  0011FC                     i2l295:
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;my_i2c.c: 122: if (SSPSTATbits.R_W == 1) {
  8665  0011FC  A4C7               	btfss	4039,2,c	;volatile
  8666  0011FE  D00C               	goto	i2l3043
  8667                           
  8668                           ; BSR set to: 0
  8669                           ;my_i2c.c: 123: ic_ptr->status = 0x8;
  8670  001200  0100               	movlb	0	; () banked
  8671  001202  EE20 F00D          	lfsr	2,13
  8672  001206  0100               	movlb	0	; () banked
  8673  001208  51C9               	movf	_ic_ptr& (0+255),w,b
  8674  00120A  26D9               	addwf	fsr2l,f,c
  8675  00120C  0100               	movlb	0	; () banked
  8676  00120E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8677  001210  22DA               	addwfc	fsr2h,f,c
  8678  001212  0E08               	movlw	8
  8679  001214  6EDF               	movwf	indf2,c
  8680                           
  8681                           ;my_i2c.c: 124: } else {
  8682  001216  0012               	return	
  8683  001218                     i2l3043:
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;my_i2c.c: 125: ic_ptr->status = 0x7;
  8687  001218  0100               	movlb	0	; () banked
  8688  00121A  EE20 F00D          	lfsr	2,13
  8689  00121E  0100               	movlb	0	; () banked
  8690  001220  51C9               	movf	_ic_ptr& (0+255),w,b
  8691  001222  26D9               	addwf	fsr2l,f,c
  8692  001224  0100               	movlb	0	; () banked
  8693  001226  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8694  001228  22DA               	addwfc	fsr2h,f,c
  8695  00122A  0E07               	movlw	7
  8696  00122C  6EDF               	movwf	indf2,c
  8697  00122E  0012               	return	
  8698  001230                     i2l3045:
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;my_i2c.c: 129: ic_ptr->status = 0x6;
  8702  001230  0100               	movlb	0	; () banked
  8703  001232  EE20 F00D          	lfsr	2,13
  8704  001236  0100               	movlb	0	; () banked
  8705  001238  51C9               	movf	_ic_ptr& (0+255),w,b
  8706  00123A  26D9               	addwf	fsr2l,f,c
  8707  00123C  0100               	movlb	0	; () banked
  8708  00123E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8709  001240  22DA               	addwfc	fsr2h,f,c
  8710  001242  0E06               	movlw	6
  8711  001244  6EDF               	movwf	indf2,c
  8712  001246  0012               	return	
  8713  001248                     __end_of_handle_start:
  8714                           	opt stack 0
  8715                           pclatu	equ	0xFFB
  8716                           pclath	equ	0xFFA
  8717                           tblptru	equ	0xFF8
  8718                           tblptrh	equ	0xFF7
  8719                           tblptrl	equ	0xFF6
  8720                           tablat	equ	0xFF5
  8721                           prodh	equ	0xFF4
  8722                           prodl	equ	0xFF3
  8723                           intcon	equ	0xFF2
  8724                           postinc0	equ	0xFEE
  8725                           fsr0h	equ	0xFEA
  8726                           fsr0l	equ	0xFE9
  8727                           wreg	equ	0xFE8
  8728                           indf1	equ	0xFE7
  8729                           postinc1	equ	0xFE6
  8730                           postdec1	equ	0xFE5
  8731                           fsr1h	equ	0xFE2
  8732                           fsr1l	equ	0xFE1
  8733                           bsr	equ	0xFE0
  8734                           indf2	equ	0xFDF
  8735                           postinc2	equ	0xFDE
  8736                           postdec2	equ	0xFDD
  8737                           fsr2h	equ	0xFDA
  8738                           fsr2l	equ	0xFD9
  8739                           status	equ	0xFD8
  8740                           
  8741 ;; *************** function _ToMainHigh_sendmsg *****************
  8742 ;; Defined at:
  8743 ;;		line 126 in file "../src/messages.c"
  8744 ;; Parameters:    Size  Location     Type
  8745 ;;  length          1    wreg     unsigned char 
  8746 ;;  msgtype         1   18[BANK0 ] unsigned char 
  8747 ;;  data            2   19[BANK0 ] PTR void 
  8748 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), 
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;  length          1   21[BANK0 ] unsigned char 
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  1    wreg      char 
  8753 ;; Registers used:
  8754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8760 ;;      Params:         0       3       0       0       0
  8761 ;;      Locals:         0       1       0       0       0
  8762 ;;      Temps:          0       0       0       0       0
  8763 ;;      Totals:         0       4       0       0       0
  8764 ;;Total ram usage:        4 bytes
  8765 ;; Hardware stack levels used:    1
  8766 ;; Hardware stack levels required when called:    2
  8767 ;; This function calls:
  8768 ;;		i2_send_msg
  8769 ;; This function is called by:
  8770 ;;		_i2c_slave_int_handler
  8771 ;;		_i2c_master_int_handler
  8772 ;; This function uses a non-reentrant model
  8773 ;;
  8774                           
  8775                           	psect	text50
  8776  001E86                     __ptext50:
  8777                           	opt stack 0
  8778  001E86                     _ToMainHigh_sendmsg:
  8779                           	opt stack 15
  8780                           
  8781                           ; BSR set to: 0
  8782                           ;incstack = 0
  8783                           ;ToMainHigh_sendmsg@length stored from wreg
  8784  001E86  CFE8 F095          	movff	wreg,ToMainHigh_sendmsg@length
  8785                           
  8786                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8787                           ;	Return value of _ToMainHigh_sendmsg is never used
  8788  001E8A  0101               	movlb	1	; () banked
  8789  001E8C  0E01               	movlw	high _ToMainHigh_MQ
  8790  001E8E  0100               	movlb	0	; () banked
  8791  001E90  0100               	movlb	0	; () banked
  8792  001E92  6F87               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8793  001E94  0101               	movlb	1	; () banked
  8794  001E96  0E00               	movlw	low _ToMainHigh_MQ
  8795  001E98  0100               	movlb	0	; () banked
  8796  001E9A  0100               	movlb	0	; () banked
  8797  001E9C  6F86               	movwf	i2send_msg@qptr& (0+255),b
  8798  001E9E  C095  F088         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8799  001EA2  C092  F089         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8800  001EA6  0100               	movlb	0	; () banked
  8801  001EA8  0100               	movlb	0	; () banked
  8802  001EAA  C094  F08B         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8803  001EAE  0100               	movlb	0	; () banked
  8804  001EB0  0100               	movlb	0	; () banked
  8805  001EB2  C093  F08A         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8806  001EB6  EC32  F007         	call	i2_send_msg	;wreg free
  8807  001EBA  0012               	return	
  8808  001EBC                     __end_of_ToMainHigh_sendmsg:
  8809                           	opt stack 0
  8810                           pclatu	equ	0xFFB
  8811                           pclath	equ	0xFFA
  8812                           tblptru	equ	0xFF8
  8813                           tblptrh	equ	0xFF7
  8814                           tblptrl	equ	0xFF6
  8815                           tablat	equ	0xFF5
  8816                           prodh	equ	0xFF4
  8817                           prodl	equ	0xFF3
  8818                           intcon	equ	0xFF2
  8819                           postinc0	equ	0xFEE
  8820                           fsr0h	equ	0xFEA
  8821                           fsr0l	equ	0xFE9
  8822                           wreg	equ	0xFE8
  8823                           indf1	equ	0xFE7
  8824                           postinc1	equ	0xFE6
  8825                           postdec1	equ	0xFE5
  8826                           fsr1h	equ	0xFE2
  8827                           fsr1l	equ	0xFE1
  8828                           bsr	equ	0xFE0
  8829                           indf2	equ	0xFDF
  8830                           postinc2	equ	0xFDE
  8831                           postdec2	equ	0xFDD
  8832                           fsr2h	equ	0xFDA
  8833                           fsr2l	equ	0xFD9
  8834                           status	equ	0xFD8
  8835                           
  8836 ;; *************** function i2_send_msg *****************
  8837 ;; Defined at:
  8838 ;;		line 24 in file "../src/messages.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  qptr            2    6[BANK0 ] PTR struct __msg_queue
  8841 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8842 ;;  length          1    8[BANK0 ] unsigned char 
  8843 ;;  msgtype         1    9[BANK0 ] unsigned char 
  8844 ;;  data            2   10[BANK0 ] PTR void 
  8845 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  8846 ;;		 -> main@uc(13), 
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;  send_msg        2   16[BANK0 ] PTR struct __msg
  8849 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8850 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8851 ;;  send_msg        2   13[BANK0 ] unsigned int 
  8852 ;;  send_msg        1   15[BANK0 ] unsigned char 
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  1    wreg      char 
  8855 ;; Registers used:
  8856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8862 ;;      Params:         0       6       0       0       0
  8863 ;;      Locals:         0       5       0       0       0
  8864 ;;      Temps:          0       1       0       0       0
  8865 ;;      Totals:         0      12       0       0       0
  8866 ;;Total ram usage:       12 bytes
  8867 ;; Hardware stack levels used:    1
  8868 ;; Hardware stack levels required when called:    1
  8869 ;; This function calls:
  8870 ;;		i2___awmod
  8871 ;;		i2_memcpy
  8872 ;; This function is called by:
  8873 ;;		_ToMainHigh_sendmsg
  8874 ;; This function uses a non-reentrant model
  8875 ;;
  8876                           
  8877                           	psect	text51
  8878  000E64                     __ptext51:
  8879                           	opt stack 0
  8880  000E64                     i2_send_msg:
  8881                           	opt stack 15
  8882                           
  8883                           ;messages.c: 25: unsigned char slot;
  8884                           ;messages.c: 27: msg *qmsg;
  8885                           ;messages.c: 28: size_t tlength = length;
  8886                           
  8887                           ;incstack = 0
  8888  000E64  0100               	movlb	0	; () banked
  8889  000E66  0100               	movlb	0	; () banked
  8890  000E68  C088  F08D         	movff	i2send_msg@length,i2send_msg@tlength
  8891  000E6C  0100               	movlb	0	; () banked
  8892  000E6E  0100               	movlb	0	; () banked
  8893  000E70  6B8E               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8894                           
  8895                           ; BSR set to: 0
  8896                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8897  000E72  0100               	movlb	0	; () banked
  8898  000E74  EE20 F041          	lfsr	2,65
  8899  000E78  0100               	movlb	0	; () banked
  8900  000E7A  5186               	movf	i2send_msg@qptr& (0+255),w,b
  8901  000E7C  26D9               	addwf	fsr2l,f,c
  8902  000E7E  0100               	movlb	0	; () banked
  8903  000E80  5187               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8904  000E82  22DA               	addwfc	fsr2h,f,c
  8905  000E84  50DF               	movf	indf2,w,c
  8906  000E86  0100               	movlb	0	; () banked
  8907  000E88  0100               	movlb	0	; () banked
  8908  000E8A  6F8F               	movwf	i2send_msg@slot& (0+255),b
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8912  000E8C  0100               	movlb	0	; () banked
  8913  000E8E  0100               	movlb	0	; () banked
  8914  000E90  518F               	movf	i2send_msg@slot& (0+255),w,b
  8915  000E92  0D0D               	mullw	13
  8916  000E94  50F3               	movf	prodl,w,c
  8917  000E96  0100               	movlb	0	; () banked
  8918  000E98  0100               	movlb	0	; () banked
  8919  000E9A  2586               	addwf	i2send_msg@qptr& (0+255),w,b
  8920  000E9C  0100               	movlb	0	; () banked
  8921  000E9E  0100               	movlb	0	; () banked
  8922  000EA0  6F90               	movwf	i2send_msg@qmsg& (0+255),b
  8923  000EA2  50F4               	movf	prodh,w,c
  8924  000EA4  0100               	movlb	0	; () banked
  8925  000EA6  0100               	movlb	0	; () banked
  8926  000EA8  2187               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8927  000EAA  0100               	movlb	0	; () banked
  8928  000EAC  6F91               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;messages.c: 41: if (qmsg->full != 0) {
  8932  000EAE  C090  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8933  000EB2  C091  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8934  000EB6  50DF               	movf	indf2,w,c
  8935  000EB8  B4D8               	btfsc	status,2,c
  8936  000EBA  D002               	goto	i2l4331
  8937                           
  8938                           ; BSR set to: 0
  8939                           ;messages.c: 42: return (-1);
  8940  000EBC  0EFF               	movlw	255
  8941  000EBE  0012               	return	
  8942  000EC0                     i2l4331:
  8943                           
  8944                           ; BSR set to: 0
  8945                           ;messages.c: 43: }
  8946                           ;messages.c: 46: qmsg->length = length;
  8947  000EC0  0100               	movlb	0	; () banked
  8948  000EC2  EE20 F001          	lfsr	2,1
  8949  000EC6  0100               	movlb	0	; () banked
  8950  000EC8  5190               	movf	i2send_msg@qmsg& (0+255),w,b
  8951  000ECA  26D9               	addwf	fsr2l,f,c
  8952  000ECC  0100               	movlb	0	; () banked
  8953  000ECE  5191               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8954  000ED0  22DA               	addwfc	fsr2h,f,c
  8955  000ED2  0100               	movlb	0	; () banked
  8956  000ED4  C088  FFDF         	movff	i2send_msg@length,indf2
  8957                           
  8958                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8959  000ED8  0100               	movlb	0	; () banked
  8960  000EDA  EE20 F002          	lfsr	2,2
  8961  000EDE  0100               	movlb	0	; () banked
  8962  000EE0  5190               	movf	i2send_msg@qmsg& (0+255),w,b
  8963  000EE2  26D9               	addwf	fsr2l,f,c
  8964  000EE4  0100               	movlb	0	; () banked
  8965  000EE6  5191               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8966  000EE8  22DA               	addwfc	fsr2h,f,c
  8967  000EEA  0100               	movlb	0	; () banked
  8968  000EEC  C089  FFDF         	movff	i2send_msg@msgtype,indf2
  8969                           
  8970                           ; BSR set to: 0
  8971                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8972  000EF0  0E03               	movlw	3
  8973  000EF2  0100               	movlb	0	; () banked
  8974  000EF4  0100               	movlb	0	; () banked
  8975  000EF6  2590               	addwf	i2send_msg@qmsg& (0+255),w,b
  8976  000EF8  0100               	movlb	0	; () banked
  8977  000EFA  0100               	movlb	0	; () banked
  8978  000EFC  6F80               	movwf	i2memcpy@d1& (0+255),b
  8979  000EFE  0E00               	movlw	0
  8980  000F00  0100               	movlb	0	; () banked
  8981  000F02  0100               	movlb	0	; () banked
  8982  000F04  2191               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8983  000F06  0100               	movlb	0	; () banked
  8984  000F08  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  8985  000F0A  0100               	movlb	0	; () banked
  8986  000F0C  0100               	movlb	0	; () banked
  8987  000F0E  C08B  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8988  000F12  0100               	movlb	0	; () banked
  8989  000F14  0100               	movlb	0	; () banked
  8990  000F16  C08A  F082         	movff	i2send_msg@data,i2memcpy@s1
  8991  000F1A  C08D  F084         	movff	i2send_msg@tlength,i2memcpy@n
  8992  000F1E  C08E  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8993  000F22  ECFC  F00D         	call	i2_memcpy	;wreg free
  8994                           
  8995                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  8996  000F26  0100               	movlb	0	; () banked
  8997  000F28  EE20 F041          	lfsr	2,65
  8998  000F2C  0100               	movlb	0	; () banked
  8999  000F2E  5186               	movf	i2send_msg@qptr& (0+255),w,b
  9000  000F30  26D9               	addwf	fsr2l,f,c
  9001  000F32  0100               	movlb	0	; () banked
  9002  000F34  5187               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9003  000F36  22DA               	addwfc	fsr2h,f,c
  9004  000F38  0100               	movlb	0	; () banked
  9005  000F3A  EE10 F041          	lfsr	1,65
  9006  000F3E  0100               	movlb	0	; () banked
  9007  000F40  5186               	movf	i2send_msg@qptr& (0+255),w,b
  9008  000F42  26E1               	addwf	fsr1l,f,c
  9009  000F44  0100               	movlb	0	; () banked
  9010  000F46  5187               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9011  000F48  22E2               	addwfc	fsr1h,f,c
  9012  000F4A  50E7               	movf	indf1,w,c
  9013  000F4C  0100               	movlb	0	; () banked
  9014  000F4E  6F8C               	movwf	??i2_send_msg& (0+255),b
  9015  000F50  0E01               	movlw	1
  9016  000F52  0100               	movlb	0	; () banked
  9017  000F54  258C               	addwf	??i2_send_msg& (0+255),w,b
  9018  000F56  6E2D               	movwf	i2___awmod@dividend,c
  9019  000F58  6A2E               	clrf	i2___awmod@dividend+1,c
  9020  000F5A  0E00               	movlw	0
  9021  000F5C  222E               	addwfc	i2___awmod@dividend+1,f,c
  9022  000F5E  0E00               	movlw	0
  9023  000F60  6E30               	movwf	i2___awmod@divisor+1,c
  9024  000F62  0E05               	movlw	5
  9025  000F64  6E2F               	movwf	i2___awmod@divisor,c
  9026  000F66  EC3E  F00A         	call	i2___awmod	;wreg free
  9027  000F6A  502D               	movf	?i2___awmod,w,c
  9028  000F6C  6EDF               	movwf	indf2,c
  9029                           
  9030                           ;messages.c: 59: qmsg->full = 1;
  9031  000F6E  C090  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9032  000F72  C091  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9033  000F76  0E01               	movlw	1
  9034  000F78  6EDF               	movwf	indf2,c
  9035                           
  9036                           ;messages.c: 60: return (1);
  9037  000F7A  0E01               	movlw	1
  9038  000F7C  0012               	return	
  9039  000F7E                     __end_ofi2_send_msg:
  9040                           	opt stack 0
  9041                           pclatu	equ	0xFFB
  9042                           pclath	equ	0xFFA
  9043                           tblptru	equ	0xFF8
  9044                           tblptrh	equ	0xFF7
  9045                           tblptrl	equ	0xFF6
  9046                           tablat	equ	0xFF5
  9047                           prodh	equ	0xFF4
  9048                           prodl	equ	0xFF3
  9049                           intcon	equ	0xFF2
  9050                           postinc0	equ	0xFEE
  9051                           fsr0h	equ	0xFEA
  9052                           fsr0l	equ	0xFE9
  9053                           wreg	equ	0xFE8
  9054                           indf1	equ	0xFE7
  9055                           postinc1	equ	0xFE6
  9056                           postdec1	equ	0xFE5
  9057                           fsr1h	equ	0xFE2
  9058                           fsr1l	equ	0xFE1
  9059                           bsr	equ	0xFE0
  9060                           indf2	equ	0xFDF
  9061                           postinc2	equ	0xFDE
  9062                           postdec2	equ	0xFDD
  9063                           fsr2h	equ	0xFDA
  9064                           fsr2l	equ	0xFD9
  9065                           status	equ	0xFD8
  9066                           
  9067 ;; *************** function i2_memcpy *****************
  9068 ;; Defined at:
  9069 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;  d1              2    0[BANK0 ] PTR void 
  9072 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  9073 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9074 ;;		 -> main@msgbuffer(11), 
  9075 ;;  s1              2    2[BANK0 ] PTR const void 
  9076 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9077 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9078 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  9079 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  9080 ;;		 -> main@uc(13), 
  9081 ;;  n               2    4[BANK0 ] unsigned int 
  9082 ;; Auto vars:     Size  Location     Type
  9083 ;;  memcpy          2   46[COMRAM] PTR const unsigned char 
  9084 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9085 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9086 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  9087 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  9088 ;;		 -> main@uc(13), 
  9089 ;;  memcpy          2   44[COMRAM] PTR unsigned char 
  9090 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  9091 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9092 ;;		 -> main@msgbuffer(11), 
  9093 ;; Return value:  Size  Location     Type
  9094 ;;                  2    0[BANK0 ] PTR void 
  9095 ;; Registers used:
  9096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9102 ;;      Params:         0       6       0       0       0
  9103 ;;      Locals:         4       0       0       0       0
  9104 ;;      Temps:          0       0       0       0       0
  9105 ;;      Totals:         4       6       0       0       0
  9106 ;;Total ram usage:       10 bytes
  9107 ;; Hardware stack levels used:    1
  9108 ;; This function calls:
  9109 ;;		Nothing
  9110 ;; This function is called by:
  9111 ;;		i2_send_msg
  9112 ;; This function uses a non-reentrant model
  9113 ;;
  9114                           
  9115                           	psect	text52
  9116  001BF8                     __ptext52:
  9117                           	opt stack 0
  9118  001BF8                     i2_memcpy:
  9119                           	opt stack 15
  9120                           
  9121                           ;incstack = 0
  9122  001BF8  0100               	movlb	0	; () banked
  9123  001BFA  C083  F030         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9124  001BFE  0100               	movlb	0	; () banked
  9125  001C00  C082  F02F         	movff	i2memcpy@s1,i2memcpy@s
  9126  001C04  0100               	movlb	0	; () banked
  9127  001C06  C081  F02E         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9128  001C0A  0100               	movlb	0	; () banked
  9129  001C0C  C080  F02D         	movff	i2memcpy@d1,i2memcpy@d
  9130  001C10  D00E               	goto	i2l4351
  9131  001C12                     i2l4345:
  9132                           
  9133                           ; BSR set to: 0
  9134  001C12  C02F  FFD9         	movff	i2memcpy@s,fsr2l
  9135  001C16  C030  FFDA         	movff	i2memcpy@s+1,fsr2h
  9136  001C1A  C02D  FFE1         	movff	i2memcpy@d,fsr1l
  9137  001C1E  C02E  FFE2         	movff	i2memcpy@d+1,fsr1h
  9138  001C22  CFDF FFE7          	movff	indf2,indf1
  9139                           
  9140                           ; BSR set to: 0
  9141  001C26  4A2F               	infsnz	i2memcpy@s,f,c
  9142  001C28  2A30               	incf	i2memcpy@s+1,f,c
  9143                           
  9144                           ; BSR set to: 0
  9145  001C2A  4A2D               	infsnz	i2memcpy@d,f,c
  9146  001C2C  2A2E               	incf	i2memcpy@d+1,f,c
  9147  001C2E                     i2l4351:
  9148                           
  9149                           ; BSR set to: 0
  9150  001C2E  0100               	movlb	0	; () banked
  9151  001C30  0100               	movlb	0	; () banked
  9152  001C32  0784               	decf	i2memcpy@n& (0+255),f,b
  9153  001C34  A0D8               	btfss	status,0,c
  9154  001C36  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  9155  001C38  0100               	movlb	0	; () banked
  9156  001C3A  2984               	incf	i2memcpy@n& (0+255),w,b
  9157  001C3C  B4D8               	btfsc	status,2,c
  9158  001C3E  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  9159  001C40  B4D8               	btfsc	status,2,c
  9160                           
  9161                           ; BSR set to: 0
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;	Return value of i2_memcpy is never used
  9165  001C42  0012               	return	
  9166  001C44  D7E6               	goto	i2l4345
  9167  001C46                     __end_ofi2_memcpy:
  9168                           	opt stack 0
  9169                           pclatu	equ	0xFFB
  9170                           pclath	equ	0xFFA
  9171                           tblptru	equ	0xFF8
  9172                           tblptrh	equ	0xFF7
  9173                           tblptrl	equ	0xFF6
  9174                           tablat	equ	0xFF5
  9175                           prodh	equ	0xFF4
  9176                           prodl	equ	0xFF3
  9177                           intcon	equ	0xFF2
  9178                           postinc0	equ	0xFEE
  9179                           fsr0h	equ	0xFEA
  9180                           fsr0l	equ	0xFE9
  9181                           wreg	equ	0xFE8
  9182                           indf1	equ	0xFE7
  9183                           postinc1	equ	0xFE6
  9184                           postdec1	equ	0xFE5
  9185                           fsr1h	equ	0xFE2
  9186                           fsr1l	equ	0xFE1
  9187                           bsr	equ	0xFE0
  9188                           indf2	equ	0xFDF
  9189                           postinc2	equ	0xFDE
  9190                           postdec2	equ	0xFDD
  9191                           fsr2h	equ	0xFDA
  9192                           fsr2l	equ	0xFD9
  9193                           status	equ	0xFD8
  9194                           
  9195 ;; *************** function i2___awmod *****************
  9196 ;; Defined at:
  9197 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  9198 ;; Parameters:    Size  Location     Type
  9199 ;;  dividend        2   44[COMRAM] int 
  9200 ;;  divisor         2   46[COMRAM] int 
  9201 ;; Auto vars:     Size  Location     Type
  9202 ;;  __awmod         1    1[BANK0 ] unsigned char 
  9203 ;;  __awmod         1    0[BANK0 ] unsigned char 
  9204 ;; Return value:  Size  Location     Type
  9205 ;;                  2   44[COMRAM] int 
  9206 ;; Registers used:
  9207 ;;		wreg, status,2, status,0, prodl
  9208 ;; Tracked objects:
  9209 ;;		On entry : 0/0
  9210 ;;		On exit  : 0/0
  9211 ;;		Unchanged: 0/0
  9212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9213 ;;      Params:         4       0       0       0       0
  9214 ;;      Locals:         0       2       0       0       0
  9215 ;;      Temps:          1       0       0       0       0
  9216 ;;      Totals:         5       2       0       0       0
  9217 ;;Total ram usage:        7 bytes
  9218 ;; Hardware stack levels used:    1
  9219 ;; This function calls:
  9220 ;;		Nothing
  9221 ;; This function is called by:
  9222 ;;		i2_send_msg
  9223 ;; This function uses a non-reentrant model
  9224 ;;
  9225                           
  9226                           	psect	text53
  9227  00147C                     __ptext53:
  9228                           	opt stack 0
  9229  00147C                     i2___awmod:
  9230                           	opt stack 15
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;incstack = 0
  9234  00147C  6E31               	movwf	??i2___awmod& (0+255),c
  9235  00147E  0E00               	movlw	0
  9236  001480  0100               	movlb	0	; () banked
  9237  001482  0100               	movlb	0	; () banked
  9238  001484  6F81               	movwf	i2___awmod@sign& (0+255),b
  9239  001486  5031               	movf	??i2___awmod& (0+255),w,c
  9240                           
  9241                           ; BSR set to: 0
  9242  001488  502E               	movf	i2___awmod@dividend+1,w,c
  9243  00148A  0A80               	xorlw	128
  9244  00148C  6EF3               	movwf	prodl,c
  9245  00148E  0E80               	movlw	128
  9246  001490  5CF3               	subwf	prodl,w,c
  9247  001492  0E00               	movlw	0
  9248  001494  B4D8               	btfsc	status,2,c
  9249  001496  5C2D               	subwf	i2___awmod@dividend,w,c
  9250  001498  B0D8               	btfsc	status,0,c
  9251  00149A  D00A               	goto	i2l4361
  9252                           
  9253                           ; BSR set to: 0
  9254  00149C  6C2D               	negf	i2___awmod@dividend,c
  9255  00149E  1E2E               	comf	i2___awmod@dividend+1,f,c
  9256  0014A0  B0D8               	btfsc	status,0,c
  9257  0014A2  2A2E               	incf	i2___awmod@dividend+1,f,c
  9258                           
  9259                           ; BSR set to: 0
  9260  0014A4  6E31               	movwf	??i2___awmod& (0+255),c
  9261  0014A6  0E01               	movlw	1
  9262  0014A8  0100               	movlb	0	; () banked
  9263  0014AA  0100               	movlb	0	; () banked
  9264  0014AC  6F81               	movwf	i2___awmod@sign& (0+255),b
  9265  0014AE  5031               	movf	??i2___awmod& (0+255),w,c
  9266  0014B0                     i2l4361:
  9267                           
  9268                           ; BSR set to: 0
  9269  0014B0  5030               	movf	i2___awmod@divisor+1,w,c
  9270  0014B2  0A80               	xorlw	128
  9271  0014B4  6EF3               	movwf	prodl,c
  9272  0014B6  0E80               	movlw	128
  9273  0014B8  5CF3               	subwf	prodl,w,c
  9274  0014BA  0E00               	movlw	0
  9275  0014BC  B4D8               	btfsc	status,2,c
  9276  0014BE  5C2F               	subwf	i2___awmod@divisor,w,c
  9277  0014C0  B0D8               	btfsc	status,0,c
  9278  0014C2  D004               	goto	i2l4365
  9279                           
  9280                           ; BSR set to: 0
  9281  0014C4  6C2F               	negf	i2___awmod@divisor,c
  9282  0014C6  1E30               	comf	i2___awmod@divisor+1,f,c
  9283  0014C8  B0D8               	btfsc	status,0,c
  9284  0014CA  2A30               	incf	i2___awmod@divisor+1,f,c
  9285  0014CC                     i2l4365:
  9286                           
  9287                           ; BSR set to: 0
  9288  0014CC  5030               	movf	i2___awmod@divisor+1,w,c
  9289  0014CE  102F               	iorwf	i2___awmod@divisor,w,c
  9290  0014D0  B4D8               	btfsc	status,2,c
  9291  0014D2  D020               	goto	i2l4381
  9292                           
  9293                           ; BSR set to: 0
  9294  0014D4  6E31               	movwf	??i2___awmod& (0+255),c
  9295  0014D6  0E01               	movlw	1
  9296  0014D8  0100               	movlb	0	; () banked
  9297  0014DA  0100               	movlb	0	; () banked
  9298  0014DC  6F80               	movwf	i2___awmod@counter& (0+255),b
  9299  0014DE  5031               	movf	??i2___awmod& (0+255),w,c
  9300  0014E0  D006               	goto	i2l4371
  9301  0014E2                     i2l4369:
  9302                           
  9303                           ; BSR set to: 0
  9304  0014E2  90D8               	bcf	status,0,c
  9305  0014E4  362F               	rlcf	i2___awmod@divisor,f,c
  9306  0014E6  3630               	rlcf	i2___awmod@divisor+1,f,c
  9307  0014E8  0100               	movlb	0	; () banked
  9308  0014EA  0100               	movlb	0	; () banked
  9309  0014EC  2B80               	incf	i2___awmod@counter& (0+255),f,b
  9310  0014EE                     i2l4371:
  9311                           
  9312                           ; BSR set to: 0
  9313  0014EE  AE30               	btfss	i2___awmod@divisor+1,7,c
  9314  0014F0  D7F8               	goto	i2l4369
  9315  0014F2                     i2l4373:
  9316                           
  9317                           ; BSR set to: 0
  9318  0014F2  502F               	movf	i2___awmod@divisor,w,c
  9319  0014F4  5C2D               	subwf	i2___awmod@dividend,w,c
  9320  0014F6  5030               	movf	i2___awmod@divisor+1,w,c
  9321  0014F8  582E               	subwfb	i2___awmod@dividend+1,w,c
  9322  0014FA  A0D8               	btfss	status,0,c
  9323  0014FC  D004               	goto	i2l4377
  9324                           
  9325                           ; BSR set to: 0
  9326  0014FE  502F               	movf	i2___awmod@divisor,w,c
  9327  001500  5E2D               	subwf	i2___awmod@dividend,f,c
  9328  001502  5030               	movf	i2___awmod@divisor+1,w,c
  9329  001504  5A2E               	subwfb	i2___awmod@dividend+1,f,c
  9330  001506                     i2l4377:
  9331                           
  9332                           ; BSR set to: 0
  9333  001506  90D8               	bcf	status,0,c
  9334  001508  3230               	rrcf	i2___awmod@divisor+1,f,c
  9335  00150A  322F               	rrcf	i2___awmod@divisor,f,c
  9336                           
  9337                           ; BSR set to: 0
  9338  00150C  0100               	movlb	0	; () banked
  9339  00150E  0100               	movlb	0	; () banked
  9340  001510  2F80               	decfsz	i2___awmod@counter& (0+255),f,b
  9341  001512  D7EF               	goto	i2l4373
  9342  001514                     i2l4381:
  9343                           
  9344                           ; BSR set to: 0
  9345  001514  0100               	movlb	0	; () banked
  9346  001516  0100               	movlb	0	; () banked
  9347  001518  5181               	movf	i2___awmod@sign& (0+255),w,b
  9348  00151A  B4D8               	btfsc	status,2,c
  9349  00151C  D004               	goto	i2l4385
  9350                           
  9351                           ; BSR set to: 0
  9352  00151E  6C2D               	negf	i2___awmod@dividend,c
  9353  001520  1E2E               	comf	i2___awmod@dividend+1,f,c
  9354  001522  B0D8               	btfsc	status,0,c
  9355  001524  2A2E               	incf	i2___awmod@dividend+1,f,c
  9356  001526                     i2l4385:
  9357                           
  9358                           ; BSR set to: 0
  9359  001526  C02D  F02D         	movff	i2___awmod@dividend,?i2___awmod
  9360  00152A  C02E  F02E         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9361  00152E  0012               	return	
  9362  001530                     __end_ofi2___awmod:
  9363                           	opt stack 0
  9364                           pclatu	equ	0xFFB
  9365                           pclath	equ	0xFFA
  9366                           tblptru	equ	0xFF8
  9367                           tblptrh	equ	0xFF7
  9368                           tblptrl	equ	0xFF6
  9369                           tablat	equ	0xFF5
  9370                           prodh	equ	0xFF4
  9371                           prodl	equ	0xFF3
  9372                           intcon	equ	0xFF2
  9373                           postinc0	equ	0xFEE
  9374                           fsr0h	equ	0xFEA
  9375                           fsr0l	equ	0xFE9
  9376                           wreg	equ	0xFE8
  9377                           indf1	equ	0xFE7
  9378                           postinc1	equ	0xFE6
  9379                           postdec1	equ	0xFE5
  9380                           fsr1h	equ	0xFE2
  9381                           fsr1l	equ	0xFE1
  9382                           bsr	equ	0xFE0
  9383                           indf2	equ	0xFDF
  9384                           postinc2	equ	0xFDE
  9385                           postdec2	equ	0xFDD
  9386                           fsr2h	equ	0xFDA
  9387                           fsr2l	equ	0xFD9
  9388                           status	equ	0xFD8
  9389                           
  9390 ;; *************** function _SleepIfOkay *****************
  9391 ;; Defined at:
  9392 ;;		line 228 in file "../src/messages.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;		None
  9395 ;; Auto vars:     Size  Location     Type
  9396 ;;		None
  9397 ;; Return value:  Size  Location     Type
  9398 ;;		None               void
  9399 ;; Registers used:
  9400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9401 ;; Tracked objects:
  9402 ;;		On entry : 0/0
  9403 ;;		On exit  : 0/0
  9404 ;;		Unchanged: 0/0
  9405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9406 ;;      Params:         0       0       0       0       0
  9407 ;;      Locals:         0       0       0       0       0
  9408 ;;      Temps:          0       0       0       0       0
  9409 ;;      Totals:         0       0       0       0       0
  9410 ;;Total ram usage:        0 bytes
  9411 ;; Hardware stack levels used:    1
  9412 ;; Hardware stack levels required when called:    2
  9413 ;; This function calls:
  9414 ;;		_enter_sleep_mode
  9415 ;;		i2_check_msg
  9416 ;;		i2_in_high_int
  9417 ;;		i2_in_low_int
  9418 ;; This function is called by:
  9419 ;;		_InterruptHandlerHigh
  9420 ;; This function uses a non-reentrant model
  9421 ;;
  9422                           
  9423                           	psect	text54
  9424  001C46                     __ptext54:
  9425                           	opt stack 0
  9426  001C46                     _SleepIfOkay:
  9427                           	opt stack 17
  9428                           
  9429                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  9430                           
  9431                           ; BSR set to: 0
  9432                           ;incstack = 0
  9433  001C46  6650               	tstfsz	_MQ_Main_Willing_to_block,c
  9434  001C48  D001               	goto	i2l2579
  9435  001C4A  0012               	return	
  9436  001C4C                     i2l2579:
  9437                           
  9438                           ;messages.c: 232: }
  9439                           ;messages.c: 235: if (in_low_int()) {
  9440  001C4C  EC5E  F00F         	call	i2_in_low_int	;wreg free
  9441  001C50  5030               	movf	?i2_in_low_int+1,w,c
  9442  001C52  102F               	iorwf	?i2_in_low_int,w,c
  9443  001C54  A4D8               	btfss	status,2,c
  9444  001C56  0012               	return	
  9445                           
  9446                           ;messages.c: 237: }
  9447                           ;messages.c: 240: if (!in_high_int()) {
  9448                           
  9449                           ;messages.c: 236: return;
  9450  001C58  EC50  F010         	call	i2_in_high_int	;wreg free
  9451  001C5C  502E               	movf	?i2_in_high_int+1,w,c
  9452  001C5E  102D               	iorwf	?i2_in_high_int,w,c
  9453  001C60  B4D8               	btfsc	status,2,c
  9454  001C62  0012               	return	
  9455                           
  9456                           ;messages.c: 242: }
  9457                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  9458                           
  9459                           ;messages.c: 241: return;
  9460  001C64  0101               	movlb	1	; () banked
  9461  001C66  0E01               	movlw	high _ToMainHigh_MQ
  9462  001C68  6E2E               	movwf	i2check_msg@qptr+1,c
  9463  001C6A  0101               	movlb	1	; () banked
  9464  001C6C  0E00               	movlw	low _ToMainHigh_MQ
  9465  001C6E  6E2D               	movwf	i2check_msg@qptr,c
  9466  001C70  ECB1  F00F         	call	i2_check_msg	;wreg free
  9467  001C74  0900               	iorlw	0
  9468  001C76  A4D8               	btfss	status,2,c
  9469  001C78  0012               	return	
  9470                           
  9471                           ;messages.c: 249: }
  9472                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  9473                           
  9474                           ;messages.c: 248: return;
  9475  001C7A  0101               	movlb	1	; () banked
  9476  001C7C  0E01               	movlw	high _ToMainLow_MQ
  9477  001C7E  6E2E               	movwf	i2check_msg@qptr+1,c
  9478  001C80  0101               	movlb	1	; () banked
  9479  001C82  0E43               	movlw	low _ToMainLow_MQ
  9480  001C84  6E2D               	movwf	i2check_msg@qptr,c
  9481  001C86  ECB1  F00F         	call	i2_check_msg	;wreg free
  9482  001C8A  0900               	iorlw	0
  9483  001C8C  B4D8               	btfsc	status,2,c
  9484                           
  9485                           ;messages.c: 252: }
  9486                           ;messages.c: 253: enter_sleep_mode();
  9487                           
  9488                           ;messages.c: 251: return;
  9489  001C8E  EC5D  F010         	call	_enter_sleep_mode	;wreg free
  9490  001C92  0012               	return	
  9491  001C94                     __end_of_SleepIfOkay:
  9492                           	opt stack 0
  9493                           pclatu	equ	0xFFB
  9494                           pclath	equ	0xFFA
  9495                           tblptru	equ	0xFF8
  9496                           tblptrh	equ	0xFF7
  9497                           tblptrl	equ	0xFF6
  9498                           tablat	equ	0xFF5
  9499                           prodh	equ	0xFF4
  9500                           prodl	equ	0xFF3
  9501                           intcon	equ	0xFF2
  9502                           postinc0	equ	0xFEE
  9503                           fsr0h	equ	0xFEA
  9504                           fsr0l	equ	0xFE9
  9505                           wreg	equ	0xFE8
  9506                           indf1	equ	0xFE7
  9507                           postinc1	equ	0xFE6
  9508                           postdec1	equ	0xFE5
  9509                           fsr1h	equ	0xFE2
  9510                           fsr1l	equ	0xFE1
  9511                           bsr	equ	0xFE0
  9512                           indf2	equ	0xFDF
  9513                           postinc2	equ	0xFDE
  9514                           postdec2	equ	0xFDD
  9515                           fsr2h	equ	0xFDA
  9516                           fsr2l	equ	0xFD9
  9517                           status	equ	0xFD8
  9518                           
  9519 ;; *************** function i2_in_low_int *****************
  9520 ;; Defined at:
  9521 ;;		line 31 in file "../src/interrupts.c"
  9522 ;; Parameters:    Size  Location     Type
  9523 ;;		None
  9524 ;; Auto vars:     Size  Location     Type
  9525 ;;		None
  9526 ;; Return value:  Size  Location     Type
  9527 ;;                  2   46[COMRAM] int 
  9528 ;; Registers used:
  9529 ;;		wreg, status,2, status,0, cstack
  9530 ;; Tracked objects:
  9531 ;;		On entry : 0/0
  9532 ;;		On exit  : 0/0
  9533 ;;		Unchanged: 0/0
  9534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9535 ;;      Params:         2       0       0       0       0
  9536 ;;      Locals:         0       0       0       0       0
  9537 ;;      Temps:          0       0       0       0       0
  9538 ;;      Totals:         2       0       0       0       0
  9539 ;;Total ram usage:        2 bytes
  9540 ;; Hardware stack levels used:    1
  9541 ;; Hardware stack levels required when called:    1
  9542 ;; This function calls:
  9543 ;;		i2_in_high_int
  9544 ;; This function is called by:
  9545 ;;		_SleepIfOkay
  9546 ;; This function uses a non-reentrant model
  9547 ;;
  9548                           
  9549                           	psect	text55
  9550  001EBC                     __ptext55:
  9551                           	opt stack 0
  9552  001EBC                     i2_in_low_int:
  9553                           	opt stack 17
  9554                           
  9555                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  9556                           
  9557                           ;incstack = 0
  9558  001EBC  ACF2               	btfss	intcon,6,c	;volatile
  9559  001EBE  D005               	goto	i2l3353
  9560                           
  9561                           ;interrupts.c: 33: return (0);
  9562  001EC0  0E00               	movlw	0
  9563  001EC2  6E30               	movwf	?i2_in_low_int+1,c
  9564  001EC4  0E00               	movlw	0
  9565  001EC6  6E2F               	movwf	?i2_in_low_int,c
  9566  001EC8  0012               	return	
  9567  001ECA                     i2l3353:
  9568  001ECA  EC50  F010         	call	i2_in_high_int	;wreg free
  9569  001ECE  502E               	movf	?i2_in_high_int+1,w,c
  9570  001ED0  102D               	iorwf	?i2_in_high_int,w,c
  9571  001ED2  B4D8               	btfsc	status,2,c
  9572  001ED4  D005               	goto	i2l3361
  9573                           
  9574                           ;interrupts.c: 35: return (0);
  9575  001ED6  0E00               	movlw	0
  9576  001ED8  6E30               	movwf	?i2_in_low_int+1,c
  9577  001EDA  0E00               	movlw	0
  9578  001EDC  6E2F               	movwf	?i2_in_low_int,c
  9579  001EDE  0012               	return	
  9580  001EE0                     i2l3361:
  9581                           
  9582                           ;interrupts.c: 37: return (1);
  9583  001EE0  0E00               	movlw	0
  9584  001EE2  6E30               	movwf	?i2_in_low_int+1,c
  9585  001EE4  0E01               	movlw	1
  9586  001EE6  6E2F               	movwf	?i2_in_low_int,c
  9587  001EE8  0012               	return	
  9588  001EEA                     __end_ofi2_in_low_int:
  9589                           	opt stack 0
  9590                           pclatu	equ	0xFFB
  9591                           pclath	equ	0xFFA
  9592                           tblptru	equ	0xFF8
  9593                           tblptrh	equ	0xFF7
  9594                           tblptrl	equ	0xFF6
  9595                           tablat	equ	0xFF5
  9596                           prodh	equ	0xFF4
  9597                           prodl	equ	0xFF3
  9598                           intcon	equ	0xFF2
  9599                           postinc0	equ	0xFEE
  9600                           fsr0h	equ	0xFEA
  9601                           fsr0l	equ	0xFE9
  9602                           wreg	equ	0xFE8
  9603                           indf1	equ	0xFE7
  9604                           postinc1	equ	0xFE6
  9605                           postdec1	equ	0xFE5
  9606                           fsr1h	equ	0xFE2
  9607                           fsr1l	equ	0xFE1
  9608                           bsr	equ	0xFE0
  9609                           indf2	equ	0xFDF
  9610                           postinc2	equ	0xFDE
  9611                           postdec2	equ	0xFDD
  9612                           fsr2h	equ	0xFDA
  9613                           fsr2l	equ	0xFD9
  9614                           status	equ	0xFD8
  9615                           
  9616 ;; *************** function i2_in_high_int *****************
  9617 ;; Defined at:
  9618 ;;		line 23 in file "../src/interrupts.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;		None
  9621 ;; Auto vars:     Size  Location     Type
  9622 ;;		None
  9623 ;; Return value:  Size  Location     Type
  9624 ;;                  2   44[COMRAM] int 
  9625 ;; Registers used:
  9626 ;;		wreg, status,2
  9627 ;; Tracked objects:
  9628 ;;		On entry : 0/0
  9629 ;;		On exit  : 0/0
  9630 ;;		Unchanged: 0/0
  9631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9632 ;;      Params:         2       0       0       0       0
  9633 ;;      Locals:         0       0       0       0       0
  9634 ;;      Temps:          0       0       0       0       0
  9635 ;;      Totals:         2       0       0       0       0
  9636 ;;Total ram usage:        2 bytes
  9637 ;; Hardware stack levels used:    1
  9638 ;; This function calls:
  9639 ;;		Nothing
  9640 ;; This function is called by:
  9641 ;;		_SleepIfOkay
  9642 ;;		i2_in_low_int
  9643 ;; This function uses a non-reentrant model
  9644 ;;
  9645                           
  9646                           	psect	text56
  9647  0020A0                     __ptext56:
  9648                           	opt stack 0
  9649  0020A0                     i2_in_high_int:
  9650                           	opt stack 17
  9651                           
  9652                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  9653                           
  9654                           ;incstack = 0
  9655  0020A0  0E00               	movlw	0
  9656  0020A2  AEF2               	btfss	intcon,7,c	;volatile
  9657  0020A4  0E01               	movlw	1
  9658  0020A6  6E2D               	movwf	?i2_in_high_int,c
  9659  0020A8  6A2E               	clrf	?i2_in_high_int+1,c
  9660  0020AA  0012               	return	
  9661  0020AC                     __end_ofi2_in_high_int:
  9662                           	opt stack 0
  9663                           pclatu	equ	0xFFB
  9664                           pclath	equ	0xFFA
  9665                           tblptru	equ	0xFF8
  9666                           tblptrh	equ	0xFF7
  9667                           tblptrl	equ	0xFF6
  9668                           tablat	equ	0xFF5
  9669                           prodh	equ	0xFF4
  9670                           prodl	equ	0xFF3
  9671                           intcon	equ	0xFF2
  9672                           postinc0	equ	0xFEE
  9673                           fsr0h	equ	0xFEA
  9674                           fsr0l	equ	0xFE9
  9675                           wreg	equ	0xFE8
  9676                           indf1	equ	0xFE7
  9677                           postinc1	equ	0xFE6
  9678                           postdec1	equ	0xFE5
  9679                           fsr1h	equ	0xFE2
  9680                           fsr1l	equ	0xFE1
  9681                           bsr	equ	0xFE0
  9682                           indf2	equ	0xFDF
  9683                           postinc2	equ	0xFDE
  9684                           postdec2	equ	0xFDD
  9685                           fsr2h	equ	0xFDA
  9686                           fsr2l	equ	0xFD9
  9687                           status	equ	0xFD8
  9688                           
  9689 ;; *************** function i2_check_msg *****************
  9690 ;; Defined at:
  9691 ;;		line 222 in file "../src/messages.c"
  9692 ;; Parameters:    Size  Location     Type
  9693 ;;  qptr            2   44[COMRAM] PTR struct __msg_queue
  9694 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;		None
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  1    wreg      unsigned char 
  9699 ;; Registers used:
  9700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9706 ;;      Params:         2       0       0       0       0
  9707 ;;      Locals:         0       0       0       0       0
  9708 ;;      Temps:          1       0       0       0       0
  9709 ;;      Totals:         3       0       0       0       0
  9710 ;;Total ram usage:        3 bytes
  9711 ;; Hardware stack levels used:    1
  9712 ;; This function calls:
  9713 ;;		Nothing
  9714 ;; This function is called by:
  9715 ;;		_SleepIfOkay
  9716 ;; This function uses a non-reentrant model
  9717 ;;
  9718                           
  9719                           	psect	text57
  9720  001F62                     __ptext57:
  9721                           	opt stack 0
  9722  001F62                     i2_check_msg:
  9723                           	opt stack 18
  9724                           
  9725                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9726                           
  9727                           ;incstack = 0
  9728  001F62  EE20 F042          	lfsr	2,66
  9729  001F66  502D               	movf	i2check_msg@qptr,w,c
  9730  001F68  26D9               	addwf	fsr2l,f,c
  9731  001F6A  502E               	movf	i2check_msg@qptr+1,w,c
  9732  001F6C  22DA               	addwfc	fsr2h,f,c
  9733  001F6E  50DF               	movf	indf2,w,c
  9734  001F70  6E2F               	movwf	??i2_check_msg& (0+255),c
  9735  001F72  502F               	movf	??i2_check_msg,w,c
  9736  001F74  0D0D               	mullw	13
  9737  001F76  50F3               	movf	prodl,w,c
  9738  001F78  242D               	addwf	i2check_msg@qptr,w,c
  9739  001F7A  6ED9               	movwf	fsr2l,c
  9740  001F7C  50F4               	movf	prodh,w,c
  9741  001F7E  202E               	addwfc	i2check_msg@qptr+1,w,c
  9742  001F80  6EDA               	movwf	fsr2h,c
  9743  001F82  50DF               	movf	indf2,w,c
  9744  001F84  0012               	return	
  9745  001F86                     __end_ofi2_check_msg:
  9746                           	opt stack 0
  9747                           pclatu	equ	0xFFB
  9748                           pclath	equ	0xFFA
  9749                           tblptru	equ	0xFF8
  9750                           tblptrh	equ	0xFF7
  9751                           tblptrl	equ	0xFF6
  9752                           tablat	equ	0xFF5
  9753                           prodh	equ	0xFF4
  9754                           prodl	equ	0xFF3
  9755                           intcon	equ	0xFF2
  9756                           postinc0	equ	0xFEE
  9757                           fsr0h	equ	0xFEA
  9758                           fsr0l	equ	0xFE9
  9759                           wreg	equ	0xFE8
  9760                           indf1	equ	0xFE7
  9761                           postinc1	equ	0xFE6
  9762                           postdec1	equ	0xFE5
  9763                           fsr1h	equ	0xFE2
  9764                           fsr1l	equ	0xFE1
  9765                           bsr	equ	0xFE0
  9766                           indf2	equ	0xFDF
  9767                           postinc2	equ	0xFDE
  9768                           postdec2	equ	0xFDD
  9769                           fsr2h	equ	0xFDA
  9770                           fsr2l	equ	0xFD9
  9771                           status	equ	0xFD8
  9772                           
  9773 ;; *************** function _enter_sleep_mode *****************
  9774 ;; Defined at:
  9775 ;;		line 202 in file "../src/messages.c"
  9776 ;; Parameters:    Size  Location     Type
  9777 ;;		None
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;		None
  9780 ;; Return value:  Size  Location     Type
  9781 ;;		None               void
  9782 ;; Registers used:
  9783 ;;		None
  9784 ;; Tracked objects:
  9785 ;;		On entry : 0/0
  9786 ;;		On exit  : 0/0
  9787 ;;		Unchanged: 0/0
  9788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9789 ;;      Params:         0       0       0       0       0
  9790 ;;      Locals:         0       0       0       0       0
  9791 ;;      Temps:          0       0       0       0       0
  9792 ;;      Totals:         0       0       0       0       0
  9793 ;;Total ram usage:        0 bytes
  9794 ;; Hardware stack levels used:    1
  9795 ;; This function calls:
  9796 ;;		Nothing
  9797 ;; This function is called by:
  9798 ;;		_SleepIfOkay
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802                           	psect	text58
  9803  0020BA                     __ptext58:
  9804                           	opt stack 0
  9805  0020BA                     _enter_sleep_mode:
  9806                           	opt stack 18
  9807                           
  9808                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9809                           
  9810                           ;incstack = 0
  9811  0020BA  8ED3               	bsf	4051,7,c	;volatile
  9812  0020BC  0003               	sleep		;# 
  9813  0020BE  0012               	return	
  9814  0020C0                     __end_of_enter_sleep_mode:
  9815                           	opt stack 0
  9816  0000                     pclatu	equ	0xFFB
  9817                           pclath	equ	0xFFA
  9818                           tblptru	equ	0xFF8
  9819                           tblptrh	equ	0xFF7
  9820                           tblptrl	equ	0xFF6
  9821                           tablat	equ	0xFF5
  9822                           prodh	equ	0xFF4
  9823                           prodl	equ	0xFF3
  9824                           intcon	equ	0xFF2
  9825                           postinc0	equ	0xFEE
  9826                           fsr0h	equ	0xFEA
  9827                           fsr0l	equ	0xFE9
  9828                           wreg	equ	0xFE8
  9829                           indf1	equ	0xFE7
  9830                           postinc1	equ	0xFE6
  9831                           postdec1	equ	0xFE5
  9832                           fsr1h	equ	0xFE2
  9833                           fsr1l	equ	0xFE1
  9834                           bsr	equ	0xFE0
  9835                           indf2	equ	0xFDF
  9836                           postinc2	equ	0xFDE
  9837                           postdec2	equ	0xFDD
  9838                           fsr2h	equ	0xFDA
  9839                           fsr2l	equ	0xFD9
  9840                           status	equ	0xFD8
  9841                           pclatu	equ	0xFFB
  9842                           pclath	equ	0xFFA
  9843                           tblptru	equ	0xFF8
  9844                           tblptrh	equ	0xFF7
  9845                           tblptrl	equ	0xFF6
  9846                           tablat	equ	0xFF5
  9847                           prodh	equ	0xFF4
  9848                           prodl	equ	0xFF3
  9849                           intcon	equ	0xFF2
  9850                           postinc0	equ	0xFEE
  9851                           fsr0h	equ	0xFEA
  9852                           fsr0l	equ	0xFE9
  9853                           wreg	equ	0xFE8
  9854                           indf1	equ	0xFE7
  9855                           postinc1	equ	0xFE6
  9856                           postdec1	equ	0xFE5
  9857                           fsr1h	equ	0xFE2
  9858                           fsr1l	equ	0xFE1
  9859                           bsr	equ	0xFE0
  9860                           indf2	equ	0xFDF
  9861                           postinc2	equ	0xFDE
  9862                           postdec2	equ	0xFDD
  9863                           fsr2h	equ	0xFDA
  9864                           fsr2l	equ	0xFD9
  9865                           status	equ	0xFD8
  9866                           
  9867                           	psect	rparam
  9868  0000                     pclatu	equ	0xFFB
  9869                           pclath	equ	0xFFA
  9870                           tblptru	equ	0xFF8
  9871                           tblptrh	equ	0xFF7
  9872                           tblptrl	equ	0xFF6
  9873                           tablat	equ	0xFF5
  9874                           prodh	equ	0xFF4
  9875                           prodl	equ	0xFF3
  9876                           intcon	equ	0xFF2
  9877                           postinc0	equ	0xFEE
  9878                           fsr0h	equ	0xFEA
  9879                           fsr0l	equ	0xFE9
  9880                           wreg	equ	0xFE8
  9881                           indf1	equ	0xFE7
  9882                           postinc1	equ	0xFE6
  9883                           postdec1	equ	0xFE5
  9884                           fsr1h	equ	0xFE2
  9885                           fsr1l	equ	0xFE1
  9886                           bsr	equ	0xFE0
  9887                           indf2	equ	0xFDF
  9888                           postinc2	equ	0xFDE
  9889                           postdec2	equ	0xFDD
  9890                           fsr2h	equ	0xFDA
  9891                           fsr2l	equ	0xFD9
  9892                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         300
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     49      83
    BANK0           128     61      75
    BANK1           256    100     236
    BANK2           256      0     134
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_trans@data	PTR unsigned char  size(2) Largest target is 11
		 -> i2c_slave_int_handler@motorcomm(BANK0[2]), main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 13
		 -> main@uc(BANK1[13]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK1[29]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 5
		 -> i2c_slave_int_handler@motormsg(BANK0[5]), i2c_slave_int_handler@sensormsg(BANK0[5]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK1[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@ic(BANK1[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[13]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_WriteTimer0
    _i2c_slave_int_handler->_start_i2c_slave_reply
    _i2c_slave_int_handler->i2_uart_trans
    i2_send_msg->i2___awmod
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0   13956
                                             36 BANK1     64    64      0
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                         _uart_trans
 ---------------------------------------------------------------------------------
 (1) _uart_trans                                           5     3      2     157
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3347
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2658
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2435
                                             10 BANK1     12     6      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      7     3      4     545
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2969
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2969
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2746
                                             10 BANK1     14     7      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     637
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     347
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    3486
                                             27 COMRAM    17    17      0
                    _adc_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3398
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    3375
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    3022
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     809
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   0     0      0      88
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    5474
                                             47 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  0     0      0      88
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      88
                                             44 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    5150
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_slave_int_handler                              25    25      0    5150
                                             22 BANK0     25    25      0
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
                       i2_uart_trans
 ---------------------------------------------------------------------------------
 (13) i2_uart_trans                                        5     3      2     191
                                             44 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     3      2     172
                                             44 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    3994
                                             18 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    3381
                                              6 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                             44 COMRAM     4     4      0
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           7     3      4    1034
                                             44 COMRAM     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             46 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             44 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
   _uart_trans

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
   _timer1_int_handler
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_trans_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_slave_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2___awmod
           i2_memcpy
       _handle_start
       _start_i2c_slave_reply
       i2_uart_trans
   _timer0_int_handler
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      86       8       52.3%
BITBANK1           100      0       0      10        0.0%
BANK1              100     64      EC       6       92.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80     3D      4B       5       58.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     31      53       1       65.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     210       9        0.0%
DATA                 0      0     210       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Thu Mar 06 10:30:44 2014

          _MQ_Main_Willing_to_block 0050                         _SSPSTATbits 000FC7  
         __end_of_ToMainLow_recvmsg 1D60                                  bsr 000FE0  
         __end_of_ToMainLow_sendmsg 1F62                        __CFG_CP0$OFF 000000  
                               l132 091A                                 l507 1F0E  
                               l531 1DFC                                 l508 1F10  
                               l533 1E14                                 l534 1E16  
                               l801 2008                                 l572 16BC  
                               l573 16BE                                 l574 16CC  
                               l575 16CE                                 l488 1804  
                               l568 169C     __size_of_uart_trans_int_handler 0068  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                      ___awmod@sign 018C                      _FromMainLow_MQ 0243  
                               prod 000FF3                                 wreg 000FE8  
                      __CFG_IESO$ON 000000                        ?_in_high_int 0186  
                  ??_init_uart_recv 0188          i2c_slave_int_handler@F5130 00C2  
        i2c_slave_int_handler@F5132 00C7          i2c_slave_int_handler@F5128 00BD  
                              l1113 177A                                l4009 0BF6  
                              l4311 1732                                l3603 1CCA  
                              l4315 1766                                l4307 1718  
                              l4309 172A                                l3701 08C8  
                              l3703 0920                                l3617 1D0E  
                              l3721 0A38                                l4291 1056  
                              l4283 1008                                l4275 0FC4  
                              l3715 099E                                l3707 0940  
                              l4285 101A                                l3901 1448  
                              l3725 0A7E                                l3717 09F0  
                              l3709 0960                                l3823 169E  
                              l3815 1688                                l4287 1022  
                              l4295 106A                                l4279 0FEA  
                              l3921 0C16                                l3729 0A82  
                              l4299 1082                                l3595 1CA8  
                              l3925 0C9A                                l3941 1950  
                              l3693 0886                                l3775 1DFE  
                              l3881 18D4                                l3875 18A8  
                              l3973 1BBC                                l3887 1900  
                              l3959 0D94                                l3993 0B08  
                              l3897 13DE                                l3979 1BE0  
                              _LATA 000F89                                _LATB 000F8A  
                              u3737 200A                                i1l57 0080  
                   _FromMainHigh_MQ 0200                __end_ofi2_uart_trans 1668  
                     __CFG_FCMEN$ON 000000              ?_block_on_To_msgqueues 0001  
                              _main 07B0                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr0l 000FE9  
                              fsr2h 000FDA                                indf1 000FE7  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                         main@msgtype 01BE  
                        i1_send_msg 1308                                pclat 000FFA  
                       i2_check_msg 1F62                                prodh 000FF4  
                              prodl 000FF3               handle_start@data_read 002D  
                              start 00C6                       __CFG_FOSC2$ON 000000  
                  ?_adc_int_handler 0001                          i2_send_msg 0E64  
         ToMainHigh_recvmsg@msgtype 019E       i2c_slave_int_handler@motormsg 009D  
                    send_msg@length 0192                     __end_of_OpenADC 1808  
       __size_of_timer0_int_handler 0012             ??_i2c_slave_int_handler 0096  
                       _Delay1KTCYx 2004                               ?_main 0001  
                   __end_of___awmod 108C                               _T0CON 000FD5  
                             _T1CON 000FCD                     __end_of___lwmod 1784  
                        i1memcpy@d1 0001                               i1l428 1B30  
                             i2l332 052C                               i2l334 0192  
                             i2l360 049E                               i2l352 0366  
                             i2l338 01D6                               i1l586 1FF4  
                             i2l366 053E                               i2l295 11FC  
                        i1memcpy@s1 0003                               _RCREG 000FAE  
                             _RCSTA 000FAB                               _TMR0H 000FD7  
                             _TMR1H 000FCF                               _TMR0L 000FD6  
                             _TMR1L 000FCE                               _SPBRG 000FAF  
                             _PORTA 000F80                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                        i2memcpy@d1 0080                          i2memcpy@s1 0082  
                      ?_init_queues 0001           __size_of_enter_sleep_mode 0006  
                    i1___awmod@sign 0007                     __end_of_in_main 1D1E  
        ToMainLow_recvmsg@maxlength 01A2             timer0_lthread@msgbuffer 018C  
           i2c_configure_slave@addr 0186                               tablat 000FF5  
                             status 000FD8              _uart_trans_int_handler 1ACC  
                  __end_ofi1_memcpy 1DE2                  __size_ofi1___awmod 009C  
                  __end_ofi2_memcpy 1C46                  __size_ofi2___awmod 00B4  
                   __initialization 1B34                        __end_of_main 0A9C  
       __size_of_timer1_int_handler 000E          __size_of_ToMainLow_recvmsg 0042  
        __size_of_ToMainLow_sendmsg 0026               __size_ofi2_in_low_int 002E  
     __size_of_FromMainHigh_sendmsg 0036                              ??_main 01AA  
                   send_msg@msgtype 0193                       __activetblptr 000002  
                   send_msg@tlength 0197                          _SetChanADC 1FA8  
              __end_of_handle_start 1248                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADCON2 000FC0  
                            _ADRESH 000FC4             ??_uart_recv_int_handler 001B  
                            i1l1345 1F92                              i1l3413 1DD0  
                            i1l3407 1DB4                              i1l3441 158A  
                            i1l3433 155C                              i1l4401 1340  
                            i1l3443 1592                              i1l3445 1596  
                            i1l3453 15B4                              i1l3437 1578  
                            i1l3457 15C2                              i1l3449 15AA  
                            i1l4435 12E8                              i1l4429 12A4  
                            i1l4453 0070                              i2l3023 10A8  
                            i1l4447 0066                              i2l3043 1218  
                            i2l3027 111C                              i2l3045 1230  
                            i2l4201 079E                              i2l4121 03DA  
                        _OpenTimer0 1EEA                          _OpenTimer1 1DE2  
                            i2l4123 041C                              i2l4061 0188  
                    __CFG_WDTEN$OFF 000000                              i2l4127 042E  
                            i2l4055 0170                              i2l3361 1EE0  
                            i2l3353 1ECA                              i2l4161 05A2  
                            i2l4081 023A                              i2l4331 0EC0  
                            i2l4155 0542                              i2l4091 0276  
                            i2l4149 0500                              i2l4351 1C2E  
                            i2l4079 020E                              i2l4361 14B0  
                            i2l4345 1C12                              i2l4177 06E2  
                            i2l4169 063C                              i2l4097 028E  
                            i2l3633 184C                              i2l2579 1C4C  
                            i2l4371 14EE                              i2l3395 15E2  
                            i2l4099 02CE                              i2l3627 1842  
                            i2l4373 14F2                              i2l4381 1514  
                            i2l4365 14CC                              i2l4189 0740  
                            i2l3399 163C                              i2l4385 1526  
                            i2l4377 1506                              i2l4369 14E2  
       __end_of_i2c_configure_slave 1F3C                       ??_SleepIfOkay 0031  
                __size_of_ReadUSART 001E                              _OSCCON 000FD3  
                            _SPBRGH 000FB0                              _SSPADD 000FC8  
                            _SSPBUF 000FC9      __size_of_start_i2c_slave_reply 00F4  
                       ?i1_send_msg 000B       __end_of_start_i2c_slave_reply 1180  
                timer0_lthread@tptr 0186                           ??_OpenADC 0188  
                      i2_in_low_int 1EBC                         ?i2_send_msg 0086  
                    __CFG_XINST$OFF 000000                  __size_of_OpenUSART 0092  
                   _i2c_int_handler 20B4                           ??___awmod 018A  
 i2c_slave_int_handler@data_written 00A7                     _i2c_master_send 0BFA  
                  OpenTimer0@config 0186                              _ic_ptr 00C9  
                         ??___lwmod 018A                       main@msgbuffer 01AF  
                  __end_of_init_i2c 1ACC                    OpenTimer1@config 0186  
                            _memcpy 1B9A                              clear_0 1B3A  
                            clear_1 1B46                              clear_2 1B52  
                   ___awmod@divisor 0188                              _uc_ptr 0052  
                   ___awmod@counter 018B                              main@ic 01CD  
                            main@uc 01C0                    __end_of_recv_msg 0BFA  
       start_i2c_slave_reply@length 0031                           ??_in_main 018C  
                 __end_ofi1___awmod 15CC                    __end_of_send_msg 0E64  
                 __end_ofi2___awmod 1530                  i2uart_trans@length 0031  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 0189  
             __size_ofi2_uart_trans 009C                      i2___awmod@sign 0081  
          ToMainLow_recvmsg@msgtype 019E                __size_of_in_high_int 0012  
                   __CFG_FOSC$HSPLL 000000                          __accesstop 0080  
           __end_of__initialization 1B90          __end_of_ToMainHigh_recvmsg 1DA2  
        __end_of_ToMainHigh_sendmsg 1EBC         __end_of_init_timer1_lthread 203E  
               __end_of_SleepIfOkay 1C94                      __pcstackCOMRAM 0001  
                      __pidataBANK0 2094                        __pidataBANK1 20C0  
            __size_ofi2_in_high_int 000C                  __size_of_check_msg 0036  
                 __end_of_ReadUSART 2004                        i2_uart_trans 15CC  
                       ?_SetChanADC 0001                 __size_ofi1_send_msg 00C0  
                         ?i1_memcpy 0001       __size_of_InterruptHandlerHigh 1882  
       __end_of_InterruptHandlerLow 00C6                           ?i2_memcpy 0080  
                     _ToMainHigh_MQ 0100                    _enter_sleep_mode 20BA  
               __size_ofi2_send_msg 011A                timer1_lthread@length 01A4  
                     ReadUSART@data 0001                   __end_of_OpenUSART 16FA  
                     check_msg@qptr 0186                timer1_lthread@retval 01A9  
           ??_block_on_To_msgqueues 018C                __size_of_init_queues 006E  
                        __pbssBANK1 0100                          __pbssBANK2 0200  
                       ?_OpenTimer0 0001                         ?_OpenTimer1 0001  
                        __pnvCOMRAM 0052             __end_of_i2c_int_handler 20BA  
                      ?i2_check_msg 002D             __end_of_i2c_master_send 0D38  
                timer1_lthread@tptr 01A0                   recv_msg@maxlength 0192  
                   recv_msg@msgtype 0193                     recv_msg@tlength 019A  
             __size_of_handle_start 00C8                        ?_Delay1KTCYx 0001  
                  WriteTimer0@timer 002F                             ?_memcpy 0186  
                  WriteTimer1@timer 0003                       ??_WriteTimer0 002F  
                     ??_WriteTimer1 0003      __size_of_i2c_slave_int_handler 06E6  
           __size_of_timer0_lthread 0012       __end_of_i2c_slave_int_handler 07B0  
           __size_of_timer1_lthread 0072                          ??i1_memcpy 0007  
                        ??i2_memcpy 002D                    i1send_msg@length 000D  
                     i2_in_high_int 20A0                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _SSPSTAT 000FC7  
           ?_uart_trans_int_handler 0001                   __end_of_check_msg 1E86  
                         ?_init_i2c 0186                         _SleepIfOkay 1C46  
                         ?_recv_msg 0190                             _OpenADC 1784  
                        _in_low_int 1C94                        _handle_start 1180  
                           __Hparam 0000                 __size_of_SetChanADC 0020  
                         ?_send_msg 0190                             __Lparam 0000  
        __end_of_timer0_int_handler 2074                    init_uart_recv@uc 0186  
                           ___awmod 0F7E                             ___lwmod 16FA  
                   __CFG_STVREN$OFF 000000  i2c_slave_int_handler@overrun_error 00A8  
                           __pcinit 1B34                     __size_of_memcpy 005E  
          __size_of_adc_int_handler 0022                          _init_queue 1908  
                           __ramtop 0400                 __size_of_OpenTimer0 002A  
               __size_of_OpenTimer1 0038                             __ptext0 07B0  
                           __ptext1 13C8                             __ptext2 1982  
                           __ptext3 16FA                             __ptext4 1E1A  
                           __ptext5 0D38                             __ptext6 201A  
                           __ptext7 1FC8                             __ptext8 202C  
                           __ptext9 19F4                           _T0CONbits 000FD5  
                           _in_main 1CDA                           _T1CONbits 000FCD  
                  ___awmod@dividend 0186                 __end_of_WriteTimer0 2086  
               __end_of_WriteTimer1 2062                      ?i2_in_high_int 002D  
    __end_of_uart_trans_int_handler 1B34                      OpenADC@config2 0186  
                           main@msg 01AC                      __pintcode_body 1808  
              end_of_initialization 1B90             timer1_lthread@msgbuffer 01A6  
      __end_of_FromMainHigh_sendmsg 1E50      __size_of_uart_recv_int_handler 00C0  
        FromMainHigh_sendmsg@length 019F                             memcpy@d 018C  
                           memcpy@n 018A                             memcpy@s 018E  
     __end_of_uart_recv_int_handler 1308                          ??_init_i2c 0188  
                     __Lmediumconst 0000                             int_func 1808  
                      ??i1_send_msg 0011             __size_of_init_uart_recv 001E  
                  ?_i2c_int_handler 0001                    ?_i2c_master_send 0186  
                        ??_recv_msg 0197                        ??i2_send_msg 008C  
                        ??_send_msg 0196          __end_of_timer1_int_handler 2094  
                         _RCSTAbits 000FAB                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
         ToMainHigh_sendmsg@msgtype 0092                          _uart_trans 13C8  
                __end_ofi1_send_msg 13C8         FromMainHigh_sendmsg@msgtype 019C  
                         _TRISCbits 000F94                           i1___awmod 1530  
                __end_ofi2_send_msg 0F7E                           i2___awmod 147C  
                         _TXSTAbits 000FAC                          main@length 01BF  
                       ?_in_low_int 0188               timer0_lthread@msgtype 0188  
             _start_i2c_slave_reply 108C        __size_of_i2c_configure_slave 0028  
              __size_ofi2_check_msg 0024            __end_of_enter_sleep_mode 20C0  
                _ToMainHigh_recvmsg 1D60                           i1memcpy@d 0007  
                _ToMainHigh_sendmsg 1E86                           i1memcpy@n 0005  
                         i1memcpy@s 0009           i2c_master_send@recvlength 0186  
                    _timer0_lthread 201A                         ?_init_queue 0186  
                         i2memcpy@d 002D                         _WriteTimer0 2074  
                       _WriteTimer1 2050                           i2memcpy@n 0084  
                         i2memcpy@s 002F                      _timer1_lthread 1982  
                    __end_of_memcpy 1BF8                   _enable_interrupts 20AC  
              __size_of_Delay1KTCYx 0016                        ??_SetChanADC 0186  
         i2c_master_send@sendlength 018C                 ?_ToMainHigh_recvmsg 019E  
                   ??i2_in_high_int 002F                 ?_ToMainHigh_sendmsg 0092  
                ?_enable_interrupts 0001                 start_initialization 1B34  
                     ??_in_high_int 0188                           _ReadUSART 1FE6  
                 ??_adc_int_handler 0001                          ?i1___awmod 0001  
                 __size_ofi1_memcpy 0040                   __size_ofi2_memcpy 004E  
         i2c_master_send@slave_addr 0189                          ?i2___awmod 002D  
               ??_enable_interrupts 0186                        ??_OpenTimer0 0186  
                      ??_OpenTimer1 0186      __size_of_block_on_To_msgqueues 007E  
     __end_of_block_on_To_msgqueues 1908                           _OpenUSART 1668  
      __end_of_InterruptHandlerHigh 188A                          init_i2c@ic 0186  
              ??_ToMainHigh_recvmsg 01A2                ??_ToMainHigh_sendmsg 0032  
                __end_of_SetChanADC 1FC8              __end_of_timer0_lthread 202C  
                       __pdataBANK0 00BD                         __pdataBANK1 01EA  
            __end_of_timer1_lthread 19F4                  i1___awmod@dividend 0001  
         __end_of_enable_interrupts 20B4                            ??_memcpy 018C  
             timer1_lthread@msgtype 01A2                         ?_uart_trans 0186  
              _FromMainHigh_sendmsg 1E1A        __size_of_init_timer1_lthread 0012  
                __end_of_OpenTimer0 1F14                  __end_of_OpenTimer1 1E1A  
                       __pbssCOMRAM 0032                          ?_ReadUSART 0001  
                     ??_init_queues 018A                       __pcstackBANK0 0080  
                     __pcstackBANK1 0186                 __size_of_in_low_int 0046  
          start_i2c_slave_reply@msg 002D                           _adcbuffer 0032  
               __CFG_CCP2MX$DEFAULT 000000                     Delay1KTCYx@unit 0186  
          ToMainLow_sendmsg@msgtype 0017        __size_of_InterruptHandlerLow 00AE  
    i2c_slave_int_handler@data_read 00AE                 __end_of_in_high_int 2050  
                        ?_OpenUSART 0186                        ?_SleepIfOkay 0001  
             ToMainLow_recvmsg@data 01A0                        _ToMainLow_MQ 0143  
               __size_of_init_queue 007A                      _init_uart_recv 1FC8  
                         _check_msg 1E50                           __pnvBANK0 00C9  
            ?_start_i2c_slave_reply 002D                   __size_of_init_i2c 006A  
                 OpenADC@portconfig 0187                            ?_OpenADC 0186  
                      recv_msg@data 0195                        recv_msg@qmsg 019C  
                      recv_msg@slot 0199                        recv_msg@qptr 0190  
                 __size_of_recv_msg 015E                           __pintcode 0008  
                 __size_of_send_msg 012C                            ?___awmod 0186  
                   ?_timer0_lthread 0186                            ?___lwmod 0186  
                   ?_timer1_lthread 01A0               ?_FromMainHigh_sendmsg 019C  
                       __pintcodelo 0018              ToMainHigh_recvmsg@data 01A0  
                          ?_in_main 018A                   WriteTimer0@timer0 002D  
                _timer0_int_handler 2062                   WriteTimer1@timer1 0001  
             _i2c_slave_int_handler 00CA      i2c_slave_int_handler@error_buf 00A4  
                       ??i1___awmod 0005               ToMainLow_sendmsg@data 0018  
                       ??i2___awmod 0031                 ?_timer0_int_handler 0001  
    i2c_slave_int_handler@msg_ready 00AD              __end_of_init_uart_recv 1FE6  
               __end_of_init_queues 1A62         i2c_slave_int_handler@length 00AB  
               __size_of_uart_trans 00B4                       OpenADC@config 018A  
                          _LATBbits 000F8A                     i2check_msg@qptr 002D  
                        ?_check_msg 0186                            _IPR1bits 000F9F  
                          _PIE1bits 000F9D      i2c_slave_int_handler@motorcomm 00A2  
                     ?i2_in_low_int 002F      i2c_slave_int_handler@sensormsg 0098  
                          i2u336_41 0720                            _PIR1bits 000F9E  
                          i2u338_41 0766              ToMainHigh_sendmsg@data 0093  
                          _RCONbits 000FD0                    __CFG_WDTPS$32768 000000  
                         main@F5212 01EA                ??_timer0_int_handler 0031  
        __size_of_enable_interrupts 0008                   i1send_msg@msgtype 000E  
                 i1send_msg@tlength 0012                          _ADCON0bits 000FC2  
              timer0_lthread@length 018A                  _timer1_int_handler 2086  
                          i1_memcpy 1DA2                _InterruptHandlerHigh 0008  
                       ??_ReadUSART 0001                            i2_memcpy 1BF8  
              timer0_lthread@msgval 018E                         _in_high_int 203E  
                      send_msg@data 0194                 _i2c_configure_slave 1F14  
                      send_msg@qmsg 019A                        send_msg@slot 0199  
                      send_msg@qptr 0190                           copy_data0 1B84  
               ?_timer1_int_handler 0001                  i2___awmod@dividend 002D  
                   ?_init_uart_recv 0186                         ??_OpenUSART 0188  
                   OpenUSART@config 018B                      ??i2_in_low_int 0031  
             _uart_recv_int_handler 1248                        ??_in_low_int 018A  
                          __Hrparam 0000                    __size_of_OpenADC 0084  
              ?_i2c_configure_slave 0001                            __Lrparam 0000  
                 ?_enter_sleep_mode 0001                    i2uart_trans@data 002D  
            ??_FromMainHigh_sendmsg 019F                   i1___awmod@divisor 0003  
              ??_timer1_int_handler 0005                   i1___awmod@counter 0006  
                   _adc_int_handler 1F86            __size_of_i2c_int_handler 0006  
                  __size_of___awmod 010E                  ??_enter_sleep_mode 002D  
          __size_of_i2c_master_send 013E                    __size_of___lwmod 008A  
                      ??_init_queue 0188                        ?_WriteTimer0 002D  
                      ?_WriteTimer1 0001            FromMainHigh_sendmsg@data 019D  
                     ?i2_uart_trans 002D             ToMainLow_sendmsg@length 001A  
            ?_i2c_slave_int_handler 0001                   main@t0thread_data 01BA  
             ?_InterruptHandlerHigh 0001                    __size_of_in_main 0044  
                 i2send_msg@msgtype 0089         ToMainHigh_recvmsg@maxlength 01A2  
                 i2send_msg@tlength 008D             init_timer1_lthread@tptr 0186  
                       _init_queues 19F4                  __end_of_in_low_int 1CDA  
                          __ptext10 1908                            __ptext11 1A62  
                          __ptext20 2004                            __ptext12 0BFA  
                          __ptext21 1D1E                            __ptext13 1F14  
                          __ptext30 1784                            __ptext22 1D60  
                          __ptext14 20AC                            __ptext23 0A9C  
                          __ptext15 188A                            __ptext40 2050  
                          __ptext32 1ACC                            __ptext24 1B9A  
                          __ptext16 1CDA                            __ptext41 1F86  
                          __ptext33 1248                            __ptext25 0F7E  
                          __ptext17 1C94                            __ptext50 1E86  
                          __ptext34 1F3C                            __ptext26 1FA8  
                          __ptext18 203E                            __ptext51 0E64  
                          __ptext43 2062                            __ptext35 1308  
                          __ptext27 1668                            __ptext19 1E50  
                          __ptext52 1BF8                            __ptext44 2074  
                          __ptext36 1DA2                            __ptext28 1DE2  
                          __ptext53 147C                            __ptext45 20B4  
                          __ptext37 1530                            __ptext29 1EEA  
                          __ptext54 1C46                            __ptext46 00CA  
                          __ptext38 1FE6                            __ptext55 1EBC  
                          __ptext47 15CC                            __ptext39 2086  
                          __ptext56 20A0                            __ptext48 108C  
                          __ptext57 1F62                            __ptext49 1180  
                          __ptext58 20BA                      i1send_msg@data 000F  
                    i1send_msg@qmsg 0015                      i1send_msg@slot 0014  
                    i1send_msg@qptr 000B                            _init_i2c 1A62  
               _init_timer1_lthread 202C                       __size_of_main 02EC  
                     ??i2_check_msg 002F                   main@t1thread_data 01BC  
                       ??_check_msg 0188                  __end_of_init_queue 1982  
              __size_of_SleepIfOkay 004E                            _recv_msg 0A9C  
  i2c_slave_int_handler@msg_to_send 00AA               ??_i2c_configure_slave 0186  
                          _send_msg 0D38                      init_queue@qptr 0186  
                     ??_Delay1KTCYx 0186                      ??i2_uart_trans 002F  
                  uart_trans@length 018A                        ??_uart_trans 0188  
               _InterruptHandlerLow 0018                ?_init_timer1_lthread 0186  
          ??_uart_trans_int_handler 0001                   i2___awmod@divisor 002F  
                 i2___awmod@counter 0080                         _OSCTUNEbits 000F9B  
                        _INTCONbits 000FF2                        _UART_timeout 004E  
                    OpenUSART@spbrg 0186                            memcpy@d1 0186  
                          memcpy@s1 0188               __end_ofi2_in_high_int 20AC  
                  i2send_msg@length 0088                            intlevel1 0000  
                          intlevel2 0000                ?_InterruptHandlerLow 0001  
           ??_start_i2c_slave_reply 002F                    ___lwmod@dividend 0186  
            ?_uart_recv_int_handler 0001                  __end_of_uart_trans 147C  
                 SetChanADC@channel 0187               _block_on_To_msgqueues 188A  
                     ?_handle_start 0001                    ??_timer0_lthread 018E  
       __size_of_ToMainHigh_recvmsg 0042             __end_of_adc_int_handler 1FA8  
       __size_of_ToMainHigh_sendmsg 0036                          _OSCCONbits 000FD3  
                  ??_timer1_lthread 01A8            ToMainHigh_sendmsg@length 0095  
               __end_ofi2_check_msg 1F86               ??_init_timer1_lthread 0188  
            ??_InterruptHandlerHigh 00AF                   _ToMainLow_recvmsg 1D1E  
                 _ToMainLow_sendmsg 1F3C                  main@last_reg_recvd 01AE  
                   ___lwmod@divisor 0188                __end_ofi2_in_low_int 1EEA  
                ?_ToMainLow_recvmsg 019E                 __end_of_Delay1KTCYx 201A  
                 ??_i2c_int_handler 0032                     ___lwmod@counter 018B  
                ?_ToMainLow_sendmsg 0017                   ??_i2c_master_send 018A  
                i2c_master_send@msg 0187                      uart_trans@data 0186  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
                    i2send_msg@data 008A               ??_InterruptHandlerLow 001C  
               ??_ToMainLow_recvmsg 01A2                      i2send_msg@qmsg 0090  
                    i2send_msg@slot 008F                      i2send_msg@qptr 0086  
               ??_ToMainLow_sendmsg 001A       i2c_slave_int_handler@i2c_data 00A9  
                    ??_handle_start 002D                        _USART_Status 0051  
