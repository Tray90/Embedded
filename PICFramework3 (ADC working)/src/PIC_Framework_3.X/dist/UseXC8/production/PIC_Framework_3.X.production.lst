

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Feb 10 21:54:59 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    74  0000                     _ADCON0	set	4034
    75  0000                     _ADCON0bits	set	4034
    76  0000                     _ADCON1	set	4033
    77  0000                     _ADCON2	set	4032
    78  0000                     _ADRESH	set	4036
    79  0000                     _INTCONbits	set	4082
    80  0000                     _IPR1bits	set	3999
    81  0000                     _LATA	set	3977
    82  0000                     _LATB	set	3978
    83  0000                     _LATBbits	set	3978
    84  0000                     _OSCCON	set	4051
    85  0000                     _OSCCONbits	set	4051
    86  0000                     _OSCTUNEbits	set	3995
    87  0000                     _PIE1bits	set	3997
    88  0000                     _PIR1bits	set	3998
    89  0000                     _PORTA	set	3968
    90  0000                     _RCONbits	set	4048
    91  0000                     _RCREG	set	4014
    92  0000                     _RCSTA	set	4011
    93  0000                     _RCSTAbits	set	4011
    94  0000                     _SPBRG	set	4015
    95  0000                     _SPBRGH	set	4016
    96  0000                     _SSPADD	set	4040
    97  0000                     _SSPBUF	set	4041
    98  0000                     _SSPCON1	set	4038
    99  0000                     _SSPCON1bits	set	4038
   100  0000                     _SSPCON2	set	4037
   101  0000                     _SSPCON2bits	set	4037
   102  0000                     _SSPSTAT	set	4039
   103  0000                     _SSPSTATbits	set	4039
   104  0000                     _T0CON	set	4053
   105  0000                     _T0CONbits	set	4053
   106  0000                     _T1CON	set	4045
   107  0000                     _T1CONbits	set	4045
   108  0000                     _TMR0H	set	4055
   109  0000                     _TMR0L	set	4054
   110  0000                     _TMR1H	set	4047
   111  0000                     _TMR1L	set	4046
   112  0000                     _TRISA	set	3986
   113  0000                     _TRISB	set	3987
   114  0000                     _TRISCbits	set	3988
   115  0000                     _TXSTA	set	4012
   116  0000                     _TXSTAbits	set	4012
   117                           
   118                           	psect	nvCOMRAM
   119  000052                     __pnvCOMRAM:
   120                           	opt stack 0
   121  000052                     _uc_ptr:
   122                           	opt stack 0
   123  000052                     	ds	2
   124                           
   125                           	psect	nvBANK0
   126  0000CD                     __pnvBANK0:
   127                           	opt stack 0
   128  0000CD                     _ic_ptr:
   129                           	opt stack 0
   130  0000CD                     	ds	2
   131                           
   132                           ; #config settings
   133  0000                     
   134                           	psect	cinit
   135  001994                     __pcinit:
   136                           	opt stack 0
   137  001994                     start_initialization:
   138                           	opt stack 0
   139  001994                     __initialization:
   140                           	opt stack 0
   141                           
   142                           ; Clear objects allocated to BANK3 (126 bytes)
   143  001994  EE03  F000         	lfsr	0,__pbssBANK3
   144  001998  0E7E               	movlw	126
   145  00199A                     clear_0:
   146  00199A  6AEE               	clrf	postinc0,c
   147  00199C  06E8               	decf	wreg,f,c
   148  00199E  E1FD               	bnz	clear_0
   149                           
   150                           ; Clear objects allocated to BANK2 (252 bytes)
   151  0019A0  EE02  F000         	lfsr	0,__pbssBANK2
   152  0019A4  0EFC               	movlw	252
   153  0019A6                     clear_1:
   154  0019A6  6AEE               	clrf	postinc0,c
   155  0019A8  06E8               	decf	wreg,f,c
   156  0019AA  E1FD               	bnz	clear_1
   157                           
   158                           ; Clear objects allocated to BANK1 (126 bytes)
   159  0019AC  EE01  F000         	lfsr	0,__pbssBANK1
   160  0019B0  0E7E               	movlw	126
   161  0019B2                     clear_2:
   162  0019B2  6AEE               	clrf	postinc0,c
   163  0019B4  06E8               	decf	wreg,f,c
   164  0019B6  E1FD               	bnz	clear_2
   165                           
   166                           ; Clear objects allocated to COMRAM (30 bytes)
   167  0019B8  EE00  F034         	lfsr	0,__pbssCOMRAM
   168  0019BC  0E1E               	movlw	30
   169  0019BE                     clear_3:
   170  0019BE  6AEE               	clrf	postinc0,c
   171  0019C0  06E8               	decf	wreg,f,c
   172  0019C2  E1FD               	bnz	clear_3
   173  0019C4                     end_of_initialization:
   174                           	opt stack 0
   175  0019C4                     __end_of__initialization:
   176                           	opt stack 0
   177  0019C4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   178  0019C6  6EF8               	movwf	tblptru,c
   179  0019C8  0100               	movlb	0
   180  0019CA  EFA1  F003         	goto	_main	;jump to C main() function
   181                           tblptru	equ	0xFF8
   182                           postinc0	equ	0xFEE
   183                           wreg	equ	0xFE8
   184                           
   185                           	psect	bssCOMRAM
   186  000034                     __pbssCOMRAM:
   187                           	opt stack 0
   188  000034                     _MQ_Main_Willing_to_block:
   189                           	opt stack 0
   190  000034                     	ds	1
   191  000035                     _USART_Status:
   192                           	opt stack 0
   193  000035                     	ds	1
   194  000036                     _adcbuffer:
   195                           	opt stack 0
   196  000036                     	ds	28
   197                           tblptru	equ	0xFF8
   198                           postinc0	equ	0xFEE
   199                           wreg	equ	0xFE8
   200                           
   201                           	psect	bssBANK1
   202  000100                     __pbssBANK1:
   203                           	opt stack 0
   204  000100                     _ToMainLow_MQ:
   205                           	opt stack 0
   206  000100                     	ds	126
   207                           tblptru	equ	0xFF8
   208                           postinc0	equ	0xFEE
   209                           wreg	equ	0xFE8
   210                           
   211                           	psect	bssBANK2
   212  000200                     __pbssBANK2:
   213                           	opt stack 0
   214  000200                     _FromMainLow_MQ:
   215                           	opt stack 0
   216  000200                     	ds	126
   217  00027E                     _ToMainHigh_MQ:
   218                           	opt stack 0
   219  00027E                     	ds	126
   220                           tblptru	equ	0xFF8
   221                           postinc0	equ	0xFEE
   222                           wreg	equ	0xFE8
   223                           
   224                           	psect	bssBANK3
   225  000300                     __pbssBANK3:
   226                           	opt stack 0
   227  000300                     _FromMainHigh_MQ:
   228                           	opt stack 0
   229  000300                     	ds	126
   230                           tblptru	equ	0xFF8
   231                           postinc0	equ	0xFEE
   232                           wreg	equ	0xFE8
   233                           
   234                           	psect	cstackBANK1
   235  00017E                     __pcstackBANK1:
   236                           	opt stack 0
   237  00017E                     timer1_lthread@tptr:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x0
   241  00017E                     	ds	2
   242  000180                     timer1_lthread@msgtype:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x2
   246  000180                     	ds	2
   247  000182                     timer1_lthread@length:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x4
   251  000182                     	ds	2
   252  000184                     timer1_lthread@msgbuffer:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x6
   256  000184                     	ds	2
   257  000186                     ??_main:
   258                           
   259                           ; 0 bytes @ 0x8
   260  000186                     	ds	2
   261  000188                     main@msgbuffer:
   262                           	opt stack 0
   263                           
   264                           ; 29 bytes @ 0xA
   265  000188                     	ds	29
   266  0001A5                     main@uthread_data:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x27
   270  0001A5                     	ds	2
   271  0001A7                     main@t0thread_data:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0x29
   275  0001A7                     	ds	2
   276  0001A9                     main@last_reg_recvd:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0x2B
   280  0001A9                     	ds	1
   281  0001AA                     main@uc:
   282                           	opt stack 0
   283                           
   284                           ; 5 bytes @ 0x2C
   285  0001AA                     	ds	5
   286  0001AF                     main@t1thread_data:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0x31
   290  0001AF                     	ds	2
   291  0001B1                     main@msgtype:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0x33
   295  0001B1                     	ds	1
   296  0001B2                     main@length:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0x34
   300  0001B2                     	ds	1
   301  0001B3                     main@ic:
   302                           	opt stack 0
   303                           
   304                           ; 64 bytes @ 0x35
   305  0001B3                     	ds	64
   306                           tblptru	equ	0xFF8
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           
   310                           	psect	cstackBANK0
   311  000080                     __pcstackBANK0:
   312                           	opt stack 0
   313  000080                     ??_timer0_int_handler:
   314  000080                     i2memcpy@d:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x0
   318  000080                     	ds	2
   319  000082                     timer0_int_handler@i:
   320                           	opt stack 0
   321  000082                     i2memcpy@s:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x2
   325  000082                     	ds	2
   326  000084                     i2send_msg@qptr:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0x4
   330  000084                     	ds	2
   331  000086                     i2send_msg@length:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0x6
   335  000086                     	ds	1
   336  000087                     i2send_msg@msgtype:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x7
   340  000087                     	ds	1
   341  000088                     i2send_msg@data:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x8
   345  000088                     	ds	2
   346  00008A                     i2send_msg@tlength:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0xA
   350  00008A                     	ds	2
   351  00008C                     i2send_msg@slot:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0xC
   355  00008C                     	ds	1
   356  00008D                     i2send_msg@qmsg:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0xD
   360  00008D                     	ds	2
   361  00008F                     ToMainHigh_sendmsg@msgtype:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0xF
   365  00008F                     	ds	1
   366  000090                     ToMainHigh_sendmsg@data:
   367                           	opt stack 0
   368                           
   369                           ; 2 bytes @ 0x10
   370  000090                     	ds	2
   371  000092                     ToMainHigh_sendmsg@length:
   372                           	opt stack 0
   373                           
   374                           ; 1 bytes @ 0x12
   375  000092                     	ds	1
   376  000093                     i2c_int_handler@adcbuffer:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x13
   380  000093                     	ds	2
   381  000095                     ??_i2c_int_handler:
   382                           
   383                           ; 0 bytes @ 0x15
   384  000095                     	ds	2
   385  000097                     i2c_int_handler@length:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x17
   389  000097                     	ds	2
   390  000099                     i2c_int_handler@error_buf:
   391                           	opt stack 0
   392                           
   393                           ; 3 bytes @ 0x19
   394  000099                     	ds	3
   395  00009C                     i2c_int_handler@data_written:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x1C
   399  00009C                     	ds	1
   400  00009D                     i2c_int_handler@overrun_error:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x1D
   404  00009D                     	ds	1
   405  00009E                     i2c_int_handler@i2c_data:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x1E
   409  00009E                     	ds	1
   410  00009F                     i2c_int_handler@msg_to_send:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x1F
   414  00009F                     	ds	1
   415  0000A0                     i2c_int_handler@msg_ready:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0x20
   419  0000A0                     	ds	1
   420  0000A1                     i2c_int_handler@data_read:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x21
   424  0000A1                     	ds	1
   425  0000A2                     ??_InterruptHandlerHigh:
   426                           
   427                           ; 0 bytes @ 0x22
   428  0000A2                     	ds	14
   429  0000B0                     ??_SetChanADC:
   430  0000B0                     ?_in_high_int:
   431                           	opt stack 0
   432  0000B0                     ?___lwmod:
   433                           	opt stack 0
   434  0000B0                     i2c_configure_slave@addr:
   435                           	opt stack 0
   436  0000B0                     OpenADC@config2:
   437                           	opt stack 0
   438  0000B0                     OpenTimer0@config:
   439                           	opt stack 0
   440  0000B0                     OpenTimer1@config:
   441                           	opt stack 0
   442  0000B0                     Delay1KTCYx@unit:
   443                           	opt stack 0
   444  0000B0                     init_queue@qptr:
   445                           	opt stack 0
   446  0000B0                     check_msg@qptr:
   447                           	opt stack 0
   448  0000B0                     start_i2c_slave_reply@msg:
   449                           	opt stack 0
   450  0000B0                     init_i2c@ic:
   451                           	opt stack 0
   452  0000B0                     init_uart_recv@uc:
   453                           	opt stack 0
   454  0000B0                     timer0_lthread@tptr:
   455                           	opt stack 0
   456  0000B0                     init_timer1_lthread@tptr:
   457                           	opt stack 0
   458  0000B0                     uart_lthread@uptr:
   459                           	opt stack 0
   460  0000B0                     OpenUSART@spbrg:
   461                           	opt stack 0
   462  0000B0                     ___lwmod@dividend:
   463                           	opt stack 0
   464  0000B0                     memcpy@d1:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x30
   468  0000B0                     	ds	1
   469  0000B1                     OpenADC@portconfig:
   470                           	opt stack 0
   471  0000B1                     SetChanADC@channel:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0x31
   475  0000B1                     	ds	1
   476  0000B2                     ??_OpenUSART:
   477  0000B2                     ??_OpenADC:
   478  0000B2                     ??_start_i2c_slave_reply:
   479  0000B2                     ??_init_queue:
   480  0000B2                     ??_check_msg:
   481  0000B2                     ?_in_low_int:
   482                           	opt stack 0
   483  0000B2                     timer0_lthread@msgtype:
   484                           	opt stack 0
   485  0000B2                     uart_lthread@msgtype:
   486                           	opt stack 0
   487  0000B2                     ___lwmod@divisor:
   488                           	opt stack 0
   489  0000B2                     memcpy@s1:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x32
   493  0000B2                     	ds	1
   494  0000B3                     init_queue@i:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x33
   498  0000B3                     	ds	1
   499  0000B4                     ??_init_queues:
   500  0000B4                     ??___lwmod:
   501  0000B4                     ?_in_main:
   502                           	opt stack 0
   503  0000B4                     start_i2c_slave_reply@length:
   504                           	opt stack 0
   505  0000B4                     OpenADC@config:
   506                           	opt stack 0
   507  0000B4                     timer0_lthread@length:
   508                           	opt stack 0
   509  0000B4                     uart_lthread@length:
   510                           	opt stack 0
   511  0000B4                     memcpy@n:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x34
   515  0000B4                     	ds	1
   516  0000B5                     OpenUSART@config:
   517                           	opt stack 0
   518  0000B5                     ___lwmod@counter:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x35
   522  0000B5                     	ds	1
   523  0000B6                     ??_block_on_To_msgqueues:
   524  0000B6                     timer0_lthread@msgbuffer:
   525                           	opt stack 0
   526  0000B6                     uart_lthread@msgbuffer:
   527                           	opt stack 0
   528  0000B6                     memcpy@d:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x36
   532  0000B6                     	ds	2
   533  0000B8                     timer0_lthread@msgval:
   534                           	opt stack 0
   535  0000B8                     memcpy@s:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x38
   539  0000B8                     	ds	2
   540  0000BA                     send_msg@qptr:
   541                           	opt stack 0
   542  0000BA                     recv_msg@qptr:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x3A
   546  0000BA                     	ds	2
   547  0000BC                     send_msg@length:
   548                           	opt stack 0
   549  0000BC                     recv_msg@maxlength:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0x3C
   553  0000BC                     	ds	1
   554  0000BD                     send_msg@msgtype:
   555                           	opt stack 0
   556  0000BD                     recv_msg@msgtype:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x3D
   560  0000BD                     	ds	1
   561  0000BE                     send_msg@data:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x3E
   565  0000BE                     	ds	1
   566  0000BF                     recv_msg@data:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x3F
   570  0000BF                     	ds	1
   571  0000C0                     ??_send_msg:
   572                           
   573                           ; 0 bytes @ 0x40
   574  0000C0                     	ds	1
   575  0000C1                     ??_recv_msg:
   576  0000C1                     send_msg@tlength:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x41
   580  0000C1                     	ds	2
   581  0000C3                     send_msg@slot:
   582                           	opt stack 0
   583  0000C3                     recv_msg@slot:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x43
   587  0000C3                     	ds	1
   588  0000C4                     send_msg@qmsg:
   589                           	opt stack 0
   590  0000C4                     recv_msg@tlength:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x44
   594  0000C4                     	ds	2
   595  0000C6                     FromMainHigh_sendmsg@msgtype:
   596                           	opt stack 0
   597  0000C6                     recv_msg@qmsg:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x46
   601  0000C6                     	ds	1
   602  0000C7                     FromMainHigh_sendmsg@data:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x47
   606  0000C7                     	ds	1
   607  0000C8                     ToMainLow_recvmsg@msgtype:
   608                           	opt stack 0
   609  0000C8                     ToMainHigh_recvmsg@msgtype:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x48
   613  0000C8                     	ds	1
   614  0000C9                     FromMainHigh_sendmsg@length:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x49
   618  0000C9                     	ds	1
   619  0000CA                     ??_timer1_lthread:
   620  0000CA                     ToMainLow_recvmsg@data:
   621                           	opt stack 0
   622  0000CA                     ToMainHigh_recvmsg@data:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x4A
   626  0000CA                     	ds	1
   627  0000CB                     timer1_lthread@retval:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x4B
   631  0000CB                     	ds	1
   632  0000CC                     ToMainLow_recvmsg@maxlength:
   633                           	opt stack 0
   634  0000CC                     ToMainHigh_recvmsg@maxlength:
   635                           	opt stack 0
   636                           
   637                           ; 1 bytes @ 0x4C
   638  0000CC                     	ds	1
   639                           tblptru	equ	0xFF8
   640                           postinc0	equ	0xFEE
   641                           wreg	equ	0xFE8
   642                           
   643                           	psect	cstackCOMRAM
   644  000001                     __pcstackCOMRAM:
   645                           	opt stack 0
   646  000001                     ReadUSART@data:
   647                           	opt stack 0
   648  000001                     WriteTimer1@timer1:
   649                           	opt stack 0
   650  000001                     i1memcpy@d1:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x0
   654  000001                     	ds	2
   655  000003                     WriteTimer1@timer:
   656                           	opt stack 0
   657  000003                     i1memcpy@s1:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x2
   661  000003                     	ds	2
   662  000005                     timer1_int_handler@adcbuffer:
   663                           	opt stack 0
   664  000005                     i1memcpy@n:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x4
   668  000005                     	ds	2
   669  000007                     i1memcpy@d:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x6
   673  000007                     	ds	2
   674  000009                     i1memcpy@s:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x8
   678  000009                     	ds	2
   679  00000B                     i1send_msg@qptr:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0xA
   683  00000B                     	ds	2
   684  00000D                     i1send_msg@length:
   685                           	opt stack 0
   686                           
   687                           ; 1 bytes @ 0xC
   688  00000D                     	ds	1
   689  00000E                     i1send_msg@msgtype:
   690                           	opt stack 0
   691                           
   692                           ; 1 bytes @ 0xD
   693  00000E                     	ds	1
   694  00000F                     i1send_msg@data:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0xE
   698  00000F                     	ds	2
   699  000011                     ??i1_send_msg:
   700                           
   701                           ; 0 bytes @ 0x10
   702  000011                     	ds	1
   703  000012                     i1send_msg@tlength:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x11
   707  000012                     	ds	2
   708  000014                     i1send_msg@slot:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x13
   712  000014                     	ds	1
   713  000015                     i1send_msg@qmsg:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x14
   717  000015                     	ds	2
   718  000017                     ToMainLow_sendmsg@msgtype:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0x16
   722  000017                     	ds	1
   723  000018                     ToMainLow_sendmsg@data:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0x17
   727  000018                     	ds	2
   728  00001A                     ToMainLow_sendmsg@length:
   729                           	opt stack 0
   730                           
   731                           ; 1 bytes @ 0x19
   732  00001A                     	ds	1
   733  00001B                     ??_uart_recv_int_handler:
   734                           
   735                           ; 0 bytes @ 0x1A
   736  00001B                     	ds	1
   737  00001C                     ??_InterruptHandlerLow:
   738                           
   739                           ; 0 bytes @ 0x1B
   740  00001C                     	ds	17
   741  00002D                     ?i2_in_high_int:
   742                           	opt stack 0
   743  00002D                     handle_start@data_read:
   744                           	opt stack 0
   745  00002D                     WriteTimer0@timer0:
   746                           	opt stack 0
   747  00002D                     i2check_msg@qptr:
   748                           	opt stack 0
   749  00002D                     i2start_i2c_slave_reply@msg:
   750                           	opt stack 0
   751  00002D                     i2memcpy@d1:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x2C
   755  00002D                     	ds	2
   756  00002F                     ??i2_check_msg:
   757  00002F                     ??i2_start_i2c_slave_reply:
   758  00002F                     ?i2_in_low_int:
   759                           	opt stack 0
   760  00002F                     WriteTimer0@timer:
   761                           	opt stack 0
   762  00002F                     i2memcpy@s1:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x2E
   766  00002F                     	ds	2
   767  000031                     i2start_i2c_slave_reply@length:
   768                           	opt stack 0
   769  000031                     timer0_int_handler@adcbuffer:
   770                           	opt stack 0
   771  000031                     i2memcpy@n:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x30
   775  000031                     	ds	2
   776  000033                     ??i2_send_msg:
   777  000033                     
   778                           ; 0 bytes @ 0x32
   779  000033                     	ds	1
   780  000034                     tblptru	equ	0xFF8
   781                           postinc0	equ	0xFEE
   782                           wreg	equ	0xFE8
   783                           
   784                           ; 0 bytes @ 0x33
   785 ;;
   786 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   787 ;;
   788 ;; *************** function _main *****************
   789 ;; Defined at:
   790 ;;		line 186 in file "../src/main.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;		None
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  ic             64   53[BANK1 ] struct __i2c_comm
   795 ;;  msgbuffer      29   10[BANK1 ] unsigned char [29]
   796 ;;  uc              5   44[BANK1 ] struct __uart_comm
   797 ;;  t1thread_dat    2   49[BANK1 ] struct __timer1_thread_s
   798 ;;  t0thread_dat    2   41[BANK1 ] struct __timer0_thread_s
   799 ;;  uthread_data    2   39[BANK1 ] struct __uart_thread_str
   800 ;;  length          1   52[BANK1 ] char 
   801 ;;  msgtype         1   51[BANK1 ] unsigned char 
   802 ;;  last_reg_rec    1   43[BANK1 ] unsigned char 
   803 ;;  i               1    0        unsigned char 
   804 ;;  c               1    0        unsigned char 
   805 ;; Return value:  Size  Location     Type
   806 ;;		None               void
   807 ;; Registers used:
   808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   814 ;;      Params:         0       0       0       0       0
   815 ;;      Locals:         0       0     107       0       0
   816 ;;      Temps:          0       0       2       0       0
   817 ;;      Totals:         0       0     109       0       0
   818 ;;Total ram usage:      109 bytes
   819 ;; Hardware stack levels required when called:   14
   820 ;; This function calls:
   821 ;;		_BusyADC
   822 ;;		_ConvertADC
   823 ;;		_OpenADC
   824 ;;		_OpenTimer0
   825 ;;		_OpenTimer1
   826 ;;		_OpenUSART
   827 ;;		_SetChanADC
   828 ;;		_ToMainHigh_recvmsg
   829 ;;		_ToMainLow_recvmsg
   830 ;;		_block_on_To_msgqueues
   831 ;;		_enable_interrupts
   832 ;;		_i2c_configure_slave
   833 ;;		_init_i2c
   834 ;;		_init_queues
   835 ;;		_init_timer1_lthread
   836 ;;		_init_uart_recv
   837 ;;		_start_i2c_slave_reply
   838 ;;		_timer0_lthread
   839 ;;		_timer1_lthread
   840 ;;		_uart_lthread
   841 ;; This function is called by:
   842 ;;		Startup code after reset
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text0
   847  000742                     __ptext0:
   848                           	opt stack 0
   849  000742                     _main:
   850                           	opt stack 17
   851                           
   852                           ;main.c: 187: char c;
   853                           ;main.c: 188: signed char length;
   854                           ;main.c: 189: unsigned char msgtype;
   855                           ;main.c: 190: unsigned char last_reg_recvd;
   856                           ;main.c: 191: uart_comm uc;
   857                           ;main.c: 192: i2c_comm ic;
   858                           ;main.c: 193: unsigned char msgbuffer[28 + 1];
   859                           ;main.c: 194: unsigned char i;
   860                           ;main.c: 195: uart_thread_struct uthread_data;
   861                           ;main.c: 196: timer1_thread_struct t1thread_data;
   862                           ;main.c: 197: timer0_thread_struct t0thread_data;
   863                           ;main.c: 205: OSCCON = 0x82;
   864                           
   865                           ;incstack = 0
   866  000742  0E82               	movlw	130
   867  000744  6ED3               	movwf	4051,c	;volatile
   868                           
   869                           ;main.c: 206: OSCTUNEbits.PLLEN = 1;
   870  000746  8C9B               	bsf	3995,6,c	;volatile
   871                           
   872                           ;main.c: 224: init_uart_recv(&uc);
   873  000748  0101               	movlb	1	; () banked
   874  00074A  0E01               	movlw	high main@uc
   875  00074C  0100               	movlb	0	; () banked
   876  00074E  0100               	movlb	0	; () banked
   877  000750  6FB1               	movwf	(init_uart_recv@uc+1)& (0+255),b
   878  000752  0101               	movlb	1	; () banked
   879  000754  0EAA               	movlw	low main@uc
   880  000756  0100               	movlb	0	; () banked
   881  000758  0100               	movlb	0	; () banked
   882  00075A  6FB0               	movwf	init_uart_recv@uc& (0+255),b
   883  00075C  ECC9  F00D         	call	_init_uart_recv	;wreg free
   884                           
   885                           ;main.c: 227: init_i2c(&ic);
   886  000760  0101               	movlb	1	; () banked
   887  000762  0E01               	movlw	high main@ic
   888  000764  0100               	movlb	0	; () banked
   889  000766  0100               	movlb	0	; () banked
   890  000768  6FB1               	movwf	(init_i2c@ic+1)& (0+255),b
   891  00076A  0101               	movlb	1	; () banked
   892  00076C  0EB3               	movlw	low main@ic
   893  00076E  0100               	movlb	0	; () banked
   894  000770  0100               	movlb	0	; () banked
   895  000772  6FB0               	movwf	init_i2c@ic& (0+255),b
   896  000774  EC51  F00B         	call	_init_i2c	;wreg free
   897                           
   898                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
   899  000778  0101               	movlb	1	; () banked
   900  00077A  0E01               	movlw	high main@t1thread_data
   901  00077C  0100               	movlb	0	; () banked
   902  00077E  0100               	movlb	0	; () banked
   903  000780  6FB1               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   904  000782  0101               	movlb	1	; () banked
   905  000784  0EAF               	movlw	low main@t1thread_data
   906  000786  0100               	movlb	0	; () banked
   907  000788  0100               	movlb	0	; () banked
   908  00078A  6FB0               	movwf	init_timer1_lthread@tptr& (0+255),b
   909  00078C  ECFB  F00D         	call	_init_timer1_lthread	;wreg free
   910                           
   911                           ;main.c: 233: init_queues();
   912  000790  EC1A  F00B         	call	_init_queues	;wreg free
   913                           
   914                           ;main.c: 237: TRISB = 0x0;
   915  000794  0E00               	movlw	0
   916  000796  6E93               	movwf	3987,c	;volatile
   917                           
   918                           ;main.c: 238: LATB = 0x0;
   919  000798  0E00               	movlw	0
   920  00079A  6E8A               	movwf	3978,c	;volatile
   921                           
   922                           ;main.c: 240: PORTA = 0x0;
   923  00079C  0E00               	movlw	0
   924  00079E  6E80               	movwf	3968,c	;volatile
   925                           
   926                           ;main.c: 241: LATA = 0x0;
   927  0007A0  0E00               	movlw	0
   928  0007A2  6E89               	movwf	3977,c	;volatile
   929                           
   930                           ;main.c: 242: TRISA = 0x0F;
   931  0007A4  0E0F               	movlw	15
   932  0007A6  6E92               	movwf	3986,c	;volatile
   933                           
   934                           ;main.c: 255: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110100);
   935  0007A8  0ED4               	movlw	212
   936  0007AA  EC6B  F00D         	call	_OpenTimer0
   937                           
   938                           ;main.c: 264: OpenTimer1(0b11111111 & 0b10111111 & 0b11001111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
   939  0007AE  0E85               	movlw	133
   940  0007B0  ECE7  F00C         	call	_OpenTimer1
   941                           
   942                           ;main.c: 272: IPR1bits.ADIP = 1;
   943  0007B4  8C9F               	bsf	3999,6,c	;volatile
   944                           
   945                           ;main.c: 274: IPR1bits.TMR1IP = 0;
   946  0007B6  909F               	bcf	3999,0,c	;volatile
   947                           
   948                           ;main.c: 276: IPR1bits.RCIP = 0;
   949  0007B8  9A9F               	bcf	3999,5,c	;volatile
   950                           
   951                           ;main.c: 278: IPR1bits.SSPIP = 1;
   952  0007BA  869F               	bsf	3999,3,c	;volatile
   953                           
   954                           ;main.c: 287: i2c_configure_slave(0x9E);
   955  0007BC  0E9E               	movlw	158
   956  0007BE  EC80  F00D         	call	_i2c_configure_slave
   957                           
   958                           ;main.c: 302: PIE1bits.SSPIE = 1;
   959  0007C2  869D               	bsf	3997,3,c	;volatile
   960                           
   961                           ;main.c: 313: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   962                           ;main.c: 314: 0b11111111 & 0b11101111, 0x19);
   963  0007C4  0E00               	movlw	0
   964  0007C6  0100               	movlb	0	; () banked
   965  0007C8  0100               	movlb	0	; () banked
   966  0007CA  6FB1               	movwf	(OpenUSART@spbrg+1)& (0+255),b
   967  0007CC  0E19               	movlw	25
   968  0007CE  0100               	movlb	0	; () banked
   969  0007D0  6FB0               	movwf	OpenUSART@spbrg& (0+255),b
   970  0007D2  0E6C               	movlw	108
   971  0007D4  EC95  F009         	call	_OpenUSART
   972                           
   973                           ;main.c: 320: enable_interrupts();
   974  0007D8  EC38  F00E         	call	_enable_interrupts	;wreg free
   975                           
   976                           ;main.c: 334: OpenADC(0b10011111 & 0b01111111 & 0b11110101,
   977                           ;main.c: 335: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
   978                           ;main.c: 336: 0b1011);
   979  0007DC  0101               	movlb	1	; () banked
   980  0007DE  6F86               	movwf	??_main& (0+255),b
   981  0007E0  0E0C               	movlw	12
   982  0007E2  0100               	movlb	0	; () banked
   983  0007E4  0100               	movlb	0	; () banked
   984  0007E6  6FB0               	movwf	OpenADC@config2& (0+255),b
   985  0007E8  0101               	movlb	1	; () banked
   986  0007EA  5186               	movf	??_main& (0+255),w,b
   987  0007EC  0101               	movlb	1	; () banked
   988  0007EE  6F87               	movwf	(??_main+1)& (0+255),b
   989  0007F0  0E0B               	movlw	11
   990  0007F2  0100               	movlb	0	; () banked
   991  0007F4  0100               	movlb	0	; () banked
   992  0007F6  6FB1               	movwf	OpenADC@portconfig& (0+255),b
   993  0007F8  0101               	movlb	1	; () banked
   994  0007FA  5187               	movf	(??_main+1)& (0+255),w,b
   995  0007FC  0E15               	movlw	21
   996  0007FE  EC23  F00A         	call	_OpenADC
   997                           
   998                           ;main.c: 337: SetChanADC(0b10001111);
   999  000802  0E8F               	movlw	143
  1000  000804  ECB9  F00D         	call	_SetChanADC
  1001  000808                     l3167:
  1002                           
  1003                           ;main.c: 350: block_on_To_msgqueues();
  1004  000808  EC65  F00A         	call	_block_on_To_msgqueues	;wreg free
  1005                           
  1006                           ;main.c: 357: length = ToMainHigh_recvmsg(28, &msgtype, (void *) msgbuffer);
  1007  00080C  0101               	movlb	1	; () banked
  1008  00080E  0E01               	movlw	high main@msgtype
  1009  000810  0100               	movlb	0	; () banked
  1010  000812  0100               	movlb	0	; () banked
  1011  000814  6FC9               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1012  000816  0101               	movlb	1	; () banked
  1013  000818  0EB1               	movlw	low main@msgtype
  1014  00081A  0100               	movlb	0	; () banked
  1015  00081C  0100               	movlb	0	; () banked
  1016  00081E  6FC8               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1017  000820  0101               	movlb	1	; () banked
  1018  000822  0E01               	movlw	high main@msgbuffer
  1019  000824  0100               	movlb	0	; () banked
  1020  000826  0100               	movlb	0	; () banked
  1021  000828  6FCB               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1022  00082A  0101               	movlb	1	; () banked
  1023  00082C  0E88               	movlw	low main@msgbuffer
  1024  00082E  0100               	movlb	0	; () banked
  1025  000830  0100               	movlb	0	; () banked
  1026  000832  6FCA               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1027  000834  0E1C               	movlw	28
  1028  000836  EC6A  F00C         	call	_ToMainHigh_recvmsg
  1029  00083A  0101               	movlb	1	; () banked
  1030  00083C  0101               	movlb	1	; () banked
  1031  00083E  6FB2               	movwf	main@length& (0+255),b
  1032                           
  1033                           ; BSR set to: 1
  1034                           ;main.c: 358: if (length < 0) {
  1035  000840  0101               	movlb	1	; () banked
  1036  000842  0101               	movlb	1	; () banked
  1037  000844  BFB2               	btfsc	main@length& (0+255),7,b
  1038  000846  D08E               	goto	l3199
  1039  000848  D07E               	goto	l3197
  1040  00084A                     l3175:
  1041                           
  1042                           ; BSR set to: 1
  1043                           ;main.c: 366: {
  1044                           ;main.c: 367: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1045  00084A  0101               	movlb	1	; () banked
  1046  00084C  0E01               	movlw	high main@t0thread_data
  1047  00084E  0100               	movlb	0	; () banked
  1048  000850  0100               	movlb	0	; () banked
  1049  000852  6FB1               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1050  000854  0101               	movlb	1	; () banked
  1051  000856  0EA7               	movlw	low main@t0thread_data
  1052  000858  0100               	movlb	0	; () banked
  1053  00085A  0100               	movlb	0	; () banked
  1054  00085C  6FB0               	movwf	timer0_lthread@tptr& (0+255),b
  1055  00085E  0101               	movlb	1	; () banked
  1056  000860  0100               	movlb	0	; () banked
  1057  000862  C1B1  F0B2         	movff	main@msgtype,timer0_lthread@msgtype
  1058  000866  0100               	movlb	0	; () banked
  1059  000868  0100               	movlb	0	; () banked
  1060  00086A  6BB3               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1061  00086C  0101               	movlb	1	; () banked
  1062  00086E  0101               	movlb	1	; () banked
  1063  000870  51B2               	movf	main@length& (0+255),w,b
  1064  000872  0100               	movlb	0	; () banked
  1065  000874  0100               	movlb	0	; () banked
  1066  000876  6FB4               	movwf	timer0_lthread@length& (0+255),b
  1067  000878  0100               	movlb	0	; () banked
  1068  00087A  6BB5               	clrf	(timer0_lthread@length+1)& (0+255),b
  1069  00087C  0100               	movlb	0	; () banked
  1070  00087E  BFB4               	btfsc	timer0_lthread@length& (0+255),7,b
  1071  000880  07B5               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1072  000882  0101               	movlb	1	; () banked
  1073  000884  0E01               	movlw	high main@msgbuffer
  1074  000886  0100               	movlb	0	; () banked
  1075  000888  0100               	movlb	0	; () banked
  1076  00088A  6FB7               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1077  00088C  0101               	movlb	1	; () banked
  1078  00088E  0E88               	movlw	low main@msgbuffer
  1079  000890  0100               	movlb	0	; () banked
  1080  000892  0100               	movlb	0	; () banked
  1081  000894  6FB6               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1082  000896  ECF2  F00D         	call	_timer0_lthread	;wreg free
  1083                           
  1084                           ;main.c: 368: break;
  1085  00089A  D064               	goto	l3199
  1086  00089C                     l125:
  1087                           
  1088                           ;main.c: 371: case 41:
  1089                           ;main.c: 372: {
  1090                           ;main.c: 375: last_reg_recvd = msgbuffer[0];
  1091  00089C  C188  F1A9         	movff	main@msgbuffer,main@last_reg_recvd
  1092                           
  1093                           ;main.c: 376: break;
  1094  0008A0  D061               	goto	l3199
  1095  0008A2                     l3177:
  1096                           
  1097                           ;main.c: 389: {
  1098                           ;main.c: 390: length = 2;
  1099  0008A2  0101               	movlb	1	; () banked
  1100  0008A4  6F86               	movwf	??_main& (0+255),b
  1101  0008A6  0E02               	movlw	2
  1102  0008A8  0101               	movlb	1	; () banked
  1103  0008AA  0101               	movlb	1	; () banked
  1104  0008AC  6FB2               	movwf	main@length& (0+255),b
  1105  0008AE  0101               	movlb	1	; () banked
  1106  0008B0  5186               	movf	??_main& (0+255),w,b
  1107                           
  1108                           ; BSR set to: 1
  1109                           ;main.c: 391: ConvertADC();
  1110  0008B2  EC3F  F00E         	call	_ConvertADC	;wreg free
  1111  0008B6                     l3181:
  1112  0008B6  EC26  F00E         	call	_BusyADC	;wreg free
  1113  0008BA  0900               	iorlw	0
  1114  0008BC  A4D8               	btfss	status,2,c
  1115  0008BE  D7FB               	goto	l3181
  1116                           
  1117                           ;main.c: 394: }
  1118                           ;main.c: 395: msgbuffer[0] = ADRESH;
  1119  0008C0  CFC4 F188          	movff	4036,main@msgbuffer	;volatile
  1120                           
  1121                           ;main.c: 396: msgbuffer[1] = 0xAA;
  1122  0008C4  0101               	movlb	1	; () banked
  1123  0008C6  6F86               	movwf	??_main& (0+255),b
  1124  0008C8  0EAA               	movlw	170
  1125  0008CA  0101               	movlb	1	; () banked
  1126  0008CC  0101               	movlb	1	; () banked
  1127  0008CE  6F89               	movwf	(main@msgbuffer+1)& (0+255),b
  1128  0008D0  D00C               	goto	L1
  1129  0008D2                     l3185:
  1130                           
  1131                           ; BSR set to: 1
  1132                           ;main.c: 400: {
  1133                           ;main.c: 401: length = 1;
  1134  0008D2  0101               	movlb	1	; () banked
  1135  0008D4  6F86               	movwf	??_main& (0+255),b
  1136  0008D6  0E01               	movlw	1
  1137  0008D8  0101               	movlb	1	; () banked
  1138  0008DA  0101               	movlb	1	; () banked
  1139  0008DC  6FB2               	movwf	main@length& (0+255),b
  1140  0008DE  0101               	movlb	1	; () banked
  1141  0008E0  5186               	movf	??_main& (0+255),w,b
  1142                           
  1143                           ;main.c: 402: msgbuffer[0] = 0x3A;
  1144  0008E2  0101               	movlb	1	; () banked
  1145  0008E4  6F86               	movwf	??_main& (0+255),b
  1146  0008E6  0E3A               	movlw	58
  1147  0008E8  D00E               	goto	L2
  1148  0008EA                     L1:
  1149  0008EA  0101               	movlb	1	; () banked
  1150  0008EC  5186               	movf	??_main& (0+255),w,b
  1151                           
  1152                           ;main.c: 403: break;
  1153  0008EE  D01B               	goto	l3193
  1154  0008F0                     l3187:
  1155                           
  1156                           ; BSR set to: 1
  1157                           ;main.c: 406: {
  1158                           ;main.c: 407: length = 1;
  1159  0008F0  0101               	movlb	1	; () banked
  1160  0008F2  6F86               	movwf	??_main& (0+255),b
  1161  0008F4  0E01               	movlw	1
  1162  0008F6  0101               	movlb	1	; () banked
  1163  0008F8  0101               	movlb	1	; () banked
  1164  0008FA  6FB2               	movwf	main@length& (0+255),b
  1165  0008FC  0101               	movlb	1	; () banked
  1166  0008FE  5186               	movf	??_main& (0+255),w,b
  1167                           
  1168                           ;main.c: 408: msgbuffer[0] = 0xA3;
  1169  000900  0101               	movlb	1	; () banked
  1170  000902  6F86               	movwf	??_main& (0+255),b
  1171  000904  0EA3               	movlw	163
  1172  000906                     L2:
  1173  000906  0101               	movlb	1	; () banked
  1174  000908  0101               	movlb	1	; () banked
  1175  00090A  6F88               	movwf	main@msgbuffer& (0+255),b
  1176  00090C  D7EE               	goto	L1
  1177  00090E                     l3191:
  1178  00090E  0101               	movlb	1	; () banked
  1179  000910  0101               	movlb	1	; () banked
  1180  000912  51A9               	movf	main@last_reg_recvd& (0+255),w,b
  1181                           
  1182                           ; Switch size 1, requested type "space"
  1183                           ; Number of cases is 3, Range of values is 168 to 170
  1184                           ; switch strategies available:
  1185                           ; Name         Instructions Cycles
  1186                           ; simple_byte           10     6 (average)
  1187                           ;	Chosen strategy is simple_byte
  1188  000914  0AA8               	xorlw	168	; case 168
  1189  000916  B4D8               	btfsc	status,2,c
  1190  000918  D7DC               	goto	l3185
  1191  00091A  0A01               	xorlw	1	; case 169
  1192  00091C  B4D8               	btfsc	status,2,c
  1193  00091E  D7E8               	goto	l3187
  1194  000920  0A03               	xorlw	3	; case 170
  1195  000922  B4D8               	btfsc	status,2,c
  1196  000924  D7BE               	goto	l3177
  1197  000926                     l3193:
  1198                           
  1199                           ; BSR set to: 1
  1200                           ;main.c: 412: start_i2c_slave_reply(length, msgbuffer);
  1201  000926  0101               	movlb	1	; () banked
  1202  000928  0E01               	movlw	high main@msgbuffer
  1203  00092A  0100               	movlb	0	; () banked
  1204  00092C  0100               	movlb	0	; () banked
  1205  00092E  6FB1               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1206  000930  0101               	movlb	1	; () banked
  1207  000932  0E88               	movlw	low main@msgbuffer
  1208  000934  0100               	movlb	0	; () banked
  1209  000936  0100               	movlb	0	; () banked
  1210  000938  6FB0               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1211  00093A  0101               	movlb	1	; () banked
  1212  00093C  0101               	movlb	1	; () banked
  1213  00093E  51B2               	movf	main@length& (0+255),w,b
  1214  000940  ECCB  F005         	call	_start_i2c_slave_reply
  1215                           
  1216                           ;main.c: 413: break;
  1217  000944  D00F               	goto	l3199
  1218  000946                     l3197:
  1219  000946  0101               	movlb	1	; () banked
  1220  000948  0101               	movlb	1	; () banked
  1221  00094A  51B1               	movf	main@msgtype& (0+255),w,b
  1222                           
  1223                           ; Switch size 1, requested type "space"
  1224                           ; Number of cases is 4, Range of values is 10 to 42
  1225                           ; switch strategies available:
  1226                           ; Name         Instructions Cycles
  1227                           ; simple_byte           13     7 (average)
  1228                           ;	Chosen strategy is simple_byte
  1229  00094C  0A0A               	xorlw	10	; case 10
  1230  00094E  B4D8               	btfsc	status,2,c
  1231  000950  D77C               	goto	l3175
  1232  000952  0A22               	xorlw	34	; case 40
  1233  000954  B4D8               	btfsc	status,2,c
  1234  000956  D7A2               	goto	l125
  1235  000958  0A01               	xorlw	1	; case 41
  1236  00095A  B4D8               	btfsc	status,2,c
  1237  00095C  D79F               	goto	l125
  1238  00095E  0A03               	xorlw	3	; case 42
  1239  000960  B4D8               	btfsc	status,2,c
  1240  000962  D7D5               	goto	l3191
  1241  000964                     l3199:
  1242                           
  1243                           ;main.c: 421: }
  1244                           ;main.c: 424: length = ToMainLow_recvmsg(28, &msgtype, (void *) msgbuffer);
  1245  000964  0101               	movlb	1	; () banked
  1246  000966  0E01               	movlw	high main@msgtype
  1247  000968  0100               	movlb	0	; () banked
  1248  00096A  0100               	movlb	0	; () banked
  1249  00096C  6FC9               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1250  00096E  0101               	movlb	1	; () banked
  1251  000970  0EB1               	movlw	low main@msgtype
  1252  000972  0100               	movlb	0	; () banked
  1253  000974  0100               	movlb	0	; () banked
  1254  000976  6FC8               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1255  000978  0101               	movlb	1	; () banked
  1256  00097A  0E01               	movlw	high main@msgbuffer
  1257  00097C  0100               	movlb	0	; () banked
  1258  00097E  0100               	movlb	0	; () banked
  1259  000980  6FCB               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1260  000982  0101               	movlb	1	; () banked
  1261  000984  0E88               	movlw	low main@msgbuffer
  1262  000986  0100               	movlb	0	; () banked
  1263  000988  0100               	movlb	0	; () banked
  1264  00098A  6FCA               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1265  00098C  0E1C               	movlw	28
  1266  00098E  EC49  F00C         	call	_ToMainLow_recvmsg
  1267  000992  0101               	movlb	1	; () banked
  1268  000994  0101               	movlb	1	; () banked
  1269  000996  6FB2               	movwf	main@length& (0+255),b
  1270                           
  1271                           ; BSR set to: 1
  1272                           ;main.c: 425: if (length < 0) {
  1273  000998  0101               	movlb	1	; () banked
  1274  00099A  0101               	movlb	1	; () banked
  1275  00099C  BFB2               	btfsc	main@length& (0+255),7,b
  1276  00099E  D734               	goto	l3167
  1277  0009A0  D052               	goto	l3211
  1278  0009A2                     l3205:
  1279                           
  1280                           ; BSR set to: 1
  1281                           ;main.c: 433: {
  1282                           ;main.c: 434: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1283  0009A2  0101               	movlb	1	; () banked
  1284  0009A4  0E01               	movlw	high main@t1thread_data
  1285  0009A6  0101               	movlb	1	; () banked
  1286  0009A8  0101               	movlb	1	; () banked
  1287  0009AA  6F7F               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1288  0009AC  0101               	movlb	1	; () banked
  1289  0009AE  0EAF               	movlw	low main@t1thread_data
  1290  0009B0  0101               	movlb	1	; () banked
  1291  0009B2  0101               	movlb	1	; () banked
  1292  0009B4  6F7E               	movwf	timer1_lthread@tptr& (0+255),b
  1293  0009B6  0101               	movlb	1	; () banked
  1294  0009B8  0101               	movlb	1	; () banked
  1295  0009BA  C1B1  F180         	movff	main@msgtype,timer1_lthread@msgtype
  1296  0009BE  0101               	movlb	1	; () banked
  1297  0009C0  0101               	movlb	1	; () banked
  1298  0009C2  6B81               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1299  0009C4  0101               	movlb	1	; () banked
  1300  0009C6  0101               	movlb	1	; () banked
  1301  0009C8  51B2               	movf	main@length& (0+255),w,b
  1302  0009CA  0101               	movlb	1	; () banked
  1303  0009CC  0101               	movlb	1	; () banked
  1304  0009CE  6F82               	movwf	timer1_lthread@length& (0+255),b
  1305  0009D0  0101               	movlb	1	; () banked
  1306  0009D2  6B83               	clrf	(timer1_lthread@length+1)& (0+255),b
  1307  0009D4  0101               	movlb	1	; () banked
  1308  0009D6  BF82               	btfsc	timer1_lthread@length& (0+255),7,b
  1309  0009D8  0783               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1310  0009DA  0101               	movlb	1	; () banked
  1311  0009DC  0E01               	movlw	high main@msgbuffer
  1312  0009DE  0101               	movlb	1	; () banked
  1313  0009E0  0101               	movlb	1	; () banked
  1314  0009E2  6F85               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1315  0009E4  0101               	movlb	1	; () banked
  1316  0009E6  0E88               	movlw	low main@msgbuffer
  1317  0009E8  0101               	movlb	1	; () banked
  1318  0009EA  0101               	movlb	1	; () banked
  1319  0009EC  6F84               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1320  0009EE  ECE1  F00A         	call	_timer1_lthread	;wreg free
  1321                           
  1322                           ;main.c: 435: break;
  1323  0009F2  D70A               	goto	l3167
  1324  0009F4                     l3207:
  1325                           
  1326                           ;main.c: 438: case 31:
  1327                           ;main.c: 439: {
  1328                           ;main.c: 440: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1329  0009F4  0101               	movlb	1	; () banked
  1330  0009F6  0E01               	movlw	high main@uthread_data
  1331  0009F8  0100               	movlb	0	; () banked
  1332  0009FA  0100               	movlb	0	; () banked
  1333  0009FC  6FB1               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1334  0009FE  0101               	movlb	1	; () banked
  1335  000A00  0EA5               	movlw	low main@uthread_data
  1336  000A02  0100               	movlb	0	; () banked
  1337  000A04  0100               	movlb	0	; () banked
  1338  000A06  6FB0               	movwf	uart_lthread@uptr& (0+255),b
  1339  000A08  0101               	movlb	1	; () banked
  1340  000A0A  0100               	movlb	0	; () banked
  1341  000A0C  C1B1  F0B2         	movff	main@msgtype,uart_lthread@msgtype
  1342  000A10  0100               	movlb	0	; () banked
  1343  000A12  0100               	movlb	0	; () banked
  1344  000A14  6BB3               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1345  000A16  0101               	movlb	1	; () banked
  1346  000A18  0101               	movlb	1	; () banked
  1347  000A1A  51B2               	movf	main@length& (0+255),w,b
  1348  000A1C  0100               	movlb	0	; () banked
  1349  000A1E  0100               	movlb	0	; () banked
  1350  000A20  6FB4               	movwf	uart_lthread@length& (0+255),b
  1351  000A22  0100               	movlb	0	; () banked
  1352  000A24  6BB5               	clrf	(uart_lthread@length+1)& (0+255),b
  1353  000A26  0100               	movlb	0	; () banked
  1354  000A28  BFB4               	btfsc	uart_lthread@length& (0+255),7,b
  1355  000A2A  07B5               	decf	(uart_lthread@length+1)& (0+255),f,b
  1356  000A2C  0101               	movlb	1	; () banked
  1357  000A2E  0E01               	movlw	high main@msgbuffer
  1358  000A30  0100               	movlb	0	; () banked
  1359  000A32  0100               	movlb	0	; () banked
  1360  000A34  6FB7               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1361  000A36  0101               	movlb	1	; () banked
  1362  000A38  0E88               	movlw	low main@msgbuffer
  1363  000A3A  0100               	movlb	0	; () banked
  1364  000A3C  0100               	movlb	0	; () banked
  1365  000A3E  6FB6               	movwf	uart_lthread@msgbuffer& (0+255),b
  1366  000A40  ECAB  F00C         	call	_uart_lthread	;wreg free
  1367                           
  1368                           ;main.c: 441: break;
  1369  000A44  D6E1               	goto	l3167
  1370  000A46                     l3211:
  1371  000A46  0101               	movlb	1	; () banked
  1372  000A48  0101               	movlb	1	; () banked
  1373  000A4A  51B1               	movf	main@msgtype& (0+255),w,b
  1374                           
  1375                           ; Switch size 1, requested type "space"
  1376                           ; Number of cases is 3, Range of values is 11 to 31
  1377                           ; switch strategies available:
  1378                           ; Name         Instructions Cycles
  1379                           ; simple_byte           10     6 (average)
  1380                           ;	Chosen strategy is simple_byte
  1381  000A4C  0A0B               	xorlw	11	; case 11
  1382  000A4E  B4D8               	btfsc	status,2,c
  1383  000A50  D7A8               	goto	l3205
  1384  000A52  0A15               	xorlw	21	; case 30
  1385  000A54  B4D8               	btfsc	status,2,c
  1386  000A56  D7CE               	goto	l3207
  1387  000A58  0A01               	xorlw	1	; case 31
  1388  000A5A  B4D8               	btfsc	status,2,c
  1389  000A5C  D7CB               	goto	l3207
  1390  000A5E  D6D4               	goto	l3167
  1391  000A60                     __end_of_main:
  1392                           	opt stack 0
  1393                           tblptru	equ	0xFF8
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           status	equ	0xFD8
  1397                           
  1398 ;; *************** function _uart_lthread *****************
  1399 ;; Defined at:
  1400 ;;		line 9 in file "../src/uart_thread.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  uptr            2   48[BANK0 ] PTR struct __uart_thread
  1403 ;;		 -> main@uthread_data(2), 
  1404 ;;  msgtype         2   50[BANK0 ] int 
  1405 ;;  length          2   52[BANK0 ] int 
  1406 ;;  msgbuffer       2   54[BANK0 ] PTR unsigned char 
  1407 ;;		 -> main@msgbuffer(29), 
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  2   48[BANK0 ] int 
  1412 ;; Registers used:
  1413 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1419 ;;      Params:         0       8       0       0       0
  1420 ;;      Locals:         0       0       0       0       0
  1421 ;;      Temps:          0       0       0       0       0
  1422 ;;      Totals:         0       8       0       0       0
  1423 ;;Total ram usage:        8 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:   10
  1426 ;; This function calls:
  1427 ;;		Nothing
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text1
  1434  001956                     __ptext1:
  1435                           	opt stack 0
  1436  001956                     _uart_lthread:
  1437                           	opt stack 20
  1438                           
  1439                           ;uart_thread.c: 10: if (msgtype == 30) {
  1440                           
  1441                           ; BSR set to: 1
  1442                           ;incstack = 0
  1443  001956  0100               	movlb	0	; () banked
  1444  001958  0100               	movlb	0	; () banked
  1445  00195A  51B2               	movf	uart_lthread@msgtype& (0+255),w,b
  1446  00195C  0A1E               	xorlw	30
  1447  00195E  11B3               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1448  001960  B4D8               	btfsc	status,2,c
  1449  001962  0012               	return	
  1450                           
  1451                           ; BSR set to: 0
  1452                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1453                           
  1454                           ; BSR set to: 0
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;uart_thread.c: 11: }
  1458  001964  0100               	movlb	0	; () banked
  1459  001966  0100               	movlb	0	; () banked
  1460  001968  51B2               	movf	uart_lthread@msgtype& (0+255),w,b
  1461  00196A  0A1F               	xorlw	31
  1462  00196C  11B3               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1463  00196E  A4D8               	btfss	status,2,c
  1464  001970  0012               	return	
  1465                           
  1466                           ; BSR set to: 0
  1467                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1468  001972  0100               	movlb	0	; () banked
  1469  001974  0100               	movlb	0	; () banked
  1470  001976  51B4               	movf	uart_lthread@length& (0+255),w,b
  1471  001978  0100               	movlb	0	; () banked
  1472  00197A  0100               	movlb	0	; () banked
  1473  00197C  25B6               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1474  00197E  6ED9               	movwf	fsr2l,c
  1475  001980  0100               	movlb	0	; () banked
  1476  001982  0100               	movlb	0	; () banked
  1477  001984  51B5               	movf	(uart_lthread@length+1)& (0+255),w,b
  1478  001986  0100               	movlb	0	; () banked
  1479  001988  0100               	movlb	0	; () banked
  1480  00198A  21B7               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1481  00198C  6EDA               	movwf	fsr2h,c
  1482  00198E  0E00               	movlw	0
  1483  001990  6EDF               	movwf	indf2,c
  1484  001992  0012               	return	
  1485  001994                     __end_of_uart_lthread:
  1486                           	opt stack 0
  1487                           tblptru	equ	0xFF8
  1488                           postinc0	equ	0xFEE
  1489                           wreg	equ	0xFE8
  1490                           indf2	equ	0xFDF
  1491                           fsr2h	equ	0xFDA
  1492                           fsr2l	equ	0xFD9
  1493                           status	equ	0xFD8
  1494                           
  1495 ;; *************** function _timer1_lthread *****************
  1496 ;; Defined at:
  1497 ;;		line 14 in file "../src/timer1_thread.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  1500 ;;		 -> main@t1thread_data(2), 
  1501 ;;  msgtype         2    2[BANK1 ] int 
  1502 ;;  length          2    4[BANK1 ] int 
  1503 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  1504 ;;		 -> main@msgbuffer(29), 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  retval          1   75[BANK0 ] char 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  2    0[BANK1 ] int 
  1509 ;; Registers used:
  1510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1516 ;;      Params:         0       0       8       0       0
  1517 ;;      Locals:         0       1       0       0       0
  1518 ;;      Temps:          0       1       0       0       0
  1519 ;;      Totals:         0       2       8       0       0
  1520 ;;Total ram usage:       10 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:   13
  1523 ;; This function calls:
  1524 ;;		_FromMainHigh_sendmsg
  1525 ;;		___lwmod
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text2
  1532  0015C2                     __ptext2:
  1533                           	opt stack 0
  1534  0015C2                     _timer1_lthread:
  1535                           	opt stack 17
  1536                           
  1537                           ;timer1_thread.c: 15: signed char retval;
  1538                           ;timer1_thread.c: 17: tptr->msgcount++;
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;incstack = 0
  1542  0015C2  C17E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1543  0015C6  C17F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1544  0015CA  2ADE               	incf	postinc2,f,c
  1545  0015CC  0E00               	movlw	0
  1546  0015CE  22DD               	addwfc	postdec2,f,c
  1547                           
  1548                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1549  0015D0  C17E  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1550  0015D4  C17F  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1551  0015D8  0100               	movlb	0	; () banked
  1552  0015DA  CFDE F0B0          	movff	postinc2,___lwmod@dividend
  1553  0015DE  0100               	movlb	0	; () banked
  1554  0015E0  CFDD F0B1          	movff	postdec2,___lwmod@dividend+1
  1555  0015E4  0E00               	movlw	0
  1556  0015E6  0100               	movlb	0	; () banked
  1557  0015E8  0100               	movlb	0	; () banked
  1558  0015EA  6FB3               	movwf	(___lwmod@divisor+1)& (0+255),b
  1559  0015EC  0E0A               	movlw	10
  1560  0015EE  0100               	movlb	0	; () banked
  1561  0015F0  6FB2               	movwf	___lwmod@divisor& (0+255),b
  1562  0015F2  ECDE  F009         	call	___lwmod	;wreg free
  1563  0015F6  0100               	movlb	0	; () banked
  1564  0015F8  0100               	movlb	0	; () banked
  1565  0015FA  51B0               	movf	?___lwmod& (0+255),w,b
  1566  0015FC  0A09               	xorlw	9
  1567  0015FE  0100               	movlb	0	; () banked
  1568  001600  11B1               	iorwf	(?___lwmod+1)& (0+255),w,b
  1569  001602  A4D8               	btfss	status,2,c
  1570  001604  0012               	return	
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1574  001606  0100               	movlb	0	; () banked
  1575  001608  6FCA               	movwf	??_timer1_lthread& (0+255),b
  1576  00160A  0E14               	movlw	20
  1577  00160C  0100               	movlb	0	; () banked
  1578  00160E  0100               	movlb	0	; () banked
  1579  001610  6FC6               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1580  001612  0100               	movlb	0	; () banked
  1581  001614  51CA               	movf	??_timer1_lthread& (0+255),w,b
  1582  001616  0101               	movlb	1	; () banked
  1583  001618  0100               	movlb	0	; () banked
  1584  00161A  C17F  F0C8         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1585  00161E  0101               	movlb	1	; () banked
  1586  001620  0100               	movlb	0	; () banked
  1587  001622  C17E  F0C7         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1588  001626  0E02               	movlw	2
  1589  001628  EC03  F00D         	call	_FromMainHigh_sendmsg
  1590  00162C  0100               	movlb	0	; () banked
  1591  00162E  0100               	movlb	0	; () banked
  1592  001630  6FCB               	movwf	timer1_lthread@retval& (0+255),b
  1593  001632  0012               	return	
  1594  001634                     __end_of_timer1_lthread:
  1595                           	opt stack 0
  1596                           tblptru	equ	0xFF8
  1597                           postinc0	equ	0xFEE
  1598                           wreg	equ	0xFE8
  1599                           indf2	equ	0xFDF
  1600                           postinc2	equ	0xFDE
  1601                           postdec2	equ	0xFDD
  1602                           fsr2h	equ	0xFDA
  1603                           fsr2l	equ	0xFD9
  1604                           status	equ	0xFD8
  1605                           
  1606 ;; *************** function ___lwmod *****************
  1607 ;; Defined at:
  1608 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  dividend        2   48[BANK0 ] unsigned int 
  1611 ;;  divisor         2   50[BANK0 ] unsigned int 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  counter         1   53[BANK0 ] unsigned char 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  2   48[BANK0 ] unsigned int 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1623 ;;      Params:         0       4       0       0       0
  1624 ;;      Locals:         0       1       0       0       0
  1625 ;;      Temps:          0       1       0       0       0
  1626 ;;      Totals:         0       6       0       0       0
  1627 ;;Total ram usage:        6 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:   10
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_timer1_lthread
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text3
  1638  0013BC                     __ptext3:
  1639                           	opt stack 0
  1640  0013BC                     ___lwmod:
  1641                           	opt stack 19
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;incstack = 0
  1645  0013BC  0100               	movlb	0	; () banked
  1646  0013BE  0100               	movlb	0	; () banked
  1647  0013C0  51B3               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1648  0013C2  11B2               	iorwf	___lwmod@divisor& (0+255),w,b
  1649  0013C4  B4D8               	btfsc	status,2,c
  1650  0013C6  D03A               	goto	l1053
  1651                           
  1652                           ; BSR set to: 0
  1653  0013C8  0100               	movlb	0	; () banked
  1654  0013CA  6FB4               	movwf	??___lwmod& (0+255),b
  1655  0013CC  0E01               	movlw	1
  1656  0013CE  0100               	movlb	0	; () banked
  1657  0013D0  0100               	movlb	0	; () banked
  1658  0013D2  6FB5               	movwf	___lwmod@counter& (0+255),b
  1659  0013D4  0100               	movlb	0	; () banked
  1660  0013D6  51B4               	movf	??___lwmod& (0+255),w,b
  1661  0013D8  D009               	goto	l2775
  1662  0013DA                     l2773:
  1663                           
  1664                           ; BSR set to: 0
  1665  0013DA  0100               	movlb	0	; () banked
  1666  0013DC  0100               	movlb	0	; () banked
  1667  0013DE  0100               	movlb	0	; () banked
  1668  0013E0  90D8               	bcf	status,0,c
  1669  0013E2  37B2               	rlcf	___lwmod@divisor& (0+255),f,b
  1670  0013E4  37B3               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1671  0013E6  0100               	movlb	0	; () banked
  1672  0013E8  0100               	movlb	0	; () banked
  1673  0013EA  2BB5               	incf	___lwmod@counter& (0+255),f,b
  1674  0013EC                     l2775:
  1675                           
  1676                           ; BSR set to: 0
  1677  0013EC  0100               	movlb	0	; () banked
  1678  0013EE  0100               	movlb	0	; () banked
  1679  0013F0  AFB3               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1680  0013F2  D7F3               	goto	l2773
  1681  0013F4                     l2777:
  1682                           
  1683                           ; BSR set to: 0
  1684  0013F4  0100               	movlb	0	; () banked
  1685  0013F6  0100               	movlb	0	; () banked
  1686  0013F8  51B2               	movf	___lwmod@divisor& (0+255),w,b
  1687  0013FA  0100               	movlb	0	; () banked
  1688  0013FC  0100               	movlb	0	; () banked
  1689  0013FE  5DB0               	subwf	___lwmod@dividend& (0+255),w,b
  1690  001400  0100               	movlb	0	; () banked
  1691  001402  0100               	movlb	0	; () banked
  1692  001404  51B3               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1693  001406  0100               	movlb	0	; () banked
  1694  001408  0100               	movlb	0	; () banked
  1695  00140A  59B1               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1696  00140C  A0D8               	btfss	status,0,c
  1697  00140E  D00C               	goto	l2781
  1698                           
  1699                           ; BSR set to: 0
  1700  001410  0100               	movlb	0	; () banked
  1701  001412  0100               	movlb	0	; () banked
  1702  001414  51B2               	movf	___lwmod@divisor& (0+255),w,b
  1703  001416  0100               	movlb	0	; () banked
  1704  001418  0100               	movlb	0	; () banked
  1705  00141A  5FB0               	subwf	___lwmod@dividend& (0+255),f,b
  1706  00141C  0100               	movlb	0	; () banked
  1707  00141E  0100               	movlb	0	; () banked
  1708  001420  51B3               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1709  001422  0100               	movlb	0	; () banked
  1710  001424  0100               	movlb	0	; () banked
  1711  001426  5BB1               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1712  001428                     l2781:
  1713                           
  1714                           ; BSR set to: 0
  1715  001428  0100               	movlb	0	; () banked
  1716  00142A  0100               	movlb	0	; () banked
  1717  00142C  0100               	movlb	0	; () banked
  1718  00142E  90D8               	bcf	status,0,c
  1719  001430  33B3               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1720  001432  33B2               	rrcf	___lwmod@divisor& (0+255),f,b
  1721                           
  1722                           ; BSR set to: 0
  1723  001434  0100               	movlb	0	; () banked
  1724  001436  0100               	movlb	0	; () banked
  1725  001438  2FB5               	decfsz	___lwmod@counter& (0+255),f,b
  1726  00143A  D7DC               	goto	l2777
  1727  00143C                     l1053:
  1728                           
  1729                           ; BSR set to: 0
  1730  00143C  C0B0  F0B0         	movff	___lwmod@dividend,?___lwmod
  1731  001440  C0B1  F0B1         	movff	___lwmod@dividend+1,?___lwmod+1
  1732                           
  1733                           ; BSR set to: 0
  1734  001444  0012               	return	
  1735  001446                     __end_of___lwmod:
  1736                           	opt stack 0
  1737                           tblptru	equ	0xFF8
  1738                           postinc0	equ	0xFEE
  1739                           wreg	equ	0xFE8
  1740                           indf2	equ	0xFDF
  1741                           postinc2	equ	0xFDE
  1742                           postdec2	equ	0xFDD
  1743                           fsr2h	equ	0xFDA
  1744                           fsr2l	equ	0xFD9
  1745                           status	equ	0xFD8
  1746                           
  1747 ;; *************** function _FromMainHigh_sendmsg *****************
  1748 ;; Defined at:
  1749 ;;		line 174 in file "../src/messages.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  length          1    wreg     unsigned char 
  1752 ;;  msgtype         1   70[BANK0 ] unsigned char 
  1753 ;;  data            2   71[BANK0 ] PTR void 
  1754 ;;		 -> main@t1thread_data(2), 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  length          1   73[BANK0 ] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      char 
  1759 ;; Registers used:
  1760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1766 ;;      Params:         0       3       0       0       0
  1767 ;;      Locals:         0       1       0       0       0
  1768 ;;      Temps:          0       0       0       0       0
  1769 ;;      Totals:         0       4       0       0       0
  1770 ;;Total ram usage:        4 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; Hardware stack levels required when called:   12
  1773 ;; This function calls:
  1774 ;;		_send_msg
  1775 ;; This function is called by:
  1776 ;;		_timer1_lthread
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text4
  1781  001A06                     __ptext4:
  1782                           	opt stack 0
  1783  001A06                     _FromMainHigh_sendmsg:
  1784                           	opt stack 17
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;incstack = 0
  1788                           ;FromMainHigh_sendmsg@length stored from wreg
  1789  001A06  CFE8 F0C9          	movff	wreg,FromMainHigh_sendmsg@length
  1790                           
  1791                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1792  001A0A  0103               	movlb	3	; () banked
  1793  001A0C  0E03               	movlw	high _FromMainHigh_MQ
  1794  001A0E  0100               	movlb	0	; () banked
  1795  001A10  0100               	movlb	0	; () banked
  1796  001A12  6FBB               	movwf	(send_msg@qptr+1)& (0+255),b
  1797  001A14  0103               	movlb	3	; () banked
  1798  001A16  0E00               	movlw	low _FromMainHigh_MQ
  1799  001A18  0100               	movlb	0	; () banked
  1800  001A1A  0100               	movlb	0	; () banked
  1801  001A1C  6FBA               	movwf	send_msg@qptr& (0+255),b
  1802  001A1E  C0C9  F0BC         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1803  001A22  C0C6  F0BD         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1804  001A26  0100               	movlb	0	; () banked
  1805  001A28  0100               	movlb	0	; () banked
  1806  001A2A  C0C8  F0BF         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1807  001A2E  0100               	movlb	0	; () banked
  1808  001A30  0100               	movlb	0	; () banked
  1809  001A32  C0C7  F0BE         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1810  001A36  EC52  F006         	call	_send_msg	;wreg free
  1811  001A3A  0012               	return	
  1812  001A3C                     __end_of_FromMainHigh_sendmsg:
  1813                           	opt stack 0
  1814                           tblptru	equ	0xFF8
  1815                           postinc0	equ	0xFEE
  1816                           wreg	equ	0xFE8
  1817                           indf2	equ	0xFDF
  1818                           postinc2	equ	0xFDE
  1819                           postdec2	equ	0xFDD
  1820                           fsr2h	equ	0xFDA
  1821                           fsr2l	equ	0xFD9
  1822                           status	equ	0xFD8
  1823                           
  1824 ;; *************** function _send_msg *****************
  1825 ;; Defined at:
  1826 ;;		line 24 in file "../src/messages.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  qptr            2   58[BANK0 ] PTR struct __msg_queue
  1829 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  1830 ;;  length          1   60[BANK0 ] unsigned char 
  1831 ;;  msgtype         1   61[BANK0 ] unsigned char 
  1832 ;;  data            2   62[BANK0 ] PTR void 
  1833 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), main@ic(64), 
  1834 ;;		 -> main@uc(5), 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  qmsg            2   68[BANK0 ] PTR struct __msg
  1837 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  1838 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  1839 ;;  tlength         2   65[BANK0 ] unsigned int 
  1840 ;;  slot            1   67[BANK0 ] unsigned char 
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      char 
  1843 ;; Registers used:
  1844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1850 ;;      Params:         0       6       0       0       0
  1851 ;;      Locals:         0       5       0       0       0
  1852 ;;      Temps:          0       1       0       0       0
  1853 ;;      Totals:         0      12       0       0       0
  1854 ;;Total ram usage:       12 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:   11
  1857 ;; This function calls:
  1858 ;;		_memcpy
  1859 ;; This function is called by:
  1860 ;;		_FromMainHigh_sendmsg
  1861 ;;		_FromMainLow_sendmsg
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text5
  1866  000CA4                     __ptext5:
  1867                           	opt stack 0
  1868  000CA4                     _send_msg:
  1869                           	opt stack 17
  1870                           
  1871                           ;messages.c: 25: unsigned char slot;
  1872                           ;messages.c: 27: msg *qmsg;
  1873                           ;messages.c: 28: size_t tlength = length;
  1874                           
  1875                           ;incstack = 0
  1876  000CA4  0100               	movlb	0	; () banked
  1877  000CA6  0100               	movlb	0	; () banked
  1878  000CA8  C0BC  F0C1         	movff	send_msg@length,send_msg@tlength
  1879  000CAC  0100               	movlb	0	; () banked
  1880  000CAE  0100               	movlb	0	; () banked
  1881  000CB0  6BC2               	clrf	(send_msg@tlength+1)& (0+255),b
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1885  000CB2  0100               	movlb	0	; () banked
  1886  000CB4  EE20 F07C          	lfsr	2,124
  1887  000CB8  0100               	movlb	0	; () banked
  1888  000CBA  51BA               	movf	send_msg@qptr& (0+255),w,b
  1889  000CBC  26D9               	addwf	fsr2l,f,c
  1890  000CBE  0100               	movlb	0	; () banked
  1891  000CC0  51BB               	movf	(send_msg@qptr+1)& (0+255),w,b
  1892  000CC2  22DA               	addwfc	fsr2h,f,c
  1893  000CC4  50DF               	movf	indf2,w,c
  1894  000CC6  0100               	movlb	0	; () banked
  1895  000CC8  0100               	movlb	0	; () banked
  1896  000CCA  6FC3               	movwf	send_msg@slot& (0+255),b
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1900  000CCC  0100               	movlb	0	; () banked
  1901  000CCE  0100               	movlb	0	; () banked
  1902  000CD0  51C3               	movf	send_msg@slot& (0+255),w,b
  1903  000CD2  0D1F               	mullw	31
  1904  000CD4  50F3               	movf	prodl,w,c
  1905  000CD6  0100               	movlb	0	; () banked
  1906  000CD8  0100               	movlb	0	; () banked
  1907  000CDA  25BA               	addwf	send_msg@qptr& (0+255),w,b
  1908  000CDC  0100               	movlb	0	; () banked
  1909  000CDE  0100               	movlb	0	; () banked
  1910  000CE0  6FC4               	movwf	send_msg@qmsg& (0+255),b
  1911  000CE2  50F4               	movf	prodh,w,c
  1912  000CE4  0100               	movlb	0	; () banked
  1913  000CE6  0100               	movlb	0	; () banked
  1914  000CE8  21BB               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  1915  000CEA  0100               	movlb	0	; () banked
  1916  000CEC  6FC5               	movwf	(send_msg@qmsg+1)& (0+255),b
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;messages.c: 41: if (qmsg->full != 0) {
  1920  000CEE  C0C4  FFD9         	movff	send_msg@qmsg,fsr2l
  1921  000CF2  C0C5  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1922  000CF6  50DF               	movf	indf2,w,c
  1923  000CF8  B4D8               	btfsc	status,2,c
  1924  000CFA  D002               	goto	l2655
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;messages.c: 42: return (-1);
  1928  000CFC  0EFF               	movlw	255
  1929  000CFE  0012               	return	
  1930  000D00                     l2655:
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;messages.c: 43: }
  1934                           ;messages.c: 46: qmsg->length = length;
  1935  000D00  0100               	movlb	0	; () banked
  1936  000D02  EE20 F001          	lfsr	2,1
  1937  000D06  0100               	movlb	0	; () banked
  1938  000D08  51C4               	movf	send_msg@qmsg& (0+255),w,b
  1939  000D0A  26D9               	addwf	fsr2l,f,c
  1940  000D0C  0100               	movlb	0	; () banked
  1941  000D0E  51C5               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1942  000D10  22DA               	addwfc	fsr2h,f,c
  1943  000D12  0100               	movlb	0	; () banked
  1944  000D14  C0BC  FFDF         	movff	send_msg@length,indf2
  1945                           
  1946                           ;messages.c: 47: qmsg->msgtype = msgtype;
  1947  000D18  0100               	movlb	0	; () banked
  1948  000D1A  EE20 F002          	lfsr	2,2
  1949  000D1E  0100               	movlb	0	; () banked
  1950  000D20  51C4               	movf	send_msg@qmsg& (0+255),w,b
  1951  000D22  26D9               	addwf	fsr2l,f,c
  1952  000D24  0100               	movlb	0	; () banked
  1953  000D26  51C5               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1954  000D28  22DA               	addwfc	fsr2h,f,c
  1955  000D2A  0100               	movlb	0	; () banked
  1956  000D2C  C0BD  FFDF         	movff	send_msg@msgtype,indf2
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  1960  000D30  0E03               	movlw	3
  1961  000D32  0100               	movlb	0	; () banked
  1962  000D34  0100               	movlb	0	; () banked
  1963  000D36  25C4               	addwf	send_msg@qmsg& (0+255),w,b
  1964  000D38  0100               	movlb	0	; () banked
  1965  000D3A  0100               	movlb	0	; () banked
  1966  000D3C  6FB0               	movwf	memcpy@d1& (0+255),b
  1967  000D3E  0E00               	movlw	0
  1968  000D40  0100               	movlb	0	; () banked
  1969  000D42  0100               	movlb	0	; () banked
  1970  000D44  21C5               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  1971  000D46  0100               	movlb	0	; () banked
  1972  000D48  6FB1               	movwf	(memcpy@d1+1)& (0+255),b
  1973  000D4A  0100               	movlb	0	; () banked
  1974  000D4C  0100               	movlb	0	; () banked
  1975  000D4E  C0BF  F0B3         	movff	send_msg@data+1,memcpy@s1+1
  1976  000D52  0100               	movlb	0	; () banked
  1977  000D54  0100               	movlb	0	; () banked
  1978  000D56  C0BE  F0B2         	movff	send_msg@data,memcpy@s1
  1979  000D5A  C0C1  F0B4         	movff	send_msg@tlength,memcpy@n
  1980  000D5E  C0C2  F0B5         	movff	send_msg@tlength+1,memcpy@n+1
  1981  000D62  EC86  F00B         	call	_memcpy	;wreg free
  1982                           
  1983                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  1984  000D66  0100               	movlb	0	; () banked
  1985  000D68  EE20 F07C          	lfsr	2,124
  1986  000D6C  0100               	movlb	0	; () banked
  1987  000D6E  51BA               	movf	send_msg@qptr& (0+255),w,b
  1988  000D70  26D9               	addwf	fsr2l,f,c
  1989  000D72  0100               	movlb	0	; () banked
  1990  000D74  51BB               	movf	(send_msg@qptr+1)& (0+255),w,b
  1991  000D76  22DA               	addwfc	fsr2h,f,c
  1992  000D78  0100               	movlb	0	; () banked
  1993  000D7A  EE10 F07C          	lfsr	1,124
  1994  000D7E  0100               	movlb	0	; () banked
  1995  000D80  51BA               	movf	send_msg@qptr& (0+255),w,b
  1996  000D82  26E1               	addwf	fsr1l,f,c
  1997  000D84  0100               	movlb	0	; () banked
  1998  000D86  51BB               	movf	(send_msg@qptr+1)& (0+255),w,b
  1999  000D88  22E2               	addwfc	fsr1h,f,c
  2000  000D8A  50E7               	movf	indf1,w,c
  2001  000D8C  0100               	movlb	0	; () banked
  2002  000D8E  6FC0               	movwf	??_send_msg& (0+255),b
  2003  000D90  0100               	movlb	0	; () banked
  2004  000D92  29C0               	incf	??_send_msg& (0+255),w,b
  2005  000D94  0B03               	andlw	3
  2006  000D96  6EDF               	movwf	indf2,c
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;messages.c: 59: qmsg->full = 1;
  2010  000D98  C0C4  FFD9         	movff	send_msg@qmsg,fsr2l
  2011  000D9C  C0C5  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2012  000DA0  0E01               	movlw	1
  2013  000DA2  6EDF               	movwf	indf2,c
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;messages.c: 60: return (1);
  2017  000DA4  0E01               	movlw	1
  2018  000DA6  0012               	return	
  2019  000DA8                     __end_of_send_msg:
  2020                           	opt stack 0
  2021                           tblptru	equ	0xFF8
  2022                           prodh	equ	0xFF4
  2023                           prodl	equ	0xFF3
  2024                           postinc0	equ	0xFEE
  2025                           wreg	equ	0xFE8
  2026                           indf1	equ	0xFE7
  2027                           fsr1h	equ	0xFE2
  2028                           fsr1l	equ	0xFE1
  2029                           indf2	equ	0xFDF
  2030                           postinc2	equ	0xFDE
  2031                           postdec2	equ	0xFDD
  2032                           fsr2h	equ	0xFDA
  2033                           fsr2l	equ	0xFD9
  2034                           status	equ	0xFD8
  2035                           
  2036 ;; *************** function _timer0_lthread *****************
  2037 ;; Defined at:
  2038 ;;		line 9 in file "../src/timer0_thread.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  tptr            2   48[BANK0 ] PTR struct __timer0_thre
  2041 ;;		 -> main@t0thread_data(2), 
  2042 ;;  msgtype         2   50[BANK0 ] int 
  2043 ;;  length          2   52[BANK0 ] int 
  2044 ;;  msgbuffer       2   54[BANK0 ] PTR unsigned char 
  2045 ;;		 -> main@msgbuffer(29), 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  msgval          2   56[BANK0 ] PTR unsigned int 
  2048 ;;		 -> main@msgbuffer(29), 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  2   48[BANK0 ] int 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2058 ;;      Params:         0       8       0       0       0
  2059 ;;      Locals:         0       2       0       0       0
  2060 ;;      Temps:          0       0       0       0       0
  2061 ;;      Totals:         0      10       0       0       0
  2062 ;;Total ram usage:       10 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:   10
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_main
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text6
  2073  001BE4                     __ptext6:
  2074                           	opt stack 0
  2075  001BE4                     _timer0_lthread:
  2076                           	opt stack 20
  2077                           
  2078                           ;timer0_thread.c: 10: unsigned int *msgval;
  2079                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;incstack = 0
  2083  001BE4  0100               	movlb	0	; () banked
  2084  001BE6  0100               	movlb	0	; () banked
  2085  001BE8  C0B7  F0B9         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2086  001BEC  0100               	movlb	0	; () banked
  2087  001BEE  0100               	movlb	0	; () banked
  2088  001BF0  C0B6  F0B8         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2089                           
  2090                           ; BSR set to: 0
  2091  001BF4  0012               	return	
  2092  001BF6                     __end_of_timer0_lthread:
  2093                           	opt stack 0
  2094                           tblptru	equ	0xFF8
  2095                           prodh	equ	0xFF4
  2096                           prodl	equ	0xFF3
  2097                           postinc0	equ	0xFEE
  2098                           wreg	equ	0xFE8
  2099                           indf1	equ	0xFE7
  2100                           fsr1h	equ	0xFE2
  2101                           fsr1l	equ	0xFE1
  2102                           indf2	equ	0xFDF
  2103                           postinc2	equ	0xFDE
  2104                           postdec2	equ	0xFDD
  2105                           fsr2h	equ	0xFDA
  2106                           fsr2l	equ	0xFD9
  2107                           status	equ	0xFD8
  2108                           
  2109 ;; *************** function _start_i2c_slave_reply *****************
  2110 ;; Defined at:
  2111 ;;		line 53 in file "../src/my_i2c.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  length          1    wreg     unsigned char 
  2114 ;;  msg             2   48[BANK0 ] PTR unsigned char 
  2115 ;;		 -> main@msgbuffer(29), adcbuffer(28), 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  length          1   52[BANK0 ] unsigned char 
  2118 ;; Return value:  Size  Location     Type
  2119 ;;		None               void
  2120 ;; Registers used:
  2121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2127 ;;      Params:         0       2       0       0       0
  2128 ;;      Locals:         0       1       0       0       0
  2129 ;;      Temps:          0       2       0       0       0
  2130 ;;      Totals:         0       5       0       0       0
  2131 ;;Total ram usage:        5 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:   10
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_main
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text7
  2142  000B96                     __ptext7:
  2143                           	opt stack 0
  2144  000B96                     _start_i2c_slave_reply:
  2145                           	opt stack 20
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;incstack = 0
  2149                           ;start_i2c_slave_reply@length stored from wreg
  2150  000B96  CFE8 F0B4          	movff	wreg,start_i2c_slave_reply@length
  2151                           
  2152                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2153  000B9A  0100               	movlb	0	; () banked
  2154  000B9C  EE20 F03D          	lfsr	2,61
  2155  000BA0  0100               	movlb	0	; () banked
  2156  000BA2  51CD               	movf	_ic_ptr& (0+255),w,b
  2157  000BA4  26D9               	addwf	fsr2l,f,c
  2158  000BA6  0100               	movlb	0	; () banked
  2159  000BA8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2160  000BAA  22DA               	addwfc	fsr2h,f,c
  2161  000BAC  0E00               	movlw	0
  2162  000BAE  6EDF               	movwf	indf2,c
  2163  000BB0  D042               	goto	l2603
  2164  000BB2                     l2599:
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2168  000BB2  0100               	movlb	0	; () banked
  2169  000BB4  EE20 F03D          	lfsr	2,61
  2170  000BB8  0100               	movlb	0	; () banked
  2171  000BBA  51CD               	movf	_ic_ptr& (0+255),w,b
  2172  000BBC  26D9               	addwf	fsr2l,f,c
  2173  000BBE  0100               	movlb	0	; () banked
  2174  000BC0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2175  000BC2  22DA               	addwfc	fsr2h,f,c
  2176  000BC4  50DF               	movf	indf2,w,c
  2177  000BC6  0100               	movlb	0	; () banked
  2178  000BC8  6FB2               	movwf	??_start_i2c_slave_reply& (0+255),b
  2179  000BCA  0100               	movlb	0	; () banked
  2180  000BCC  51B2               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2181  000BCE  0D01               	mullw	1
  2182  000BD0  50F3               	movf	prodl,w,c
  2183  000BD2  0100               	movlb	0	; () banked
  2184  000BD4  0100               	movlb	0	; () banked
  2185  000BD6  25B0               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2186  000BD8  6ED9               	movwf	fsr2l,c
  2187  000BDA  50F4               	movf	prodh,w,c
  2188  000BDC  0100               	movlb	0	; () banked
  2189  000BDE  0100               	movlb	0	; () banked
  2190  000BE0  21B1               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2191  000BE2  6EDA               	movwf	fsr2h,c
  2192  000BE4  0100               	movlb	0	; () banked
  2193  000BE6  EE10 F03D          	lfsr	1,61
  2194  000BEA  0100               	movlb	0	; () banked
  2195  000BEC  51CD               	movf	_ic_ptr& (0+255),w,b
  2196  000BEE  26E1               	addwf	fsr1l,f,c
  2197  000BF0  0100               	movlb	0	; () banked
  2198  000BF2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2199  000BF4  22E2               	addwfc	fsr1h,f,c
  2200  000BF6  50E7               	movf	indf1,w,c
  2201  000BF8  0100               	movlb	0	; () banked
  2202  000BFA  6FB3               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2203  000BFC  0100               	movlb	0	; () banked
  2204  000BFE  51B3               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2205  000C00  0D01               	mullw	1
  2206  000C02  0E21               	movlw	33
  2207  000C04  26F3               	addwf	prodl,f,c
  2208  000C06  0E00               	movlw	0
  2209  000C08  22F4               	addwfc	prodh,f,c
  2210  000C0A  50F3               	movf	prodl,w,c
  2211  000C0C  0100               	movlb	0	; () banked
  2212  000C0E  0100               	movlb	0	; () banked
  2213  000C10  25CD               	addwf	_ic_ptr& (0+255),w,b
  2214  000C12  6EE1               	movwf	fsr1l,c
  2215  000C14  50F4               	movf	prodh,w,c
  2216  000C16  0100               	movlb	0	; () banked
  2217  000C18  0100               	movlb	0	; () banked
  2218  000C1A  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2219  000C1C  6EE2               	movwf	fsr1h,c
  2220  000C1E  CFDF FFE7          	movff	indf2,indf1
  2221                           
  2222                           ; BSR set to: 0
  2223  000C22  0100               	movlb	0	; () banked
  2224  000C24  EE20 F03D          	lfsr	2,61
  2225  000C28  0100               	movlb	0	; () banked
  2226  000C2A  51CD               	movf	_ic_ptr& (0+255),w,b
  2227  000C2C  26D9               	addwf	fsr2l,f,c
  2228  000C2E  0100               	movlb	0	; () banked
  2229  000C30  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2230  000C32  22DA               	addwfc	fsr2h,f,c
  2231  000C34  2ADF               	incf	indf2,f,c
  2232  000C36                     l2603:
  2233                           
  2234                           ; BSR set to: 0
  2235  000C36  0100               	movlb	0	; () banked
  2236  000C38  EE20 F03D          	lfsr	2,61
  2237  000C3C  0100               	movlb	0	; () banked
  2238  000C3E  51CD               	movf	_ic_ptr& (0+255),w,b
  2239  000C40  26D9               	addwf	fsr2l,f,c
  2240  000C42  0100               	movlb	0	; () banked
  2241  000C44  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2242  000C46  22DA               	addwfc	fsr2h,f,c
  2243  000C48  50DF               	movf	indf2,w,c
  2244  000C4A  0100               	movlb	0	; () banked
  2245  000C4C  6FB2               	movwf	??_start_i2c_slave_reply& (0+255),b
  2246  000C4E  0100               	movlb	0	; () banked
  2247  000C50  0100               	movlb	0	; () banked
  2248  000C52  51B4               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2249  000C54  0100               	movlb	0	; () banked
  2250  000C56  5DB2               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2251  000C58  A0D8               	btfss	status,0,c
  2252  000C5A  D7AB               	goto	l2599
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;my_i2c.c: 57: }
  2256                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2257                           
  2258                           ; BSR set to: 0
  2259  000C5C  0100               	movlb	0	; () banked
  2260  000C5E  EE20 F03D          	lfsr	2,61
  2261  000C62  0100               	movlb	0	; () banked
  2262  000C64  51CD               	movf	_ic_ptr& (0+255),w,b
  2263  000C66  26D9               	addwf	fsr2l,f,c
  2264  000C68  0100               	movlb	0	; () banked
  2265  000C6A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2266  000C6C  22DA               	addwfc	fsr2h,f,c
  2267  000C6E  0100               	movlb	0	; () banked
  2268  000C70  C0B4  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2269                           
  2270                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2271  000C74  0100               	movlb	0	; () banked
  2272  000C76  EE20 F03E          	lfsr	2,62
  2273  000C7A  0100               	movlb	0	; () banked
  2274  000C7C  51CD               	movf	_ic_ptr& (0+255),w,b
  2275  000C7E  26D9               	addwf	fsr2l,f,c
  2276  000C80  0100               	movlb	0	; () banked
  2277  000C82  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2278  000C84  22DA               	addwfc	fsr2h,f,c
  2279  000C86  0E01               	movlw	1
  2280  000C88  6EDF               	movwf	indf2,c
  2281                           
  2282                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2283  000C8A  0100               	movlb	0	; () banked
  2284  000C8C  EE20 F021          	lfsr	2,33
  2285  000C90  0100               	movlb	0	; () banked
  2286  000C92  51CD               	movf	_ic_ptr& (0+255),w,b
  2287  000C94  26D9               	addwf	fsr2l,f,c
  2288  000C96  0100               	movlb	0	; () banked
  2289  000C98  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2290  000C9A  22DA               	addwfc	fsr2h,f,c
  2291  000C9C  50DF               	movf	indf2,w,c
  2292  000C9E  6EC9               	movwf	4041,c	;volatile
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2296  000CA0  88C6               	bsf	4038,4,c	;volatile
  2297                           
  2298                           ; BSR set to: 0
  2299  000CA2  0012               	return	
  2300  000CA4                     __end_of_start_i2c_slave_reply:
  2301                           	opt stack 0
  2302                           tblptru	equ	0xFF8
  2303                           prodh	equ	0xFF4
  2304                           prodl	equ	0xFF3
  2305                           postinc0	equ	0xFEE
  2306                           wreg	equ	0xFE8
  2307                           indf1	equ	0xFE7
  2308                           fsr1h	equ	0xFE2
  2309                           fsr1l	equ	0xFE1
  2310                           indf2	equ	0xFDF
  2311                           postinc2	equ	0xFDE
  2312                           postdec2	equ	0xFDD
  2313                           fsr2h	equ	0xFDA
  2314                           fsr2l	equ	0xFD9
  2315                           status	equ	0xFD8
  2316                           
  2317 ;; *************** function _init_uart_recv *****************
  2318 ;; Defined at:
  2319 ;;		line 49 in file "../src/my_uart.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;  uc              2   48[BANK0 ] PTR struct __uart_comm
  2322 ;;		 -> main@uc(5), 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;		None
  2325 ;; Return value:  Size  Location     Type
  2326 ;;		None               void
  2327 ;; Registers used:
  2328 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2334 ;;      Params:         0       2       0       0       0
  2335 ;;      Locals:         0       0       0       0       0
  2336 ;;      Temps:          0       0       0       0       0
  2337 ;;      Totals:         0       2       0       0       0
  2338 ;;Total ram usage:        2 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:   10
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_main
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text8
  2349  001B92                     __ptext8:
  2350                           	opt stack 0
  2351  001B92                     _init_uart_recv:
  2352                           	opt stack 20
  2353                           
  2354                           ;my_uart.c: 50: uc_ptr = uc;
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;incstack = 0
  2358  001B92  0100               	movlb	0	; () banked
  2359  001B94  C0B1  F053         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2360  001B98  0100               	movlb	0	; () banked
  2361  001B9A  C0B0  F052         	movff	init_uart_recv@uc,_uc_ptr
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;my_uart.c: 51: uc_ptr->buflen = 0;
  2365  001B9E  EE20 F004          	lfsr	2,4
  2366  001BA2  5052               	movf	_uc_ptr,w,c
  2367  001BA4  26D9               	addwf	fsr2l,f,c
  2368  001BA6  5053               	movf	_uc_ptr+1,w,c
  2369  001BA8  22DA               	addwfc	fsr2h,f,c
  2370  001BAA  0E00               	movlw	0
  2371  001BAC  6EDF               	movwf	indf2,c
  2372                           
  2373                           ; BSR set to: 0
  2374  001BAE  0012               	return	
  2375  001BB0                     __end_of_init_uart_recv:
  2376                           	opt stack 0
  2377                           tblptru	equ	0xFF8
  2378                           prodh	equ	0xFF4
  2379                           prodl	equ	0xFF3
  2380                           postinc0	equ	0xFEE
  2381                           wreg	equ	0xFE8
  2382                           indf1	equ	0xFE7
  2383                           fsr1h	equ	0xFE2
  2384                           fsr1l	equ	0xFE1
  2385                           indf2	equ	0xFDF
  2386                           postinc2	equ	0xFDE
  2387                           postdec2	equ	0xFDD
  2388                           fsr2h	equ	0xFDA
  2389                           fsr2l	equ	0xFD9
  2390                           status	equ	0xFD8
  2391                           
  2392 ;; *************** function _init_timer1_lthread *****************
  2393 ;; Defined at:
  2394 ;;		line 6 in file "../src/timer1_thread.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  tptr            2   48[BANK0 ] PTR struct __timer1_thre
  2397 ;;		 -> main@t1thread_data(2), 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;		None               void
  2402 ;; Registers used:
  2403 ;;		wreg, fsr2l, fsr2h
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2409 ;;      Params:         0       2       0       0       0
  2410 ;;      Locals:         0       0       0       0       0
  2411 ;;      Temps:          0       0       0       0       0
  2412 ;;      Totals:         0       2       0       0       0
  2413 ;;Total ram usage:        2 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:   10
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text9
  2424  001BF6                     __ptext9:
  2425                           	opt stack 0
  2426  001BF6                     _init_timer1_lthread:
  2427                           	opt stack 20
  2428                           
  2429                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;incstack = 0
  2433  001BF6  C0B0  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2434  001BFA  C0B1  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2435  001BFE  0E00               	movlw	0
  2436  001C00  6EDE               	movwf	postinc2,c
  2437  001C02  0E00               	movlw	0
  2438  001C04  6EDD               	movwf	postdec2,c
  2439  001C06  0012               	return	
  2440  001C08                     __end_of_init_timer1_lthread:
  2441                           	opt stack 0
  2442                           tblptru	equ	0xFF8
  2443                           prodh	equ	0xFF4
  2444                           prodl	equ	0xFF3
  2445                           postinc0	equ	0xFEE
  2446                           wreg	equ	0xFE8
  2447                           indf1	equ	0xFE7
  2448                           fsr1h	equ	0xFE2
  2449                           fsr1l	equ	0xFE1
  2450                           indf2	equ	0xFDF
  2451                           postinc2	equ	0xFDE
  2452                           postdec2	equ	0xFDD
  2453                           fsr2h	equ	0xFDA
  2454                           fsr2l	equ	0xFD9
  2455                           status	equ	0xFD8
  2456                           
  2457 ;; *************** function _init_queues *****************
  2458 ;; Defined at:
  2459 ;;		line 194 in file "../src/messages.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;		None               void
  2466 ;; Registers used:
  2467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2473 ;;      Params:         0       0       0       0       0
  2474 ;;      Locals:         0       0       0       0       0
  2475 ;;      Temps:          0       1       0       0       0
  2476 ;;      Totals:         0       1       0       0       0
  2477 ;;Total ram usage:        1 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:   11
  2480 ;; This function calls:
  2481 ;;		_init_queue
  2482 ;; This function is called by:
  2483 ;;		_main
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text10
  2488  001634                     __ptext10:
  2489                           	opt stack 0
  2490  001634                     _init_queues:
  2491                           	opt stack 19
  2492                           
  2493                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2494                           
  2495                           ;incstack = 0
  2496  001634  0100               	movlb	0	; () banked
  2497  001636  6FB4               	movwf	??_init_queues& (0+255),b
  2498  001638  0E00               	movlw	0
  2499  00163A  6E34               	movwf	_MQ_Main_Willing_to_block,c
  2500  00163C  0100               	movlb	0	; () banked
  2501  00163E  51B4               	movf	??_init_queues& (0+255),w,b
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2505  001640  0101               	movlb	1	; () banked
  2506  001642  0E01               	movlw	high _ToMainLow_MQ
  2507  001644  0100               	movlb	0	; () banked
  2508  001646  0100               	movlb	0	; () banked
  2509  001648  6FB1               	movwf	(init_queue@qptr+1)& (0+255),b
  2510  00164A  0101               	movlb	1	; () banked
  2511  00164C  0E00               	movlw	low _ToMainLow_MQ
  2512  00164E  0100               	movlb	0	; () banked
  2513  001650  0100               	movlb	0	; () banked
  2514  001652  6FB0               	movwf	init_queue@qptr& (0+255),b
  2515  001654  ECA4  F00A         	call	_init_queue	;wreg free
  2516                           
  2517                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2518  001658  0102               	movlb	2	; () banked
  2519  00165A  0E02               	movlw	high _ToMainHigh_MQ
  2520  00165C  0100               	movlb	0	; () banked
  2521  00165E  0100               	movlb	0	; () banked
  2522  001660  6FB1               	movwf	(init_queue@qptr+1)& (0+255),b
  2523  001662  0102               	movlb	2	; () banked
  2524  001664  0E7E               	movlw	low _ToMainHigh_MQ
  2525  001666  0100               	movlb	0	; () banked
  2526  001668  0100               	movlb	0	; () banked
  2527  00166A  6FB0               	movwf	init_queue@qptr& (0+255),b
  2528  00166C  ECA4  F00A         	call	_init_queue	;wreg free
  2529                           
  2530                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2531  001670  0102               	movlb	2	; () banked
  2532  001672  0E02               	movlw	high _FromMainLow_MQ
  2533  001674  0100               	movlb	0	; () banked
  2534  001676  0100               	movlb	0	; () banked
  2535  001678  6FB1               	movwf	(init_queue@qptr+1)& (0+255),b
  2536  00167A  0102               	movlb	2	; () banked
  2537  00167C  0E00               	movlw	low _FromMainLow_MQ
  2538  00167E  0100               	movlb	0	; () banked
  2539  001680  0100               	movlb	0	; () banked
  2540  001682  6FB0               	movwf	init_queue@qptr& (0+255),b
  2541  001684  ECA4  F00A         	call	_init_queue	;wreg free
  2542                           
  2543                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2544  001688  0103               	movlb	3	; () banked
  2545  00168A  0E03               	movlw	high _FromMainHigh_MQ
  2546  00168C  0100               	movlb	0	; () banked
  2547  00168E  0100               	movlb	0	; () banked
  2548  001690  6FB1               	movwf	(init_queue@qptr+1)& (0+255),b
  2549  001692  0103               	movlb	3	; () banked
  2550  001694  0E00               	movlw	low _FromMainHigh_MQ
  2551  001696  0100               	movlb	0	; () banked
  2552  001698  0100               	movlb	0	; () banked
  2553  00169A  6FB0               	movwf	init_queue@qptr& (0+255),b
  2554  00169C  ECA4  F00A         	call	_init_queue	;wreg free
  2555  0016A0  0012               	return	
  2556  0016A2                     __end_of_init_queues:
  2557                           	opt stack 0
  2558                           tblptru	equ	0xFF8
  2559                           prodh	equ	0xFF4
  2560                           prodl	equ	0xFF3
  2561                           postinc0	equ	0xFEE
  2562                           wreg	equ	0xFE8
  2563                           indf1	equ	0xFE7
  2564                           fsr1h	equ	0xFE2
  2565                           fsr1l	equ	0xFE1
  2566                           indf2	equ	0xFDF
  2567                           postinc2	equ	0xFDE
  2568                           postdec2	equ	0xFDD
  2569                           fsr2h	equ	0xFDA
  2570                           fsr2l	equ	0xFD9
  2571                           status	equ	0xFD8
  2572                           
  2573 ;; *************** function _init_queue *****************
  2574 ;; Defined at:
  2575 ;;		line 14 in file "../src/messages.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  qptr            2   48[BANK0 ] PTR struct __msg_queue
  2578 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  i               1   51[BANK0 ] unsigned char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;		None               void
  2583 ;; Registers used:
  2584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2590 ;;      Params:         0       2       0       0       0
  2591 ;;      Locals:         0       1       0       0       0
  2592 ;;      Temps:          0       1       0       0       0
  2593 ;;      Totals:         0       4       0       0       0
  2594 ;;Total ram usage:        4 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:   10
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_init_queues
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text11
  2605  001548                     __ptext11:
  2606                           	opt stack 0
  2607  001548                     _init_queue:
  2608                           	opt stack 19
  2609                           
  2610                           ;messages.c: 15: unsigned char i;
  2611                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2612                           
  2613                           ;incstack = 0
  2614  001548  0100               	movlb	0	; () banked
  2615  00154A  EE20 F07C          	lfsr	2,124
  2616  00154E  0100               	movlb	0	; () banked
  2617  001550  51B0               	movf	init_queue@qptr& (0+255),w,b
  2618  001552  26D9               	addwf	fsr2l,f,c
  2619  001554  0100               	movlb	0	; () banked
  2620  001556  51B1               	movf	(init_queue@qptr+1)& (0+255),w,b
  2621  001558  22DA               	addwfc	fsr2h,f,c
  2622  00155A  0E00               	movlw	0
  2623  00155C  6EDF               	movwf	indf2,c
  2624                           
  2625                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2626  00155E  0100               	movlb	0	; () banked
  2627  001560  EE20 F07D          	lfsr	2,125
  2628  001564  0100               	movlb	0	; () banked
  2629  001566  51B0               	movf	init_queue@qptr& (0+255),w,b
  2630  001568  26D9               	addwf	fsr2l,f,c
  2631  00156A  0100               	movlb	0	; () banked
  2632  00156C  51B1               	movf	(init_queue@qptr+1)& (0+255),w,b
  2633  00156E  22DA               	addwfc	fsr2h,f,c
  2634  001570  0E00               	movlw	0
  2635  001572  6EDF               	movwf	indf2,c
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2639  001574  0100               	movlb	0	; () banked
  2640  001576  6FB2               	movwf	??_init_queue& (0+255),b
  2641  001578  0E00               	movlw	0
  2642  00157A  0100               	movlb	0	; () banked
  2643  00157C  0100               	movlb	0	; () banked
  2644  00157E  6FB3               	movwf	init_queue@i& (0+255),b
  2645  001580  0100               	movlb	0	; () banked
  2646  001582  51B2               	movf	??_init_queue& (0+255),w,b
  2647                           
  2648                           ; BSR set to: 0
  2649  001584  0E03               	movlw	3
  2650  001586  0100               	movlb	0	; () banked
  2651  001588  0100               	movlb	0	; () banked
  2652  00158A  65B3               	cpfsgt	init_queue@i& (0+255),b
  2653  00158C  D001               	goto	l2637
  2654  00158E  0012               	return	
  2655  001590                     l2637:
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;messages.c: 20: qptr->queue[i].full = 0;
  2659  001590  0100               	movlb	0	; () banked
  2660  001592  0100               	movlb	0	; () banked
  2661  001594  51B3               	movf	init_queue@i& (0+255),w,b
  2662  001596  0D1F               	mullw	31
  2663  001598  50F3               	movf	prodl,w,c
  2664  00159A  0100               	movlb	0	; () banked
  2665  00159C  0100               	movlb	0	; () banked
  2666  00159E  25B0               	addwf	init_queue@qptr& (0+255),w,b
  2667  0015A0  6ED9               	movwf	fsr2l,c
  2668  0015A2  50F4               	movf	prodh,w,c
  2669  0015A4  0100               	movlb	0	; () banked
  2670  0015A6  0100               	movlb	0	; () banked
  2671  0015A8  21B1               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2672  0015AA  6EDA               	movwf	fsr2h,c
  2673  0015AC  0E00               	movlw	0
  2674  0015AE  6EDF               	movwf	indf2,c
  2675                           
  2676                           ; BSR set to: 0
  2677  0015B0  0100               	movlb	0	; () banked
  2678  0015B2  0100               	movlb	0	; () banked
  2679  0015B4  2BB3               	incf	init_queue@i& (0+255),f,b
  2680                           
  2681                           ; BSR set to: 0
  2682  0015B6  0E03               	movlw	3
  2683  0015B8  0100               	movlb	0	; () banked
  2684  0015BA  0100               	movlb	0	; () banked
  2685  0015BC  65B3               	cpfsgt	init_queue@i& (0+255),b
  2686  0015BE  D7E8               	goto	l2637
  2687  0015C0  0012               	return	
  2688  0015C2                     __end_of_init_queue:
  2689                           	opt stack 0
  2690                           tblptru	equ	0xFF8
  2691                           prodh	equ	0xFF4
  2692                           prodl	equ	0xFF3
  2693                           postinc0	equ	0xFEE
  2694                           wreg	equ	0xFE8
  2695                           indf1	equ	0xFE7
  2696                           fsr1h	equ	0xFE2
  2697                           fsr1l	equ	0xFE1
  2698                           indf2	equ	0xFDF
  2699                           postinc2	equ	0xFDE
  2700                           postdec2	equ	0xFDD
  2701                           fsr2h	equ	0xFDA
  2702                           fsr2l	equ	0xFD9
  2703                           status	equ	0xFD8
  2704                           
  2705 ;; *************** function _init_i2c *****************
  2706 ;; Defined at:
  2707 ;;		line 276 in file "../src/my_i2c.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  ic              2   48[BANK0 ] PTR struct __i2c_comm
  2710 ;;		 -> main@ic(64), 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;		None
  2713 ;; Return value:  Size  Location     Type
  2714 ;;		None               void
  2715 ;; Registers used:
  2716 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2722 ;;      Params:         0       2       0       0       0
  2723 ;;      Locals:         0       0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0
  2725 ;;      Totals:         0       2       0       0       0
  2726 ;;Total ram usage:        2 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:   10
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		_main
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text12
  2737  0016A2                     __ptext12:
  2738                           	opt stack 0
  2739  0016A2                     _init_i2c:
  2740                           	opt stack 20
  2741                           
  2742                           ;my_i2c.c: 277: ic_ptr = ic;
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;incstack = 0
  2746  0016A2  0100               	movlb	0	; () banked
  2747  0016A4  0100               	movlb	0	; () banked
  2748  0016A6  C0B1  F0CE         	movff	init_i2c@ic+1,_ic_ptr+1
  2749  0016AA  0100               	movlb	0	; () banked
  2750  0016AC  0100               	movlb	0	; () banked
  2751  0016AE  C0B0  F0CD         	movff	init_i2c@ic,_ic_ptr
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;my_i2c.c: 278: ic_ptr->buflen = 0;
  2755  0016B2  0100               	movlb	0	; () banked
  2756  0016B4  EE20 F01C          	lfsr	2,28
  2757  0016B8  0100               	movlb	0	; () banked
  2758  0016BA  51CD               	movf	_ic_ptr& (0+255),w,b
  2759  0016BC  26D9               	addwf	fsr2l,f,c
  2760  0016BE  0100               	movlb	0	; () banked
  2761  0016C0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2762  0016C2  22DA               	addwfc	fsr2h,f,c
  2763  0016C4  0E00               	movlw	0
  2764  0016C6  6EDF               	movwf	indf2,c
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;my_i2c.c: 279: ic_ptr->event_count = 0;
  2768  0016C8  0100               	movlb	0	; () banked
  2769  0016CA  EE20 F01D          	lfsr	2,29
  2770  0016CE  0100               	movlb	0	; () banked
  2771  0016D0  51CD               	movf	_ic_ptr& (0+255),w,b
  2772  0016D2  26D9               	addwf	fsr2l,f,c
  2773  0016D4  0100               	movlb	0	; () banked
  2774  0016D6  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2775  0016D8  22DA               	addwfc	fsr2h,f,c
  2776  0016DA  0E00               	movlw	0
  2777  0016DC  6EDF               	movwf	indf2,c
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;my_i2c.c: 280: ic_ptr->status = 0x5;
  2781  0016DE  0100               	movlb	0	; () banked
  2782  0016E0  EE20 F01E          	lfsr	2,30
  2783  0016E4  0100               	movlb	0	; () banked
  2784  0016E6  51CD               	movf	_ic_ptr& (0+255),w,b
  2785  0016E8  26D9               	addwf	fsr2l,f,c
  2786  0016EA  0100               	movlb	0	; () banked
  2787  0016EC  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2788  0016EE  22DA               	addwfc	fsr2h,f,c
  2789  0016F0  0E05               	movlw	5
  2790  0016F2  6EDF               	movwf	indf2,c
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;my_i2c.c: 281: ic_ptr->error_count = 0;
  2794  0016F4  0100               	movlb	0	; () banked
  2795  0016F6  EE20 F020          	lfsr	2,32
  2796  0016FA  0100               	movlb	0	; () banked
  2797  0016FC  51CD               	movf	_ic_ptr& (0+255),w,b
  2798  0016FE  26D9               	addwf	fsr2l,f,c
  2799  001700  0100               	movlb	0	; () banked
  2800  001702  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  2801  001704  22DA               	addwfc	fsr2h,f,c
  2802  001706  0E00               	movlw	0
  2803  001708  6EDF               	movwf	indf2,c
  2804                           
  2805                           ; BSR set to: 0
  2806  00170A  0012               	return	
  2807  00170C                     __end_of_init_i2c:
  2808                           	opt stack 0
  2809                           tblptru	equ	0xFF8
  2810                           prodh	equ	0xFF4
  2811                           prodl	equ	0xFF3
  2812                           postinc0	equ	0xFEE
  2813                           wreg	equ	0xFE8
  2814                           indf1	equ	0xFE7
  2815                           fsr1h	equ	0xFE2
  2816                           fsr1l	equ	0xFE1
  2817                           indf2	equ	0xFDF
  2818                           postinc2	equ	0xFDE
  2819                           postdec2	equ	0xFDD
  2820                           fsr2h	equ	0xFDA
  2821                           fsr2l	equ	0xFD9
  2822                           status	equ	0xFD8
  2823                           
  2824 ;; *************** function _i2c_configure_slave *****************
  2825 ;; Defined at:
  2826 ;;		line 287 in file "../src/my_i2c.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  addr            1    wreg     unsigned char 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  addr            1   48[BANK0 ] unsigned char 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;		None               void
  2833 ;; Registers used:
  2834 ;;		wreg, status,2, status,0
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2840 ;;      Params:         0       0       0       0       0
  2841 ;;      Locals:         0       1       0       0       0
  2842 ;;      Temps:          0       0       0       0       0
  2843 ;;      Totals:         0       1       0       0       0
  2844 ;;Total ram usage:        1 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; Hardware stack levels required when called:   10
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_main
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text13
  2855  001B00                     __ptext13:
  2856                           	opt stack 0
  2857  001B00                     _i2c_configure_slave:
  2858                           	opt stack 20
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;incstack = 0
  2862                           ;i2c_configure_slave@addr stored from wreg
  2863  001B00  CFE8 F0B0          	movff	wreg,i2c_configure_slave@addr
  2864                           
  2865                           ;my_i2c.c: 299: TRISCbits.TRISC3 = 1;
  2866  001B04  8694               	bsf	3988,3,c	;volatile
  2867                           
  2868                           ;my_i2c.c: 300: TRISCbits.TRISC4 = 1;
  2869  001B06  8894               	bsf	3988,4,c	;volatile
  2870                           
  2871                           ;my_i2c.c: 305: SSPADD = addr;
  2872  001B08  C0B0  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2873                           
  2874                           ;my_i2c.c: 307: SSPSTAT = 0x0;
  2875  001B0C  0E00               	movlw	0
  2876  001B0E  6EC7               	movwf	4039,c	;volatile
  2877                           
  2878                           ;my_i2c.c: 308: SSPCON1 = 0x0;
  2879  001B10  0E00               	movlw	0
  2880  001B12  6EC6               	movwf	4038,c	;volatile
  2881                           
  2882                           ;my_i2c.c: 309: SSPCON2 = 0x0;
  2883  001B14  0E00               	movlw	0
  2884  001B16  6EC5               	movwf	4037,c	;volatile
  2885                           
  2886                           ;my_i2c.c: 310: SSPCON1 |= 0x0E;
  2887  001B18  0E0E               	movlw	14
  2888  001B1A  12C6               	iorwf	4038,f,c	;volatile
  2889                           
  2890                           ;my_i2c.c: 311: SSPSTAT |= 0b10000000;
  2891  001B1C  8EC7               	bsf	4039,7,c	;volatile
  2892                           
  2893                           ;my_i2c.c: 314: TRISCbits.TRISC3 = 1;
  2894  001B1E  8694               	bsf	3988,3,c	;volatile
  2895                           
  2896                           ;my_i2c.c: 315: TRISCbits.TRISC4 = 1;
  2897  001B20  8894               	bsf	3988,4,c	;volatile
  2898                           
  2899                           ;my_i2c.c: 336: SSPCON2bits.SEN = 1;
  2900  001B22  80C5               	bsf	4037,0,c	;volatile
  2901                           
  2902                           ;my_i2c.c: 337: SSPCON1 |= 0b00100000;
  2903  001B24  8AC6               	bsf	4038,5,c	;volatile
  2904  001B26  0012               	return	
  2905  001B28                     __end_of_i2c_configure_slave:
  2906                           	opt stack 0
  2907                           tblptru	equ	0xFF8
  2908                           prodh	equ	0xFF4
  2909                           prodl	equ	0xFF3
  2910                           postinc0	equ	0xFEE
  2911                           wreg	equ	0xFE8
  2912                           indf1	equ	0xFE7
  2913                           fsr1h	equ	0xFE2
  2914                           fsr1l	equ	0xFE1
  2915                           indf2	equ	0xFDF
  2916                           postinc2	equ	0xFDE
  2917                           postdec2	equ	0xFDD
  2918                           fsr2h	equ	0xFDA
  2919                           fsr2l	equ	0xFD9
  2920                           status	equ	0xFD8
  2921                           
  2922 ;; *************** function _enable_interrupts *****************
  2923 ;; Defined at:
  2924 ;;		line 16 in file "../src/interrupts.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;		None
  2929 ;; Return value:  Size  Location     Type
  2930 ;;		None               void
  2931 ;; Registers used:
  2932 ;;		None
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2938 ;;      Params:         0       0       0       0       0
  2939 ;;      Locals:         0       0       0       0       0
  2940 ;;      Temps:          0       0       0       0       0
  2941 ;;      Totals:         0       0       0       0       0
  2942 ;;Total ram usage:        0 bytes
  2943 ;; Hardware stack levels used:    1
  2944 ;; Hardware stack levels required when called:   10
  2945 ;; This function calls:
  2946 ;;		Nothing
  2947 ;; This function is called by:
  2948 ;;		_main
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text14
  2953  001C70                     __ptext14:
  2954                           	opt stack 0
  2955  001C70                     _enable_interrupts:
  2956                           	opt stack 20
  2957                           
  2958                           ;interrupts.c: 19: RCONbits.IPEN = 1;
  2959                           
  2960                           ;incstack = 0
  2961  001C70  8ED0               	bsf	4048,7,c	;volatile
  2962                           
  2963                           ;interrupts.c: 20: INTCONbits.GIEH = 1;
  2964  001C72  8EF2               	bsf	intcon,7,c	;volatile
  2965                           
  2966                           ;interrupts.c: 21: INTCONbits.GIEL = 1;
  2967  001C74  8CF2               	bsf	intcon,6,c	;volatile
  2968  001C76  0012               	return	
  2969  001C78                     __end_of_enable_interrupts:
  2970                           	opt stack 0
  2971                           tblptru	equ	0xFF8
  2972                           prodh	equ	0xFF4
  2973                           prodl	equ	0xFF3
  2974                           intcon	equ	0xFF2
  2975                           postinc0	equ	0xFEE
  2976                           wreg	equ	0xFE8
  2977                           indf1	equ	0xFE7
  2978                           fsr1h	equ	0xFE2
  2979                           fsr1l	equ	0xFE1
  2980                           indf2	equ	0xFDF
  2981                           postinc2	equ	0xFDE
  2982                           postdec2	equ	0xFDD
  2983                           fsr2h	equ	0xFDA
  2984                           fsr2l	equ	0xFD9
  2985                           status	equ	0xFD8
  2986                           
  2987 ;; *************** function _block_on_To_msgqueues *****************
  2988 ;; Defined at:
  2989 ;;		line 258 in file "../src/messages.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;		None               void
  2996 ;; Registers used:
  2997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3003 ;;      Params:         0       0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0
  3005 ;;      Temps:          0       1       0       0       0
  3006 ;;      Totals:         0       1       0       0       0
  3007 ;;Total ram usage:        1 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; Hardware stack levels required when called:   13
  3010 ;; This function calls:
  3011 ;;		_Delay1KTCYx
  3012 ;;		_check_msg
  3013 ;;		_in_main
  3014 ;; This function is called by:
  3015 ;;		_main
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text15
  3020  0014CA                     __ptext15:
  3021                           	opt stack 0
  3022  0014CA                     _block_on_To_msgqueues:
  3023                           	opt stack 17
  3024                           
  3025                           ;messages.c: 259: if (!in_main()) {
  3026                           
  3027                           ;incstack = 0
  3028  0014CA  EC27  F00C         	call	_in_main	;wreg free
  3029  0014CE  0100               	movlb	0	; () banked
  3030  0014D0  0100               	movlb	0	; () banked
  3031  0014D2  51B5               	movf	(?_in_main+1)& (0+255),w,b
  3032  0014D4  0100               	movlb	0	; () banked
  3033  0014D6  11B4               	iorwf	?_in_main& (0+255),w,b
  3034  0014D8  B4D8               	btfsc	status,2,c
  3035  0014DA  0012               	return	
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;messages.c: 261: }
  3039                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3040                           
  3041                           ; BSR set to: 0
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;messages.c: 260: return;
  3045  0014DC  0100               	movlb	0	; () banked
  3046  0014DE  6FB6               	movwf	??_block_on_To_msgqueues& (0+255),b
  3047  0014E0  0E01               	movlw	1
  3048  0014E2  6E34               	movwf	_MQ_Main_Willing_to_block,c
  3049  0014E4  0100               	movlb	0	; () banked
  3050  0014E6  51B6               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3051  0014E8                     l2571:
  3052                           
  3053                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3054  0014E8  0102               	movlb	2	; () banked
  3055  0014EA  0E02               	movlw	high _ToMainHigh_MQ
  3056  0014EC  0100               	movlb	0	; () banked
  3057  0014EE  0100               	movlb	0	; () banked
  3058  0014F0  6FB1               	movwf	(check_msg@qptr+1)& (0+255),b
  3059  0014F2  0102               	movlb	2	; () banked
  3060  0014F4  0E7E               	movlw	low _ToMainHigh_MQ
  3061  0014F6  0100               	movlb	0	; () banked
  3062  0014F8  0100               	movlb	0	; () banked
  3063  0014FA  6FB0               	movwf	check_msg@qptr& (0+255),b
  3064  0014FC  EC1E  F00D         	call	_check_msg	;wreg free
  3065  001500  0900               	iorlw	0
  3066  001502  B4D8               	btfsc	status,2,c
  3067  001504  D007               	goto	l2577
  3068                           
  3069                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3070  001506  0100               	movlb	0	; () banked
  3071  001508  6FB6               	movwf	??_block_on_To_msgqueues& (0+255),b
  3072  00150A  0E00               	movlw	0
  3073  00150C  6E34               	movwf	_MQ_Main_Willing_to_block,c
  3074  00150E  0100               	movlb	0	; () banked
  3075  001510  51B6               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3076  001512  0012               	return	
  3077  001514                     l2577:
  3078                           
  3079                           ;messages.c: 271: }
  3080                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3081  001514  0101               	movlb	1	; () banked
  3082  001516  0E01               	movlw	high _ToMainLow_MQ
  3083  001518  0100               	movlb	0	; () banked
  3084  00151A  0100               	movlb	0	; () banked
  3085  00151C  6FB1               	movwf	(check_msg@qptr+1)& (0+255),b
  3086  00151E  0101               	movlb	1	; () banked
  3087  001520  0E00               	movlw	low _ToMainLow_MQ
  3088  001522  0100               	movlb	0	; () banked
  3089  001524  0100               	movlb	0	; () banked
  3090  001526  6FB0               	movwf	check_msg@qptr& (0+255),b
  3091  001528  EC1E  F00D         	call	_check_msg	;wreg free
  3092  00152C  0900               	iorlw	0
  3093  00152E  B4D8               	btfsc	status,2,c
  3094  001530  D007               	goto	l2583
  3095                           
  3096                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3097  001532  0100               	movlb	0	; () banked
  3098  001534  6FB6               	movwf	??_block_on_To_msgqueues& (0+255),b
  3099  001536  0E00               	movlw	0
  3100  001538  6E34               	movwf	_MQ_Main_Willing_to_block,c
  3101  00153A  0100               	movlb	0	; () banked
  3102  00153C  51B6               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3103  00153E  0012               	return	
  3104  001540                     l2583:
  3105                           
  3106                           ;messages.c: 278: }
  3107                           ;messages.c: 279: Delay1KTCYx(10);
  3108  001540  0E0A               	movlw	10
  3109  001542  ECE7  F00D         	call	_Delay1KTCYx
  3110  001546  D7D0               	goto	l2571
  3111  001548                     __end_of_block_on_To_msgqueues:
  3112                           	opt stack 0
  3113                           tblptru	equ	0xFF8
  3114                           prodh	equ	0xFF4
  3115                           prodl	equ	0xFF3
  3116                           intcon	equ	0xFF2
  3117                           postinc0	equ	0xFEE
  3118                           wreg	equ	0xFE8
  3119                           indf1	equ	0xFE7
  3120                           fsr1h	equ	0xFE2
  3121                           fsr1l	equ	0xFE1
  3122                           indf2	equ	0xFDF
  3123                           postinc2	equ	0xFDE
  3124                           postdec2	equ	0xFDD
  3125                           fsr2h	equ	0xFDA
  3126                           fsr2l	equ	0xFD9
  3127                           status	equ	0xFD8
  3128                           
  3129 ;; *************** function _in_main *****************
  3130 ;; Defined at:
  3131 ;;		line 42 in file "../src/interrupts.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;		None
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  2   52[BANK0 ] int 
  3138 ;; Registers used:
  3139 ;;		wreg, status,2, status,0, cstack
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3145 ;;      Params:         0       2       0       0       0
  3146 ;;      Locals:         0       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0
  3148 ;;      Totals:         0       2       0       0       0
  3149 ;;Total ram usage:        2 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:   12
  3152 ;; This function calls:
  3153 ;;		_in_high_int
  3154 ;;		_in_low_int
  3155 ;; This function is called by:
  3156 ;;		_block_on_To_msgqueues
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text16
  3161  00184E                     __ptext16:
  3162                           	opt stack 0
  3163  00184E                     _in_main:
  3164                           	opt stack 17
  3165                           
  3166                           ;interrupts.c: 43: if ((!in_low_int()) && (!in_high_int())) {
  3167                           
  3168                           ;incstack = 0
  3169  00184E  EC04  F00C         	call	_in_low_int	;wreg free
  3170  001852  0100               	movlb	0	; () banked
  3171  001854  0100               	movlb	0	; () banked
  3172  001856  51B3               	movf	(?_in_low_int+1)& (0+255),w,b
  3173  001858  0100               	movlb	0	; () banked
  3174  00185A  11B2               	iorwf	?_in_low_int& (0+255),w,b
  3175  00185C  A4D8               	btfss	status,2,c
  3176  00185E  D011               	goto	l2143
  3177                           
  3178                           ; BSR set to: 0
  3179  001860  EC04  F00E         	call	_in_high_int	;wreg free
  3180  001864  0100               	movlb	0	; () banked
  3181  001866  0100               	movlb	0	; () banked
  3182  001868  51B1               	movf	(?_in_high_int+1)& (0+255),w,b
  3183  00186A  0100               	movlb	0	; () banked
  3184  00186C  11B0               	iorwf	?_in_high_int& (0+255),w,b
  3185  00186E  A4D8               	btfss	status,2,c
  3186  001870  D008               	goto	l2143
  3187                           
  3188                           ; BSR set to: 0
  3189                           ;interrupts.c: 44: return (1);
  3190  001872  0E00               	movlw	0
  3191  001874  0100               	movlb	0	; () banked
  3192  001876  0100               	movlb	0	; () banked
  3193  001878  6FB5               	movwf	(?_in_main+1)& (0+255),b
  3194  00187A  0E01               	movlw	1
  3195  00187C  0100               	movlb	0	; () banked
  3196  00187E  6FB4               	movwf	?_in_main& (0+255),b
  3197  001880  0012               	return	
  3198  001882                     l2143:
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;interrupts.c: 46: return (0);
  3202  001882  0E00               	movlw	0
  3203  001884  0100               	movlb	0	; () banked
  3204  001886  0100               	movlb	0	; () banked
  3205  001888  6FB5               	movwf	(?_in_main+1)& (0+255),b
  3206  00188A  0E00               	movlw	0
  3207  00188C  0100               	movlb	0	; () banked
  3208  00188E  6FB4               	movwf	?_in_main& (0+255),b
  3209  001890  0012               	return	
  3210  001892                     __end_of_in_main:
  3211                           	opt stack 0
  3212                           tblptru	equ	0xFF8
  3213                           prodh	equ	0xFF4
  3214                           prodl	equ	0xFF3
  3215                           intcon	equ	0xFF2
  3216                           postinc0	equ	0xFEE
  3217                           wreg	equ	0xFE8
  3218                           indf1	equ	0xFE7
  3219                           fsr1h	equ	0xFE2
  3220                           fsr1l	equ	0xFE1
  3221                           indf2	equ	0xFDF
  3222                           postinc2	equ	0xFDE
  3223                           postdec2	equ	0xFDD
  3224                           fsr2h	equ	0xFDA
  3225                           fsr2l	equ	0xFD9
  3226                           status	equ	0xFD8
  3227                           
  3228 ;; *************** function _in_low_int *****************
  3229 ;; Defined at:
  3230 ;;		line 32 in file "../src/interrupts.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;		None
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;		None
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  2   50[BANK0 ] int 
  3237 ;; Registers used:
  3238 ;;		wreg, status,2, status,0, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3244 ;;      Params:         0       2       0       0       0
  3245 ;;      Locals:         0       0       0       0       0
  3246 ;;      Temps:          0       0       0       0       0
  3247 ;;      Totals:         0       2       0       0       0
  3248 ;;Total ram usage:        2 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; Hardware stack levels required when called:   11
  3251 ;; This function calls:
  3252 ;;		_in_high_int
  3253 ;; This function is called by:
  3254 ;;		_in_main
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text17
  3259  001808                     __ptext17:
  3260                           	opt stack 0
  3261  001808                     _in_low_int:
  3262                           	opt stack 17
  3263                           
  3264                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;incstack = 0
  3268  001808  ACF2               	btfss	intcon,6,c	;volatile
  3269  00180A  D008               	goto	l2121
  3270                           
  3271                           ;interrupts.c: 34: return (0);
  3272  00180C  0E00               	movlw	0
  3273  00180E  0100               	movlb	0	; () banked
  3274  001810  0100               	movlb	0	; () banked
  3275  001812  6FB3               	movwf	(?_in_low_int+1)& (0+255),b
  3276  001814  0E00               	movlw	0
  3277  001816  0100               	movlb	0	; () banked
  3278  001818  6FB2               	movwf	?_in_low_int& (0+255),b
  3279  00181A  0012               	return	
  3280  00181C                     l2121:
  3281  00181C  EC04  F00E         	call	_in_high_int	;wreg free
  3282  001820  0100               	movlb	0	; () banked
  3283  001822  0100               	movlb	0	; () banked
  3284  001824  51B1               	movf	(?_in_high_int+1)& (0+255),w,b
  3285  001826  0100               	movlb	0	; () banked
  3286  001828  11B0               	iorwf	?_in_high_int& (0+255),w,b
  3287  00182A  B4D8               	btfsc	status,2,c
  3288  00182C  D008               	goto	l2129
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;interrupts.c: 36: return (0);
  3292  00182E  0E00               	movlw	0
  3293  001830  0100               	movlb	0	; () banked
  3294  001832  0100               	movlb	0	; () banked
  3295  001834  6FB3               	movwf	(?_in_low_int+1)& (0+255),b
  3296  001836  0E00               	movlw	0
  3297  001838  0100               	movlb	0	; () banked
  3298  00183A  6FB2               	movwf	?_in_low_int& (0+255),b
  3299  00183C  0012               	return	
  3300  00183E                     l2129:
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;interrupts.c: 38: return (1);
  3304  00183E  0E00               	movlw	0
  3305  001840  0100               	movlb	0	; () banked
  3306  001842  0100               	movlb	0	; () banked
  3307  001844  6FB3               	movwf	(?_in_low_int+1)& (0+255),b
  3308  001846  0E01               	movlw	1
  3309  001848  0100               	movlb	0	; () banked
  3310  00184A  6FB2               	movwf	?_in_low_int& (0+255),b
  3311  00184C  0012               	return	
  3312  00184E                     __end_of_in_low_int:
  3313                           	opt stack 0
  3314                           tblptru	equ	0xFF8
  3315                           prodh	equ	0xFF4
  3316                           prodl	equ	0xFF3
  3317                           intcon	equ	0xFF2
  3318                           postinc0	equ	0xFEE
  3319                           wreg	equ	0xFE8
  3320                           indf1	equ	0xFE7
  3321                           fsr1h	equ	0xFE2
  3322                           fsr1l	equ	0xFE1
  3323                           indf2	equ	0xFDF
  3324                           postinc2	equ	0xFDE
  3325                           postdec2	equ	0xFDD
  3326                           fsr2h	equ	0xFDA
  3327                           fsr2l	equ	0xFD9
  3328                           status	equ	0xFD8
  3329                           
  3330 ;; *************** function _in_high_int *****************
  3331 ;; Defined at:
  3332 ;;		line 24 in file "../src/interrupts.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;		None
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;		None
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  2   48[BANK0 ] int 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3346 ;;      Params:         0       2       0       0       0
  3347 ;;      Locals:         0       0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0
  3349 ;;      Totals:         0       2       0       0       0
  3350 ;;Total ram usage:        2 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:   10
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_in_low_int
  3357 ;;		_in_main
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text18
  3362  001C08                     __ptext18:
  3363                           	opt stack 0
  3364  001C08                     _in_high_int:
  3365                           	opt stack 17
  3366                           
  3367                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;incstack = 0
  3371  001C08  0E00               	movlw	0
  3372  001C0A  AEF2               	btfss	intcon,7,c	;volatile
  3373  001C0C  0E01               	movlw	1
  3374  001C0E  0100               	movlb	0	; () banked
  3375  001C10  0100               	movlb	0	; () banked
  3376  001C12  6FB0               	movwf	?_in_high_int& (0+255),b
  3377  001C14  0100               	movlb	0	; () banked
  3378  001C16  6BB1               	clrf	(?_in_high_int+1)& (0+255),b
  3379  001C18  0012               	return	
  3380  001C1A                     __end_of_in_high_int:
  3381                           	opt stack 0
  3382                           tblptru	equ	0xFF8
  3383                           prodh	equ	0xFF4
  3384                           prodl	equ	0xFF3
  3385                           intcon	equ	0xFF2
  3386                           postinc0	equ	0xFEE
  3387                           wreg	equ	0xFE8
  3388                           indf1	equ	0xFE7
  3389                           fsr1h	equ	0xFE2
  3390                           fsr1l	equ	0xFE1
  3391                           indf2	equ	0xFDF
  3392                           postinc2	equ	0xFDE
  3393                           postdec2	equ	0xFDD
  3394                           fsr2h	equ	0xFDA
  3395                           fsr2l	equ	0xFD9
  3396                           status	equ	0xFD8
  3397                           
  3398 ;; *************** function _check_msg *****************
  3399 ;; Defined at:
  3400 ;;		line 222 in file "../src/messages.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  qptr            2   48[BANK0 ] PTR struct __msg_queue
  3403 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;		None
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1    wreg      unsigned char 
  3408 ;; Registers used:
  3409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3415 ;;      Params:         0       2       0       0       0
  3416 ;;      Locals:         0       0       0       0       0
  3417 ;;      Temps:          0       1       0       0       0
  3418 ;;      Totals:         0       3       0       0       0
  3419 ;;Total ram usage:        3 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:   10
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_block_on_To_msgqueues
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text19
  3430  001A3C                     __ptext19:
  3431                           	opt stack 0
  3432  001A3C                     _check_msg:
  3433                           	opt stack 19
  3434                           
  3435                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;incstack = 0
  3439  001A3C  0100               	movlb	0	; () banked
  3440  001A3E  EE20 F07D          	lfsr	2,125
  3441  001A42  0100               	movlb	0	; () banked
  3442  001A44  51B0               	movf	check_msg@qptr& (0+255),w,b
  3443  001A46  26D9               	addwf	fsr2l,f,c
  3444  001A48  0100               	movlb	0	; () banked
  3445  001A4A  51B1               	movf	(check_msg@qptr+1)& (0+255),w,b
  3446  001A4C  22DA               	addwfc	fsr2h,f,c
  3447  001A4E  50DF               	movf	indf2,w,c
  3448  001A50  0100               	movlb	0	; () banked
  3449  001A52  6FB2               	movwf	??_check_msg& (0+255),b
  3450  001A54  0100               	movlb	0	; () banked
  3451  001A56  51B2               	movf	??_check_msg& (0+255),w,b
  3452  001A58  0D1F               	mullw	31
  3453  001A5A  50F3               	movf	prodl,w,c
  3454  001A5C  0100               	movlb	0	; () banked
  3455  001A5E  0100               	movlb	0	; () banked
  3456  001A60  25B0               	addwf	check_msg@qptr& (0+255),w,b
  3457  001A62  6ED9               	movwf	fsr2l,c
  3458  001A64  50F4               	movf	prodh,w,c
  3459  001A66  0100               	movlb	0	; () banked
  3460  001A68  0100               	movlb	0	; () banked
  3461  001A6A  21B1               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3462  001A6C  6EDA               	movwf	fsr2h,c
  3463  001A6E  50DF               	movf	indf2,w,c
  3464  001A70  0012               	return	
  3465  001A72                     __end_of_check_msg:
  3466                           	opt stack 0
  3467                           tblptru	equ	0xFF8
  3468                           prodh	equ	0xFF4
  3469                           prodl	equ	0xFF3
  3470                           intcon	equ	0xFF2
  3471                           postinc0	equ	0xFEE
  3472                           wreg	equ	0xFE8
  3473                           indf1	equ	0xFE7
  3474                           fsr1h	equ	0xFE2
  3475                           fsr1l	equ	0xFE1
  3476                           indf2	equ	0xFDF
  3477                           postinc2	equ	0xFDE
  3478                           postdec2	equ	0xFDD
  3479                           fsr2h	equ	0xFDA
  3480                           fsr2l	equ	0xFD9
  3481                           status	equ	0xFD8
  3482                           
  3483 ;; *************** function _Delay1KTCYx *****************
  3484 ;; Defined at:
  3485 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  unit            1    wreg     unsigned char 
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;  unit            1   48[BANK0 ] unsigned char 
  3490 ;; Return value:  Size  Location     Type
  3491 ;;		None               void
  3492 ;; Registers used:
  3493 ;;		wreg
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3499 ;;      Params:         0       0       0       0       0
  3500 ;;      Locals:         0       1       0       0       0
  3501 ;;      Temps:          0       0       0       0       0
  3502 ;;      Totals:         0       1       0       0       0
  3503 ;;Total ram usage:        1 bytes
  3504 ;; Hardware stack levels used:    1
  3505 ;; Hardware stack levels required when called:   10
  3506 ;; This function calls:
  3507 ;;		Nothing
  3508 ;; This function is called by:
  3509 ;;		_block_on_To_msgqueues
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text20
  3514  001BCE                     __ptext20:
  3515                           	opt stack 0
  3516  001BCE                     _Delay1KTCYx:
  3517                           	opt stack 19
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;incstack = 0
  3521                           ;Delay1KTCYx@unit stored from wreg
  3522  001BCE  CFE8 F0B0          	movff	wreg,Delay1KTCYx@unit
  3523  001BD2                     l741:
  3524  001BD2  0EFA               	movlw	250
  3525  001BD4                     u2397:
  3526  001BD4  F000               	nop	
  3527  001BD6  2EE8               	decfsz	wreg,f,c
  3528  001BD8  D7FD               	goto	u2397
  3529  001BDA  0100               	movlb	0	; () banked
  3530  001BDC  0100               	movlb	0	; () banked
  3531  001BDE  2FB0               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3532  001BE0  D7F8               	goto	l741
  3533  001BE2  0012               	return	
  3534  001BE4                     __end_of_Delay1KTCYx:
  3535                           	opt stack 0
  3536                           tblptru	equ	0xFF8
  3537                           prodh	equ	0xFF4
  3538                           prodl	equ	0xFF3
  3539                           intcon	equ	0xFF2
  3540                           postinc0	equ	0xFEE
  3541                           wreg	equ	0xFE8
  3542                           indf1	equ	0xFE7
  3543                           fsr1h	equ	0xFE2
  3544                           fsr1l	equ	0xFE1
  3545                           indf2	equ	0xFDF
  3546                           postinc2	equ	0xFDE
  3547                           postdec2	equ	0xFDD
  3548                           fsr2h	equ	0xFDA
  3549                           fsr2l	equ	0xFD9
  3550                           status	equ	0xFD8
  3551                           
  3552 ;; *************** function _ToMainLow_recvmsg *****************
  3553 ;; Defined at:
  3554 ;;		line 112 in file "../src/messages.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  maxlength       1    wreg     unsigned char 
  3557 ;;  msgtype         2   72[BANK0 ] PTR unsigned char 
  3558 ;;		 -> main@msgtype(1), 
  3559 ;;  data            2   74[BANK0 ] PTR void 
  3560 ;;		 -> main@msgbuffer(29), 
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;  maxlength       1   76[BANK0 ] unsigned char 
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      char 
  3565 ;; Registers used:
  3566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3572 ;;      Params:         0       4       0       0       0
  3573 ;;      Locals:         0       1       0       0       0
  3574 ;;      Temps:          0       0       0       0       0
  3575 ;;      Totals:         0       5       0       0       0
  3576 ;;Total ram usage:        5 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:   12
  3579 ;; This function calls:
  3580 ;;		_recv_msg
  3581 ;; This function is called by:
  3582 ;;		_main
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text21
  3587  001892                     __ptext21:
  3588                           	opt stack 0
  3589  001892                     _ToMainLow_recvmsg:
  3590                           	opt stack 18
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;incstack = 0
  3594                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3595  001892  CFE8 F0CC          	movff	wreg,ToMainLow_recvmsg@maxlength
  3596                           
  3597                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3598  001896  0101               	movlb	1	; () banked
  3599  001898  0E01               	movlw	high _ToMainLow_MQ
  3600  00189A  0100               	movlb	0	; () banked
  3601  00189C  0100               	movlb	0	; () banked
  3602  00189E  6FBB               	movwf	(recv_msg@qptr+1)& (0+255),b
  3603  0018A0  0101               	movlb	1	; () banked
  3604  0018A2  0E00               	movlw	low _ToMainLow_MQ
  3605  0018A4  0100               	movlb	0	; () banked
  3606  0018A6  0100               	movlb	0	; () banked
  3607  0018A8  6FBA               	movwf	recv_msg@qptr& (0+255),b
  3608  0018AA  C0CC  F0BC         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3609  0018AE  0100               	movlb	0	; () banked
  3610  0018B0  0100               	movlb	0	; () banked
  3611  0018B2  C0C9  F0BE         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3612  0018B6  0100               	movlb	0	; () banked
  3613  0018B8  0100               	movlb	0	; () banked
  3614  0018BA  C0C8  F0BD         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3615  0018BE  0100               	movlb	0	; () banked
  3616  0018C0  0100               	movlb	0	; () banked
  3617  0018C2  C0CB  F0C0         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3618  0018C6  0100               	movlb	0	; () banked
  3619  0018C8  0100               	movlb	0	; () banked
  3620  0018CA  C0CA  F0BF         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3621  0018CE  EC30  F005         	call	_recv_msg	;wreg free
  3622  0018D2  0012               	return	
  3623  0018D4                     __end_of_ToMainLow_recvmsg:
  3624                           	opt stack 0
  3625                           tblptru	equ	0xFF8
  3626                           prodh	equ	0xFF4
  3627                           prodl	equ	0xFF3
  3628                           intcon	equ	0xFF2
  3629                           postinc0	equ	0xFEE
  3630                           wreg	equ	0xFE8
  3631                           indf1	equ	0xFE7
  3632                           fsr1h	equ	0xFE2
  3633                           fsr1l	equ	0xFE1
  3634                           indf2	equ	0xFDF
  3635                           postinc2	equ	0xFDE
  3636                           postdec2	equ	0xFDD
  3637                           fsr2h	equ	0xFDA
  3638                           fsr2l	equ	0xFD9
  3639                           status	equ	0xFD8
  3640                           
  3641 ;; *************** function _ToMainHigh_recvmsg *****************
  3642 ;; Defined at:
  3643 ;;		line 135 in file "../src/messages.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;  maxlength       1    wreg     unsigned char 
  3646 ;;  msgtype         2   72[BANK0 ] PTR unsigned char 
  3647 ;;		 -> main@msgtype(1), 
  3648 ;;  data            2   74[BANK0 ] PTR void 
  3649 ;;		 -> main@msgbuffer(29), 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  maxlength       1   76[BANK0 ] unsigned char 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      char 
  3654 ;; Registers used:
  3655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3661 ;;      Params:         0       4       0       0       0
  3662 ;;      Locals:         0       1       0       0       0
  3663 ;;      Temps:          0       0       0       0       0
  3664 ;;      Totals:         0       5       0       0       0
  3665 ;;Total ram usage:        5 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:   12
  3668 ;; This function calls:
  3669 ;;		_recv_msg
  3670 ;; This function is called by:
  3671 ;;		_main
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text22
  3676  0018D4                     __ptext22:
  3677                           	opt stack 0
  3678  0018D4                     _ToMainHigh_recvmsg:
  3679                           	opt stack 18
  3680                           
  3681                           ;incstack = 0
  3682                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3683  0018D4  CFE8 F0CC          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3684                           
  3685                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3686  0018D8  0102               	movlb	2	; () banked
  3687  0018DA  0E02               	movlw	high _ToMainHigh_MQ
  3688  0018DC  0100               	movlb	0	; () banked
  3689  0018DE  0100               	movlb	0	; () banked
  3690  0018E0  6FBB               	movwf	(recv_msg@qptr+1)& (0+255),b
  3691  0018E2  0102               	movlb	2	; () banked
  3692  0018E4  0E7E               	movlw	low _ToMainHigh_MQ
  3693  0018E6  0100               	movlb	0	; () banked
  3694  0018E8  0100               	movlb	0	; () banked
  3695  0018EA  6FBA               	movwf	recv_msg@qptr& (0+255),b
  3696  0018EC  C0CC  F0BC         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3697  0018F0  0100               	movlb	0	; () banked
  3698  0018F2  0100               	movlb	0	; () banked
  3699  0018F4  C0C9  F0BE         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3700  0018F8  0100               	movlb	0	; () banked
  3701  0018FA  0100               	movlb	0	; () banked
  3702  0018FC  C0C8  F0BD         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3703  001900  0100               	movlb	0	; () banked
  3704  001902  0100               	movlb	0	; () banked
  3705  001904  C0CB  F0C0         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3706  001908  0100               	movlb	0	; () banked
  3707  00190A  0100               	movlb	0	; () banked
  3708  00190C  C0CA  F0BF         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3709  001910  EC30  F005         	call	_recv_msg	;wreg free
  3710  001914  0012               	return	
  3711  001916                     __end_of_ToMainHigh_recvmsg:
  3712                           	opt stack 0
  3713                           tblptru	equ	0xFF8
  3714                           prodh	equ	0xFF4
  3715                           prodl	equ	0xFF3
  3716                           intcon	equ	0xFF2
  3717                           postinc0	equ	0xFEE
  3718                           wreg	equ	0xFE8
  3719                           indf1	equ	0xFE7
  3720                           fsr1h	equ	0xFE2
  3721                           fsr1l	equ	0xFE1
  3722                           indf2	equ	0xFDF
  3723                           postinc2	equ	0xFDE
  3724                           postdec2	equ	0xFDD
  3725                           fsr2h	equ	0xFDA
  3726                           fsr2l	equ	0xFD9
  3727                           status	equ	0xFD8
  3728                           
  3729 ;; *************** function _recv_msg *****************
  3730 ;; Defined at:
  3731 ;;		line 63 in file "../src/messages.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  qptr            2   58[BANK0 ] PTR struct __msg_queue
  3734 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  3735 ;;  maxlength       1   60[BANK0 ] unsigned char 
  3736 ;;  msgtype         2   61[BANK0 ] PTR unsigned char 
  3737 ;;		 -> main@msgtype(1), 
  3738 ;;  data            2   63[BANK0 ] PTR void 
  3739 ;;		 -> main@msgbuffer(29), 
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;  qmsg            2   70[BANK0 ] PTR struct __msg
  3742 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  3743 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  3744 ;;  tlength         2   68[BANK0 ] unsigned int 
  3745 ;;  slot            1   67[BANK0 ] unsigned char 
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1    wreg      char 
  3748 ;; Registers used:
  3749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3755 ;;      Params:         0       7       0       0       0
  3756 ;;      Locals:         0       5       0       0       0
  3757 ;;      Temps:          0       2       0       0       0
  3758 ;;      Totals:         0      14       0       0       0
  3759 ;;Total ram usage:       14 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; Hardware stack levels required when called:   11
  3762 ;; This function calls:
  3763 ;;		_memcpy
  3764 ;; This function is called by:
  3765 ;;		_ToMainLow_recvmsg
  3766 ;;		_ToMainHigh_recvmsg
  3767 ;;		_FromMainLow_recvmsg
  3768 ;;		_FromMainHigh_recvmsg
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           	psect	text23
  3773  000A60                     __ptext23:
  3774                           	opt stack 0
  3775  000A60                     _recv_msg:
  3776                           	opt stack 18
  3777                           
  3778                           ;messages.c: 64: unsigned char slot;
  3779                           ;messages.c: 68: msg *qmsg;
  3780                           ;messages.c: 69: size_t tlength;
  3781                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3782                           
  3783                           ;incstack = 0
  3784  000A60  0100               	movlb	0	; () banked
  3785  000A62  EE20 F07D          	lfsr	2,125
  3786  000A66  0100               	movlb	0	; () banked
  3787  000A68  51BA               	movf	recv_msg@qptr& (0+255),w,b
  3788  000A6A  26D9               	addwf	fsr2l,f,c
  3789  000A6C  0100               	movlb	0	; () banked
  3790  000A6E  51BB               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3791  000A70  22DA               	addwfc	fsr2h,f,c
  3792  000A72  50DF               	movf	indf2,w,c
  3793  000A74  0100               	movlb	0	; () banked
  3794  000A76  0100               	movlb	0	; () banked
  3795  000A78  6FC3               	movwf	recv_msg@slot& (0+255),b
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3799  000A7A  0100               	movlb	0	; () banked
  3800  000A7C  0100               	movlb	0	; () banked
  3801  000A7E  51C3               	movf	recv_msg@slot& (0+255),w,b
  3802  000A80  0D1F               	mullw	31
  3803  000A82  50F3               	movf	prodl,w,c
  3804  000A84  0100               	movlb	0	; () banked
  3805  000A86  0100               	movlb	0	; () banked
  3806  000A88  25BA               	addwf	recv_msg@qptr& (0+255),w,b
  3807  000A8A  0100               	movlb	0	; () banked
  3808  000A8C  0100               	movlb	0	; () banked
  3809  000A8E  6FC6               	movwf	recv_msg@qmsg& (0+255),b
  3810  000A90  50F4               	movf	prodh,w,c
  3811  000A92  0100               	movlb	0	; () banked
  3812  000A94  0100               	movlb	0	; () banked
  3813  000A96  21BB               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3814  000A98  0100               	movlb	0	; () banked
  3815  000A9A  6FC7               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;messages.c: 74: if (qmsg->full == 1) {
  3819  000A9C  0E01               	movlw	1
  3820  000A9E  C0C6  FFD9         	movff	recv_msg@qmsg,fsr2l
  3821  000AA2  C0C7  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3822  000AA6  62DF               	cpfseq	indf2,c
  3823  000AA8  D074               	goto	l2705
  3824                           
  3825                           ; BSR set to: 0
  3826                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3827  000AAA  0100               	movlb	0	; () banked
  3828  000AAC  EE20 F001          	lfsr	2,1
  3829  000AB0  0100               	movlb	0	; () banked
  3830  000AB2  51C6               	movf	recv_msg@qmsg& (0+255),w,b
  3831  000AB4  26D9               	addwf	fsr2l,f,c
  3832  000AB6  0100               	movlb	0	; () banked
  3833  000AB8  51C7               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3834  000ABA  22DA               	addwfc	fsr2h,f,c
  3835  000ABC  50DF               	movf	indf2,w,c
  3836  000ABE  0100               	movlb	0	; () banked
  3837  000AC0  0100               	movlb	0	; () banked
  3838  000AC2  5DBC               	subwf	recv_msg@maxlength& (0+255),w,b
  3839  000AC4  B0D8               	btfsc	status,0,c
  3840  000AC6  D002               	goto	l2689
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;messages.c: 77: return (-3);
  3844  000AC8  0EFD               	movlw	253
  3845  000ACA  0012               	return	
  3846  000ACC                     l2689:
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;messages.c: 78: }
  3850                           ;messages.c: 80: tlength = qmsg->length;
  3851  000ACC  0100               	movlb	0	; () banked
  3852  000ACE  EE20 F001          	lfsr	2,1
  3853  000AD2  0100               	movlb	0	; () banked
  3854  000AD4  51C6               	movf	recv_msg@qmsg& (0+255),w,b
  3855  000AD6  26D9               	addwf	fsr2l,f,c
  3856  000AD8  0100               	movlb	0	; () banked
  3857  000ADA  51C7               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3858  000ADC  22DA               	addwfc	fsr2h,f,c
  3859  000ADE  50DF               	movf	indf2,w,c
  3860  000AE0  0100               	movlb	0	; () banked
  3861  000AE2  6FC1               	movwf	??_recv_msg& (0+255),b
  3862  000AE4  0100               	movlb	0	; () banked
  3863  000AE6  51C1               	movf	??_recv_msg& (0+255),w,b
  3864  000AE8  0100               	movlb	0	; () banked
  3865  000AEA  0100               	movlb	0	; () banked
  3866  000AEC  6FC4               	movwf	recv_msg@tlength& (0+255),b
  3867  000AEE  0100               	movlb	0	; () banked
  3868  000AF0  6BC5               	clrf	(recv_msg@tlength+1)& (0+255),b
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3872  000AF2  0100               	movlb	0	; () banked
  3873  000AF4  0100               	movlb	0	; () banked
  3874  000AF6  C0C0  F0B1         	movff	recv_msg@data+1,memcpy@d1+1
  3875  000AFA  0100               	movlb	0	; () banked
  3876  000AFC  0100               	movlb	0	; () banked
  3877  000AFE  C0BF  F0B0         	movff	recv_msg@data,memcpy@d1
  3878  000B02  0E03               	movlw	3
  3879  000B04  0100               	movlb	0	; () banked
  3880  000B06  0100               	movlb	0	; () banked
  3881  000B08  25C6               	addwf	recv_msg@qmsg& (0+255),w,b
  3882  000B0A  0100               	movlb	0	; () banked
  3883  000B0C  6FC1               	movwf	??_recv_msg& (0+255),b
  3884  000B0E  0E00               	movlw	0
  3885  000B10  0100               	movlb	0	; () banked
  3886  000B12  0100               	movlb	0	; () banked
  3887  000B14  21C7               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3888  000B16  0100               	movlb	0	; () banked
  3889  000B18  6FC2               	movwf	(??_recv_msg+1)& (0+255),b
  3890  000B1A  C0C1  F0B2         	movff	??_recv_msg,memcpy@s1
  3891  000B1E  C0C2  F0B3         	movff	??_recv_msg+1,memcpy@s1+1
  3892  000B22  C0C4  F0B4         	movff	recv_msg@tlength,memcpy@n
  3893  000B26  C0C5  F0B5         	movff	recv_msg@tlength+1,memcpy@n+1
  3894  000B2A  EC86  F00B         	call	_memcpy	;wreg free
  3895                           
  3896                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3897  000B2E  0100               	movlb	0	; () banked
  3898  000B30  EE20 F07D          	lfsr	2,125
  3899  000B34  0100               	movlb	0	; () banked
  3900  000B36  51BA               	movf	recv_msg@qptr& (0+255),w,b
  3901  000B38  26D9               	addwf	fsr2l,f,c
  3902  000B3A  0100               	movlb	0	; () banked
  3903  000B3C  51BB               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3904  000B3E  22DA               	addwfc	fsr2h,f,c
  3905  000B40  0100               	movlb	0	; () banked
  3906  000B42  EE10 F07D          	lfsr	1,125
  3907  000B46  0100               	movlb	0	; () banked
  3908  000B48  51BA               	movf	recv_msg@qptr& (0+255),w,b
  3909  000B4A  26E1               	addwf	fsr1l,f,c
  3910  000B4C  0100               	movlb	0	; () banked
  3911  000B4E  51BB               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3912  000B50  22E2               	addwfc	fsr1h,f,c
  3913  000B52  50E7               	movf	indf1,w,c
  3914  000B54  0100               	movlb	0	; () banked
  3915  000B56  6FC1               	movwf	??_recv_msg& (0+255),b
  3916  000B58  0100               	movlb	0	; () banked
  3917  000B5A  29C1               	incf	??_recv_msg& (0+255),w,b
  3918  000B5C  0B03               	andlw	3
  3919  000B5E  6EDF               	movwf	indf2,c
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3923  000B60  0100               	movlb	0	; () banked
  3924  000B62  EE20 F002          	lfsr	2,2
  3925  000B66  0100               	movlb	0	; () banked
  3926  000B68  51C6               	movf	recv_msg@qmsg& (0+255),w,b
  3927  000B6A  26D9               	addwf	fsr2l,f,c
  3928  000B6C  0100               	movlb	0	; () banked
  3929  000B6E  51C7               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3930  000B70  22DA               	addwfc	fsr2h,f,c
  3931  000B72  C0BD  FFE1         	movff	recv_msg@msgtype,fsr1l
  3932  000B76  C0BE  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3933  000B7A  CFDF FFE7          	movff	indf2,indf1
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;messages.c: 91: qmsg->full = 0;
  3937  000B7E  C0C6  FFD9         	movff	recv_msg@qmsg,fsr2l
  3938  000B82  C0C7  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3939  000B86  0E00               	movlw	0
  3940  000B88  6EDF               	movwf	indf2,c
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;messages.c: 92: return (tlength);
  3944  000B8A  0100               	movlb	0	; () banked
  3945  000B8C  0100               	movlb	0	; () banked
  3946  000B8E  51C4               	movf	recv_msg@tlength& (0+255),w,b
  3947  000B90  0012               	return	
  3948  000B92                     l2705:
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;messages.c: 94: return (-4);
  3952  000B92  0EFC               	movlw	252
  3953  000B94  0012               	return	
  3954  000B96                     __end_of_recv_msg:
  3955                           	opt stack 0
  3956                           tblptru	equ	0xFF8
  3957                           prodh	equ	0xFF4
  3958                           prodl	equ	0xFF3
  3959                           intcon	equ	0xFF2
  3960                           postinc0	equ	0xFEE
  3961                           wreg	equ	0xFE8
  3962                           indf1	equ	0xFE7
  3963                           fsr1h	equ	0xFE2
  3964                           fsr1l	equ	0xFE1
  3965                           indf2	equ	0xFDF
  3966                           postinc2	equ	0xFDE
  3967                           postdec2	equ	0xFDD
  3968                           fsr2h	equ	0xFDA
  3969                           fsr2l	equ	0xFD9
  3970                           status	equ	0xFD8
  3971                           
  3972 ;; *************** function _memcpy *****************
  3973 ;; Defined at:
  3974 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  d1              2   48[BANK0 ] PTR void 
  3977 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  3978 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  3979 ;;		 -> main@msgbuffer(29), 
  3980 ;;  s1              2   50[BANK0 ] PTR const void 
  3981 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  3982 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  3983 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  3984 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(64), 
  3985 ;;		 -> main@uc(5), 
  3986 ;;  n               2   52[BANK0 ] unsigned int 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  s               2   56[BANK0 ] PTR const unsigned char 
  3989 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  3990 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  3991 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  3992 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(64), 
  3993 ;;		 -> main@uc(5), 
  3994 ;;  d               2   54[BANK0 ] PTR unsigned char 
  3995 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  3996 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  3997 ;;		 -> main@msgbuffer(29), 
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  2   48[BANK0 ] PTR void 
  4000 ;; Registers used:
  4001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4007 ;;      Params:         0       6       0       0       0
  4008 ;;      Locals:         0       4       0       0       0
  4009 ;;      Temps:          0       0       0       0       0
  4010 ;;      Totals:         0      10       0       0       0
  4011 ;;Total ram usage:       10 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; Hardware stack levels required when called:   10
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_send_msg
  4018 ;;		_recv_msg
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text24
  4023  00170C                     __ptext24:
  4024                           	opt stack 0
  4025  00170C                     _memcpy:
  4026                           	opt stack 17
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;incstack = 0
  4030  00170C  0100               	movlb	0	; () banked
  4031  00170E  0100               	movlb	0	; () banked
  4032  001710  C0B3  F0B9         	movff	memcpy@s1+1,memcpy@s+1
  4033  001714  0100               	movlb	0	; () banked
  4034  001716  0100               	movlb	0	; () banked
  4035  001718  C0B2  F0B8         	movff	memcpy@s1,memcpy@s
  4036  00171C  0100               	movlb	0	; () banked
  4037  00171E  0100               	movlb	0	; () banked
  4038  001720  C0B1  F0B7         	movff	memcpy@d1+1,memcpy@d+1
  4039  001724  0100               	movlb	0	; () banked
  4040  001726  0100               	movlb	0	; () banked
  4041  001728  C0B0  F0B6         	movff	memcpy@d1,memcpy@d
  4042  00172C  D012               	goto	l2675
  4043  00172E                     l2669:
  4044                           
  4045                           ; BSR set to: 0
  4046  00172E  C0B8  FFD9         	movff	memcpy@s,fsr2l
  4047  001732  C0B9  FFDA         	movff	memcpy@s+1,fsr2h
  4048  001736  C0B6  FFE1         	movff	memcpy@d,fsr1l
  4049  00173A  C0B7  FFE2         	movff	memcpy@d+1,fsr1h
  4050  00173E  CFDF FFE7          	movff	indf2,indf1
  4051                           
  4052                           ; BSR set to: 0
  4053  001742  0100               	movlb	0	; () banked
  4054  001744  0100               	movlb	0	; () banked
  4055  001746  4BB8               	infsnz	memcpy@s& (0+255),f,b
  4056  001748  2BB9               	incf	(memcpy@s+1)& (0+255),f,b
  4057                           
  4058                           ; BSR set to: 0
  4059  00174A  0100               	movlb	0	; () banked
  4060  00174C  0100               	movlb	0	; () banked
  4061  00174E  4BB6               	infsnz	memcpy@d& (0+255),f,b
  4062  001750  2BB7               	incf	(memcpy@d+1)& (0+255),f,b
  4063  001752                     l2675:
  4064                           
  4065                           ; BSR set to: 0
  4066  001752  0100               	movlb	0	; () banked
  4067  001754  0100               	movlb	0	; () banked
  4068  001756  07B4               	decf	memcpy@n& (0+255),f,b
  4069  001758  A0D8               	btfss	status,0,c
  4070  00175A  07B5               	decf	(memcpy@n+1)& (0+255),f,b
  4071  00175C  0100               	movlb	0	; () banked
  4072  00175E  29B4               	incf	memcpy@n& (0+255),w,b
  4073  001760  B4D8               	btfsc	status,2,c
  4074  001762  29B5               	incf	(memcpy@n+1)& (0+255),w,b
  4075  001764  B4D8               	btfsc	status,2,c
  4076                           
  4077                           ; BSR set to: 0
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;	Return value of _memcpy is never used
  4081  001766  0012               	return	
  4082  001768  D7E2               	goto	l2669
  4083  00176A                     __end_of_memcpy:
  4084                           	opt stack 0
  4085                           tblptru	equ	0xFF8
  4086                           prodh	equ	0xFF4
  4087                           prodl	equ	0xFF3
  4088                           intcon	equ	0xFF2
  4089                           postinc0	equ	0xFEE
  4090                           wreg	equ	0xFE8
  4091                           indf1	equ	0xFE7
  4092                           fsr1h	equ	0xFE2
  4093                           fsr1l	equ	0xFE1
  4094                           indf2	equ	0xFDF
  4095                           postinc2	equ	0xFDE
  4096                           postdec2	equ	0xFDD
  4097                           fsr2h	equ	0xFDA
  4098                           fsr2l	equ	0xFD9
  4099                           status	equ	0xFD8
  4100                           
  4101 ;; *************** function _SetChanADC *****************
  4102 ;; Defined at:
  4103 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;  channel         1    wreg     unsigned char 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  channel         1   49[BANK0 ] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;		None               void
  4110 ;; Registers used:
  4111 ;;		wreg, status,2, status,0
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4117 ;;      Params:         0       0       0       0       0
  4118 ;;      Locals:         0       1       0       0       0
  4119 ;;      Temps:          0       1       0       0       0
  4120 ;;      Totals:         0       2       0       0       0
  4121 ;;Total ram usage:        2 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:   10
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		_main
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text25
  4132  001B72                     __ptext25:
  4133                           	opt stack 0
  4134  001B72                     _SetChanADC:
  4135                           	opt stack 20
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;incstack = 0
  4139                           ;SetChanADC@channel stored from wreg
  4140  001B72  CFE8 F0B1          	movff	wreg,SetChanADC@channel
  4141  001B76  CFC2 F0B0          	movff	4034,??_SetChanADC	;volatile
  4142  001B7A  0EC3               	movlw	195
  4143  001B7C  0100               	movlb	0	; () banked
  4144  001B7E  17B0               	andwf	??_SetChanADC& (0+255),f,b
  4145  001B80  0100               	movlb	0	; () banked
  4146  001B82  0100               	movlb	0	; () banked
  4147  001B84  90D8               	bcf	status,0,c
  4148  001B86  31B1               	rrcf	SetChanADC@channel& (0+255),w,b
  4149  001B88  0B3C               	andlw	60
  4150  001B8A  0100               	movlb	0	; () banked
  4151  001B8C  11B0               	iorwf	??_SetChanADC& (0+255),w,b
  4152  001B8E  6EC2               	movwf	4034,c	;volatile
  4153                           
  4154                           ; BSR set to: 0
  4155  001B90  0012               	return	
  4156  001B92                     __end_of_SetChanADC:
  4157                           	opt stack 0
  4158                           tblptru	equ	0xFF8
  4159                           prodh	equ	0xFF4
  4160                           prodl	equ	0xFF3
  4161                           intcon	equ	0xFF2
  4162                           postinc0	equ	0xFEE
  4163                           wreg	equ	0xFE8
  4164                           indf1	equ	0xFE7
  4165                           fsr1h	equ	0xFE2
  4166                           fsr1l	equ	0xFE1
  4167                           indf2	equ	0xFDF
  4168                           postinc2	equ	0xFDE
  4169                           postdec2	equ	0xFDD
  4170                           fsr2h	equ	0xFDA
  4171                           fsr2l	equ	0xFD9
  4172                           status	equ	0xFD8
  4173                           
  4174 ;; *************** function _OpenUSART *****************
  4175 ;; Defined at:
  4176 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  config          1    wreg     unsigned char 
  4179 ;;  spbrg           2   48[BANK0 ] unsigned int 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  config          1   53[BANK0 ] unsigned char 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;		None               void
  4184 ;; Registers used:
  4185 ;;		wreg, status,2
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4191 ;;      Params:         0       2       0       0       0
  4192 ;;      Locals:         0       1       0       0       0
  4193 ;;      Temps:          0       3       0       0       0
  4194 ;;      Totals:         0       6       0       0       0
  4195 ;;Total ram usage:        6 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:   10
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_main
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text26
  4206  00132A                     __ptext26:
  4207                           	opt stack 0
  4208  00132A                     _OpenUSART:
  4209                           	opt stack 20
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;incstack = 0
  4213                           ;OpenUSART@config stored from wreg
  4214  00132A  CFE8 F0B5          	movff	wreg,OpenUSART@config
  4215  00132E  0E00               	movlw	0
  4216  001330  6EAC               	movwf	4012,c	;volatile
  4217  001332  0E00               	movlw	0
  4218  001334  6EAB               	movwf	4011,c	;volatile
  4219  001336  0100               	movlb	0	; () banked
  4220  001338  0100               	movlb	0	; () banked
  4221  00133A  B1B5               	btfsc	OpenUSART@config& (0+255),0,b
  4222                           
  4223                           ; BSR set to: 0
  4224  00133C  88AC               	bsf	4012,4,c	;volatile
  4225                           
  4226                           ; BSR set to: 0
  4227                           
  4228                           ; BSR set to: 0
  4229  00133E  0100               	movlb	0	; () banked
  4230  001340  0100               	movlb	0	; () banked
  4231  001342  A3B5               	btfss	OpenUSART@config& (0+255),1,b
  4232  001344  D002               	goto	l2511
  4233                           
  4234                           ; BSR set to: 0
  4235  001346  8CAC               	bsf	4012,6,c	;volatile
  4236  001348  8CAB               	bsf	4011,6,c	;volatile
  4237  00134A                     l2511:
  4238                           
  4239                           ; BSR set to: 0
  4240  00134A  0100               	movlb	0	; () banked
  4241  00134C  0100               	movlb	0	; () banked
  4242  00134E  B5B5               	btfsc	OpenUSART@config& (0+255),2,b
  4243                           
  4244                           ; BSR set to: 0
  4245  001350  8EAC               	bsf	4012,7,c	;volatile
  4246                           
  4247                           ; BSR set to: 0
  4248                           
  4249                           ; BSR set to: 0
  4250  001352  0100               	movlb	0	; () banked
  4251  001354  0100               	movlb	0	; () banked
  4252  001356  A7B5               	btfss	OpenUSART@config& (0+255),3,b
  4253  001358  D002               	goto	l508
  4254                           
  4255                           ; BSR set to: 0
  4256  00135A  88AB               	bsf	4011,4,c	;volatile
  4257  00135C  D001               	goto	l2519
  4258  00135E                     l508:
  4259                           
  4260                           ; BSR set to: 0
  4261  00135E  8AAB               	bsf	4011,5,c	;volatile
  4262  001360                     l2519:
  4263                           
  4264                           ; BSR set to: 0
  4265  001360  0100               	movlb	0	; () banked
  4266  001362  0100               	movlb	0	; () banked
  4267  001364  B9B5               	btfsc	OpenUSART@config& (0+255),4,b
  4268                           
  4269                           ; BSR set to: 0
  4270  001366  84AC               	bsf	4012,2,c	;volatile
  4271                           
  4272                           ; BSR set to: 0
  4273  001368  989E               	bcf	3998,4,c	;volatile
  4274                           
  4275                           ; BSR set to: 0
  4276  00136A  0100               	movlb	0	; () banked
  4277  00136C  0100               	movlb	0	; () banked
  4278  00136E  BBB5               	btfsc	OpenUSART@config& (0+255),5,b
  4279                           
  4280                           ; BSR set to: 0
  4281  001370  86AB               	bsf	4011,3,c	;volatile
  4282                           
  4283                           ; BSR set to: 0
  4284                           
  4285                           ; BSR set to: 0
  4286  001372  0100               	movlb	0	; () banked
  4287  001374  0100               	movlb	0	; () banked
  4288  001376  ADB5               	btfss	OpenUSART@config& (0+255),6,b
  4289  001378  D002               	goto	l512
  4290                           
  4291                           ; BSR set to: 0
  4292  00137A  8A9D               	bsf	3997,5,c	;volatile
  4293  00137C  D001               	goto	l513
  4294  00137E                     l512:
  4295                           
  4296                           ; BSR set to: 0
  4297  00137E  9A9D               	bcf	3997,5,c	;volatile
  4298  001380                     l513:
  4299                           
  4300                           ; BSR set to: 0
  4301  001380  9A9E               	bcf	3998,5,c	;volatile
  4302                           
  4303                           ; BSR set to: 0
  4304  001382  0100               	movlb	0	; () banked
  4305  001384  0100               	movlb	0	; () banked
  4306  001386  AFB5               	btfss	OpenUSART@config& (0+255),7,b
  4307  001388  D002               	goto	l514
  4308                           
  4309                           ; BSR set to: 0
  4310  00138A  889D               	bsf	3997,4,c	;volatile
  4311  00138C  D001               	goto	l515
  4312  00138E                     l514:
  4313                           
  4314                           ; BSR set to: 0
  4315  00138E  989D               	bcf	3997,4,c	;volatile
  4316  001390                     l515:
  4317                           
  4318                           ; BSR set to: 0
  4319  001390  C0B0  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4320                           
  4321                           ; BSR set to: 0
  4322  001394  0100               	movlb	0	; () banked
  4323  001396  C0B1  F0B2         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4324  00139A  C0B2  F0B3         	movff	??_OpenUSART,??_OpenUSART+1
  4325  00139E  0100               	movlb	0	; () banked
  4326  0013A0  6BB4               	clrf	(??_OpenUSART+2)& (0+255),b
  4327  0013A2  0100               	movlb	0	; () banked
  4328  0013A4  51B3               	movf	(??_OpenUSART+1)& (0+255),w,b
  4329  0013A6  6EB0               	movwf	4016,c	;volatile
  4330                           
  4331                           ; BSR set to: 0
  4332  0013A8  8AAC               	bsf	4012,5,c	;volatile
  4333                           
  4334                           ; BSR set to: 0
  4335  0013AA  8EAB               	bsf	4011,7,c	;volatile
  4336                           
  4337                           ; BSR set to: 0
  4338  0013AC  9C94               	bcf	3988,6,c	;volatile
  4339                           
  4340                           ; BSR set to: 0
  4341  0013AE  8E94               	bsf	3988,7,c	;volatile
  4342                           
  4343                           ; BSR set to: 0
  4344  0013B0  A8AC               	btfss	4012,4,c	;volatile
  4345  0013B2  0012               	return	
  4346                           
  4347                           ; BSR set to: 0
  4348  0013B4  BEAC               	btfsc	4012,7,c	;volatile
  4349  0013B6  0012               	return	
  4350                           
  4351                           ; BSR set to: 0
  4352  0013B8  8C94               	bsf	3988,6,c	;volatile
  4353  0013BA  0012               	return	
  4354  0013BC                     __end_of_OpenUSART:
  4355                           	opt stack 0
  4356                           tblptru	equ	0xFF8
  4357                           prodh	equ	0xFF4
  4358                           prodl	equ	0xFF3
  4359                           intcon	equ	0xFF2
  4360                           postinc0	equ	0xFEE
  4361                           wreg	equ	0xFE8
  4362                           indf1	equ	0xFE7
  4363                           fsr1h	equ	0xFE2
  4364                           fsr1l	equ	0xFE1
  4365                           indf2	equ	0xFDF
  4366                           postinc2	equ	0xFDE
  4367                           postdec2	equ	0xFDD
  4368                           fsr2h	equ	0xFDA
  4369                           fsr2l	equ	0xFD9
  4370                           status	equ	0xFD8
  4371                           
  4372 ;; *************** function _OpenTimer1 *****************
  4373 ;; Defined at:
  4374 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  config          1    wreg     unsigned char 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  config          1   48[BANK0 ] unsigned char 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;		None               void
  4381 ;; Registers used:
  4382 ;;		wreg, status,2, status,0
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4388 ;;      Params:         0       0       0       0       0
  4389 ;;      Locals:         0       1       0       0       0
  4390 ;;      Temps:          0       0       0       0       0
  4391 ;;      Totals:         0       1       0       0       0
  4392 ;;Total ram usage:        1 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:   10
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_main
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text27
  4403  0019CE                     __ptext27:
  4404                           	opt stack 0
  4405  0019CE                     _OpenTimer1:
  4406                           	opt stack 20
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;incstack = 0
  4410                           ;OpenTimer1@config stored from wreg
  4411  0019CE  CFE8 F0B0          	movff	wreg,OpenTimer1@config
  4412  0019D2  0100               	movlb	0	; () banked
  4413  0019D4  0100               	movlb	0	; () banked
  4414  0019D6  51B0               	movf	OpenTimer1@config& (0+255),w,b
  4415  0019D8  0B7E               	andlw	126
  4416  0019DA  6ECD               	movwf	4045,c	;volatile
  4417                           
  4418                           ; BSR set to: 0
  4419  0019DC  0100               	movlb	0	; () banked
  4420  0019DE  0100               	movlb	0	; () banked
  4421  0019E0  ADB0               	btfss	OpenTimer1@config& (0+255),6,b
  4422  0019E2  D002               	goto	l471
  4423                           
  4424                           ; BSR set to: 0
  4425  0019E4  8ECD               	bsf	4045,7,c	;volatile
  4426  0019E6  D001               	goto	l2471
  4427  0019E8                     l471:
  4428                           
  4429                           ; BSR set to: 0
  4430  0019E8  9ECD               	bcf	4045,7,c	;volatile
  4431  0019EA                     l2471:
  4432                           
  4433                           ; BSR set to: 0
  4434  0019EA  0E00               	movlw	0
  4435  0019EC  6ECF               	movwf	4047,c	;volatile
  4436  0019EE  0E00               	movlw	0
  4437  0019F0  6ECE               	movwf	4046,c	;volatile
  4438                           
  4439                           ; BSR set to: 0
  4440  0019F2  909E               	bcf	3998,0,c	;volatile
  4441                           
  4442                           ; BSR set to: 0
  4443  0019F4  0100               	movlb	0	; () banked
  4444  0019F6  0100               	movlb	0	; () banked
  4445  0019F8  AFB0               	btfss	OpenTimer1@config& (0+255),7,b
  4446  0019FA  D002               	goto	l473
  4447                           
  4448                           ; BSR set to: 0
  4449  0019FC  809D               	bsf	3997,0,c	;volatile
  4450  0019FE  D001               	goto	l474
  4451  001A00                     l473:
  4452                           
  4453                           ; BSR set to: 0
  4454  001A00  909D               	bcf	3997,0,c	;volatile
  4455  001A02                     l474:
  4456                           
  4457                           ; BSR set to: 0
  4458  001A02  80CD               	bsf	4045,0,c	;volatile
  4459                           
  4460                           ; BSR set to: 0
  4461  001A04  0012               	return	
  4462  001A06                     __end_of_OpenTimer1:
  4463                           	opt stack 0
  4464                           tblptru	equ	0xFF8
  4465                           prodh	equ	0xFF4
  4466                           prodl	equ	0xFF3
  4467                           intcon	equ	0xFF2
  4468                           postinc0	equ	0xFEE
  4469                           wreg	equ	0xFE8
  4470                           indf1	equ	0xFE7
  4471                           fsr1h	equ	0xFE2
  4472                           fsr1l	equ	0xFE1
  4473                           indf2	equ	0xFDF
  4474                           postinc2	equ	0xFDE
  4475                           postdec2	equ	0xFDD
  4476                           fsr2h	equ	0xFDA
  4477                           fsr2l	equ	0xFD9
  4478                           status	equ	0xFD8
  4479                           
  4480 ;; *************** function _OpenTimer0 *****************
  4481 ;; Defined at:
  4482 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;  config          1    wreg     unsigned char 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;  config          1   48[BANK0 ] unsigned char 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;		None               void
  4489 ;; Registers used:
  4490 ;;		wreg, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4496 ;;      Params:         0       0       0       0       0
  4497 ;;      Locals:         0       1       0       0       0
  4498 ;;      Temps:          0       0       0       0       0
  4499 ;;      Totals:         0       1       0       0       0
  4500 ;;Total ram usage:        1 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:   10
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_main
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text28
  4511  001AD6                     __ptext28:
  4512                           	opt stack 0
  4513  001AD6                     _OpenTimer0:
  4514                           	opt stack 20
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;incstack = 0
  4518                           ;OpenTimer0@config stored from wreg
  4519  001AD6  CFE8 F0B0          	movff	wreg,OpenTimer0@config
  4520  001ADA  0100               	movlb	0	; () banked
  4521  001ADC  0100               	movlb	0	; () banked
  4522  001ADE  51B0               	movf	OpenTimer0@config& (0+255),w,b
  4523  001AE0  0B7F               	andlw	127
  4524  001AE2  6ED5               	movwf	4053,c	;volatile
  4525                           
  4526                           ; BSR set to: 0
  4527  001AE4  0E00               	movlw	0
  4528  001AE6  6ED7               	movwf	4055,c	;volatile
  4529                           
  4530                           ; BSR set to: 0
  4531  001AE8  0E00               	movlw	0
  4532  001AEA  6ED6               	movwf	4054,c	;volatile
  4533                           
  4534                           ; BSR set to: 0
  4535  001AEC  94F2               	bcf	intcon,2,c	;volatile
  4536                           
  4537                           ; BSR set to: 0
  4538  001AEE  0100               	movlb	0	; () banked
  4539  001AF0  0100               	movlb	0	; () banked
  4540  001AF2  AFB0               	btfss	OpenTimer0@config& (0+255),7,b
  4541  001AF4  D002               	goto	l447
  4542                           
  4543                           ; BSR set to: 0
  4544  001AF6  8AF2               	bsf	intcon,5,c	;volatile
  4545  001AF8  D001               	goto	l448
  4546  001AFA                     l447:
  4547                           
  4548                           ; BSR set to: 0
  4549  001AFA  9AF2               	bcf	intcon,5,c	;volatile
  4550  001AFC                     l448:
  4551                           
  4552                           ; BSR set to: 0
  4553  001AFC  8ED5               	bsf	4053,7,c	;volatile
  4554                           
  4555                           ; BSR set to: 0
  4556  001AFE  0012               	return	
  4557  001B00                     __end_of_OpenTimer0:
  4558                           	opt stack 0
  4559                           tblptru	equ	0xFF8
  4560                           prodh	equ	0xFF4
  4561                           prodl	equ	0xFF3
  4562                           intcon	equ	0xFF2
  4563                           postinc0	equ	0xFEE
  4564                           wreg	equ	0xFE8
  4565                           indf1	equ	0xFE7
  4566                           fsr1h	equ	0xFE2
  4567                           fsr1l	equ	0xFE1
  4568                           indf2	equ	0xFDF
  4569                           postinc2	equ	0xFDE
  4570                           postdec2	equ	0xFDD
  4571                           fsr2h	equ	0xFDA
  4572                           fsr2l	equ	0xFD9
  4573                           status	equ	0xFD8
  4574                           
  4575 ;; *************** function _OpenADC *****************
  4576 ;; Defined at:
  4577 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;  config          1    wreg     unsigned char 
  4580 ;;  config2         1   48[BANK0 ] unsigned char 
  4581 ;;  portconfig      1   49[BANK0 ] unsigned char 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  config          1   52[BANK0 ] unsigned char 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;		None               void
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4593 ;;      Params:         0       2       0       0       0
  4594 ;;      Locals:         0       1       0       0       0
  4595 ;;      Temps:          0       2       0       0       0
  4596 ;;      Totals:         0       5       0       0       0
  4597 ;;Total ram usage:        5 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:   10
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_main
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           	psect	text29
  4608  001446                     __ptext29:
  4609                           	opt stack 0
  4610  001446                     _OpenADC:
  4611                           	opt stack 20
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;incstack = 0
  4615                           ;OpenADC@config stored from wreg
  4616  001446  CFE8 F0B4          	movff	wreg,OpenADC@config
  4617  00144A  0E00               	movlw	0
  4618  00144C  6EC2               	movwf	4034,c	;volatile
  4619  00144E  0E00               	movlw	0
  4620  001450  6EC0               	movwf	4032,c	;volatile
  4621  001452  0100               	movlb	0	; () banked
  4622  001454  0100               	movlb	0	; () banked
  4623  001456  90D8               	bcf	status,0,c
  4624  001458  31B0               	rrcf	OpenADC@config2& (0+255),w,b
  4625  00145A  0B3C               	andlw	60
  4626  00145C  6EC2               	movwf	4034,c	;volatile
  4627                           
  4628                           ; BSR set to: 0
  4629  00145E  C0B0  F0B2         	movff	OpenADC@config2,??_OpenADC
  4630  001462  0100               	movlb	0	; () banked
  4631  001464  3BB2               	swapf	??_OpenADC& (0+255),f,b
  4632  001466  0EF0               	movlw	240
  4633  001468  17B2               	andwf	??_OpenADC& (0+255),f,b
  4634  00146A  0E30               	movlw	48
  4635  00146C  0100               	movlb	0	; () banked
  4636  00146E  17B2               	andwf	??_OpenADC& (0+255),f,b
  4637  001470  0100               	movlb	0	; () banked
  4638  001472  0100               	movlb	0	; () banked
  4639  001474  51B1               	movf	OpenADC@portconfig& (0+255),w,b
  4640  001476  0B0F               	andlw	15
  4641  001478  0100               	movlb	0	; () banked
  4642  00147A  11B2               	iorwf	??_OpenADC& (0+255),w,b
  4643  00147C  6EC1               	movwf	4033,c	;volatile
  4644                           
  4645                           ; BSR set to: 0
  4646  00147E  C0B4  F0B2         	movff	OpenADC@config,??_OpenADC
  4647  001482  0100               	movlb	0	; () banked
  4648  001484  90D8               	bcf	status,0,c
  4649  001486  37B2               	rlcf	??_OpenADC& (0+255),f,b
  4650  001488  0100               	movlb	0	; () banked
  4651  00148A  90D8               	bcf	status,0,c
  4652  00148C  37B2               	rlcf	??_OpenADC& (0+255),f,b
  4653  00148E  0E38               	movlw	56
  4654  001490  0100               	movlb	0	; () banked
  4655  001492  17B2               	andwf	??_OpenADC& (0+255),f,b
  4656  001494  C0B4  F0B3         	movff	OpenADC@config,??_OpenADC+1
  4657  001498  0100               	movlb	0	; () banked
  4658  00149A  3BB3               	swapf	(??_OpenADC+1)& (0+255),f,b
  4659  00149C  0E0F               	movlw	15
  4660  00149E  17B3               	andwf	(??_OpenADC+1)& (0+255),f,b
  4661  0014A0  0E07               	movlw	7
  4662  0014A2  0100               	movlb	0	; () banked
  4663  0014A4  17B3               	andwf	(??_OpenADC+1)& (0+255),f,b
  4664  0014A6  0100               	movlb	0	; () banked
  4665  0014A8  0100               	movlb	0	; () banked
  4666  0014AA  51B4               	movf	OpenADC@config& (0+255),w,b
  4667  0014AC  0B80               	andlw	128
  4668  0014AE  0100               	movlb	0	; () banked
  4669  0014B0  11B3               	iorwf	(??_OpenADC+1)& (0+255),w,b
  4670  0014B2  0100               	movlb	0	; () banked
  4671  0014B4  11B2               	iorwf	??_OpenADC& (0+255),w,b
  4672  0014B6  6EC0               	movwf	4032,c	;volatile
  4673                           
  4674                           ; BSR set to: 0
  4675  0014B8  0100               	movlb	0	; () banked
  4676  0014BA  0100               	movlb	0	; () banked
  4677  0014BC  AFB0               	btfss	OpenADC@config2& (0+255),7,b
  4678  0014BE  D003               	goto	l428
  4679                           
  4680                           ; BSR set to: 0
  4681  0014C0  9C9E               	bcf	3998,6,c	;volatile
  4682  0014C2  8C9D               	bsf	3997,6,c	;volatile
  4683  0014C4  8CF2               	bsf	intcon,6,c	;volatile
  4684  0014C6                     l428:
  4685                           
  4686                           ; BSR set to: 0
  4687  0014C6  80C2               	bsf	4034,0,c	;volatile
  4688                           
  4689                           ; BSR set to: 0
  4690  0014C8  0012               	return	
  4691  0014CA                     __end_of_OpenADC:
  4692                           	opt stack 0
  4693                           tblptru	equ	0xFF8
  4694                           prodh	equ	0xFF4
  4695                           prodl	equ	0xFF3
  4696                           intcon	equ	0xFF2
  4697                           postinc0	equ	0xFEE
  4698                           wreg	equ	0xFE8
  4699                           indf1	equ	0xFE7
  4700                           fsr1h	equ	0xFE2
  4701                           fsr1l	equ	0xFE1
  4702                           indf2	equ	0xFDF
  4703                           postinc2	equ	0xFDE
  4704                           postdec2	equ	0xFDD
  4705                           fsr2h	equ	0xFDA
  4706                           fsr2l	equ	0xFD9
  4707                           status	equ	0xFD8
  4708                           
  4709 ;; *************** function _ConvertADC *****************
  4710 ;; Defined at:
  4711 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;		None
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;		None               void
  4718 ;; Registers used:
  4719 ;;		None
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4725 ;;      Params:         0       0       0       0       0
  4726 ;;      Locals:         0       0       0       0       0
  4727 ;;      Temps:          0       0       0       0       0
  4728 ;;      Totals:         0       0       0       0       0
  4729 ;;Total ram usage:        0 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:   10
  4732 ;; This function calls:
  4733 ;;		Nothing
  4734 ;; This function is called by:
  4735 ;;		_main
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           	psect	text30
  4740  001C7E                     __ptext30:
  4741                           	opt stack 0
  4742  001C7E                     _ConvertADC:
  4743                           	opt stack 20
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;incstack = 0
  4747  001C7E  82C2               	bsf	4034,1,c	;volatile
  4748  001C80  0012               	return	
  4749  001C82                     __end_of_ConvertADC:
  4750                           	opt stack 0
  4751                           tblptru	equ	0xFF8
  4752                           prodh	equ	0xFF4
  4753                           prodl	equ	0xFF3
  4754                           intcon	equ	0xFF2
  4755                           postinc0	equ	0xFEE
  4756                           wreg	equ	0xFE8
  4757                           indf1	equ	0xFE7
  4758                           fsr1h	equ	0xFE2
  4759                           fsr1l	equ	0xFE1
  4760                           indf2	equ	0xFDF
  4761                           postinc2	equ	0xFDE
  4762                           postdec2	equ	0xFDD
  4763                           fsr2h	equ	0xFDA
  4764                           fsr2l	equ	0xFD9
  4765                           status	equ	0xFD8
  4766                           
  4767 ;; *************** function _BusyADC *****************
  4768 ;; Defined at:
  4769 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcbusy.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;		None
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;		None
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      unsigned char 
  4776 ;; Registers used:
  4777 ;;		wreg
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4783 ;;      Params:         0       0       0       0       0
  4784 ;;      Locals:         0       0       0       0       0
  4785 ;;      Temps:          0       0       0       0       0
  4786 ;;      Totals:         0       0       0       0       0
  4787 ;;Total ram usage:        0 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; Hardware stack levels required when called:   10
  4790 ;; This function calls:
  4791 ;;		Nothing
  4792 ;; This function is called by:
  4793 ;;		_main
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text31
  4798  001C4C                     __ptext31:
  4799                           	opt stack 0
  4800  001C4C                     _BusyADC:
  4801                           	opt stack 20
  4802                           
  4803                           ;incstack = 0
  4804  001C4C  A2C2               	btfss	4034,1,c	;volatile
  4805  001C4E  D002               	goto	u1650
  4806  001C50  0E01               	movlw	1
  4807  001C52  0012               	return	
  4808  001C54                     u1650:
  4809  001C54  0E00               	movlw	0
  4810  001C56  0012               	return	
  4811  001C58                     __end_of_BusyADC:
  4812                           	opt stack 0
  4813                           tblptru	equ	0xFF8
  4814                           prodh	equ	0xFF4
  4815                           prodl	equ	0xFF3
  4816                           intcon	equ	0xFF2
  4817                           postinc0	equ	0xFEE
  4818                           wreg	equ	0xFE8
  4819                           indf1	equ	0xFE7
  4820                           fsr1h	equ	0xFE2
  4821                           fsr1l	equ	0xFE1
  4822                           indf2	equ	0xFDF
  4823                           postinc2	equ	0xFDE
  4824                           postdec2	equ	0xFDD
  4825                           fsr2h	equ	0xFDA
  4826                           fsr2l	equ	0xFD9
  4827                           status	equ	0xFD8
  4828                           
  4829 ;; *************** function _InterruptHandlerLow *****************
  4830 ;; Defined at:
  4831 ;;		line 133 in file "../src/interrupts.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;		None
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;		None
  4836 ;; Return value:  Size  Location     Type
  4837 ;;		None               void
  4838 ;; Registers used:
  4839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4845 ;;      Params:         0       0       0       0       0
  4846 ;;      Locals:         0       0       0       0       0
  4847 ;;      Temps:         17       0       0       0       0
  4848 ;;      Totals:        17       0       0       0       0
  4849 ;;Total ram usage:       17 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:    9
  4852 ;; This function calls:
  4853 ;;		_timer1_int_handler
  4854 ;;		_uart_recv_int_handler
  4855 ;; This function is called by:
  4856 ;;		Interrupt level 1
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	intcodelo
  4861  000018                     __pintcodelo:
  4862                           	opt stack 0
  4863  000018                     _InterruptHandlerLow:
  4864                           	opt stack 17
  4865                           
  4866                           ;incstack = 0
  4867  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  4868  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  4869  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  4870  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  4871  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  4872  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  4873  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  4874  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  4875  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  4876  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  4877  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  4878  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  4879  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  4880  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  4881  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  4882  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  4883  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  4884                           
  4885                           ;interrupts.c: 135: if (PIR1bits.TMR1IF) {
  4886  00005C  A09E               	btfss	3998,0,c	;volatile
  4887  00005E  D007               	goto	i1l2921
  4888                           
  4889                           ;interrupts.c: 136: PIR1bits.TMR1IF = 0;
  4890  000060  909E               	bcf	3998,0,c	;volatile
  4891                           
  4892                           ;interrupts.c: 137: timer1_int_handler(adcbuffer);
  4893  000062  0E00               	movlw	high _adcbuffer
  4894  000064  6E06               	movwf	timer1_int_handler@adcbuffer+1,c
  4895  000066  0E36               	movlw	low _adcbuffer
  4896  000068  6E05               	movwf	timer1_int_handler@adcbuffer,c
  4897  00006A  EC1F  F00E         	call	_timer1_int_handler	;wreg free
  4898  00006E                     i1l2921:
  4899                           
  4900                           ;interrupts.c: 138: }
  4901                           ;interrupts.c: 141: if (PIR1bits.RCIF) {
  4902  00006E  AA9E               	btfss	3998,5,c	;volatile
  4903  000070  D003               	goto	i1l52
  4904                           
  4905                           ;interrupts.c: 142: PIR1bits.RCIF = 0;
  4906  000072  9A9E               	bcf	3998,5,c	;volatile
  4907                           
  4908                           ;interrupts.c: 143: uart_recv_int_handler();
  4909  000074  EC47  F009         	call	_uart_recv_int_handler	;wreg free
  4910  000078                     i1l52:
  4911  000078  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4912  00007C  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4913  000080  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4914  000084  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4915  000088  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4916  00008C  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4917  000090  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4918  000094  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4919  000098  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4920  00009C  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4921  0000A0  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4922  0000A4  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4923  0000A8  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4924  0000AC  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4925  0000B0  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4926  0000B4  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4927  0000B8  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  4928  0000BC  0010               	retfie	
  4929  0000BE                     __end_of_InterruptHandlerLow:
  4930                           	opt stack 0
  4931                           pclatu	equ	0xFFB
  4932                           pclath	equ	0xFFA
  4933                           tblptru	equ	0xFF8
  4934                           tblptrh	equ	0xFF7
  4935                           tblptrl	equ	0xFF6
  4936                           tablat	equ	0xFF5
  4937                           prodh	equ	0xFF4
  4938                           prodl	equ	0xFF3
  4939                           intcon	equ	0xFF2
  4940                           postinc0	equ	0xFEE
  4941                           fsr0h	equ	0xFEA
  4942                           fsr0l	equ	0xFE9
  4943                           wreg	equ	0xFE8
  4944                           indf1	equ	0xFE7
  4945                           fsr1h	equ	0xFE2
  4946                           fsr1l	equ	0xFE1
  4947                           bsr	equ	0xFE0
  4948                           indf2	equ	0xFDF
  4949                           postinc2	equ	0xFDE
  4950                           postdec2	equ	0xFDD
  4951                           fsr2h	equ	0xFDA
  4952                           fsr2l	equ	0xFD9
  4953                           status	equ	0xFD8
  4954                           
  4955 ;; *************** function _uart_recv_int_handler *****************
  4956 ;; Defined at:
  4957 ;;		line 11 in file "../src/my_uart.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;		None
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;		None
  4962 ;; Return value:  Size  Location     Type
  4963 ;;		None               void
  4964 ;; Registers used:
  4965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4971 ;;      Params:         0       0       0       0       0
  4972 ;;      Locals:         0       0       0       0       0
  4973 ;;      Temps:          1       0       0       0       0
  4974 ;;      Totals:         1       0       0       0       0
  4975 ;;Total ram usage:        1 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; Hardware stack levels required when called:    8
  4978 ;; This function calls:
  4979 ;;		_ReadUSART
  4980 ;;		_ToMainLow_sendmsg
  4981 ;; This function is called by:
  4982 ;;		_InterruptHandlerLow
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text33
  4987  00128E                     __ptext33:
  4988                           	opt stack 0
  4989  00128E                     _uart_recv_int_handler:
  4990                           	opt stack 17
  4991                           
  4992                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  4993                           
  4994                           ;incstack = 0
  4995  00128E  AA9E               	btfss	3998,5,c	;volatile
  4996  001290  D03C               	goto	i1l2909
  4997                           
  4998                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  4999  001292  EE20 F004          	lfsr	2,4
  5000  001296  5052               	movf	_uc_ptr,w,c
  5001  001298  26D9               	addwf	fsr2l,f,c
  5002  00129A  5053               	movf	_uc_ptr+1,w,c
  5003  00129C  22DA               	addwfc	fsr2h,f,c
  5004  00129E  50DF               	movf	indf2,w,c
  5005  0012A0  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5006  0012A2  501B               	movf	??_uart_recv_int_handler,w,c
  5007  0012A4  0D01               	mullw	1
  5008  0012A6  50F3               	movf	prodl,w,c
  5009  0012A8  2452               	addwf	_uc_ptr,w,c
  5010  0012AA  6ED9               	movwf	fsr2l,c
  5011  0012AC  50F4               	movf	prodh,w,c
  5012  0012AE  2053               	addwfc	_uc_ptr+1,w,c
  5013  0012B0  6EDA               	movwf	fsr2h,c
  5014  0012B2  ECD8  F00D         	call	_ReadUSART	;wreg free
  5015  0012B6  6EDF               	movwf	indf2,c
  5016                           
  5017                           ;my_uart.c: 25: uc_ptr->buflen++;
  5018  0012B8  EE20 F004          	lfsr	2,4
  5019  0012BC  5052               	movf	_uc_ptr,w,c
  5020  0012BE  26D9               	addwf	fsr2l,f,c
  5021  0012C0  5053               	movf	_uc_ptr+1,w,c
  5022  0012C2  22DA               	addwfc	fsr2h,f,c
  5023  0012C4  2ADF               	incf	indf2,f,c
  5024                           
  5025                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  5026  0012C6  EE20 F004          	lfsr	2,4
  5027  0012CA  5052               	movf	_uc_ptr,w,c
  5028  0012CC  26D9               	addwf	fsr2l,f,c
  5029  0012CE  5053               	movf	_uc_ptr+1,w,c
  5030  0012D0  22DA               	addwfc	fsr2h,f,c
  5031  0012D2  0E04               	movlw	4
  5032  0012D4  62DF               	cpfseq	indf2,c
  5033  0012D6  D019               	goto	i1l2909
  5034                           
  5035                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5036  0012D8  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5037  0012DA  0E1F               	movlw	31
  5038  0012DC  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5039  0012DE  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5040  0012E0  C053  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5041  0012E4  C052  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5042  0012E8  EE20 F004          	lfsr	2,4
  5043  0012EC  5052               	movf	_uc_ptr,w,c
  5044  0012EE  26D9               	addwf	fsr2l,f,c
  5045  0012F0  5053               	movf	_uc_ptr+1,w,c
  5046  0012F2  22DA               	addwfc	fsr2h,f,c
  5047  0012F4  50DF               	movf	indf2,w,c
  5048  0012F6  EC94  F00D         	call	_ToMainLow_sendmsg
  5049                           
  5050                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  5051  0012FA  EE20 F004          	lfsr	2,4
  5052  0012FE  5052               	movf	_uc_ptr,w,c
  5053  001300  26D9               	addwf	fsr2l,f,c
  5054  001302  5053               	movf	_uc_ptr+1,w,c
  5055  001304  22DA               	addwfc	fsr2h,f,c
  5056  001306  0E00               	movlw	0
  5057  001308  6EDF               	movwf	indf2,c
  5058  00130A                     i1l2909:
  5059                           
  5060                           ;my_uart.c: 30: }
  5061                           ;my_uart.c: 31: }
  5062                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  5063  00130A  A635               	btfss	_USART_Status,3,c
  5064  00130C  0012               	return	
  5065                           
  5066                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  5067  00130E  98AB               	bcf	4011,4,c	;volatile
  5068                           
  5069                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  5070  001310  88AB               	bsf	4011,4,c	;volatile
  5071                           
  5072                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  5073  001312  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5074  001314  0E1E               	movlw	30
  5075  001316  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5076  001318  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5077  00131A  0E00               	movlw	0
  5078  00131C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5079  00131E  0E00               	movlw	0
  5080  001320  6E18               	movwf	ToMainLow_sendmsg@data,c
  5081  001322  0E00               	movlw	0
  5082  001324  EC94  F00D         	call	_ToMainLow_sendmsg
  5083  001328  0012               	return	
  5084  00132A                     __end_of_uart_recv_int_handler:
  5085                           	opt stack 0
  5086                           pclatu	equ	0xFFB
  5087                           pclath	equ	0xFFA
  5088                           tblptru	equ	0xFF8
  5089                           tblptrh	equ	0xFF7
  5090                           tblptrl	equ	0xFF6
  5091                           tablat	equ	0xFF5
  5092                           prodh	equ	0xFF4
  5093                           prodl	equ	0xFF3
  5094                           intcon	equ	0xFF2
  5095                           postinc0	equ	0xFEE
  5096                           fsr0h	equ	0xFEA
  5097                           fsr0l	equ	0xFE9
  5098                           wreg	equ	0xFE8
  5099                           indf1	equ	0xFE7
  5100                           fsr1h	equ	0xFE2
  5101                           fsr1l	equ	0xFE1
  5102                           bsr	equ	0xFE0
  5103                           indf2	equ	0xFDF
  5104                           postinc2	equ	0xFDE
  5105                           postdec2	equ	0xFDD
  5106                           fsr2h	equ	0xFDA
  5107                           fsr2l	equ	0xFD9
  5108                           status	equ	0xFD8
  5109                           
  5110 ;; *************** function _ToMainLow_sendmsg *****************
  5111 ;; Defined at:
  5112 ;;		line 103 in file "../src/messages.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;  length          1    wreg     unsigned char 
  5115 ;;  msgtype         1   22[COMRAM] unsigned char 
  5116 ;;  data            2   23[COMRAM] PTR void 
  5117 ;;		 -> NULL(0), main@uc(5), 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;  length          1   25[COMRAM] unsigned char 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  1    wreg      char 
  5122 ;; Registers used:
  5123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5129 ;;      Params:         3       0       0       0       0
  5130 ;;      Locals:         1       0       0       0       0
  5131 ;;      Temps:          0       0       0       0       0
  5132 ;;      Totals:         4       0       0       0       0
  5133 ;;Total ram usage:        4 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:    7
  5136 ;; This function calls:
  5137 ;;		i1_send_msg
  5138 ;; This function is called by:
  5139 ;;		_uart_recv_int_handler
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           	psect	text34
  5144  001B28                     __ptext34:
  5145                           	opt stack 0
  5146  001B28                     _ToMainLow_sendmsg:
  5147                           	opt stack 17
  5148                           
  5149                           ;incstack = 0
  5150                           ;ToMainLow_sendmsg@length stored from wreg
  5151  001B28  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5152                           
  5153                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5154                           ;	Return value of _ToMainLow_sendmsg is never used
  5155  001B2C  0101               	movlb	1	; () banked
  5156  001B2E  0E01               	movlw	high _ToMainLow_MQ
  5157  001B30  6E0C               	movwf	i1send_msg@qptr+1,c
  5158  001B32  0101               	movlb	1	; () banked
  5159  001B34  0E00               	movlw	low _ToMainLow_MQ
  5160  001B36  6E0B               	movwf	i1send_msg@qptr,c
  5161  001B38  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5162  001B3C  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5163  001B40  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5164  001B44  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5165  001B48  EC9E  F008         	call	i1_send_msg	;wreg free
  5166  001B4C  0012               	return	
  5167  001B4E                     __end_of_ToMainLow_sendmsg:
  5168                           	opt stack 0
  5169                           pclatu	equ	0xFFB
  5170                           pclath	equ	0xFFA
  5171                           tblptru	equ	0xFF8
  5172                           tblptrh	equ	0xFF7
  5173                           tblptrl	equ	0xFF6
  5174                           tablat	equ	0xFF5
  5175                           prodh	equ	0xFF4
  5176                           prodl	equ	0xFF3
  5177                           intcon	equ	0xFF2
  5178                           postinc0	equ	0xFEE
  5179                           fsr0h	equ	0xFEA
  5180                           fsr0l	equ	0xFE9
  5181                           wreg	equ	0xFE8
  5182                           indf1	equ	0xFE7
  5183                           fsr1h	equ	0xFE2
  5184                           fsr1l	equ	0xFE1
  5185                           bsr	equ	0xFE0
  5186                           indf2	equ	0xFDF
  5187                           postinc2	equ	0xFDE
  5188                           postdec2	equ	0xFDD
  5189                           fsr2h	equ	0xFDA
  5190                           fsr2l	equ	0xFD9
  5191                           status	equ	0xFD8
  5192                           
  5193 ;; *************** function i1_send_msg *****************
  5194 ;; Defined at:
  5195 ;;		line 24 in file "../src/messages.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5198 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  5199 ;;  length          1   12[COMRAM] unsigned char 
  5200 ;;  msgtype         1   13[COMRAM] unsigned char 
  5201 ;;  data            2   14[COMRAM] PTR void 
  5202 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), main@ic(64), 
  5203 ;;		 -> main@uc(5), 
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5206 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  5207 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  5208 ;;  send_msg        2   17[COMRAM] unsigned int 
  5209 ;;  send_msg        1   19[COMRAM] unsigned char 
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      char 
  5212 ;; Registers used:
  5213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5219 ;;      Params:         6       0       0       0       0
  5220 ;;      Locals:         5       0       0       0       0
  5221 ;;      Temps:          1       0       0       0       0
  5222 ;;      Totals:        12       0       0       0       0
  5223 ;;Total ram usage:       12 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:    6
  5226 ;; This function calls:
  5227 ;;		i1_memcpy
  5228 ;; This function is called by:
  5229 ;;		_ToMainLow_sendmsg
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           	psect	text35
  5234  00113C                     __ptext35:
  5235                           	opt stack 0
  5236  00113C                     i1_send_msg:
  5237                           	opt stack 17
  5238                           
  5239                           ;messages.c: 25: unsigned char slot;
  5240                           ;messages.c: 27: msg *qmsg;
  5241                           ;messages.c: 28: size_t tlength = length;
  5242                           
  5243                           ;incstack = 0
  5244  00113C  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5245  001140  6A13               	clrf	i1send_msg@tlength+1,c
  5246                           
  5247                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5248  001142  EE20 F07C          	lfsr	2,124
  5249  001146  500B               	movf	i1send_msg@qptr,w,c
  5250  001148  26D9               	addwf	fsr2l,f,c
  5251  00114A  500C               	movf	i1send_msg@qptr+1,w,c
  5252  00114C  22DA               	addwfc	fsr2h,f,c
  5253  00114E  50DF               	movf	indf2,w,c
  5254  001150  6E14               	movwf	i1send_msg@slot,c
  5255                           
  5256                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5257  001152  5014               	movf	i1send_msg@slot,w,c
  5258  001154  0D1F               	mullw	31
  5259  001156  50F3               	movf	prodl,w,c
  5260  001158  240B               	addwf	i1send_msg@qptr,w,c
  5261  00115A  6E15               	movwf	i1send_msg@qmsg,c
  5262  00115C  50F4               	movf	prodh,w,c
  5263  00115E  200C               	addwfc	i1send_msg@qptr+1,w,c
  5264  001160  6E16               	movwf	i1send_msg@qmsg+1,c
  5265                           
  5266                           ;messages.c: 41: if (qmsg->full != 0) {
  5267  001162  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5268  001166  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5269  00116A  50DF               	movf	indf2,w,c
  5270  00116C  B4D8               	btfsc	status,2,c
  5271  00116E  D002               	goto	i1l2881
  5272                           
  5273                           ;messages.c: 42: return (-1);
  5274  001170  0EFF               	movlw	255
  5275  001172  0012               	return	
  5276  001174                     i1l2881:
  5277                           
  5278                           ;messages.c: 43: }
  5279                           ;messages.c: 46: qmsg->length = length;
  5280  001174  EE20 F001          	lfsr	2,1
  5281  001178  5015               	movf	i1send_msg@qmsg,w,c
  5282  00117A  26D9               	addwf	fsr2l,f,c
  5283  00117C  5016               	movf	i1send_msg@qmsg+1,w,c
  5284  00117E  22DA               	addwfc	fsr2h,f,c
  5285  001180  C00D  FFDF         	movff	i1send_msg@length,indf2
  5286                           
  5287                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5288  001184  EE20 F002          	lfsr	2,2
  5289  001188  5015               	movf	i1send_msg@qmsg,w,c
  5290  00118A  26D9               	addwf	fsr2l,f,c
  5291  00118C  5016               	movf	i1send_msg@qmsg+1,w,c
  5292  00118E  22DA               	addwfc	fsr2h,f,c
  5293  001190  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5294                           
  5295                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5296  001194  0E03               	movlw	3
  5297  001196  2415               	addwf	i1send_msg@qmsg,w,c
  5298  001198  6E01               	movwf	i1memcpy@d1,c
  5299  00119A  0E00               	movlw	0
  5300  00119C  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5301  00119E  6E02               	movwf	i1memcpy@d1+1,c
  5302  0011A0  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5303  0011A4  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5304  0011A8  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5305  0011AC  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5306  0011B0  EC8B  F00C         	call	i1_memcpy	;wreg free
  5307                           
  5308                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5309  0011B4  EE20 F07C          	lfsr	2,124
  5310  0011B8  500B               	movf	i1send_msg@qptr,w,c
  5311  0011BA  26D9               	addwf	fsr2l,f,c
  5312  0011BC  500C               	movf	i1send_msg@qptr+1,w,c
  5313  0011BE  22DA               	addwfc	fsr2h,f,c
  5314  0011C0  EE10 F07C          	lfsr	1,124
  5315  0011C4  500B               	movf	i1send_msg@qptr,w,c
  5316  0011C6  26E1               	addwf	fsr1l,f,c
  5317  0011C8  500C               	movf	i1send_msg@qptr+1,w,c
  5318  0011CA  22E2               	addwfc	fsr1h,f,c
  5319  0011CC  50E7               	movf	indf1,w,c
  5320  0011CE  6E11               	movwf	??i1_send_msg& (0+255),c
  5321  0011D0  2811               	incf	??i1_send_msg,w,c
  5322  0011D2  0B03               	andlw	3
  5323  0011D4  6EDF               	movwf	indf2,c
  5324                           
  5325                           ;messages.c: 59: qmsg->full = 1;
  5326  0011D6  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5327  0011DA  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5328  0011DE  0E01               	movlw	1
  5329  0011E0  6EDF               	movwf	indf2,c
  5330                           
  5331                           ;messages.c: 60: return (1);
  5332  0011E2  0E01               	movlw	1
  5333  0011E4  0012               	return	
  5334  0011E6                     __end_ofi1_send_msg:
  5335                           	opt stack 0
  5336                           pclatu	equ	0xFFB
  5337                           pclath	equ	0xFFA
  5338                           tblptru	equ	0xFF8
  5339                           tblptrh	equ	0xFF7
  5340                           tblptrl	equ	0xFF6
  5341                           tablat	equ	0xFF5
  5342                           prodh	equ	0xFF4
  5343                           prodl	equ	0xFF3
  5344                           intcon	equ	0xFF2
  5345                           postinc0	equ	0xFEE
  5346                           fsr0h	equ	0xFEA
  5347                           fsr0l	equ	0xFE9
  5348                           wreg	equ	0xFE8
  5349                           indf1	equ	0xFE7
  5350                           fsr1h	equ	0xFE2
  5351                           fsr1l	equ	0xFE1
  5352                           bsr	equ	0xFE0
  5353                           indf2	equ	0xFDF
  5354                           postinc2	equ	0xFDE
  5355                           postdec2	equ	0xFDD
  5356                           fsr2h	equ	0xFDA
  5357                           fsr2l	equ	0xFD9
  5358                           status	equ	0xFD8
  5359                           
  5360 ;; *************** function i1_memcpy *****************
  5361 ;; Defined at:
  5362 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;  d1              2    0[COMRAM] PTR void 
  5365 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  5366 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  5367 ;;		 -> main@msgbuffer(29), 
  5368 ;;  s1              2    2[COMRAM] PTR const void 
  5369 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  5370 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  5371 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  5372 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(64), 
  5373 ;;		 -> main@uc(5), 
  5374 ;;  n               2    4[COMRAM] unsigned int 
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5377 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  5378 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  5379 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  5380 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(64), 
  5381 ;;		 -> main@uc(5), 
  5382 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5383 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  5384 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  5385 ;;		 -> main@msgbuffer(29), 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  2    0[COMRAM] PTR void 
  5388 ;; Registers used:
  5389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5395 ;;      Params:         6       0       0       0       0
  5396 ;;      Locals:         4       0       0       0       0
  5397 ;;      Temps:          0       0       0       0       0
  5398 ;;      Totals:        10       0       0       0       0
  5399 ;;Total ram usage:       10 bytes
  5400 ;; Hardware stack levels used:    1
  5401 ;; Hardware stack levels required when called:    5
  5402 ;; This function calls:
  5403 ;;		Nothing
  5404 ;; This function is called by:
  5405 ;;		i1_send_msg
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           	psect	text36
  5410  001916                     __ptext36:
  5411                           	opt stack 0
  5412  001916                     i1_memcpy:
  5413                           	opt stack 17
  5414                           
  5415                           ;incstack = 0
  5416  001916  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5417  00191A  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5418  00191E  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5419  001922  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5420  001926  D00E               	goto	i1l2857
  5421  001928                     i1l2851:
  5422  001928  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5423  00192C  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5424  001930  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5425  001934  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5426  001938  CFDF FFE7          	movff	indf2,indf1
  5427  00193C  4A09               	infsnz	i1memcpy@s,f,c
  5428  00193E  2A0A               	incf	i1memcpy@s+1,f,c
  5429  001940  4A07               	infsnz	i1memcpy@d,f,c
  5430  001942  2A08               	incf	i1memcpy@d+1,f,c
  5431  001944                     i1l2857:
  5432  001944  0605               	decf	i1memcpy@n,f,c
  5433  001946  A0D8               	btfss	status,0,c
  5434  001948  0606               	decf	i1memcpy@n+1,f,c
  5435  00194A  2805               	incf	i1memcpy@n& (0+255),w,c
  5436  00194C  B4D8               	btfsc	status,2,c
  5437  00194E  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5438  001950  B4D8               	btfsc	status,2,c
  5439                           
  5440                           ;	Return value of i1_memcpy is never used
  5441  001952  0012               	return	
  5442  001954  D7E9               	goto	i1l2851
  5443  001956                     __end_ofi1_memcpy:
  5444                           	opt stack 0
  5445                           pclatu	equ	0xFFB
  5446                           pclath	equ	0xFFA
  5447                           tblptru	equ	0xFF8
  5448                           tblptrh	equ	0xFF7
  5449                           tblptrl	equ	0xFF6
  5450                           tablat	equ	0xFF5
  5451                           prodh	equ	0xFF4
  5452                           prodl	equ	0xFF3
  5453                           intcon	equ	0xFF2
  5454                           postinc0	equ	0xFEE
  5455                           fsr0h	equ	0xFEA
  5456                           fsr0l	equ	0xFE9
  5457                           wreg	equ	0xFE8
  5458                           indf1	equ	0xFE7
  5459                           fsr1h	equ	0xFE2
  5460                           fsr1l	equ	0xFE1
  5461                           bsr	equ	0xFE0
  5462                           indf2	equ	0xFDF
  5463                           postinc2	equ	0xFDE
  5464                           postdec2	equ	0xFDD
  5465                           fsr2h	equ	0xFDA
  5466                           fsr2l	equ	0xFD9
  5467                           status	equ	0xFD8
  5468                           
  5469 ;; *************** function _ReadUSART *****************
  5470 ;; Defined at:
  5471 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;  data            1    0[COMRAM] unsigned char 
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      unsigned char 
  5478 ;; Registers used:
  5479 ;;		wreg, status,2, status,0
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5485 ;;      Params:         0       0       0       0       0
  5486 ;;      Locals:         1       0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0
  5488 ;;      Totals:         1       0       0       0       0
  5489 ;;Total ram usage:        1 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    5
  5492 ;; This function calls:
  5493 ;;		Nothing
  5494 ;; This function is called by:
  5495 ;;		_uart_recv_int_handler
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text37
  5500  001BB0                     __ptext37:
  5501                           	opt stack 0
  5502  001BB0                     _ReadUSART:
  5503                           	opt stack 19
  5504                           
  5505                           ;incstack = 0
  5506  001BB0  0EF2               	movlw	242
  5507  001BB2  1635               	andwf	_USART_Status,f,c
  5508  001BB4  ACAB               	btfss	4011,6,c	;volatile
  5509  001BB6  D003               	goto	i1l526
  5510  001BB8  9035               	bcf	_USART_Status,0,c
  5511  001BBA  B0AB               	btfsc	4011,0,c	;volatile
  5512  001BBC  8035               	bsf	_USART_Status,0,c
  5513  001BBE                     i1l526:
  5514  001BBE  B4AB               	btfsc	4011,2,c	;volatile
  5515  001BC0  8435               	bsf	_USART_Status,2,c
  5516  001BC2  B2AB               	btfsc	4011,1,c	;volatile
  5517  001BC4  8635               	bsf	_USART_Status,3,c
  5518  001BC6  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5519  001BCA  5001               	movf	ReadUSART@data,w,c
  5520  001BCC  0012               	return	
  5521  001BCE                     __end_of_ReadUSART:
  5522                           	opt stack 0
  5523                           pclatu	equ	0xFFB
  5524                           pclath	equ	0xFFA
  5525                           tblptru	equ	0xFF8
  5526                           tblptrh	equ	0xFF7
  5527                           tblptrl	equ	0xFF6
  5528                           tablat	equ	0xFF5
  5529                           prodh	equ	0xFF4
  5530                           prodl	equ	0xFF3
  5531                           intcon	equ	0xFF2
  5532                           postinc0	equ	0xFEE
  5533                           fsr0h	equ	0xFEA
  5534                           fsr0l	equ	0xFE9
  5535                           wreg	equ	0xFE8
  5536                           indf1	equ	0xFE7
  5537                           fsr1h	equ	0xFE2
  5538                           fsr1l	equ	0xFE1
  5539                           bsr	equ	0xFE0
  5540                           indf2	equ	0xFDF
  5541                           postinc2	equ	0xFDE
  5542                           postdec2	equ	0xFDD
  5543                           fsr2h	equ	0xFDA
  5544                           fsr2l	equ	0xFD9
  5545                           status	equ	0xFD8
  5546                           
  5547 ;; *************** function _timer1_int_handler *****************
  5548 ;; Defined at:
  5549 ;;		line 54 in file "../src/user_interrupts.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;  adcbuffer       2    4[COMRAM] PTR unsigned char 
  5552 ;;		 -> adcbuffer(28), 
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;		None
  5555 ;; Return value:  Size  Location     Type
  5556 ;;		None               void
  5557 ;; Registers used:
  5558 ;;		wreg, status,2, cstack
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5564 ;;      Params:         2       0       0       0       0
  5565 ;;      Locals:         0       0       0       0       0
  5566 ;;      Temps:          0       0       0       0       0
  5567 ;;      Totals:         2       0       0       0       0
  5568 ;;Total ram usage:        2 bytes
  5569 ;; Hardware stack levels used:    1
  5570 ;; Hardware stack levels required when called:    6
  5571 ;; This function calls:
  5572 ;;		_WriteTimer1
  5573 ;; This function is called by:
  5574 ;;		_InterruptHandlerLow
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           	psect	text38
  5579  001C3E                     __ptext38:
  5580                           	opt stack 0
  5581  001C3E                     _timer1_int_handler:
  5582                           	opt stack 19
  5583                           
  5584                           ;user_interrupts.c: 66: WriteTimer1(0);
  5585                           
  5586                           ;incstack = 0
  5587  001C3E  0E00               	movlw	0
  5588  001C40  6E02               	movwf	WriteTimer1@timer1+1,c
  5589  001C42  0E00               	movlw	0
  5590  001C44  6E01               	movwf	WriteTimer1@timer1,c
  5591  001C46  EC0D  F00E         	call	_WriteTimer1	;wreg free
  5592  001C4A  0012               	return	
  5593  001C4C                     __end_of_timer1_int_handler:
  5594                           	opt stack 0
  5595                           pclatu	equ	0xFFB
  5596                           pclath	equ	0xFFA
  5597                           tblptru	equ	0xFF8
  5598                           tblptrh	equ	0xFF7
  5599                           tblptrl	equ	0xFF6
  5600                           tablat	equ	0xFF5
  5601                           prodh	equ	0xFF4
  5602                           prodl	equ	0xFF3
  5603                           intcon	equ	0xFF2
  5604                           postinc0	equ	0xFEE
  5605                           fsr0h	equ	0xFEA
  5606                           fsr0l	equ	0xFE9
  5607                           wreg	equ	0xFE8
  5608                           indf1	equ	0xFE7
  5609                           fsr1h	equ	0xFE2
  5610                           fsr1l	equ	0xFE1
  5611                           bsr	equ	0xFE0
  5612                           indf2	equ	0xFDF
  5613                           postinc2	equ	0xFDE
  5614                           postdec2	equ	0xFDD
  5615                           fsr2h	equ	0xFDA
  5616                           fsr2l	equ	0xFD9
  5617                           status	equ	0xFD8
  5618                           
  5619 ;; *************** function _WriteTimer1 *****************
  5620 ;; Defined at:
  5621 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;  timer1          2    0[COMRAM] unsigned int 
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;  timer           2    2[COMRAM] struct Timers
  5626 ;; Return value:  Size  Location     Type
  5627 ;;		None               void
  5628 ;; Registers used:
  5629 ;;		None
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5635 ;;      Params:         2       0       0       0       0
  5636 ;;      Locals:         2       0       0       0       0
  5637 ;;      Temps:          0       0       0       0       0
  5638 ;;      Totals:         4       0       0       0       0
  5639 ;;Total ram usage:        4 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; Hardware stack levels required when called:    5
  5642 ;; This function calls:
  5643 ;;		Nothing
  5644 ;; This function is called by:
  5645 ;;		_timer1_int_handler
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text39
  5650  001C1A                     __ptext39:
  5651                           	opt stack 0
  5652  001C1A                     _WriteTimer1:
  5653                           	opt stack 19
  5654                           
  5655                           ;incstack = 0
  5656  001C1A  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5657  001C1E  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5658  001C22  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5659  001C26  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5660  001C2A  0012               	return	
  5661  001C2C                     __end_of_WriteTimer1:
  5662                           	opt stack 0
  5663                           pclatu	equ	0xFFB
  5664                           pclath	equ	0xFFA
  5665                           tblptru	equ	0xFF8
  5666                           tblptrh	equ	0xFF7
  5667                           tblptrl	equ	0xFF6
  5668                           tablat	equ	0xFF5
  5669                           prodh	equ	0xFF4
  5670                           prodl	equ	0xFF3
  5671                           intcon	equ	0xFF2
  5672                           postinc0	equ	0xFEE
  5673                           fsr0h	equ	0xFEA
  5674                           fsr0l	equ	0xFE9
  5675                           wreg	equ	0xFE8
  5676                           indf1	equ	0xFE7
  5677                           fsr1h	equ	0xFE2
  5678                           fsr1l	equ	0xFE1
  5679                           bsr	equ	0xFE0
  5680                           indf2	equ	0xFDF
  5681                           postinc2	equ	0xFDE
  5682                           postdec2	equ	0xFDD
  5683                           fsr2h	equ	0xFDA
  5684                           fsr2l	equ	0xFD9
  5685                           status	equ	0xFD8
  5686                           
  5687 ;; *************** function _InterruptHandlerHigh *****************
  5688 ;; Defined at:
  5689 ;;		line 85 in file "../src/interrupts.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;		None
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;		None
  5694 ;; Return value:  Size  Location     Type
  5695 ;;		None               void
  5696 ;; Registers used:
  5697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5703 ;;      Params:         0       0       0       0       0
  5704 ;;      Locals:         0       0       0       0       0
  5705 ;;      Temps:          0      14       0       0       0
  5706 ;;      Totals:         0      14       0       0       0
  5707 ;;Total ram usage:       14 bytes
  5708 ;; Hardware stack levels used:    1
  5709 ;; Hardware stack levels required when called:    4
  5710 ;; This function calls:
  5711 ;;		_SleepIfOkay
  5712 ;;		_i2c_int_handler
  5713 ;;		_timer0_int_handler
  5714 ;; This function is called by:
  5715 ;;		Interrupt level 2
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           	psect	intcode
  5720  000008                     __pintcode:
  5721                           	opt stack 0
  5722  000008                     _InterruptHandlerHigh:
  5723                           	opt stack 17
  5724                           
  5725                           ;incstack = 0
  5726  000008  CFFA F0A2          	movff	pclath,??_InterruptHandlerHigh
  5727  00000C  CFFB F0A3          	movff	pclatu,??_InterruptHandlerHigh+1
  5728  000010  EFF3  F008         	goto	int_func
  5729                           pclatu	equ	0xFFB
  5730                           pclath	equ	0xFFA
  5731                           tblptru	equ	0xFF8
  5732                           tblptrh	equ	0xFF7
  5733                           tblptrl	equ	0xFF6
  5734                           tablat	equ	0xFF5
  5735                           prodh	equ	0xFF4
  5736                           prodl	equ	0xFF3
  5737                           intcon	equ	0xFF2
  5738                           postinc0	equ	0xFEE
  5739                           fsr0h	equ	0xFEA
  5740                           fsr0l	equ	0xFE9
  5741                           wreg	equ	0xFE8
  5742                           indf1	equ	0xFE7
  5743                           fsr1h	equ	0xFE2
  5744                           fsr1l	equ	0xFE1
  5745                           bsr	equ	0xFE0
  5746                           indf2	equ	0xFDF
  5747                           postinc2	equ	0xFDE
  5748                           postdec2	equ	0xFDD
  5749                           fsr2h	equ	0xFDA
  5750                           fsr2l	equ	0xFD9
  5751                           status	equ	0xFD8
  5752                           
  5753                           	psect	intcode_body
  5754  0011E6                     __pintcode_body:
  5755                           	opt stack 17
  5756  0011E6                     int_func:
  5757                           	opt stack 17
  5758  0011E6  CFE9 F0A4          	movff	fsr0l,??_InterruptHandlerHigh+2
  5759  0011EA  CFEA F0A5          	movff	fsr0h,??_InterruptHandlerHigh+3
  5760  0011EE  CFE1 F0A6          	movff	fsr1l,??_InterruptHandlerHigh+4
  5761  0011F2  CFE2 F0A7          	movff	fsr1h,??_InterruptHandlerHigh+5
  5762  0011F6  CFD9 F0A8          	movff	fsr2l,??_InterruptHandlerHigh+6
  5763  0011FA  CFDA F0A9          	movff	fsr2h,??_InterruptHandlerHigh+7
  5764  0011FE  CFF3 F0AA          	movff	prodl,??_InterruptHandlerHigh+8
  5765  001202  CFF4 F0AB          	movff	prodh,??_InterruptHandlerHigh+9
  5766  001206  CFF6 F0AC          	movff	tblptrl,??_InterruptHandlerHigh+10
  5767  00120A  CFF7 F0AD          	movff	tblptrh,??_InterruptHandlerHigh+11
  5768  00120E  CFF8 F0AE          	movff	tblptru,??_InterruptHandlerHigh+12
  5769  001212  CFF5 F0AF          	movff	tablat,??_InterruptHandlerHigh+13
  5770                           
  5771                           ;interrupts.c: 90: if (PIR1bits.SSPIF) {
  5772  001216  A69E               	btfss	3998,3,c	;volatile
  5773  001218  D00B               	goto	i2l2935
  5774                           
  5775                           ;interrupts.c: 92: PIR1bits.SSPIF = 0;
  5776  00121A  969E               	bcf	3998,3,c	;volatile
  5777                           
  5778                           ;interrupts.c: 94: i2c_int_handler(adcbuffer);
  5779  00121C  0E00               	movlw	high _adcbuffer
  5780  00121E  0100               	movlb	0	; () banked
  5781  001220  0100               	movlb	0	; () banked
  5782  001222  6F94               	movwf	(i2c_int_handler@adcbuffer+1)& (0+255),b
  5783  001224  0E36               	movlw	low _adcbuffer
  5784  001226  0100               	movlb	0	; () banked
  5785  001228  0100               	movlb	0	; () banked
  5786  00122A  6F93               	movwf	i2c_int_handler@adcbuffer& (0+255),b
  5787  00122C  EC61  F000         	call	_i2c_int_handler	;wreg free
  5788  001230                     i2l2935:
  5789                           
  5790                           ;interrupts.c: 95: }
  5791                           ;interrupts.c: 97: if(PIR1bits.ADIF){
  5792  001230  AC9E               	btfss	3998,6,c	;volatile
  5793  001232  D003               	goto	i2l45
  5794                           
  5795                           ;interrupts.c: 99: PIR1bits.ADIF = 0;
  5796  001234  9C9E               	bcf	3998,6,c	;volatile
  5797                           
  5798                           ;interrupts.c: 100: LATBbits.LATB1 = 1;
  5799  001236  828A               	bsf	3978,1,c	;volatile
  5800                           
  5801                           ;interrupts.c: 101: LATBbits.LATB1 = 0;
  5802  001238  928A               	bcf	3978,1,c	;volatile
  5803  00123A                     i2l45:
  5804                           
  5805                           ;interrupts.c: 102: }
  5806                           ;interrupts.c: 105: if (INTCONbits.TMR0IF) {
  5807  00123A  A4F2               	btfss	intcon,2,c	;volatile
  5808  00123C  D009               	goto	i2l2945
  5809                           
  5810                           ;interrupts.c: 106: INTCONbits.TMR0IF = 0;
  5811  00123E  94F2               	bcf	intcon,2,c	;volatile
  5812                           
  5813                           ;interrupts.c: 108: LATBbits.LATB0 = 1;
  5814  001240  808A               	bsf	3978,0,c	;volatile
  5815                           
  5816                           ;interrupts.c: 109: timer0_int_handler(adcbuffer);
  5817  001242  0E00               	movlw	high _adcbuffer
  5818  001244  6E32               	movwf	timer0_int_handler@adcbuffer+1,c
  5819  001246  0E36               	movlw	low _adcbuffer
  5820  001248  6E31               	movwf	timer0_int_handler@adcbuffer,c
  5821  00124A  ECC9  F007         	call	_timer0_int_handler	;wreg free
  5822                           
  5823                           ;interrupts.c: 110: LATBbits.LATB0 = 0;
  5824  00124E  908A               	bcf	3978,0,c	;volatile
  5825  001250                     i2l2945:
  5826                           
  5827                           ;interrupts.c: 111: }
  5828                           ;interrupts.c: 120: SleepIfOkay();
  5829  001250  ECDD  F00B         	call	_SleepIfOkay	;wreg free
  5830  001254  C0AF  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5831  001258  C0AE  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5832  00125C  C0AD  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5833  001260  C0AC  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5834  001264  C0AB  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5835  001268  C0AA  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5836  00126C  C0A9  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5837  001270  C0A8  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5838  001274  C0A7  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5839  001278  C0A6  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5840  00127C  C0A5  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5841  001280  C0A4  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5842  001284  C0A3  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5843  001288  C0A2  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5844  00128C  0011               	retfie		f
  5845  00128E                     __end_of_InterruptHandlerHigh:
  5846                           	opt stack 0
  5847                           pclatu	equ	0xFFB
  5848                           pclath	equ	0xFFA
  5849                           tblptru	equ	0xFF8
  5850                           tblptrh	equ	0xFF7
  5851                           tblptrl	equ	0xFF6
  5852                           tablat	equ	0xFF5
  5853                           prodh	equ	0xFF4
  5854                           prodl	equ	0xFF3
  5855                           intcon	equ	0xFF2
  5856                           postinc0	equ	0xFEE
  5857                           fsr0h	equ	0xFEA
  5858                           fsr0l	equ	0xFE9
  5859                           wreg	equ	0xFE8
  5860                           indf1	equ	0xFE7
  5861                           fsr1h	equ	0xFE2
  5862                           fsr1l	equ	0xFE1
  5863                           bsr	equ	0xFE0
  5864                           indf2	equ	0xFDF
  5865                           postinc2	equ	0xFDE
  5866                           postdec2	equ	0xFDD
  5867                           fsr2h	equ	0xFDA
  5868                           fsr2l	equ	0xFD9
  5869                           status	equ	0xFD8
  5870                           
  5871 ;; *************** function _timer0_int_handler *****************
  5872 ;; Defined at:
  5873 ;;		line 16 in file "../src/user_interrupts.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  adcbuffer       2   48[COMRAM] PTR unsigned char 
  5876 ;;		 -> adcbuffer(28), 
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;  i               2    2[BANK0 ] int 
  5879 ;; Return value:  Size  Location     Type
  5880 ;;		None               void
  5881 ;; Registers used:
  5882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5888 ;;      Params:         2       0       0       0       0
  5889 ;;      Locals:         0       2       0       0       0
  5890 ;;      Temps:          0       2       0       0       0
  5891 ;;      Totals:         2       4       0       0       0
  5892 ;;Total ram usage:        6 bytes
  5893 ;; Hardware stack levels used:    1
  5894 ;; Hardware stack levels required when called:    1
  5895 ;; This function calls:
  5896 ;;		_WriteTimer0
  5897 ;;		i2_BusyADC
  5898 ;;		i2_ConvertADC
  5899 ;; This function is called by:
  5900 ;;		_InterruptHandlerHigh
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           	psect	text41
  5905  000F92                     __ptext41:
  5906                           	opt stack 0
  5907  000F92                     _timer0_int_handler:
  5908                           	opt stack 19
  5909                           
  5910                           ;user_interrupts.c: 17: WriteTimer0(0);
  5911                           
  5912                           ;incstack = 0
  5913  000F92  0E00               	movlw	0
  5914  000F94  6E2E               	movwf	WriteTimer0@timer0+1,c
  5915  000F96  0E00               	movlw	0
  5916  000F98  6E2D               	movwf	WriteTimer0@timer0,c
  5917  000F9A  EC16  F00E         	call	_WriteTimer0	;wreg free
  5918                           
  5919                           ;user_interrupts.c: 34: ConvertADC();
  5920  000F9E  EC41  F00E         	call	i2_ConvertADC	;wreg free
  5921  000FA2                     i2l3101:
  5922  000FA2  EC2C  F00E         	call	i2_BusyADC	;wreg free
  5923  000FA6  0900               	iorlw	0
  5924  000FA8  A4D8               	btfss	status,2,c
  5925  000FAA  D7FB               	goto	i2l3101
  5926                           
  5927                           ;user_interrupts.c: 37: }
  5928                           ;user_interrupts.c: 40: if(adcbuffer[0] < 27)
  5929  000FAC  C031  FFD9         	movff	timer0_int_handler@adcbuffer,fsr2l
  5930  000FB0  C032  FFDA         	movff	timer0_int_handler@adcbuffer+1,fsr2h
  5931  000FB4  50DF               	movf	indf2,w,c
  5932  000FB6  0100               	movlb	0	; () banked
  5933  000FB8  6F80               	movwf	??_timer0_int_handler& (0+255),b
  5934  000FBA  0E1B               	movlw	27
  5935  000FBC  0100               	movlb	0	; () banked
  5936  000FBE  5D80               	subwf	??_timer0_int_handler& (0+255),w,b
  5937  000FC0  B0D8               	btfsc	status,0,c
  5938  000FC2  D00F               	goto	i2l3107
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;user_interrupts.c: 41: adcbuffer[0] = adcbuffer[0] + 1;
  5942  000FC4  C031  FFD9         	movff	timer0_int_handler@adcbuffer,fsr2l
  5943  000FC8  C032  FFDA         	movff	timer0_int_handler@adcbuffer+1,fsr2h
  5944  000FCC  50DF               	movf	indf2,w,c
  5945  000FCE  0100               	movlb	0	; () banked
  5946  000FD0  6F80               	movwf	??_timer0_int_handler& (0+255),b
  5947  000FD2  0100               	movlb	0	; () banked
  5948  000FD4  2980               	incf	??_timer0_int_handler& (0+255),w,b
  5949  000FD6  C031  FFD9         	movff	timer0_int_handler@adcbuffer,fsr2l
  5950  000FDA  C032  FFDA         	movff	timer0_int_handler@adcbuffer+1,fsr2h
  5951  000FDE  6EDF               	movwf	indf2,c
  5952  000FE0  D036               	goto	i2l3119
  5953  000FE2                     i2l3107:
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;user_interrupts.c: 42: else {
  5957                           ;user_interrupts.c: 43: for (int i = 1; i < 27; i++)
  5958  000FE2  0E00               	movlw	0
  5959  000FE4  0100               	movlb	0	; () banked
  5960  000FE6  0100               	movlb	0	; () banked
  5961  000FE8  6F83               	movwf	(timer0_int_handler@i+1)& (0+255),b
  5962  000FEA  0E01               	movlw	1
  5963  000FEC  0100               	movlb	0	; () banked
  5964  000FEE  6F82               	movwf	timer0_int_handler@i& (0+255),b
  5965  000FF0                     
  5966                           ; BSR set to: 0
  5967  000FF0  0100               	movlb	0	; () banked
  5968  000FF2  0100               	movlb	0	; () banked
  5969  000FF4  5183               	movf	(timer0_int_handler@i+1)& (0+255),w,b
  5970  000FF6  0A80               	xorlw	128
  5971  000FF8  0F80               	addlw	-128
  5972  000FFA  0E1B               	movlw	27
  5973  000FFC  B4D8               	btfsc	status,2,c
  5974  000FFE  5D82               	subwf	timer0_int_handler@i& (0+255),w,b
  5975  001000  B0D8               	btfsc	status,0,c
  5976  001002  D025               	goto	i2l3119
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;user_interrupts.c: 44: {
  5980                           ;user_interrupts.c: 45: adcbuffer[i] = adcbuffer[i+1];
  5981                           
  5982                           ; BSR set to: 0
  5983                           
  5984                           ; BSR set to: 0
  5985  001004  0E01               	movlw	1
  5986  001006  0100               	movlb	0	; () banked
  5987  001008  0100               	movlb	0	; () banked
  5988  00100A  2582               	addwf	timer0_int_handler@i& (0+255),w,b
  5989  00100C  0100               	movlb	0	; () banked
  5990  00100E  6F80               	movwf	??_timer0_int_handler& (0+255),b
  5991  001010  0E00               	movlw	0
  5992  001012  0100               	movlb	0	; () banked
  5993  001014  0100               	movlb	0	; () banked
  5994  001016  2183               	addwfc	(timer0_int_handler@i+1)& (0+255),w,b
  5995  001018  0100               	movlb	0	; () banked
  5996  00101A  6F81               	movwf	(??_timer0_int_handler+1)& (0+255),b
  5997  00101C  0100               	movlb	0	; () banked
  5998  00101E  5180               	movf	??_timer0_int_handler& (0+255),w,b
  5999  001020  2431               	addwf	timer0_int_handler@adcbuffer,w,c
  6000  001022  6ED9               	movwf	fsr2l,c
  6001  001024  0100               	movlb	0	; () banked
  6002  001026  5181               	movf	(??_timer0_int_handler+1)& (0+255),w,b
  6003  001028  2032               	addwfc	timer0_int_handler@adcbuffer+1,w,c
  6004  00102A  6EDA               	movwf	fsr2h,c
  6005  00102C  0100               	movlb	0	; () banked
  6006  00102E  0100               	movlb	0	; () banked
  6007  001030  5182               	movf	timer0_int_handler@i& (0+255),w,b
  6008  001032  2431               	addwf	timer0_int_handler@adcbuffer,w,c
  6009  001034  6EE1               	movwf	fsr1l,c
  6010  001036  0100               	movlb	0	; () banked
  6011  001038  0100               	movlb	0	; () banked
  6012  00103A  5183               	movf	(timer0_int_handler@i+1)& (0+255),w,b
  6013  00103C  2032               	addwfc	timer0_int_handler@adcbuffer+1,w,c
  6014  00103E  6EE2               	movwf	fsr1h,c
  6015  001040  CFDF FFE7          	movff	indf2,indf1
  6016                           
  6017                           ; BSR set to: 0
  6018  001044  0100               	movlb	0	; () banked
  6019  001046  0100               	movlb	0	; () banked
  6020  001048  4B82               	infsnz	timer0_int_handler@i& (0+255),f,b
  6021  00104A  2B83               	incf	(timer0_int_handler@i+1)& (0+255),f,b
  6022  00104C  D7D1               	goto	L3
  6023  00104E                     i2l3119:
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;user_interrupts.c: 46: }
  6027                           ;user_interrupts.c: 47: }
  6028                           ;user_interrupts.c: 48: adcbuffer[adcbuffer[0]] = ADRESH;
  6029  00104E  C031  FFD9         	movff	timer0_int_handler@adcbuffer,fsr2l
  6030  001052  C032  FFDA         	movff	timer0_int_handler@adcbuffer+1,fsr2h
  6031  001056  50DF               	movf	indf2,w,c
  6032  001058  0100               	movlb	0	; () banked
  6033  00105A  6F80               	movwf	??_timer0_int_handler& (0+255),b
  6034  00105C  0100               	movlb	0	; () banked
  6035  00105E  5180               	movf	??_timer0_int_handler& (0+255),w,b
  6036  001060  0D01               	mullw	1
  6037  001062  50F3               	movf	prodl,w,c
  6038  001064  2431               	addwf	timer0_int_handler@adcbuffer,w,c
  6039  001066  6ED9               	movwf	fsr2l,c
  6040  001068  50F4               	movf	prodh,w,c
  6041  00106A  2032               	addwfc	timer0_int_handler@adcbuffer+1,w,c
  6042  00106C  6EDA               	movwf	fsr2h,c
  6043  00106E  CFC4 FFDF          	movff	4036,indf2	;volatile
  6044                           
  6045                           ; BSR set to: 0
  6046  001072  0012               	return	
  6047  001074                     __end_of_timer0_int_handler:
  6048                           	opt stack 0
  6049                           pclatu	equ	0xFFB
  6050                           pclath	equ	0xFFA
  6051                           tblptru	equ	0xFF8
  6052                           tblptrh	equ	0xFF7
  6053                           tblptrl	equ	0xFF6
  6054                           tablat	equ	0xFF5
  6055                           prodh	equ	0xFF4
  6056                           prodl	equ	0xFF3
  6057                           intcon	equ	0xFF2
  6058                           postinc0	equ	0xFEE
  6059                           fsr0h	equ	0xFEA
  6060                           fsr0l	equ	0xFE9
  6061                           wreg	equ	0xFE8
  6062                           indf1	equ	0xFE7
  6063                           fsr1h	equ	0xFE2
  6064                           fsr1l	equ	0xFE1
  6065                           bsr	equ	0xFE0
  6066                           indf2	equ	0xFDF
  6067                           postinc2	equ	0xFDE
  6068                           postdec2	equ	0xFDD
  6069                           fsr2h	equ	0xFDA
  6070                           fsr2l	equ	0xFD9
  6071                           status	equ	0xFD8
  6072                           
  6073 ;; *************** function i2_ConvertADC *****************
  6074 ;; Defined at:
  6075 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;		None
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;		None
  6080 ;; Return value:  Size  Location     Type
  6081 ;;		None               void
  6082 ;; Registers used:
  6083 ;;		None
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6089 ;;      Params:         0       0       0       0       0
  6090 ;;      Locals:         0       0       0       0       0
  6091 ;;      Temps:          0       0       0       0       0
  6092 ;;      Totals:         0       0       0       0       0
  6093 ;;Total ram usage:        0 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; This function calls:
  6096 ;;		Nothing
  6097 ;; This function is called by:
  6098 ;;		_timer0_int_handler
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text42
  6103  001C82                     __ptext42:
  6104                           	opt stack 0
  6105  001C82                     i2_ConvertADC:
  6106                           	opt stack 19
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;incstack = 0
  6110  001C82  82C2               	bsf	4034,1,c	;volatile
  6111  001C84  0012               	return	
  6112  001C86                     __end_ofi2_ConvertADC:
  6113                           	opt stack 0
  6114                           pclatu	equ	0xFFB
  6115                           pclath	equ	0xFFA
  6116                           tblptru	equ	0xFF8
  6117                           tblptrh	equ	0xFF7
  6118                           tblptrl	equ	0xFF6
  6119                           tablat	equ	0xFF5
  6120                           prodh	equ	0xFF4
  6121                           prodl	equ	0xFF3
  6122                           intcon	equ	0xFF2
  6123                           postinc0	equ	0xFEE
  6124                           fsr0h	equ	0xFEA
  6125                           fsr0l	equ	0xFE9
  6126                           wreg	equ	0xFE8
  6127                           indf1	equ	0xFE7
  6128                           fsr1h	equ	0xFE2
  6129                           fsr1l	equ	0xFE1
  6130                           bsr	equ	0xFE0
  6131                           indf2	equ	0xFDF
  6132                           postinc2	equ	0xFDE
  6133                           postdec2	equ	0xFDD
  6134                           fsr2h	equ	0xFDA
  6135                           fsr2l	equ	0xFD9
  6136                           status	equ	0xFD8
  6137                           
  6138 ;; *************** function i2_BusyADC *****************
  6139 ;; Defined at:
  6140 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcbusy.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;		None
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;		None
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  1    wreg      unsigned char 
  6147 ;; Registers used:
  6148 ;;		wreg
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6154 ;;      Params:         0       0       0       0       0
  6155 ;;      Locals:         0       0       0       0       0
  6156 ;;      Temps:          0       0       0       0       0
  6157 ;;      Totals:         0       0       0       0       0
  6158 ;;Total ram usage:        0 bytes
  6159 ;; Hardware stack levels used:    1
  6160 ;; This function calls:
  6161 ;;		Nothing
  6162 ;; This function is called by:
  6163 ;;		_timer0_int_handler
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           	psect	text43
  6168  001C58                     __ptext43:
  6169                           	opt stack 0
  6170  001C58                     i2_BusyADC:
  6171                           	opt stack 19
  6172                           
  6173                           ;incstack = 0
  6174  001C58  A2C2               	btfss	4034,1,c	;volatile
  6175  001C5A  D002               	goto	i2u237_40
  6176  001C5C  0E01               	movlw	1
  6177  001C5E  0012               	return	
  6178  001C60                     i2u237_40:
  6179  001C60  0E00               	movlw	0
  6180  001C62  0012               	return	
  6181  001C64                     __end_ofi2_BusyADC:
  6182                           	opt stack 0
  6183                           pclatu	equ	0xFFB
  6184                           pclath	equ	0xFFA
  6185                           tblptru	equ	0xFF8
  6186                           tblptrh	equ	0xFF7
  6187                           tblptrl	equ	0xFF6
  6188                           tablat	equ	0xFF5
  6189                           prodh	equ	0xFF4
  6190                           prodl	equ	0xFF3
  6191                           intcon	equ	0xFF2
  6192                           postinc0	equ	0xFEE
  6193                           fsr0h	equ	0xFEA
  6194                           fsr0l	equ	0xFE9
  6195                           wreg	equ	0xFE8
  6196                           indf1	equ	0xFE7
  6197                           fsr1h	equ	0xFE2
  6198                           fsr1l	equ	0xFE1
  6199                           bsr	equ	0xFE0
  6200                           indf2	equ	0xFDF
  6201                           postinc2	equ	0xFDE
  6202                           postdec2	equ	0xFDD
  6203                           fsr2h	equ	0xFDA
  6204                           fsr2l	equ	0xFD9
  6205                           status	equ	0xFD8
  6206                           
  6207 ;; *************** function _WriteTimer0 *****************
  6208 ;; Defined at:
  6209 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;  timer0          2   44[COMRAM] unsigned int 
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;  timer           2   46[COMRAM] struct Timers
  6214 ;; Return value:  Size  Location     Type
  6215 ;;		None               void
  6216 ;; Registers used:
  6217 ;;		None
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6223 ;;      Params:         2       0       0       0       0
  6224 ;;      Locals:         2       0       0       0       0
  6225 ;;      Temps:          0       0       0       0       0
  6226 ;;      Totals:         4       0       0       0       0
  6227 ;;Total ram usage:        4 bytes
  6228 ;; Hardware stack levels used:    1
  6229 ;; This function calls:
  6230 ;;		Nothing
  6231 ;; This function is called by:
  6232 ;;		_timer0_int_handler
  6233 ;; This function uses a non-reentrant model
  6234 ;;
  6235                           
  6236                           	psect	text44
  6237  001C2C                     __ptext44:
  6238                           	opt stack 0
  6239  001C2C                     _WriteTimer0:
  6240                           	opt stack 19
  6241                           
  6242                           ;incstack = 0
  6243  001C2C  C02D  F02F         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6244  001C30  C02E  F030         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6245  001C34  C030  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6246  001C38  C02F  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6247  001C3C  0012               	return	
  6248  001C3E                     __end_of_WriteTimer0:
  6249                           	opt stack 0
  6250                           pclatu	equ	0xFFB
  6251                           pclath	equ	0xFFA
  6252                           tblptru	equ	0xFF8
  6253                           tblptrh	equ	0xFF7
  6254                           tblptrl	equ	0xFF6
  6255                           tablat	equ	0xFF5
  6256                           prodh	equ	0xFF4
  6257                           prodl	equ	0xFF3
  6258                           intcon	equ	0xFF2
  6259                           postinc0	equ	0xFEE
  6260                           fsr0h	equ	0xFEA
  6261                           fsr0l	equ	0xFE9
  6262                           wreg	equ	0xFE8
  6263                           indf1	equ	0xFE7
  6264                           fsr1h	equ	0xFE2
  6265                           fsr1l	equ	0xFE1
  6266                           bsr	equ	0xFE0
  6267                           indf2	equ	0xFDF
  6268                           postinc2	equ	0xFDE
  6269                           postdec2	equ	0xFDD
  6270                           fsr2h	equ	0xFDA
  6271                           fsr2l	equ	0xFD9
  6272                           status	equ	0xFD8
  6273                           
  6274 ;; *************** function _i2c_int_handler *****************
  6275 ;; Defined at:
  6276 ;;		line 100 in file "../src/my_i2c.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;  adcbuffer       2   19[BANK0 ] PTR unsigned char 
  6279 ;;		 -> adcbuffer(28), 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  length          2   23[BANK0 ] int 
  6282 ;;  error_buf       3   25[BANK0 ] unsigned char [3]
  6283 ;;  data_read       1   33[BANK0 ] unsigned char 
  6284 ;;  msg_ready       1   32[BANK0 ] unsigned char 
  6285 ;;  msg_to_send     1   31[BANK0 ] unsigned char 
  6286 ;;  i2c_data        1   30[BANK0 ] unsigned char 
  6287 ;;  overrun_erro    1   29[BANK0 ] unsigned char 
  6288 ;;  data_written    1   28[BANK0 ] unsigned char 
  6289 ;; Return value:  Size  Location     Type
  6290 ;;		None               void
  6291 ;; Registers used:
  6292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6298 ;;      Params:         0       2       0       0       0
  6299 ;;      Locals:         0      11       0       0       0
  6300 ;;      Temps:          0       2       0       0       0
  6301 ;;      Totals:         0      15       0       0       0
  6302 ;;Total ram usage:       15 bytes
  6303 ;; Hardware stack levels used:    1
  6304 ;; Hardware stack levels required when called:    3
  6305 ;; This function calls:
  6306 ;;		_ToMainHigh_sendmsg
  6307 ;;		_handle_start
  6308 ;;		i2_start_i2c_slave_reply
  6309 ;; This function is called by:
  6310 ;;		_InterruptHandlerHigh
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314                           	psect	text45
  6315  0000C2                     __ptext45:
  6316                           	opt stack 0
  6317  0000C2                     _i2c_int_handler:
  6318                           	opt stack 17
  6319                           
  6320                           ;my_i2c.c: 101: unsigned char i2c_data;
  6321                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6322                           
  6323                           ;incstack = 0
  6324  0000C2  0100               	movlb	0	; () banked
  6325  0000C4  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6326  0000C6  0E00               	movlw	0
  6327  0000C8  0100               	movlb	0	; () banked
  6328  0000CA  0100               	movlb	0	; () banked
  6329  0000CC  6FA1               	movwf	i2c_int_handler@data_read& (0+255),b
  6330  0000CE  0100               	movlb	0	; () banked
  6331  0000D0  5195               	movf	??_i2c_int_handler& (0+255),w,b
  6332                           
  6333                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6334  0000D2  0100               	movlb	0	; () banked
  6335  0000D4  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6336  0000D6  0E00               	movlw	0
  6337  0000D8  0100               	movlb	0	; () banked
  6338  0000DA  0100               	movlb	0	; () banked
  6339  0000DC  6F9C               	movwf	i2c_int_handler@data_written& (0+255),b
  6340  0000DE  0100               	movlb	0	; () banked
  6341  0000E0  5195               	movf	??_i2c_int_handler& (0+255),w,b
  6342                           
  6343                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6344  0000E2  0100               	movlb	0	; () banked
  6345  0000E4  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6346  0000E6  0E00               	movlw	0
  6347  0000E8  0100               	movlb	0	; () banked
  6348  0000EA  0100               	movlb	0	; () banked
  6349  0000EC  6FA0               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6350  0000EE  0100               	movlb	0	; () banked
  6351  0000F0  5195               	movf	??_i2c_int_handler& (0+255),w,b
  6352                           
  6353                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6354  0000F2  0100               	movlb	0	; () banked
  6355  0000F4  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6356  0000F6  0E00               	movlw	0
  6357  0000F8  0100               	movlb	0	; () banked
  6358  0000FA  0100               	movlb	0	; () banked
  6359  0000FC  6F9F               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6360  0000FE  0100               	movlb	0	; () banked
  6361  000100  5195               	movf	??_i2c_int_handler& (0+255),w,b
  6362                           
  6363                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6364  000102  0100               	movlb	0	; () banked
  6365  000104  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6366  000106  0E00               	movlw	0
  6367  000108  0100               	movlb	0	; () banked
  6368  00010A  0100               	movlb	0	; () banked
  6369  00010C  6F9D               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6370  00010E  0100               	movlb	0	; () banked
  6371  000110  5195               	movf	??_i2c_int_handler& (0+255),w,b
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6375                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6376  000112  ACC6               	btfss	4038,6,c	;volatile
  6377  000114  D029               	goto	i2l2961
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6381  000116  9CC6               	bcf	4038,6,c	;volatile
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6385  000118  0100               	movlb	0	; () banked
  6386  00011A  EE20 F01E          	lfsr	2,30
  6387  00011E  0100               	movlb	0	; () banked
  6388  000120  51CD               	movf	_ic_ptr& (0+255),w,b
  6389  000122  26D9               	addwf	fsr2l,f,c
  6390  000124  0100               	movlb	0	; () banked
  6391  000126  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6392  000128  22DA               	addwfc	fsr2h,f,c
  6393  00012A  0E05               	movlw	5
  6394  00012C  6EDF               	movwf	indf2,c
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;my_i2c.c: 116: overrun_error = 1;
  6398  00012E  0100               	movlb	0	; () banked
  6399  000130  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6400  000132  0E01               	movlw	1
  6401  000134  0100               	movlb	0	; () banked
  6402  000136  0100               	movlb	0	; () banked
  6403  000138  6F9D               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6404  00013A  0100               	movlb	0	; () banked
  6405  00013C  5195               	movf	??_i2c_int_handler& (0+255),w,b
  6406                           
  6407                           ; BSR set to: 0
  6408                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6409  00013E  0100               	movlb	0	; () banked
  6410  000140  EE20 F020          	lfsr	2,32
  6411  000144  0100               	movlb	0	; () banked
  6412  000146  51CD               	movf	_ic_ptr& (0+255),w,b
  6413  000148  26D9               	addwf	fsr2l,f,c
  6414  00014A  0100               	movlb	0	; () banked
  6415  00014C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6416  00014E  22DA               	addwfc	fsr2h,f,c
  6417  000150  2ADF               	incf	indf2,f,c
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  6421  000152  0100               	movlb	0	; () banked
  6422  000154  EE20 F01F          	lfsr	2,31
  6423  000158  0100               	movlb	0	; () banked
  6424  00015A  51CD               	movf	_ic_ptr& (0+255),w,b
  6425  00015C  26D9               	addwf	fsr2l,f,c
  6426  00015E  0100               	movlb	0	; () banked
  6427  000160  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6428  000162  22DA               	addwfc	fsr2h,f,c
  6429  000164  0E04               	movlw	4
  6430  000166  6EDF               	movwf	indf2,c
  6431  000168                     i2l2961:
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;my_i2c.c: 119: }
  6435                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  6436  000168  A0C7               	btfss	4039,0,c	;volatile
  6437  00016A  D00A               	goto	i2l2967
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  6441  00016C  CFC9 F09E          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6442                           
  6443                           ; BSR set to: 0
  6444                           ;my_i2c.c: 123: data_read = 1;
  6445  000170  0100               	movlb	0	; () banked
  6446  000172  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6447  000174  0E01               	movlw	1
  6448  000176  0100               	movlb	0	; () banked
  6449  000178  0100               	movlb	0	; () banked
  6450  00017A  6FA1               	movwf	i2c_int_handler@data_read& (0+255),b
  6451  00017C  0100               	movlb	0	; () banked
  6452  00017E  5195               	movf	??_i2c_int_handler& (0+255),w,b
  6453  000180                     i2l2967:
  6454                           
  6455                           ; BSR set to: 0
  6456                           ;my_i2c.c: 124: }
  6457                           ;my_i2c.c: 126: if (!overrun_error) {
  6458  000180  0100               	movlb	0	; () banked
  6459  000182  0100               	movlb	0	; () banked
  6460  000184  679D               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6461  000186  D1CE               	goto	i2l287
  6462  000188  D1B7               	goto	i2l3055
  6463  00018A                     i2l289:
  6464                           
  6465                           ; BSR set to: 0
  6466                           ;my_i2c.c: 129: {
  6467                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  6468  00018A  A6C7               	btfss	4039,3,c	;volatile
  6469  00018C  D1CB               	goto	i2l287
  6470                           
  6471                           ; BSR set to: 0
  6472                           ;my_i2c.c: 132: handle_start(data_read);
  6473  00018E  0100               	movlb	0	; () banked
  6474  000190  0100               	movlb	0	; () banked
  6475  000192  51A1               	movf	i2c_int_handler@data_read& (0+255),w,b
  6476  000194  EC3A  F008         	call	_handle_start
  6477                           
  6478                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  6479  000198  0100               	movlb	0	; () banked
  6480  00019A  EE20 F01E          	lfsr	2,30
  6481  00019E  0100               	movlb	0	; () banked
  6482  0001A0  51CD               	movf	_ic_ptr& (0+255),w,b
  6483  0001A2  26D9               	addwf	fsr2l,f,c
  6484  0001A4  0100               	movlb	0	; () banked
  6485  0001A6  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6486  0001A8  22DA               	addwfc	fsr2h,f,c
  6487  0001AA  0E08               	movlw	8
  6488  0001AC  62DF               	cpfseq	indf2,c
  6489  0001AE  D1BA               	goto	i2l287
  6490                           
  6491                           ; BSR set to: 0
  6492                           ;my_i2c.c: 135: data_read = 0;
  6493  0001B0  0100               	movlb	0	; () banked
  6494  0001B2  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6495  0001B4  0E00               	movlw	0
  6496  0001B6  0100               	movlb	0	; () banked
  6497  0001B8  0100               	movlb	0	; () banked
  6498  0001BA  6FA1               	movwf	i2c_int_handler@data_read& (0+255),b
  6499  0001BC  0100               	movlb	0	; () banked
  6500  0001BE  5195               	movf	??_i2c_int_handler& (0+255),w,b
  6501                           
  6502                           ;my_i2c.c: 136: msg_to_send = 1;
  6503  0001C0  0100               	movlb	0	; () banked
  6504  0001C2  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6505  0001C4  0E01               	movlw	1
  6506  0001C6  0100               	movlb	0	; () banked
  6507  0001C8  0100               	movlb	0	; () banked
  6508  0001CA  6F9F               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6509  0001CC  D187               	goto	L9
  6510  0001CE                     i2l293:
  6511                           
  6512                           ; BSR set to: 0
  6513                           ;my_i2c.c: 142: {
  6514                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  6515  0001CE  A8C7               	btfss	4039,4,c	;volatile
  6516  0001D0  D030               	goto	i2l2987
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;my_i2c.c: 147: ic_ptr->event_count++;
  6520  0001D2  0100               	movlb	0	; () banked
  6521  0001D4  EE20 F01D          	lfsr	2,29
  6522  0001D8  0100               	movlb	0	; () banked
  6523  0001DA  51CD               	movf	_ic_ptr& (0+255),w,b
  6524  0001DC  26D9               	addwf	fsr2l,f,c
  6525  0001DE  0100               	movlb	0	; () banked
  6526  0001E0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6527  0001E2  22DA               	addwfc	fsr2h,f,c
  6528  0001E4  2ADF               	incf	indf2,f,c
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;my_i2c.c: 148: if (data_read) {
  6532  0001E6  0100               	movlb	0	; () banked
  6533  0001E8  0100               	movlb	0	; () banked
  6534  0001EA  51A1               	movf	i2c_int_handler@data_read& (0+255),w,b
  6535  0001EC  B4D8               	btfsc	status,2,c
  6536  0001EE  D179               	goto	L11
  6537                           
  6538                           ; BSR set to: 0
  6539                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  6540  0001F0  BAC7               	btfsc	4039,5,c	;volatile
  6541  0001F2  D009               	goto	i2l2985
  6542                           
  6543                           ; BSR set to: 0
  6544                           ;my_i2c.c: 150: msg_ready = 1;
  6545  0001F4  0100               	movlb	0	; () banked
  6546  0001F6  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6547  0001F8  0E01               	movlw	1
  6548  0001FA  0100               	movlb	0	; () banked
  6549  0001FC  0100               	movlb	0	; () banked
  6550  0001FE  6FA0               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6551  000200  0100               	movlb	0	; () banked
  6552  000202  5195               	movf	??_i2c_int_handler& (0+255),w,b
  6553                           
  6554                           ;my_i2c.c: 151: } else {
  6555  000204  D16E               	goto	L11
  6556  000206                     i2l2985:
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;my_i2c.c: 152: ic_ptr->error_count++;
  6560  000206  0100               	movlb	0	; () banked
  6561  000208  EE20 F020          	lfsr	2,32
  6562  00020C  0100               	movlb	0	; () banked
  6563  00020E  51CD               	movf	_ic_ptr& (0+255),w,b
  6564  000210  26D9               	addwf	fsr2l,f,c
  6565  000212  0100               	movlb	0	; () banked
  6566  000214  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6567  000216  22DA               	addwfc	fsr2h,f,c
  6568  000218  2ADF               	incf	indf2,f,c
  6569                           
  6570                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  6571  00021A  0100               	movlb	0	; () banked
  6572  00021C  EE20 F01F          	lfsr	2,31
  6573  000220  0100               	movlb	0	; () banked
  6574  000222  51CD               	movf	_ic_ptr& (0+255),w,b
  6575  000224  26D9               	addwf	fsr2l,f,c
  6576  000226  0100               	movlb	0	; () banked
  6577  000228  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6578  00022A  22DA               	addwfc	fsr2h,f,c
  6579  00022C  0E06               	movlw	6
  6580  00022E  6EDF               	movwf	indf2,c
  6581                           
  6582                           ; BSR set to: 0
  6583  000230  D158               	goto	L11
  6584  000232                     i2l2987:
  6585                           
  6586                           ; BSR set to: 0
  6587  000232  0100               	movlb	0	; () banked
  6588  000234  0100               	movlb	0	; () banked
  6589  000236  51A1               	movf	i2c_int_handler@data_read& (0+255),w,b
  6590  000238  B4D8               	btfsc	status,2,c
  6591  00023A  D174               	goto	i2l287
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;my_i2c.c: 158: ic_ptr->event_count++;
  6595  00023C  0100               	movlb	0	; () banked
  6596  00023E  EE20 F01D          	lfsr	2,29
  6597  000242  0100               	movlb	0	; () banked
  6598  000244  51CD               	movf	_ic_ptr& (0+255),w,b
  6599  000246  26D9               	addwf	fsr2l,f,c
  6600  000248  0100               	movlb	0	; () banked
  6601  00024A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6602  00024C  22DA               	addwfc	fsr2h,f,c
  6603  00024E  2ADF               	incf	indf2,f,c
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  6607  000250  BAC7               	btfsc	4039,5,c	;volatile
  6608  000252  D019               	goto	i2l3003
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  6612  000254  B4C7               	btfsc	4039,2,c	;volatile
  6613  000256  D00B               	goto	i2l2997
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  6617  000258  0100               	movlb	0	; () banked
  6618  00025A  EE20 F01E          	lfsr	2,30
  6619  00025E  0100               	movlb	0	; () banked
  6620  000260  51CD               	movf	_ic_ptr& (0+255),w,b
  6621  000262  26D9               	addwf	fsr2l,f,c
  6622  000264  0100               	movlb	0	; () banked
  6623  000266  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6624  000268  22DA               	addwfc	fsr2h,f,c
  6625  00026A  0E07               	movlw	7
  6626  00026C  D076               	goto	L8
  6627  00026E                     i2l2997:
  6628                           
  6629                           ; BSR set to: 0
  6630                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  6631  00026E  0100               	movlb	0	; () banked
  6632  000270  EE20 F01E          	lfsr	2,30
  6633  000274  0100               	movlb	0	; () banked
  6634  000276  51CD               	movf	_ic_ptr& (0+255),w,b
  6635  000278  26D9               	addwf	fsr2l,f,c
  6636  00027A  0100               	movlb	0	; () banked
  6637  00027C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6638  00027E  22DA               	addwfc	fsr2h,f,c
  6639  000280  0E08               	movlw	8
  6640  000282  6EDF               	movwf	indf2,c
  6641  000284  D11D               	goto	L12
  6642  000286                     i2l3003:
  6643                           
  6644                           ; BSR set to: 0
  6645                           ;my_i2c.c: 169: ic_ptr->error_count++;
  6646  000286  0100               	movlb	0	; () banked
  6647  000288  EE20 F020          	lfsr	2,32
  6648  00028C  0100               	movlb	0	; () banked
  6649  00028E  51CD               	movf	_ic_ptr& (0+255),w,b
  6650  000290  26D9               	addwf	fsr2l,f,c
  6651  000292  0100               	movlb	0	; () banked
  6652  000294  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6653  000296  22DA               	addwfc	fsr2h,f,c
  6654  000298  2ADF               	incf	indf2,f,c
  6655                           
  6656                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  6657  00029A  0100               	movlb	0	; () banked
  6658  00029C  EE20 F01E          	lfsr	2,30
  6659  0002A0  0100               	movlb	0	; () banked
  6660  0002A2  51CD               	movf	_ic_ptr& (0+255),w,b
  6661  0002A4  26D9               	addwf	fsr2l,f,c
  6662  0002A6  0100               	movlb	0	; () banked
  6663  0002A8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6664  0002AA  22DA               	addwfc	fsr2h,f,c
  6665  0002AC  0E05               	movlw	5
  6666  0002AE  6EDF               	movwf	indf2,c
  6667                           
  6668                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  6669  0002B0  0100               	movlb	0	; () banked
  6670  0002B2  EE20 F01F          	lfsr	2,31
  6671  0002B6  0100               	movlb	0	; () banked
  6672  0002B8  51CD               	movf	_ic_ptr& (0+255),w,b
  6673  0002BA  26D9               	addwf	fsr2l,f,c
  6674  0002BC  0100               	movlb	0	; () banked
  6675  0002BE  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6676  0002C0  22DA               	addwfc	fsr2h,f,c
  6677  0002C2  0E06               	movlw	6
  6678  0002C4  D04A               	goto	L8
  6679  0002C6                     i2l3005:
  6680                           
  6681                           ; BSR set to: 0
  6682                           ;my_i2c.c: 177: {
  6683                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6684  0002C6  0100               	movlb	0	; () banked
  6685  0002C8  EE20 F03E          	lfsr	2,62
  6686  0002CC  0100               	movlb	0	; () banked
  6687  0002CE  51CD               	movf	_ic_ptr& (0+255),w,b
  6688  0002D0  26D9               	addwf	fsr2l,f,c
  6689  0002D2  0100               	movlb	0	; () banked
  6690  0002D4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6691  0002D6  22DA               	addwfc	fsr2h,f,c
  6692  0002D8  50DF               	movf	indf2,w,c
  6693  0002DA  0100               	movlb	0	; () banked
  6694  0002DC  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6695  0002DE  0100               	movlb	0	; () banked
  6696  0002E0  EE20 F03D          	lfsr	2,61
  6697  0002E4  0100               	movlb	0	; () banked
  6698  0002E6  51CD               	movf	_ic_ptr& (0+255),w,b
  6699  0002E8  26D9               	addwf	fsr2l,f,c
  6700  0002EA  0100               	movlb	0	; () banked
  6701  0002EC  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6702  0002EE  22DA               	addwfc	fsr2h,f,c
  6703  0002F0  50DF               	movf	indf2,w,c
  6704  0002F2  0100               	movlb	0	; () banked
  6705  0002F4  5D95               	subwf	??_i2c_int_handler& (0+255),w,b
  6706  0002F6  B0D8               	btfsc	status,0,c
  6707  0002F8  D0F4               	goto	L11
  6708                           
  6709                           ; BSR set to: 0
  6710                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6711  0002FA  0100               	movlb	0	; () banked
  6712  0002FC  EE20 F03E          	lfsr	2,62
  6713  000300  0100               	movlb	0	; () banked
  6714  000302  51CD               	movf	_ic_ptr& (0+255),w,b
  6715  000304  26D9               	addwf	fsr2l,f,c
  6716  000306  0100               	movlb	0	; () banked
  6717  000308  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6718  00030A  22DA               	addwfc	fsr2h,f,c
  6719  00030C  50DF               	movf	indf2,w,c
  6720  00030E  0100               	movlb	0	; () banked
  6721  000310  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6722  000312  0100               	movlb	0	; () banked
  6723  000314  5195               	movf	??_i2c_int_handler& (0+255),w,b
  6724  000316  0D01               	mullw	1
  6725  000318  0E21               	movlw	33
  6726  00031A  26F3               	addwf	prodl,f,c
  6727  00031C  0E00               	movlw	0
  6728  00031E  22F4               	addwfc	prodh,f,c
  6729  000320  50F3               	movf	prodl,w,c
  6730  000322  0100               	movlb	0	; () banked
  6731  000324  0100               	movlb	0	; () banked
  6732  000326  25CD               	addwf	_ic_ptr& (0+255),w,b
  6733  000328  6ED9               	movwf	fsr2l,c
  6734  00032A  50F4               	movf	prodh,w,c
  6735  00032C  0100               	movlb	0	; () banked
  6736  00032E  0100               	movlb	0	; () banked
  6737  000330  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6738  000332  6EDA               	movwf	fsr2h,c
  6739  000334  50DF               	movf	indf2,w,c
  6740  000336  6EC9               	movwf	4041,c	;volatile
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  6744  000338  0100               	movlb	0	; () banked
  6745  00033A  EE20 F03E          	lfsr	2,62
  6746  00033E  0100               	movlb	0	; () banked
  6747  000340  51CD               	movf	_ic_ptr& (0+255),w,b
  6748  000342  26D9               	addwf	fsr2l,f,c
  6749  000344  0100               	movlb	0	; () banked
  6750  000346  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6751  000348  22DA               	addwfc	fsr2h,f,c
  6752  00034A  2ADF               	incf	indf2,f,c
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;my_i2c.c: 181: data_written = 1;
  6756  00034C  0100               	movlb	0	; () banked
  6757  00034E  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6758  000350  0E01               	movlw	1
  6759  000352  0100               	movlb	0	; () banked
  6760  000354  0100               	movlb	0	; () banked
  6761  000356  6F9C               	movwf	i2c_int_handler@data_written& (0+255),b
  6762  000358  D0C1               	goto	L9
  6763  00035A                     L8:
  6764  00035A  6EDF               	movwf	indf2,c
  6765  00035C  D0E3               	goto	i2l287
  6766  00035E                     i2l307:
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;my_i2c.c: 189: {
  6770                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  6771  00035E  A8C7               	btfss	4039,4,c	;volatile
  6772  000360  D062               	goto	i2l3033
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;my_i2c.c: 193: ic_ptr->event_count++;
  6776  000362  0100               	movlb	0	; () banked
  6777  000364  EE20 F01D          	lfsr	2,29
  6778  000368  0100               	movlb	0	; () banked
  6779  00036A  51CD               	movf	_ic_ptr& (0+255),w,b
  6780  00036C  26D9               	addwf	fsr2l,f,c
  6781  00036E  0100               	movlb	0	; () banked
  6782  000370  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6783  000372  22DA               	addwfc	fsr2h,f,c
  6784  000374  2ADF               	incf	indf2,f,c
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;my_i2c.c: 194: if (data_read) {
  6788  000376  0100               	movlb	0	; () banked
  6789  000378  0100               	movlb	0	; () banked
  6790  00037A  51A1               	movf	i2c_int_handler@data_read& (0+255),w,b
  6791  00037C  B4D8               	btfsc	status,2,c
  6792  00037E  D04A               	goto	i2l3029
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  6796  000380  AAC7               	btfss	4039,5,c	;volatile
  6797  000382  D027               	goto	i2l3027
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6801  000384  0100               	movlb	0	; () banked
  6802  000386  EE20 F01C          	lfsr	2,28
  6803  00038A  0100               	movlb	0	; () banked
  6804  00038C  51CD               	movf	_ic_ptr& (0+255),w,b
  6805  00038E  26D9               	addwf	fsr2l,f,c
  6806  000390  0100               	movlb	0	; () banked
  6807  000392  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6808  000394  22DA               	addwfc	fsr2h,f,c
  6809  000396  50DF               	movf	indf2,w,c
  6810  000398  0100               	movlb	0	; () banked
  6811  00039A  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6812  00039C  0100               	movlb	0	; () banked
  6813  00039E  5195               	movf	??_i2c_int_handler& (0+255),w,b
  6814  0003A0  0D01               	mullw	1
  6815  0003A2  50F3               	movf	prodl,w,c
  6816  0003A4  0100               	movlb	0	; () banked
  6817  0003A6  0100               	movlb	0	; () banked
  6818  0003A8  25CD               	addwf	_ic_ptr& (0+255),w,b
  6819  0003AA  6ED9               	movwf	fsr2l,c
  6820  0003AC  50F4               	movf	prodh,w,c
  6821  0003AE  0100               	movlb	0	; () banked
  6822  0003B0  0100               	movlb	0	; () banked
  6823  0003B2  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6824  0003B4  6EDA               	movwf	fsr2h,c
  6825  0003B6  0100               	movlb	0	; () banked
  6826  0003B8  C09E  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;my_i2c.c: 197: ic_ptr->buflen++;
  6830  0003BC  0100               	movlb	0	; () banked
  6831  0003BE  EE20 F01C          	lfsr	2,28
  6832  0003C2  0100               	movlb	0	; () banked
  6833  0003C4  51CD               	movf	_ic_ptr& (0+255),w,b
  6834  0003C6  26D9               	addwf	fsr2l,f,c
  6835  0003C8  0100               	movlb	0	; () banked
  6836  0003CA  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6837  0003CC  22DA               	addwfc	fsr2h,f,c
  6838  0003CE  2ADF               	incf	indf2,f,c
  6839  0003D0  D021               	goto	i2l3029
  6840  0003D2                     i2l3027:
  6841                           
  6842                           ; BSR set to: 0
  6843                           ;my_i2c.c: 200: ic_ptr->error_count++;
  6844  0003D2  0100               	movlb	0	; () banked
  6845  0003D4  EE20 F020          	lfsr	2,32
  6846  0003D8  0100               	movlb	0	; () banked
  6847  0003DA  51CD               	movf	_ic_ptr& (0+255),w,b
  6848  0003DC  26D9               	addwf	fsr2l,f,c
  6849  0003DE  0100               	movlb	0	; () banked
  6850  0003E0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6851  0003E2  22DA               	addwfc	fsr2h,f,c
  6852  0003E4  2ADF               	incf	indf2,f,c
  6853                           
  6854                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  6855  0003E6  0100               	movlb	0	; () banked
  6856  0003E8  EE20 F01F          	lfsr	2,31
  6857  0003EC  0100               	movlb	0	; () banked
  6858  0003EE  51CD               	movf	_ic_ptr& (0+255),w,b
  6859  0003F0  26D9               	addwf	fsr2l,f,c
  6860  0003F2  0100               	movlb	0	; () banked
  6861  0003F4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6862  0003F6  22DA               	addwfc	fsr2h,f,c
  6863  0003F8  0E06               	movlw	6
  6864  0003FA  6EDF               	movwf	indf2,c
  6865                           
  6866                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  6867  0003FC  0100               	movlb	0	; () banked
  6868  0003FE  EE20 F01E          	lfsr	2,30
  6869  000402  0100               	movlb	0	; () banked
  6870  000404  51CD               	movf	_ic_ptr& (0+255),w,b
  6871  000406  26D9               	addwf	fsr2l,f,c
  6872  000408  0100               	movlb	0	; () banked
  6873  00040A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6874  00040C  22DA               	addwfc	fsr2h,f,c
  6875  00040E  0E05               	movlw	5
  6876  000410  6EDF               	movwf	indf2,c
  6877  000412  D067               	goto	L11
  6878  000414                     i2l3029:
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;my_i2c.c: 205: msg_ready = 1;
  6882  000414  0100               	movlb	0	; () banked
  6883  000416  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6884  000418  0E01               	movlw	1
  6885  00041A  0100               	movlb	0	; () banked
  6886  00041C  0100               	movlb	0	; () banked
  6887  00041E  6FA0               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6888  000420  0100               	movlb	0	; () banked
  6889  000422  5195               	movf	??_i2c_int_handler& (0+255),w,b
  6890                           
  6891                           ; BSR set to: 0
  6892  000424  D05E               	goto	L11
  6893  000426                     i2l3033:
  6894                           
  6895                           ; BSR set to: 0
  6896  000426  0100               	movlb	0	; () banked
  6897  000428  0100               	movlb	0	; () banked
  6898  00042A  51A1               	movf	i2c_int_handler@data_read& (0+255),w,b
  6899  00042C  B4D8               	btfsc	status,2,c
  6900  00042E  D07A               	goto	i2l287
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;my_i2c.c: 209: ic_ptr->event_count++;
  6904  000430  0100               	movlb	0	; () banked
  6905  000432  EE20 F01D          	lfsr	2,29
  6906  000436  0100               	movlb	0	; () banked
  6907  000438  51CD               	movf	_ic_ptr& (0+255),w,b
  6908  00043A  26D9               	addwf	fsr2l,f,c
  6909  00043C  0100               	movlb	0	; () banked
  6910  00043E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6911  000440  22DA               	addwfc	fsr2h,f,c
  6912  000442  2ADF               	incf	indf2,f,c
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  6916  000444  AAC7               	btfss	4039,5,c	;volatile
  6917  000446  D027               	goto	i2l315
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6921  000448  0100               	movlb	0	; () banked
  6922  00044A  EE20 F01C          	lfsr	2,28
  6923  00044E  0100               	movlb	0	; () banked
  6924  000450  51CD               	movf	_ic_ptr& (0+255),w,b
  6925  000452  26D9               	addwf	fsr2l,f,c
  6926  000454  0100               	movlb	0	; () banked
  6927  000456  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6928  000458  22DA               	addwfc	fsr2h,f,c
  6929  00045A  50DF               	movf	indf2,w,c
  6930  00045C  0100               	movlb	0	; () banked
  6931  00045E  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6932  000460  0100               	movlb	0	; () banked
  6933  000462  5195               	movf	??_i2c_int_handler& (0+255),w,b
  6934  000464  0D01               	mullw	1
  6935  000466  50F3               	movf	prodl,w,c
  6936  000468  0100               	movlb	0	; () banked
  6937  00046A  0100               	movlb	0	; () banked
  6938  00046C  25CD               	addwf	_ic_ptr& (0+255),w,b
  6939  00046E  6ED9               	movwf	fsr2l,c
  6940  000470  50F4               	movf	prodh,w,c
  6941  000472  0100               	movlb	0	; () banked
  6942  000474  0100               	movlb	0	; () banked
  6943  000476  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6944  000478  6EDA               	movwf	fsr2h,c
  6945  00047A  0100               	movlb	0	; () banked
  6946  00047C  C09E  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6947                           
  6948                           ; BSR set to: 0
  6949                           ;my_i2c.c: 212: ic_ptr->buflen++;
  6950  000480  0100               	movlb	0	; () banked
  6951  000482  EE20 F01C          	lfsr	2,28
  6952  000486  0100               	movlb	0	; () banked
  6953  000488  51CD               	movf	_ic_ptr& (0+255),w,b
  6954  00048A  26D9               	addwf	fsr2l,f,c
  6955  00048C  0100               	movlb	0	; () banked
  6956  00048E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6957  000490  22DA               	addwfc	fsr2h,f,c
  6958  000492  2ADF               	incf	indf2,f,c
  6959                           
  6960                           ;my_i2c.c: 213: } else {
  6961  000494  D047               	goto	i2l287
  6962  000496                     i2l315:
  6963                           
  6964                           ; BSR set to: 0
  6965                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  6966  000496  A4C7               	btfss	4039,2,c	;volatile
  6967  000498  D6B6               	goto	i2l2985
  6968                           
  6969                           ; BSR set to: 0
  6970                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  6971  00049A  0100               	movlb	0	; () banked
  6972  00049C  EE20 F01E          	lfsr	2,30
  6973  0004A0  0100               	movlb	0	; () banked
  6974  0004A2  51CD               	movf	_ic_ptr& (0+255),w,b
  6975  0004A4  26D9               	addwf	fsr2l,f,c
  6976  0004A6  0100               	movlb	0	; () banked
  6977  0004A8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  6978  0004AA  22DA               	addwfc	fsr2h,f,c
  6979  0004AC  0E08               	movlw	8
  6980  0004AE  6EDF               	movwf	indf2,c
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;my_i2c.c: 216: msg_ready = 1;
  6984  0004B0  0100               	movlb	0	; () banked
  6985  0004B2  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6986  0004B4  0E01               	movlw	1
  6987  0004B6  0100               	movlb	0	; () banked
  6988  0004B8  0100               	movlb	0	; () banked
  6989  0004BA  6FA0               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6990  0004BC  0100               	movlb	0	; () banked
  6991  0004BE  5195               	movf	??_i2c_int_handler& (0+255),w,b
  6992  0004C0                     L12:
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;my_i2c.c: 217: msg_to_send = 1;
  6996  0004C0  0100               	movlb	0	; () banked
  6997  0004C2  6F95               	movwf	??_i2c_int_handler& (0+255),b
  6998  0004C4  0E01               	movlw	1
  6999  0004C6  0100               	movlb	0	; () banked
  7000  0004C8  0100               	movlb	0	; () banked
  7001  0004CA  6F9F               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7002  0004CC  0100               	movlb	0	; () banked
  7003  0004CE  5195               	movf	??_i2c_int_handler& (0+255),w,b
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;my_i2c.c: 219: data_read = 0;
  7007  0004D0  0100               	movlb	0	; () banked
  7008  0004D2  6F95               	movwf	??_i2c_int_handler& (0+255),b
  7009  0004D4  0E00               	movlw	0
  7010  0004D6  0100               	movlb	0	; () banked
  7011  0004D8  0100               	movlb	0	; () banked
  7012  0004DA  6FA1               	movwf	i2c_int_handler@data_read& (0+255),b
  7013  0004DC                     L9:
  7014  0004DC  0100               	movlb	0	; () banked
  7015  0004DE  5195               	movf	??_i2c_int_handler& (0+255),w,b
  7016                           
  7017                           ;my_i2c.c: 220: } else {
  7018  0004E0  D021               	goto	i2l287
  7019  0004E2                     L11:
  7020                           
  7021                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  7022  0004E2  0100               	movlb	0	; () banked
  7023  0004E4  EE20 F01E          	lfsr	2,30
  7024  0004E8  0100               	movlb	0	; () banked
  7025  0004EA  51CD               	movf	_ic_ptr& (0+255),w,b
  7026  0004EC  26D9               	addwf	fsr2l,f,c
  7027  0004EE  0100               	movlb	0	; () banked
  7028  0004F0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7029  0004F2  22DA               	addwfc	fsr2h,f,c
  7030  0004F4  0E05               	movlw	5
  7031  0004F6  D731               	goto	L8
  7032  0004F8                     i2l3055:
  7033                           
  7034                           ; BSR set to: 0
  7035  0004F8  0100               	movlb	0	; () banked
  7036  0004FA  EE20 F01E          	lfsr	2,30
  7037  0004FE  0100               	movlb	0	; () banked
  7038  000500  51CD               	movf	_ic_ptr& (0+255),w,b
  7039  000502  26D9               	addwf	fsr2l,f,c
  7040  000504  0100               	movlb	0	; () banked
  7041  000506  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7042  000508  22DA               	addwfc	fsr2h,f,c
  7043  00050A  50DF               	movf	indf2,w,c
  7044                           
  7045                           ; Switch size 1, requested type "space"
  7046                           ; Number of cases is 4, Range of values is 5 to 8
  7047                           ; switch strategies available:
  7048                           ; Name         Instructions Cycles
  7049                           ; simple_byte           13     7 (average)
  7050                           ;	Chosen strategy is simple_byte
  7051  00050C  0A05               	xorlw	5	; case 5
  7052  00050E  B4D8               	btfsc	status,2,c
  7053  000510  D63C               	goto	i2l289
  7054  000512  0A03               	xorlw	3	; case 6
  7055  000514  B4D8               	btfsc	status,2,c
  7056  000516  D65B               	goto	i2l293
  7057  000518  0A01               	xorlw	1	; case 7
  7058  00051A  B4D8               	btfsc	status,2,c
  7059  00051C  D720               	goto	i2l307
  7060  00051E  0A0F               	xorlw	15	; case 8
  7061  000520  B4D8               	btfsc	status,2,c
  7062  000522  D6D1               	goto	i2l3005
  7063  000524                     i2l287:
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;my_i2c.c: 230: }
  7067                           ;my_i2c.c: 233: if (data_read || data_written) {
  7068  000524  0100               	movlb	0	; () banked
  7069  000526  0100               	movlb	0	; () banked
  7070  000528  67A1               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7071  00052A  D005               	goto	i2l321
  7072                           
  7073                           ; BSR set to: 0
  7074  00052C  0100               	movlb	0	; () banked
  7075  00052E  0100               	movlb	0	; () banked
  7076  000530  519C               	movf	i2c_int_handler@data_written& (0+255),w,b
  7077  000532  B4D8               	btfsc	status,2,c
  7078  000534  D002               	goto	i2l3061
  7079  000536                     i2l321:
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  7083  000536  A8C6               	btfss	4038,4,c	;volatile
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  7087  000538  88C6               	bsf	4038,4,c	;volatile
  7088  00053A                     i2l3061:
  7089                           
  7090                           ; BSR set to: 0
  7091                           ;my_i2c.c: 237: }
  7092                           ;my_i2c.c: 238: }
  7093                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 28 - 2) && (!msg_ready)) {
  7094  00053A  0100               	movlb	0	; () banked
  7095  00053C  EE20 F01C          	lfsr	2,28
  7096  000540  0100               	movlb	0	; () banked
  7097  000542  51CD               	movf	_ic_ptr& (0+255),w,b
  7098  000544  26D9               	addwf	fsr2l,f,c
  7099  000546  0100               	movlb	0	; () banked
  7100  000548  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7101  00054A  22DA               	addwfc	fsr2h,f,c
  7102  00054C  0E1A               	movlw	26
  7103  00054E  64DF               	cpfsgt	indf2,c
  7104  000550  D024               	goto	i2l3067
  7105                           
  7106                           ; BSR set to: 0
  7107  000552  0100               	movlb	0	; () banked
  7108  000554  0100               	movlb	0	; () banked
  7109  000556  67A0               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7110  000558  D020               	goto	i2l3067
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  7114  00055A  0100               	movlb	0	; () banked
  7115  00055C  EE20 F01E          	lfsr	2,30
  7116  000560  0100               	movlb	0	; () banked
  7117  000562  51CD               	movf	_ic_ptr& (0+255),w,b
  7118  000564  26D9               	addwf	fsr2l,f,c
  7119  000566  0100               	movlb	0	; () banked
  7120  000568  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7121  00056A  22DA               	addwfc	fsr2h,f,c
  7122  00056C  0E05               	movlw	5
  7123  00056E  6EDF               	movwf	indf2,c
  7124                           
  7125                           ;my_i2c.c: 243: ic_ptr->error_count++;
  7126  000570  0100               	movlb	0	; () banked
  7127  000572  EE20 F020          	lfsr	2,32
  7128  000576  0100               	movlb	0	; () banked
  7129  000578  51CD               	movf	_ic_ptr& (0+255),w,b
  7130  00057A  26D9               	addwf	fsr2l,f,c
  7131  00057C  0100               	movlb	0	; () banked
  7132  00057E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7133  000580  22DA               	addwfc	fsr2h,f,c
  7134  000582  2ADF               	incf	indf2,f,c
  7135                           
  7136                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  7137  000584  0100               	movlb	0	; () banked
  7138  000586  EE20 F01F          	lfsr	2,31
  7139  00058A  0100               	movlb	0	; () banked
  7140  00058C  51CD               	movf	_ic_ptr& (0+255),w,b
  7141  00058E  26D9               	addwf	fsr2l,f,c
  7142  000590  0100               	movlb	0	; () banked
  7143  000592  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7144  000594  22DA               	addwfc	fsr2h,f,c
  7145  000596  0E07               	movlw	7
  7146  000598  6EDF               	movwf	indf2,c
  7147  00059A                     i2l3067:
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;my_i2c.c: 245: }
  7151                           ;my_i2c.c: 247: if (msg_ready) {
  7152  00059A  0100               	movlb	0	; () banked
  7153  00059C  0100               	movlb	0	; () banked
  7154  00059E  51A0               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7155  0005A0  B4D8               	btfsc	status,2,c
  7156  0005A2  D048               	goto	i2l3075
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7160  0005A4  0100               	movlb	0	; () banked
  7161  0005A6  EE20 F01D          	lfsr	2,29
  7162  0005AA  0100               	movlb	0	; () banked
  7163  0005AC  51CD               	movf	_ic_ptr& (0+255),w,b
  7164  0005AE  26D9               	addwf	fsr2l,f,c
  7165  0005B0  0100               	movlb	0	; () banked
  7166  0005B2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7167  0005B4  22DA               	addwfc	fsr2h,f,c
  7168  0005B6  0100               	movlb	0	; () banked
  7169  0005B8  EE10 F01C          	lfsr	1,28
  7170  0005BC  0100               	movlb	0	; () banked
  7171  0005BE  51CD               	movf	_ic_ptr& (0+255),w,b
  7172  0005C0  26E1               	addwf	fsr1l,f,c
  7173  0005C2  0100               	movlb	0	; () banked
  7174  0005C4  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7175  0005C6  22E2               	addwfc	fsr1h,f,c
  7176  0005C8  50E7               	movf	indf1,w,c
  7177  0005CA  0100               	movlb	0	; () banked
  7178  0005CC  6F95               	movwf	??_i2c_int_handler& (0+255),b
  7179  0005CE  0100               	movlb	0	; () banked
  7180  0005D0  5195               	movf	??_i2c_int_handler& (0+255),w,b
  7181  0005D2  0D01               	mullw	1
  7182  0005D4  50F3               	movf	prodl,w,c
  7183  0005D6  0100               	movlb	0	; () banked
  7184  0005D8  0100               	movlb	0	; () banked
  7185  0005DA  25CD               	addwf	_ic_ptr& (0+255),w,b
  7186  0005DC  6EE1               	movwf	fsr1l,c
  7187  0005DE  50F4               	movf	prodh,w,c
  7188  0005E0  0100               	movlb	0	; () banked
  7189  0005E2  0100               	movlb	0	; () banked
  7190  0005E4  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7191  0005E6  6EE2               	movwf	fsr1h,c
  7192  0005E8  CFDF FFE7          	movff	indf2,indf1
  7193                           
  7194                           ; BSR set to: 0
  7195                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7196  0005EC  0100               	movlb	0	; () banked
  7197  0005EE  6F95               	movwf	??_i2c_int_handler& (0+255),b
  7198  0005F0  0E28               	movlw	40
  7199  0005F2  0100               	movlb	0	; () banked
  7200  0005F4  0100               	movlb	0	; () banked
  7201  0005F6  6F8F               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7202  0005F8  0100               	movlb	0	; () banked
  7203  0005FA  5195               	movf	??_i2c_int_handler& (0+255),w,b
  7204  0005FC  0100               	movlb	0	; () banked
  7205  0005FE  0100               	movlb	0	; () banked
  7206  000600  C0CE  F091         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7207  000604  0100               	movlb	0	; () banked
  7208  000606  0100               	movlb	0	; () banked
  7209  000608  C0CD  F090         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7210  00060C  0100               	movlb	0	; () banked
  7211  00060E  EE20 F01C          	lfsr	2,28
  7212  000612  0100               	movlb	0	; () banked
  7213  000614  51CD               	movf	_ic_ptr& (0+255),w,b
  7214  000616  26D9               	addwf	fsr2l,f,c
  7215  000618  0100               	movlb	0	; () banked
  7216  00061A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7217  00061C  22DA               	addwfc	fsr2h,f,c
  7218  00061E  50DF               	movf	indf2,w,c
  7219  000620  0100               	movlb	0	; () banked
  7220  000622  6F96               	movwf	(??_i2c_int_handler+1)& (0+255),b
  7221  000624  0100               	movlb	0	; () banked
  7222  000626  2996               	incf	(??_i2c_int_handler+1)& (0+255),w,b
  7223  000628  EC39  F00D         	call	_ToMainHigh_sendmsg
  7224                           
  7225                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  7226  00062C  0100               	movlb	0	; () banked
  7227  00062E  EE20 F01C          	lfsr	2,28
  7228  000632  D04B               	goto	L10
  7229  000634                     i2l3075:
  7230                           
  7231                           ; BSR set to: 0
  7232  000634  0100               	movlb	0	; () banked
  7233  000636  EE20 F020          	lfsr	2,32
  7234  00063A  0100               	movlb	0	; () banked
  7235  00063C  51CD               	movf	_ic_ptr& (0+255),w,b
  7236  00063E  26D9               	addwf	fsr2l,f,c
  7237  000640  0100               	movlb	0	; () banked
  7238  000642  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7239  000644  22DA               	addwfc	fsr2h,f,c
  7240  000646  50DF               	movf	indf2,w,c
  7241  000648  B4D8               	btfsc	status,2,c
  7242  00064A  D047               	goto	i2l3083
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  7246  00064C  0100               	movlb	0	; () banked
  7247  00064E  EE20 F020          	lfsr	2,32
  7248  000652  0100               	movlb	0	; () banked
  7249  000654  51CD               	movf	_ic_ptr& (0+255),w,b
  7250  000656  26D9               	addwf	fsr2l,f,c
  7251  000658  0100               	movlb	0	; () banked
  7252  00065A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7253  00065C  22DA               	addwfc	fsr2h,f,c
  7254  00065E  50DF               	movf	indf2,w,c
  7255  000660  0100               	movlb	0	; () banked
  7256  000662  0100               	movlb	0	; () banked
  7257  000664  6F99               	movwf	i2c_int_handler@error_buf& (0+255),b
  7258                           
  7259                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  7260  000666  0100               	movlb	0	; () banked
  7261  000668  EE20 F01F          	lfsr	2,31
  7262  00066C  0100               	movlb	0	; () banked
  7263  00066E  51CD               	movf	_ic_ptr& (0+255),w,b
  7264  000670  26D9               	addwf	fsr2l,f,c
  7265  000672  0100               	movlb	0	; () banked
  7266  000674  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7267  000676  22DA               	addwfc	fsr2h,f,c
  7268  000678  50DF               	movf	indf2,w,c
  7269  00067A  0100               	movlb	0	; () banked
  7270  00067C  0100               	movlb	0	; () banked
  7271  00067E  6F9A               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7272                           
  7273                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  7274  000680  0100               	movlb	0	; () banked
  7275  000682  EE20 F01D          	lfsr	2,29
  7276  000686  0100               	movlb	0	; () banked
  7277  000688  51CD               	movf	_ic_ptr& (0+255),w,b
  7278  00068A  26D9               	addwf	fsr2l,f,c
  7279  00068C  0100               	movlb	0	; () banked
  7280  00068E  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7281  000690  22DA               	addwfc	fsr2h,f,c
  7282  000692  50DF               	movf	indf2,w,c
  7283  000694  0100               	movlb	0	; () banked
  7284  000696  0100               	movlb	0	; () banked
  7285  000698  6F9B               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7289  00069A  0100               	movlb	0	; () banked
  7290  00069C  6F95               	movwf	??_i2c_int_handler& (0+255),b
  7291  00069E  0E29               	movlw	41
  7292  0006A0  0100               	movlb	0	; () banked
  7293  0006A2  0100               	movlb	0	; () banked
  7294  0006A4  6F8F               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7295  0006A6  0100               	movlb	0	; () banked
  7296  0006A8  5195               	movf	??_i2c_int_handler& (0+255),w,b
  7297  0006AA  0100               	movlb	0	; () banked
  7298  0006AC  0E00               	movlw	high i2c_int_handler@error_buf
  7299  0006AE  0100               	movlb	0	; () banked
  7300  0006B0  0100               	movlb	0	; () banked
  7301  0006B2  6F91               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7302  0006B4  0100               	movlb	0	; () banked
  7303  0006B6  0E99               	movlw	low i2c_int_handler@error_buf
  7304  0006B8  0100               	movlb	0	; () banked
  7305  0006BA  0100               	movlb	0	; () banked
  7306  0006BC  6F90               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7307  0006BE  0E03               	movlw	3
  7308  0006C0  EC39  F00D         	call	_ToMainHigh_sendmsg
  7309                           
  7310                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  7311  0006C4  0100               	movlb	0	; () banked
  7312  0006C6  EE20 F020          	lfsr	2,32
  7313  0006CA                     L10:
  7314  0006CA  0100               	movlb	0	; () banked
  7315  0006CC  51CD               	movf	_ic_ptr& (0+255),w,b
  7316  0006CE  26D9               	addwf	fsr2l,f,c
  7317  0006D0  0100               	movlb	0	; () banked
  7318  0006D2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7319  0006D4  22DA               	addwfc	fsr2h,f,c
  7320  0006D6  0E00               	movlw	0
  7321  0006D8  6EDF               	movwf	indf2,c
  7322  0006DA                     i2l3083:
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;my_i2c.c: 257: }
  7326                           ;my_i2c.c: 258: if (msg_to_send) {
  7327  0006DA  0100               	movlb	0	; () banked
  7328  0006DC  0100               	movlb	0	; () banked
  7329  0006DE  519F               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7330  0006E0  B4D8               	btfsc	status,2,c
  7331  0006E2  0012               	return	
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;my_i2c.c: 259: int length = 0;
  7335  0006E4  0E00               	movlw	0
  7336  0006E6  0100               	movlb	0	; () banked
  7337  0006E8  0100               	movlb	0	; () banked
  7338  0006EA  6F98               	movwf	(i2c_int_handler@length+1)& (0+255),b
  7339  0006EC  0E00               	movlw	0
  7340  0006EE  0100               	movlb	0	; () banked
  7341  0006F0  6F97               	movwf	i2c_int_handler@length& (0+255),b
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;my_i2c.c: 263: if(ic_ptr->buffer[0] == 0xAA){
  7345  0006F2  0EAA               	movlw	170
  7346  0006F4  C0CD  FFD9         	movff	_ic_ptr,fsr2l
  7347  0006F8  C0CE  FFDA         	movff	_ic_ptr+1,fsr2h
  7348  0006FC  62DF               	cpfseq	indf2,c
  7349  0006FE  D018               	goto	i2l3095
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;my_i2c.c: 264: length = 28;
  7353  000700  0E00               	movlw	0
  7354  000702  0100               	movlb	0	; () banked
  7355  000704  0100               	movlb	0	; () banked
  7356  000706  6F98               	movwf	(i2c_int_handler@length+1)& (0+255),b
  7357  000708  0E1C               	movlw	28
  7358  00070A  0100               	movlb	0	; () banked
  7359  00070C  6F97               	movwf	i2c_int_handler@length& (0+255),b
  7360                           
  7361                           ; BSR set to: 0
  7362                           ;my_i2c.c: 266: start_i2c_slave_reply(length, adcbuffer);
  7363  00070E  0100               	movlb	0	; () banked
  7364  000710  C094  F02E         	movff	i2c_int_handler@adcbuffer+1,i2start_i2c_slave_reply@msg+1
  7365  000714  0100               	movlb	0	; () banked
  7366  000716  C093  F02D         	movff	i2c_int_handler@adcbuffer,i2start_i2c_slave_reply@msg
  7367  00071A  0100               	movlb	0	; () banked
  7368  00071C  0100               	movlb	0	; () banked
  7369  00071E  5197               	movf	i2c_int_handler@length& (0+255),w,b
  7370  000720  EC4F  F007         	call	i2_start_i2c_slave_reply
  7371                           
  7372                           ;my_i2c.c: 267: adcbuffer[0] = 0;
  7373  000724  C093  FFD9         	movff	i2c_int_handler@adcbuffer,fsr2l
  7374  000728  C094  FFDA         	movff	i2c_int_handler@adcbuffer+1,fsr2h
  7375  00072C  0E00               	movlw	0
  7376  00072E  6EDF               	movwf	indf2,c
  7377  000730                     i2l3095:
  7378                           
  7379                           ;my_i2c.c: 268: }
  7380                           ;my_i2c.c: 269: msg_to_send = 0;
  7381  000730  0100               	movlb	0	; () banked
  7382  000732  6F95               	movwf	??_i2c_int_handler& (0+255),b
  7383  000734  0E00               	movlw	0
  7384  000736  0100               	movlb	0	; () banked
  7385  000738  0100               	movlb	0	; () banked
  7386  00073A  6F9F               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7387  00073C  0100               	movlb	0	; () banked
  7388  00073E  5195               	movf	??_i2c_int_handler& (0+255),w,b
  7389  000740  0012               	return	
  7390  000742                     __end_of_i2c_int_handler:
  7391                           	opt stack 0
  7392                           pclatu	equ	0xFFB
  7393                           pclath	equ	0xFFA
  7394                           tblptru	equ	0xFF8
  7395                           tblptrh	equ	0xFF7
  7396                           tblptrl	equ	0xFF6
  7397                           tablat	equ	0xFF5
  7398                           prodh	equ	0xFF4
  7399                           prodl	equ	0xFF3
  7400                           intcon	equ	0xFF2
  7401                           postinc0	equ	0xFEE
  7402                           fsr0h	equ	0xFEA
  7403                           fsr0l	equ	0xFE9
  7404                           wreg	equ	0xFE8
  7405                           indf1	equ	0xFE7
  7406                           fsr1h	equ	0xFE2
  7407                           fsr1l	equ	0xFE1
  7408                           bsr	equ	0xFE0
  7409                           indf2	equ	0xFDF
  7410                           postinc2	equ	0xFDE
  7411                           postdec2	equ	0xFDD
  7412                           fsr2h	equ	0xFDA
  7413                           fsr2l	equ	0xFD9
  7414                           status	equ	0xFD8
  7415                           
  7416 ;; *************** function i2_start_i2c_slave_reply *****************
  7417 ;; Defined at:
  7418 ;;		line 53 in file "../src/my_i2c.c"
  7419 ;; Parameters:    Size  Location     Type
  7420 ;;  length          1    wreg     unsigned char 
  7421 ;;  msg             2   44[COMRAM] PTR unsigned char 
  7422 ;;		 -> main@msgbuffer(29), adcbuffer(28), 
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;  length          1   48[COMRAM] unsigned char 
  7425 ;; Return value:  Size  Location     Type
  7426 ;;		None               void
  7427 ;; Registers used:
  7428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7434 ;;      Params:         2       0       0       0       0
  7435 ;;      Locals:         1       0       0       0       0
  7436 ;;      Temps:          2       0       0       0       0
  7437 ;;      Totals:         5       0       0       0       0
  7438 ;;Total ram usage:        5 bytes
  7439 ;; Hardware stack levels used:    1
  7440 ;; This function calls:
  7441 ;;		Nothing
  7442 ;; This function is called by:
  7443 ;;		_i2c_int_handler
  7444 ;; This function uses a non-reentrant model
  7445 ;;
  7446                           
  7447                           	psect	text46
  7448  000E9E                     __ptext46:
  7449                           	opt stack 0
  7450  000E9E                     i2_start_i2c_slave_reply:
  7451                           	opt stack 19
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;incstack = 0
  7455                           ;i2start_i2c_slave_reply@length stored from wreg
  7456  000E9E  CFE8 F031          	movff	wreg,i2start_i2c_slave_reply@length
  7457                           
  7458                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  7459  000EA2  0100               	movlb	0	; () banked
  7460  000EA4  EE20 F03D          	lfsr	2,61
  7461  000EA8  0100               	movlb	0	; () banked
  7462  000EAA  51CD               	movf	_ic_ptr& (0+255),w,b
  7463  000EAC  26D9               	addwf	fsr2l,f,c
  7464  000EAE  0100               	movlb	0	; () banked
  7465  000EB0  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7466  000EB2  22DA               	addwfc	fsr2h,f,c
  7467  000EB4  0E00               	movlw	0
  7468  000EB6  6EDF               	movwf	indf2,c
  7469  000EB8  D03A               	goto	i2l2843
  7470  000EBA                     i2l2839:
  7471                           
  7472                           ; BSR set to: 0
  7473                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  7474  000EBA  0100               	movlb	0	; () banked
  7475  000EBC  EE20 F03D          	lfsr	2,61
  7476  000EC0  0100               	movlb	0	; () banked
  7477  000EC2  51CD               	movf	_ic_ptr& (0+255),w,b
  7478  000EC4  26D9               	addwf	fsr2l,f,c
  7479  000EC6  0100               	movlb	0	; () banked
  7480  000EC8  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7481  000ECA  22DA               	addwfc	fsr2h,f,c
  7482  000ECC  50DF               	movf	indf2,w,c
  7483  000ECE  6E2F               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7484  000ED0  502F               	movf	??i2_start_i2c_slave_reply,w,c
  7485  000ED2  0D01               	mullw	1
  7486  000ED4  50F3               	movf	prodl,w,c
  7487  000ED6  242D               	addwf	i2start_i2c_slave_reply@msg,w,c
  7488  000ED8  6ED9               	movwf	fsr2l,c
  7489  000EDA  50F4               	movf	prodh,w,c
  7490  000EDC  202E               	addwfc	i2start_i2c_slave_reply@msg+1,w,c
  7491  000EDE  6EDA               	movwf	fsr2h,c
  7492  000EE0  0100               	movlb	0	; () banked
  7493  000EE2  EE10 F03D          	lfsr	1,61
  7494  000EE6  0100               	movlb	0	; () banked
  7495  000EE8  51CD               	movf	_ic_ptr& (0+255),w,b
  7496  000EEA  26E1               	addwf	fsr1l,f,c
  7497  000EEC  0100               	movlb	0	; () banked
  7498  000EEE  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7499  000EF0  22E2               	addwfc	fsr1h,f,c
  7500  000EF2  50E7               	movf	indf1,w,c
  7501  000EF4  6E30               	movwf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  7502  000EF6  5030               	movf	??i2_start_i2c_slave_reply+1,w,c
  7503  000EF8  0D01               	mullw	1
  7504  000EFA  0E21               	movlw	33
  7505  000EFC  26F3               	addwf	prodl,f,c
  7506  000EFE  0E00               	movlw	0
  7507  000F00  22F4               	addwfc	prodh,f,c
  7508  000F02  50F3               	movf	prodl,w,c
  7509  000F04  0100               	movlb	0	; () banked
  7510  000F06  0100               	movlb	0	; () banked
  7511  000F08  25CD               	addwf	_ic_ptr& (0+255),w,b
  7512  000F0A  6EE1               	movwf	fsr1l,c
  7513  000F0C  50F4               	movf	prodh,w,c
  7514  000F0E  0100               	movlb	0	; () banked
  7515  000F10  0100               	movlb	0	; () banked
  7516  000F12  21CE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7517  000F14  6EE2               	movwf	fsr1h,c
  7518  000F16  CFDF FFE7          	movff	indf2,indf1
  7519                           
  7520                           ; BSR set to: 0
  7521  000F1A  0100               	movlb	0	; () banked
  7522  000F1C  EE20 F03D          	lfsr	2,61
  7523  000F20  0100               	movlb	0	; () banked
  7524  000F22  51CD               	movf	_ic_ptr& (0+255),w,b
  7525  000F24  26D9               	addwf	fsr2l,f,c
  7526  000F26  0100               	movlb	0	; () banked
  7527  000F28  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7528  000F2A  22DA               	addwfc	fsr2h,f,c
  7529  000F2C  2ADF               	incf	indf2,f,c
  7530  000F2E                     i2l2843:
  7531                           
  7532                           ; BSR set to: 0
  7533  000F2E  0100               	movlb	0	; () banked
  7534  000F30  EE20 F03D          	lfsr	2,61
  7535  000F34  0100               	movlb	0	; () banked
  7536  000F36  51CD               	movf	_ic_ptr& (0+255),w,b
  7537  000F38  26D9               	addwf	fsr2l,f,c
  7538  000F3A  0100               	movlb	0	; () banked
  7539  000F3C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7540  000F3E  22DA               	addwfc	fsr2h,f,c
  7541  000F40  50DF               	movf	indf2,w,c
  7542  000F42  6E2F               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7543  000F44  5031               	movf	i2start_i2c_slave_reply@length,w,c
  7544  000F46  5C2F               	subwf	??i2_start_i2c_slave_reply,w,c
  7545  000F48  A0D8               	btfss	status,0,c
  7546  000F4A  D7B7               	goto	i2l2839
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;my_i2c.c: 57: }
  7550                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  7551                           
  7552                           ; BSR set to: 0
  7553  000F4C  0100               	movlb	0	; () banked
  7554  000F4E  EE20 F03D          	lfsr	2,61
  7555  000F52  0100               	movlb	0	; () banked
  7556  000F54  51CD               	movf	_ic_ptr& (0+255),w,b
  7557  000F56  26D9               	addwf	fsr2l,f,c
  7558  000F58  0100               	movlb	0	; () banked
  7559  000F5A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7560  000F5C  22DA               	addwfc	fsr2h,f,c
  7561  000F5E  C031  FFDF         	movff	i2start_i2c_slave_reply@length,indf2
  7562                           
  7563                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  7564  000F62  0100               	movlb	0	; () banked
  7565  000F64  EE20 F03E          	lfsr	2,62
  7566  000F68  0100               	movlb	0	; () banked
  7567  000F6A  51CD               	movf	_ic_ptr& (0+255),w,b
  7568  000F6C  26D9               	addwf	fsr2l,f,c
  7569  000F6E  0100               	movlb	0	; () banked
  7570  000F70  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7571  000F72  22DA               	addwfc	fsr2h,f,c
  7572  000F74  0E01               	movlw	1
  7573  000F76  6EDF               	movwf	indf2,c
  7574                           
  7575                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  7576  000F78  0100               	movlb	0	; () banked
  7577  000F7A  EE20 F021          	lfsr	2,33
  7578  000F7E  0100               	movlb	0	; () banked
  7579  000F80  51CD               	movf	_ic_ptr& (0+255),w,b
  7580  000F82  26D9               	addwf	fsr2l,f,c
  7581  000F84  0100               	movlb	0	; () banked
  7582  000F86  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7583  000F88  22DA               	addwfc	fsr2h,f,c
  7584  000F8A  50DF               	movf	indf2,w,c
  7585  000F8C  6EC9               	movwf	4041,c	;volatile
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  7589  000F8E  88C6               	bsf	4038,4,c	;volatile
  7590                           
  7591                           ; BSR set to: 0
  7592  000F90  0012               	return	
  7593  000F92                     __end_ofi2_start_i2c_slave_reply:
  7594                           	opt stack 0
  7595                           pclatu	equ	0xFFB
  7596                           pclath	equ	0xFFA
  7597                           tblptru	equ	0xFF8
  7598                           tblptrh	equ	0xFF7
  7599                           tblptrl	equ	0xFF6
  7600                           tablat	equ	0xFF5
  7601                           prodh	equ	0xFF4
  7602                           prodl	equ	0xFF3
  7603                           intcon	equ	0xFF2
  7604                           postinc0	equ	0xFEE
  7605                           fsr0h	equ	0xFEA
  7606                           fsr0l	equ	0xFE9
  7607                           wreg	equ	0xFE8
  7608                           indf1	equ	0xFE7
  7609                           fsr1h	equ	0xFE2
  7610                           fsr1l	equ	0xFE1
  7611                           bsr	equ	0xFE0
  7612                           indf2	equ	0xFDF
  7613                           postinc2	equ	0xFDE
  7614                           postdec2	equ	0xFDD
  7615                           fsr2h	equ	0xFDA
  7616                           fsr2l	equ	0xFD9
  7617                           status	equ	0xFD8
  7618                           
  7619 ;; *************** function _handle_start *****************
  7620 ;; Defined at:
  7621 ;;		line 71 in file "../src/my_i2c.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  data_read       1    wreg     unsigned char 
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;  data_read       1   44[COMRAM] unsigned char 
  7626 ;; Return value:  Size  Location     Type
  7627 ;;		None               void
  7628 ;; Registers used:
  7629 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7635 ;;      Params:         0       0       0       0       0
  7636 ;;      Locals:         1       0       0       0       0
  7637 ;;      Temps:          0       0       0       0       0
  7638 ;;      Totals:         1       0       0       0       0
  7639 ;;Total ram usage:        1 bytes
  7640 ;; Hardware stack levels used:    1
  7641 ;; This function calls:
  7642 ;;		Nothing
  7643 ;; This function is called by:
  7644 ;;		_i2c_int_handler
  7645 ;; This function uses a non-reentrant model
  7646 ;;
  7647                           
  7648                           	psect	text47
  7649  001074                     __ptext47:
  7650                           	opt stack 0
  7651  001074                     _handle_start:
  7652                           	opt stack 19
  7653                           
  7654                           ; BSR set to: 0
  7655                           ;incstack = 0
  7656                           ;handle_start@data_read stored from wreg
  7657  001074  CFE8 F02D          	movff	wreg,handle_start@data_read
  7658                           
  7659                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  7660  001078  0100               	movlb	0	; () banked
  7661  00107A  EE20 F01D          	lfsr	2,29
  7662  00107E  0100               	movlb	0	; () banked
  7663  001080  51CD               	movf	_ic_ptr& (0+255),w,b
  7664  001082  26D9               	addwf	fsr2l,f,c
  7665  001084  0100               	movlb	0	; () banked
  7666  001086  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7667  001088  22DA               	addwfc	fsr2h,f,c
  7668  00108A  0E01               	movlw	1
  7669  00108C  6EDF               	movwf	indf2,c
  7670                           
  7671                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  7672  00108E  0100               	movlb	0	; () banked
  7673  001090  EE20 F01C          	lfsr	2,28
  7674  001094  0100               	movlb	0	; () banked
  7675  001096  51CD               	movf	_ic_ptr& (0+255),w,b
  7676  001098  26D9               	addwf	fsr2l,f,c
  7677  00109A  0100               	movlb	0	; () banked
  7678  00109C  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7679  00109E  22DA               	addwfc	fsr2h,f,c
  7680  0010A0  0E00               	movlw	0
  7681  0010A2  6EDF               	movwf	indf2,c
  7682                           
  7683                           ; BSR set to: 0
  7684                           ;my_i2c.c: 75: if (data_read) {
  7685  0010A4  502D               	movf	handle_start@data_read,w,c
  7686  0010A6  B4D8               	btfsc	status,2,c
  7687  0010A8  D03D               	goto	i2l2751
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  7691  0010AA  AAC7               	btfss	4039,5,c	;volatile
  7692  0010AC  D021               	goto	i2l277
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  7696  0010AE  0100               	movlb	0	; () banked
  7697  0010B0  EE20 F01E          	lfsr	2,30
  7698  0010B4  0100               	movlb	0	; () banked
  7699  0010B6  51CD               	movf	_ic_ptr& (0+255),w,b
  7700  0010B8  26D9               	addwf	fsr2l,f,c
  7701  0010BA  0100               	movlb	0	; () banked
  7702  0010BC  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7703  0010BE  22DA               	addwfc	fsr2h,f,c
  7704  0010C0  0E05               	movlw	5
  7705  0010C2  6EDF               	movwf	indf2,c
  7706                           
  7707                           ;my_i2c.c: 80: ic_ptr->error_count++;
  7708  0010C4  0100               	movlb	0	; () banked
  7709  0010C6  EE20 F020          	lfsr	2,32
  7710  0010CA  0100               	movlb	0	; () banked
  7711  0010CC  51CD               	movf	_ic_ptr& (0+255),w,b
  7712  0010CE  26D9               	addwf	fsr2l,f,c
  7713  0010D0  0100               	movlb	0	; () banked
  7714  0010D2  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7715  0010D4  22DA               	addwfc	fsr2h,f,c
  7716  0010D6  2ADF               	incf	indf2,f,c
  7717                           
  7718                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  7719  0010D8  0100               	movlb	0	; () banked
  7720  0010DA  EE20 F01F          	lfsr	2,31
  7721  0010DE  0100               	movlb	0	; () banked
  7722  0010E0  51CD               	movf	_ic_ptr& (0+255),w,b
  7723  0010E2  26D9               	addwf	fsr2l,f,c
  7724  0010E4  0100               	movlb	0	; () banked
  7725  0010E6  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7726  0010E8  22DA               	addwfc	fsr2h,f,c
  7727  0010EA  0E05               	movlw	5
  7728  0010EC  6EDF               	movwf	indf2,c
  7729                           
  7730                           ;my_i2c.c: 82: } else {
  7731  0010EE  0012               	return	
  7732  0010F0                     i2l277:
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  7736  0010F0  A4C7               	btfss	4039,2,c	;volatile
  7737  0010F2  D00C               	goto	i2l2749
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  7741  0010F4  0100               	movlb	0	; () banked
  7742  0010F6  EE20 F01E          	lfsr	2,30
  7743  0010FA  0100               	movlb	0	; () banked
  7744  0010FC  51CD               	movf	_ic_ptr& (0+255),w,b
  7745  0010FE  26D9               	addwf	fsr2l,f,c
  7746  001100  0100               	movlb	0	; () banked
  7747  001102  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7748  001104  22DA               	addwfc	fsr2h,f,c
  7749  001106  0E08               	movlw	8
  7750  001108  6EDF               	movwf	indf2,c
  7751                           
  7752                           ;my_i2c.c: 85: } else {
  7753  00110A  0012               	return	
  7754  00110C                     i2l2749:
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  7758  00110C  0100               	movlb	0	; () banked
  7759  00110E  EE20 F01E          	lfsr	2,30
  7760  001112  0100               	movlb	0	; () banked
  7761  001114  51CD               	movf	_ic_ptr& (0+255),w,b
  7762  001116  26D9               	addwf	fsr2l,f,c
  7763  001118  0100               	movlb	0	; () banked
  7764  00111A  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7765  00111C  22DA               	addwfc	fsr2h,f,c
  7766  00111E  0E07               	movlw	7
  7767  001120  6EDF               	movwf	indf2,c
  7768  001122  0012               	return	
  7769  001124                     i2l2751:
  7770                           
  7771                           ; BSR set to: 0
  7772                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  7773  001124  0100               	movlb	0	; () banked
  7774  001126  EE20 F01E          	lfsr	2,30
  7775  00112A  0100               	movlb	0	; () banked
  7776  00112C  51CD               	movf	_ic_ptr& (0+255),w,b
  7777  00112E  26D9               	addwf	fsr2l,f,c
  7778  001130  0100               	movlb	0	; () banked
  7779  001132  51CE               	movf	(_ic_ptr+1)& (0+255),w,b
  7780  001134  22DA               	addwfc	fsr2h,f,c
  7781  001136  0E06               	movlw	6
  7782  001138  6EDF               	movwf	indf2,c
  7783  00113A  0012               	return	
  7784  00113C                     __end_of_handle_start:
  7785                           	opt stack 0
  7786                           pclatu	equ	0xFFB
  7787                           pclath	equ	0xFFA
  7788                           tblptru	equ	0xFF8
  7789                           tblptrh	equ	0xFF7
  7790                           tblptrl	equ	0xFF6
  7791                           tablat	equ	0xFF5
  7792                           prodh	equ	0xFF4
  7793                           prodl	equ	0xFF3
  7794                           intcon	equ	0xFF2
  7795                           postinc0	equ	0xFEE
  7796                           fsr0h	equ	0xFEA
  7797                           fsr0l	equ	0xFE9
  7798                           wreg	equ	0xFE8
  7799                           indf1	equ	0xFE7
  7800                           fsr1h	equ	0xFE2
  7801                           fsr1l	equ	0xFE1
  7802                           bsr	equ	0xFE0
  7803                           indf2	equ	0xFDF
  7804                           postinc2	equ	0xFDE
  7805                           postdec2	equ	0xFDD
  7806                           fsr2h	equ	0xFDA
  7807                           fsr2l	equ	0xFD9
  7808                           status	equ	0xFD8
  7809                           
  7810 ;; *************** function _ToMainHigh_sendmsg *****************
  7811 ;; Defined at:
  7812 ;;		line 126 in file "../src/messages.c"
  7813 ;; Parameters:    Size  Location     Type
  7814 ;;  length          1    wreg     unsigned char 
  7815 ;;  msgtype         1   15[BANK0 ] unsigned char 
  7816 ;;  data            2   16[BANK0 ] PTR void 
  7817 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@ic(64), 
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;  length          1   18[BANK0 ] unsigned char 
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  1    wreg      char 
  7822 ;; Registers used:
  7823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7829 ;;      Params:         0       3       0       0       0
  7830 ;;      Locals:         0       1       0       0       0
  7831 ;;      Temps:          0       0       0       0       0
  7832 ;;      Totals:         0       4       0       0       0
  7833 ;;Total ram usage:        4 bytes
  7834 ;; Hardware stack levels used:    1
  7835 ;; Hardware stack levels required when called:    2
  7836 ;; This function calls:
  7837 ;;		i2_send_msg
  7838 ;; This function is called by:
  7839 ;;		_i2c_int_handler
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text48
  7844  001A72                     __ptext48:
  7845                           	opt stack 0
  7846  001A72                     _ToMainHigh_sendmsg:
  7847                           	opt stack 17
  7848                           
  7849                           ; BSR set to: 0
  7850                           ;incstack = 0
  7851                           ;ToMainHigh_sendmsg@length stored from wreg
  7852  001A72  CFE8 F092          	movff	wreg,ToMainHigh_sendmsg@length
  7853                           
  7854                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7855                           ;	Return value of _ToMainHigh_sendmsg is never used
  7856  001A76  0102               	movlb	2	; () banked
  7857  001A78  0E02               	movlw	high _ToMainHigh_MQ
  7858  001A7A  0100               	movlb	0	; () banked
  7859  001A7C  0100               	movlb	0	; () banked
  7860  001A7E  6F85               	movwf	(i2send_msg@qptr+1)& (0+255),b
  7861  001A80  0102               	movlb	2	; () banked
  7862  001A82  0E7E               	movlw	low _ToMainHigh_MQ
  7863  001A84  0100               	movlb	0	; () banked
  7864  001A86  0100               	movlb	0	; () banked
  7865  001A88  6F84               	movwf	i2send_msg@qptr& (0+255),b
  7866  001A8A  C092  F086         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7867  001A8E  C08F  F087         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7868  001A92  0100               	movlb	0	; () banked
  7869  001A94  0100               	movlb	0	; () banked
  7870  001A96  C091  F089         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7871  001A9A  0100               	movlb	0	; () banked
  7872  001A9C  0100               	movlb	0	; () banked
  7873  001A9E  C090  F088         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7874  001AA2  ECD4  F006         	call	i2_send_msg	;wreg free
  7875  001AA6  0012               	return	
  7876  001AA8                     __end_of_ToMainHigh_sendmsg:
  7877                           	opt stack 0
  7878                           pclatu	equ	0xFFB
  7879                           pclath	equ	0xFFA
  7880                           tblptru	equ	0xFF8
  7881                           tblptrh	equ	0xFF7
  7882                           tblptrl	equ	0xFF6
  7883                           tablat	equ	0xFF5
  7884                           prodh	equ	0xFF4
  7885                           prodl	equ	0xFF3
  7886                           intcon	equ	0xFF2
  7887                           postinc0	equ	0xFEE
  7888                           fsr0h	equ	0xFEA
  7889                           fsr0l	equ	0xFE9
  7890                           wreg	equ	0xFE8
  7891                           indf1	equ	0xFE7
  7892                           fsr1h	equ	0xFE2
  7893                           fsr1l	equ	0xFE1
  7894                           bsr	equ	0xFE0
  7895                           indf2	equ	0xFDF
  7896                           postinc2	equ	0xFDE
  7897                           postdec2	equ	0xFDD
  7898                           fsr2h	equ	0xFDA
  7899                           fsr2l	equ	0xFD9
  7900                           status	equ	0xFD8
  7901                           
  7902 ;; *************** function i2_send_msg *****************
  7903 ;; Defined at:
  7904 ;;		line 24 in file "../src/messages.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;  qptr            2    4[BANK0 ] PTR struct __msg_queue
  7907 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  7908 ;;  length          1    6[BANK0 ] unsigned char 
  7909 ;;  msgtype         1    7[BANK0 ] unsigned char 
  7910 ;;  data            2    8[BANK0 ] PTR void 
  7911 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), main@ic(64), 
  7912 ;;		 -> main@uc(5), 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  send_msg        2   13[BANK0 ] PTR struct __msg
  7915 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  7916 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  7917 ;;  send_msg        2   10[BANK0 ] unsigned int 
  7918 ;;  send_msg        1   12[BANK0 ] unsigned char 
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  1    wreg      char 
  7921 ;; Registers used:
  7922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7928 ;;      Params:         0       6       0       0       0
  7929 ;;      Locals:         0       5       0       0       0
  7930 ;;      Temps:          1       0       0       0       0
  7931 ;;      Totals:         1      11       0       0       0
  7932 ;;Total ram usage:       12 bytes
  7933 ;; Hardware stack levels used:    1
  7934 ;; Hardware stack levels required when called:    1
  7935 ;; This function calls:
  7936 ;;		i2_memcpy
  7937 ;; This function is called by:
  7938 ;;		_ToMainHigh_sendmsg
  7939 ;; This function uses a non-reentrant model
  7940 ;;
  7941                           
  7942                           	psect	text49
  7943  000DA8                     __ptext49:
  7944                           	opt stack 0
  7945  000DA8                     i2_send_msg:
  7946                           	opt stack 17
  7947                           
  7948                           ;messages.c: 25: unsigned char slot;
  7949                           ;messages.c: 27: msg *qmsg;
  7950                           ;messages.c: 28: size_t tlength = length;
  7951                           
  7952                           ;incstack = 0
  7953  000DA8  0100               	movlb	0	; () banked
  7954  000DAA  0100               	movlb	0	; () banked
  7955  000DAC  C086  F08A         	movff	i2send_msg@length,i2send_msg@tlength
  7956  000DB0  0100               	movlb	0	; () banked
  7957  000DB2  0100               	movlb	0	; () banked
  7958  000DB4  6B8B               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7959                           
  7960                           ; BSR set to: 0
  7961                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7962  000DB6  0100               	movlb	0	; () banked
  7963  000DB8  EE20 F07C          	lfsr	2,124
  7964  000DBC  0100               	movlb	0	; () banked
  7965  000DBE  5184               	movf	i2send_msg@qptr& (0+255),w,b
  7966  000DC0  26D9               	addwf	fsr2l,f,c
  7967  000DC2  0100               	movlb	0	; () banked
  7968  000DC4  5185               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7969  000DC6  22DA               	addwfc	fsr2h,f,c
  7970  000DC8  50DF               	movf	indf2,w,c
  7971  000DCA  0100               	movlb	0	; () banked
  7972  000DCC  0100               	movlb	0	; () banked
  7973  000DCE  6F8C               	movwf	i2send_msg@slot& (0+255),b
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7977  000DD0  0100               	movlb	0	; () banked
  7978  000DD2  0100               	movlb	0	; () banked
  7979  000DD4  518C               	movf	i2send_msg@slot& (0+255),w,b
  7980  000DD6  0D1F               	mullw	31
  7981  000DD8  50F3               	movf	prodl,w,c
  7982  000DDA  0100               	movlb	0	; () banked
  7983  000DDC  0100               	movlb	0	; () banked
  7984  000DDE  2584               	addwf	i2send_msg@qptr& (0+255),w,b
  7985  000DE0  0100               	movlb	0	; () banked
  7986  000DE2  0100               	movlb	0	; () banked
  7987  000DE4  6F8D               	movwf	i2send_msg@qmsg& (0+255),b
  7988  000DE6  50F4               	movf	prodh,w,c
  7989  000DE8  0100               	movlb	0	; () banked
  7990  000DEA  0100               	movlb	0	; () banked
  7991  000DEC  2185               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  7992  000DEE  0100               	movlb	0	; () banked
  7993  000DF0  6F8E               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;messages.c: 41: if (qmsg->full != 0) {
  7997  000DF2  C08D  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7998  000DF6  C08E  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7999  000DFA  50DF               	movf	indf2,w,c
  8000  000DFC  B4D8               	btfsc	status,2,c
  8001  000DFE  D002               	goto	i2l3239
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;messages.c: 42: return (-1);
  8005  000E00  0EFF               	movlw	255
  8006  000E02  0012               	return	
  8007  000E04                     i2l3239:
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;messages.c: 43: }
  8011                           ;messages.c: 46: qmsg->length = length;
  8012  000E04  0100               	movlb	0	; () banked
  8013  000E06  EE20 F001          	lfsr	2,1
  8014  000E0A  0100               	movlb	0	; () banked
  8015  000E0C  518D               	movf	i2send_msg@qmsg& (0+255),w,b
  8016  000E0E  26D9               	addwf	fsr2l,f,c
  8017  000E10  0100               	movlb	0	; () banked
  8018  000E12  518E               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8019  000E14  22DA               	addwfc	fsr2h,f,c
  8020  000E16  0100               	movlb	0	; () banked
  8021  000E18  C086  FFDF         	movff	i2send_msg@length,indf2
  8022                           
  8023                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8024  000E1C  0100               	movlb	0	; () banked
  8025  000E1E  EE20 F002          	lfsr	2,2
  8026  000E22  0100               	movlb	0	; () banked
  8027  000E24  518D               	movf	i2send_msg@qmsg& (0+255),w,b
  8028  000E26  26D9               	addwf	fsr2l,f,c
  8029  000E28  0100               	movlb	0	; () banked
  8030  000E2A  518E               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8031  000E2C  22DA               	addwfc	fsr2h,f,c
  8032  000E2E  0100               	movlb	0	; () banked
  8033  000E30  C087  FFDF         	movff	i2send_msg@msgtype,indf2
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8037  000E34  0E03               	movlw	3
  8038  000E36  0100               	movlb	0	; () banked
  8039  000E38  0100               	movlb	0	; () banked
  8040  000E3A  258D               	addwf	i2send_msg@qmsg& (0+255),w,b
  8041  000E3C  6E2D               	movwf	i2memcpy@d1,c
  8042  000E3E  0E00               	movlw	0
  8043  000E40  0100               	movlb	0	; () banked
  8044  000E42  0100               	movlb	0	; () banked
  8045  000E44  218E               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8046  000E46  6E2E               	movwf	i2memcpy@d1+1,c
  8047  000E48  0100               	movlb	0	; () banked
  8048  000E4A  C089  F030         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8049  000E4E  0100               	movlb	0	; () banked
  8050  000E50  C088  F02F         	movff	i2send_msg@data,i2memcpy@s1
  8051  000E54  C08A  F031         	movff	i2send_msg@tlength,i2memcpy@n
  8052  000E58  C08B  F032         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8053  000E5C  ECB5  F00B         	call	i2_memcpy	;wreg free
  8054                           
  8055                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8056  000E60  0100               	movlb	0	; () banked
  8057  000E62  EE20 F07C          	lfsr	2,124
  8058  000E66  0100               	movlb	0	; () banked
  8059  000E68  5184               	movf	i2send_msg@qptr& (0+255),w,b
  8060  000E6A  26D9               	addwf	fsr2l,f,c
  8061  000E6C  0100               	movlb	0	; () banked
  8062  000E6E  5185               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8063  000E70  22DA               	addwfc	fsr2h,f,c
  8064  000E72  0100               	movlb	0	; () banked
  8065  000E74  EE10 F07C          	lfsr	1,124
  8066  000E78  0100               	movlb	0	; () banked
  8067  000E7A  5184               	movf	i2send_msg@qptr& (0+255),w,b
  8068  000E7C  26E1               	addwf	fsr1l,f,c
  8069  000E7E  0100               	movlb	0	; () banked
  8070  000E80  5185               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8071  000E82  22E2               	addwfc	fsr1h,f,c
  8072  000E84  50E7               	movf	indf1,w,c
  8073  000E86  6E33               	movwf	??i2_send_msg& (0+255),c
  8074  000E88  2833               	incf	??i2_send_msg,w,c
  8075  000E8A  0B03               	andlw	3
  8076  000E8C  6EDF               	movwf	indf2,c
  8077                           
  8078                           ; BSR set to: 0
  8079                           ;messages.c: 59: qmsg->full = 1;
  8080  000E8E  C08D  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8081  000E92  C08E  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8082  000E96  0E01               	movlw	1
  8083  000E98  6EDF               	movwf	indf2,c
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;messages.c: 60: return (1);
  8087  000E9A  0E01               	movlw	1
  8088  000E9C  0012               	return	
  8089  000E9E                     __end_ofi2_send_msg:
  8090                           	opt stack 0
  8091                           pclatu	equ	0xFFB
  8092                           pclath	equ	0xFFA
  8093                           tblptru	equ	0xFF8
  8094                           tblptrh	equ	0xFF7
  8095                           tblptrl	equ	0xFF6
  8096                           tablat	equ	0xFF5
  8097                           prodh	equ	0xFF4
  8098                           prodl	equ	0xFF3
  8099                           intcon	equ	0xFF2
  8100                           postinc0	equ	0xFEE
  8101                           fsr0h	equ	0xFEA
  8102                           fsr0l	equ	0xFE9
  8103                           wreg	equ	0xFE8
  8104                           indf1	equ	0xFE7
  8105                           fsr1h	equ	0xFE2
  8106                           fsr1l	equ	0xFE1
  8107                           bsr	equ	0xFE0
  8108                           indf2	equ	0xFDF
  8109                           postinc2	equ	0xFDE
  8110                           postdec2	equ	0xFDD
  8111                           fsr2h	equ	0xFDA
  8112                           fsr2l	equ	0xFD9
  8113                           status	equ	0xFD8
  8114                           
  8115 ;; *************** function i2_memcpy *****************
  8116 ;; Defined at:
  8117 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;  d1              2   44[COMRAM] PTR void 
  8120 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  8121 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  8122 ;;		 -> main@msgbuffer(29), 
  8123 ;;  s1              2   46[COMRAM] PTR const void 
  8124 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  8125 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  8126 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  8127 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(64), 
  8128 ;;		 -> main@uc(5), 
  8129 ;;  n               2   48[COMRAM] unsigned int 
  8130 ;; Auto vars:     Size  Location     Type
  8131 ;;  memcpy          2    2[BANK0 ] PTR const unsigned char 
  8132 ;;		 -> ToMainLow_MQ.data(28), ToMainHigh_MQ.data(28), FromMainLow_MQ.data(28), FromMainHigh_MQ.data(28), 
  8133 ;;		 -> ToMainLow_MQ.queue.data(28), ToMainHigh_MQ.queue.data(28), FromMainHigh_MQ.queue.data(28), FromMainLow_MQ.queue.
      +data(28), 
  8134 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(126), FromMainLow_MQ(126), 
  8135 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), main@t1thread_data(2), main@ic(64), 
  8136 ;;		 -> main@uc(5), 
  8137 ;;  memcpy          2    0[BANK0 ] PTR unsigned char 
  8138 ;;		 -> FromMainLow_MQ.queue(124), FromMainHigh_MQ.queue(124), ToMainHigh_MQ.queue(124), ToMainLow_MQ.queue(124), 
  8139 ;;		 -> FromMainHigh_MQ(126), FromMainLow_MQ(126), ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  8140 ;;		 -> main@msgbuffer(29), 
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  2   44[COMRAM] PTR void 
  8143 ;; Registers used:
  8144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8150 ;;      Params:         6       0       0       0       0
  8151 ;;      Locals:         0       4       0       0       0
  8152 ;;      Temps:          0       0       0       0       0
  8153 ;;      Totals:         6       4       0       0       0
  8154 ;;Total ram usage:       10 bytes
  8155 ;; Hardware stack levels used:    1
  8156 ;; This function calls:
  8157 ;;		Nothing
  8158 ;; This function is called by:
  8159 ;;		i2_send_msg
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text50
  8164  00176A                     __ptext50:
  8165                           	opt stack 0
  8166  00176A                     i2_memcpy:
  8167                           	opt stack 17
  8168                           
  8169                           ; BSR set to: 0
  8170                           ;incstack = 0
  8171  00176A  0100               	movlb	0	; () banked
  8172  00176C  C030  F083         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8173  001770  0100               	movlb	0	; () banked
  8174  001772  C02F  F082         	movff	i2memcpy@s1,i2memcpy@s
  8175  001776  0100               	movlb	0	; () banked
  8176  001778  C02E  F081         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8177  00177C  0100               	movlb	0	; () banked
  8178  00177E  C02D  F080         	movff	i2memcpy@d1,i2memcpy@d
  8179  001782  D012               	goto	i2l3265
  8180  001784                     i2l3259:
  8181  001784  C082  FFD9         	movff	i2memcpy@s,fsr2l
  8182  001788  C083  FFDA         	movff	i2memcpy@s+1,fsr2h
  8183  00178C  C080  FFE1         	movff	i2memcpy@d,fsr1l
  8184  001790  C081  FFE2         	movff	i2memcpy@d+1,fsr1h
  8185  001794  CFDF FFE7          	movff	indf2,indf1
  8186  001798  0100               	movlb	0	; () banked
  8187  00179A  0100               	movlb	0	; () banked
  8188  00179C  4B82               	infsnz	i2memcpy@s& (0+255),f,b
  8189  00179E  2B83               	incf	(i2memcpy@s+1)& (0+255),f,b
  8190                           
  8191                           ; BSR set to: 0
  8192  0017A0  0100               	movlb	0	; () banked
  8193  0017A2  0100               	movlb	0	; () banked
  8194  0017A4  4B80               	infsnz	i2memcpy@d& (0+255),f,b
  8195  0017A6  2B81               	incf	(i2memcpy@d+1)& (0+255),f,b
  8196  0017A8                     i2l3265:
  8197                           
  8198                           ; BSR set to: 0
  8199  0017A8  0631               	decf	i2memcpy@n,f,c
  8200  0017AA  A0D8               	btfss	status,0,c
  8201  0017AC  0632               	decf	i2memcpy@n+1,f,c
  8202  0017AE  2831               	incf	i2memcpy@n& (0+255),w,c
  8203  0017B0  B4D8               	btfsc	status,2,c
  8204  0017B2  2832               	incf	(i2memcpy@n+1)& (0+255),w,c
  8205  0017B4  B4D8               	btfsc	status,2,c
  8206                           
  8207                           ;	Return value of i2_memcpy is never used
  8208  0017B6  0012               	return	
  8209  0017B8  D7E5               	goto	i2l3259
  8210  0017BA                     __end_ofi2_memcpy:
  8211                           	opt stack 0
  8212                           pclatu	equ	0xFFB
  8213                           pclath	equ	0xFFA
  8214                           tblptru	equ	0xFF8
  8215                           tblptrh	equ	0xFF7
  8216                           tblptrl	equ	0xFF6
  8217                           tablat	equ	0xFF5
  8218                           prodh	equ	0xFF4
  8219                           prodl	equ	0xFF3
  8220                           intcon	equ	0xFF2
  8221                           postinc0	equ	0xFEE
  8222                           fsr0h	equ	0xFEA
  8223                           fsr0l	equ	0xFE9
  8224                           wreg	equ	0xFE8
  8225                           indf1	equ	0xFE7
  8226                           fsr1h	equ	0xFE2
  8227                           fsr1l	equ	0xFE1
  8228                           bsr	equ	0xFE0
  8229                           indf2	equ	0xFDF
  8230                           postinc2	equ	0xFDE
  8231                           postdec2	equ	0xFDD
  8232                           fsr2h	equ	0xFDA
  8233                           fsr2l	equ	0xFD9
  8234                           status	equ	0xFD8
  8235                           
  8236 ;; *************** function _SleepIfOkay *****************
  8237 ;; Defined at:
  8238 ;;		line 228 in file "../src/messages.c"
  8239 ;; Parameters:    Size  Location     Type
  8240 ;;		None
  8241 ;; Auto vars:     Size  Location     Type
  8242 ;;		None
  8243 ;; Return value:  Size  Location     Type
  8244 ;;		None               void
  8245 ;; Registers used:
  8246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8247 ;; Tracked objects:
  8248 ;;		On entry : 0/0
  8249 ;;		On exit  : 0/0
  8250 ;;		Unchanged: 0/0
  8251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8252 ;;      Params:         0       0       0       0       0
  8253 ;;      Locals:         0       0       0       0       0
  8254 ;;      Temps:          0       0       0       0       0
  8255 ;;      Totals:         0       0       0       0       0
  8256 ;;Total ram usage:        0 bytes
  8257 ;; Hardware stack levels used:    1
  8258 ;; Hardware stack levels required when called:    2
  8259 ;; This function calls:
  8260 ;;		_enter_sleep_mode
  8261 ;;		i2_check_msg
  8262 ;;		i2_in_high_int
  8263 ;;		i2_in_low_int
  8264 ;; This function is called by:
  8265 ;;		_InterruptHandlerHigh
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           	psect	text51
  8270  0017BA                     __ptext51:
  8271                           	opt stack 0
  8272  0017BA                     _SleepIfOkay:
  8273                           	opt stack 18
  8274                           
  8275                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8276                           
  8277                           ;incstack = 0
  8278  0017BA  6634               	tstfsz	_MQ_Main_Willing_to_block,c
  8279  0017BC  D001               	goto	i2l2317
  8280  0017BE  0012               	return	
  8281  0017C0                     i2l2317:
  8282                           
  8283                           ;messages.c: 232: }
  8284                           ;messages.c: 235: if (in_low_int()) {
  8285  0017C0  EC54  F00D         	call	i2_in_low_int	;wreg free
  8286  0017C4  5030               	movf	?i2_in_low_int+1,w,c
  8287  0017C6  102F               	iorwf	?i2_in_low_int,w,c
  8288  0017C8  A4D8               	btfss	status,2,c
  8289  0017CA  0012               	return	
  8290                           
  8291                           ;messages.c: 237: }
  8292                           ;messages.c: 240: if (!in_high_int()) {
  8293                           
  8294                           ;messages.c: 236: return;
  8295  0017CC  EC32  F00E         	call	i2_in_high_int	;wreg free
  8296  0017D0  502E               	movf	?i2_in_high_int+1,w,c
  8297  0017D2  102D               	iorwf	?i2_in_high_int,w,c
  8298  0017D4  B4D8               	btfsc	status,2,c
  8299  0017D6  0012               	return	
  8300                           
  8301                           ;messages.c: 242: }
  8302                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8303                           
  8304                           ;messages.c: 241: return;
  8305  0017D8  0102               	movlb	2	; () banked
  8306  0017DA  0E02               	movlw	high _ToMainHigh_MQ
  8307  0017DC  6E2E               	movwf	i2check_msg@qptr+1,c
  8308  0017DE  0102               	movlb	2	; () banked
  8309  0017E0  0E7E               	movlw	low _ToMainHigh_MQ
  8310  0017E2  6E2D               	movwf	i2check_msg@qptr,c
  8311  0017E4  ECA7  F00D         	call	i2_check_msg	;wreg free
  8312  0017E8  0900               	iorlw	0
  8313  0017EA  A4D8               	btfss	status,2,c
  8314  0017EC  0012               	return	
  8315                           
  8316                           ;messages.c: 249: }
  8317                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8318                           
  8319                           ;messages.c: 248: return;
  8320  0017EE  0101               	movlb	1	; () banked
  8321  0017F0  0E01               	movlw	high _ToMainLow_MQ
  8322  0017F2  6E2E               	movwf	i2check_msg@qptr+1,c
  8323  0017F4  0101               	movlb	1	; () banked
  8324  0017F6  0E00               	movlw	low _ToMainLow_MQ
  8325  0017F8  6E2D               	movwf	i2check_msg@qptr,c
  8326  0017FA  ECA7  F00D         	call	i2_check_msg	;wreg free
  8327  0017FE  0900               	iorlw	0
  8328  001800  B4D8               	btfsc	status,2,c
  8329                           
  8330                           ;messages.c: 252: }
  8331                           ;messages.c: 253: enter_sleep_mode();
  8332                           
  8333                           ;messages.c: 251: return;
  8334  001802  EC3C  F00E         	call	_enter_sleep_mode	;wreg free
  8335  001806  0012               	return	
  8336  001808                     __end_of_SleepIfOkay:
  8337                           	opt stack 0
  8338                           pclatu	equ	0xFFB
  8339                           pclath	equ	0xFFA
  8340                           tblptru	equ	0xFF8
  8341                           tblptrh	equ	0xFF7
  8342                           tblptrl	equ	0xFF6
  8343                           tablat	equ	0xFF5
  8344                           prodh	equ	0xFF4
  8345                           prodl	equ	0xFF3
  8346                           intcon	equ	0xFF2
  8347                           postinc0	equ	0xFEE
  8348                           fsr0h	equ	0xFEA
  8349                           fsr0l	equ	0xFE9
  8350                           wreg	equ	0xFE8
  8351                           indf1	equ	0xFE7
  8352                           fsr1h	equ	0xFE2
  8353                           fsr1l	equ	0xFE1
  8354                           bsr	equ	0xFE0
  8355                           indf2	equ	0xFDF
  8356                           postinc2	equ	0xFDE
  8357                           postdec2	equ	0xFDD
  8358                           fsr2h	equ	0xFDA
  8359                           fsr2l	equ	0xFD9
  8360                           status	equ	0xFD8
  8361                           
  8362 ;; *************** function i2_in_low_int *****************
  8363 ;; Defined at:
  8364 ;;		line 32 in file "../src/interrupts.c"
  8365 ;; Parameters:    Size  Location     Type
  8366 ;;		None
  8367 ;; Auto vars:     Size  Location     Type
  8368 ;;		None
  8369 ;; Return value:  Size  Location     Type
  8370 ;;                  2   46[COMRAM] int 
  8371 ;; Registers used:
  8372 ;;		wreg, status,2, status,0, cstack
  8373 ;; Tracked objects:
  8374 ;;		On entry : 0/0
  8375 ;;		On exit  : 0/0
  8376 ;;		Unchanged: 0/0
  8377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8378 ;;      Params:         2       0       0       0       0
  8379 ;;      Locals:         0       0       0       0       0
  8380 ;;      Temps:          0       0       0       0       0
  8381 ;;      Totals:         2       0       0       0       0
  8382 ;;Total ram usage:        2 bytes
  8383 ;; Hardware stack levels used:    1
  8384 ;; Hardware stack levels required when called:    1
  8385 ;; This function calls:
  8386 ;;		i2_in_high_int
  8387 ;; This function is called by:
  8388 ;;		_SleepIfOkay
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392                           	psect	text52
  8393  001AA8                     __ptext52:
  8394                           	opt stack 0
  8395  001AA8                     i2_in_low_int:
  8396                           	opt stack 18
  8397                           
  8398                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  8399                           
  8400                           ;incstack = 0
  8401  001AA8  ACF2               	btfss	intcon,6,c	;volatile
  8402  001AAA  D005               	goto	i2l2797
  8403                           
  8404                           ;interrupts.c: 34: return (0);
  8405  001AAC  0E00               	movlw	0
  8406  001AAE  6E30               	movwf	?i2_in_low_int+1,c
  8407  001AB0  0E00               	movlw	0
  8408  001AB2  6E2F               	movwf	?i2_in_low_int,c
  8409  001AB4  0012               	return	
  8410  001AB6                     i2l2797:
  8411  001AB6  EC32  F00E         	call	i2_in_high_int	;wreg free
  8412  001ABA  502E               	movf	?i2_in_high_int+1,w,c
  8413  001ABC  102D               	iorwf	?i2_in_high_int,w,c
  8414  001ABE  B4D8               	btfsc	status,2,c
  8415  001AC0  D005               	goto	i2l2805
  8416                           
  8417                           ;interrupts.c: 36: return (0);
  8418  001AC2  0E00               	movlw	0
  8419  001AC4  6E30               	movwf	?i2_in_low_int+1,c
  8420  001AC6  0E00               	movlw	0
  8421  001AC8  6E2F               	movwf	?i2_in_low_int,c
  8422  001ACA  0012               	return	
  8423  001ACC                     i2l2805:
  8424                           
  8425                           ;interrupts.c: 38: return (1);
  8426  001ACC  0E00               	movlw	0
  8427  001ACE  6E30               	movwf	?i2_in_low_int+1,c
  8428  001AD0  0E01               	movlw	1
  8429  001AD2  6E2F               	movwf	?i2_in_low_int,c
  8430  001AD4  0012               	return	
  8431  001AD6                     __end_ofi2_in_low_int:
  8432                           	opt stack 0
  8433                           pclatu	equ	0xFFB
  8434                           pclath	equ	0xFFA
  8435                           tblptru	equ	0xFF8
  8436                           tblptrh	equ	0xFF7
  8437                           tblptrl	equ	0xFF6
  8438                           tablat	equ	0xFF5
  8439                           prodh	equ	0xFF4
  8440                           prodl	equ	0xFF3
  8441                           intcon	equ	0xFF2
  8442                           postinc0	equ	0xFEE
  8443                           fsr0h	equ	0xFEA
  8444                           fsr0l	equ	0xFE9
  8445                           wreg	equ	0xFE8
  8446                           indf1	equ	0xFE7
  8447                           fsr1h	equ	0xFE2
  8448                           fsr1l	equ	0xFE1
  8449                           bsr	equ	0xFE0
  8450                           indf2	equ	0xFDF
  8451                           postinc2	equ	0xFDE
  8452                           postdec2	equ	0xFDD
  8453                           fsr2h	equ	0xFDA
  8454                           fsr2l	equ	0xFD9
  8455                           status	equ	0xFD8
  8456                           
  8457 ;; *************** function i2_in_high_int *****************
  8458 ;; Defined at:
  8459 ;;		line 24 in file "../src/interrupts.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;		None
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;		None
  8464 ;; Return value:  Size  Location     Type
  8465 ;;                  2   44[COMRAM] int 
  8466 ;; Registers used:
  8467 ;;		wreg, status,2
  8468 ;; Tracked objects:
  8469 ;;		On entry : 0/0
  8470 ;;		On exit  : 0/0
  8471 ;;		Unchanged: 0/0
  8472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8473 ;;      Params:         2       0       0       0       0
  8474 ;;      Locals:         0       0       0       0       0
  8475 ;;      Temps:          0       0       0       0       0
  8476 ;;      Totals:         2       0       0       0       0
  8477 ;;Total ram usage:        2 bytes
  8478 ;; Hardware stack levels used:    1
  8479 ;; This function calls:
  8480 ;;		Nothing
  8481 ;; This function is called by:
  8482 ;;		_SleepIfOkay
  8483 ;;		i2_in_low_int
  8484 ;; This function uses a non-reentrant model
  8485 ;;
  8486                           
  8487                           	psect	text53
  8488  001C64                     __ptext53:
  8489                           	opt stack 0
  8490  001C64                     i2_in_high_int:
  8491                           	opt stack 18
  8492                           
  8493                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  8494                           
  8495                           ;incstack = 0
  8496  001C64  0E00               	movlw	0
  8497  001C66  AEF2               	btfss	intcon,7,c	;volatile
  8498  001C68  0E01               	movlw	1
  8499  001C6A  6E2D               	movwf	?i2_in_high_int,c
  8500  001C6C  6A2E               	clrf	?i2_in_high_int+1,c
  8501  001C6E  0012               	return	
  8502  001C70                     __end_ofi2_in_high_int:
  8503                           	opt stack 0
  8504                           pclatu	equ	0xFFB
  8505                           pclath	equ	0xFFA
  8506                           tblptru	equ	0xFF8
  8507                           tblptrh	equ	0xFF7
  8508                           tblptrl	equ	0xFF6
  8509                           tablat	equ	0xFF5
  8510                           prodh	equ	0xFF4
  8511                           prodl	equ	0xFF3
  8512                           intcon	equ	0xFF2
  8513                           postinc0	equ	0xFEE
  8514                           fsr0h	equ	0xFEA
  8515                           fsr0l	equ	0xFE9
  8516                           wreg	equ	0xFE8
  8517                           indf1	equ	0xFE7
  8518                           fsr1h	equ	0xFE2
  8519                           fsr1l	equ	0xFE1
  8520                           bsr	equ	0xFE0
  8521                           indf2	equ	0xFDF
  8522                           postinc2	equ	0xFDE
  8523                           postdec2	equ	0xFDD
  8524                           fsr2h	equ	0xFDA
  8525                           fsr2l	equ	0xFD9
  8526                           status	equ	0xFD8
  8527                           
  8528 ;; *************** function i2_check_msg *****************
  8529 ;; Defined at:
  8530 ;;		line 222 in file "../src/messages.c"
  8531 ;; Parameters:    Size  Location     Type
  8532 ;;  qptr            2   44[COMRAM] PTR struct __msg_queue
  8533 ;;		 -> ToMainHigh_MQ(126), ToMainLow_MQ(126), 
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;		None
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  1    wreg      unsigned char 
  8538 ;; Registers used:
  8539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8545 ;;      Params:         2       0       0       0       0
  8546 ;;      Locals:         0       0       0       0       0
  8547 ;;      Temps:          1       0       0       0       0
  8548 ;;      Totals:         3       0       0       0       0
  8549 ;;Total ram usage:        3 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; This function calls:
  8552 ;;		Nothing
  8553 ;; This function is called by:
  8554 ;;		_SleepIfOkay
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558                           	psect	text54
  8559  001B4E                     __ptext54:
  8560                           	opt stack 0
  8561  001B4E                     i2_check_msg:
  8562                           	opt stack 19
  8563                           
  8564                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8565                           
  8566                           ;incstack = 0
  8567  001B4E  EE20 F07D          	lfsr	2,125
  8568  001B52  502D               	movf	i2check_msg@qptr,w,c
  8569  001B54  26D9               	addwf	fsr2l,f,c
  8570  001B56  502E               	movf	i2check_msg@qptr+1,w,c
  8571  001B58  22DA               	addwfc	fsr2h,f,c
  8572  001B5A  50DF               	movf	indf2,w,c
  8573  001B5C  6E2F               	movwf	??i2_check_msg& (0+255),c
  8574  001B5E  502F               	movf	??i2_check_msg,w,c
  8575  001B60  0D1F               	mullw	31
  8576  001B62  50F3               	movf	prodl,w,c
  8577  001B64  242D               	addwf	i2check_msg@qptr,w,c
  8578  001B66  6ED9               	movwf	fsr2l,c
  8579  001B68  50F4               	movf	prodh,w,c
  8580  001B6A  202E               	addwfc	i2check_msg@qptr+1,w,c
  8581  001B6C  6EDA               	movwf	fsr2h,c
  8582  001B6E  50DF               	movf	indf2,w,c
  8583  001B70  0012               	return	
  8584  001B72                     __end_ofi2_check_msg:
  8585                           	opt stack 0
  8586                           pclatu	equ	0xFFB
  8587                           pclath	equ	0xFFA
  8588                           tblptru	equ	0xFF8
  8589                           tblptrh	equ	0xFF7
  8590                           tblptrl	equ	0xFF6
  8591                           tablat	equ	0xFF5
  8592                           prodh	equ	0xFF4
  8593                           prodl	equ	0xFF3
  8594                           intcon	equ	0xFF2
  8595                           postinc0	equ	0xFEE
  8596                           fsr0h	equ	0xFEA
  8597                           fsr0l	equ	0xFE9
  8598                           wreg	equ	0xFE8
  8599                           indf1	equ	0xFE7
  8600                           fsr1h	equ	0xFE2
  8601                           fsr1l	equ	0xFE1
  8602                           bsr	equ	0xFE0
  8603                           indf2	equ	0xFDF
  8604                           postinc2	equ	0xFDE
  8605                           postdec2	equ	0xFDD
  8606                           fsr2h	equ	0xFDA
  8607                           fsr2l	equ	0xFD9
  8608                           status	equ	0xFD8
  8609                           
  8610 ;; *************** function _enter_sleep_mode *****************
  8611 ;; Defined at:
  8612 ;;		line 202 in file "../src/messages.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;		None
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;		None
  8617 ;; Return value:  Size  Location     Type
  8618 ;;		None               void
  8619 ;; Registers used:
  8620 ;;		None
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8626 ;;      Params:         0       0       0       0       0
  8627 ;;      Locals:         0       0       0       0       0
  8628 ;;      Temps:          0       0       0       0       0
  8629 ;;      Totals:         0       0       0       0       0
  8630 ;;Total ram usage:        0 bytes
  8631 ;; Hardware stack levels used:    1
  8632 ;; This function calls:
  8633 ;;		Nothing
  8634 ;; This function is called by:
  8635 ;;		_SleepIfOkay
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639                           	psect	text55
  8640  001C78                     __ptext55:
  8641                           	opt stack 0
  8642  001C78                     _enter_sleep_mode:
  8643                           	opt stack 19
  8644                           
  8645                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8646                           
  8647                           ;incstack = 0
  8648  001C78  8ED3               	bsf	4051,7,c	;volatile
  8649  001C7A  0003               	sleep		;# 
  8650  001C7C  0012               	return	
  8651  001C7E                     __end_of_enter_sleep_mode:
  8652                           	opt stack 0
  8653  0000                     pclatu	equ	0xFFB
  8654                           pclath	equ	0xFFA
  8655                           tblptru	equ	0xFF8
  8656                           tblptrh	equ	0xFF7
  8657                           tblptrl	equ	0xFF6
  8658                           tablat	equ	0xFF5
  8659                           prodh	equ	0xFF4
  8660                           prodl	equ	0xFF3
  8661                           intcon	equ	0xFF2
  8662                           postinc0	equ	0xFEE
  8663                           fsr0h	equ	0xFEA
  8664                           fsr0l	equ	0xFE9
  8665                           wreg	equ	0xFE8
  8666                           indf1	equ	0xFE7
  8667                           fsr1h	equ	0xFE2
  8668                           fsr1l	equ	0xFE1
  8669                           bsr	equ	0xFE0
  8670                           indf2	equ	0xFDF
  8671                           postinc2	equ	0xFDE
  8672                           postdec2	equ	0xFDD
  8673                           fsr2h	equ	0xFDA
  8674                           fsr2l	equ	0xFD9
  8675                           status	equ	0xFD8
  8676                           pclatu	equ	0xFFB
  8677                           pclath	equ	0xFFA
  8678                           tblptru	equ	0xFF8
  8679                           tblptrh	equ	0xFF7
  8680                           tblptrl	equ	0xFF6
  8681                           tablat	equ	0xFF5
  8682                           prodh	equ	0xFF4
  8683                           prodl	equ	0xFF3
  8684                           intcon	equ	0xFF2
  8685                           postinc0	equ	0xFEE
  8686                           fsr0h	equ	0xFEA
  8687                           fsr0l	equ	0xFE9
  8688                           wreg	equ	0xFE8
  8689                           indf1	equ	0xFE7
  8690                           fsr1h	equ	0xFE2
  8691                           fsr1l	equ	0xFE1
  8692                           bsr	equ	0xFE0
  8693                           indf2	equ	0xFDF
  8694                           postinc2	equ	0xFDE
  8695                           postdec2	equ	0xFDD
  8696                           fsr2h	equ	0xFDA
  8697                           fsr2l	equ	0xFD9
  8698                           status	equ	0xFD8
  8699                           
  8700                           	psect	rparam
  8701  0000                     pclatu	equ	0xFFB
  8702                           pclath	equ	0xFFA
  8703                           tblptru	equ	0xFF8
  8704                           tblptrh	equ	0xFF7
  8705                           tblptrl	equ	0xFF6
  8706                           tablat	equ	0xFF5
  8707                           prodh	equ	0xFF4
  8708                           prodl	equ	0xFF3
  8709                           intcon	equ	0xFF2
  8710                           postinc0	equ	0xFEE
  8711                           fsr0h	equ	0xFEA
  8712                           fsr0l	equ	0xFE9
  8713                           wreg	equ	0xFE8
  8714                           indf1	equ	0xFE7
  8715                           fsr1h	equ	0xFE2
  8716                           fsr1l	equ	0xFE1
  8717                           bsr	equ	0xFE0
  8718                           indf2	equ	0xFDF
  8719                           postinc2	equ	0xFDE
  8720                           postdec2	equ	0xFDD
  8721                           fsr2h	equ	0xFDA
  8722                           fsr2l	equ	0xFD9
  8723                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         534
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     51      83
    BANK0           128     77      79
    BANK1           256    117     243
    BANK2           256      0     252
    BANK3           256      0     126

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    timer1_int_handler@adcbuffer	PTR unsigned char  size(2) Largest target is 28
		 -> adcbuffer(COMRAM[28]), 

    memcpy@d1	PTR void  size(2) Largest target is 126
		 -> FromMainLow_MQ.queue(BANK2[124]), FromMainHigh_MQ.queue(BANK3[124]), ToMainHigh_MQ.queue(BANK2[124]), ToMainLow_MQ.queue(BANK1[124]), 
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 
		 -> main@msgbuffer(BANK1[29]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 126
		 -> FromMainLow_MQ.queue(BANK2[124]), FromMainHigh_MQ.queue(BANK3[124]), ToMainHigh_MQ.queue(BANK2[124]), ToMainLow_MQ.queue(BANK1[124]), 
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 
		 -> main@msgbuffer(BANK1[29]), 

    memcpy@s1	PTR const void  size(2) Largest target is 126
		 -> ToMainLow_MQ.data(BANK1[28]), ToMainHigh_MQ.data(BANK2[28]), FromMainLow_MQ.data(BANK2[28]), FromMainHigh_MQ.data(BANK3[28]), 
		 -> ToMainLow_MQ.queue.data(BANK1[28]), ToMainHigh_MQ.queue.data(BANK2[28]), FromMainHigh_MQ.queue.data(BANK3[28]), FromMainLow_MQ.queue.data(BANK2[28]), 
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), 
		 -> ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), main@t1thread_data(BANK1[2]), main@ic(BANK1[64]), 
		 -> main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 126
		 -> ToMainLow_MQ.data(BANK1[28]), ToMainHigh_MQ.data(BANK2[28]), FromMainLow_MQ.data(BANK2[28]), FromMainHigh_MQ.data(BANK3[28]), 
		 -> ToMainLow_MQ.queue.data(BANK1[28]), ToMainHigh_MQ.queue.data(BANK2[28]), FromMainHigh_MQ.queue.data(BANK3[28]), FromMainLow_MQ.queue.data(BANK2[28]), 
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), 
		 -> ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), main@t1thread_data(BANK1[2]), main@ic(BANK1[64]), 
		 -> main@uc(BANK1[5]), 

    timer0_int_handler@adcbuffer	PTR unsigned char  size(2) Largest target is 28
		 -> adcbuffer(COMRAM[28]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 64
		 -> main@ic(BANK1[64]), 

    i2c_int_handler@adcbuffer	PTR unsigned char  size(2) Largest target is 28
		 -> adcbuffer(COMRAM[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), adcbuffer(COMRAM[28]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 64
		 -> NULL(NULL[0]), main@ic(BANK1[64]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 126
		 -> ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[64]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 29
		 -> main@msgbuffer(BANK1[29]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 126
		 -> FromMainLow_MQ.queue(BANK2[124]), FromMainHigh_MQ.queue(BANK3[124]), ToMainHigh_MQ.queue(BANK2[124]), ToMainLow_MQ.queue(BANK1[124]), 
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 126
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 

    sp__memcpy	PTR void  size(2) Largest target is 126
		 -> FromMainLow_MQ.queue(BANK2[124]), FromMainHigh_MQ.queue(BANK3[124]), ToMainHigh_MQ.queue(BANK2[124]), ToMainLow_MQ.queue(BANK1[124]), 
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 
		 -> main@msgbuffer(BANK1[29]), 

    send_msg@data	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), main@ic(BANK1[64]), 
		 -> main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 126
		 -> FromMainLow_MQ.queue(BANK2[124]), FromMainHigh_MQ.queue(BANK3[124]), ToMainHigh_MQ.queue(BANK2[124]), ToMainLow_MQ.queue(BANK1[124]), 
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 126
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 126
		 -> FromMainHigh_MQ(BANK3[126]), FromMainLow_MQ(BANK2[126]), ToMainHigh_MQ(BANK2[126]), ToMainLow_MQ(BANK1[126]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_WriteTimer0
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               111   111      0    9504
                                              8 BANK1    109   109      0
                            _BusyADC
                         _ConvertADC
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     300
                                             48 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2181
                                             74 BANK0      2     2      0
                                              0 BANK1      8     0      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     211
                                             48 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    1583
                                             70 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1411
                                             58 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             48 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     146
                                             48 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             52 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             48 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             48 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             54 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             52 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             50 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             48 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             48 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1813
                                             72 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1813
                                             72 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1641
                                             58 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     438
                                             48 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      22
                                             48 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                             48 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             48 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             48 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     260
                                             48 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    2375
                                             27 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2244
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2221
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1943
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     0      2     131
                                              4 COMRAM     2     0      2
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    4390
                                             34 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     4      2     420
                                             48 COMRAM     2     0      2
                                              0 BANK0      4     4      0
                        _WriteTimer0
                          i2_BusyADC
                       i2_ConvertADC
 ---------------------------------------------------------------------------------
 (12) i2_ConvertADC                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_BusyADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     121
                                             44 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    15    13      2    3734
                                             19 BANK0     15    13      2
                 _ToMainHigh_sendmsg
                       _handle_start
            i2_start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (12) i2_start_i2c_slave_reply                             5     3      2     264
                                             44 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      22
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    2700
                                             15 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2347
                                             50 COMRAM     1     1      0
                                              4 BANK0     11     5      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     796
                                             44 COMRAM     6     0      6
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             46 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             44 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConvertADC
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
     i2_start_i2c_slave_reply
   _timer0_int_handler
     _WriteTimer0
     i2_BusyADC
     i2_ConvertADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      7E      10       49.2%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      FC       8       98.4%
BITBANK1           100      0       0       5        0.0%
BANK1              100     75      F3       6       94.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80     4D      4F       4       61.7%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     33      53       1       65.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     30F      11        0.0%
DATA                 0      0     30F      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Feb 10 21:54:59 2014

                main@uthread_data 01A5          _MQ_Main_Willing_to_block 0034  
                     _SSPSTATbits 000FC7         __end_of_ToMainLow_recvmsg 18D4  
                              bsr 000FE0         __end_of_ToMainLow_sendmsg 1B4E  
                    __CFG_CP0$OFF 000000                               l125 089C  
                             l512 137E                               l513 1380  
                             l514 138E                               l515 1390  
                             l428 14C6                               l508 135E  
                             l447 1AFA                               l471 19E8  
                             l448 1AFC                               l473 1A00  
                             l474 1A02                               l741 1BD2  
            __size_of_WriteTimer0 0012              __size_of_WriteTimer1 0012  
                  _FromMainLow_MQ 0200                               wreg 000FE8  
                    __CFG_IESO$ON 000000                      ?_in_high_int 00B0  
                ??_init_uart_recv 00B2                              l1053 143C  
                            l2121 181C                              l2143 1882  
                            l2129 183E                              l3211 0A46  
                            l3205 09A2                              l2511 134A  
                            l3207 09F4                              l2603 0C36  
                            l3181 08B6                              l2471 19EA  
                            l2519 1360                              l3191 090E  
                            l3175 084A                              l3167 0808  
                            l2705 0B92                              l3185 08D2  
                            l3193 0926                              l3177 08A2  
                            l2571 14E8                              l3187 08F0  
                            l2637 1590                              l3197 0946  
                            l2583 1540                              l2655 0D00  
                            l3199 0964                              l2577 1514  
                            l2675 1752                              l2669 172E  
                            l2781 1428                              l2773 13DA  
                            l2599 0BB2                              l2775 13EC  
                            l2689 0ACC                              l2777 13F4  
                            _LATA 000F89                              _LATB 000F8A  
                            u1650 1C54                              u2397 1BD4  
                            i1l52 0078                              i2l45 123A  
                 _FromMainHigh_MQ 0300                     __CFG_FCMEN$ON 000000  
          ?_block_on_To_msgqueues 0001                              _main 0742  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                     main@msgtype 01B1                        i1_send_msg 113C  
                            pclat 000FFA               timer0_int_handler@i 0082  
                     i2_check_msg 1B4E                              prodh 000FF4  
                            prodl 000FF3             handle_start@data_read 002D  
                            start 00BE                     __CFG_FOSC2$ON 000000  
                      i2_send_msg 0DA8         ToMainHigh_recvmsg@msgtype 00C8  
                 __end_of_BusyADC 1C58                    send_msg@length 00BC  
   i2start_i2c_slave_reply@length 0031                   __end_of_OpenADC 14CA  
     __size_of_timer0_int_handler 00E2                       _Delay1KTCYx 1BCE  
                           ?_main 0001                             _T0CON 000FD5  
                           _T1CON 000FCD                   __end_of___lwmod 1446  
                      i1memcpy@d1 0001                             i1l526 1BBE  
                           i2l321 0536                             i2l315 0496  
                           i2l307 035E                             i2l277 10F0  
                           i2l293 01CE                             i2l287 0524  
                           i2l289 018A                        i1memcpy@s1 0003  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR1H 000FCF  
                           _TMR0L 000FD6                             _TMR1L 000FCE  
                           _SPBRG 000FAF                             _PORTA 000F80  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TXSTA 000FAC                        i2memcpy@d1 002D  
                      i2memcpy@s1 002F                      ?_init_queues 0001  
       __size_of_enter_sleep_mode 0006                   __end_of_in_main 1892  
              __size_ofi2_BusyADC 000C        ToMainLow_recvmsg@maxlength 00CC  
         timer0_lthread@msgbuffer 00B6                        _ConvertADC 1C7E  
         i2c_configure_slave@addr 00B0                             tablat 000FF5  
                           status 000FD8                  __end_ofi1_memcpy 1956  
                __end_ofi2_memcpy 17BA                   __initialization 1994  
                    __end_of_main 0A60       __size_of_timer1_int_handler 000E  
      __size_of_ToMainLow_recvmsg 0042        __size_of_ToMainLow_sendmsg 0026  
           __size_ofi2_in_low_int 002E     __size_of_FromMainHigh_sendmsg 0036  
                          ??_main 0186                   send_msg@msgtype 00BD  
                   __activetblptr 000002                   send_msg@tlength 00C1  
                      _SetChanADC 1B72              __end_of_handle_start 113C  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            _ADRESH 000FC4  
         ??_uart_recv_int_handler 001B                            i1l2921 006E  
                          i2l3003 0286                            i1l2851 1928  
                          i2l3005 02C6                            i2l3101 0FA2  
                          i1l2909 130A                            i2l3033 0426  
                          i1l2857 1944                            i1l2881 1174  
                          i2l3027 03D2                            i2l3107 0FE2  
                          i2l2317 17C0                            i2l3061 053A  
                          i2l3029 0414                            i2l3055 04F8  
                          i2l3119 104E                        _OpenTimer0 1AD6  
                      _OpenTimer1 19CE                            i2l3083 06DA  
                          i2l3075 0634                            i2l3067 059A  
                  __CFG_WDTEN$OFF 000000                            i2l3239 0E04  
                          i2l3095 0730                            i2l3265 17A8  
                          i2l3259 1784                            i2l2805 1ACC  
                          i2l2751 1124                            i2l2843 0F2E  
                          i2l2749 110C                            i2l2839 0EBA  
                          i2l2935 1230                            i2l2961 0168  
                          i2l2945 1250                            i2l2797 1AB6  
                          i2l2967 0180                            i2l2985 0206  
                          i2l2987 0232                            i2l2997 026E  
     __end_of_i2c_configure_slave 1B28                     ??_SleepIfOkay 0031  
              __size_of_ReadUSART 001E                            _OSCCON 000FD3  
                          _SPBRGH 000FB0                            _SSPADD 000FC8  
                          _SSPBUF 000FC9                         ??_BusyADC 00B0  
  __size_of_start_i2c_slave_reply 010E                       ?i1_send_msg 000B  
   __end_of_start_i2c_slave_reply 0CA4                timer0_lthread@tptr 00B0  
                       ??_OpenADC 00B2                      i2_in_low_int 1AA8  
                     ?i2_send_msg 0084                    __CFG_XINST$OFF 000000  
              __size_of_OpenUSART 0092                   _i2c_int_handler 00C2  
               __end_ofi2_BusyADC 1C64                  OpenTimer0@config 00B0  
                          _ic_ptr 00CD                         ??___lwmod 00B4  
                   main@msgbuffer 0188                  __end_of_init_i2c 170C  
                OpenTimer1@config 00B0                            _memcpy 170C  
                          clear_0 199A                            clear_1 19A6  
                          clear_2 19B2                            clear_3 19BE  
                          _uc_ptr 0052                            main@ic 01B3  
                          main@uc 01AA                  __end_of_recv_msg 0B96  
     start_i2c_slave_reply@length 00B4                         ??_in_main 00B6  
                __end_of_send_msg 0DA8           i2c_int_handler@i2c_data 009E  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                       init_queue@i 00B3  
        ?i2_start_i2c_slave_reply 002D          ToMainLow_recvmsg@msgtype 00C8  
     timer0_int_handler@adcbuffer 0031              __size_of_in_high_int 0012  
                     ?_ConvertADC 0001                   __CFG_FOSC$HSPLL 000000  
                      __accesstop 0080           __end_of__initialization 19C4  
      __end_of_ToMainHigh_recvmsg 1916        __end_of_ToMainHigh_sendmsg 1AA8  
     __end_of_init_timer1_lthread 1C08               __end_of_SleepIfOkay 1808  
                  __pcstackCOMRAM 0001            __size_ofi2_in_high_int 000C  
              __size_of_check_msg 0036                 __end_of_ReadUSART 1BCE  
                     ?_SetChanADC 0001               __size_ofi1_send_msg 00AA  
                       ?i1_memcpy 0001     __size_of_InterruptHandlerHigh 1286  
     __end_of_InterruptHandlerLow 00BE                         ?i2_memcpy 002D  
                   _ToMainHigh_MQ 027E                  _enter_sleep_mode 1C78  
             __size_ofi2_send_msg 00F6              timer1_lthread@length 0182  
                   ReadUSART@data 0001                 __end_of_OpenUSART 13BC  
                   check_msg@qptr 00B0              timer1_lthread@retval 00CB  
         ??_block_on_To_msgqueues 00B6              __size_of_init_queues 006E  
                      __pbssBANK1 0100                        __pbssBANK2 0200  
                      __pbssBANK3 0300                       ?_OpenTimer0 0001  
                     ?_OpenTimer1 0001                        __pnvCOMRAM 0052  
         __end_of_i2c_int_handler 0742                      ?i2_check_msg 002D  
              timer1_lthread@tptr 017E                 recv_msg@maxlength 00BC  
                 recv_msg@msgtype 00BD                   recv_msg@tlength 00C4  
           __size_of_handle_start 00C8                      ?_Delay1KTCYx 0001  
                WriteTimer0@timer 002F                           ?_memcpy 00B0  
                WriteTimer1@timer 0003                     ??_WriteTimer0 002F  
                   ??_WriteTimer1 0003               __size_of_ConvertADC 0004  
         __size_of_timer0_lthread 0012           __size_of_timer1_lthread 0072  
 __end_ofi2_start_i2c_slave_reply 0F92                        ??i1_memcpy 0007  
                      ??i2_memcpy 0033        i2start_i2c_slave_reply@msg 002D  
                i1send_msg@length 000D                     i2_in_high_int 1C64  
                         _SSPCON1 000FC6                           _SSPCON2 000FC5  
                         _SSPSTAT 000FC7                 __end_of_check_msg 1A72  
                       ?_init_i2c 00B0                       _SleepIfOkay 17BA  
                         _BusyADC 1C4C                         ?_recv_msg 00BA  
                         _OpenADC 1446                        _in_low_int 1808  
                    _handle_start 1074                           __Hparam 0000  
             __size_of_SetChanADC 0020                         ?_send_msg 00BA  
                         __Lparam 0000        __end_of_timer0_int_handler 1074  
                init_uart_recv@uc 00B0                           ___lwmod 13BC  
                 __CFG_STVREN$OFF 000000                           __pcinit 1994  
                 __size_of_memcpy 005E                        _init_queue 1548  
                         __ramtop 0400               __size_of_OpenTimer0 002A  
             __size_of_OpenTimer1 0038                           __ptext0 0742  
                         __ptext1 1956                           __ptext2 15C2  
                         __ptext3 13BC                           __ptext4 1A06  
                         __ptext5 0CA4                           __ptext6 1BE4  
                         __ptext7 0B96                           __ptext8 1B92  
                         __ptext9 1BF6                         _T0CONbits 000FD5  
                         _in_main 184E                         _T1CONbits 000FCD  
             __end_of_WriteTimer0 1C3E               __end_of_WriteTimer1 1C2C  
                  ?i2_in_high_int 002D                    OpenADC@config2 00B0  
                  __pintcode_body 11E6              end_of_initialization 19C4  
         timer1_lthread@msgbuffer 0184      __end_of_FromMainHigh_sendmsg 1A3C  
                   ?i2_ConvertADC 0001    __size_of_uart_recv_int_handler 009C  
      FromMainHigh_sendmsg@length 00C9                           memcpy@d 00B6  
                         memcpy@n 00B4                           memcpy@s 00B8  
   __end_of_uart_recv_int_handler 132A                        ??_init_i2c 00B2  
     i2c_int_handler@data_written 009C                     __Lmediumconst 0000  
                         int_func 11E6                      ??i1_send_msg 0011  
                   ?_uart_lthread 00B0           __size_of_init_uart_recv 001E  
                ?_i2c_int_handler 0093                        ??_recv_msg 00C1  
                    ??i2_send_msg 0033                        ??_send_msg 00C0  
      __end_of_timer1_int_handler 1C4C                         _RCSTAbits 000FAB  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE         ToMainHigh_sendmsg@msgtype 008F  
                       i2_BusyADC 1C58                __end_ofi1_send_msg 11E6  
     FromMainHigh_sendmsg@msgtype 00C6                         _TRISCbits 000F94  
              __end_ofi2_send_msg 0E9E                    ??i2_ConvertADC 002D  
                    ??_ConvertADC 00B0                    ??_uart_lthread 00B8  
                       _TXSTAbits 000FAC                        main@length 01B2  
                     ?_in_low_int 00B2             timer0_lthread@msgtype 00B2  
__size_ofi2_start_i2c_slave_reply 00F4             _start_i2c_slave_reply 0B96  
    __size_of_i2c_configure_slave 0028              __size_ofi2_check_msg 0024  
        __end_of_enter_sleep_mode 1C7E          i2c_int_handler@adcbuffer 0093  
              _ToMainHigh_recvmsg 18D4                         i1memcpy@d 0007  
              _ToMainHigh_sendmsg 1A72                         i1memcpy@n 0005  
                       i1memcpy@s 0009                    _timer0_lthread 1BE4  
                     ?_init_queue 00B0                         i2memcpy@d 0080  
                     _WriteTimer0 1C2C                       _WriteTimer1 1C1A  
                       i2memcpy@n 0031                         i2memcpy@s 0082  
              __end_of_ConvertADC 1C82                    _timer1_lthread 15C2  
                  __end_of_memcpy 176A                 _enable_interrupts 1C70  
                      ?i2_BusyADC 0001              __size_of_Delay1KTCYx 0016  
                    ??_SetChanADC 00B0               ?_ToMainHigh_recvmsg 00C8  
                 ??i2_in_high_int 002F          i2c_int_handler@data_read 00A1  
             ?_ToMainHigh_sendmsg 008F                ?_enable_interrupts 0001  
             start_initialization 1994                     ??_in_high_int 00B2  
                       _ReadUSART 1BB0                 __size_ofi1_memcpy 0040  
               __size_ofi2_memcpy 0050             i2c_int_handler@length 0097  
     timer1_int_handler@adcbuffer 0005               ??_enable_interrupts 00B0  
                    ??_OpenTimer0 00B0                      ??_OpenTimer1 00B0  
  __size_of_block_on_To_msgqueues 007E     __end_of_block_on_To_msgqueues 1548  
                       _OpenUSART 132A      __end_of_InterruptHandlerHigh 128E  
                      init_i2c@ic 00B0              ??_ToMainHigh_recvmsg 00CC  
            ??_ToMainHigh_sendmsg 0034                __end_of_SetChanADC 1B92  
          __end_of_timer0_lthread 1BF6          i2c_int_handler@error_buf 0099  
          __end_of_timer1_lthread 1634         __end_of_enable_interrupts 1C78  
                        ??_memcpy 00B6             timer1_lthread@msgtype 0180  
            _FromMainHigh_sendmsg 1A06      __size_of_init_timer1_lthread 0012  
              __end_of_OpenTimer0 1B00                __end_of_OpenTimer1 1A06  
        i2c_int_handler@msg_ready 00A0                       __pbssCOMRAM 0034  
                      ?_ReadUSART 0001                     ??_init_queues 00B4  
                   __pcstackBANK0 0080                     __pcstackBANK1 017E  
             __size_of_in_low_int 0046          start_i2c_slave_reply@msg 00B0  
                       _adcbuffer 0036               __CFG_CCP2MX$DEFAULT 000000  
                 Delay1KTCYx@unit 00B0          ToMainLow_sendmsg@msgtype 0017  
    __size_of_InterruptHandlerLow 00A6               __end_of_in_high_int 1C1A  
                      ?_OpenUSART 00B0                      ?_SleepIfOkay 0001  
           ToMainLow_recvmsg@data 00CA                      _ToMainLow_MQ 0100  
             __size_of_init_queue 007A                          ?_BusyADC 0001  
                  _init_uart_recv 1B92                         _check_msg 1A3C  
                       __pnvBANK0 00CD            ?_start_i2c_slave_reply 00B0  
               __size_of_init_i2c 006A                 OpenADC@portconfig 00B1  
                        ?_OpenADC 00B0                      recv_msg@data 00BF  
                    recv_msg@qmsg 00C6                      recv_msg@slot 00C3  
                    recv_msg@qptr 00BA                 __size_of_recv_msg 0136  
                       __pintcode 0008                 __size_of_send_msg 0104  
                 ?_timer0_lthread 00B0                          ?___lwmod 00B0  
            __end_ofi2_ConvertADC 1C86                   ?_timer1_lthread 017E  
           ?_FromMainHigh_sendmsg 00C6                       __pintcodelo 0018  
          ToMainHigh_recvmsg@data 00CA                       ??i2_BusyADC 002D  
            __end_of_uart_lthread 1994        i2c_int_handler@msg_to_send 009F  
                        ?_in_main 00B4                 WriteTimer0@timer0 002D  
              _timer0_int_handler 0F92                 WriteTimer1@timer1 0001  
             uart_lthread@msgtype 00B2             ToMainLow_sendmsg@data 0018  
             ?_timer0_int_handler 0031                  uart_lthread@uptr 00B0  
          __end_of_init_uart_recv 1BB0               __end_of_init_queues 16A2  
                   OpenADC@config 00B4                          _LATBbits 000F8A  
                 i2check_msg@qptr 002D                        ?_check_msg 00B0  
                        _IPR1bits 000F9F                          _PIE1bits 000F9D  
         i2_start_i2c_slave_reply 0E9E                     ?i2_in_low_int 002F  
                        i2u237_40 1C60                          _PIR1bits 000F9E  
          ToMainHigh_sendmsg@data 0090                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000              ??_timer0_int_handler 0080  
      __size_of_enable_interrupts 0008                 i1send_msg@msgtype 000E  
               i1send_msg@tlength 0012                        _ADCON0bits 000FC2  
            timer0_lthread@length 00B4                _timer1_int_handler 1C3E  
                        i1_memcpy 1916              _InterruptHandlerHigh 0008  
                     ??_ReadUSART 0001                          i2_memcpy 176A  
            timer0_lthread@msgval 00B8                       _in_high_int 1C08  
                    send_msg@data 00BE               _i2c_configure_slave 1B00  
                    send_msg@qmsg 00C4                      send_msg@slot 00C3  
                    send_msg@qptr 00BA             uart_lthread@msgbuffer 00B6  
             ?_timer1_int_handler 0005                   ?_init_uart_recv 00B0  
                     ??_OpenUSART 00B2                   OpenUSART@config 00B5  
                  ??i2_in_low_int 0031             _uart_recv_int_handler 128E  
                    ??_in_low_int 00B4                  __size_of_BusyADC 000C  
                        __Hrparam 0000                  __size_of_OpenADC 0084  
            ?_i2c_configure_slave 0001                          __Lrparam 0000  
               ?_enter_sleep_mode 0001            ??_FromMainHigh_sendmsg 00C9  
            ??_timer1_int_handler 0007          __size_of_i2c_int_handler 0680  
              ??_enter_sleep_mode 002D                  __size_of___lwmod 008A  
                    ??_init_queue 00B2                      ?_WriteTimer0 002D  
                    ?_WriteTimer1 0001          FromMainHigh_sendmsg@data 00C7  
         ToMainLow_sendmsg@length 001A                 main@t0thread_data 01A7  
           ?_InterruptHandlerHigh 0001                  __size_of_in_main 0044  
               i2send_msg@msgtype 0087       ToMainHigh_recvmsg@maxlength 00CC  
               i2send_msg@tlength 008A           init_timer1_lthread@tptr 00B0  
                     _init_queues 1634                __end_of_in_low_int 184E  
                        __ptext10 1634                          __ptext11 1548  
                        __ptext20 1BCE                          __ptext12 16A2  
                        __ptext21 1892                          __ptext13 1B00  
                        __ptext30 1C7E                          __ptext22 18D4  
                        __ptext14 1C70                          __ptext31 1C4C  
                        __ptext23 0A60                          __ptext15 14CA  
                        __ptext24 170C                          __ptext16 184E  
                        __ptext41 0F92                          __ptext33 128E  
                        __ptext25 1B72                          __ptext17 1808  
                        __ptext50 176A                          __ptext42 1C82  
                        __ptext34 1B28                          __ptext26 132A  
                        __ptext18 1C08                          __ptext51 17BA  
                        __ptext43 1C58                          __ptext35 113C  
                        __ptext27 19CE                          __ptext19 1A3C  
                        __ptext52 1AA8                          __ptext44 1C2C  
                        __ptext36 1916                          __ptext28 1AD6  
                        __ptext53 1C64                          __ptext45 00C2  
                        __ptext37 1BB0                          __ptext29 1446  
                        __ptext54 1B4E                          __ptext46 0E9E  
                        __ptext38 1C3E                          __ptext55 1C78  
                        __ptext47 1074                          __ptext39 1C1A  
                        __ptext48 1A72                          __ptext49 0DA8  
                  i1send_msg@data 000F                    i1send_msg@qmsg 0015  
                  i1send_msg@slot 0014                    i1send_msg@qptr 000B  
              uart_lthread@length 00B4         ??i2_start_i2c_slave_reply 002F  
                        _init_i2c 16A2               _init_timer1_lthread 1BF6  
                   __size_of_main 031E                     ??i2_check_msg 002F  
               main@t1thread_data 01AF                       ??_check_msg 00B2  
              __end_of_init_queue 15C2              __size_of_SleepIfOkay 004E  
                        _recv_msg 0A60             ??_i2c_configure_slave 00B0  
           __size_ofi2_ConvertADC 0004                          _send_msg 0CA4  
                  init_queue@qptr 00B0             __size_of_uart_lthread 003E  
                   ??_Delay1KTCYx 00B0               _InterruptHandlerLow 0018  
            ?_init_timer1_lthread 00B0                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2                    OpenUSART@spbrg 00B0  
                        memcpy@d1 00B0                          memcpy@s1 00B2  
           __end_ofi2_in_high_int 1C70      i2c_int_handler@overrun_error 009D  
                i2send_msg@length 0086                          intlevel1 0000  
                        intlevel2 0000                      i2_ConvertADC 1C82  
            ?_InterruptHandlerLow 0001           ??_start_i2c_slave_reply 00B2  
                ___lwmod@dividend 00B0            ?_uart_recv_int_handler 0001  
                    _uart_lthread 1956                 SetChanADC@channel 00B1  
           _block_on_To_msgqueues 14CA                     ?_handle_start 0001  
                ??_timer0_lthread 00B8       __size_of_ToMainHigh_recvmsg 0042  
     __size_of_ToMainHigh_sendmsg 0036                        _OSCCONbits 000FD3  
                ??_timer1_lthread 00CA          ToMainHigh_sendmsg@length 0092  
             __end_ofi2_check_msg 1B72             ??_init_timer1_lthread 00B2  
          ??_InterruptHandlerHigh 00A2                 _ToMainLow_recvmsg 1892  
               _ToMainLow_sendmsg 1B28                main@last_reg_recvd 01A9  
                 ___lwmod@divisor 00B2              __end_ofi2_in_low_int 1AD6  
              ?_ToMainLow_recvmsg 00C8               __end_of_Delay1KTCYx 1BE4  
               ??_i2c_int_handler 0095                   ___lwmod@counter 00B5  
              ?_ToMainLow_sendmsg 0017                       _SSPCON1bits 000FC6  
                     _SSPCON2bits 000FC5                    i2send_msg@data 0088  
           ??_InterruptHandlerLow 001C               ??_ToMainLow_recvmsg 00CC  
                  i2send_msg@qmsg 008D                    i2send_msg@slot 008C  
                  i2send_msg@qptr 0084               ??_ToMainLow_sendmsg 001A  
                  ??_handle_start 002D                      _USART_Status 0035  
