

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Feb 10 17:07:00 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    73  0000                     _ADCON0	set	4034
    74  0000                     _ADCON0bits	set	4034
    75  0000                     _ADCON1	set	4033
    76  0000                     _ADCON2	set	4032
    77  0000                     _ADRESH	set	4036
    78  0000                     _INTCONbits	set	4082
    79  0000                     _IPR1bits	set	3999
    80  0000                     _LATA	set	3977
    81  0000                     _LATB	set	3978
    82  0000                     _LATBbits	set	3978
    83  0000                     _OSCCON	set	4051
    84  0000                     _OSCCONbits	set	4051
    85  0000                     _OSCTUNEbits	set	3995
    86  0000                     _PIE1bits	set	3997
    87  0000                     _PIR1bits	set	3998
    88  0000                     _PORTA	set	3968
    89  0000                     _RCONbits	set	4048
    90  0000                     _RCREG	set	4014
    91  0000                     _RCSTA	set	4011
    92  0000                     _RCSTAbits	set	4011
    93  0000                     _SPBRG	set	4015
    94  0000                     _SPBRGH	set	4016
    95  0000                     _SSPADD	set	4040
    96  0000                     _SSPBUF	set	4041
    97  0000                     _SSPCON1	set	4038
    98  0000                     _SSPCON1bits	set	4038
    99  0000                     _SSPCON2	set	4037
   100  0000                     _SSPCON2bits	set	4037
   101  0000                     _SSPSTAT	set	4039
   102  0000                     _SSPSTATbits	set	4039
   103  0000                     _T0CON	set	4053
   104  0000                     _T0CONbits	set	4053
   105  0000                     _T1CON	set	4045
   106  0000                     _T1CONbits	set	4045
   107  0000                     _TMR0H	set	4055
   108  0000                     _TMR0L	set	4054
   109  0000                     _TMR1H	set	4047
   110  0000                     _TMR1L	set	4046
   111  0000                     _TRISA	set	3986
   112  0000                     _TRISB	set	3987
   113  0000                     _TRISCbits	set	3988
   114  0000                     _TXSTA	set	4012
   115  0000                     _TXSTAbits	set	4012
   116                           
   117                           	psect	nvCOMRAM
   118  000052                     __pnvCOMRAM:
   119                           	opt stack 0
   120  000052                     _uc_ptr:
   121                           	opt stack 0
   122  000052                     	ds	2
   123                           
   124                           	psect	nvBANK0
   125  0000E0                     __pnvBANK0:
   126                           	opt stack 0
   127  0000E0                     _ic_ptr:
   128                           	opt stack 0
   129  0000E0                     	ds	2
   130                           
   131                           ; #config settings
   132  0000                     
   133                           	psect	cinit
   134  00198E                     __pcinit:
   135                           	opt stack 0
   136  00198E                     start_initialization:
   137                           	opt stack 0
   138  00198E                     __initialization:
   139                           	opt stack 0
   140                           
   141                           ; Clear objects allocated to BANK1 (162 bytes)
   142  00198E  EE01  F000         	lfsr	0,__pbssBANK1
   143  001992  0EA2               	movlw	162
   144  001994                     clear_0:
   145  001994  6AEE               	clrf	postinc0,c
   146  001996  06E8               	decf	wreg,f,c
   147  001998  E1FD               	bnz	clear_0
   148                           
   149                           ; Clear objects allocated to BANK0 (54 bytes)
   150  00199A  EE00  F080         	lfsr	0,__pbssBANK0
   151  00199E  0E36               	movlw	54
   152  0019A0                     clear_1:
   153  0019A0  6AEE               	clrf	postinc0,c
   154  0019A2  06E8               	decf	wreg,f,c
   155  0019A4  E1FD               	bnz	clear_1
   156                           
   157                           ; Clear objects allocated to COMRAM (12 bytes)
   158  0019A6  EE00  F046         	lfsr	0,__pbssCOMRAM
   159  0019AA  0E0C               	movlw	12
   160  0019AC                     clear_2:
   161  0019AC  6AEE               	clrf	postinc0,c
   162  0019AE  06E8               	decf	wreg,f,c
   163  0019B0  E1FD               	bnz	clear_2
   164  0019B2                     end_of_initialization:
   165                           	opt stack 0
   166  0019B2                     __end_of__initialization:
   167                           	opt stack 0
   168  0019B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   169  0019B4  6EF8               	movwf	tblptru,c
   170  0019B6  0100               	movlb	0
   171  0019B8  EF97  F003         	goto	_main	;jump to C main() function
   172                           tblptru	equ	0xFF8
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           
   176                           	psect	bssCOMRAM
   177  000046                     __pbssCOMRAM:
   178                           	opt stack 0
   179  000046                     _MQ_Main_Willing_to_block:
   180                           	opt stack 0
   181  000046                     	ds	1
   182  000047                     _USART_Status:
   183                           	opt stack 0
   184  000047                     	ds	1
   185  000048                     _adcbuffer:
   186                           	opt stack 0
   187  000048                     	ds	10
   188                           tblptru	equ	0xFF8
   189                           postinc0	equ	0xFEE
   190                           wreg	equ	0xFE8
   191                           
   192                           	psect	bssBANK0
   193  000080                     __pbssBANK0:
   194                           	opt stack 0
   195  000080                     _ToMainLow_MQ:
   196                           	opt stack 0
   197  000080                     	ds	54
   198                           tblptru	equ	0xFF8
   199                           postinc0	equ	0xFEE
   200                           wreg	equ	0xFE8
   201                           
   202                           	psect	bssBANK1
   203  000100                     __pbssBANK1:
   204                           	opt stack 0
   205  000100                     _FromMainHigh_MQ:
   206                           	opt stack 0
   207  000100                     	ds	54
   208  000136                     _FromMainLow_MQ:
   209                           	opt stack 0
   210  000136                     	ds	54
   211  00016C                     _ToMainHigh_MQ:
   212                           	opt stack 0
   213  00016C                     	ds	54
   214                           tblptru	equ	0xFF8
   215                           postinc0	equ	0xFEE
   216                           wreg	equ	0xFE8
   217                           
   218                           	psect	cstackBANK1
   219  0001A2                     __pcstackBANK1:
   220                           	opt stack 0
   221  0001A2                     send_msg@qptr:
   222                           	opt stack 0
   223  0001A2                     recv_msg@qptr:
   224                           	opt stack 0
   225                           
   226                           ; 2 bytes @ 0x0
   227  0001A2                     	ds	2
   228  0001A4                     send_msg@length:
   229                           	opt stack 0
   230  0001A4                     recv_msg@maxlength:
   231                           	opt stack 0
   232                           
   233                           ; 1 bytes @ 0x2
   234  0001A4                     	ds	1
   235  0001A5                     send_msg@msgtype:
   236                           	opt stack 0
   237  0001A5                     recv_msg@msgtype:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x3
   241  0001A5                     	ds	1
   242  0001A6                     send_msg@data:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x4
   246  0001A6                     	ds	1
   247  0001A7                     recv_msg@data:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x5
   251  0001A7                     	ds	1
   252  0001A8                     send_msg@tlength:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x6
   256  0001A8                     	ds	1
   257  0001A9                     recv_msg@slot:
   258                           	opt stack 0
   259                           
   260                           ; 1 bytes @ 0x7
   261  0001A9                     	ds	1
   262  0001AA                     send_msg@slot:
   263                           	opt stack 0
   264  0001AA                     recv_msg@tlength:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x8
   268  0001AA                     	ds	1
   269  0001AB                     send_msg@qmsg:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x9
   273  0001AB                     	ds	1
   274  0001AC                     recv_msg@qmsg:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0xA
   278  0001AC                     	ds	1
   279  0001AD                     FromMainHigh_sendmsg@msgtype:
   280                           	opt stack 0
   281                           
   282                           ; 1 bytes @ 0xB
   283  0001AD                     	ds	1
   284  0001AE                     ToMainLow_recvmsg@msgtype:
   285                           	opt stack 0
   286  0001AE                     ToMainHigh_recvmsg@msgtype:
   287                           	opt stack 0
   288  0001AE                     FromMainHigh_sendmsg@data:
   289                           	opt stack 0
   290                           
   291                           ; 2 bytes @ 0xC
   292  0001AE                     	ds	2
   293  0001B0                     ToMainLow_recvmsg@data:
   294                           	opt stack 0
   295  0001B0                     ToMainHigh_recvmsg@data:
   296                           	opt stack 0
   297  0001B0                     timer1_lthread@tptr:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0xE
   301  0001B0                     	ds	2
   302  0001B2                     ToMainLow_recvmsg@maxlength:
   303                           	opt stack 0
   304  0001B2                     ToMainHigh_recvmsg@maxlength:
   305                           	opt stack 0
   306  0001B2                     timer1_lthread@msgtype:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x10
   310  0001B2                     	ds	2
   311  0001B4                     timer1_lthread@length:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0x12
   315  0001B4                     	ds	2
   316  0001B6                     timer1_lthread@msgbuffer:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0x14
   320  0001B6                     	ds	2
   321  0001B8                     ??_timer1_lthread:
   322                           
   323                           ; 0 bytes @ 0x16
   324  0001B8                     	ds	1
   325  0001B9                     timer1_lthread@retval:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x17
   329  0001B9                     	ds	1
   330  0001BA                     ??_main:
   331                           
   332                           ; 0 bytes @ 0x18
   333  0001BA                     	ds	2
   334  0001BC                     main@msgbuffer:
   335                           	opt stack 0
   336                           
   337                           ; 11 bytes @ 0x1A
   338  0001BC                     	ds	11
   339  0001C7                     main@uthread_data:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x25
   343  0001C7                     	ds	2
   344  0001C9                     main@t0thread_data:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x27
   348  0001C9                     	ds	2
   349  0001CB                     main@last_reg_recvd:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x29
   353  0001CB                     	ds	1
   354  0001CC                     main@uc:
   355                           	opt stack 0
   356                           
   357                           ; 5 bytes @ 0x2A
   358  0001CC                     	ds	5
   359  0001D1                     main@t1thread_data:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x2F
   363  0001D1                     	ds	2
   364  0001D3                     main@msgtype:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x31
   368  0001D3                     	ds	1
   369  0001D4                     main@length:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x32
   373  0001D4                     	ds	1
   374  0001D5                     main@ic:
   375                           	opt stack 0
   376                           
   377                           ; 28 bytes @ 0x33
   378  0001D5                     	ds	28
   379                           tblptru	equ	0xFF8
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           
   383                           	psect	cstackBANK0
   384  0000B6                     __pcstackBANK0:
   385                           	opt stack 0
   386  0000B6                     ToMainHigh_sendmsg@length:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x0
   390  0000B6                     	ds	1
   391  0000B7                     i2c_int_handler@adcbuffer:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x1
   395  0000B7                     	ds	2
   396  0000B9                     ??_i2c_int_handler:
   397                           
   398                           ; 0 bytes @ 0x3
   399  0000B9                     	ds	2
   400  0000BB                     i2c_int_handler@length:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x5
   404  0000BB                     	ds	2
   405  0000BD                     i2c_int_handler@error_buf:
   406                           	opt stack 0
   407                           
   408                           ; 3 bytes @ 0x7
   409  0000BD                     	ds	3
   410  0000C0                     i2c_int_handler@data_written:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0xA
   414  0000C0                     	ds	1
   415  0000C1                     i2c_int_handler@overrun_error:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0xB
   419  0000C1                     	ds	1
   420  0000C2                     i2c_int_handler@i2c_data:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0xC
   424  0000C2                     	ds	1
   425  0000C3                     i2c_int_handler@msg_to_send:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0xD
   429  0000C3                     	ds	1
   430  0000C4                     i2c_int_handler@msg_ready:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0xE
   434  0000C4                     	ds	1
   435  0000C5                     i2c_int_handler@data_read:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0xF
   439  0000C5                     	ds	1
   440  0000C6                     ??_InterruptHandlerHigh:
   441                           
   442                           ; 0 bytes @ 0x10
   443  0000C6                     	ds	14
   444  0000D4                     ??_SetChanADC:
   445  0000D4                     ?_in_high_int:
   446                           	opt stack 0
   447  0000D4                     ?___lwmod:
   448                           	opt stack 0
   449  0000D4                     i2c_configure_slave@addr:
   450                           	opt stack 0
   451  0000D4                     OpenADC@config2:
   452                           	opt stack 0
   453  0000D4                     OpenTimer0@config:
   454                           	opt stack 0
   455  0000D4                     OpenTimer1@config:
   456                           	opt stack 0
   457  0000D4                     Delay1KTCYx@unit:
   458                           	opt stack 0
   459  0000D4                     init_queue@qptr:
   460                           	opt stack 0
   461  0000D4                     check_msg@qptr:
   462                           	opt stack 0
   463  0000D4                     start_i2c_slave_reply@msg:
   464                           	opt stack 0
   465  0000D4                     init_i2c@ic:
   466                           	opt stack 0
   467  0000D4                     init_uart_recv@uc:
   468                           	opt stack 0
   469  0000D4                     timer0_lthread@tptr:
   470                           	opt stack 0
   471  0000D4                     init_timer1_lthread@tptr:
   472                           	opt stack 0
   473  0000D4                     uart_lthread@uptr:
   474                           	opt stack 0
   475  0000D4                     OpenUSART@spbrg:
   476                           	opt stack 0
   477  0000D4                     ___lwmod@dividend:
   478                           	opt stack 0
   479  0000D4                     memcpy@d1:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x1E
   483  0000D4                     	ds	1
   484  0000D5                     OpenADC@portconfig:
   485                           	opt stack 0
   486  0000D5                     SetChanADC@channel:
   487                           	opt stack 0
   488                           
   489                           ; 1 bytes @ 0x1F
   490  0000D5                     	ds	1
   491  0000D6                     ??_OpenUSART:
   492  0000D6                     ??_OpenADC:
   493  0000D6                     ??_start_i2c_slave_reply:
   494  0000D6                     ??_init_queue:
   495  0000D6                     ??_check_msg:
   496  0000D6                     ?_in_low_int:
   497                           	opt stack 0
   498  0000D6                     timer0_lthread@msgtype:
   499                           	opt stack 0
   500  0000D6                     uart_lthread@msgtype:
   501                           	opt stack 0
   502  0000D6                     ___lwmod@divisor:
   503                           	opt stack 0
   504  0000D6                     memcpy@s1:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x20
   508  0000D6                     	ds	1
   509  0000D7                     init_queue@i:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x21
   513  0000D7                     	ds	1
   514  0000D8                     ??_init_queues:
   515  0000D8                     ??___lwmod:
   516  0000D8                     ?_in_main:
   517                           	opt stack 0
   518  0000D8                     start_i2c_slave_reply@length:
   519                           	opt stack 0
   520  0000D8                     OpenADC@config:
   521                           	opt stack 0
   522  0000D8                     timer0_lthread@length:
   523                           	opt stack 0
   524  0000D8                     uart_lthread@length:
   525                           	opt stack 0
   526  0000D8                     memcpy@n:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x22
   530  0000D8                     	ds	1
   531  0000D9                     OpenUSART@config:
   532                           	opt stack 0
   533  0000D9                     ___lwmod@counter:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x23
   537  0000D9                     	ds	1
   538  0000DA                     ??_block_on_To_msgqueues:
   539  0000DA                     timer0_lthread@msgbuffer:
   540                           	opt stack 0
   541  0000DA                     uart_lthread@msgbuffer:
   542                           	opt stack 0
   543  0000DA                     memcpy@d:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x24
   547  0000DA                     	ds	2
   548  0000DC                     timer0_lthread@msgval:
   549                           	opt stack 0
   550  0000DC                     memcpy@s:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0x26
   554  0000DC                     	ds	2
   555  0000DE                     ??_send_msg:
   556  0000DE                     ??_recv_msg:
   557                           
   558                           ; 0 bytes @ 0x28
   559  0000DE                     	ds	1
   560  0000DF                     FromMainHigh_sendmsg@length:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x29
   564  0000DF                     	ds	1
   565  0000E0                     tblptru	equ	0xFF8
   566                           postinc0	equ	0xFEE
   567                           wreg	equ	0xFE8
   568                           
   569                           ; 0 bytes @ 0x2A
   570                           
   571                           	psect	cstackCOMRAM
   572  000001                     __pcstackCOMRAM:
   573                           	opt stack 0
   574  000001                     ReadUSART@data:
   575                           	opt stack 0
   576  000001                     WriteTimer1@timer1:
   577                           	opt stack 0
   578  000001                     i1memcpy@d1:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x0
   582  000001                     	ds	2
   583  000003                     WriteTimer1@timer:
   584                           	opt stack 0
   585  000003                     i1memcpy@s1:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x2
   589  000003                     	ds	2
   590  000005                     timer1_int_handler@adcbuffer:
   591                           	opt stack 0
   592  000005                     i1memcpy@n:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x4
   596  000005                     	ds	2
   597  000007                     i1memcpy@d:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x6
   601  000007                     	ds	2
   602  000009                     i1memcpy@s:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x8
   606  000009                     	ds	2
   607  00000B                     i1send_msg@qptr:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0xA
   611  00000B                     	ds	2
   612  00000D                     i1send_msg@length:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0xC
   616  00000D                     	ds	1
   617  00000E                     i1send_msg@msgtype:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0xD
   621  00000E                     	ds	1
   622  00000F                     i1send_msg@data:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0xE
   626  00000F                     	ds	2
   627  000011                     ??i1_send_msg:
   628                           
   629                           ; 0 bytes @ 0x10
   630  000011                     	ds	1
   631  000012                     i1send_msg@tlength:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x11
   635  000012                     	ds	2
   636  000014                     i1send_msg@slot:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x13
   640  000014                     	ds	1
   641  000015                     i1send_msg@qmsg:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x14
   645  000015                     	ds	2
   646  000017                     ToMainLow_sendmsg@msgtype:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x16
   650  000017                     	ds	1
   651  000018                     ToMainLow_sendmsg@data:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x17
   655  000018                     	ds	2
   656  00001A                     ToMainLow_sendmsg@length:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0x19
   660  00001A                     	ds	1
   661  00001B                     ??_uart_recv_int_handler:
   662                           
   663                           ; 0 bytes @ 0x1A
   664  00001B                     	ds	1
   665  00001C                     ??_InterruptHandlerLow:
   666                           
   667                           ; 0 bytes @ 0x1B
   668  00001C                     	ds	17
   669  00002D                     ?i2_in_high_int:
   670                           	opt stack 0
   671  00002D                     handle_start@data_read:
   672                           	opt stack 0
   673  00002D                     WriteTimer0@timer0:
   674                           	opt stack 0
   675  00002D                     i2check_msg@qptr:
   676                           	opt stack 0
   677  00002D                     i2start_i2c_slave_reply@msg:
   678                           	opt stack 0
   679  00002D                     i2memcpy@d1:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x2C
   683  00002D                     	ds	2
   684  00002F                     ??i2_check_msg:
   685  00002F                     ??i2_start_i2c_slave_reply:
   686  00002F                     ?i2_in_low_int:
   687                           	opt stack 0
   688  00002F                     WriteTimer0@timer:
   689                           	opt stack 0
   690  00002F                     i2memcpy@s1:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x2E
   694  00002F                     	ds	2
   695  000031                     i2start_i2c_slave_reply@length:
   696                           	opt stack 0
   697  000031                     timer0_int_handler@adcbuffer:
   698                           	opt stack 0
   699  000031                     i2memcpy@n:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x30
   703  000031                     	ds	2
   704  000033                     ??_timer0_int_handler:
   705  000033                     i2memcpy@d:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x32
   709  000033                     	ds	2
   710  000035                     timer0_int_handler@i:
   711                           	opt stack 0
   712  000035                     i2memcpy@s:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x34
   716  000035                     	ds	2
   717  000037                     i2send_msg@qptr:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0x36
   721  000037                     	ds	2
   722  000039                     i2send_msg@length:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0x38
   726  000039                     	ds	1
   727  00003A                     i2send_msg@msgtype:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x39
   731  00003A                     	ds	1
   732  00003B                     i2send_msg@data:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x3A
   736  00003B                     	ds	2
   737  00003D                     ??i2_send_msg:
   738                           
   739                           ; 0 bytes @ 0x3C
   740  00003D                     	ds	1
   741  00003E                     i2send_msg@tlength:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x3D
   745  00003E                     	ds	2
   746  000040                     i2send_msg@slot:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x3F
   750  000040                     	ds	1
   751  000041                     i2send_msg@qmsg:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x40
   755  000041                     	ds	2
   756  000043                     ToMainHigh_sendmsg@msgtype:
   757                           	opt stack 0
   758                           
   759                           ; 1 bytes @ 0x42
   760  000043                     	ds	1
   761  000044                     ToMainHigh_sendmsg@data:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x43
   765  000044                     	ds	2
   766  000046                     tblptru	equ	0xFF8
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           
   770                           ; 0 bytes @ 0x45
   771 ;;
   772 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   773 ;;
   774 ;; *************** function _main *****************
   775 ;; Defined at:
   776 ;;		line 186 in file "../src/main.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  ic             28   51[BANK1 ] struct __i2c_comm
   781 ;;  msgbuffer      11   26[BANK1 ] unsigned char [11]
   782 ;;  uc              5   42[BANK1 ] struct __uart_comm
   783 ;;  t1thread_dat    2   47[BANK1 ] struct __timer1_thread_s
   784 ;;  t0thread_dat    2   39[BANK1 ] struct __timer0_thread_s
   785 ;;  uthread_data    2   37[BANK1 ] struct __uart_thread_str
   786 ;;  length          1   50[BANK1 ] char 
   787 ;;  msgtype         1   49[BANK1 ] unsigned char 
   788 ;;  last_reg_rec    1   41[BANK1 ] unsigned char 
   789 ;;  i               1    0        unsigned char 
   790 ;;  c               1    0        unsigned char 
   791 ;; Return value:  Size  Location     Type
   792 ;;		None               void
   793 ;; Registers used:
   794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   800 ;;      Params:         0       0       0       0       0
   801 ;;      Locals:         0       0      53       0       0
   802 ;;      Temps:          0       0       2       0       0
   803 ;;      Totals:         0       0      55       0       0
   804 ;;Total ram usage:       55 bytes
   805 ;; Hardware stack levels required when called:   14
   806 ;; This function calls:
   807 ;;		_BusyADC
   808 ;;		_ConvertADC
   809 ;;		_OpenADC
   810 ;;		_OpenTimer0
   811 ;;		_OpenTimer1
   812 ;;		_OpenUSART
   813 ;;		_SetChanADC
   814 ;;		_ToMainHigh_recvmsg
   815 ;;		_ToMainLow_recvmsg
   816 ;;		_block_on_To_msgqueues
   817 ;;		_enable_interrupts
   818 ;;		_i2c_configure_slave
   819 ;;		_init_i2c
   820 ;;		_init_queues
   821 ;;		_init_timer1_lthread
   822 ;;		_init_uart_recv
   823 ;;		_start_i2c_slave_reply
   824 ;;		_timer0_lthread
   825 ;;		_timer1_lthread
   826 ;;		_uart_lthread
   827 ;; This function is called by:
   828 ;;		Startup code after reset
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text0
   833  00072E                     __ptext0:
   834                           	opt stack 0
   835  00072E                     _main:
   836                           	opt stack 17
   837                           
   838                           ;main.c: 187: char c;
   839                           ;main.c: 188: signed char length;
   840                           ;main.c: 189: unsigned char msgtype;
   841                           ;main.c: 190: unsigned char last_reg_recvd;
   842                           ;main.c: 191: uart_comm uc;
   843                           ;main.c: 192: i2c_comm ic;
   844                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
   845                           ;main.c: 194: unsigned char i;
   846                           ;main.c: 195: uart_thread_struct uthread_data;
   847                           ;main.c: 196: timer1_thread_struct t1thread_data;
   848                           ;main.c: 197: timer0_thread_struct t0thread_data;
   849                           ;main.c: 205: OSCCON = 0x82;
   850                           
   851                           ;incstack = 0
   852  00072E  0E82               	movlw	130
   853  000730  6ED3               	movwf	4051,c	;volatile
   854                           
   855                           ;main.c: 206: OSCTUNEbits.PLLEN = 1;
   856  000732  8C9B               	bsf	3995,6,c	;volatile
   857                           
   858                           ;main.c: 224: init_uart_recv(&uc);
   859  000734  0101               	movlb	1	; () banked
   860  000736  0E01               	movlw	high main@uc
   861  000738  0100               	movlb	0	; () banked
   862  00073A  0100               	movlb	0	; () banked
   863  00073C  6FD5               	movwf	(init_uart_recv@uc+1)& (0+255),b
   864  00073E  0101               	movlb	1	; () banked
   865  000740  0ECC               	movlw	low main@uc
   866  000742  0100               	movlb	0	; () banked
   867  000744  0100               	movlb	0	; () banked
   868  000746  6FD4               	movwf	init_uart_recv@uc& (0+255),b
   869  000748  EC66  F00D         	call	_init_uart_recv	;wreg free
   870                           
   871                           ;main.c: 227: init_i2c(&ic);
   872  00074C  0101               	movlb	1	; () banked
   873  00074E  0E01               	movlw	high main@ic
   874  000750  0100               	movlb	0	; () banked
   875  000752  0100               	movlb	0	; () banked
   876  000754  6FD5               	movwf	(init_i2c@ic+1)& (0+255),b
   877  000756  0101               	movlb	1	; () banked
   878  000758  0ED5               	movlw	low main@ic
   879  00075A  0100               	movlb	0	; () banked
   880  00075C  0100               	movlb	0	; () banked
   881  00075E  6FD4               	movwf	init_i2c@ic& (0+255),b
   882  000760  EC04  F00B         	call	_init_i2c	;wreg free
   883                           
   884                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
   885  000764  0101               	movlb	1	; () banked
   886  000766  0E01               	movlw	high main@t1thread_data
   887  000768  0100               	movlb	0	; () banked
   888  00076A  0100               	movlb	0	; () banked
   889  00076C  6FD5               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   890  00076E  0101               	movlb	1	; () banked
   891  000770  0ED1               	movlw	low main@t1thread_data
   892  000772  0100               	movlb	0	; () banked
   893  000774  0100               	movlb	0	; () banked
   894  000776  6FD4               	movwf	init_timer1_lthread@tptr& (0+255),b
   895  000778  EC98  F00D         	call	_init_timer1_lthread	;wreg free
   896                           
   897                           ;main.c: 233: init_queues();
   898  00077C  ECCD  F00A         	call	_init_queues	;wreg free
   899                           
   900                           ;main.c: 237: TRISB = 0x0;
   901  000780  0E00               	movlw	0
   902  000782  6E93               	movwf	3987,c	;volatile
   903                           
   904                           ;main.c: 238: LATB = 0x0;
   905  000784  0E00               	movlw	0
   906  000786  6E8A               	movwf	3978,c	;volatile
   907                           
   908                           ;main.c: 240: PORTA = 0x0;
   909  000788  0E00               	movlw	0
   910  00078A  6E80               	movwf	3968,c	;volatile
   911                           
   912                           ;main.c: 241: LATA = 0x0;
   913  00078C  0E00               	movlw	0
   914  00078E  6E89               	movwf	3977,c	;volatile
   915                           
   916                           ;main.c: 242: TRISA = 0x0F;
   917  000790  0E0F               	movlw	15
   918  000792  6E92               	movwf	3986,c	;volatile
   919                           
   920                           ;main.c: 255: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110011);
   921  000794  0ED3               	movlw	211
   922  000796  ECF5  F00C         	call	_OpenTimer0
   923                           
   924                           ;main.c: 264: OpenTimer1(0b11111111 & 0b10111111 & 0b11001111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
   925  00079A  0E85               	movlw	133
   926  00079C  EC75  F00C         	call	_OpenTimer1
   927                           
   928                           ;main.c: 271: IPR1bits.TMR1IP = 0;
   929  0007A0  909F               	bcf	3999,0,c	;volatile
   930                           
   931                           ;main.c: 273: IPR1bits.RCIP = 0;
   932  0007A2  9A9F               	bcf	3999,5,c	;volatile
   933                           
   934                           ;main.c: 275: IPR1bits.SSPIP = 1;
   935  0007A4  869F               	bsf	3999,3,c	;volatile
   936                           
   937                           ;main.c: 284: i2c_configure_slave(0x9E);
   938  0007A6  0E9E               	movlw	158
   939  0007A8  EC0A  F00D         	call	_i2c_configure_slave
   940                           
   941                           ;main.c: 299: PIE1bits.SSPIE = 1;
   942  0007AC  869D               	bsf	3997,3,c	;volatile
   943                           
   944                           ;main.c: 310: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   945                           ;main.c: 311: 0b11111111 & 0b11101111, 0x19);
   946  0007AE  0E00               	movlw	0
   947  0007B0  0100               	movlb	0	; () banked
   948  0007B2  0100               	movlb	0	; () banked
   949  0007B4  6FD5               	movwf	(OpenUSART@spbrg+1)& (0+255),b
   950  0007B6  0E19               	movlw	25
   951  0007B8  0100               	movlb	0	; () banked
   952  0007BA  6FD4               	movwf	OpenUSART@spbrg& (0+255),b
   953  0007BC  0E6C               	movlw	108
   954  0007BE  EC48  F009         	call	_OpenUSART
   955                           
   956                           ;main.c: 317: enable_interrupts();
   957  0007C2  ECD5  F00D         	call	_enable_interrupts	;wreg free
   958                           
   959                           ;main.c: 331: OpenADC(0b10011111 & 0b01111111 & 0b11110101,
   960                           ;main.c: 332: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
   961                           ;main.c: 333: 0b1011);
   962  0007C6  0101               	movlb	1	; () banked
   963  0007C8  6FBA               	movwf	??_main& (0+255),b
   964  0007CA  0E0C               	movlw	12
   965  0007CC  0100               	movlb	0	; () banked
   966  0007CE  0100               	movlb	0	; () banked
   967  0007D0  6FD4               	movwf	OpenADC@config2& (0+255),b
   968  0007D2  0101               	movlb	1	; () banked
   969  0007D4  51BA               	movf	??_main& (0+255),w,b
   970  0007D6  0101               	movlb	1	; () banked
   971  0007D8  6FBB               	movwf	(??_main+1)& (0+255),b
   972  0007DA  0E0B               	movlw	11
   973  0007DC  0100               	movlb	0	; () banked
   974  0007DE  0100               	movlb	0	; () banked
   975  0007E0  6FD5               	movwf	OpenADC@portconfig& (0+255),b
   976  0007E2  0101               	movlb	1	; () banked
   977  0007E4  51BB               	movf	(??_main+1)& (0+255),w,b
   978  0007E6  0E15               	movlw	21
   979  0007E8  ECD6  F009         	call	_OpenADC
   980                           
   981                           ;main.c: 334: SetChanADC(0b10001111);
   982  0007EC  0E8F               	movlw	143
   983  0007EE  EC56  F00D         	call	_SetChanADC
   984  0007F2                     l3123:
   985                           
   986                           ;main.c: 347: block_on_To_msgqueues();
   987  0007F2  EC18  F00A         	call	_block_on_To_msgqueues	;wreg free
   988                           
   989                           ;main.c: 354: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   990  0007F6  0101               	movlb	1	; () banked
   991  0007F8  0E01               	movlw	high main@msgtype
   992  0007FA  0101               	movlb	1	; () banked
   993  0007FC  0101               	movlb	1	; () banked
   994  0007FE  6FAF               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
   995  000800  0101               	movlb	1	; () banked
   996  000802  0ED3               	movlw	low main@msgtype
   997  000804  0101               	movlb	1	; () banked
   998  000806  0101               	movlb	1	; () banked
   999  000808  6FAE               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1000  00080A  0101               	movlb	1	; () banked
  1001  00080C  0E01               	movlw	high main@msgbuffer
  1002  00080E  0101               	movlb	1	; () banked
  1003  000810  0101               	movlb	1	; () banked
  1004  000812  6FB1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1005  000814  0101               	movlb	1	; () banked
  1006  000816  0EBC               	movlw	low main@msgbuffer
  1007  000818  0101               	movlb	1	; () banked
  1008  00081A  0101               	movlb	1	; () banked
  1009  00081C  6FB0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1010  00081E  0E0A               	movlw	10
  1011  000820  ECF5  F00B         	call	_ToMainHigh_recvmsg
  1012  000824  0101               	movlb	1	; () banked
  1013  000826  0101               	movlb	1	; () banked
  1014  000828  6FD4               	movwf	main@length& (0+255),b
  1015                           
  1016                           ; BSR set to: 1
  1017                           ;main.c: 355: if (length < 0) {
  1018  00082A  0101               	movlb	1	; () banked
  1019  00082C  0101               	movlb	1	; () banked
  1020  00082E  BFD4               	btfsc	main@length& (0+255),7,b
  1021  000830  D08E               	goto	l3155
  1022  000832  D07E               	goto	l3153
  1023  000834                     l3131:
  1024                           
  1025                           ; BSR set to: 1
  1026                           ;main.c: 363: {
  1027                           ;main.c: 364: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1028  000834  0101               	movlb	1	; () banked
  1029  000836  0E01               	movlw	high main@t0thread_data
  1030  000838  0100               	movlb	0	; () banked
  1031  00083A  0100               	movlb	0	; () banked
  1032  00083C  6FD5               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1033  00083E  0101               	movlb	1	; () banked
  1034  000840  0EC9               	movlw	low main@t0thread_data
  1035  000842  0100               	movlb	0	; () banked
  1036  000844  0100               	movlb	0	; () banked
  1037  000846  6FD4               	movwf	timer0_lthread@tptr& (0+255),b
  1038  000848  0101               	movlb	1	; () banked
  1039  00084A  0100               	movlb	0	; () banked
  1040  00084C  C1D3  F0D6         	movff	main@msgtype,timer0_lthread@msgtype
  1041  000850  0100               	movlb	0	; () banked
  1042  000852  0100               	movlb	0	; () banked
  1043  000854  6BD7               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1044  000856  0101               	movlb	1	; () banked
  1045  000858  0101               	movlb	1	; () banked
  1046  00085A  51D4               	movf	main@length& (0+255),w,b
  1047  00085C  0100               	movlb	0	; () banked
  1048  00085E  0100               	movlb	0	; () banked
  1049  000860  6FD8               	movwf	timer0_lthread@length& (0+255),b
  1050  000862  0100               	movlb	0	; () banked
  1051  000864  6BD9               	clrf	(timer0_lthread@length+1)& (0+255),b
  1052  000866  0100               	movlb	0	; () banked
  1053  000868  BFD8               	btfsc	timer0_lthread@length& (0+255),7,b
  1054  00086A  07D9               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1055  00086C  0101               	movlb	1	; () banked
  1056  00086E  0E01               	movlw	high main@msgbuffer
  1057  000870  0100               	movlb	0	; () banked
  1058  000872  0100               	movlb	0	; () banked
  1059  000874  6FDB               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1060  000876  0101               	movlb	1	; () banked
  1061  000878  0EBC               	movlw	low main@msgbuffer
  1062  00087A  0100               	movlb	0	; () banked
  1063  00087C  0100               	movlb	0	; () banked
  1064  00087E  6FDA               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1065  000880  EC8F  F00D         	call	_timer0_lthread	;wreg free
  1066                           
  1067                           ;main.c: 365: break;
  1068  000884  D064               	goto	l3155
  1069  000886                     l122:
  1070                           
  1071                           ;main.c: 368: case 41:
  1072                           ;main.c: 369: {
  1073                           ;main.c: 372: last_reg_recvd = msgbuffer[0];
  1074  000886  C1BC  F1CB         	movff	main@msgbuffer,main@last_reg_recvd
  1075                           
  1076                           ;main.c: 373: break;
  1077  00088A  D061               	goto	l3155
  1078  00088C                     l3133:
  1079                           
  1080                           ;main.c: 386: {
  1081                           ;main.c: 387: length = 2;
  1082  00088C  0101               	movlb	1	; () banked
  1083  00088E  6FBA               	movwf	??_main& (0+255),b
  1084  000890  0E02               	movlw	2
  1085  000892  0101               	movlb	1	; () banked
  1086  000894  0101               	movlb	1	; () banked
  1087  000896  6FD4               	movwf	main@length& (0+255),b
  1088  000898  0101               	movlb	1	; () banked
  1089  00089A  51BA               	movf	??_main& (0+255),w,b
  1090                           
  1091                           ; BSR set to: 1
  1092                           ;main.c: 388: ConvertADC();
  1093  00089C  ECDC  F00D         	call	_ConvertADC	;wreg free
  1094  0008A0                     l3137:
  1095  0008A0  ECC3  F00D         	call	_BusyADC	;wreg free
  1096  0008A4  0900               	iorlw	0
  1097  0008A6  A4D8               	btfss	status,2,c
  1098  0008A8  D7FB               	goto	l3137
  1099                           
  1100                           ;main.c: 391: }
  1101                           ;main.c: 392: msgbuffer[0] = ADRESH;
  1102  0008AA  CFC4 F1BC          	movff	4036,main@msgbuffer	;volatile
  1103                           
  1104                           ;main.c: 393: msgbuffer[1] = 0xAA;
  1105  0008AE  0101               	movlb	1	; () banked
  1106  0008B0  6FBA               	movwf	??_main& (0+255),b
  1107  0008B2  0EAA               	movlw	170
  1108  0008B4  0101               	movlb	1	; () banked
  1109  0008B6  0101               	movlb	1	; () banked
  1110  0008B8  6FBD               	movwf	(main@msgbuffer+1)& (0+255),b
  1111  0008BA  D00C               	goto	L1
  1112  0008BC                     l3141:
  1113                           
  1114                           ; BSR set to: 1
  1115                           ;main.c: 397: {
  1116                           ;main.c: 398: length = 1;
  1117  0008BC  0101               	movlb	1	; () banked
  1118  0008BE  6FBA               	movwf	??_main& (0+255),b
  1119  0008C0  0E01               	movlw	1
  1120  0008C2  0101               	movlb	1	; () banked
  1121  0008C4  0101               	movlb	1	; () banked
  1122  0008C6  6FD4               	movwf	main@length& (0+255),b
  1123  0008C8  0101               	movlb	1	; () banked
  1124  0008CA  51BA               	movf	??_main& (0+255),w,b
  1125                           
  1126                           ;main.c: 399: msgbuffer[0] = 0x3A;
  1127  0008CC  0101               	movlb	1	; () banked
  1128  0008CE  6FBA               	movwf	??_main& (0+255),b
  1129  0008D0  0E3A               	movlw	58
  1130  0008D2  D00E               	goto	L2
  1131  0008D4                     L1:
  1132  0008D4  0101               	movlb	1	; () banked
  1133  0008D6  51BA               	movf	??_main& (0+255),w,b
  1134                           
  1135                           ;main.c: 400: break;
  1136  0008D8  D01B               	goto	l3149
  1137  0008DA                     l3143:
  1138                           
  1139                           ; BSR set to: 1
  1140                           ;main.c: 403: {
  1141                           ;main.c: 404: length = 1;
  1142  0008DA  0101               	movlb	1	; () banked
  1143  0008DC  6FBA               	movwf	??_main& (0+255),b
  1144  0008DE  0E01               	movlw	1
  1145  0008E0  0101               	movlb	1	; () banked
  1146  0008E2  0101               	movlb	1	; () banked
  1147  0008E4  6FD4               	movwf	main@length& (0+255),b
  1148  0008E6  0101               	movlb	1	; () banked
  1149  0008E8  51BA               	movf	??_main& (0+255),w,b
  1150                           
  1151                           ;main.c: 405: msgbuffer[0] = 0xA3;
  1152  0008EA  0101               	movlb	1	; () banked
  1153  0008EC  6FBA               	movwf	??_main& (0+255),b
  1154  0008EE  0EA3               	movlw	163
  1155  0008F0                     L2:
  1156  0008F0  0101               	movlb	1	; () banked
  1157  0008F2  0101               	movlb	1	; () banked
  1158  0008F4  6FBC               	movwf	main@msgbuffer& (0+255),b
  1159  0008F6  D7EE               	goto	L1
  1160  0008F8                     l3147:
  1161  0008F8  0101               	movlb	1	; () banked
  1162  0008FA  0101               	movlb	1	; () banked
  1163  0008FC  51CB               	movf	main@last_reg_recvd& (0+255),w,b
  1164                           
  1165                           ; Switch size 1, requested type "space"
  1166                           ; Number of cases is 3, Range of values is 168 to 170
  1167                           ; switch strategies available:
  1168                           ; Name         Instructions Cycles
  1169                           ; simple_byte           10     6 (average)
  1170                           ;	Chosen strategy is simple_byte
  1171  0008FE  0AA8               	xorlw	168	; case 168
  1172  000900  B4D8               	btfsc	status,2,c
  1173  000902  D7DC               	goto	l3141
  1174  000904  0A01               	xorlw	1	; case 169
  1175  000906  B4D8               	btfsc	status,2,c
  1176  000908  D7E8               	goto	l3143
  1177  00090A  0A03               	xorlw	3	; case 170
  1178  00090C  B4D8               	btfsc	status,2,c
  1179  00090E  D7BE               	goto	l3133
  1180  000910                     l3149:
  1181                           
  1182                           ; BSR set to: 1
  1183                           ;main.c: 409: start_i2c_slave_reply(length, msgbuffer);
  1184  000910  0101               	movlb	1	; () banked
  1185  000912  0E01               	movlw	high main@msgbuffer
  1186  000914  0100               	movlb	0	; () banked
  1187  000916  0100               	movlb	0	; () banked
  1188  000918  6FD5               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1189  00091A  0101               	movlb	1	; () banked
  1190  00091C  0EBC               	movlw	low main@msgbuffer
  1191  00091E  0100               	movlb	0	; () banked
  1192  000920  0100               	movlb	0	; () banked
  1193  000922  6FD4               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1194  000924  0101               	movlb	1	; () banked
  1195  000926  0101               	movlb	1	; () banked
  1196  000928  51D4               	movf	main@length& (0+255),w,b
  1197  00092A  ECC0  F005         	call	_start_i2c_slave_reply
  1198                           
  1199                           ;main.c: 410: break;
  1200  00092E  D00F               	goto	l3155
  1201  000930                     l3153:
  1202  000930  0101               	movlb	1	; () banked
  1203  000932  0101               	movlb	1	; () banked
  1204  000934  51D3               	movf	main@msgtype& (0+255),w,b
  1205                           
  1206                           ; Switch size 1, requested type "space"
  1207                           ; Number of cases is 4, Range of values is 10 to 42
  1208                           ; switch strategies available:
  1209                           ; Name         Instructions Cycles
  1210                           ; simple_byte           13     7 (average)
  1211                           ;	Chosen strategy is simple_byte
  1212  000936  0A0A               	xorlw	10	; case 10
  1213  000938  B4D8               	btfsc	status,2,c
  1214  00093A  D77C               	goto	l3131
  1215  00093C  0A22               	xorlw	34	; case 40
  1216  00093E  B4D8               	btfsc	status,2,c
  1217  000940  D7A2               	goto	l122
  1218  000942  0A01               	xorlw	1	; case 41
  1219  000944  B4D8               	btfsc	status,2,c
  1220  000946  D79F               	goto	l122
  1221  000948  0A03               	xorlw	3	; case 42
  1222  00094A  B4D8               	btfsc	status,2,c
  1223  00094C  D7D5               	goto	l3147
  1224  00094E                     l3155:
  1225                           
  1226                           ;main.c: 418: }
  1227                           ;main.c: 421: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1228  00094E  0101               	movlb	1	; () banked
  1229  000950  0E01               	movlw	high main@msgtype
  1230  000952  0101               	movlb	1	; () banked
  1231  000954  0101               	movlb	1	; () banked
  1232  000956  6FAF               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1233  000958  0101               	movlb	1	; () banked
  1234  00095A  0ED3               	movlw	low main@msgtype
  1235  00095C  0101               	movlb	1	; () banked
  1236  00095E  0101               	movlb	1	; () banked
  1237  000960  6FAE               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1238  000962  0101               	movlb	1	; () banked
  1239  000964  0E01               	movlw	high main@msgbuffer
  1240  000966  0101               	movlb	1	; () banked
  1241  000968  0101               	movlb	1	; () banked
  1242  00096A  6FB1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1243  00096C  0101               	movlb	1	; () banked
  1244  00096E  0EBC               	movlw	low main@msgbuffer
  1245  000970  0101               	movlb	1	; () banked
  1246  000972  0101               	movlb	1	; () banked
  1247  000974  6FB0               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1248  000976  0E0A               	movlw	10
  1249  000978  ECD4  F00B         	call	_ToMainLow_recvmsg
  1250  00097C  0101               	movlb	1	; () banked
  1251  00097E  0101               	movlb	1	; () banked
  1252  000980  6FD4               	movwf	main@length& (0+255),b
  1253                           
  1254                           ; BSR set to: 1
  1255                           ;main.c: 422: if (length < 0) {
  1256  000982  0101               	movlb	1	; () banked
  1257  000984  0101               	movlb	1	; () banked
  1258  000986  BFD4               	btfsc	main@length& (0+255),7,b
  1259  000988  D734               	goto	l3123
  1260  00098A  D052               	goto	l3167
  1261  00098C                     l3161:
  1262                           
  1263                           ; BSR set to: 1
  1264                           ;main.c: 430: {
  1265                           ;main.c: 431: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1266  00098C  0101               	movlb	1	; () banked
  1267  00098E  0E01               	movlw	high main@t1thread_data
  1268  000990  0101               	movlb	1	; () banked
  1269  000992  0101               	movlb	1	; () banked
  1270  000994  6FB1               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1271  000996  0101               	movlb	1	; () banked
  1272  000998  0ED1               	movlw	low main@t1thread_data
  1273  00099A  0101               	movlb	1	; () banked
  1274  00099C  0101               	movlb	1	; () banked
  1275  00099E  6FB0               	movwf	timer1_lthread@tptr& (0+255),b
  1276  0009A0  0101               	movlb	1	; () banked
  1277  0009A2  0101               	movlb	1	; () banked
  1278  0009A4  C1D3  F1B2         	movff	main@msgtype,timer1_lthread@msgtype
  1279  0009A8  0101               	movlb	1	; () banked
  1280  0009AA  0101               	movlb	1	; () banked
  1281  0009AC  6BB3               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1282  0009AE  0101               	movlb	1	; () banked
  1283  0009B0  0101               	movlb	1	; () banked
  1284  0009B2  51D4               	movf	main@length& (0+255),w,b
  1285  0009B4  0101               	movlb	1	; () banked
  1286  0009B6  0101               	movlb	1	; () banked
  1287  0009B8  6FB4               	movwf	timer1_lthread@length& (0+255),b
  1288  0009BA  0101               	movlb	1	; () banked
  1289  0009BC  6BB5               	clrf	(timer1_lthread@length+1)& (0+255),b
  1290  0009BE  0101               	movlb	1	; () banked
  1291  0009C0  BFB4               	btfsc	timer1_lthread@length& (0+255),7,b
  1292  0009C2  07B5               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1293  0009C4  0101               	movlb	1	; () banked
  1294  0009C6  0E01               	movlw	high main@msgbuffer
  1295  0009C8  0101               	movlb	1	; () banked
  1296  0009CA  0101               	movlb	1	; () banked
  1297  0009CC  6FB7               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1298  0009CE  0101               	movlb	1	; () banked
  1299  0009D0  0EBC               	movlw	low main@msgbuffer
  1300  0009D2  0101               	movlb	1	; () banked
  1301  0009D4  0101               	movlb	1	; () banked
  1302  0009D6  6FB6               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1303  0009D8  EC94  F00A         	call	_timer1_lthread	;wreg free
  1304                           
  1305                           ;main.c: 432: break;
  1306  0009DC  D70A               	goto	l3123
  1307  0009DE                     l3163:
  1308                           
  1309                           ;main.c: 435: case 31:
  1310                           ;main.c: 436: {
  1311                           ;main.c: 437: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1312  0009DE  0101               	movlb	1	; () banked
  1313  0009E0  0E01               	movlw	high main@uthread_data
  1314  0009E2  0100               	movlb	0	; () banked
  1315  0009E4  0100               	movlb	0	; () banked
  1316  0009E6  6FD5               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1317  0009E8  0101               	movlb	1	; () banked
  1318  0009EA  0EC7               	movlw	low main@uthread_data
  1319  0009EC  0100               	movlb	0	; () banked
  1320  0009EE  0100               	movlb	0	; () banked
  1321  0009F0  6FD4               	movwf	uart_lthread@uptr& (0+255),b
  1322  0009F2  0101               	movlb	1	; () banked
  1323  0009F4  0100               	movlb	0	; () banked
  1324  0009F6  C1D3  F0D6         	movff	main@msgtype,uart_lthread@msgtype
  1325  0009FA  0100               	movlb	0	; () banked
  1326  0009FC  0100               	movlb	0	; () banked
  1327  0009FE  6BD7               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1328  000A00  0101               	movlb	1	; () banked
  1329  000A02  0101               	movlb	1	; () banked
  1330  000A04  51D4               	movf	main@length& (0+255),w,b
  1331  000A06  0100               	movlb	0	; () banked
  1332  000A08  0100               	movlb	0	; () banked
  1333  000A0A  6FD8               	movwf	uart_lthread@length& (0+255),b
  1334  000A0C  0100               	movlb	0	; () banked
  1335  000A0E  6BD9               	clrf	(uart_lthread@length+1)& (0+255),b
  1336  000A10  0100               	movlb	0	; () banked
  1337  000A12  BFD8               	btfsc	uart_lthread@length& (0+255),7,b
  1338  000A14  07D9               	decf	(uart_lthread@length+1)& (0+255),f,b
  1339  000A16  0101               	movlb	1	; () banked
  1340  000A18  0E01               	movlw	high main@msgbuffer
  1341  000A1A  0100               	movlb	0	; () banked
  1342  000A1C  0100               	movlb	0	; () banked
  1343  000A1E  6FDB               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1344  000A20  0101               	movlb	1	; () banked
  1345  000A22  0EBC               	movlw	low main@msgbuffer
  1346  000A24  0100               	movlb	0	; () banked
  1347  000A26  0100               	movlb	0	; () banked
  1348  000A28  6FDA               	movwf	uart_lthread@msgbuffer& (0+255),b
  1349  000A2A  EC56  F00C         	call	_uart_lthread	;wreg free
  1350                           
  1351                           ;main.c: 438: break;
  1352  000A2E  D6E1               	goto	l3123
  1353  000A30                     l3167:
  1354  000A30  0101               	movlb	1	; () banked
  1355  000A32  0101               	movlb	1	; () banked
  1356  000A34  51D3               	movf	main@msgtype& (0+255),w,b
  1357                           
  1358                           ; Switch size 1, requested type "space"
  1359                           ; Number of cases is 3, Range of values is 11 to 31
  1360                           ; switch strategies available:
  1361                           ; Name         Instructions Cycles
  1362                           ; simple_byte           10     6 (average)
  1363                           ;	Chosen strategy is simple_byte
  1364  000A36  0A0B               	xorlw	11	; case 11
  1365  000A38  B4D8               	btfsc	status,2,c
  1366  000A3A  D7A8               	goto	l3161
  1367  000A3C  0A15               	xorlw	21	; case 30
  1368  000A3E  B4D8               	btfsc	status,2,c
  1369  000A40  D7CE               	goto	l3163
  1370  000A42  0A01               	xorlw	1	; case 31
  1371  000A44  B4D8               	btfsc	status,2,c
  1372  000A46  D7CB               	goto	l3163
  1373  000A48  D6D4               	goto	l3123
  1374  000A4A                     __end_of_main:
  1375                           	opt stack 0
  1376                           tblptru	equ	0xFF8
  1377                           postinc0	equ	0xFEE
  1378                           wreg	equ	0xFE8
  1379                           status	equ	0xFD8
  1380                           
  1381 ;; *************** function _uart_lthread *****************
  1382 ;; Defined at:
  1383 ;;		line 9 in file "../src/uart_thread.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  uptr            2   30[BANK0 ] PTR struct __uart_thread
  1386 ;;		 -> main@uthread_data(2), 
  1387 ;;  msgtype         2   32[BANK0 ] int 
  1388 ;;  length          2   34[BANK0 ] int 
  1389 ;;  msgbuffer       2   36[BANK0 ] PTR unsigned char 
  1390 ;;		 -> main@msgbuffer(11), 
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  2   30[BANK0 ] int 
  1395 ;; Registers used:
  1396 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1402 ;;      Params:         0       8       0       0       0
  1403 ;;      Locals:         0       0       0       0       0
  1404 ;;      Temps:          0       0       0       0       0
  1405 ;;      Totals:         0       8       0       0       0
  1406 ;;Total ram usage:        8 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:   10
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		_main
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text1
  1417  0018AC                     __ptext1:
  1418                           	opt stack 0
  1419  0018AC                     _uart_lthread:
  1420                           	opt stack 20
  1421                           
  1422                           ;uart_thread.c: 10: if (msgtype == 30) {
  1423                           
  1424                           ; BSR set to: 1
  1425                           ;incstack = 0
  1426  0018AC  0100               	movlb	0	; () banked
  1427  0018AE  0100               	movlb	0	; () banked
  1428  0018B0  51D6               	movf	uart_lthread@msgtype& (0+255),w,b
  1429  0018B2  0A1E               	xorlw	30
  1430  0018B4  11D7               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1431  0018B6  B4D8               	btfsc	status,2,c
  1432  0018B8  0012               	return	
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1436                           
  1437                           ; BSR set to: 0
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;uart_thread.c: 11: }
  1441  0018BA  0100               	movlb	0	; () banked
  1442  0018BC  0100               	movlb	0	; () banked
  1443  0018BE  51D6               	movf	uart_lthread@msgtype& (0+255),w,b
  1444  0018C0  0A1F               	xorlw	31
  1445  0018C2  11D7               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1446  0018C4  A4D8               	btfss	status,2,c
  1447  0018C6  0012               	return	
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1451  0018C8  0100               	movlb	0	; () banked
  1452  0018CA  0100               	movlb	0	; () banked
  1453  0018CC  51D8               	movf	uart_lthread@length& (0+255),w,b
  1454  0018CE  0100               	movlb	0	; () banked
  1455  0018D0  0100               	movlb	0	; () banked
  1456  0018D2  25DA               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1457  0018D4  6ED9               	movwf	fsr2l,c
  1458  0018D6  0100               	movlb	0	; () banked
  1459  0018D8  0100               	movlb	0	; () banked
  1460  0018DA  51D9               	movf	(uart_lthread@length+1)& (0+255),w,b
  1461  0018DC  0100               	movlb	0	; () banked
  1462  0018DE  0100               	movlb	0	; () banked
  1463  0018E0  21DB               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1464  0018E2  6EDA               	movwf	fsr2h,c
  1465  0018E4  0E00               	movlw	0
  1466  0018E6  6EDF               	movwf	indf2,c
  1467  0018E8  0012               	return	
  1468  0018EA                     __end_of_uart_lthread:
  1469                           	opt stack 0
  1470                           tblptru	equ	0xFF8
  1471                           postinc0	equ	0xFEE
  1472                           wreg	equ	0xFE8
  1473                           indf2	equ	0xFDF
  1474                           fsr2h	equ	0xFDA
  1475                           fsr2l	equ	0xFD9
  1476                           status	equ	0xFD8
  1477                           
  1478 ;; *************** function _timer1_lthread *****************
  1479 ;; Defined at:
  1480 ;;		line 14 in file "../src/timer1_thread.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  tptr            2   14[BANK1 ] PTR struct __timer1_thre
  1483 ;;		 -> main@t1thread_data(2), 
  1484 ;;  msgtype         2   16[BANK1 ] int 
  1485 ;;  length          2   18[BANK1 ] int 
  1486 ;;  msgbuffer       2   20[BANK1 ] PTR unsigned char 
  1487 ;;		 -> main@msgbuffer(11), 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  retval          1   23[BANK1 ] char 
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  2   14[BANK1 ] int 
  1492 ;; Registers used:
  1493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1499 ;;      Params:         0       0       8       0       0
  1500 ;;      Locals:         0       0       1       0       0
  1501 ;;      Temps:          0       0       1       0       0
  1502 ;;      Totals:         0       0      10       0       0
  1503 ;;Total ram usage:       10 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:   13
  1506 ;; This function calls:
  1507 ;;		_FromMainHigh_sendmsg
  1508 ;;		___lwmod
  1509 ;; This function is called by:
  1510 ;;		_main
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text2
  1515  001528                     __ptext2:
  1516                           	opt stack 0
  1517  001528                     _timer1_lthread:
  1518                           	opt stack 17
  1519                           
  1520                           ;timer1_thread.c: 15: signed char retval;
  1521                           ;timer1_thread.c: 17: tptr->msgcount++;
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;incstack = 0
  1525  001528  C1B0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1526  00152C  C1B1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1527  001530  2ADE               	incf	postinc2,f,c
  1528  001532  0E00               	movlw	0
  1529  001534  22DD               	addwfc	postdec2,f,c
  1530                           
  1531                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1532  001536  C1B0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1533  00153A  C1B1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1534  00153E  0100               	movlb	0	; () banked
  1535  001540  CFDE F0D4          	movff	postinc2,___lwmod@dividend
  1536  001544  0100               	movlb	0	; () banked
  1537  001546  CFDD F0D5          	movff	postdec2,___lwmod@dividend+1
  1538  00154A  0E00               	movlw	0
  1539  00154C  0100               	movlb	0	; () banked
  1540  00154E  0100               	movlb	0	; () banked
  1541  001550  6FD7               	movwf	(___lwmod@divisor+1)& (0+255),b
  1542  001552  0E0A               	movlw	10
  1543  001554  0100               	movlb	0	; () banked
  1544  001556  6FD6               	movwf	___lwmod@divisor& (0+255),b
  1545  001558  EC91  F009         	call	___lwmod	;wreg free
  1546  00155C  0100               	movlb	0	; () banked
  1547  00155E  0100               	movlb	0	; () banked
  1548  001560  51D4               	movf	?___lwmod& (0+255),w,b
  1549  001562  0A09               	xorlw	9
  1550  001564  0100               	movlb	0	; () banked
  1551  001566  11D5               	iorwf	(?___lwmod+1)& (0+255),w,b
  1552  001568  A4D8               	btfss	status,2,c
  1553  00156A  0012               	return	
  1554                           
  1555                           ; BSR set to: 0
  1556                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1557  00156C  0101               	movlb	1	; () banked
  1558  00156E  6FB8               	movwf	??_timer1_lthread& (0+255),b
  1559  001570  0E14               	movlw	20
  1560  001572  0101               	movlb	1	; () banked
  1561  001574  0101               	movlb	1	; () banked
  1562  001576  6FAD               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1563  001578  0101               	movlb	1	; () banked
  1564  00157A  51B8               	movf	??_timer1_lthread& (0+255),w,b
  1565  00157C  0101               	movlb	1	; () banked
  1566  00157E  0101               	movlb	1	; () banked
  1567  001580  C1B1  F1AF         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1568  001584  0101               	movlb	1	; () banked
  1569  001586  0101               	movlb	1	; () banked
  1570  001588  C1B0  F1AE         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1571  00158C  0E02               	movlw	2
  1572  00158E  EC91  F00C         	call	_FromMainHigh_sendmsg
  1573  001592  0101               	movlb	1	; () banked
  1574  001594  0101               	movlb	1	; () banked
  1575  001596  6FB9               	movwf	timer1_lthread@retval& (0+255),b
  1576  001598  0012               	return	
  1577  00159A                     __end_of_timer1_lthread:
  1578                           	opt stack 0
  1579                           tblptru	equ	0xFF8
  1580                           postinc0	equ	0xFEE
  1581                           wreg	equ	0xFE8
  1582                           indf2	equ	0xFDF
  1583                           postinc2	equ	0xFDE
  1584                           postdec2	equ	0xFDD
  1585                           fsr2h	equ	0xFDA
  1586                           fsr2l	equ	0xFD9
  1587                           status	equ	0xFD8
  1588                           
  1589 ;; *************** function ___lwmod *****************
  1590 ;; Defined at:
  1591 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  dividend        2   30[BANK0 ] unsigned int 
  1594 ;;  divisor         2   32[BANK0 ] unsigned int 
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  counter         1   35[BANK0 ] unsigned char 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  2   30[BANK0 ] unsigned int 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, status,0
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1606 ;;      Params:         0       4       0       0       0
  1607 ;;      Locals:         0       1       0       0       0
  1608 ;;      Temps:          0       1       0       0       0
  1609 ;;      Totals:         0       6       0       0       0
  1610 ;;Total ram usage:        6 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:   10
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_timer1_lthread
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text3
  1621  001322                     __ptext3:
  1622                           	opt stack 0
  1623  001322                     ___lwmod:
  1624                           	opt stack 19
  1625                           
  1626                           ;incstack = 0
  1627  001322  0100               	movlb	0	; () banked
  1628  001324  0100               	movlb	0	; () banked
  1629  001326  51D7               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1630  001328  11D6               	iorwf	___lwmod@divisor& (0+255),w,b
  1631  00132A  B4D8               	btfsc	status,2,c
  1632  00132C  D03A               	goto	l1045
  1633                           
  1634                           ; BSR set to: 0
  1635  00132E  0100               	movlb	0	; () banked
  1636  001330  6FD8               	movwf	??___lwmod& (0+255),b
  1637  001332  0E01               	movlw	1
  1638  001334  0100               	movlb	0	; () banked
  1639  001336  0100               	movlb	0	; () banked
  1640  001338  6FD9               	movwf	___lwmod@counter& (0+255),b
  1641  00133A  0100               	movlb	0	; () banked
  1642  00133C  51D8               	movf	??___lwmod& (0+255),w,b
  1643  00133E  D009               	goto	l3277
  1644  001340                     l3275:
  1645                           
  1646                           ; BSR set to: 0
  1647  001340  0100               	movlb	0	; () banked
  1648  001342  0100               	movlb	0	; () banked
  1649  001344  0100               	movlb	0	; () banked
  1650  001346  90D8               	bcf	status,0,c
  1651  001348  37D6               	rlcf	___lwmod@divisor& (0+255),f,b
  1652  00134A  37D7               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1653  00134C  0100               	movlb	0	; () banked
  1654  00134E  0100               	movlb	0	; () banked
  1655  001350  2BD9               	incf	___lwmod@counter& (0+255),f,b
  1656  001352                     l3277:
  1657                           
  1658                           ; BSR set to: 0
  1659  001352  0100               	movlb	0	; () banked
  1660  001354  0100               	movlb	0	; () banked
  1661  001356  AFD7               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1662  001358  D7F3               	goto	l3275
  1663  00135A                     l3279:
  1664                           
  1665                           ; BSR set to: 0
  1666  00135A  0100               	movlb	0	; () banked
  1667  00135C  0100               	movlb	0	; () banked
  1668  00135E  51D6               	movf	___lwmod@divisor& (0+255),w,b
  1669  001360  0100               	movlb	0	; () banked
  1670  001362  0100               	movlb	0	; () banked
  1671  001364  5DD4               	subwf	___lwmod@dividend& (0+255),w,b
  1672  001366  0100               	movlb	0	; () banked
  1673  001368  0100               	movlb	0	; () banked
  1674  00136A  51D7               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1675  00136C  0100               	movlb	0	; () banked
  1676  00136E  0100               	movlb	0	; () banked
  1677  001370  59D5               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1678  001372  A0D8               	btfss	status,0,c
  1679  001374  D00C               	goto	l3283
  1680                           
  1681                           ; BSR set to: 0
  1682  001376  0100               	movlb	0	; () banked
  1683  001378  0100               	movlb	0	; () banked
  1684  00137A  51D6               	movf	___lwmod@divisor& (0+255),w,b
  1685  00137C  0100               	movlb	0	; () banked
  1686  00137E  0100               	movlb	0	; () banked
  1687  001380  5FD4               	subwf	___lwmod@dividend& (0+255),f,b
  1688  001382  0100               	movlb	0	; () banked
  1689  001384  0100               	movlb	0	; () banked
  1690  001386  51D7               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1691  001388  0100               	movlb	0	; () banked
  1692  00138A  0100               	movlb	0	; () banked
  1693  00138C  5BD5               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1694  00138E                     l3283:
  1695                           
  1696                           ; BSR set to: 0
  1697  00138E  0100               	movlb	0	; () banked
  1698  001390  0100               	movlb	0	; () banked
  1699  001392  0100               	movlb	0	; () banked
  1700  001394  90D8               	bcf	status,0,c
  1701  001396  33D7               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1702  001398  33D6               	rrcf	___lwmod@divisor& (0+255),f,b
  1703                           
  1704                           ; BSR set to: 0
  1705  00139A  0100               	movlb	0	; () banked
  1706  00139C  0100               	movlb	0	; () banked
  1707  00139E  2FD9               	decfsz	___lwmod@counter& (0+255),f,b
  1708  0013A0  D7DC               	goto	l3279
  1709  0013A2                     l1045:
  1710                           
  1711                           ; BSR set to: 0
  1712  0013A2  C0D4  F0D4         	movff	___lwmod@dividend,?___lwmod
  1713  0013A6  C0D5  F0D5         	movff	___lwmod@dividend+1,?___lwmod+1
  1714                           
  1715                           ; BSR set to: 0
  1716  0013AA  0012               	return	
  1717  0013AC                     __end_of___lwmod:
  1718                           	opt stack 0
  1719                           tblptru	equ	0xFF8
  1720                           postinc0	equ	0xFEE
  1721                           wreg	equ	0xFE8
  1722                           indf2	equ	0xFDF
  1723                           postinc2	equ	0xFDE
  1724                           postdec2	equ	0xFDD
  1725                           fsr2h	equ	0xFDA
  1726                           fsr2l	equ	0xFD9
  1727                           status	equ	0xFD8
  1728                           
  1729 ;; *************** function _FromMainHigh_sendmsg *****************
  1730 ;; Defined at:
  1731 ;;		line 174 in file "../src/messages.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  length          1    wreg     unsigned char 
  1734 ;;  msgtype         1   11[BANK1 ] unsigned char 
  1735 ;;  data            2   12[BANK1 ] PTR void 
  1736 ;;		 -> main@t1thread_data(2), 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  length          1   41[BANK0 ] unsigned char 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      char 
  1741 ;; Registers used:
  1742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1748 ;;      Params:         0       0       3       0       0
  1749 ;;      Locals:         0       1       0       0       0
  1750 ;;      Temps:          0       0       0       0       0
  1751 ;;      Totals:         0       1       3       0       0
  1752 ;;Total ram usage:        4 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:   12
  1755 ;; This function calls:
  1756 ;;		_send_msg
  1757 ;; This function is called by:
  1758 ;;		_timer1_lthread
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text4
  1763  001922                     __ptext4:
  1764                           	opt stack 0
  1765  001922                     _FromMainHigh_sendmsg:
  1766                           	opt stack 17
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;incstack = 0
  1770                           ;FromMainHigh_sendmsg@length stored from wreg
  1771  001922  CFE8 F0DF          	movff	wreg,FromMainHigh_sendmsg@length
  1772                           
  1773                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1774  001926  0101               	movlb	1	; () banked
  1775  001928  0E01               	movlw	high _FromMainHigh_MQ
  1776  00192A  0101               	movlb	1	; () banked
  1777  00192C  0101               	movlb	1	; () banked
  1778  00192E  6FA3               	movwf	(send_msg@qptr+1)& (0+255),b
  1779  001930  0101               	movlb	1	; () banked
  1780  001932  0E00               	movlw	low _FromMainHigh_MQ
  1781  001934  0101               	movlb	1	; () banked
  1782  001936  0101               	movlb	1	; () banked
  1783  001938  6FA2               	movwf	send_msg@qptr& (0+255),b
  1784  00193A  C0DF  F1A4         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1785  00193E  C1AD  F1A5         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1786  001942  0101               	movlb	1	; () banked
  1787  001944  0101               	movlb	1	; () banked
  1788  001946  C1AF  F1A7         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1789  00194A  0101               	movlb	1	; () banked
  1790  00194C  0101               	movlb	1	; () banked
  1791  00194E  C1AE  F1A6         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1792  001952  EC47  F006         	call	_send_msg	;wreg free
  1793  001956  0012               	return	
  1794  001958                     __end_of_FromMainHigh_sendmsg:
  1795                           	opt stack 0
  1796                           tblptru	equ	0xFF8
  1797                           postinc0	equ	0xFEE
  1798                           wreg	equ	0xFE8
  1799                           indf2	equ	0xFDF
  1800                           postinc2	equ	0xFDE
  1801                           postdec2	equ	0xFDD
  1802                           fsr2h	equ	0xFDA
  1803                           fsr2l	equ	0xFD9
  1804                           status	equ	0xFD8
  1805                           
  1806 ;; *************** function _send_msg *****************
  1807 ;; Defined at:
  1808 ;;		line 24 in file "../src/messages.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  1811 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1812 ;;  length          1    2[BANK1 ] unsigned char 
  1813 ;;  msgtype         1    3[BANK1 ] unsigned char 
  1814 ;;  data            2    4[BANK1 ] PTR void 
  1815 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), main@ic(28), 
  1816 ;;		 -> main@uc(5), 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  1819 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1820 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1821 ;;  tlength         2    6[BANK1 ] unsigned int 
  1822 ;;  slot            1    8[BANK1 ] unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      char 
  1825 ;; Registers used:
  1826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1832 ;;      Params:         0       0       6       0       0
  1833 ;;      Locals:         0       0       5       0       0
  1834 ;;      Temps:          0       1       0       0       0
  1835 ;;      Totals:         0       1      11       0       0
  1836 ;;Total ram usage:       12 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; Hardware stack levels required when called:   11
  1839 ;; This function calls:
  1840 ;;		_memcpy
  1841 ;; This function is called by:
  1842 ;;		_FromMainHigh_sendmsg
  1843 ;;		_FromMainLow_sendmsg
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text5
  1848  000C8E                     __ptext5:
  1849                           	opt stack 0
  1850  000C8E                     _send_msg:
  1851                           	opt stack 17
  1852                           
  1853                           ;messages.c: 25: unsigned char slot;
  1854                           ;messages.c: 27: msg *qmsg;
  1855                           ;messages.c: 28: size_t tlength = length;
  1856                           
  1857                           ;incstack = 0
  1858  000C8E  0101               	movlb	1	; () banked
  1859  000C90  0101               	movlb	1	; () banked
  1860  000C92  C1A4  F1A8         	movff	send_msg@length,send_msg@tlength
  1861  000C96  0101               	movlb	1	; () banked
  1862  000C98  0101               	movlb	1	; () banked
  1863  000C9A  6BA9               	clrf	(send_msg@tlength+1)& (0+255),b
  1864                           
  1865                           ; BSR set to: 1
  1866                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1867  000C9C  0101               	movlb	1	; () banked
  1868  000C9E  EE20 F034          	lfsr	2,52
  1869  000CA2  0101               	movlb	1	; () banked
  1870  000CA4  51A2               	movf	send_msg@qptr& (0+255),w,b
  1871  000CA6  26D9               	addwf	fsr2l,f,c
  1872  000CA8  0101               	movlb	1	; () banked
  1873  000CAA  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  1874  000CAC  22DA               	addwfc	fsr2h,f,c
  1875  000CAE  50DF               	movf	indf2,w,c
  1876  000CB0  0101               	movlb	1	; () banked
  1877  000CB2  0101               	movlb	1	; () banked
  1878  000CB4  6FAA               	movwf	send_msg@slot& (0+255),b
  1879                           
  1880                           ; BSR set to: 1
  1881                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1882  000CB6  0101               	movlb	1	; () banked
  1883  000CB8  0101               	movlb	1	; () banked
  1884  000CBA  51AA               	movf	send_msg@slot& (0+255),w,b
  1885  000CBC  0D0D               	mullw	13
  1886  000CBE  50F3               	movf	prodl,w,c
  1887  000CC0  0101               	movlb	1	; () banked
  1888  000CC2  0101               	movlb	1	; () banked
  1889  000CC4  25A2               	addwf	send_msg@qptr& (0+255),w,b
  1890  000CC6  0101               	movlb	1	; () banked
  1891  000CC8  0101               	movlb	1	; () banked
  1892  000CCA  6FAB               	movwf	send_msg@qmsg& (0+255),b
  1893  000CCC  50F4               	movf	prodh,w,c
  1894  000CCE  0101               	movlb	1	; () banked
  1895  000CD0  0101               	movlb	1	; () banked
  1896  000CD2  21A3               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  1897  000CD4  0101               	movlb	1	; () banked
  1898  000CD6  6FAC               	movwf	(send_msg@qmsg+1)& (0+255),b
  1899                           
  1900                           ; BSR set to: 1
  1901                           ;messages.c: 41: if (qmsg->full != 0) {
  1902  000CD8  C1AB  FFD9         	movff	send_msg@qmsg,fsr2l
  1903  000CDC  C1AC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1904  000CE0  50DF               	movf	indf2,w,c
  1905  000CE2  B4D8               	btfsc	status,2,c
  1906  000CE4  D002               	goto	l3197
  1907                           
  1908                           ; BSR set to: 1
  1909                           ;messages.c: 42: return (-1);
  1910  000CE6  0EFF               	movlw	255
  1911  000CE8  0012               	return	
  1912  000CEA                     l3197:
  1913                           
  1914                           ; BSR set to: 1
  1915                           ;messages.c: 43: }
  1916                           ;messages.c: 46: qmsg->length = length;
  1917  000CEA  0101               	movlb	1	; () banked
  1918  000CEC  EE20 F001          	lfsr	2,1
  1919  000CF0  0101               	movlb	1	; () banked
  1920  000CF2  51AB               	movf	send_msg@qmsg& (0+255),w,b
  1921  000CF4  26D9               	addwf	fsr2l,f,c
  1922  000CF6  0101               	movlb	1	; () banked
  1923  000CF8  51AC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1924  000CFA  22DA               	addwfc	fsr2h,f,c
  1925  000CFC  0101               	movlb	1	; () banked
  1926  000CFE  C1A4  FFDF         	movff	send_msg@length,indf2
  1927                           
  1928                           ;messages.c: 47: qmsg->msgtype = msgtype;
  1929  000D02  0101               	movlb	1	; () banked
  1930  000D04  EE20 F002          	lfsr	2,2
  1931  000D08  0101               	movlb	1	; () banked
  1932  000D0A  51AB               	movf	send_msg@qmsg& (0+255),w,b
  1933  000D0C  26D9               	addwf	fsr2l,f,c
  1934  000D0E  0101               	movlb	1	; () banked
  1935  000D10  51AC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1936  000D12  22DA               	addwfc	fsr2h,f,c
  1937  000D14  0101               	movlb	1	; () banked
  1938  000D16  C1A5  FFDF         	movff	send_msg@msgtype,indf2
  1939                           
  1940                           ; BSR set to: 1
  1941                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  1942  000D1A  0E03               	movlw	3
  1943  000D1C  0101               	movlb	1	; () banked
  1944  000D1E  0101               	movlb	1	; () banked
  1945  000D20  25AB               	addwf	send_msg@qmsg& (0+255),w,b
  1946  000D22  0100               	movlb	0	; () banked
  1947  000D24  0100               	movlb	0	; () banked
  1948  000D26  6FD4               	movwf	memcpy@d1& (0+255),b
  1949  000D28  0E00               	movlw	0
  1950  000D2A  0101               	movlb	1	; () banked
  1951  000D2C  0101               	movlb	1	; () banked
  1952  000D2E  21AC               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  1953  000D30  0100               	movlb	0	; () banked
  1954  000D32  6FD5               	movwf	(memcpy@d1+1)& (0+255),b
  1955  000D34  0101               	movlb	1	; () banked
  1956  000D36  0100               	movlb	0	; () banked
  1957  000D38  C1A7  F0D7         	movff	send_msg@data+1,memcpy@s1+1
  1958  000D3C  0101               	movlb	1	; () banked
  1959  000D3E  0100               	movlb	0	; () banked
  1960  000D40  C1A6  F0D6         	movff	send_msg@data,memcpy@s1
  1961  000D44  C1A8  F0D8         	movff	send_msg@tlength,memcpy@n
  1962  000D48  C1A9  F0D9         	movff	send_msg@tlength+1,memcpy@n+1
  1963  000D4C  EC39  F00B         	call	_memcpy	;wreg free
  1964                           
  1965                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  1966  000D50  0101               	movlb	1	; () banked
  1967  000D52  EE20 F034          	lfsr	2,52
  1968  000D56  0101               	movlb	1	; () banked
  1969  000D58  51A2               	movf	send_msg@qptr& (0+255),w,b
  1970  000D5A  26D9               	addwf	fsr2l,f,c
  1971  000D5C  0101               	movlb	1	; () banked
  1972  000D5E  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  1973  000D60  22DA               	addwfc	fsr2h,f,c
  1974  000D62  0101               	movlb	1	; () banked
  1975  000D64  EE10 F034          	lfsr	1,52
  1976  000D68  0101               	movlb	1	; () banked
  1977  000D6A  51A2               	movf	send_msg@qptr& (0+255),w,b
  1978  000D6C  26E1               	addwf	fsr1l,f,c
  1979  000D6E  0101               	movlb	1	; () banked
  1980  000D70  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  1981  000D72  22E2               	addwfc	fsr1h,f,c
  1982  000D74  50E7               	movf	indf1,w,c
  1983  000D76  0100               	movlb	0	; () banked
  1984  000D78  6FDE               	movwf	??_send_msg& (0+255),b
  1985  000D7A  0100               	movlb	0	; () banked
  1986  000D7C  29DE               	incf	??_send_msg& (0+255),w,b
  1987  000D7E  0B03               	andlw	3
  1988  000D80  6EDF               	movwf	indf2,c
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;messages.c: 59: qmsg->full = 1;
  1992  000D82  C1AB  FFD9         	movff	send_msg@qmsg,fsr2l
  1993  000D86  C1AC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1994  000D8A  0E01               	movlw	1
  1995  000D8C  6EDF               	movwf	indf2,c
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;messages.c: 60: return (1);
  1999  000D8E  0E01               	movlw	1
  2000  000D90  0012               	return	
  2001  000D92                     __end_of_send_msg:
  2002                           	opt stack 0
  2003                           tblptru	equ	0xFF8
  2004                           prodh	equ	0xFF4
  2005                           prodl	equ	0xFF3
  2006                           postinc0	equ	0xFEE
  2007                           wreg	equ	0xFE8
  2008                           indf1	equ	0xFE7
  2009                           fsr1h	equ	0xFE2
  2010                           fsr1l	equ	0xFE1
  2011                           indf2	equ	0xFDF
  2012                           postinc2	equ	0xFDE
  2013                           postdec2	equ	0xFDD
  2014                           fsr2h	equ	0xFDA
  2015                           fsr2l	equ	0xFD9
  2016                           status	equ	0xFD8
  2017                           
  2018 ;; *************** function _timer0_lthread *****************
  2019 ;; Defined at:
  2020 ;;		line 9 in file "../src/timer0_thread.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  tptr            2   30[BANK0 ] PTR struct __timer0_thre
  2023 ;;		 -> main@t0thread_data(2), 
  2024 ;;  msgtype         2   32[BANK0 ] int 
  2025 ;;  length          2   34[BANK0 ] int 
  2026 ;;  msgbuffer       2   36[BANK0 ] PTR unsigned char 
  2027 ;;		 -> main@msgbuffer(11), 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  msgval          2   38[BANK0 ] PTR unsigned int 
  2030 ;;		 -> main@msgbuffer(11), 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  2   30[BANK0 ] int 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2040 ;;      Params:         0       8       0       0       0
  2041 ;;      Locals:         0       2       0       0       0
  2042 ;;      Temps:          0       0       0       0       0
  2043 ;;      Totals:         0      10       0       0       0
  2044 ;;Total ram usage:       10 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; Hardware stack levels required when called:   10
  2047 ;; This function calls:
  2048 ;;		Nothing
  2049 ;; This function is called by:
  2050 ;;		_main
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text6
  2055  001B1E                     __ptext6:
  2056                           	opt stack 0
  2057  001B1E                     _timer0_lthread:
  2058                           	opt stack 20
  2059                           
  2060                           ;timer0_thread.c: 10: unsigned int *msgval;
  2061                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2062                           
  2063                           ;incstack = 0
  2064  001B1E  0100               	movlb	0	; () banked
  2065  001B20  0100               	movlb	0	; () banked
  2066  001B22  C0DB  F0DD         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2067  001B26  0100               	movlb	0	; () banked
  2068  001B28  0100               	movlb	0	; () banked
  2069  001B2A  C0DA  F0DC         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2070                           
  2071                           ; BSR set to: 0
  2072  001B2E  0012               	return	
  2073  001B30                     __end_of_timer0_lthread:
  2074                           	opt stack 0
  2075                           tblptru	equ	0xFF8
  2076                           prodh	equ	0xFF4
  2077                           prodl	equ	0xFF3
  2078                           postinc0	equ	0xFEE
  2079                           wreg	equ	0xFE8
  2080                           indf1	equ	0xFE7
  2081                           fsr1h	equ	0xFE2
  2082                           fsr1l	equ	0xFE1
  2083                           indf2	equ	0xFDF
  2084                           postinc2	equ	0xFDE
  2085                           postdec2	equ	0xFDD
  2086                           fsr2h	equ	0xFDA
  2087                           fsr2l	equ	0xFD9
  2088                           status	equ	0xFD8
  2089                           
  2090 ;; *************** function _start_i2c_slave_reply *****************
  2091 ;; Defined at:
  2092 ;;		line 53 in file "../src/my_i2c.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  length          1    wreg     unsigned char 
  2095 ;;  msg             2   30[BANK0 ] PTR unsigned char 
  2096 ;;		 -> main@msgbuffer(11), adcbuffer(10), 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  length          1   34[BANK0 ] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;		None               void
  2101 ;; Registers used:
  2102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2108 ;;      Params:         0       2       0       0       0
  2109 ;;      Locals:         0       1       0       0       0
  2110 ;;      Temps:          0       2       0       0       0
  2111 ;;      Totals:         0       5       0       0       0
  2112 ;;Total ram usage:        5 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:   10
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_main
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text7
  2123  000B80                     __ptext7:
  2124                           	opt stack 0
  2125  000B80                     _start_i2c_slave_reply:
  2126                           	opt stack 20
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;incstack = 0
  2130                           ;start_i2c_slave_reply@length stored from wreg
  2131  000B80  CFE8 F0D8          	movff	wreg,start_i2c_slave_reply@length
  2132                           
  2133                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2134  000B84  0100               	movlb	0	; () banked
  2135  000B86  EE20 F019          	lfsr	2,25
  2136  000B8A  0100               	movlb	0	; () banked
  2137  000B8C  51E0               	movf	_ic_ptr& (0+255),w,b
  2138  000B8E  26D9               	addwf	fsr2l,f,c
  2139  000B90  0100               	movlb	0	; () banked
  2140  000B92  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2141  000B94  22DA               	addwfc	fsr2h,f,c
  2142  000B96  0E00               	movlw	0
  2143  000B98  6EDF               	movwf	indf2,c
  2144  000B9A  D042               	goto	l2587
  2145  000B9C                     l2583:
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2149  000B9C  0100               	movlb	0	; () banked
  2150  000B9E  EE20 F019          	lfsr	2,25
  2151  000BA2  0100               	movlb	0	; () banked
  2152  000BA4  51E0               	movf	_ic_ptr& (0+255),w,b
  2153  000BA6  26D9               	addwf	fsr2l,f,c
  2154  000BA8  0100               	movlb	0	; () banked
  2155  000BAA  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2156  000BAC  22DA               	addwfc	fsr2h,f,c
  2157  000BAE  50DF               	movf	indf2,w,c
  2158  000BB0  0100               	movlb	0	; () banked
  2159  000BB2  6FD6               	movwf	??_start_i2c_slave_reply& (0+255),b
  2160  000BB4  0100               	movlb	0	; () banked
  2161  000BB6  51D6               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2162  000BB8  0D01               	mullw	1
  2163  000BBA  50F3               	movf	prodl,w,c
  2164  000BBC  0100               	movlb	0	; () banked
  2165  000BBE  0100               	movlb	0	; () banked
  2166  000BC0  25D4               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2167  000BC2  6ED9               	movwf	fsr2l,c
  2168  000BC4  50F4               	movf	prodh,w,c
  2169  000BC6  0100               	movlb	0	; () banked
  2170  000BC8  0100               	movlb	0	; () banked
  2171  000BCA  21D5               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2172  000BCC  6EDA               	movwf	fsr2h,c
  2173  000BCE  0100               	movlb	0	; () banked
  2174  000BD0  EE10 F019          	lfsr	1,25
  2175  000BD4  0100               	movlb	0	; () banked
  2176  000BD6  51E0               	movf	_ic_ptr& (0+255),w,b
  2177  000BD8  26E1               	addwf	fsr1l,f,c
  2178  000BDA  0100               	movlb	0	; () banked
  2179  000BDC  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2180  000BDE  22E2               	addwfc	fsr1h,f,c
  2181  000BE0  50E7               	movf	indf1,w,c
  2182  000BE2  0100               	movlb	0	; () banked
  2183  000BE4  6FD7               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2184  000BE6  0100               	movlb	0	; () banked
  2185  000BE8  51D7               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2186  000BEA  0D01               	mullw	1
  2187  000BEC  0E0F               	movlw	15
  2188  000BEE  26F3               	addwf	prodl,f,c
  2189  000BF0  0E00               	movlw	0
  2190  000BF2  22F4               	addwfc	prodh,f,c
  2191  000BF4  50F3               	movf	prodl,w,c
  2192  000BF6  0100               	movlb	0	; () banked
  2193  000BF8  0100               	movlb	0	; () banked
  2194  000BFA  25E0               	addwf	_ic_ptr& (0+255),w,b
  2195  000BFC  6EE1               	movwf	fsr1l,c
  2196  000BFE  50F4               	movf	prodh,w,c
  2197  000C00  0100               	movlb	0	; () banked
  2198  000C02  0100               	movlb	0	; () banked
  2199  000C04  21E1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2200  000C06  6EE2               	movwf	fsr1h,c
  2201  000C08  CFDF FFE7          	movff	indf2,indf1
  2202                           
  2203                           ; BSR set to: 0
  2204  000C0C  0100               	movlb	0	; () banked
  2205  000C0E  EE20 F019          	lfsr	2,25
  2206  000C12  0100               	movlb	0	; () banked
  2207  000C14  51E0               	movf	_ic_ptr& (0+255),w,b
  2208  000C16  26D9               	addwf	fsr2l,f,c
  2209  000C18  0100               	movlb	0	; () banked
  2210  000C1A  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2211  000C1C  22DA               	addwfc	fsr2h,f,c
  2212  000C1E  2ADF               	incf	indf2,f,c
  2213  000C20                     l2587:
  2214                           
  2215                           ; BSR set to: 0
  2216  000C20  0100               	movlb	0	; () banked
  2217  000C22  EE20 F019          	lfsr	2,25
  2218  000C26  0100               	movlb	0	; () banked
  2219  000C28  51E0               	movf	_ic_ptr& (0+255),w,b
  2220  000C2A  26D9               	addwf	fsr2l,f,c
  2221  000C2C  0100               	movlb	0	; () banked
  2222  000C2E  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2223  000C30  22DA               	addwfc	fsr2h,f,c
  2224  000C32  50DF               	movf	indf2,w,c
  2225  000C34  0100               	movlb	0	; () banked
  2226  000C36  6FD6               	movwf	??_start_i2c_slave_reply& (0+255),b
  2227  000C38  0100               	movlb	0	; () banked
  2228  000C3A  0100               	movlb	0	; () banked
  2229  000C3C  51D8               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2230  000C3E  0100               	movlb	0	; () banked
  2231  000C40  5DD6               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2232  000C42  A0D8               	btfss	status,0,c
  2233  000C44  D7AB               	goto	l2583
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;my_i2c.c: 57: }
  2237                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2238                           
  2239                           ; BSR set to: 0
  2240  000C46  0100               	movlb	0	; () banked
  2241  000C48  EE20 F019          	lfsr	2,25
  2242  000C4C  0100               	movlb	0	; () banked
  2243  000C4E  51E0               	movf	_ic_ptr& (0+255),w,b
  2244  000C50  26D9               	addwf	fsr2l,f,c
  2245  000C52  0100               	movlb	0	; () banked
  2246  000C54  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2247  000C56  22DA               	addwfc	fsr2h,f,c
  2248  000C58  0100               	movlb	0	; () banked
  2249  000C5A  C0D8  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2250                           
  2251                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2252  000C5E  0100               	movlb	0	; () banked
  2253  000C60  EE20 F01A          	lfsr	2,26
  2254  000C64  0100               	movlb	0	; () banked
  2255  000C66  51E0               	movf	_ic_ptr& (0+255),w,b
  2256  000C68  26D9               	addwf	fsr2l,f,c
  2257  000C6A  0100               	movlb	0	; () banked
  2258  000C6C  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2259  000C6E  22DA               	addwfc	fsr2h,f,c
  2260  000C70  0E01               	movlw	1
  2261  000C72  6EDF               	movwf	indf2,c
  2262                           
  2263                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2264  000C74  0100               	movlb	0	; () banked
  2265  000C76  EE20 F00F          	lfsr	2,15
  2266  000C7A  0100               	movlb	0	; () banked
  2267  000C7C  51E0               	movf	_ic_ptr& (0+255),w,b
  2268  000C7E  26D9               	addwf	fsr2l,f,c
  2269  000C80  0100               	movlb	0	; () banked
  2270  000C82  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2271  000C84  22DA               	addwfc	fsr2h,f,c
  2272  000C86  50DF               	movf	indf2,w,c
  2273  000C88  6EC9               	movwf	4041,c	;volatile
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2277  000C8A  88C6               	bsf	4038,4,c	;volatile
  2278                           
  2279                           ; BSR set to: 0
  2280  000C8C  0012               	return	
  2281  000C8E                     __end_of_start_i2c_slave_reply:
  2282                           	opt stack 0
  2283                           tblptru	equ	0xFF8
  2284                           prodh	equ	0xFF4
  2285                           prodl	equ	0xFF3
  2286                           postinc0	equ	0xFEE
  2287                           wreg	equ	0xFE8
  2288                           indf1	equ	0xFE7
  2289                           fsr1h	equ	0xFE2
  2290                           fsr1l	equ	0xFE1
  2291                           indf2	equ	0xFDF
  2292                           postinc2	equ	0xFDE
  2293                           postdec2	equ	0xFDD
  2294                           fsr2h	equ	0xFDA
  2295                           fsr2l	equ	0xFD9
  2296                           status	equ	0xFD8
  2297                           
  2298 ;; *************** function _init_uart_recv *****************
  2299 ;; Defined at:
  2300 ;;		line 49 in file "../src/my_uart.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  uc              2   30[BANK0 ] PTR struct __uart_comm
  2303 ;;		 -> main@uc(5), 
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;		None               void
  2308 ;; Registers used:
  2309 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2315 ;;      Params:         0       2       0       0       0
  2316 ;;      Locals:         0       0       0       0       0
  2317 ;;      Temps:          0       0       0       0       0
  2318 ;;      Totals:         0       2       0       0       0
  2319 ;;Total ram usage:        2 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:   10
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_main
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           	psect	text8
  2330  001ACC                     __ptext8:
  2331                           	opt stack 0
  2332  001ACC                     _init_uart_recv:
  2333                           	opt stack 20
  2334                           
  2335                           ;my_uart.c: 50: uc_ptr = uc;
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;incstack = 0
  2339  001ACC  0100               	movlb	0	; () banked
  2340  001ACE  C0D5  F053         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2341  001AD2  0100               	movlb	0	; () banked
  2342  001AD4  C0D4  F052         	movff	init_uart_recv@uc,_uc_ptr
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;my_uart.c: 51: uc_ptr->buflen = 0;
  2346  001AD8  EE20 F004          	lfsr	2,4
  2347  001ADC  5052               	movf	_uc_ptr,w,c
  2348  001ADE  26D9               	addwf	fsr2l,f,c
  2349  001AE0  5053               	movf	_uc_ptr+1,w,c
  2350  001AE2  22DA               	addwfc	fsr2h,f,c
  2351  001AE4  0E00               	movlw	0
  2352  001AE6  6EDF               	movwf	indf2,c
  2353                           
  2354                           ; BSR set to: 0
  2355  001AE8  0012               	return	
  2356  001AEA                     __end_of_init_uart_recv:
  2357                           	opt stack 0
  2358                           tblptru	equ	0xFF8
  2359                           prodh	equ	0xFF4
  2360                           prodl	equ	0xFF3
  2361                           postinc0	equ	0xFEE
  2362                           wreg	equ	0xFE8
  2363                           indf1	equ	0xFE7
  2364                           fsr1h	equ	0xFE2
  2365                           fsr1l	equ	0xFE1
  2366                           indf2	equ	0xFDF
  2367                           postinc2	equ	0xFDE
  2368                           postdec2	equ	0xFDD
  2369                           fsr2h	equ	0xFDA
  2370                           fsr2l	equ	0xFD9
  2371                           status	equ	0xFD8
  2372                           
  2373 ;; *************** function _init_timer1_lthread *****************
  2374 ;; Defined at:
  2375 ;;		line 6 in file "../src/timer1_thread.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  tptr            2   30[BANK0 ] PTR struct __timer1_thre
  2378 ;;		 -> main@t1thread_data(2), 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;		None
  2381 ;; Return value:  Size  Location     Type
  2382 ;;		None               void
  2383 ;; Registers used:
  2384 ;;		wreg, fsr2l, fsr2h
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2390 ;;      Params:         0       2       0       0       0
  2391 ;;      Locals:         0       0       0       0       0
  2392 ;;      Temps:          0       0       0       0       0
  2393 ;;      Totals:         0       2       0       0       0
  2394 ;;Total ram usage:        2 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; Hardware stack levels required when called:   10
  2397 ;; This function calls:
  2398 ;;		Nothing
  2399 ;; This function is called by:
  2400 ;;		_main
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           	psect	text9
  2405  001B30                     __ptext9:
  2406                           	opt stack 0
  2407  001B30                     _init_timer1_lthread:
  2408                           	opt stack 20
  2409                           
  2410                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;incstack = 0
  2414  001B30  C0D4  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2415  001B34  C0D5  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2416  001B38  0E00               	movlw	0
  2417  001B3A  6EDE               	movwf	postinc2,c
  2418  001B3C  0E00               	movlw	0
  2419  001B3E  6EDD               	movwf	postdec2,c
  2420  001B40  0012               	return	
  2421  001B42                     __end_of_init_timer1_lthread:
  2422                           	opt stack 0
  2423                           tblptru	equ	0xFF8
  2424                           prodh	equ	0xFF4
  2425                           prodl	equ	0xFF3
  2426                           postinc0	equ	0xFEE
  2427                           wreg	equ	0xFE8
  2428                           indf1	equ	0xFE7
  2429                           fsr1h	equ	0xFE2
  2430                           fsr1l	equ	0xFE1
  2431                           indf2	equ	0xFDF
  2432                           postinc2	equ	0xFDE
  2433                           postdec2	equ	0xFDD
  2434                           fsr2h	equ	0xFDA
  2435                           fsr2l	equ	0xFD9
  2436                           status	equ	0xFD8
  2437                           
  2438 ;; *************** function _init_queues *****************
  2439 ;; Defined at:
  2440 ;;		line 194 in file "../src/messages.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;		None               void
  2447 ;; Registers used:
  2448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2454 ;;      Params:         0       0       0       0       0
  2455 ;;      Locals:         0       0       0       0       0
  2456 ;;      Temps:          0       1       0       0       0
  2457 ;;      Totals:         0       1       0       0       0
  2458 ;;Total ram usage:        1 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; Hardware stack levels required when called:   11
  2461 ;; This function calls:
  2462 ;;		_init_queue
  2463 ;; This function is called by:
  2464 ;;		_main
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text10
  2469  00159A                     __ptext10:
  2470                           	opt stack 0
  2471  00159A                     _init_queues:
  2472                           	opt stack 19
  2473                           
  2474                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2475                           
  2476                           ;incstack = 0
  2477  00159A  0100               	movlb	0	; () banked
  2478  00159C  6FD8               	movwf	??_init_queues& (0+255),b
  2479  00159E  0E00               	movlw	0
  2480  0015A0  6E46               	movwf	_MQ_Main_Willing_to_block,c
  2481  0015A2  0100               	movlb	0	; () banked
  2482  0015A4  51D8               	movf	??_init_queues& (0+255),w,b
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2486  0015A6  0100               	movlb	0	; () banked
  2487  0015A8  0E00               	movlw	high _ToMainLow_MQ
  2488  0015AA  0100               	movlb	0	; () banked
  2489  0015AC  0100               	movlb	0	; () banked
  2490  0015AE  6FD5               	movwf	(init_queue@qptr+1)& (0+255),b
  2491  0015B0  0100               	movlb	0	; () banked
  2492  0015B2  0E80               	movlw	low _ToMainLow_MQ
  2493  0015B4  0100               	movlb	0	; () banked
  2494  0015B6  0100               	movlb	0	; () banked
  2495  0015B8  6FD4               	movwf	init_queue@qptr& (0+255),b
  2496  0015BA  EC57  F00A         	call	_init_queue	;wreg free
  2497                           
  2498                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2499  0015BE  0101               	movlb	1	; () banked
  2500  0015C0  0E01               	movlw	high _ToMainHigh_MQ
  2501  0015C2  0100               	movlb	0	; () banked
  2502  0015C4  0100               	movlb	0	; () banked
  2503  0015C6  6FD5               	movwf	(init_queue@qptr+1)& (0+255),b
  2504  0015C8  0101               	movlb	1	; () banked
  2505  0015CA  0E6C               	movlw	low _ToMainHigh_MQ
  2506  0015CC  0100               	movlb	0	; () banked
  2507  0015CE  0100               	movlb	0	; () banked
  2508  0015D0  6FD4               	movwf	init_queue@qptr& (0+255),b
  2509  0015D2  EC57  F00A         	call	_init_queue	;wreg free
  2510                           
  2511                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2512  0015D6  0101               	movlb	1	; () banked
  2513  0015D8  0E01               	movlw	high _FromMainLow_MQ
  2514  0015DA  0100               	movlb	0	; () banked
  2515  0015DC  0100               	movlb	0	; () banked
  2516  0015DE  6FD5               	movwf	(init_queue@qptr+1)& (0+255),b
  2517  0015E0  0101               	movlb	1	; () banked
  2518  0015E2  0E36               	movlw	low _FromMainLow_MQ
  2519  0015E4  0100               	movlb	0	; () banked
  2520  0015E6  0100               	movlb	0	; () banked
  2521  0015E8  6FD4               	movwf	init_queue@qptr& (0+255),b
  2522  0015EA  EC57  F00A         	call	_init_queue	;wreg free
  2523                           
  2524                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2525  0015EE  0101               	movlb	1	; () banked
  2526  0015F0  0E01               	movlw	high _FromMainHigh_MQ
  2527  0015F2  0100               	movlb	0	; () banked
  2528  0015F4  0100               	movlb	0	; () banked
  2529  0015F6  6FD5               	movwf	(init_queue@qptr+1)& (0+255),b
  2530  0015F8  0101               	movlb	1	; () banked
  2531  0015FA  0E00               	movlw	low _FromMainHigh_MQ
  2532  0015FC  0100               	movlb	0	; () banked
  2533  0015FE  0100               	movlb	0	; () banked
  2534  001600  6FD4               	movwf	init_queue@qptr& (0+255),b
  2535  001602  EC57  F00A         	call	_init_queue	;wreg free
  2536  001606  0012               	return	
  2537  001608                     __end_of_init_queues:
  2538                           	opt stack 0
  2539                           tblptru	equ	0xFF8
  2540                           prodh	equ	0xFF4
  2541                           prodl	equ	0xFF3
  2542                           postinc0	equ	0xFEE
  2543                           wreg	equ	0xFE8
  2544                           indf1	equ	0xFE7
  2545                           fsr1h	equ	0xFE2
  2546                           fsr1l	equ	0xFE1
  2547                           indf2	equ	0xFDF
  2548                           postinc2	equ	0xFDE
  2549                           postdec2	equ	0xFDD
  2550                           fsr2h	equ	0xFDA
  2551                           fsr2l	equ	0xFD9
  2552                           status	equ	0xFD8
  2553                           
  2554 ;; *************** function _init_queue *****************
  2555 ;; Defined at:
  2556 ;;		line 14 in file "../src/messages.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  qptr            2   30[BANK0 ] PTR struct __msg_queue
  2559 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  i               1   33[BANK0 ] unsigned char 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;		None               void
  2564 ;; Registers used:
  2565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2571 ;;      Params:         0       2       0       0       0
  2572 ;;      Locals:         0       1       0       0       0
  2573 ;;      Temps:          0       1       0       0       0
  2574 ;;      Totals:         0       4       0       0       0
  2575 ;;Total ram usage:        4 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:   10
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_init_queues
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text11
  2586  0014AE                     __ptext11:
  2587                           	opt stack 0
  2588  0014AE                     _init_queue:
  2589                           	opt stack 19
  2590                           
  2591                           ;messages.c: 15: unsigned char i;
  2592                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2593                           
  2594                           ;incstack = 0
  2595  0014AE  0100               	movlb	0	; () banked
  2596  0014B0  EE20 F034          	lfsr	2,52
  2597  0014B4  0100               	movlb	0	; () banked
  2598  0014B6  51D4               	movf	init_queue@qptr& (0+255),w,b
  2599  0014B8  26D9               	addwf	fsr2l,f,c
  2600  0014BA  0100               	movlb	0	; () banked
  2601  0014BC  51D5               	movf	(init_queue@qptr+1)& (0+255),w,b
  2602  0014BE  22DA               	addwfc	fsr2h,f,c
  2603  0014C0  0E00               	movlw	0
  2604  0014C2  6EDF               	movwf	indf2,c
  2605                           
  2606                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2607  0014C4  0100               	movlb	0	; () banked
  2608  0014C6  EE20 F035          	lfsr	2,53
  2609  0014CA  0100               	movlb	0	; () banked
  2610  0014CC  51D4               	movf	init_queue@qptr& (0+255),w,b
  2611  0014CE  26D9               	addwf	fsr2l,f,c
  2612  0014D0  0100               	movlb	0	; () banked
  2613  0014D2  51D5               	movf	(init_queue@qptr+1)& (0+255),w,b
  2614  0014D4  22DA               	addwfc	fsr2h,f,c
  2615  0014D6  0E00               	movlw	0
  2616  0014D8  6EDF               	movwf	indf2,c
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2620  0014DA  0100               	movlb	0	; () banked
  2621  0014DC  6FD6               	movwf	??_init_queue& (0+255),b
  2622  0014DE  0E00               	movlw	0
  2623  0014E0  0100               	movlb	0	; () banked
  2624  0014E2  0100               	movlb	0	; () banked
  2625  0014E4  6FD7               	movwf	init_queue@i& (0+255),b
  2626  0014E6  0100               	movlb	0	; () banked
  2627  0014E8  51D6               	movf	??_init_queue& (0+255),w,b
  2628                           
  2629                           ; BSR set to: 0
  2630  0014EA  0E03               	movlw	3
  2631  0014EC  0100               	movlb	0	; () banked
  2632  0014EE  0100               	movlb	0	; () banked
  2633  0014F0  65D7               	cpfsgt	init_queue@i& (0+255),b
  2634  0014F2  D001               	goto	l2621
  2635  0014F4  0012               	return	
  2636  0014F6                     l2621:
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;messages.c: 20: qptr->queue[i].full = 0;
  2640  0014F6  0100               	movlb	0	; () banked
  2641  0014F8  0100               	movlb	0	; () banked
  2642  0014FA  51D7               	movf	init_queue@i& (0+255),w,b
  2643  0014FC  0D0D               	mullw	13
  2644  0014FE  50F3               	movf	prodl,w,c
  2645  001500  0100               	movlb	0	; () banked
  2646  001502  0100               	movlb	0	; () banked
  2647  001504  25D4               	addwf	init_queue@qptr& (0+255),w,b
  2648  001506  6ED9               	movwf	fsr2l,c
  2649  001508  50F4               	movf	prodh,w,c
  2650  00150A  0100               	movlb	0	; () banked
  2651  00150C  0100               	movlb	0	; () banked
  2652  00150E  21D5               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2653  001510  6EDA               	movwf	fsr2h,c
  2654  001512  0E00               	movlw	0
  2655  001514  6EDF               	movwf	indf2,c
  2656                           
  2657                           ; BSR set to: 0
  2658  001516  0100               	movlb	0	; () banked
  2659  001518  0100               	movlb	0	; () banked
  2660  00151A  2BD7               	incf	init_queue@i& (0+255),f,b
  2661                           
  2662                           ; BSR set to: 0
  2663  00151C  0E03               	movlw	3
  2664  00151E  0100               	movlb	0	; () banked
  2665  001520  0100               	movlb	0	; () banked
  2666  001522  65D7               	cpfsgt	init_queue@i& (0+255),b
  2667  001524  D7E8               	goto	l2621
  2668  001526  0012               	return	
  2669  001528                     __end_of_init_queue:
  2670                           	opt stack 0
  2671                           tblptru	equ	0xFF8
  2672                           prodh	equ	0xFF4
  2673                           prodl	equ	0xFF3
  2674                           postinc0	equ	0xFEE
  2675                           wreg	equ	0xFE8
  2676                           indf1	equ	0xFE7
  2677                           fsr1h	equ	0xFE2
  2678                           fsr1l	equ	0xFE1
  2679                           indf2	equ	0xFDF
  2680                           postinc2	equ	0xFDE
  2681                           postdec2	equ	0xFDD
  2682                           fsr2h	equ	0xFDA
  2683                           fsr2l	equ	0xFD9
  2684                           status	equ	0xFD8
  2685                           
  2686 ;; *************** function _init_i2c *****************
  2687 ;; Defined at:
  2688 ;;		line 275 in file "../src/my_i2c.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  ic              2   30[BANK0 ] PTR struct __i2c_comm
  2691 ;;		 -> main@ic(28), 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;		None
  2694 ;; Return value:  Size  Location     Type
  2695 ;;		None               void
  2696 ;; Registers used:
  2697 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2703 ;;      Params:         0       2       0       0       0
  2704 ;;      Locals:         0       0       0       0       0
  2705 ;;      Temps:          0       0       0       0       0
  2706 ;;      Totals:         0       2       0       0       0
  2707 ;;Total ram usage:        2 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:   10
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_main
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text12
  2718  001608                     __ptext12:
  2719                           	opt stack 0
  2720  001608                     _init_i2c:
  2721                           	opt stack 20
  2722                           
  2723                           ;my_i2c.c: 276: ic_ptr = ic;
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;incstack = 0
  2727  001608  0100               	movlb	0	; () banked
  2728  00160A  0100               	movlb	0	; () banked
  2729  00160C  C0D5  F0E1         	movff	init_i2c@ic+1,_ic_ptr+1
  2730  001610  0100               	movlb	0	; () banked
  2731  001612  0100               	movlb	0	; () banked
  2732  001614  C0D4  F0E0         	movff	init_i2c@ic,_ic_ptr
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;my_i2c.c: 277: ic_ptr->buflen = 0;
  2736  001618  0100               	movlb	0	; () banked
  2737  00161A  EE20 F00A          	lfsr	2,10
  2738  00161E  0100               	movlb	0	; () banked
  2739  001620  51E0               	movf	_ic_ptr& (0+255),w,b
  2740  001622  26D9               	addwf	fsr2l,f,c
  2741  001624  0100               	movlb	0	; () banked
  2742  001626  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2743  001628  22DA               	addwfc	fsr2h,f,c
  2744  00162A  0E00               	movlw	0
  2745  00162C  6EDF               	movwf	indf2,c
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;my_i2c.c: 278: ic_ptr->event_count = 0;
  2749  00162E  0100               	movlb	0	; () banked
  2750  001630  EE20 F00B          	lfsr	2,11
  2751  001634  0100               	movlb	0	; () banked
  2752  001636  51E0               	movf	_ic_ptr& (0+255),w,b
  2753  001638  26D9               	addwf	fsr2l,f,c
  2754  00163A  0100               	movlb	0	; () banked
  2755  00163C  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2756  00163E  22DA               	addwfc	fsr2h,f,c
  2757  001640  0E00               	movlw	0
  2758  001642  6EDF               	movwf	indf2,c
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;my_i2c.c: 279: ic_ptr->status = 0x5;
  2762  001644  0100               	movlb	0	; () banked
  2763  001646  EE20 F00C          	lfsr	2,12
  2764  00164A  0100               	movlb	0	; () banked
  2765  00164C  51E0               	movf	_ic_ptr& (0+255),w,b
  2766  00164E  26D9               	addwf	fsr2l,f,c
  2767  001650  0100               	movlb	0	; () banked
  2768  001652  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2769  001654  22DA               	addwfc	fsr2h,f,c
  2770  001656  0E05               	movlw	5
  2771  001658  6EDF               	movwf	indf2,c
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;my_i2c.c: 280: ic_ptr->error_count = 0;
  2775  00165A  0100               	movlb	0	; () banked
  2776  00165C  EE20 F00E          	lfsr	2,14
  2777  001660  0100               	movlb	0	; () banked
  2778  001662  51E0               	movf	_ic_ptr& (0+255),w,b
  2779  001664  26D9               	addwf	fsr2l,f,c
  2780  001666  0100               	movlb	0	; () banked
  2781  001668  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  2782  00166A  22DA               	addwfc	fsr2h,f,c
  2783  00166C  0E00               	movlw	0
  2784  00166E  6EDF               	movwf	indf2,c
  2785                           
  2786                           ; BSR set to: 0
  2787  001670  0012               	return	
  2788  001672                     __end_of_init_i2c:
  2789                           	opt stack 0
  2790                           tblptru	equ	0xFF8
  2791                           prodh	equ	0xFF4
  2792                           prodl	equ	0xFF3
  2793                           postinc0	equ	0xFEE
  2794                           wreg	equ	0xFE8
  2795                           indf1	equ	0xFE7
  2796                           fsr1h	equ	0xFE2
  2797                           fsr1l	equ	0xFE1
  2798                           indf2	equ	0xFDF
  2799                           postinc2	equ	0xFDE
  2800                           postdec2	equ	0xFDD
  2801                           fsr2h	equ	0xFDA
  2802                           fsr2l	equ	0xFD9
  2803                           status	equ	0xFD8
  2804                           
  2805 ;; *************** function _i2c_configure_slave *****************
  2806 ;; Defined at:
  2807 ;;		line 286 in file "../src/my_i2c.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  addr            1    wreg     unsigned char 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  addr            1   30[BANK0 ] unsigned char 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;		None               void
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2821 ;;      Params:         0       0       0       0       0
  2822 ;;      Locals:         0       1       0       0       0
  2823 ;;      Temps:          0       0       0       0       0
  2824 ;;      Totals:         0       1       0       0       0
  2825 ;;Total ram usage:        1 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:   10
  2828 ;; This function calls:
  2829 ;;		Nothing
  2830 ;; This function is called by:
  2831 ;;		_main
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text13
  2836  001A14                     __ptext13:
  2837                           	opt stack 0
  2838  001A14                     _i2c_configure_slave:
  2839                           	opt stack 20
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;incstack = 0
  2843                           ;i2c_configure_slave@addr stored from wreg
  2844  001A14  CFE8 F0D4          	movff	wreg,i2c_configure_slave@addr
  2845                           
  2846                           ;my_i2c.c: 298: TRISCbits.TRISC3 = 1;
  2847  001A18  8694               	bsf	3988,3,c	;volatile
  2848                           
  2849                           ;my_i2c.c: 299: TRISCbits.TRISC4 = 1;
  2850  001A1A  8894               	bsf	3988,4,c	;volatile
  2851                           
  2852                           ;my_i2c.c: 304: SSPADD = addr;
  2853  001A1C  C0D4  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2854                           
  2855                           ;my_i2c.c: 306: SSPSTAT = 0x0;
  2856  001A20  0E00               	movlw	0
  2857  001A22  6EC7               	movwf	4039,c	;volatile
  2858                           
  2859                           ;my_i2c.c: 307: SSPCON1 = 0x0;
  2860  001A24  0E00               	movlw	0
  2861  001A26  6EC6               	movwf	4038,c	;volatile
  2862                           
  2863                           ;my_i2c.c: 308: SSPCON2 = 0x0;
  2864  001A28  0E00               	movlw	0
  2865  001A2A  6EC5               	movwf	4037,c	;volatile
  2866                           
  2867                           ;my_i2c.c: 309: SSPCON1 |= 0x0E;
  2868  001A2C  0E0E               	movlw	14
  2869  001A2E  12C6               	iorwf	4038,f,c	;volatile
  2870                           
  2871                           ;my_i2c.c: 310: SSPSTAT |= 0b10000000;
  2872  001A30  8EC7               	bsf	4039,7,c	;volatile
  2873                           
  2874                           ;my_i2c.c: 313: TRISCbits.TRISC3 = 1;
  2875  001A32  8694               	bsf	3988,3,c	;volatile
  2876                           
  2877                           ;my_i2c.c: 314: TRISCbits.TRISC4 = 1;
  2878  001A34  8894               	bsf	3988,4,c	;volatile
  2879                           
  2880                           ;my_i2c.c: 335: SSPCON2bits.SEN = 1;
  2881  001A36  80C5               	bsf	4037,0,c	;volatile
  2882                           
  2883                           ;my_i2c.c: 336: SSPCON1 |= 0b00100000;
  2884  001A38  8AC6               	bsf	4038,5,c	;volatile
  2885  001A3A  0012               	return	
  2886  001A3C                     __end_of_i2c_configure_slave:
  2887                           	opt stack 0
  2888                           tblptru	equ	0xFF8
  2889                           prodh	equ	0xFF4
  2890                           prodl	equ	0xFF3
  2891                           postinc0	equ	0xFEE
  2892                           wreg	equ	0xFE8
  2893                           indf1	equ	0xFE7
  2894                           fsr1h	equ	0xFE2
  2895                           fsr1l	equ	0xFE1
  2896                           indf2	equ	0xFDF
  2897                           postinc2	equ	0xFDE
  2898                           postdec2	equ	0xFDD
  2899                           fsr2h	equ	0xFDA
  2900                           fsr2l	equ	0xFD9
  2901                           status	equ	0xFD8
  2902                           
  2903 ;; *************** function _enable_interrupts *****************
  2904 ;; Defined at:
  2905 ;;		line 16 in file "../src/interrupts.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;		None               void
  2912 ;; Registers used:
  2913 ;;		None
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2919 ;;      Params:         0       0       0       0       0
  2920 ;;      Locals:         0       0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0
  2922 ;;      Totals:         0       0       0       0       0
  2923 ;;Total ram usage:        0 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; Hardware stack levels required when called:   10
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_main
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text14
  2934  001BAA                     __ptext14:
  2935                           	opt stack 0
  2936  001BAA                     _enable_interrupts:
  2937                           	opt stack 20
  2938                           
  2939                           ;interrupts.c: 19: RCONbits.IPEN = 1;
  2940                           
  2941                           ;incstack = 0
  2942  001BAA  8ED0               	bsf	4048,7,c	;volatile
  2943                           
  2944                           ;interrupts.c: 20: INTCONbits.GIEH = 1;
  2945  001BAC  8EF2               	bsf	intcon,7,c	;volatile
  2946                           
  2947                           ;interrupts.c: 21: INTCONbits.GIEL = 1;
  2948  001BAE  8CF2               	bsf	intcon,6,c	;volatile
  2949  001BB0  0012               	return	
  2950  001BB2                     __end_of_enable_interrupts:
  2951                           	opt stack 0
  2952                           tblptru	equ	0xFF8
  2953                           prodh	equ	0xFF4
  2954                           prodl	equ	0xFF3
  2955                           intcon	equ	0xFF2
  2956                           postinc0	equ	0xFEE
  2957                           wreg	equ	0xFE8
  2958                           indf1	equ	0xFE7
  2959                           fsr1h	equ	0xFE2
  2960                           fsr1l	equ	0xFE1
  2961                           indf2	equ	0xFDF
  2962                           postinc2	equ	0xFDE
  2963                           postdec2	equ	0xFDD
  2964                           fsr2h	equ	0xFDA
  2965                           fsr2l	equ	0xFD9
  2966                           status	equ	0xFD8
  2967                           
  2968 ;; *************** function _block_on_To_msgqueues *****************
  2969 ;; Defined at:
  2970 ;;		line 258 in file "../src/messages.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;		None
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;		None               void
  2977 ;; Registers used:
  2978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2984 ;;      Params:         0       0       0       0       0
  2985 ;;      Locals:         0       0       0       0       0
  2986 ;;      Temps:          0       1       0       0       0
  2987 ;;      Totals:         0       1       0       0       0
  2988 ;;Total ram usage:        1 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:   13
  2991 ;; This function calls:
  2992 ;;		_Delay1KTCYx
  2993 ;;		_check_msg
  2994 ;;		_in_main
  2995 ;; This function is called by:
  2996 ;;		_main
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text15
  3001  001430                     __ptext15:
  3002                           	opt stack 0
  3003  001430                     _block_on_To_msgqueues:
  3004                           	opt stack 17
  3005                           
  3006                           ;messages.c: 259: if (!in_main()) {
  3007                           
  3008                           ;incstack = 0
  3009  001430  ECB2  F00B         	call	_in_main	;wreg free
  3010  001434  0100               	movlb	0	; () banked
  3011  001436  0100               	movlb	0	; () banked
  3012  001438  51D9               	movf	(?_in_main+1)& (0+255),w,b
  3013  00143A  0100               	movlb	0	; () banked
  3014  00143C  11D8               	iorwf	?_in_main& (0+255),w,b
  3015  00143E  B4D8               	btfsc	status,2,c
  3016  001440  0012               	return	
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;messages.c: 261: }
  3020                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3021                           
  3022                           ; BSR set to: 0
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;messages.c: 260: return;
  3026  001442  0100               	movlb	0	; () banked
  3027  001444  6FDA               	movwf	??_block_on_To_msgqueues& (0+255),b
  3028  001446  0E01               	movlw	1
  3029  001448  6E46               	movwf	_MQ_Main_Willing_to_block,c
  3030  00144A  0100               	movlb	0	; () banked
  3031  00144C  51DA               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3032  00144E                     l2555:
  3033                           
  3034                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3035  00144E  0101               	movlb	1	; () banked
  3036  001450  0E01               	movlw	high _ToMainHigh_MQ
  3037  001452  0100               	movlb	0	; () banked
  3038  001454  0100               	movlb	0	; () banked
  3039  001456  6FD5               	movwf	(check_msg@qptr+1)& (0+255),b
  3040  001458  0101               	movlb	1	; () banked
  3041  00145A  0E6C               	movlw	low _ToMainHigh_MQ
  3042  00145C  0100               	movlb	0	; () banked
  3043  00145E  0100               	movlb	0	; () banked
  3044  001460  6FD4               	movwf	check_msg@qptr& (0+255),b
  3045  001462  ECAC  F00C         	call	_check_msg	;wreg free
  3046  001466  0900               	iorlw	0
  3047  001468  B4D8               	btfsc	status,2,c
  3048  00146A  D007               	goto	l2561
  3049                           
  3050                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3051  00146C  0100               	movlb	0	; () banked
  3052  00146E  6FDA               	movwf	??_block_on_To_msgqueues& (0+255),b
  3053  001470  0E00               	movlw	0
  3054  001472  6E46               	movwf	_MQ_Main_Willing_to_block,c
  3055  001474  0100               	movlb	0	; () banked
  3056  001476  51DA               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3057  001478  0012               	return	
  3058  00147A                     l2561:
  3059                           
  3060                           ;messages.c: 271: }
  3061                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3062  00147A  0100               	movlb	0	; () banked
  3063  00147C  0E00               	movlw	high _ToMainLow_MQ
  3064  00147E  0100               	movlb	0	; () banked
  3065  001480  0100               	movlb	0	; () banked
  3066  001482  6FD5               	movwf	(check_msg@qptr+1)& (0+255),b
  3067  001484  0100               	movlb	0	; () banked
  3068  001486  0E80               	movlw	low _ToMainLow_MQ
  3069  001488  0100               	movlb	0	; () banked
  3070  00148A  0100               	movlb	0	; () banked
  3071  00148C  6FD4               	movwf	check_msg@qptr& (0+255),b
  3072  00148E  ECAC  F00C         	call	_check_msg	;wreg free
  3073  001492  0900               	iorlw	0
  3074  001494  B4D8               	btfsc	status,2,c
  3075  001496  D007               	goto	l2567
  3076                           
  3077                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3078  001498  0100               	movlb	0	; () banked
  3079  00149A  6FDA               	movwf	??_block_on_To_msgqueues& (0+255),b
  3080  00149C  0E00               	movlw	0
  3081  00149E  6E46               	movwf	_MQ_Main_Willing_to_block,c
  3082  0014A0  0100               	movlb	0	; () banked
  3083  0014A2  51DA               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3084  0014A4  0012               	return	
  3085  0014A6                     l2567:
  3086                           
  3087                           ;messages.c: 278: }
  3088                           ;messages.c: 279: Delay1KTCYx(10);
  3089  0014A6  0E0A               	movlw	10
  3090  0014A8  EC84  F00D         	call	_Delay1KTCYx
  3091  0014AC  D7D0               	goto	l2555
  3092  0014AE                     __end_of_block_on_To_msgqueues:
  3093                           	opt stack 0
  3094                           tblptru	equ	0xFF8
  3095                           prodh	equ	0xFF4
  3096                           prodl	equ	0xFF3
  3097                           intcon	equ	0xFF2
  3098                           postinc0	equ	0xFEE
  3099                           wreg	equ	0xFE8
  3100                           indf1	equ	0xFE7
  3101                           fsr1h	equ	0xFE2
  3102                           fsr1l	equ	0xFE1
  3103                           indf2	equ	0xFDF
  3104                           postinc2	equ	0xFDE
  3105                           postdec2	equ	0xFDD
  3106                           fsr2h	equ	0xFDA
  3107                           fsr2l	equ	0xFD9
  3108                           status	equ	0xFD8
  3109                           
  3110 ;; *************** function _in_main *****************
  3111 ;; Defined at:
  3112 ;;		line 42 in file "../src/interrupts.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  2   34[BANK0 ] int 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3126 ;;      Params:         0       2       0       0       0
  3127 ;;      Locals:         0       0       0       0       0
  3128 ;;      Temps:          0       0       0       0       0
  3129 ;;      Totals:         0       2       0       0       0
  3130 ;;Total ram usage:        2 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:   12
  3133 ;; This function calls:
  3134 ;;		_in_high_int
  3135 ;;		_in_low_int
  3136 ;; This function is called by:
  3137 ;;		_block_on_To_msgqueues
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text16
  3142  001764                     __ptext16:
  3143                           	opt stack 0
  3144  001764                     _in_main:
  3145                           	opt stack 17
  3146                           
  3147                           ;interrupts.c: 43: if ((!in_low_int()) && (!in_high_int())) {
  3148                           
  3149                           ;incstack = 0
  3150  001764  EC8F  F00B         	call	_in_low_int	;wreg free
  3151  001768  0100               	movlb	0	; () banked
  3152  00176A  0100               	movlb	0	; () banked
  3153  00176C  51D7               	movf	(?_in_low_int+1)& (0+255),w,b
  3154  00176E  0100               	movlb	0	; () banked
  3155  001770  11D6               	iorwf	?_in_low_int& (0+255),w,b
  3156  001772  A4D8               	btfss	status,2,c
  3157  001774  D011               	goto	l2131
  3158                           
  3159                           ; BSR set to: 0
  3160  001776  ECA1  F00D         	call	_in_high_int	;wreg free
  3161  00177A  0100               	movlb	0	; () banked
  3162  00177C  0100               	movlb	0	; () banked
  3163  00177E  51D5               	movf	(?_in_high_int+1)& (0+255),w,b
  3164  001780  0100               	movlb	0	; () banked
  3165  001782  11D4               	iorwf	?_in_high_int& (0+255),w,b
  3166  001784  A4D8               	btfss	status,2,c
  3167  001786  D008               	goto	l2131
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;interrupts.c: 44: return (1);
  3171  001788  0E00               	movlw	0
  3172  00178A  0100               	movlb	0	; () banked
  3173  00178C  0100               	movlb	0	; () banked
  3174  00178E  6FD9               	movwf	(?_in_main+1)& (0+255),b
  3175  001790  0E01               	movlw	1
  3176  001792  0100               	movlb	0	; () banked
  3177  001794  6FD8               	movwf	?_in_main& (0+255),b
  3178  001796  0012               	return	
  3179  001798                     l2131:
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;interrupts.c: 46: return (0);
  3183  001798  0E00               	movlw	0
  3184  00179A  0100               	movlb	0	; () banked
  3185  00179C  0100               	movlb	0	; () banked
  3186  00179E  6FD9               	movwf	(?_in_main+1)& (0+255),b
  3187  0017A0  0E00               	movlw	0
  3188  0017A2  0100               	movlb	0	; () banked
  3189  0017A4  6FD8               	movwf	?_in_main& (0+255),b
  3190  0017A6  0012               	return	
  3191  0017A8                     __end_of_in_main:
  3192                           	opt stack 0
  3193                           tblptru	equ	0xFF8
  3194                           prodh	equ	0xFF4
  3195                           prodl	equ	0xFF3
  3196                           intcon	equ	0xFF2
  3197                           postinc0	equ	0xFEE
  3198                           wreg	equ	0xFE8
  3199                           indf1	equ	0xFE7
  3200                           fsr1h	equ	0xFE2
  3201                           fsr1l	equ	0xFE1
  3202                           indf2	equ	0xFDF
  3203                           postinc2	equ	0xFDE
  3204                           postdec2	equ	0xFDD
  3205                           fsr2h	equ	0xFDA
  3206                           fsr2l	equ	0xFD9
  3207                           status	equ	0xFD8
  3208                           
  3209 ;; *************** function _in_low_int *****************
  3210 ;; Defined at:
  3211 ;;		line 32 in file "../src/interrupts.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  2   32[BANK0 ] int 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3225 ;;      Params:         0       2       0       0       0
  3226 ;;      Locals:         0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0
  3228 ;;      Totals:         0       2       0       0       0
  3229 ;;Total ram usage:        2 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:   11
  3232 ;; This function calls:
  3233 ;;		_in_high_int
  3234 ;; This function is called by:
  3235 ;;		_in_main
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text17
  3240  00171E                     __ptext17:
  3241                           	opt stack 0
  3242  00171E                     _in_low_int:
  3243                           	opt stack 17
  3244                           
  3245                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;incstack = 0
  3249  00171E  ACF2               	btfss	intcon,6,c	;volatile
  3250  001720  D008               	goto	l2109
  3251                           
  3252                           ;interrupts.c: 34: return (0);
  3253  001722  0E00               	movlw	0
  3254  001724  0100               	movlb	0	; () banked
  3255  001726  0100               	movlb	0	; () banked
  3256  001728  6FD7               	movwf	(?_in_low_int+1)& (0+255),b
  3257  00172A  0E00               	movlw	0
  3258  00172C  0100               	movlb	0	; () banked
  3259  00172E  6FD6               	movwf	?_in_low_int& (0+255),b
  3260  001730  0012               	return	
  3261  001732                     l2109:
  3262  001732  ECA1  F00D         	call	_in_high_int	;wreg free
  3263  001736  0100               	movlb	0	; () banked
  3264  001738  0100               	movlb	0	; () banked
  3265  00173A  51D5               	movf	(?_in_high_int+1)& (0+255),w,b
  3266  00173C  0100               	movlb	0	; () banked
  3267  00173E  11D4               	iorwf	?_in_high_int& (0+255),w,b
  3268  001740  B4D8               	btfsc	status,2,c
  3269  001742  D008               	goto	l2117
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;interrupts.c: 36: return (0);
  3273  001744  0E00               	movlw	0
  3274  001746  0100               	movlb	0	; () banked
  3275  001748  0100               	movlb	0	; () banked
  3276  00174A  6FD7               	movwf	(?_in_low_int+1)& (0+255),b
  3277  00174C  0E00               	movlw	0
  3278  00174E  0100               	movlb	0	; () banked
  3279  001750  6FD6               	movwf	?_in_low_int& (0+255),b
  3280  001752  0012               	return	
  3281  001754                     l2117:
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;interrupts.c: 38: return (1);
  3285  001754  0E00               	movlw	0
  3286  001756  0100               	movlb	0	; () banked
  3287  001758  0100               	movlb	0	; () banked
  3288  00175A  6FD7               	movwf	(?_in_low_int+1)& (0+255),b
  3289  00175C  0E01               	movlw	1
  3290  00175E  0100               	movlb	0	; () banked
  3291  001760  6FD6               	movwf	?_in_low_int& (0+255),b
  3292  001762  0012               	return	
  3293  001764                     __end_of_in_low_int:
  3294                           	opt stack 0
  3295                           tblptru	equ	0xFF8
  3296                           prodh	equ	0xFF4
  3297                           prodl	equ	0xFF3
  3298                           intcon	equ	0xFF2
  3299                           postinc0	equ	0xFEE
  3300                           wreg	equ	0xFE8
  3301                           indf1	equ	0xFE7
  3302                           fsr1h	equ	0xFE2
  3303                           fsr1l	equ	0xFE1
  3304                           indf2	equ	0xFDF
  3305                           postinc2	equ	0xFDE
  3306                           postdec2	equ	0xFDD
  3307                           fsr2h	equ	0xFDA
  3308                           fsr2l	equ	0xFD9
  3309                           status	equ	0xFD8
  3310                           
  3311 ;; *************** function _in_high_int *****************
  3312 ;; Defined at:
  3313 ;;		line 24 in file "../src/interrupts.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;		None
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;		None
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  2   30[BANK0 ] int 
  3320 ;; Registers used:
  3321 ;;		wreg, status,2
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3327 ;;      Params:         0       2       0       0       0
  3328 ;;      Locals:         0       0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0
  3330 ;;      Totals:         0       2       0       0       0
  3331 ;;Total ram usage:        2 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:   10
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_in_low_int
  3338 ;;		_in_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text18
  3343  001B42                     __ptext18:
  3344                           	opt stack 0
  3345  001B42                     _in_high_int:
  3346                           	opt stack 17
  3347                           
  3348                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;incstack = 0
  3352  001B42  0E00               	movlw	0
  3353  001B44  AEF2               	btfss	intcon,7,c	;volatile
  3354  001B46  0E01               	movlw	1
  3355  001B48  0100               	movlb	0	; () banked
  3356  001B4A  0100               	movlb	0	; () banked
  3357  001B4C  6FD4               	movwf	?_in_high_int& (0+255),b
  3358  001B4E  0100               	movlb	0	; () banked
  3359  001B50  6BD5               	clrf	(?_in_high_int+1)& (0+255),b
  3360  001B52  0012               	return	
  3361  001B54                     __end_of_in_high_int:
  3362                           	opt stack 0
  3363                           tblptru	equ	0xFF8
  3364                           prodh	equ	0xFF4
  3365                           prodl	equ	0xFF3
  3366                           intcon	equ	0xFF2
  3367                           postinc0	equ	0xFEE
  3368                           wreg	equ	0xFE8
  3369                           indf1	equ	0xFE7
  3370                           fsr1h	equ	0xFE2
  3371                           fsr1l	equ	0xFE1
  3372                           indf2	equ	0xFDF
  3373                           postinc2	equ	0xFDE
  3374                           postdec2	equ	0xFDD
  3375                           fsr2h	equ	0xFDA
  3376                           fsr2l	equ	0xFD9
  3377                           status	equ	0xFD8
  3378                           
  3379 ;; *************** function _check_msg *****************
  3380 ;; Defined at:
  3381 ;;		line 222 in file "../src/messages.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  qptr            2   30[BANK0 ] PTR struct __msg_queue
  3384 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      unsigned char 
  3389 ;; Registers used:
  3390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3396 ;;      Params:         0       2       0       0       0
  3397 ;;      Locals:         0       0       0       0       0
  3398 ;;      Temps:          0       1       0       0       0
  3399 ;;      Totals:         0       3       0       0       0
  3400 ;;Total ram usage:        3 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:   10
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_block_on_To_msgqueues
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text19
  3411  001958                     __ptext19:
  3412                           	opt stack 0
  3413  001958                     _check_msg:
  3414                           	opt stack 19
  3415                           
  3416                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;incstack = 0
  3420  001958  0100               	movlb	0	; () banked
  3421  00195A  EE20 F035          	lfsr	2,53
  3422  00195E  0100               	movlb	0	; () banked
  3423  001960  51D4               	movf	check_msg@qptr& (0+255),w,b
  3424  001962  26D9               	addwf	fsr2l,f,c
  3425  001964  0100               	movlb	0	; () banked
  3426  001966  51D5               	movf	(check_msg@qptr+1)& (0+255),w,b
  3427  001968  22DA               	addwfc	fsr2h,f,c
  3428  00196A  50DF               	movf	indf2,w,c
  3429  00196C  0100               	movlb	0	; () banked
  3430  00196E  6FD6               	movwf	??_check_msg& (0+255),b
  3431  001970  0100               	movlb	0	; () banked
  3432  001972  51D6               	movf	??_check_msg& (0+255),w,b
  3433  001974  0D0D               	mullw	13
  3434  001976  50F3               	movf	prodl,w,c
  3435  001978  0100               	movlb	0	; () banked
  3436  00197A  0100               	movlb	0	; () banked
  3437  00197C  25D4               	addwf	check_msg@qptr& (0+255),w,b
  3438  00197E  6ED9               	movwf	fsr2l,c
  3439  001980  50F4               	movf	prodh,w,c
  3440  001982  0100               	movlb	0	; () banked
  3441  001984  0100               	movlb	0	; () banked
  3442  001986  21D5               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3443  001988  6EDA               	movwf	fsr2h,c
  3444  00198A  50DF               	movf	indf2,w,c
  3445  00198C  0012               	return	
  3446  00198E                     __end_of_check_msg:
  3447                           	opt stack 0
  3448                           tblptru	equ	0xFF8
  3449                           prodh	equ	0xFF4
  3450                           prodl	equ	0xFF3
  3451                           intcon	equ	0xFF2
  3452                           postinc0	equ	0xFEE
  3453                           wreg	equ	0xFE8
  3454                           indf1	equ	0xFE7
  3455                           fsr1h	equ	0xFE2
  3456                           fsr1l	equ	0xFE1
  3457                           indf2	equ	0xFDF
  3458                           postinc2	equ	0xFDE
  3459                           postdec2	equ	0xFDD
  3460                           fsr2h	equ	0xFDA
  3461                           fsr2l	equ	0xFD9
  3462                           status	equ	0xFD8
  3463                           
  3464 ;; *************** function _Delay1KTCYx *****************
  3465 ;; Defined at:
  3466 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  unit            1    wreg     unsigned char 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  unit            1   30[BANK0 ] unsigned char 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;		None               void
  3473 ;; Registers used:
  3474 ;;		wreg
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3480 ;;      Params:         0       0       0       0       0
  3481 ;;      Locals:         0       1       0       0       0
  3482 ;;      Temps:          0       0       0       0       0
  3483 ;;      Totals:         0       1       0       0       0
  3484 ;;Total ram usage:        1 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:   10
  3487 ;; This function calls:
  3488 ;;		Nothing
  3489 ;; This function is called by:
  3490 ;;		_block_on_To_msgqueues
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text20
  3495  001B08                     __ptext20:
  3496                           	opt stack 0
  3497  001B08                     _Delay1KTCYx:
  3498                           	opt stack 19
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;incstack = 0
  3502                           ;Delay1KTCYx@unit stored from wreg
  3503  001B08  CFE8 F0D4          	movff	wreg,Delay1KTCYx@unit
  3504  001B0C                     l733:
  3505  001B0C  0EFA               	movlw	250
  3506  001B0E                     u2387:
  3507  001B0E  F000               	nop	
  3508  001B10  2EE8               	decfsz	wreg,f,c
  3509  001B12  D7FD               	goto	u2387
  3510  001B14  0100               	movlb	0	; () banked
  3511  001B16  0100               	movlb	0	; () banked
  3512  001B18  2FD4               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3513  001B1A  D7F8               	goto	l733
  3514  001B1C  0012               	return	
  3515  001B1E                     __end_of_Delay1KTCYx:
  3516                           	opt stack 0
  3517                           tblptru	equ	0xFF8
  3518                           prodh	equ	0xFF4
  3519                           prodl	equ	0xFF3
  3520                           intcon	equ	0xFF2
  3521                           postinc0	equ	0xFEE
  3522                           wreg	equ	0xFE8
  3523                           indf1	equ	0xFE7
  3524                           fsr1h	equ	0xFE2
  3525                           fsr1l	equ	0xFE1
  3526                           indf2	equ	0xFDF
  3527                           postinc2	equ	0xFDE
  3528                           postdec2	equ	0xFDD
  3529                           fsr2h	equ	0xFDA
  3530                           fsr2l	equ	0xFD9
  3531                           status	equ	0xFD8
  3532                           
  3533 ;; *************** function _ToMainLow_recvmsg *****************
  3534 ;; Defined at:
  3535 ;;		line 112 in file "../src/messages.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  maxlength       1    wreg     unsigned char 
  3538 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3539 ;;		 -> main@msgtype(1), 
  3540 ;;  data            2   14[BANK1 ] PTR void 
  3541 ;;		 -> main@msgbuffer(11), 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  maxlength       1   16[BANK1 ] unsigned char 
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      char 
  3546 ;; Registers used:
  3547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3553 ;;      Params:         0       0       4       0       0
  3554 ;;      Locals:         0       0       1       0       0
  3555 ;;      Temps:          0       0       0       0       0
  3556 ;;      Totals:         0       0       5       0       0
  3557 ;;Total ram usage:        5 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:   12
  3560 ;; This function calls:
  3561 ;;		_recv_msg
  3562 ;; This function is called by:
  3563 ;;		_main
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	text21
  3568  0017A8                     __ptext21:
  3569                           	opt stack 0
  3570  0017A8                     _ToMainLow_recvmsg:
  3571                           	opt stack 18
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;incstack = 0
  3575                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3576  0017A8  CFE8 F1B2          	movff	wreg,ToMainLow_recvmsg@maxlength
  3577                           
  3578                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3579  0017AC  0100               	movlb	0	; () banked
  3580  0017AE  0E00               	movlw	high _ToMainLow_MQ
  3581  0017B0  0101               	movlb	1	; () banked
  3582  0017B2  0101               	movlb	1	; () banked
  3583  0017B4  6FA3               	movwf	(recv_msg@qptr+1)& (0+255),b
  3584  0017B6  0100               	movlb	0	; () banked
  3585  0017B8  0E80               	movlw	low _ToMainLow_MQ
  3586  0017BA  0101               	movlb	1	; () banked
  3587  0017BC  0101               	movlb	1	; () banked
  3588  0017BE  6FA2               	movwf	recv_msg@qptr& (0+255),b
  3589  0017C0  C1B2  F1A4         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3590  0017C4  0101               	movlb	1	; () banked
  3591  0017C6  0101               	movlb	1	; () banked
  3592  0017C8  C1AF  F1A6         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3593  0017CC  0101               	movlb	1	; () banked
  3594  0017CE  0101               	movlb	1	; () banked
  3595  0017D0  C1AE  F1A5         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3596  0017D4  0101               	movlb	1	; () banked
  3597  0017D6  0101               	movlb	1	; () banked
  3598  0017D8  C1B1  F1A8         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3599  0017DC  0101               	movlb	1	; () banked
  3600  0017DE  0101               	movlb	1	; () banked
  3601  0017E0  C1B0  F1A7         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3602  0017E4  EC25  F005         	call	_recv_msg	;wreg free
  3603  0017E8  0012               	return	
  3604  0017EA                     __end_of_ToMainLow_recvmsg:
  3605                           	opt stack 0
  3606                           tblptru	equ	0xFF8
  3607                           prodh	equ	0xFF4
  3608                           prodl	equ	0xFF3
  3609                           intcon	equ	0xFF2
  3610                           postinc0	equ	0xFEE
  3611                           wreg	equ	0xFE8
  3612                           indf1	equ	0xFE7
  3613                           fsr1h	equ	0xFE2
  3614                           fsr1l	equ	0xFE1
  3615                           indf2	equ	0xFDF
  3616                           postinc2	equ	0xFDE
  3617                           postdec2	equ	0xFDD
  3618                           fsr2h	equ	0xFDA
  3619                           fsr2l	equ	0xFD9
  3620                           status	equ	0xFD8
  3621                           
  3622 ;; *************** function _ToMainHigh_recvmsg *****************
  3623 ;; Defined at:
  3624 ;;		line 135 in file "../src/messages.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  maxlength       1    wreg     unsigned char 
  3627 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3628 ;;		 -> main@msgtype(1), 
  3629 ;;  data            2   14[BANK1 ] PTR void 
  3630 ;;		 -> main@msgbuffer(11), 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  maxlength       1   16[BANK1 ] unsigned char 
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      char 
  3635 ;; Registers used:
  3636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3642 ;;      Params:         0       0       4       0       0
  3643 ;;      Locals:         0       0       1       0       0
  3644 ;;      Temps:          0       0       0       0       0
  3645 ;;      Totals:         0       0       5       0       0
  3646 ;;Total ram usage:        5 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:   12
  3649 ;; This function calls:
  3650 ;;		_recv_msg
  3651 ;; This function is called by:
  3652 ;;		_main
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text22
  3657  0017EA                     __ptext22:
  3658                           	opt stack 0
  3659  0017EA                     _ToMainHigh_recvmsg:
  3660                           	opt stack 18
  3661                           
  3662                           ;incstack = 0
  3663                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3664  0017EA  CFE8 F1B2          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3665                           
  3666                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3667  0017EE  0101               	movlb	1	; () banked
  3668  0017F0  0E01               	movlw	high _ToMainHigh_MQ
  3669  0017F2  0101               	movlb	1	; () banked
  3670  0017F4  0101               	movlb	1	; () banked
  3671  0017F6  6FA3               	movwf	(recv_msg@qptr+1)& (0+255),b
  3672  0017F8  0101               	movlb	1	; () banked
  3673  0017FA  0E6C               	movlw	low _ToMainHigh_MQ
  3674  0017FC  0101               	movlb	1	; () banked
  3675  0017FE  0101               	movlb	1	; () banked
  3676  001800  6FA2               	movwf	recv_msg@qptr& (0+255),b
  3677  001802  C1B2  F1A4         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3678  001806  0101               	movlb	1	; () banked
  3679  001808  0101               	movlb	1	; () banked
  3680  00180A  C1AF  F1A6         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3681  00180E  0101               	movlb	1	; () banked
  3682  001810  0101               	movlb	1	; () banked
  3683  001812  C1AE  F1A5         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3684  001816  0101               	movlb	1	; () banked
  3685  001818  0101               	movlb	1	; () banked
  3686  00181A  C1B1  F1A8         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3687  00181E  0101               	movlb	1	; () banked
  3688  001820  0101               	movlb	1	; () banked
  3689  001822  C1B0  F1A7         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3690  001826  EC25  F005         	call	_recv_msg	;wreg free
  3691  00182A  0012               	return	
  3692  00182C                     __end_of_ToMainHigh_recvmsg:
  3693                           	opt stack 0
  3694                           tblptru	equ	0xFF8
  3695                           prodh	equ	0xFF4
  3696                           prodl	equ	0xFF3
  3697                           intcon	equ	0xFF2
  3698                           postinc0	equ	0xFEE
  3699                           wreg	equ	0xFE8
  3700                           indf1	equ	0xFE7
  3701                           fsr1h	equ	0xFE2
  3702                           fsr1l	equ	0xFE1
  3703                           indf2	equ	0xFDF
  3704                           postinc2	equ	0xFDE
  3705                           postdec2	equ	0xFDD
  3706                           fsr2h	equ	0xFDA
  3707                           fsr2l	equ	0xFD9
  3708                           status	equ	0xFD8
  3709                           
  3710 ;; *************** function _recv_msg *****************
  3711 ;; Defined at:
  3712 ;;		line 63 in file "../src/messages.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3715 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3716 ;;  maxlength       1    2[BANK1 ] unsigned char 
  3717 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  3718 ;;		 -> main@msgtype(1), 
  3719 ;;  data            2    5[BANK1 ] PTR void 
  3720 ;;		 -> main@msgbuffer(11), 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  3723 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3724 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3725 ;;  tlength         2    8[BANK1 ] unsigned int 
  3726 ;;  slot            1    7[BANK1 ] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      char 
  3729 ;; Registers used:
  3730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3736 ;;      Params:         0       0       7       0       0
  3737 ;;      Locals:         0       0       5       0       0
  3738 ;;      Temps:          0       2       0       0       0
  3739 ;;      Totals:         0       2      12       0       0
  3740 ;;Total ram usage:       14 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:   11
  3743 ;; This function calls:
  3744 ;;		_memcpy
  3745 ;; This function is called by:
  3746 ;;		_ToMainLow_recvmsg
  3747 ;;		_ToMainHigh_recvmsg
  3748 ;;		_FromMainLow_recvmsg
  3749 ;;		_FromMainHigh_recvmsg
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	text23
  3754  000A4A                     __ptext23:
  3755                           	opt stack 0
  3756  000A4A                     _recv_msg:
  3757                           	opt stack 18
  3758                           
  3759                           ;messages.c: 64: unsigned char slot;
  3760                           ;messages.c: 68: msg *qmsg;
  3761                           ;messages.c: 69: size_t tlength;
  3762                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3763                           
  3764                           ;incstack = 0
  3765  000A4A  0101               	movlb	1	; () banked
  3766  000A4C  EE20 F035          	lfsr	2,53
  3767  000A50  0101               	movlb	1	; () banked
  3768  000A52  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3769  000A54  26D9               	addwf	fsr2l,f,c
  3770  000A56  0101               	movlb	1	; () banked
  3771  000A58  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3772  000A5A  22DA               	addwfc	fsr2h,f,c
  3773  000A5C  50DF               	movf	indf2,w,c
  3774  000A5E  0101               	movlb	1	; () banked
  3775  000A60  0101               	movlb	1	; () banked
  3776  000A62  6FA9               	movwf	recv_msg@slot& (0+255),b
  3777                           
  3778                           ; BSR set to: 1
  3779                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3780  000A64  0101               	movlb	1	; () banked
  3781  000A66  0101               	movlb	1	; () banked
  3782  000A68  51A9               	movf	recv_msg@slot& (0+255),w,b
  3783  000A6A  0D0D               	mullw	13
  3784  000A6C  50F3               	movf	prodl,w,c
  3785  000A6E  0101               	movlb	1	; () banked
  3786  000A70  0101               	movlb	1	; () banked
  3787  000A72  25A2               	addwf	recv_msg@qptr& (0+255),w,b
  3788  000A74  0101               	movlb	1	; () banked
  3789  000A76  0101               	movlb	1	; () banked
  3790  000A78  6FAC               	movwf	recv_msg@qmsg& (0+255),b
  3791  000A7A  50F4               	movf	prodh,w,c
  3792  000A7C  0101               	movlb	1	; () banked
  3793  000A7E  0101               	movlb	1	; () banked
  3794  000A80  21A3               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3795  000A82  0101               	movlb	1	; () banked
  3796  000A84  6FAD               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3797                           
  3798                           ; BSR set to: 1
  3799                           ;messages.c: 74: if (qmsg->full == 1) {
  3800  000A86  0E01               	movlw	1
  3801  000A88  C1AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  3802  000A8C  C1AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3803  000A90  62DF               	cpfseq	indf2,c
  3804  000A92  D074               	goto	l3247
  3805                           
  3806                           ; BSR set to: 1
  3807                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3808  000A94  0101               	movlb	1	; () banked
  3809  000A96  EE20 F001          	lfsr	2,1
  3810  000A9A  0101               	movlb	1	; () banked
  3811  000A9C  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  3812  000A9E  26D9               	addwf	fsr2l,f,c
  3813  000AA0  0101               	movlb	1	; () banked
  3814  000AA2  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3815  000AA4  22DA               	addwfc	fsr2h,f,c
  3816  000AA6  50DF               	movf	indf2,w,c
  3817  000AA8  0101               	movlb	1	; () banked
  3818  000AAA  0101               	movlb	1	; () banked
  3819  000AAC  5DA4               	subwf	recv_msg@maxlength& (0+255),w,b
  3820  000AAE  B0D8               	btfsc	status,0,c
  3821  000AB0  D002               	goto	l3231
  3822                           
  3823                           ; BSR set to: 1
  3824                           ;messages.c: 77: return (-3);
  3825  000AB2  0EFD               	movlw	253
  3826  000AB4  0012               	return	
  3827  000AB6                     l3231:
  3828                           
  3829                           ; BSR set to: 1
  3830                           ;messages.c: 78: }
  3831                           ;messages.c: 80: tlength = qmsg->length;
  3832  000AB6  0101               	movlb	1	; () banked
  3833  000AB8  EE20 F001          	lfsr	2,1
  3834  000ABC  0101               	movlb	1	; () banked
  3835  000ABE  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  3836  000AC0  26D9               	addwf	fsr2l,f,c
  3837  000AC2  0101               	movlb	1	; () banked
  3838  000AC4  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3839  000AC6  22DA               	addwfc	fsr2h,f,c
  3840  000AC8  50DF               	movf	indf2,w,c
  3841  000ACA  0100               	movlb	0	; () banked
  3842  000ACC  6FDE               	movwf	??_recv_msg& (0+255),b
  3843  000ACE  0100               	movlb	0	; () banked
  3844  000AD0  51DE               	movf	??_recv_msg& (0+255),w,b
  3845  000AD2  0101               	movlb	1	; () banked
  3846  000AD4  0101               	movlb	1	; () banked
  3847  000AD6  6FAA               	movwf	recv_msg@tlength& (0+255),b
  3848  000AD8  0101               	movlb	1	; () banked
  3849  000ADA  6BAB               	clrf	(recv_msg@tlength+1)& (0+255),b
  3850                           
  3851                           ; BSR set to: 1
  3852                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3853  000ADC  0101               	movlb	1	; () banked
  3854  000ADE  0100               	movlb	0	; () banked
  3855  000AE0  C1A8  F0D5         	movff	recv_msg@data+1,memcpy@d1+1
  3856  000AE4  0101               	movlb	1	; () banked
  3857  000AE6  0100               	movlb	0	; () banked
  3858  000AE8  C1A7  F0D4         	movff	recv_msg@data,memcpy@d1
  3859  000AEC  0E03               	movlw	3
  3860  000AEE  0101               	movlb	1	; () banked
  3861  000AF0  0101               	movlb	1	; () banked
  3862  000AF2  25AC               	addwf	recv_msg@qmsg& (0+255),w,b
  3863  000AF4  0100               	movlb	0	; () banked
  3864  000AF6  6FDE               	movwf	??_recv_msg& (0+255),b
  3865  000AF8  0E00               	movlw	0
  3866  000AFA  0101               	movlb	1	; () banked
  3867  000AFC  0101               	movlb	1	; () banked
  3868  000AFE  21AD               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3869  000B00  0100               	movlb	0	; () banked
  3870  000B02  6FDF               	movwf	(??_recv_msg+1)& (0+255),b
  3871  000B04  C0DE  F0D6         	movff	??_recv_msg,memcpy@s1
  3872  000B08  C0DF  F0D7         	movff	??_recv_msg+1,memcpy@s1+1
  3873  000B0C  C1AA  F0D8         	movff	recv_msg@tlength,memcpy@n
  3874  000B10  C1AB  F0D9         	movff	recv_msg@tlength+1,memcpy@n+1
  3875  000B14  EC39  F00B         	call	_memcpy	;wreg free
  3876                           
  3877                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3878  000B18  0101               	movlb	1	; () banked
  3879  000B1A  EE20 F035          	lfsr	2,53
  3880  000B1E  0101               	movlb	1	; () banked
  3881  000B20  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3882  000B22  26D9               	addwf	fsr2l,f,c
  3883  000B24  0101               	movlb	1	; () banked
  3884  000B26  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3885  000B28  22DA               	addwfc	fsr2h,f,c
  3886  000B2A  0101               	movlb	1	; () banked
  3887  000B2C  EE10 F035          	lfsr	1,53
  3888  000B30  0101               	movlb	1	; () banked
  3889  000B32  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3890  000B34  26E1               	addwf	fsr1l,f,c
  3891  000B36  0101               	movlb	1	; () banked
  3892  000B38  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3893  000B3A  22E2               	addwfc	fsr1h,f,c
  3894  000B3C  50E7               	movf	indf1,w,c
  3895  000B3E  0100               	movlb	0	; () banked
  3896  000B40  6FDE               	movwf	??_recv_msg& (0+255),b
  3897  000B42  0100               	movlb	0	; () banked
  3898  000B44  29DE               	incf	??_recv_msg& (0+255),w,b
  3899  000B46  0B03               	andlw	3
  3900  000B48  6EDF               	movwf	indf2,c
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3904  000B4A  0101               	movlb	1	; () banked
  3905  000B4C  EE20 F002          	lfsr	2,2
  3906  000B50  0101               	movlb	1	; () banked
  3907  000B52  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  3908  000B54  26D9               	addwf	fsr2l,f,c
  3909  000B56  0101               	movlb	1	; () banked
  3910  000B58  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3911  000B5A  22DA               	addwfc	fsr2h,f,c
  3912  000B5C  C1A5  FFE1         	movff	recv_msg@msgtype,fsr1l
  3913  000B60  C1A6  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3914  000B64  CFDF FFE7          	movff	indf2,indf1
  3915                           
  3916                           ; BSR set to: 1
  3917                           ;messages.c: 91: qmsg->full = 0;
  3918  000B68  C1AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  3919  000B6C  C1AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3920  000B70  0E00               	movlw	0
  3921  000B72  6EDF               	movwf	indf2,c
  3922                           
  3923                           ; BSR set to: 1
  3924                           ;messages.c: 92: return (tlength);
  3925  000B74  0101               	movlb	1	; () banked
  3926  000B76  0101               	movlb	1	; () banked
  3927  000B78  51AA               	movf	recv_msg@tlength& (0+255),w,b
  3928  000B7A  0012               	return	
  3929  000B7C                     l3247:
  3930                           
  3931                           ; BSR set to: 1
  3932                           ;messages.c: 94: return (-4);
  3933  000B7C  0EFC               	movlw	252
  3934  000B7E  0012               	return	
  3935  000B80                     __end_of_recv_msg:
  3936                           	opt stack 0
  3937                           tblptru	equ	0xFF8
  3938                           prodh	equ	0xFF4
  3939                           prodl	equ	0xFF3
  3940                           intcon	equ	0xFF2
  3941                           postinc0	equ	0xFEE
  3942                           wreg	equ	0xFE8
  3943                           indf1	equ	0xFE7
  3944                           fsr1h	equ	0xFE2
  3945                           fsr1l	equ	0xFE1
  3946                           indf2	equ	0xFDF
  3947                           postinc2	equ	0xFDE
  3948                           postdec2	equ	0xFDD
  3949                           fsr2h	equ	0xFDA
  3950                           fsr2l	equ	0xFD9
  3951                           status	equ	0xFD8
  3952                           
  3953 ;; *************** function _memcpy *****************
  3954 ;; Defined at:
  3955 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;  d1              2   30[BANK0 ] PTR void 
  3958 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3959 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3960 ;;		 -> main@msgbuffer(11), 
  3961 ;;  s1              2   32[BANK0 ] PTR const void 
  3962 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3963 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3964 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  3965 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(28), 
  3966 ;;		 -> main@uc(5), 
  3967 ;;  n               2   34[BANK0 ] unsigned int 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  3970 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3971 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3972 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  3973 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(28), 
  3974 ;;		 -> main@uc(5), 
  3975 ;;  d               2   36[BANK0 ] PTR unsigned char 
  3976 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3977 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3978 ;;		 -> main@msgbuffer(11), 
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  2   30[BANK0 ] PTR void 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3988 ;;      Params:         0       6       0       0       0
  3989 ;;      Locals:         0       4       0       0       0
  3990 ;;      Temps:          0       0       0       0       0
  3991 ;;      Totals:         0      10       0       0       0
  3992 ;;Total ram usage:       10 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:   10
  3995 ;; This function calls:
  3996 ;;		Nothing
  3997 ;; This function is called by:
  3998 ;;		_send_msg
  3999 ;;		_recv_msg
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text24
  4004  001672                     __ptext24:
  4005                           	opt stack 0
  4006  001672                     _memcpy:
  4007                           	opt stack 17
  4008                           
  4009                           ; BSR set to: 1
  4010                           ;incstack = 0
  4011  001672  0100               	movlb	0	; () banked
  4012  001674  0100               	movlb	0	; () banked
  4013  001676  C0D7  F0DD         	movff	memcpy@s1+1,memcpy@s+1
  4014  00167A  0100               	movlb	0	; () banked
  4015  00167C  0100               	movlb	0	; () banked
  4016  00167E  C0D6  F0DC         	movff	memcpy@s1,memcpy@s
  4017  001682  0100               	movlb	0	; () banked
  4018  001684  0100               	movlb	0	; () banked
  4019  001686  C0D5  F0DB         	movff	memcpy@d1+1,memcpy@d+1
  4020  00168A  0100               	movlb	0	; () banked
  4021  00168C  0100               	movlb	0	; () banked
  4022  00168E  C0D4  F0DA         	movff	memcpy@d1,memcpy@d
  4023  001692  D012               	goto	l3217
  4024  001694                     l3211:
  4025                           
  4026                           ; BSR set to: 0
  4027  001694  C0DC  FFD9         	movff	memcpy@s,fsr2l
  4028  001698  C0DD  FFDA         	movff	memcpy@s+1,fsr2h
  4029  00169C  C0DA  FFE1         	movff	memcpy@d,fsr1l
  4030  0016A0  C0DB  FFE2         	movff	memcpy@d+1,fsr1h
  4031  0016A4  CFDF FFE7          	movff	indf2,indf1
  4032                           
  4033                           ; BSR set to: 0
  4034  0016A8  0100               	movlb	0	; () banked
  4035  0016AA  0100               	movlb	0	; () banked
  4036  0016AC  4BDC               	infsnz	memcpy@s& (0+255),f,b
  4037  0016AE  2BDD               	incf	(memcpy@s+1)& (0+255),f,b
  4038                           
  4039                           ; BSR set to: 0
  4040  0016B0  0100               	movlb	0	; () banked
  4041  0016B2  0100               	movlb	0	; () banked
  4042  0016B4  4BDA               	infsnz	memcpy@d& (0+255),f,b
  4043  0016B6  2BDB               	incf	(memcpy@d+1)& (0+255),f,b
  4044  0016B8                     l3217:
  4045                           
  4046                           ; BSR set to: 0
  4047  0016B8  0100               	movlb	0	; () banked
  4048  0016BA  0100               	movlb	0	; () banked
  4049  0016BC  07D8               	decf	memcpy@n& (0+255),f,b
  4050  0016BE  A0D8               	btfss	status,0,c
  4051  0016C0  07D9               	decf	(memcpy@n+1)& (0+255),f,b
  4052  0016C2  0100               	movlb	0	; () banked
  4053  0016C4  29D8               	incf	memcpy@n& (0+255),w,b
  4054  0016C6  B4D8               	btfsc	status,2,c
  4055  0016C8  29D9               	incf	(memcpy@n+1)& (0+255),w,b
  4056  0016CA  B4D8               	btfsc	status,2,c
  4057                           
  4058                           ; BSR set to: 0
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;	Return value of _memcpy is never used
  4062  0016CC  0012               	return	
  4063  0016CE  D7E2               	goto	l3211
  4064  0016D0                     __end_of_memcpy:
  4065                           	opt stack 0
  4066                           tblptru	equ	0xFF8
  4067                           prodh	equ	0xFF4
  4068                           prodl	equ	0xFF3
  4069                           intcon	equ	0xFF2
  4070                           postinc0	equ	0xFEE
  4071                           wreg	equ	0xFE8
  4072                           indf1	equ	0xFE7
  4073                           fsr1h	equ	0xFE2
  4074                           fsr1l	equ	0xFE1
  4075                           indf2	equ	0xFDF
  4076                           postinc2	equ	0xFDE
  4077                           postdec2	equ	0xFDD
  4078                           fsr2h	equ	0xFDA
  4079                           fsr2l	equ	0xFD9
  4080                           status	equ	0xFD8
  4081                           
  4082 ;; *************** function _SetChanADC *****************
  4083 ;; Defined at:
  4084 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  channel         1    wreg     unsigned char 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;  channel         1   31[BANK0 ] unsigned char 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;		None               void
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4098 ;;      Params:         0       0       0       0       0
  4099 ;;      Locals:         0       1       0       0       0
  4100 ;;      Temps:          0       1       0       0       0
  4101 ;;      Totals:         0       2       0       0       0
  4102 ;;Total ram usage:        2 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:   10
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text25
  4113  001AAC                     __ptext25:
  4114                           	opt stack 0
  4115  001AAC                     _SetChanADC:
  4116                           	opt stack 20
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;incstack = 0
  4120                           ;SetChanADC@channel stored from wreg
  4121  001AAC  CFE8 F0D5          	movff	wreg,SetChanADC@channel
  4122  001AB0  CFC2 F0D4          	movff	4034,??_SetChanADC	;volatile
  4123  001AB4  0EC3               	movlw	195
  4124  001AB6  0100               	movlb	0	; () banked
  4125  001AB8  17D4               	andwf	??_SetChanADC& (0+255),f,b
  4126  001ABA  0100               	movlb	0	; () banked
  4127  001ABC  0100               	movlb	0	; () banked
  4128  001ABE  90D8               	bcf	status,0,c
  4129  001AC0  31D5               	rrcf	SetChanADC@channel& (0+255),w,b
  4130  001AC2  0B3C               	andlw	60
  4131  001AC4  0100               	movlb	0	; () banked
  4132  001AC6  11D4               	iorwf	??_SetChanADC& (0+255),w,b
  4133  001AC8  6EC2               	movwf	4034,c	;volatile
  4134                           
  4135                           ; BSR set to: 0
  4136  001ACA  0012               	return	
  4137  001ACC                     __end_of_SetChanADC:
  4138                           	opt stack 0
  4139                           tblptru	equ	0xFF8
  4140                           prodh	equ	0xFF4
  4141                           prodl	equ	0xFF3
  4142                           intcon	equ	0xFF2
  4143                           postinc0	equ	0xFEE
  4144                           wreg	equ	0xFE8
  4145                           indf1	equ	0xFE7
  4146                           fsr1h	equ	0xFE2
  4147                           fsr1l	equ	0xFE1
  4148                           indf2	equ	0xFDF
  4149                           postinc2	equ	0xFDE
  4150                           postdec2	equ	0xFDD
  4151                           fsr2h	equ	0xFDA
  4152                           fsr2l	equ	0xFD9
  4153                           status	equ	0xFD8
  4154                           
  4155 ;; *************** function _OpenUSART *****************
  4156 ;; Defined at:
  4157 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  config          1    wreg     unsigned char 
  4160 ;;  spbrg           2   30[BANK0 ] unsigned int 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  config          1   35[BANK0 ] unsigned char 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;		None               void
  4165 ;; Registers used:
  4166 ;;		wreg, status,2
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4172 ;;      Params:         0       2       0       0       0
  4173 ;;      Locals:         0       1       0       0       0
  4174 ;;      Temps:          0       3       0       0       0
  4175 ;;      Totals:         0       6       0       0       0
  4176 ;;Total ram usage:        6 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:   10
  4179 ;; This function calls:
  4180 ;;		Nothing
  4181 ;; This function is called by:
  4182 ;;		_main
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text26
  4187  001290                     __ptext26:
  4188                           	opt stack 0
  4189  001290                     _OpenUSART:
  4190                           	opt stack 20
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;incstack = 0
  4194                           ;OpenUSART@config stored from wreg
  4195  001290  CFE8 F0D9          	movff	wreg,OpenUSART@config
  4196  001294  0E00               	movlw	0
  4197  001296  6EAC               	movwf	4012,c	;volatile
  4198  001298  0E00               	movlw	0
  4199  00129A  6EAB               	movwf	4011,c	;volatile
  4200  00129C  0100               	movlb	0	; () banked
  4201  00129E  0100               	movlb	0	; () banked
  4202  0012A0  B1D9               	btfsc	OpenUSART@config& (0+255),0,b
  4203                           
  4204                           ; BSR set to: 0
  4205  0012A2  88AC               	bsf	4012,4,c	;volatile
  4206                           
  4207                           ; BSR set to: 0
  4208                           
  4209                           ; BSR set to: 0
  4210  0012A4  0100               	movlb	0	; () banked
  4211  0012A6  0100               	movlb	0	; () banked
  4212  0012A8  A3D9               	btfss	OpenUSART@config& (0+255),1,b
  4213  0012AA  D002               	goto	l2495
  4214                           
  4215                           ; BSR set to: 0
  4216  0012AC  8CAC               	bsf	4012,6,c	;volatile
  4217  0012AE  8CAB               	bsf	4011,6,c	;volatile
  4218  0012B0                     l2495:
  4219                           
  4220                           ; BSR set to: 0
  4221  0012B0  0100               	movlb	0	; () banked
  4222  0012B2  0100               	movlb	0	; () banked
  4223  0012B4  B5D9               	btfsc	OpenUSART@config& (0+255),2,b
  4224                           
  4225                           ; BSR set to: 0
  4226  0012B6  8EAC               	bsf	4012,7,c	;volatile
  4227                           
  4228                           ; BSR set to: 0
  4229                           
  4230                           ; BSR set to: 0
  4231  0012B8  0100               	movlb	0	; () banked
  4232  0012BA  0100               	movlb	0	; () banked
  4233  0012BC  A7D9               	btfss	OpenUSART@config& (0+255),3,b
  4234  0012BE  D002               	goto	l500
  4235                           
  4236                           ; BSR set to: 0
  4237  0012C0  88AB               	bsf	4011,4,c	;volatile
  4238  0012C2  D001               	goto	l2503
  4239  0012C4                     l500:
  4240                           
  4241                           ; BSR set to: 0
  4242  0012C4  8AAB               	bsf	4011,5,c	;volatile
  4243  0012C6                     l2503:
  4244                           
  4245                           ; BSR set to: 0
  4246  0012C6  0100               	movlb	0	; () banked
  4247  0012C8  0100               	movlb	0	; () banked
  4248  0012CA  B9D9               	btfsc	OpenUSART@config& (0+255),4,b
  4249                           
  4250                           ; BSR set to: 0
  4251  0012CC  84AC               	bsf	4012,2,c	;volatile
  4252                           
  4253                           ; BSR set to: 0
  4254  0012CE  989E               	bcf	3998,4,c	;volatile
  4255                           
  4256                           ; BSR set to: 0
  4257  0012D0  0100               	movlb	0	; () banked
  4258  0012D2  0100               	movlb	0	; () banked
  4259  0012D4  BBD9               	btfsc	OpenUSART@config& (0+255),5,b
  4260                           
  4261                           ; BSR set to: 0
  4262  0012D6  86AB               	bsf	4011,3,c	;volatile
  4263                           
  4264                           ; BSR set to: 0
  4265                           
  4266                           ; BSR set to: 0
  4267  0012D8  0100               	movlb	0	; () banked
  4268  0012DA  0100               	movlb	0	; () banked
  4269  0012DC  ADD9               	btfss	OpenUSART@config& (0+255),6,b
  4270  0012DE  D002               	goto	l504
  4271                           
  4272                           ; BSR set to: 0
  4273  0012E0  8A9D               	bsf	3997,5,c	;volatile
  4274  0012E2  D001               	goto	l505
  4275  0012E4                     l504:
  4276                           
  4277                           ; BSR set to: 0
  4278  0012E4  9A9D               	bcf	3997,5,c	;volatile
  4279  0012E6                     l505:
  4280                           
  4281                           ; BSR set to: 0
  4282  0012E6  9A9E               	bcf	3998,5,c	;volatile
  4283                           
  4284                           ; BSR set to: 0
  4285  0012E8  0100               	movlb	0	; () banked
  4286  0012EA  0100               	movlb	0	; () banked
  4287  0012EC  AFD9               	btfss	OpenUSART@config& (0+255),7,b
  4288  0012EE  D002               	goto	l506
  4289                           
  4290                           ; BSR set to: 0
  4291  0012F0  889D               	bsf	3997,4,c	;volatile
  4292  0012F2  D001               	goto	l507
  4293  0012F4                     l506:
  4294                           
  4295                           ; BSR set to: 0
  4296  0012F4  989D               	bcf	3997,4,c	;volatile
  4297  0012F6                     l507:
  4298                           
  4299                           ; BSR set to: 0
  4300  0012F6  C0D4  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4301                           
  4302                           ; BSR set to: 0
  4303  0012FA  0100               	movlb	0	; () banked
  4304  0012FC  C0D5  F0D6         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4305  001300  C0D6  F0D7         	movff	??_OpenUSART,??_OpenUSART+1
  4306  001304  0100               	movlb	0	; () banked
  4307  001306  6BD8               	clrf	(??_OpenUSART+2)& (0+255),b
  4308  001308  0100               	movlb	0	; () banked
  4309  00130A  51D7               	movf	(??_OpenUSART+1)& (0+255),w,b
  4310  00130C  6EB0               	movwf	4016,c	;volatile
  4311                           
  4312                           ; BSR set to: 0
  4313  00130E  8AAC               	bsf	4012,5,c	;volatile
  4314                           
  4315                           ; BSR set to: 0
  4316  001310  8EAB               	bsf	4011,7,c	;volatile
  4317                           
  4318                           ; BSR set to: 0
  4319  001312  9C94               	bcf	3988,6,c	;volatile
  4320                           
  4321                           ; BSR set to: 0
  4322  001314  8E94               	bsf	3988,7,c	;volatile
  4323                           
  4324                           ; BSR set to: 0
  4325  001316  A8AC               	btfss	4012,4,c	;volatile
  4326  001318  0012               	return	
  4327                           
  4328                           ; BSR set to: 0
  4329  00131A  BEAC               	btfsc	4012,7,c	;volatile
  4330  00131C  0012               	return	
  4331                           
  4332                           ; BSR set to: 0
  4333  00131E  8C94               	bsf	3988,6,c	;volatile
  4334  001320  0012               	return	
  4335  001322                     __end_of_OpenUSART:
  4336                           	opt stack 0
  4337                           tblptru	equ	0xFF8
  4338                           prodh	equ	0xFF4
  4339                           prodl	equ	0xFF3
  4340                           intcon	equ	0xFF2
  4341                           postinc0	equ	0xFEE
  4342                           wreg	equ	0xFE8
  4343                           indf1	equ	0xFE7
  4344                           fsr1h	equ	0xFE2
  4345                           fsr1l	equ	0xFE1
  4346                           indf2	equ	0xFDF
  4347                           postinc2	equ	0xFDE
  4348                           postdec2	equ	0xFDD
  4349                           fsr2h	equ	0xFDA
  4350                           fsr2l	equ	0xFD9
  4351                           status	equ	0xFD8
  4352                           
  4353 ;; *************** function _OpenTimer1 *****************
  4354 ;; Defined at:
  4355 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  config          1    wreg     unsigned char 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  config          1   30[BANK0 ] unsigned char 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;		None               void
  4362 ;; Registers used:
  4363 ;;		wreg, status,2, status,0
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4369 ;;      Params:         0       0       0       0       0
  4370 ;;      Locals:         0       1       0       0       0
  4371 ;;      Temps:          0       0       0       0       0
  4372 ;;      Totals:         0       1       0       0       0
  4373 ;;Total ram usage:        1 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:   10
  4376 ;; This function calls:
  4377 ;;		Nothing
  4378 ;; This function is called by:
  4379 ;;		_main
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text27
  4384  0018EA                     __ptext27:
  4385                           	opt stack 0
  4386  0018EA                     _OpenTimer1:
  4387                           	opt stack 20
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;incstack = 0
  4391                           ;OpenTimer1@config stored from wreg
  4392  0018EA  CFE8 F0D4          	movff	wreg,OpenTimer1@config
  4393  0018EE  0100               	movlb	0	; () banked
  4394  0018F0  0100               	movlb	0	; () banked
  4395  0018F2  51D4               	movf	OpenTimer1@config& (0+255),w,b
  4396  0018F4  0B7E               	andlw	126
  4397  0018F6  6ECD               	movwf	4045,c	;volatile
  4398                           
  4399                           ; BSR set to: 0
  4400  0018F8  0100               	movlb	0	; () banked
  4401  0018FA  0100               	movlb	0	; () banked
  4402  0018FC  ADD4               	btfss	OpenTimer1@config& (0+255),6,b
  4403  0018FE  D002               	goto	l463
  4404                           
  4405                           ; BSR set to: 0
  4406  001900  8ECD               	bsf	4045,7,c	;volatile
  4407  001902  D001               	goto	l2455
  4408  001904                     l463:
  4409                           
  4410                           ; BSR set to: 0
  4411  001904  9ECD               	bcf	4045,7,c	;volatile
  4412  001906                     l2455:
  4413                           
  4414                           ; BSR set to: 0
  4415  001906  0E00               	movlw	0
  4416  001908  6ECF               	movwf	4047,c	;volatile
  4417  00190A  0E00               	movlw	0
  4418  00190C  6ECE               	movwf	4046,c	;volatile
  4419                           
  4420                           ; BSR set to: 0
  4421  00190E  909E               	bcf	3998,0,c	;volatile
  4422                           
  4423                           ; BSR set to: 0
  4424  001910  0100               	movlb	0	; () banked
  4425  001912  0100               	movlb	0	; () banked
  4426  001914  AFD4               	btfss	OpenTimer1@config& (0+255),7,b
  4427  001916  D002               	goto	l465
  4428                           
  4429                           ; BSR set to: 0
  4430  001918  809D               	bsf	3997,0,c	;volatile
  4431  00191A  D001               	goto	l466
  4432  00191C                     l465:
  4433                           
  4434                           ; BSR set to: 0
  4435  00191C  909D               	bcf	3997,0,c	;volatile
  4436  00191E                     l466:
  4437                           
  4438                           ; BSR set to: 0
  4439  00191E  80CD               	bsf	4045,0,c	;volatile
  4440                           
  4441                           ; BSR set to: 0
  4442  001920  0012               	return	
  4443  001922                     __end_of_OpenTimer1:
  4444                           	opt stack 0
  4445                           tblptru	equ	0xFF8
  4446                           prodh	equ	0xFF4
  4447                           prodl	equ	0xFF3
  4448                           intcon	equ	0xFF2
  4449                           postinc0	equ	0xFEE
  4450                           wreg	equ	0xFE8
  4451                           indf1	equ	0xFE7
  4452                           fsr1h	equ	0xFE2
  4453                           fsr1l	equ	0xFE1
  4454                           indf2	equ	0xFDF
  4455                           postinc2	equ	0xFDE
  4456                           postdec2	equ	0xFDD
  4457                           fsr2h	equ	0xFDA
  4458                           fsr2l	equ	0xFD9
  4459                           status	equ	0xFD8
  4460                           
  4461 ;; *************** function _OpenTimer0 *****************
  4462 ;; Defined at:
  4463 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  config          1    wreg     unsigned char 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  config          1   30[BANK0 ] unsigned char 
  4468 ;; Return value:  Size  Location     Type
  4469 ;;		None               void
  4470 ;; Registers used:
  4471 ;;		wreg, status,2, status,0
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4477 ;;      Params:         0       0       0       0       0
  4478 ;;      Locals:         0       1       0       0       0
  4479 ;;      Temps:          0       0       0       0       0
  4480 ;;      Totals:         0       1       0       0       0
  4481 ;;Total ram usage:        1 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; Hardware stack levels required when called:   10
  4484 ;; This function calls:
  4485 ;;		Nothing
  4486 ;; This function is called by:
  4487 ;;		_main
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           	psect	text28
  4492  0019EA                     __ptext28:
  4493                           	opt stack 0
  4494  0019EA                     _OpenTimer0:
  4495                           	opt stack 20
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;incstack = 0
  4499                           ;OpenTimer0@config stored from wreg
  4500  0019EA  CFE8 F0D4          	movff	wreg,OpenTimer0@config
  4501  0019EE  0100               	movlb	0	; () banked
  4502  0019F0  0100               	movlb	0	; () banked
  4503  0019F2  51D4               	movf	OpenTimer0@config& (0+255),w,b
  4504  0019F4  0B7F               	andlw	127
  4505  0019F6  6ED5               	movwf	4053,c	;volatile
  4506                           
  4507                           ; BSR set to: 0
  4508  0019F8  0E00               	movlw	0
  4509  0019FA  6ED7               	movwf	4055,c	;volatile
  4510                           
  4511                           ; BSR set to: 0
  4512  0019FC  0E00               	movlw	0
  4513  0019FE  6ED6               	movwf	4054,c	;volatile
  4514                           
  4515                           ; BSR set to: 0
  4516  001A00  94F2               	bcf	intcon,2,c	;volatile
  4517                           
  4518                           ; BSR set to: 0
  4519  001A02  0100               	movlb	0	; () banked
  4520  001A04  0100               	movlb	0	; () banked
  4521  001A06  AFD4               	btfss	OpenTimer0@config& (0+255),7,b
  4522  001A08  D002               	goto	l439
  4523                           
  4524                           ; BSR set to: 0
  4525  001A0A  8AF2               	bsf	intcon,5,c	;volatile
  4526  001A0C  D001               	goto	l440
  4527  001A0E                     l439:
  4528                           
  4529                           ; BSR set to: 0
  4530  001A0E  9AF2               	bcf	intcon,5,c	;volatile
  4531  001A10                     l440:
  4532                           
  4533                           ; BSR set to: 0
  4534  001A10  8ED5               	bsf	4053,7,c	;volatile
  4535                           
  4536                           ; BSR set to: 0
  4537  001A12  0012               	return	
  4538  001A14                     __end_of_OpenTimer0:
  4539                           	opt stack 0
  4540                           tblptru	equ	0xFF8
  4541                           prodh	equ	0xFF4
  4542                           prodl	equ	0xFF3
  4543                           intcon	equ	0xFF2
  4544                           postinc0	equ	0xFEE
  4545                           wreg	equ	0xFE8
  4546                           indf1	equ	0xFE7
  4547                           fsr1h	equ	0xFE2
  4548                           fsr1l	equ	0xFE1
  4549                           indf2	equ	0xFDF
  4550                           postinc2	equ	0xFDE
  4551                           postdec2	equ	0xFDD
  4552                           fsr2h	equ	0xFDA
  4553                           fsr2l	equ	0xFD9
  4554                           status	equ	0xFD8
  4555                           
  4556 ;; *************** function _OpenADC *****************
  4557 ;; Defined at:
  4558 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  config          1    wreg     unsigned char 
  4561 ;;  config2         1   30[BANK0 ] unsigned char 
  4562 ;;  portconfig      1   31[BANK0 ] unsigned char 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  config          1   34[BANK0 ] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;		None               void
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4574 ;;      Params:         0       2       0       0       0
  4575 ;;      Locals:         0       1       0       0       0
  4576 ;;      Temps:          0       2       0       0       0
  4577 ;;      Totals:         0       5       0       0       0
  4578 ;;Total ram usage:        5 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:   10
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		_main
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text29
  4589  0013AC                     __ptext29:
  4590                           	opt stack 0
  4591  0013AC                     _OpenADC:
  4592                           	opt stack 20
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;incstack = 0
  4596                           ;OpenADC@config stored from wreg
  4597  0013AC  CFE8 F0D8          	movff	wreg,OpenADC@config
  4598  0013B0  0E00               	movlw	0
  4599  0013B2  6EC2               	movwf	4034,c	;volatile
  4600  0013B4  0E00               	movlw	0
  4601  0013B6  6EC0               	movwf	4032,c	;volatile
  4602  0013B8  0100               	movlb	0	; () banked
  4603  0013BA  0100               	movlb	0	; () banked
  4604  0013BC  90D8               	bcf	status,0,c
  4605  0013BE  31D4               	rrcf	OpenADC@config2& (0+255),w,b
  4606  0013C0  0B3C               	andlw	60
  4607  0013C2  6EC2               	movwf	4034,c	;volatile
  4608                           
  4609                           ; BSR set to: 0
  4610  0013C4  C0D4  F0D6         	movff	OpenADC@config2,??_OpenADC
  4611  0013C8  0100               	movlb	0	; () banked
  4612  0013CA  3BD6               	swapf	??_OpenADC& (0+255),f,b
  4613  0013CC  0EF0               	movlw	240
  4614  0013CE  17D6               	andwf	??_OpenADC& (0+255),f,b
  4615  0013D0  0E30               	movlw	48
  4616  0013D2  0100               	movlb	0	; () banked
  4617  0013D4  17D6               	andwf	??_OpenADC& (0+255),f,b
  4618  0013D6  0100               	movlb	0	; () banked
  4619  0013D8  0100               	movlb	0	; () banked
  4620  0013DA  51D5               	movf	OpenADC@portconfig& (0+255),w,b
  4621  0013DC  0B0F               	andlw	15
  4622  0013DE  0100               	movlb	0	; () banked
  4623  0013E0  11D6               	iorwf	??_OpenADC& (0+255),w,b
  4624  0013E2  6EC1               	movwf	4033,c	;volatile
  4625                           
  4626                           ; BSR set to: 0
  4627  0013E4  C0D8  F0D6         	movff	OpenADC@config,??_OpenADC
  4628  0013E8  0100               	movlb	0	; () banked
  4629  0013EA  90D8               	bcf	status,0,c
  4630  0013EC  37D6               	rlcf	??_OpenADC& (0+255),f,b
  4631  0013EE  0100               	movlb	0	; () banked
  4632  0013F0  90D8               	bcf	status,0,c
  4633  0013F2  37D6               	rlcf	??_OpenADC& (0+255),f,b
  4634  0013F4  0E38               	movlw	56
  4635  0013F6  0100               	movlb	0	; () banked
  4636  0013F8  17D6               	andwf	??_OpenADC& (0+255),f,b
  4637  0013FA  C0D8  F0D7         	movff	OpenADC@config,??_OpenADC+1
  4638  0013FE  0100               	movlb	0	; () banked
  4639  001400  3BD7               	swapf	(??_OpenADC+1)& (0+255),f,b
  4640  001402  0E0F               	movlw	15
  4641  001404  17D7               	andwf	(??_OpenADC+1)& (0+255),f,b
  4642  001406  0E07               	movlw	7
  4643  001408  0100               	movlb	0	; () banked
  4644  00140A  17D7               	andwf	(??_OpenADC+1)& (0+255),f,b
  4645  00140C  0100               	movlb	0	; () banked
  4646  00140E  0100               	movlb	0	; () banked
  4647  001410  51D8               	movf	OpenADC@config& (0+255),w,b
  4648  001412  0B80               	andlw	128
  4649  001414  0100               	movlb	0	; () banked
  4650  001416  11D7               	iorwf	(??_OpenADC+1)& (0+255),w,b
  4651  001418  0100               	movlb	0	; () banked
  4652  00141A  11D6               	iorwf	??_OpenADC& (0+255),w,b
  4653  00141C  6EC0               	movwf	4032,c	;volatile
  4654                           
  4655                           ; BSR set to: 0
  4656  00141E  0100               	movlb	0	; () banked
  4657  001420  0100               	movlb	0	; () banked
  4658  001422  AFD4               	btfss	OpenADC@config2& (0+255),7,b
  4659  001424  D003               	goto	l420
  4660                           
  4661                           ; BSR set to: 0
  4662  001426  9C9E               	bcf	3998,6,c	;volatile
  4663  001428  8C9D               	bsf	3997,6,c	;volatile
  4664  00142A  8CF2               	bsf	intcon,6,c	;volatile
  4665  00142C                     l420:
  4666                           
  4667                           ; BSR set to: 0
  4668  00142C  80C2               	bsf	4034,0,c	;volatile
  4669                           
  4670                           ; BSR set to: 0
  4671  00142E  0012               	return	
  4672  001430                     __end_of_OpenADC:
  4673                           	opt stack 0
  4674                           tblptru	equ	0xFF8
  4675                           prodh	equ	0xFF4
  4676                           prodl	equ	0xFF3
  4677                           intcon	equ	0xFF2
  4678                           postinc0	equ	0xFEE
  4679                           wreg	equ	0xFE8
  4680                           indf1	equ	0xFE7
  4681                           fsr1h	equ	0xFE2
  4682                           fsr1l	equ	0xFE1
  4683                           indf2	equ	0xFDF
  4684                           postinc2	equ	0xFDE
  4685                           postdec2	equ	0xFDD
  4686                           fsr2h	equ	0xFDA
  4687                           fsr2l	equ	0xFD9
  4688                           status	equ	0xFD8
  4689                           
  4690 ;; *************** function _ConvertADC *****************
  4691 ;; Defined at:
  4692 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;		None
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;		None
  4697 ;; Return value:  Size  Location     Type
  4698 ;;		None               void
  4699 ;; Registers used:
  4700 ;;		None
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4706 ;;      Params:         0       0       0       0       0
  4707 ;;      Locals:         0       0       0       0       0
  4708 ;;      Temps:          0       0       0       0       0
  4709 ;;      Totals:         0       0       0       0       0
  4710 ;;Total ram usage:        0 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:   10
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		_main
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           	psect	text30
  4721  001BB8                     __ptext30:
  4722                           	opt stack 0
  4723  001BB8                     _ConvertADC:
  4724                           	opt stack 20
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;incstack = 0
  4728  001BB8  82C2               	bsf	4034,1,c	;volatile
  4729  001BBA  0012               	return	
  4730  001BBC                     __end_of_ConvertADC:
  4731                           	opt stack 0
  4732                           tblptru	equ	0xFF8
  4733                           prodh	equ	0xFF4
  4734                           prodl	equ	0xFF3
  4735                           intcon	equ	0xFF2
  4736                           postinc0	equ	0xFEE
  4737                           wreg	equ	0xFE8
  4738                           indf1	equ	0xFE7
  4739                           fsr1h	equ	0xFE2
  4740                           fsr1l	equ	0xFE1
  4741                           indf2	equ	0xFDF
  4742                           postinc2	equ	0xFDE
  4743                           postdec2	equ	0xFDD
  4744                           fsr2h	equ	0xFDA
  4745                           fsr2l	equ	0xFD9
  4746                           status	equ	0xFD8
  4747                           
  4748 ;; *************** function _BusyADC *****************
  4749 ;; Defined at:
  4750 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcbusy.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;		None
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;		None
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  1    wreg      unsigned char 
  4757 ;; Registers used:
  4758 ;;		wreg
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4764 ;;      Params:         0       0       0       0       0
  4765 ;;      Locals:         0       0       0       0       0
  4766 ;;      Temps:          0       0       0       0       0
  4767 ;;      Totals:         0       0       0       0       0
  4768 ;;Total ram usage:        0 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; Hardware stack levels required when called:   10
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_main
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           	psect	text31
  4779  001B86                     __ptext31:
  4780                           	opt stack 0
  4781  001B86                     _BusyADC:
  4782                           	opt stack 20
  4783                           
  4784                           ;incstack = 0
  4785  001B86  A2C2               	btfss	4034,1,c	;volatile
  4786  001B88  D002               	goto	u1630
  4787  001B8A  0E01               	movlw	1
  4788  001B8C  0012               	return	
  4789  001B8E                     u1630:
  4790  001B8E  0E00               	movlw	0
  4791  001B90  0012               	return	
  4792  001B92                     __end_of_BusyADC:
  4793                           	opt stack 0
  4794                           tblptru	equ	0xFF8
  4795                           prodh	equ	0xFF4
  4796                           prodl	equ	0xFF3
  4797                           intcon	equ	0xFF2
  4798                           postinc0	equ	0xFEE
  4799                           wreg	equ	0xFE8
  4800                           indf1	equ	0xFE7
  4801                           fsr1h	equ	0xFE2
  4802                           fsr1l	equ	0xFE1
  4803                           indf2	equ	0xFDF
  4804                           postinc2	equ	0xFDE
  4805                           postdec2	equ	0xFDD
  4806                           fsr2h	equ	0xFDA
  4807                           fsr2l	equ	0xFD9
  4808                           status	equ	0xFD8
  4809                           
  4810 ;; *************** function _InterruptHandlerLow *****************
  4811 ;; Defined at:
  4812 ;;		line 126 in file "../src/interrupts.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;		None
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;		None
  4817 ;; Return value:  Size  Location     Type
  4818 ;;		None               void
  4819 ;; Registers used:
  4820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4826 ;;      Params:         0       0       0       0       0
  4827 ;;      Locals:         0       0       0       0       0
  4828 ;;      Temps:         17       0       0       0       0
  4829 ;;      Totals:        17       0       0       0       0
  4830 ;;Total ram usage:       17 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:    9
  4833 ;; This function calls:
  4834 ;;		_timer1_int_handler
  4835 ;;		_uart_recv_int_handler
  4836 ;; This function is called by:
  4837 ;;		Interrupt level 1
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	intcodelo
  4842  000018                     __pintcodelo:
  4843                           	opt stack 0
  4844  000018                     _InterruptHandlerLow:
  4845                           	opt stack 17
  4846                           
  4847                           ;incstack = 0
  4848  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  4849  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  4850  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  4851  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  4852  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  4853  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  4854  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  4855  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  4856  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  4857  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  4858  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  4859  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  4860  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  4861  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  4862  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  4863  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  4864  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  4865                           
  4866                           ;interrupts.c: 128: if (PIR1bits.TMR1IF) {
  4867  00005C  A09E               	btfss	3998,0,c	;volatile
  4868  00005E  D007               	goto	i1l2905
  4869                           
  4870                           ;interrupts.c: 129: PIR1bits.TMR1IF = 0;
  4871  000060  909E               	bcf	3998,0,c	;volatile
  4872                           
  4873                           ;interrupts.c: 130: timer1_int_handler(adcbuffer);
  4874  000062  0E00               	movlw	high _adcbuffer
  4875  000064  6E06               	movwf	timer1_int_handler@adcbuffer+1,c
  4876  000066  0E48               	movlw	low _adcbuffer
  4877  000068  6E05               	movwf	timer1_int_handler@adcbuffer,c
  4878  00006A  ECBC  F00D         	call	_timer1_int_handler	;wreg free
  4879  00006E                     i1l2905:
  4880                           
  4881                           ;interrupts.c: 131: }
  4882                           ;interrupts.c: 134: if (PIR1bits.RCIF) {
  4883  00006E  AA9E               	btfss	3998,5,c	;volatile
  4884  000070  D003               	goto	i1l51
  4885                           
  4886                           ;interrupts.c: 135: PIR1bits.RCIF = 0;
  4887  000072  9A9E               	bcf	3998,5,c	;volatile
  4888                           
  4889                           ;interrupts.c: 136: uart_recv_int_handler();
  4890  000074  ECFA  F008         	call	_uart_recv_int_handler	;wreg free
  4891  000078                     i1l51:
  4892  000078  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4893  00007C  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4894  000080  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4895  000084  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4896  000088  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4897  00008C  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4898  000090  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4899  000094  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4900  000098  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4901  00009C  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4902  0000A0  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4903  0000A4  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4904  0000A8  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4905  0000AC  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4906  0000B0  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4907  0000B4  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4908  0000B8  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  4909  0000BC  0010               	retfie	
  4910  0000BE                     __end_of_InterruptHandlerLow:
  4911                           	opt stack 0
  4912                           pclatu	equ	0xFFB
  4913                           pclath	equ	0xFFA
  4914                           tblptru	equ	0xFF8
  4915                           tblptrh	equ	0xFF7
  4916                           tblptrl	equ	0xFF6
  4917                           tablat	equ	0xFF5
  4918                           prodh	equ	0xFF4
  4919                           prodl	equ	0xFF3
  4920                           intcon	equ	0xFF2
  4921                           postinc0	equ	0xFEE
  4922                           fsr0h	equ	0xFEA
  4923                           fsr0l	equ	0xFE9
  4924                           wreg	equ	0xFE8
  4925                           indf1	equ	0xFE7
  4926                           fsr1h	equ	0xFE2
  4927                           fsr1l	equ	0xFE1
  4928                           bsr	equ	0xFE0
  4929                           indf2	equ	0xFDF
  4930                           postinc2	equ	0xFDE
  4931                           postdec2	equ	0xFDD
  4932                           fsr2h	equ	0xFDA
  4933                           fsr2l	equ	0xFD9
  4934                           status	equ	0xFD8
  4935                           
  4936 ;; *************** function _uart_recv_int_handler *****************
  4937 ;; Defined at:
  4938 ;;		line 11 in file "../src/my_uart.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;		None
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;		None
  4943 ;; Return value:  Size  Location     Type
  4944 ;;		None               void
  4945 ;; Registers used:
  4946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4952 ;;      Params:         0       0       0       0       0
  4953 ;;      Locals:         0       0       0       0       0
  4954 ;;      Temps:          1       0       0       0       0
  4955 ;;      Totals:         1       0       0       0       0
  4956 ;;Total ram usage:        1 bytes
  4957 ;; Hardware stack levels used:    1
  4958 ;; Hardware stack levels required when called:    8
  4959 ;; This function calls:
  4960 ;;		_ReadUSART
  4961 ;;		_ToMainLow_sendmsg
  4962 ;; This function is called by:
  4963 ;;		_InterruptHandlerLow
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text33
  4968  0011F4                     __ptext33:
  4969                           	opt stack 0
  4970  0011F4                     _uart_recv_int_handler:
  4971                           	opt stack 17
  4972                           
  4973                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  4974                           
  4975                           ;incstack = 0
  4976  0011F4  AA9E               	btfss	3998,5,c	;volatile
  4977  0011F6  D03C               	goto	i1l2893
  4978                           
  4979                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  4980  0011F8  EE20 F004          	lfsr	2,4
  4981  0011FC  5052               	movf	_uc_ptr,w,c
  4982  0011FE  26D9               	addwf	fsr2l,f,c
  4983  001200  5053               	movf	_uc_ptr+1,w,c
  4984  001202  22DA               	addwfc	fsr2h,f,c
  4985  001204  50DF               	movf	indf2,w,c
  4986  001206  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4987  001208  501B               	movf	??_uart_recv_int_handler,w,c
  4988  00120A  0D01               	mullw	1
  4989  00120C  50F3               	movf	prodl,w,c
  4990  00120E  2452               	addwf	_uc_ptr,w,c
  4991  001210  6ED9               	movwf	fsr2l,c
  4992  001212  50F4               	movf	prodh,w,c
  4993  001214  2053               	addwfc	_uc_ptr+1,w,c
  4994  001216  6EDA               	movwf	fsr2h,c
  4995  001218  EC75  F00D         	call	_ReadUSART	;wreg free
  4996  00121C  6EDF               	movwf	indf2,c
  4997                           
  4998                           ;my_uart.c: 25: uc_ptr->buflen++;
  4999  00121E  EE20 F004          	lfsr	2,4
  5000  001222  5052               	movf	_uc_ptr,w,c
  5001  001224  26D9               	addwf	fsr2l,f,c
  5002  001226  5053               	movf	_uc_ptr+1,w,c
  5003  001228  22DA               	addwfc	fsr2h,f,c
  5004  00122A  2ADF               	incf	indf2,f,c
  5005                           
  5006                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  5007  00122C  EE20 F004          	lfsr	2,4
  5008  001230  5052               	movf	_uc_ptr,w,c
  5009  001232  26D9               	addwf	fsr2l,f,c
  5010  001234  5053               	movf	_uc_ptr+1,w,c
  5011  001236  22DA               	addwfc	fsr2h,f,c
  5012  001238  0E04               	movlw	4
  5013  00123A  62DF               	cpfseq	indf2,c
  5014  00123C  D019               	goto	i1l2893
  5015                           
  5016                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5017  00123E  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5018  001240  0E1F               	movlw	31
  5019  001242  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5020  001244  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5021  001246  C053  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5022  00124A  C052  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5023  00124E  EE20 F004          	lfsr	2,4
  5024  001252  5052               	movf	_uc_ptr,w,c
  5025  001254  26D9               	addwf	fsr2l,f,c
  5026  001256  5053               	movf	_uc_ptr+1,w,c
  5027  001258  22DA               	addwfc	fsr2h,f,c
  5028  00125A  50DF               	movf	indf2,w,c
  5029  00125C  EC1E  F00D         	call	_ToMainLow_sendmsg
  5030                           
  5031                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  5032  001260  EE20 F004          	lfsr	2,4
  5033  001264  5052               	movf	_uc_ptr,w,c
  5034  001266  26D9               	addwf	fsr2l,f,c
  5035  001268  5053               	movf	_uc_ptr+1,w,c
  5036  00126A  22DA               	addwfc	fsr2h,f,c
  5037  00126C  0E00               	movlw	0
  5038  00126E  6EDF               	movwf	indf2,c
  5039  001270                     i1l2893:
  5040                           
  5041                           ;my_uart.c: 30: }
  5042                           ;my_uart.c: 31: }
  5043                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  5044  001270  A647               	btfss	_USART_Status,3,c
  5045  001272  0012               	return	
  5046                           
  5047                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  5048  001274  98AB               	bcf	4011,4,c	;volatile
  5049                           
  5050                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  5051  001276  88AB               	bsf	4011,4,c	;volatile
  5052                           
  5053                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  5054  001278  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5055  00127A  0E1E               	movlw	30
  5056  00127C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5057  00127E  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5058  001280  0E00               	movlw	0
  5059  001282  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5060  001284  0E00               	movlw	0
  5061  001286  6E18               	movwf	ToMainLow_sendmsg@data,c
  5062  001288  0E00               	movlw	0
  5063  00128A  EC1E  F00D         	call	_ToMainLow_sendmsg
  5064  00128E  0012               	return	
  5065  001290                     __end_of_uart_recv_int_handler:
  5066                           	opt stack 0
  5067                           pclatu	equ	0xFFB
  5068                           pclath	equ	0xFFA
  5069                           tblptru	equ	0xFF8
  5070                           tblptrh	equ	0xFF7
  5071                           tblptrl	equ	0xFF6
  5072                           tablat	equ	0xFF5
  5073                           prodh	equ	0xFF4
  5074                           prodl	equ	0xFF3
  5075                           intcon	equ	0xFF2
  5076                           postinc0	equ	0xFEE
  5077                           fsr0h	equ	0xFEA
  5078                           fsr0l	equ	0xFE9
  5079                           wreg	equ	0xFE8
  5080                           indf1	equ	0xFE7
  5081                           fsr1h	equ	0xFE2
  5082                           fsr1l	equ	0xFE1
  5083                           bsr	equ	0xFE0
  5084                           indf2	equ	0xFDF
  5085                           postinc2	equ	0xFDE
  5086                           postdec2	equ	0xFDD
  5087                           fsr2h	equ	0xFDA
  5088                           fsr2l	equ	0xFD9
  5089                           status	equ	0xFD8
  5090                           
  5091 ;; *************** function _ToMainLow_sendmsg *****************
  5092 ;; Defined at:
  5093 ;;		line 103 in file "../src/messages.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  length          1    wreg     unsigned char 
  5096 ;;  msgtype         1   22[COMRAM] unsigned char 
  5097 ;;  data            2   23[COMRAM] PTR void 
  5098 ;;		 -> NULL(0), main@uc(5), 
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;  length          1   25[COMRAM] unsigned char 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      char 
  5103 ;; Registers used:
  5104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5110 ;;      Params:         3       0       0       0       0
  5111 ;;      Locals:         1       0       0       0       0
  5112 ;;      Temps:          0       0       0       0       0
  5113 ;;      Totals:         4       0       0       0       0
  5114 ;;Total ram usage:        4 bytes
  5115 ;; Hardware stack levels used:    1
  5116 ;; Hardware stack levels required when called:    7
  5117 ;; This function calls:
  5118 ;;		i1_send_msg
  5119 ;; This function is called by:
  5120 ;;		_uart_recv_int_handler
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           	psect	text34
  5125  001A3C                     __ptext34:
  5126                           	opt stack 0
  5127  001A3C                     _ToMainLow_sendmsg:
  5128                           	opt stack 17
  5129                           
  5130                           ;incstack = 0
  5131                           ;ToMainLow_sendmsg@length stored from wreg
  5132  001A3C  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5133                           
  5134                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5135                           ;	Return value of _ToMainLow_sendmsg is never used
  5136  001A40  0100               	movlb	0	; () banked
  5137  001A42  0E00               	movlw	high _ToMainLow_MQ
  5138  001A44  6E0C               	movwf	i1send_msg@qptr+1,c
  5139  001A46  0100               	movlb	0	; () banked
  5140  001A48  0E80               	movlw	low _ToMainLow_MQ
  5141  001A4A  6E0B               	movwf	i1send_msg@qptr,c
  5142  001A4C  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5143  001A50  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5144  001A54  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5145  001A58  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5146  001A5C  EC01  F008         	call	i1_send_msg	;wreg free
  5147  001A60  0012               	return	
  5148  001A62                     __end_of_ToMainLow_sendmsg:
  5149                           	opt stack 0
  5150                           pclatu	equ	0xFFB
  5151                           pclath	equ	0xFFA
  5152                           tblptru	equ	0xFF8
  5153                           tblptrh	equ	0xFF7
  5154                           tblptrl	equ	0xFF6
  5155                           tablat	equ	0xFF5
  5156                           prodh	equ	0xFF4
  5157                           prodl	equ	0xFF3
  5158                           intcon	equ	0xFF2
  5159                           postinc0	equ	0xFEE
  5160                           fsr0h	equ	0xFEA
  5161                           fsr0l	equ	0xFE9
  5162                           wreg	equ	0xFE8
  5163                           indf1	equ	0xFE7
  5164                           fsr1h	equ	0xFE2
  5165                           fsr1l	equ	0xFE1
  5166                           bsr	equ	0xFE0
  5167                           indf2	equ	0xFDF
  5168                           postinc2	equ	0xFDE
  5169                           postdec2	equ	0xFDD
  5170                           fsr2h	equ	0xFDA
  5171                           fsr2l	equ	0xFD9
  5172                           status	equ	0xFD8
  5173                           
  5174 ;; *************** function i1_send_msg *****************
  5175 ;; Defined at:
  5176 ;;		line 24 in file "../src/messages.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5179 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5180 ;;  length          1   12[COMRAM] unsigned char 
  5181 ;;  msgtype         1   13[COMRAM] unsigned char 
  5182 ;;  data            2   14[COMRAM] PTR void 
  5183 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), main@ic(28), 
  5184 ;;		 -> main@uc(5), 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5187 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5188 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5189 ;;  send_msg        2   17[COMRAM] unsigned int 
  5190 ;;  send_msg        1   19[COMRAM] unsigned char 
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      char 
  5193 ;; Registers used:
  5194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5200 ;;      Params:         6       0       0       0       0
  5201 ;;      Locals:         5       0       0       0       0
  5202 ;;      Temps:          1       0       0       0       0
  5203 ;;      Totals:        12       0       0       0       0
  5204 ;;Total ram usage:       12 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:    6
  5207 ;; This function calls:
  5208 ;;		i1_memcpy
  5209 ;; This function is called by:
  5210 ;;		_ToMainLow_sendmsg
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           	psect	text35
  5215  001002                     __ptext35:
  5216                           	opt stack 0
  5217  001002                     i1_send_msg:
  5218                           	opt stack 17
  5219                           
  5220                           ;messages.c: 25: unsigned char slot;
  5221                           ;messages.c: 27: msg *qmsg;
  5222                           ;messages.c: 28: size_t tlength = length;
  5223                           
  5224                           ;incstack = 0
  5225  001002  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5226  001006  6A13               	clrf	i1send_msg@tlength+1,c
  5227                           
  5228                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5229  001008  EE20 F034          	lfsr	2,52
  5230  00100C  500B               	movf	i1send_msg@qptr,w,c
  5231  00100E  26D9               	addwf	fsr2l,f,c
  5232  001010  500C               	movf	i1send_msg@qptr+1,w,c
  5233  001012  22DA               	addwfc	fsr2h,f,c
  5234  001014  50DF               	movf	indf2,w,c
  5235  001016  6E14               	movwf	i1send_msg@slot,c
  5236                           
  5237                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5238  001018  5014               	movf	i1send_msg@slot,w,c
  5239  00101A  0D0D               	mullw	13
  5240  00101C  50F3               	movf	prodl,w,c
  5241  00101E  240B               	addwf	i1send_msg@qptr,w,c
  5242  001020  6E15               	movwf	i1send_msg@qmsg,c
  5243  001022  50F4               	movf	prodh,w,c
  5244  001024  200C               	addwfc	i1send_msg@qptr+1,w,c
  5245  001026  6E16               	movwf	i1send_msg@qmsg+1,c
  5246                           
  5247                           ;messages.c: 41: if (qmsg->full != 0) {
  5248  001028  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5249  00102C  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5250  001030  50DF               	movf	indf2,w,c
  5251  001032  B4D8               	btfsc	status,2,c
  5252  001034  D002               	goto	i1l2865
  5253                           
  5254                           ;messages.c: 42: return (-1);
  5255  001036  0EFF               	movlw	255
  5256  001038  0012               	return	
  5257  00103A                     i1l2865:
  5258                           
  5259                           ;messages.c: 43: }
  5260                           ;messages.c: 46: qmsg->length = length;
  5261  00103A  EE20 F001          	lfsr	2,1
  5262  00103E  5015               	movf	i1send_msg@qmsg,w,c
  5263  001040  26D9               	addwf	fsr2l,f,c
  5264  001042  5016               	movf	i1send_msg@qmsg+1,w,c
  5265  001044  22DA               	addwfc	fsr2h,f,c
  5266  001046  C00D  FFDF         	movff	i1send_msg@length,indf2
  5267                           
  5268                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5269  00104A  EE20 F002          	lfsr	2,2
  5270  00104E  5015               	movf	i1send_msg@qmsg,w,c
  5271  001050  26D9               	addwf	fsr2l,f,c
  5272  001052  5016               	movf	i1send_msg@qmsg+1,w,c
  5273  001054  22DA               	addwfc	fsr2h,f,c
  5274  001056  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5275                           
  5276                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5277  00105A  0E03               	movlw	3
  5278  00105C  2415               	addwf	i1send_msg@qmsg,w,c
  5279  00105E  6E01               	movwf	i1memcpy@d1,c
  5280  001060  0E00               	movlw	0
  5281  001062  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5282  001064  6E02               	movwf	i1memcpy@d1+1,c
  5283  001066  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5284  00106A  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5285  00106E  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5286  001072  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5287  001076  EC16  F00C         	call	i1_memcpy	;wreg free
  5288                           
  5289                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5290  00107A  EE20 F034          	lfsr	2,52
  5291  00107E  500B               	movf	i1send_msg@qptr,w,c
  5292  001080  26D9               	addwf	fsr2l,f,c
  5293  001082  500C               	movf	i1send_msg@qptr+1,w,c
  5294  001084  22DA               	addwfc	fsr2h,f,c
  5295  001086  EE10 F034          	lfsr	1,52
  5296  00108A  500B               	movf	i1send_msg@qptr,w,c
  5297  00108C  26E1               	addwf	fsr1l,f,c
  5298  00108E  500C               	movf	i1send_msg@qptr+1,w,c
  5299  001090  22E2               	addwfc	fsr1h,f,c
  5300  001092  50E7               	movf	indf1,w,c
  5301  001094  6E11               	movwf	??i1_send_msg& (0+255),c
  5302  001096  2811               	incf	??i1_send_msg,w,c
  5303  001098  0B03               	andlw	3
  5304  00109A  6EDF               	movwf	indf2,c
  5305                           
  5306                           ;messages.c: 59: qmsg->full = 1;
  5307  00109C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5308  0010A0  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5309  0010A4  0E01               	movlw	1
  5310  0010A6  6EDF               	movwf	indf2,c
  5311                           
  5312                           ;messages.c: 60: return (1);
  5313  0010A8  0E01               	movlw	1
  5314  0010AA  0012               	return	
  5315  0010AC                     __end_ofi1_send_msg:
  5316                           	opt stack 0
  5317                           pclatu	equ	0xFFB
  5318                           pclath	equ	0xFFA
  5319                           tblptru	equ	0xFF8
  5320                           tblptrh	equ	0xFF7
  5321                           tblptrl	equ	0xFF6
  5322                           tablat	equ	0xFF5
  5323                           prodh	equ	0xFF4
  5324                           prodl	equ	0xFF3
  5325                           intcon	equ	0xFF2
  5326                           postinc0	equ	0xFEE
  5327                           fsr0h	equ	0xFEA
  5328                           fsr0l	equ	0xFE9
  5329                           wreg	equ	0xFE8
  5330                           indf1	equ	0xFE7
  5331                           fsr1h	equ	0xFE2
  5332                           fsr1l	equ	0xFE1
  5333                           bsr	equ	0xFE0
  5334                           indf2	equ	0xFDF
  5335                           postinc2	equ	0xFDE
  5336                           postdec2	equ	0xFDD
  5337                           fsr2h	equ	0xFDA
  5338                           fsr2l	equ	0xFD9
  5339                           status	equ	0xFD8
  5340                           
  5341 ;; *************** function i1_memcpy *****************
  5342 ;; Defined at:
  5343 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;  d1              2    0[COMRAM] PTR void 
  5346 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5347 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5348 ;;		 -> main@msgbuffer(11), 
  5349 ;;  s1              2    2[COMRAM] PTR const void 
  5350 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5351 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5352 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5353 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(28), 
  5354 ;;		 -> main@uc(5), 
  5355 ;;  n               2    4[COMRAM] unsigned int 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5358 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5359 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5360 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5361 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(28), 
  5362 ;;		 -> main@uc(5), 
  5363 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5364 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5365 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5366 ;;		 -> main@msgbuffer(11), 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  2    0[COMRAM] PTR void 
  5369 ;; Registers used:
  5370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5376 ;;      Params:         6       0       0       0       0
  5377 ;;      Locals:         4       0       0       0       0
  5378 ;;      Temps:          0       0       0       0       0
  5379 ;;      Totals:        10       0       0       0       0
  5380 ;;Total ram usage:       10 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; Hardware stack levels required when called:    5
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		i1_send_msg
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text36
  5391  00182C                     __ptext36:
  5392                           	opt stack 0
  5393  00182C                     i1_memcpy:
  5394                           	opt stack 17
  5395                           
  5396                           ;incstack = 0
  5397  00182C  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5398  001830  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5399  001834  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5400  001838  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5401  00183C  D00E               	goto	i1l2841
  5402  00183E                     i1l2835:
  5403  00183E  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5404  001842  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5405  001846  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5406  00184A  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5407  00184E  CFDF FFE7          	movff	indf2,indf1
  5408  001852  4A09               	infsnz	i1memcpy@s,f,c
  5409  001854  2A0A               	incf	i1memcpy@s+1,f,c
  5410  001856  4A07               	infsnz	i1memcpy@d,f,c
  5411  001858  2A08               	incf	i1memcpy@d+1,f,c
  5412  00185A                     i1l2841:
  5413  00185A  0605               	decf	i1memcpy@n,f,c
  5414  00185C  A0D8               	btfss	status,0,c
  5415  00185E  0606               	decf	i1memcpy@n+1,f,c
  5416  001860  2805               	incf	i1memcpy@n& (0+255),w,c
  5417  001862  B4D8               	btfsc	status,2,c
  5418  001864  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5419  001866  B4D8               	btfsc	status,2,c
  5420                           
  5421                           ;	Return value of i1_memcpy is never used
  5422  001868  0012               	return	
  5423  00186A  D7E9               	goto	i1l2835
  5424  00186C                     __end_ofi1_memcpy:
  5425                           	opt stack 0
  5426                           pclatu	equ	0xFFB
  5427                           pclath	equ	0xFFA
  5428                           tblptru	equ	0xFF8
  5429                           tblptrh	equ	0xFF7
  5430                           tblptrl	equ	0xFF6
  5431                           tablat	equ	0xFF5
  5432                           prodh	equ	0xFF4
  5433                           prodl	equ	0xFF3
  5434                           intcon	equ	0xFF2
  5435                           postinc0	equ	0xFEE
  5436                           fsr0h	equ	0xFEA
  5437                           fsr0l	equ	0xFE9
  5438                           wreg	equ	0xFE8
  5439                           indf1	equ	0xFE7
  5440                           fsr1h	equ	0xFE2
  5441                           fsr1l	equ	0xFE1
  5442                           bsr	equ	0xFE0
  5443                           indf2	equ	0xFDF
  5444                           postinc2	equ	0xFDE
  5445                           postdec2	equ	0xFDD
  5446                           fsr2h	equ	0xFDA
  5447                           fsr2l	equ	0xFD9
  5448                           status	equ	0xFD8
  5449                           
  5450 ;; *************** function _ReadUSART *****************
  5451 ;; Defined at:
  5452 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;		None
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;  data            1    0[COMRAM] unsigned char 
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  1    wreg      unsigned char 
  5459 ;; Registers used:
  5460 ;;		wreg, status,2, status,0
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5466 ;;      Params:         0       0       0       0       0
  5467 ;;      Locals:         1       0       0       0       0
  5468 ;;      Temps:          0       0       0       0       0
  5469 ;;      Totals:         1       0       0       0       0
  5470 ;;Total ram usage:        1 bytes
  5471 ;; Hardware stack levels used:    1
  5472 ;; Hardware stack levels required when called:    5
  5473 ;; This function calls:
  5474 ;;		Nothing
  5475 ;; This function is called by:
  5476 ;;		_uart_recv_int_handler
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           	psect	text37
  5481  001AEA                     __ptext37:
  5482                           	opt stack 0
  5483  001AEA                     _ReadUSART:
  5484                           	opt stack 19
  5485                           
  5486                           ;incstack = 0
  5487  001AEA  0EF2               	movlw	242
  5488  001AEC  1647               	andwf	_USART_Status,f,c
  5489  001AEE  ACAB               	btfss	4011,6,c	;volatile
  5490  001AF0  D003               	goto	i1l518
  5491  001AF2  9047               	bcf	_USART_Status,0,c
  5492  001AF4  B0AB               	btfsc	4011,0,c	;volatile
  5493  001AF6  8047               	bsf	_USART_Status,0,c
  5494  001AF8                     i1l518:
  5495  001AF8  B4AB               	btfsc	4011,2,c	;volatile
  5496  001AFA  8447               	bsf	_USART_Status,2,c
  5497  001AFC  B2AB               	btfsc	4011,1,c	;volatile
  5498  001AFE  8647               	bsf	_USART_Status,3,c
  5499  001B00  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5500  001B04  5001               	movf	ReadUSART@data,w,c
  5501  001B06  0012               	return	
  5502  001B08                     __end_of_ReadUSART:
  5503                           	opt stack 0
  5504                           pclatu	equ	0xFFB
  5505                           pclath	equ	0xFFA
  5506                           tblptru	equ	0xFF8
  5507                           tblptrh	equ	0xFF7
  5508                           tblptrl	equ	0xFF6
  5509                           tablat	equ	0xFF5
  5510                           prodh	equ	0xFF4
  5511                           prodl	equ	0xFF3
  5512                           intcon	equ	0xFF2
  5513                           postinc0	equ	0xFEE
  5514                           fsr0h	equ	0xFEA
  5515                           fsr0l	equ	0xFE9
  5516                           wreg	equ	0xFE8
  5517                           indf1	equ	0xFE7
  5518                           fsr1h	equ	0xFE2
  5519                           fsr1l	equ	0xFE1
  5520                           bsr	equ	0xFE0
  5521                           indf2	equ	0xFDF
  5522                           postinc2	equ	0xFDE
  5523                           postdec2	equ	0xFDD
  5524                           fsr2h	equ	0xFDA
  5525                           fsr2l	equ	0xFD9
  5526                           status	equ	0xFD8
  5527                           
  5528 ;; *************** function _timer1_int_handler *****************
  5529 ;; Defined at:
  5530 ;;		line 52 in file "../src/user_interrupts.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  adcbuffer       2    4[COMRAM] PTR unsigned char 
  5533 ;;		 -> adcbuffer(10), 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;		None
  5536 ;; Return value:  Size  Location     Type
  5537 ;;		None               void
  5538 ;; Registers used:
  5539 ;;		wreg, status,2, cstack
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5545 ;;      Params:         2       0       0       0       0
  5546 ;;      Locals:         0       0       0       0       0
  5547 ;;      Temps:          0       0       0       0       0
  5548 ;;      Totals:         2       0       0       0       0
  5549 ;;Total ram usage:        2 bytes
  5550 ;; Hardware stack levels used:    1
  5551 ;; Hardware stack levels required when called:    6
  5552 ;; This function calls:
  5553 ;;		_WriteTimer1
  5554 ;; This function is called by:
  5555 ;;		_InterruptHandlerLow
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           	psect	text38
  5560  001B78                     __ptext38:
  5561                           	opt stack 0
  5562  001B78                     _timer1_int_handler:
  5563                           	opt stack 19
  5564                           
  5565                           ;user_interrupts.c: 64: WriteTimer1(0);
  5566                           
  5567                           ;incstack = 0
  5568  001B78  0E00               	movlw	0
  5569  001B7A  6E02               	movwf	WriteTimer1@timer1+1,c
  5570  001B7C  0E00               	movlw	0
  5571  001B7E  6E01               	movwf	WriteTimer1@timer1,c
  5572  001B80  ECAA  F00D         	call	_WriteTimer1	;wreg free
  5573  001B84  0012               	return	
  5574  001B86                     __end_of_timer1_int_handler:
  5575                           	opt stack 0
  5576                           pclatu	equ	0xFFB
  5577                           pclath	equ	0xFFA
  5578                           tblptru	equ	0xFF8
  5579                           tblptrh	equ	0xFF7
  5580                           tblptrl	equ	0xFF6
  5581                           tablat	equ	0xFF5
  5582                           prodh	equ	0xFF4
  5583                           prodl	equ	0xFF3
  5584                           intcon	equ	0xFF2
  5585                           postinc0	equ	0xFEE
  5586                           fsr0h	equ	0xFEA
  5587                           fsr0l	equ	0xFE9
  5588                           wreg	equ	0xFE8
  5589                           indf1	equ	0xFE7
  5590                           fsr1h	equ	0xFE2
  5591                           fsr1l	equ	0xFE1
  5592                           bsr	equ	0xFE0
  5593                           indf2	equ	0xFDF
  5594                           postinc2	equ	0xFDE
  5595                           postdec2	equ	0xFDD
  5596                           fsr2h	equ	0xFDA
  5597                           fsr2l	equ	0xFD9
  5598                           status	equ	0xFD8
  5599                           
  5600 ;; *************** function _WriteTimer1 *****************
  5601 ;; Defined at:
  5602 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;  timer1          2    0[COMRAM] unsigned int 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;  timer           2    2[COMRAM] struct Timers
  5607 ;; Return value:  Size  Location     Type
  5608 ;;		None               void
  5609 ;; Registers used:
  5610 ;;		None
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5616 ;;      Params:         2       0       0       0       0
  5617 ;;      Locals:         2       0       0       0       0
  5618 ;;      Temps:          0       0       0       0       0
  5619 ;;      Totals:         4       0       0       0       0
  5620 ;;Total ram usage:        4 bytes
  5621 ;; Hardware stack levels used:    1
  5622 ;; Hardware stack levels required when called:    5
  5623 ;; This function calls:
  5624 ;;		Nothing
  5625 ;; This function is called by:
  5626 ;;		_timer1_int_handler
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           	psect	text39
  5631  001B54                     __ptext39:
  5632                           	opt stack 0
  5633  001B54                     _WriteTimer1:
  5634                           	opt stack 19
  5635                           
  5636                           ;incstack = 0
  5637  001B54  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5638  001B58  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5639  001B5C  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5640  001B60  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5641  001B64  0012               	return	
  5642  001B66                     __end_of_WriteTimer1:
  5643                           	opt stack 0
  5644                           pclatu	equ	0xFFB
  5645                           pclath	equ	0xFFA
  5646                           tblptru	equ	0xFF8
  5647                           tblptrh	equ	0xFF7
  5648                           tblptrl	equ	0xFF6
  5649                           tablat	equ	0xFF5
  5650                           prodh	equ	0xFF4
  5651                           prodl	equ	0xFF3
  5652                           intcon	equ	0xFF2
  5653                           postinc0	equ	0xFEE
  5654                           fsr0h	equ	0xFEA
  5655                           fsr0l	equ	0xFE9
  5656                           wreg	equ	0xFE8
  5657                           indf1	equ	0xFE7
  5658                           fsr1h	equ	0xFE2
  5659                           fsr1l	equ	0xFE1
  5660                           bsr	equ	0xFE0
  5661                           indf2	equ	0xFDF
  5662                           postinc2	equ	0xFDE
  5663                           postdec2	equ	0xFDD
  5664                           fsr2h	equ	0xFDA
  5665                           fsr2l	equ	0xFD9
  5666                           status	equ	0xFD8
  5667                           
  5668 ;; *************** function _InterruptHandlerHigh *****************
  5669 ;; Defined at:
  5670 ;;		line 85 in file "../src/interrupts.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;		None
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;		None
  5675 ;; Return value:  Size  Location     Type
  5676 ;;		None               void
  5677 ;; Registers used:
  5678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5684 ;;      Params:         0       0       0       0       0
  5685 ;;      Locals:         0       0       0       0       0
  5686 ;;      Temps:          0      14       0       0       0
  5687 ;;      Totals:         0      14       0       0       0
  5688 ;;Total ram usage:       14 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:    4
  5691 ;; This function calls:
  5692 ;;		_SleepIfOkay
  5693 ;;		_i2c_int_handler
  5694 ;;		_timer0_int_handler
  5695 ;; This function is called by:
  5696 ;;		Interrupt level 2
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           	psect	intcode
  5701  000008                     __pintcode:
  5702                           	opt stack 0
  5703  000008                     _InterruptHandlerHigh:
  5704                           	opt stack 17
  5705                           
  5706                           ;incstack = 0
  5707  000008  CFFA F0C6          	movff	pclath,??_InterruptHandlerHigh
  5708  00000C  CFFB F0C7          	movff	pclatu,??_InterruptHandlerHigh+1
  5709  000010  EFAB  F008         	goto	int_func
  5710                           pclatu	equ	0xFFB
  5711                           pclath	equ	0xFFA
  5712                           tblptru	equ	0xFF8
  5713                           tblptrh	equ	0xFF7
  5714                           tblptrl	equ	0xFF6
  5715                           tablat	equ	0xFF5
  5716                           prodh	equ	0xFF4
  5717                           prodl	equ	0xFF3
  5718                           intcon	equ	0xFF2
  5719                           postinc0	equ	0xFEE
  5720                           fsr0h	equ	0xFEA
  5721                           fsr0l	equ	0xFE9
  5722                           wreg	equ	0xFE8
  5723                           indf1	equ	0xFE7
  5724                           fsr1h	equ	0xFE2
  5725                           fsr1l	equ	0xFE1
  5726                           bsr	equ	0xFE0
  5727                           indf2	equ	0xFDF
  5728                           postinc2	equ	0xFDE
  5729                           postdec2	equ	0xFDD
  5730                           fsr2h	equ	0xFDA
  5731                           fsr2l	equ	0xFD9
  5732                           status	equ	0xFD8
  5733                           
  5734                           	psect	intcode_body
  5735  001156                     __pintcode_body:
  5736                           	opt stack 17
  5737  001156                     int_func:
  5738                           	opt stack 17
  5739  001156  CFE9 F0C8          	movff	fsr0l,??_InterruptHandlerHigh+2
  5740  00115A  CFEA F0C9          	movff	fsr0h,??_InterruptHandlerHigh+3
  5741  00115E  CFE1 F0CA          	movff	fsr1l,??_InterruptHandlerHigh+4
  5742  001162  CFE2 F0CB          	movff	fsr1h,??_InterruptHandlerHigh+5
  5743  001166  CFD9 F0CC          	movff	fsr2l,??_InterruptHandlerHigh+6
  5744  00116A  CFDA F0CD          	movff	fsr2h,??_InterruptHandlerHigh+7
  5745  00116E  CFF3 F0CE          	movff	prodl,??_InterruptHandlerHigh+8
  5746  001172  CFF4 F0CF          	movff	prodh,??_InterruptHandlerHigh+9
  5747  001176  CFF6 F0D0          	movff	tblptrl,??_InterruptHandlerHigh+10
  5748  00117A  CFF7 F0D1          	movff	tblptrh,??_InterruptHandlerHigh+11
  5749  00117E  CFF8 F0D2          	movff	tblptru,??_InterruptHandlerHigh+12
  5750  001182  CFF5 F0D3          	movff	tablat,??_InterruptHandlerHigh+13
  5751                           
  5752                           ;interrupts.c: 90: if (PIR1bits.SSPIF) {
  5753  001186  A69E               	btfss	3998,3,c	;volatile
  5754  001188  D00B               	goto	i2l2919
  5755                           
  5756                           ;interrupts.c: 92: PIR1bits.SSPIF = 0;
  5757  00118A  969E               	bcf	3998,3,c	;volatile
  5758                           
  5759                           ;interrupts.c: 94: i2c_int_handler(adcbuffer);
  5760  00118C  0E00               	movlw	high _adcbuffer
  5761  00118E  0100               	movlb	0	; () banked
  5762  001190  0100               	movlb	0	; () banked
  5763  001192  6FB8               	movwf	(i2c_int_handler@adcbuffer+1)& (0+255),b
  5764  001194  0E48               	movlw	low _adcbuffer
  5765  001196  0100               	movlb	0	; () banked
  5766  001198  0100               	movlb	0	; () banked
  5767  00119A  6FB7               	movwf	i2c_int_handler@adcbuffer& (0+255),b
  5768  00119C  EC61  F000         	call	_i2c_int_handler	;wreg free
  5769  0011A0                     i2l2919:
  5770                           
  5771                           ;interrupts.c: 95: }
  5772                           ;interrupts.c: 98: if (INTCONbits.TMR0IF) {
  5773  0011A0  A4F2               	btfss	intcon,2,c	;volatile
  5774  0011A2  D009               	goto	i2l2927
  5775                           
  5776                           ;interrupts.c: 99: INTCONbits.TMR0IF = 0;
  5777  0011A4  94F2               	bcf	intcon,2,c	;volatile
  5778                           
  5779                           ;interrupts.c: 101: LATBbits.LATB0 = 1;
  5780  0011A6  808A               	bsf	3978,0,c	;volatile
  5781                           
  5782                           ;interrupts.c: 102: timer0_int_handler(adcbuffer);
  5783  0011A8  0E00               	movlw	high _adcbuffer
  5784  0011AA  6E32               	movwf	timer0_int_handler@adcbuffer+1,c
  5785  0011AC  0E48               	movlw	low _adcbuffer
  5786  0011AE  6E31               	movwf	timer0_int_handler@adcbuffer,c
  5787  0011B0  ECA7  F007         	call	_timer0_int_handler	;wreg free
  5788                           
  5789                           ;interrupts.c: 103: LATBbits.LATB0 = 0;
  5790  0011B4  908A               	bcf	3978,0,c	;volatile
  5791  0011B6                     i2l2927:
  5792                           
  5793                           ;interrupts.c: 104: }
  5794                           ;interrupts.c: 113: SleepIfOkay();
  5795  0011B6  EC68  F00B         	call	_SleepIfOkay	;wreg free
  5796  0011BA  C0D3  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5797  0011BE  C0D2  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5798  0011C2  C0D1  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5799  0011C6  C0D0  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5800  0011CA  C0CF  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5801  0011CE  C0CE  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5802  0011D2  C0CD  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5803  0011D6  C0CC  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5804  0011DA  C0CB  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5805  0011DE  C0CA  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5806  0011E2  C0C9  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5807  0011E6  C0C8  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5808  0011EA  C0C7  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5809  0011EE  C0C6  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5810  0011F2  0011               	retfie		f
  5811  0011F4                     __end_of_InterruptHandlerHigh:
  5812                           	opt stack 0
  5813                           pclatu	equ	0xFFB
  5814                           pclath	equ	0xFFA
  5815                           tblptru	equ	0xFF8
  5816                           tblptrh	equ	0xFF7
  5817                           tblptrl	equ	0xFF6
  5818                           tablat	equ	0xFF5
  5819                           prodh	equ	0xFF4
  5820                           prodl	equ	0xFF3
  5821                           intcon	equ	0xFF2
  5822                           postinc0	equ	0xFEE
  5823                           fsr0h	equ	0xFEA
  5824                           fsr0l	equ	0xFE9
  5825                           wreg	equ	0xFE8
  5826                           indf1	equ	0xFE7
  5827                           fsr1h	equ	0xFE2
  5828                           fsr1l	equ	0xFE1
  5829                           bsr	equ	0xFE0
  5830                           indf2	equ	0xFDF
  5831                           postinc2	equ	0xFDE
  5832                           postdec2	equ	0xFDD
  5833                           fsr2h	equ	0xFDA
  5834                           fsr2l	equ	0xFD9
  5835                           status	equ	0xFD8
  5836                           
  5837 ;; *************** function _timer0_int_handler *****************
  5838 ;; Defined at:
  5839 ;;		line 16 in file "../src/user_interrupts.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;  adcbuffer       2   48[COMRAM] PTR unsigned char 
  5842 ;;		 -> adcbuffer(10), 
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;  i               2   52[COMRAM] int 
  5845 ;; Return value:  Size  Location     Type
  5846 ;;		None               void
  5847 ;; Registers used:
  5848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5854 ;;      Params:         2       0       0       0       0
  5855 ;;      Locals:         2       0       0       0       0
  5856 ;;      Temps:          2       0       0       0       0
  5857 ;;      Totals:         6       0       0       0       0
  5858 ;;Total ram usage:        6 bytes
  5859 ;; Hardware stack levels used:    1
  5860 ;; Hardware stack levels required when called:    1
  5861 ;; This function calls:
  5862 ;;		_WriteTimer0
  5863 ;;		i2_BusyADC
  5864 ;;		i2_ConvertADC
  5865 ;; This function is called by:
  5866 ;;		_InterruptHandlerHigh
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           	psect	text41
  5871  000F4E                     __ptext41:
  5872                           	opt stack 0
  5873  000F4E                     _timer0_int_handler:
  5874                           	opt stack 19
  5875                           
  5876                           ;user_interrupts.c: 17: WriteTimer0(0);
  5877                           
  5878                           ;incstack = 0
  5879  000F4E  0E00               	movlw	0
  5880  000F50  6E2E               	movwf	WriteTimer0@timer0+1,c
  5881  000F52  0E00               	movlw	0
  5882  000F54  6E2D               	movwf	WriteTimer0@timer0,c
  5883  000F56  ECB3  F00D         	call	_WriteTimer0	;wreg free
  5884                           
  5885                           ;user_interrupts.c: 34: ConvertADC();
  5886  000F5A  ECDE  F00D         	call	i2_ConvertADC	;wreg free
  5887  000F5E                     i2l1341:
  5888  000F5E  ECC9  F00D         	call	i2_BusyADC	;wreg free
  5889  000F62  0900               	iorlw	0
  5890  000F64  A4D8               	btfss	status,2,c
  5891  000F66  D7FB               	goto	i2l1341
  5892                           
  5893                           ;user_interrupts.c: 37: if(adcbuffer[0] < 9)
  5894  000F68  C031  FFD9         	movff	timer0_int_handler@adcbuffer,fsr2l
  5895  000F6C  C032  FFDA         	movff	timer0_int_handler@adcbuffer+1,fsr2h
  5896  000F70  50DF               	movf	indf2,w,c
  5897  000F72  6E33               	movwf	??_timer0_int_handler& (0+255),c
  5898  000F74  0E09               	movlw	9
  5899  000F76  5C33               	subwf	??_timer0_int_handler,w,c
  5900  000F78  B0D8               	btfsc	status,0,c
  5901  000F7A  D00D               	goto	i2l1347
  5902                           
  5903                           ;user_interrupts.c: 38: adcbuffer[0] = adcbuffer[0] + 1;
  5904  000F7C  C031  FFD9         	movff	timer0_int_handler@adcbuffer,fsr2l
  5905  000F80  C032  FFDA         	movff	timer0_int_handler@adcbuffer+1,fsr2h
  5906  000F84  50DF               	movf	indf2,w,c
  5907  000F86  6E33               	movwf	??_timer0_int_handler& (0+255),c
  5908  000F88  2833               	incf	??_timer0_int_handler,w,c
  5909  000F8A  C031  FFD9         	movff	timer0_int_handler@adcbuffer,fsr2l
  5910  000F8E  C032  FFDA         	movff	timer0_int_handler@adcbuffer+1,fsr2h
  5911  000F92  6EDF               	movwf	indf2,c
  5912  000F94  D025               	goto	i2l1359
  5913  000F96                     i2l1347:
  5914                           
  5915                           ;user_interrupts.c: 39: else {
  5916                           ;user_interrupts.c: 40: for (int i = 1; i > 9; i++)
  5917  000F96  0E00               	movlw	0
  5918  000F98  6E36               	movwf	timer0_int_handler@i+1,c
  5919  000F9A  0E01               	movlw	1
  5920  000F9C  6E35               	movwf	timer0_int_handler@i,c
  5921  000F9E  5036               	movf	timer0_int_handler@i+1,w,c
  5922  000FA0  0A80               	xorlw	128
  5923  000FA2  6EF3               	movwf	prodl,c
  5924  000FA4  0E80               	movlw	128
  5925  000FA6  5CF3               	subwf	prodl,w,c
  5926  000FA8  0E0A               	movlw	10
  5927  000FAA  B4D8               	btfsc	status,2,c
  5928  000FAC  5C35               	subwf	timer0_int_handler@i,w,c
  5929  000FAE  A0D8               	btfss	status,0,c
  5930  000FB0  D017               	goto	i2l1359
  5931                           
  5932                           ;user_interrupts.c: 41: {
  5933                           ;user_interrupts.c: 42: adcbuffer[i]=adcbuffer[i+1];
  5934  000FB2  0E01               	movlw	1
  5935  000FB4  2435               	addwf	timer0_int_handler@i,w,c
  5936  000FB6  6E33               	movwf	??_timer0_int_handler& (0+255),c
  5937  000FB8  0E00               	movlw	0
  5938  000FBA  2036               	addwfc	timer0_int_handler@i+1,w,c
  5939  000FBC  6E34               	movwf	(??_timer0_int_handler+1)& (0+255),c
  5940  000FBE  5033               	movf	??_timer0_int_handler,w,c
  5941  000FC0  2431               	addwf	timer0_int_handler@adcbuffer,w,c
  5942  000FC2  6ED9               	movwf	fsr2l,c
  5943  000FC4  5034               	movf	??_timer0_int_handler+1,w,c
  5944  000FC6  2032               	addwfc	timer0_int_handler@adcbuffer+1,w,c
  5945  000FC8  6EDA               	movwf	fsr2h,c
  5946  000FCA  5035               	movf	timer0_int_handler@i,w,c
  5947  000FCC  2431               	addwf	timer0_int_handler@adcbuffer,w,c
  5948  000FCE  6EE1               	movwf	fsr1l,c
  5949  000FD0  5036               	movf	timer0_int_handler@i+1,w,c
  5950  000FD2  2032               	addwfc	timer0_int_handler@adcbuffer+1,w,c
  5951  000FD4  6EE2               	movwf	fsr1h,c
  5952  000FD6  CFDF FFE7          	movff	indf2,indf1
  5953  000FDA  4A35               	infsnz	timer0_int_handler@i,f,c
  5954  000FDC  2A36               	incf	timer0_int_handler@i+1,f,c
  5955  000FDE  D7DF               	goto	L3
  5956  000FE0                     i2l1359:
  5957                           
  5958                           ;user_interrupts.c: 43: }
  5959                           ;user_interrupts.c: 44: }
  5960                           ;user_interrupts.c: 46: adcbuffer[adcbuffer[0]] = ADRESH;
  5961  000FE0  C031  FFD9         	movff	timer0_int_handler@adcbuffer,fsr2l
  5962  000FE4  C032  FFDA         	movff	timer0_int_handler@adcbuffer+1,fsr2h
  5963  000FE8  50DF               	movf	indf2,w,c
  5964  000FEA  6E33               	movwf	??_timer0_int_handler& (0+255),c
  5965  000FEC  5033               	movf	??_timer0_int_handler,w,c
  5966  000FEE  0D01               	mullw	1
  5967  000FF0  50F3               	movf	prodl,w,c
  5968  000FF2  2431               	addwf	timer0_int_handler@adcbuffer,w,c
  5969  000FF4  6ED9               	movwf	fsr2l,c
  5970  000FF6  50F4               	movf	prodh,w,c
  5971  000FF8  2032               	addwfc	timer0_int_handler@adcbuffer+1,w,c
  5972  000FFA  6EDA               	movwf	fsr2h,c
  5973  000FFC  CFC4 FFDF          	movff	4036,indf2	;volatile
  5974  001000  0012               	return	
  5975  001002                     __end_of_timer0_int_handler:
  5976                           	opt stack 0
  5977                           pclatu	equ	0xFFB
  5978                           pclath	equ	0xFFA
  5979                           tblptru	equ	0xFF8
  5980                           tblptrh	equ	0xFF7
  5981                           tblptrl	equ	0xFF6
  5982                           tablat	equ	0xFF5
  5983                           prodh	equ	0xFF4
  5984                           prodl	equ	0xFF3
  5985                           intcon	equ	0xFF2
  5986                           postinc0	equ	0xFEE
  5987                           fsr0h	equ	0xFEA
  5988                           fsr0l	equ	0xFE9
  5989                           wreg	equ	0xFE8
  5990                           indf1	equ	0xFE7
  5991                           fsr1h	equ	0xFE2
  5992                           fsr1l	equ	0xFE1
  5993                           bsr	equ	0xFE0
  5994                           indf2	equ	0xFDF
  5995                           postinc2	equ	0xFDE
  5996                           postdec2	equ	0xFDD
  5997                           fsr2h	equ	0xFDA
  5998                           fsr2l	equ	0xFD9
  5999                           status	equ	0xFD8
  6000                           
  6001 ;; *************** function i2_ConvertADC *****************
  6002 ;; Defined at:
  6003 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;		None
  6006 ;; Auto vars:     Size  Location     Type
  6007 ;;		None
  6008 ;; Return value:  Size  Location     Type
  6009 ;;		None               void
  6010 ;; Registers used:
  6011 ;;		None
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6017 ;;      Params:         0       0       0       0       0
  6018 ;;      Locals:         0       0       0       0       0
  6019 ;;      Temps:          0       0       0       0       0
  6020 ;;      Totals:         0       0       0       0       0
  6021 ;;Total ram usage:        0 bytes
  6022 ;; Hardware stack levels used:    1
  6023 ;; This function calls:
  6024 ;;		Nothing
  6025 ;; This function is called by:
  6026 ;;		_timer0_int_handler
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text42
  6031  001BBC                     __ptext42:
  6032                           	opt stack 0
  6033  001BBC                     i2_ConvertADC:
  6034                           	opt stack 19
  6035                           
  6036                           ;incstack = 0
  6037  001BBC  82C2               	bsf	4034,1,c	;volatile
  6038  001BBE  0012               	return	
  6039  001BC0                     __end_ofi2_ConvertADC:
  6040                           	opt stack 0
  6041                           pclatu	equ	0xFFB
  6042                           pclath	equ	0xFFA
  6043                           tblptru	equ	0xFF8
  6044                           tblptrh	equ	0xFF7
  6045                           tblptrl	equ	0xFF6
  6046                           tablat	equ	0xFF5
  6047                           prodh	equ	0xFF4
  6048                           prodl	equ	0xFF3
  6049                           intcon	equ	0xFF2
  6050                           postinc0	equ	0xFEE
  6051                           fsr0h	equ	0xFEA
  6052                           fsr0l	equ	0xFE9
  6053                           wreg	equ	0xFE8
  6054                           indf1	equ	0xFE7
  6055                           fsr1h	equ	0xFE2
  6056                           fsr1l	equ	0xFE1
  6057                           bsr	equ	0xFE0
  6058                           indf2	equ	0xFDF
  6059                           postinc2	equ	0xFDE
  6060                           postdec2	equ	0xFDD
  6061                           fsr2h	equ	0xFDA
  6062                           fsr2l	equ	0xFD9
  6063                           status	equ	0xFD8
  6064                           
  6065 ;; *************** function i2_BusyADC *****************
  6066 ;; Defined at:
  6067 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcbusy.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;		None
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;		None
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  1    wreg      unsigned char 
  6074 ;; Registers used:
  6075 ;;		wreg
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6081 ;;      Params:         0       0       0       0       0
  6082 ;;      Locals:         0       0       0       0       0
  6083 ;;      Temps:          0       0       0       0       0
  6084 ;;      Totals:         0       0       0       0       0
  6085 ;;Total ram usage:        0 bytes
  6086 ;; Hardware stack levels used:    1
  6087 ;; This function calls:
  6088 ;;		Nothing
  6089 ;; This function is called by:
  6090 ;;		_timer0_int_handler
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text43
  6095  001B92                     __ptext43:
  6096                           	opt stack 0
  6097  001B92                     i2_BusyADC:
  6098                           	opt stack 19
  6099                           
  6100                           ;incstack = 0
  6101  001B92  A2C2               	btfss	4034,1,c	;volatile
  6102  001B94  D002               	goto	i2u93_40
  6103  001B96  0E01               	movlw	1
  6104  001B98  0012               	return	
  6105  001B9A                     i2u93_40:
  6106  001B9A  0E00               	movlw	0
  6107  001B9C  0012               	return	
  6108  001B9E                     __end_ofi2_BusyADC:
  6109                           	opt stack 0
  6110                           pclatu	equ	0xFFB
  6111                           pclath	equ	0xFFA
  6112                           tblptru	equ	0xFF8
  6113                           tblptrh	equ	0xFF7
  6114                           tblptrl	equ	0xFF6
  6115                           tablat	equ	0xFF5
  6116                           prodh	equ	0xFF4
  6117                           prodl	equ	0xFF3
  6118                           intcon	equ	0xFF2
  6119                           postinc0	equ	0xFEE
  6120                           fsr0h	equ	0xFEA
  6121                           fsr0l	equ	0xFE9
  6122                           wreg	equ	0xFE8
  6123                           indf1	equ	0xFE7
  6124                           fsr1h	equ	0xFE2
  6125                           fsr1l	equ	0xFE1
  6126                           bsr	equ	0xFE0
  6127                           indf2	equ	0xFDF
  6128                           postinc2	equ	0xFDE
  6129                           postdec2	equ	0xFDD
  6130                           fsr2h	equ	0xFDA
  6131                           fsr2l	equ	0xFD9
  6132                           status	equ	0xFD8
  6133                           
  6134 ;; *************** function _WriteTimer0 *****************
  6135 ;; Defined at:
  6136 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;  timer0          2   44[COMRAM] unsigned int 
  6139 ;; Auto vars:     Size  Location     Type
  6140 ;;  timer           2   46[COMRAM] struct Timers
  6141 ;; Return value:  Size  Location     Type
  6142 ;;		None               void
  6143 ;; Registers used:
  6144 ;;		None
  6145 ;; Tracked objects:
  6146 ;;		On entry : 0/0
  6147 ;;		On exit  : 0/0
  6148 ;;		Unchanged: 0/0
  6149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6150 ;;      Params:         2       0       0       0       0
  6151 ;;      Locals:         2       0       0       0       0
  6152 ;;      Temps:          0       0       0       0       0
  6153 ;;      Totals:         4       0       0       0       0
  6154 ;;Total ram usage:        4 bytes
  6155 ;; Hardware stack levels used:    1
  6156 ;; This function calls:
  6157 ;;		Nothing
  6158 ;; This function is called by:
  6159 ;;		_timer0_int_handler
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text44
  6164  001B66                     __ptext44:
  6165                           	opt stack 0
  6166  001B66                     _WriteTimer0:
  6167                           	opt stack 19
  6168                           
  6169                           ;incstack = 0
  6170  001B66  C02D  F02F         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6171  001B6A  C02E  F030         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6172  001B6E  C030  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6173  001B72  C02F  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6174  001B76  0012               	return	
  6175  001B78                     __end_of_WriteTimer0:
  6176                           	opt stack 0
  6177                           pclatu	equ	0xFFB
  6178                           pclath	equ	0xFFA
  6179                           tblptru	equ	0xFF8
  6180                           tblptrh	equ	0xFF7
  6181                           tblptrl	equ	0xFF6
  6182                           tablat	equ	0xFF5
  6183                           prodh	equ	0xFF4
  6184                           prodl	equ	0xFF3
  6185                           intcon	equ	0xFF2
  6186                           postinc0	equ	0xFEE
  6187                           fsr0h	equ	0xFEA
  6188                           fsr0l	equ	0xFE9
  6189                           wreg	equ	0xFE8
  6190                           indf1	equ	0xFE7
  6191                           fsr1h	equ	0xFE2
  6192                           fsr1l	equ	0xFE1
  6193                           bsr	equ	0xFE0
  6194                           indf2	equ	0xFDF
  6195                           postinc2	equ	0xFDE
  6196                           postdec2	equ	0xFDD
  6197                           fsr2h	equ	0xFDA
  6198                           fsr2l	equ	0xFD9
  6199                           status	equ	0xFD8
  6200                           
  6201 ;; *************** function _i2c_int_handler *****************
  6202 ;; Defined at:
  6203 ;;		line 100 in file "../src/my_i2c.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;  adcbuffer       2    1[BANK0 ] PTR unsigned char 
  6206 ;;		 -> adcbuffer(10), 
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;  length          2    5[BANK0 ] int 
  6209 ;;  error_buf       3    7[BANK0 ] unsigned char [3]
  6210 ;;  data_read       1   15[BANK0 ] unsigned char 
  6211 ;;  msg_ready       1   14[BANK0 ] unsigned char 
  6212 ;;  msg_to_send     1   13[BANK0 ] unsigned char 
  6213 ;;  i2c_data        1   12[BANK0 ] unsigned char 
  6214 ;;  overrun_erro    1   11[BANK0 ] unsigned char 
  6215 ;;  data_written    1   10[BANK0 ] unsigned char 
  6216 ;; Return value:  Size  Location     Type
  6217 ;;		None               void
  6218 ;; Registers used:
  6219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6225 ;;      Params:         0       2       0       0       0
  6226 ;;      Locals:         0      11       0       0       0
  6227 ;;      Temps:          0       2       0       0       0
  6228 ;;      Totals:         0      15       0       0       0
  6229 ;;Total ram usage:       15 bytes
  6230 ;; Hardware stack levels used:    1
  6231 ;; Hardware stack levels required when called:    3
  6232 ;; This function calls:
  6233 ;;		_ToMainHigh_sendmsg
  6234 ;;		_handle_start
  6235 ;;		i2_start_i2c_slave_reply
  6236 ;; This function is called by:
  6237 ;;		_InterruptHandlerHigh
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text45
  6242  0000C2                     __ptext45:
  6243                           	opt stack 0
  6244  0000C2                     _i2c_int_handler:
  6245                           	opt stack 17
  6246                           
  6247                           ;my_i2c.c: 101: unsigned char i2c_data;
  6248                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6249                           
  6250                           ;incstack = 0
  6251  0000C2  0100               	movlb	0	; () banked
  6252  0000C4  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6253  0000C6  0E00               	movlw	0
  6254  0000C8  0100               	movlb	0	; () banked
  6255  0000CA  0100               	movlb	0	; () banked
  6256  0000CC  6FC5               	movwf	i2c_int_handler@data_read& (0+255),b
  6257  0000CE  0100               	movlb	0	; () banked
  6258  0000D0  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  6259                           
  6260                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6261  0000D2  0100               	movlb	0	; () banked
  6262  0000D4  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6263  0000D6  0E00               	movlw	0
  6264  0000D8  0100               	movlb	0	; () banked
  6265  0000DA  0100               	movlb	0	; () banked
  6266  0000DC  6FC0               	movwf	i2c_int_handler@data_written& (0+255),b
  6267  0000DE  0100               	movlb	0	; () banked
  6268  0000E0  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  6269                           
  6270                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6271  0000E2  0100               	movlb	0	; () banked
  6272  0000E4  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6273  0000E6  0E00               	movlw	0
  6274  0000E8  0100               	movlb	0	; () banked
  6275  0000EA  0100               	movlb	0	; () banked
  6276  0000EC  6FC4               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6277  0000EE  0100               	movlb	0	; () banked
  6278  0000F0  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  6279                           
  6280                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6281  0000F2  0100               	movlb	0	; () banked
  6282  0000F4  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6283  0000F6  0E00               	movlw	0
  6284  0000F8  0100               	movlb	0	; () banked
  6285  0000FA  0100               	movlb	0	; () banked
  6286  0000FC  6FC3               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6287  0000FE  0100               	movlb	0	; () banked
  6288  000100  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  6289                           
  6290                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6291  000102  0100               	movlb	0	; () banked
  6292  000104  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6293  000106  0E00               	movlw	0
  6294  000108  0100               	movlb	0	; () banked
  6295  00010A  0100               	movlb	0	; () banked
  6296  00010C  6FC1               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6297  00010E  0100               	movlb	0	; () banked
  6298  000110  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6302                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6303  000112  ACC6               	btfss	4038,6,c	;volatile
  6304  000114  D029               	goto	i2l2943
  6305                           
  6306                           ; BSR set to: 0
  6307                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6308  000116  9CC6               	bcf	4038,6,c	;volatile
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6312  000118  0100               	movlb	0	; () banked
  6313  00011A  EE20 F00C          	lfsr	2,12
  6314  00011E  0100               	movlb	0	; () banked
  6315  000120  51E0               	movf	_ic_ptr& (0+255),w,b
  6316  000122  26D9               	addwf	fsr2l,f,c
  6317  000124  0100               	movlb	0	; () banked
  6318  000126  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6319  000128  22DA               	addwfc	fsr2h,f,c
  6320  00012A  0E05               	movlw	5
  6321  00012C  6EDF               	movwf	indf2,c
  6322                           
  6323                           ; BSR set to: 0
  6324                           ;my_i2c.c: 116: overrun_error = 1;
  6325  00012E  0100               	movlb	0	; () banked
  6326  000130  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6327  000132  0E01               	movlw	1
  6328  000134  0100               	movlb	0	; () banked
  6329  000136  0100               	movlb	0	; () banked
  6330  000138  6FC1               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6331  00013A  0100               	movlb	0	; () banked
  6332  00013C  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6336  00013E  0100               	movlb	0	; () banked
  6337  000140  EE20 F00E          	lfsr	2,14
  6338  000144  0100               	movlb	0	; () banked
  6339  000146  51E0               	movf	_ic_ptr& (0+255),w,b
  6340  000148  26D9               	addwf	fsr2l,f,c
  6341  00014A  0100               	movlb	0	; () banked
  6342  00014C  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6343  00014E  22DA               	addwfc	fsr2h,f,c
  6344  000150  2ADF               	incf	indf2,f,c
  6345                           
  6346                           ; BSR set to: 0
  6347                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  6348  000152  0100               	movlb	0	; () banked
  6349  000154  EE20 F00D          	lfsr	2,13
  6350  000158  0100               	movlb	0	; () banked
  6351  00015A  51E0               	movf	_ic_ptr& (0+255),w,b
  6352  00015C  26D9               	addwf	fsr2l,f,c
  6353  00015E  0100               	movlb	0	; () banked
  6354  000160  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6355  000162  22DA               	addwfc	fsr2h,f,c
  6356  000164  0E04               	movlw	4
  6357  000166  6EDF               	movwf	indf2,c
  6358  000168                     i2l2943:
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;my_i2c.c: 119: }
  6362                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  6363  000168  A0C7               	btfss	4039,0,c	;volatile
  6364  00016A  D00A               	goto	i2l2949
  6365                           
  6366                           ; BSR set to: 0
  6367                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  6368  00016C  CFC9 F0C2          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6369                           
  6370                           ; BSR set to: 0
  6371                           ;my_i2c.c: 123: data_read = 1;
  6372  000170  0100               	movlb	0	; () banked
  6373  000172  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6374  000174  0E01               	movlw	1
  6375  000176  0100               	movlb	0	; () banked
  6376  000178  0100               	movlb	0	; () banked
  6377  00017A  6FC5               	movwf	i2c_int_handler@data_read& (0+255),b
  6378  00017C  0100               	movlb	0	; () banked
  6379  00017E  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  6380  000180                     i2l2949:
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;my_i2c.c: 124: }
  6384                           ;my_i2c.c: 126: if (!overrun_error) {
  6385  000180  0100               	movlb	0	; () banked
  6386  000182  0100               	movlb	0	; () banked
  6387  000184  67C1               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6388  000186  D1CE               	goto	i2l282
  6389  000188  D1B7               	goto	i2l3037
  6390  00018A                     i2l284:
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;my_i2c.c: 129: {
  6394                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  6395  00018A  A6C7               	btfss	4039,3,c	;volatile
  6396  00018C  D1CB               	goto	i2l282
  6397                           
  6398                           ; BSR set to: 0
  6399                           ;my_i2c.c: 132: handle_start(data_read);
  6400  00018E  0100               	movlb	0	; () banked
  6401  000190  0100               	movlb	0	; () banked
  6402  000192  51C5               	movf	i2c_int_handler@data_read& (0+255),w,b
  6403  000194  EC43  F007         	call	_handle_start
  6404                           
  6405                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  6406  000198  0100               	movlb	0	; () banked
  6407  00019A  EE20 F00C          	lfsr	2,12
  6408  00019E  0100               	movlb	0	; () banked
  6409  0001A0  51E0               	movf	_ic_ptr& (0+255),w,b
  6410  0001A2  26D9               	addwf	fsr2l,f,c
  6411  0001A4  0100               	movlb	0	; () banked
  6412  0001A6  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6413  0001A8  22DA               	addwfc	fsr2h,f,c
  6414  0001AA  0E08               	movlw	8
  6415  0001AC  62DF               	cpfseq	indf2,c
  6416  0001AE  D1BA               	goto	i2l282
  6417                           
  6418                           ; BSR set to: 0
  6419                           ;my_i2c.c: 135: data_read = 0;
  6420  0001B0  0100               	movlb	0	; () banked
  6421  0001B2  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6422  0001B4  0E00               	movlw	0
  6423  0001B6  0100               	movlb	0	; () banked
  6424  0001B8  0100               	movlb	0	; () banked
  6425  0001BA  6FC5               	movwf	i2c_int_handler@data_read& (0+255),b
  6426  0001BC  0100               	movlb	0	; () banked
  6427  0001BE  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  6428                           
  6429                           ;my_i2c.c: 136: msg_to_send = 1;
  6430  0001C0  0100               	movlb	0	; () banked
  6431  0001C2  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6432  0001C4  0E01               	movlw	1
  6433  0001C6  0100               	movlb	0	; () banked
  6434  0001C8  0100               	movlb	0	; () banked
  6435  0001CA  6FC3               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6436  0001CC  D187               	goto	L9
  6437  0001CE                     i2l288:
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;my_i2c.c: 142: {
  6441                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  6442  0001CE  A8C7               	btfss	4039,4,c	;volatile
  6443  0001D0  D030               	goto	i2l2969
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;my_i2c.c: 147: ic_ptr->event_count++;
  6447  0001D2  0100               	movlb	0	; () banked
  6448  0001D4  EE20 F00B          	lfsr	2,11
  6449  0001D8  0100               	movlb	0	; () banked
  6450  0001DA  51E0               	movf	_ic_ptr& (0+255),w,b
  6451  0001DC  26D9               	addwf	fsr2l,f,c
  6452  0001DE  0100               	movlb	0	; () banked
  6453  0001E0  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6454  0001E2  22DA               	addwfc	fsr2h,f,c
  6455  0001E4  2ADF               	incf	indf2,f,c
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;my_i2c.c: 148: if (data_read) {
  6459  0001E6  0100               	movlb	0	; () banked
  6460  0001E8  0100               	movlb	0	; () banked
  6461  0001EA  51C5               	movf	i2c_int_handler@data_read& (0+255),w,b
  6462  0001EC  B4D8               	btfsc	status,2,c
  6463  0001EE  D179               	goto	L11
  6464                           
  6465                           ; BSR set to: 0
  6466                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  6467  0001F0  BAC7               	btfsc	4039,5,c	;volatile
  6468  0001F2  D009               	goto	i2l2967
  6469                           
  6470                           ; BSR set to: 0
  6471                           ;my_i2c.c: 150: msg_ready = 1;
  6472  0001F4  0100               	movlb	0	; () banked
  6473  0001F6  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6474  0001F8  0E01               	movlw	1
  6475  0001FA  0100               	movlb	0	; () banked
  6476  0001FC  0100               	movlb	0	; () banked
  6477  0001FE  6FC4               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6478  000200  0100               	movlb	0	; () banked
  6479  000202  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  6480                           
  6481                           ;my_i2c.c: 151: } else {
  6482  000204  D16E               	goto	L11
  6483  000206                     i2l2967:
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;my_i2c.c: 152: ic_ptr->error_count++;
  6487  000206  0100               	movlb	0	; () banked
  6488  000208  EE20 F00E          	lfsr	2,14
  6489  00020C  0100               	movlb	0	; () banked
  6490  00020E  51E0               	movf	_ic_ptr& (0+255),w,b
  6491  000210  26D9               	addwf	fsr2l,f,c
  6492  000212  0100               	movlb	0	; () banked
  6493  000214  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6494  000216  22DA               	addwfc	fsr2h,f,c
  6495  000218  2ADF               	incf	indf2,f,c
  6496                           
  6497                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  6498  00021A  0100               	movlb	0	; () banked
  6499  00021C  EE20 F00D          	lfsr	2,13
  6500  000220  0100               	movlb	0	; () banked
  6501  000222  51E0               	movf	_ic_ptr& (0+255),w,b
  6502  000224  26D9               	addwf	fsr2l,f,c
  6503  000226  0100               	movlb	0	; () banked
  6504  000228  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6505  00022A  22DA               	addwfc	fsr2h,f,c
  6506  00022C  0E06               	movlw	6
  6507  00022E  6EDF               	movwf	indf2,c
  6508                           
  6509                           ; BSR set to: 0
  6510  000230  D158               	goto	L11
  6511  000232                     i2l2969:
  6512                           
  6513                           ; BSR set to: 0
  6514  000232  0100               	movlb	0	; () banked
  6515  000234  0100               	movlb	0	; () banked
  6516  000236  51C5               	movf	i2c_int_handler@data_read& (0+255),w,b
  6517  000238  B4D8               	btfsc	status,2,c
  6518  00023A  D174               	goto	i2l282
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;my_i2c.c: 158: ic_ptr->event_count++;
  6522  00023C  0100               	movlb	0	; () banked
  6523  00023E  EE20 F00B          	lfsr	2,11
  6524  000242  0100               	movlb	0	; () banked
  6525  000244  51E0               	movf	_ic_ptr& (0+255),w,b
  6526  000246  26D9               	addwf	fsr2l,f,c
  6527  000248  0100               	movlb	0	; () banked
  6528  00024A  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6529  00024C  22DA               	addwfc	fsr2h,f,c
  6530  00024E  2ADF               	incf	indf2,f,c
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  6534  000250  BAC7               	btfsc	4039,5,c	;volatile
  6535  000252  D019               	goto	i2l2985
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  6539  000254  B4C7               	btfsc	4039,2,c	;volatile
  6540  000256  D00B               	goto	i2l2979
  6541                           
  6542                           ; BSR set to: 0
  6543                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  6544  000258  0100               	movlb	0	; () banked
  6545  00025A  EE20 F00C          	lfsr	2,12
  6546  00025E  0100               	movlb	0	; () banked
  6547  000260  51E0               	movf	_ic_ptr& (0+255),w,b
  6548  000262  26D9               	addwf	fsr2l,f,c
  6549  000264  0100               	movlb	0	; () banked
  6550  000266  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6551  000268  22DA               	addwfc	fsr2h,f,c
  6552  00026A  0E07               	movlw	7
  6553  00026C  D076               	goto	L8
  6554  00026E                     i2l2979:
  6555                           
  6556                           ; BSR set to: 0
  6557                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  6558  00026E  0100               	movlb	0	; () banked
  6559  000270  EE20 F00C          	lfsr	2,12
  6560  000274  0100               	movlb	0	; () banked
  6561  000276  51E0               	movf	_ic_ptr& (0+255),w,b
  6562  000278  26D9               	addwf	fsr2l,f,c
  6563  00027A  0100               	movlb	0	; () banked
  6564  00027C  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6565  00027E  22DA               	addwfc	fsr2h,f,c
  6566  000280  0E08               	movlw	8
  6567  000282  6EDF               	movwf	indf2,c
  6568  000284  D11D               	goto	L12
  6569  000286                     i2l2985:
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;my_i2c.c: 169: ic_ptr->error_count++;
  6573  000286  0100               	movlb	0	; () banked
  6574  000288  EE20 F00E          	lfsr	2,14
  6575  00028C  0100               	movlb	0	; () banked
  6576  00028E  51E0               	movf	_ic_ptr& (0+255),w,b
  6577  000290  26D9               	addwf	fsr2l,f,c
  6578  000292  0100               	movlb	0	; () banked
  6579  000294  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6580  000296  22DA               	addwfc	fsr2h,f,c
  6581  000298  2ADF               	incf	indf2,f,c
  6582                           
  6583                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  6584  00029A  0100               	movlb	0	; () banked
  6585  00029C  EE20 F00C          	lfsr	2,12
  6586  0002A0  0100               	movlb	0	; () banked
  6587  0002A2  51E0               	movf	_ic_ptr& (0+255),w,b
  6588  0002A4  26D9               	addwf	fsr2l,f,c
  6589  0002A6  0100               	movlb	0	; () banked
  6590  0002A8  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6591  0002AA  22DA               	addwfc	fsr2h,f,c
  6592  0002AC  0E05               	movlw	5
  6593  0002AE  6EDF               	movwf	indf2,c
  6594                           
  6595                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  6596  0002B0  0100               	movlb	0	; () banked
  6597  0002B2  EE20 F00D          	lfsr	2,13
  6598  0002B6  0100               	movlb	0	; () banked
  6599  0002B8  51E0               	movf	_ic_ptr& (0+255),w,b
  6600  0002BA  26D9               	addwf	fsr2l,f,c
  6601  0002BC  0100               	movlb	0	; () banked
  6602  0002BE  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6603  0002C0  22DA               	addwfc	fsr2h,f,c
  6604  0002C2  0E06               	movlw	6
  6605  0002C4  D04A               	goto	L8
  6606  0002C6                     i2l2987:
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;my_i2c.c: 177: {
  6610                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6611  0002C6  0100               	movlb	0	; () banked
  6612  0002C8  EE20 F01A          	lfsr	2,26
  6613  0002CC  0100               	movlb	0	; () banked
  6614  0002CE  51E0               	movf	_ic_ptr& (0+255),w,b
  6615  0002D0  26D9               	addwf	fsr2l,f,c
  6616  0002D2  0100               	movlb	0	; () banked
  6617  0002D4  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6618  0002D6  22DA               	addwfc	fsr2h,f,c
  6619  0002D8  50DF               	movf	indf2,w,c
  6620  0002DA  0100               	movlb	0	; () banked
  6621  0002DC  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6622  0002DE  0100               	movlb	0	; () banked
  6623  0002E0  EE20 F019          	lfsr	2,25
  6624  0002E4  0100               	movlb	0	; () banked
  6625  0002E6  51E0               	movf	_ic_ptr& (0+255),w,b
  6626  0002E8  26D9               	addwf	fsr2l,f,c
  6627  0002EA  0100               	movlb	0	; () banked
  6628  0002EC  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6629  0002EE  22DA               	addwfc	fsr2h,f,c
  6630  0002F0  50DF               	movf	indf2,w,c
  6631  0002F2  0100               	movlb	0	; () banked
  6632  0002F4  5DB9               	subwf	??_i2c_int_handler& (0+255),w,b
  6633  0002F6  B0D8               	btfsc	status,0,c
  6634  0002F8  D0F4               	goto	L11
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6638  0002FA  0100               	movlb	0	; () banked
  6639  0002FC  EE20 F01A          	lfsr	2,26
  6640  000300  0100               	movlb	0	; () banked
  6641  000302  51E0               	movf	_ic_ptr& (0+255),w,b
  6642  000304  26D9               	addwf	fsr2l,f,c
  6643  000306  0100               	movlb	0	; () banked
  6644  000308  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6645  00030A  22DA               	addwfc	fsr2h,f,c
  6646  00030C  50DF               	movf	indf2,w,c
  6647  00030E  0100               	movlb	0	; () banked
  6648  000310  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6649  000312  0100               	movlb	0	; () banked
  6650  000314  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  6651  000316  0D01               	mullw	1
  6652  000318  0E0F               	movlw	15
  6653  00031A  26F3               	addwf	prodl,f,c
  6654  00031C  0E00               	movlw	0
  6655  00031E  22F4               	addwfc	prodh,f,c
  6656  000320  50F3               	movf	prodl,w,c
  6657  000322  0100               	movlb	0	; () banked
  6658  000324  0100               	movlb	0	; () banked
  6659  000326  25E0               	addwf	_ic_ptr& (0+255),w,b
  6660  000328  6ED9               	movwf	fsr2l,c
  6661  00032A  50F4               	movf	prodh,w,c
  6662  00032C  0100               	movlb	0	; () banked
  6663  00032E  0100               	movlb	0	; () banked
  6664  000330  21E1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6665  000332  6EDA               	movwf	fsr2h,c
  6666  000334  50DF               	movf	indf2,w,c
  6667  000336  6EC9               	movwf	4041,c	;volatile
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  6671  000338  0100               	movlb	0	; () banked
  6672  00033A  EE20 F01A          	lfsr	2,26
  6673  00033E  0100               	movlb	0	; () banked
  6674  000340  51E0               	movf	_ic_ptr& (0+255),w,b
  6675  000342  26D9               	addwf	fsr2l,f,c
  6676  000344  0100               	movlb	0	; () banked
  6677  000346  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6678  000348  22DA               	addwfc	fsr2h,f,c
  6679  00034A  2ADF               	incf	indf2,f,c
  6680                           
  6681                           ; BSR set to: 0
  6682                           ;my_i2c.c: 181: data_written = 1;
  6683  00034C  0100               	movlb	0	; () banked
  6684  00034E  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6685  000350  0E01               	movlw	1
  6686  000352  0100               	movlb	0	; () banked
  6687  000354  0100               	movlb	0	; () banked
  6688  000356  6FC0               	movwf	i2c_int_handler@data_written& (0+255),b
  6689  000358  D0C1               	goto	L9
  6690  00035A                     L8:
  6691  00035A  6EDF               	movwf	indf2,c
  6692  00035C  D0E3               	goto	i2l282
  6693  00035E                     i2l302:
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;my_i2c.c: 189: {
  6697                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  6698  00035E  A8C7               	btfss	4039,4,c	;volatile
  6699  000360  D062               	goto	i2l3015
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;my_i2c.c: 193: ic_ptr->event_count++;
  6703  000362  0100               	movlb	0	; () banked
  6704  000364  EE20 F00B          	lfsr	2,11
  6705  000368  0100               	movlb	0	; () banked
  6706  00036A  51E0               	movf	_ic_ptr& (0+255),w,b
  6707  00036C  26D9               	addwf	fsr2l,f,c
  6708  00036E  0100               	movlb	0	; () banked
  6709  000370  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6710  000372  22DA               	addwfc	fsr2h,f,c
  6711  000374  2ADF               	incf	indf2,f,c
  6712                           
  6713                           ; BSR set to: 0
  6714                           ;my_i2c.c: 194: if (data_read) {
  6715  000376  0100               	movlb	0	; () banked
  6716  000378  0100               	movlb	0	; () banked
  6717  00037A  51C5               	movf	i2c_int_handler@data_read& (0+255),w,b
  6718  00037C  B4D8               	btfsc	status,2,c
  6719  00037E  D04A               	goto	i2l3011
  6720                           
  6721                           ; BSR set to: 0
  6722                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  6723  000380  AAC7               	btfss	4039,5,c	;volatile
  6724  000382  D027               	goto	i2l3009
  6725                           
  6726                           ; BSR set to: 0
  6727                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6728  000384  0100               	movlb	0	; () banked
  6729  000386  EE20 F00A          	lfsr	2,10
  6730  00038A  0100               	movlb	0	; () banked
  6731  00038C  51E0               	movf	_ic_ptr& (0+255),w,b
  6732  00038E  26D9               	addwf	fsr2l,f,c
  6733  000390  0100               	movlb	0	; () banked
  6734  000392  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6735  000394  22DA               	addwfc	fsr2h,f,c
  6736  000396  50DF               	movf	indf2,w,c
  6737  000398  0100               	movlb	0	; () banked
  6738  00039A  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6739  00039C  0100               	movlb	0	; () banked
  6740  00039E  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  6741  0003A0  0D01               	mullw	1
  6742  0003A2  50F3               	movf	prodl,w,c
  6743  0003A4  0100               	movlb	0	; () banked
  6744  0003A6  0100               	movlb	0	; () banked
  6745  0003A8  25E0               	addwf	_ic_ptr& (0+255),w,b
  6746  0003AA  6ED9               	movwf	fsr2l,c
  6747  0003AC  50F4               	movf	prodh,w,c
  6748  0003AE  0100               	movlb	0	; () banked
  6749  0003B0  0100               	movlb	0	; () banked
  6750  0003B2  21E1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6751  0003B4  6EDA               	movwf	fsr2h,c
  6752  0003B6  0100               	movlb	0	; () banked
  6753  0003B8  C0C2  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;my_i2c.c: 197: ic_ptr->buflen++;
  6757  0003BC  0100               	movlb	0	; () banked
  6758  0003BE  EE20 F00A          	lfsr	2,10
  6759  0003C2  0100               	movlb	0	; () banked
  6760  0003C4  51E0               	movf	_ic_ptr& (0+255),w,b
  6761  0003C6  26D9               	addwf	fsr2l,f,c
  6762  0003C8  0100               	movlb	0	; () banked
  6763  0003CA  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6764  0003CC  22DA               	addwfc	fsr2h,f,c
  6765  0003CE  2ADF               	incf	indf2,f,c
  6766  0003D0  D021               	goto	i2l3011
  6767  0003D2                     i2l3009:
  6768                           
  6769                           ; BSR set to: 0
  6770                           ;my_i2c.c: 200: ic_ptr->error_count++;
  6771  0003D2  0100               	movlb	0	; () banked
  6772  0003D4  EE20 F00E          	lfsr	2,14
  6773  0003D8  0100               	movlb	0	; () banked
  6774  0003DA  51E0               	movf	_ic_ptr& (0+255),w,b
  6775  0003DC  26D9               	addwf	fsr2l,f,c
  6776  0003DE  0100               	movlb	0	; () banked
  6777  0003E0  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6778  0003E2  22DA               	addwfc	fsr2h,f,c
  6779  0003E4  2ADF               	incf	indf2,f,c
  6780                           
  6781                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  6782  0003E6  0100               	movlb	0	; () banked
  6783  0003E8  EE20 F00D          	lfsr	2,13
  6784  0003EC  0100               	movlb	0	; () banked
  6785  0003EE  51E0               	movf	_ic_ptr& (0+255),w,b
  6786  0003F0  26D9               	addwf	fsr2l,f,c
  6787  0003F2  0100               	movlb	0	; () banked
  6788  0003F4  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6789  0003F6  22DA               	addwfc	fsr2h,f,c
  6790  0003F8  0E06               	movlw	6
  6791  0003FA  6EDF               	movwf	indf2,c
  6792                           
  6793                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  6794  0003FC  0100               	movlb	0	; () banked
  6795  0003FE  EE20 F00C          	lfsr	2,12
  6796  000402  0100               	movlb	0	; () banked
  6797  000404  51E0               	movf	_ic_ptr& (0+255),w,b
  6798  000406  26D9               	addwf	fsr2l,f,c
  6799  000408  0100               	movlb	0	; () banked
  6800  00040A  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6801  00040C  22DA               	addwfc	fsr2h,f,c
  6802  00040E  0E05               	movlw	5
  6803  000410  6EDF               	movwf	indf2,c
  6804  000412  D067               	goto	L11
  6805  000414                     i2l3011:
  6806                           
  6807                           ; BSR set to: 0
  6808                           ;my_i2c.c: 205: msg_ready = 1;
  6809  000414  0100               	movlb	0	; () banked
  6810  000416  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6811  000418  0E01               	movlw	1
  6812  00041A  0100               	movlb	0	; () banked
  6813  00041C  0100               	movlb	0	; () banked
  6814  00041E  6FC4               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6815  000420  0100               	movlb	0	; () banked
  6816  000422  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  6817                           
  6818                           ; BSR set to: 0
  6819  000424  D05E               	goto	L11
  6820  000426                     i2l3015:
  6821                           
  6822                           ; BSR set to: 0
  6823  000426  0100               	movlb	0	; () banked
  6824  000428  0100               	movlb	0	; () banked
  6825  00042A  51C5               	movf	i2c_int_handler@data_read& (0+255),w,b
  6826  00042C  B4D8               	btfsc	status,2,c
  6827  00042E  D07A               	goto	i2l282
  6828                           
  6829                           ; BSR set to: 0
  6830                           ;my_i2c.c: 209: ic_ptr->event_count++;
  6831  000430  0100               	movlb	0	; () banked
  6832  000432  EE20 F00B          	lfsr	2,11
  6833  000436  0100               	movlb	0	; () banked
  6834  000438  51E0               	movf	_ic_ptr& (0+255),w,b
  6835  00043A  26D9               	addwf	fsr2l,f,c
  6836  00043C  0100               	movlb	0	; () banked
  6837  00043E  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6838  000440  22DA               	addwfc	fsr2h,f,c
  6839  000442  2ADF               	incf	indf2,f,c
  6840                           
  6841                           ; BSR set to: 0
  6842                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  6843  000444  AAC7               	btfss	4039,5,c	;volatile
  6844  000446  D027               	goto	i2l310
  6845                           
  6846                           ; BSR set to: 0
  6847                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6848  000448  0100               	movlb	0	; () banked
  6849  00044A  EE20 F00A          	lfsr	2,10
  6850  00044E  0100               	movlb	0	; () banked
  6851  000450  51E0               	movf	_ic_ptr& (0+255),w,b
  6852  000452  26D9               	addwf	fsr2l,f,c
  6853  000454  0100               	movlb	0	; () banked
  6854  000456  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6855  000458  22DA               	addwfc	fsr2h,f,c
  6856  00045A  50DF               	movf	indf2,w,c
  6857  00045C  0100               	movlb	0	; () banked
  6858  00045E  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6859  000460  0100               	movlb	0	; () banked
  6860  000462  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  6861  000464  0D01               	mullw	1
  6862  000466  50F3               	movf	prodl,w,c
  6863  000468  0100               	movlb	0	; () banked
  6864  00046A  0100               	movlb	0	; () banked
  6865  00046C  25E0               	addwf	_ic_ptr& (0+255),w,b
  6866  00046E  6ED9               	movwf	fsr2l,c
  6867  000470  50F4               	movf	prodh,w,c
  6868  000472  0100               	movlb	0	; () banked
  6869  000474  0100               	movlb	0	; () banked
  6870  000476  21E1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6871  000478  6EDA               	movwf	fsr2h,c
  6872  00047A  0100               	movlb	0	; () banked
  6873  00047C  C0C2  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;my_i2c.c: 212: ic_ptr->buflen++;
  6877  000480  0100               	movlb	0	; () banked
  6878  000482  EE20 F00A          	lfsr	2,10
  6879  000486  0100               	movlb	0	; () banked
  6880  000488  51E0               	movf	_ic_ptr& (0+255),w,b
  6881  00048A  26D9               	addwf	fsr2l,f,c
  6882  00048C  0100               	movlb	0	; () banked
  6883  00048E  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6884  000490  22DA               	addwfc	fsr2h,f,c
  6885  000492  2ADF               	incf	indf2,f,c
  6886                           
  6887                           ;my_i2c.c: 213: } else {
  6888  000494  D047               	goto	i2l282
  6889  000496                     i2l310:
  6890                           
  6891                           ; BSR set to: 0
  6892                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  6893  000496  A4C7               	btfss	4039,2,c	;volatile
  6894  000498  D6B6               	goto	i2l2967
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  6898  00049A  0100               	movlb	0	; () banked
  6899  00049C  EE20 F00C          	lfsr	2,12
  6900  0004A0  0100               	movlb	0	; () banked
  6901  0004A2  51E0               	movf	_ic_ptr& (0+255),w,b
  6902  0004A4  26D9               	addwf	fsr2l,f,c
  6903  0004A6  0100               	movlb	0	; () banked
  6904  0004A8  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6905  0004AA  22DA               	addwfc	fsr2h,f,c
  6906  0004AC  0E08               	movlw	8
  6907  0004AE  6EDF               	movwf	indf2,c
  6908                           
  6909                           ; BSR set to: 0
  6910                           ;my_i2c.c: 216: msg_ready = 1;
  6911  0004B0  0100               	movlb	0	; () banked
  6912  0004B2  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6913  0004B4  0E01               	movlw	1
  6914  0004B6  0100               	movlb	0	; () banked
  6915  0004B8  0100               	movlb	0	; () banked
  6916  0004BA  6FC4               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6917  0004BC  0100               	movlb	0	; () banked
  6918  0004BE  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  6919  0004C0                     L12:
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;my_i2c.c: 217: msg_to_send = 1;
  6923  0004C0  0100               	movlb	0	; () banked
  6924  0004C2  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6925  0004C4  0E01               	movlw	1
  6926  0004C6  0100               	movlb	0	; () banked
  6927  0004C8  0100               	movlb	0	; () banked
  6928  0004CA  6FC3               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6929  0004CC  0100               	movlb	0	; () banked
  6930  0004CE  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;my_i2c.c: 219: data_read = 0;
  6934  0004D0  0100               	movlb	0	; () banked
  6935  0004D2  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  6936  0004D4  0E00               	movlw	0
  6937  0004D6  0100               	movlb	0	; () banked
  6938  0004D8  0100               	movlb	0	; () banked
  6939  0004DA  6FC5               	movwf	i2c_int_handler@data_read& (0+255),b
  6940  0004DC                     L9:
  6941  0004DC  0100               	movlb	0	; () banked
  6942  0004DE  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  6943                           
  6944                           ;my_i2c.c: 220: } else {
  6945  0004E0  D021               	goto	i2l282
  6946  0004E2                     L11:
  6947                           
  6948                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  6949  0004E2  0100               	movlb	0	; () banked
  6950  0004E4  EE20 F00C          	lfsr	2,12
  6951  0004E8  0100               	movlb	0	; () banked
  6952  0004EA  51E0               	movf	_ic_ptr& (0+255),w,b
  6953  0004EC  26D9               	addwf	fsr2l,f,c
  6954  0004EE  0100               	movlb	0	; () banked
  6955  0004F0  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6956  0004F2  22DA               	addwfc	fsr2h,f,c
  6957  0004F4  0E05               	movlw	5
  6958  0004F6  D731               	goto	L8
  6959  0004F8                     i2l3037:
  6960                           
  6961                           ; BSR set to: 0
  6962  0004F8  0100               	movlb	0	; () banked
  6963  0004FA  EE20 F00C          	lfsr	2,12
  6964  0004FE  0100               	movlb	0	; () banked
  6965  000500  51E0               	movf	_ic_ptr& (0+255),w,b
  6966  000502  26D9               	addwf	fsr2l,f,c
  6967  000504  0100               	movlb	0	; () banked
  6968  000506  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  6969  000508  22DA               	addwfc	fsr2h,f,c
  6970  00050A  50DF               	movf	indf2,w,c
  6971                           
  6972                           ; Switch size 1, requested type "space"
  6973                           ; Number of cases is 4, Range of values is 5 to 8
  6974                           ; switch strategies available:
  6975                           ; Name         Instructions Cycles
  6976                           ; simple_byte           13     7 (average)
  6977                           ;	Chosen strategy is simple_byte
  6978  00050C  0A05               	xorlw	5	; case 5
  6979  00050E  B4D8               	btfsc	status,2,c
  6980  000510  D63C               	goto	i2l284
  6981  000512  0A03               	xorlw	3	; case 6
  6982  000514  B4D8               	btfsc	status,2,c
  6983  000516  D65B               	goto	i2l288
  6984  000518  0A01               	xorlw	1	; case 7
  6985  00051A  B4D8               	btfsc	status,2,c
  6986  00051C  D720               	goto	i2l302
  6987  00051E  0A0F               	xorlw	15	; case 8
  6988  000520  B4D8               	btfsc	status,2,c
  6989  000522  D6D1               	goto	i2l2987
  6990  000524                     i2l282:
  6991                           
  6992                           ; BSR set to: 0
  6993                           ;my_i2c.c: 230: }
  6994                           ;my_i2c.c: 233: if (data_read || data_written) {
  6995  000524  0100               	movlb	0	; () banked
  6996  000526  0100               	movlb	0	; () banked
  6997  000528  67C5               	tstfsz	i2c_int_handler@data_read& (0+255),b
  6998  00052A  D005               	goto	i2l316
  6999                           
  7000                           ; BSR set to: 0
  7001  00052C  0100               	movlb	0	; () banked
  7002  00052E  0100               	movlb	0	; () banked
  7003  000530  51C0               	movf	i2c_int_handler@data_written& (0+255),w,b
  7004  000532  B4D8               	btfsc	status,2,c
  7005  000534  D002               	goto	i2l3043
  7006  000536                     i2l316:
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  7010  000536  A8C6               	btfss	4038,4,c	;volatile
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  7014  000538  88C6               	bsf	4038,4,c	;volatile
  7015  00053A                     i2l3043:
  7016                           
  7017                           ; BSR set to: 0
  7018                           ;my_i2c.c: 237: }
  7019                           ;my_i2c.c: 238: }
  7020                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7021  00053A  0100               	movlb	0	; () banked
  7022  00053C  EE20 F00A          	lfsr	2,10
  7023  000540  0100               	movlb	0	; () banked
  7024  000542  51E0               	movf	_ic_ptr& (0+255),w,b
  7025  000544  26D9               	addwf	fsr2l,f,c
  7026  000546  0100               	movlb	0	; () banked
  7027  000548  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7028  00054A  22DA               	addwfc	fsr2h,f,c
  7029  00054C  0E08               	movlw	8
  7030  00054E  64DF               	cpfsgt	indf2,c
  7031  000550  D024               	goto	i2l3049
  7032                           
  7033                           ; BSR set to: 0
  7034  000552  0100               	movlb	0	; () banked
  7035  000554  0100               	movlb	0	; () banked
  7036  000556  67C4               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7037  000558  D020               	goto	i2l3049
  7038                           
  7039                           ; BSR set to: 0
  7040                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  7041  00055A  0100               	movlb	0	; () banked
  7042  00055C  EE20 F00C          	lfsr	2,12
  7043  000560  0100               	movlb	0	; () banked
  7044  000562  51E0               	movf	_ic_ptr& (0+255),w,b
  7045  000564  26D9               	addwf	fsr2l,f,c
  7046  000566  0100               	movlb	0	; () banked
  7047  000568  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7048  00056A  22DA               	addwfc	fsr2h,f,c
  7049  00056C  0E05               	movlw	5
  7050  00056E  6EDF               	movwf	indf2,c
  7051                           
  7052                           ;my_i2c.c: 243: ic_ptr->error_count++;
  7053  000570  0100               	movlb	0	; () banked
  7054  000572  EE20 F00E          	lfsr	2,14
  7055  000576  0100               	movlb	0	; () banked
  7056  000578  51E0               	movf	_ic_ptr& (0+255),w,b
  7057  00057A  26D9               	addwf	fsr2l,f,c
  7058  00057C  0100               	movlb	0	; () banked
  7059  00057E  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7060  000580  22DA               	addwfc	fsr2h,f,c
  7061  000582  2ADF               	incf	indf2,f,c
  7062                           
  7063                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  7064  000584  0100               	movlb	0	; () banked
  7065  000586  EE20 F00D          	lfsr	2,13
  7066  00058A  0100               	movlb	0	; () banked
  7067  00058C  51E0               	movf	_ic_ptr& (0+255),w,b
  7068  00058E  26D9               	addwf	fsr2l,f,c
  7069  000590  0100               	movlb	0	; () banked
  7070  000592  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7071  000594  22DA               	addwfc	fsr2h,f,c
  7072  000596  0E07               	movlw	7
  7073  000598  6EDF               	movwf	indf2,c
  7074  00059A                     i2l3049:
  7075                           
  7076                           ; BSR set to: 0
  7077                           ;my_i2c.c: 245: }
  7078                           ;my_i2c.c: 247: if (msg_ready) {
  7079  00059A  0100               	movlb	0	; () banked
  7080  00059C  0100               	movlb	0	; () banked
  7081  00059E  51C4               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7082  0005A0  B4D8               	btfsc	status,2,c
  7083  0005A2  D044               	goto	i2l3057
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7087  0005A4  0100               	movlb	0	; () banked
  7088  0005A6  EE20 F00B          	lfsr	2,11
  7089  0005AA  0100               	movlb	0	; () banked
  7090  0005AC  51E0               	movf	_ic_ptr& (0+255),w,b
  7091  0005AE  26D9               	addwf	fsr2l,f,c
  7092  0005B0  0100               	movlb	0	; () banked
  7093  0005B2  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7094  0005B4  22DA               	addwfc	fsr2h,f,c
  7095  0005B6  0100               	movlb	0	; () banked
  7096  0005B8  EE10 F00A          	lfsr	1,10
  7097  0005BC  0100               	movlb	0	; () banked
  7098  0005BE  51E0               	movf	_ic_ptr& (0+255),w,b
  7099  0005C0  26E1               	addwf	fsr1l,f,c
  7100  0005C2  0100               	movlb	0	; () banked
  7101  0005C4  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7102  0005C6  22E2               	addwfc	fsr1h,f,c
  7103  0005C8  50E7               	movf	indf1,w,c
  7104  0005CA  0100               	movlb	0	; () banked
  7105  0005CC  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  7106  0005CE  0100               	movlb	0	; () banked
  7107  0005D0  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  7108  0005D2  0D01               	mullw	1
  7109  0005D4  50F3               	movf	prodl,w,c
  7110  0005D6  0100               	movlb	0	; () banked
  7111  0005D8  0100               	movlb	0	; () banked
  7112  0005DA  25E0               	addwf	_ic_ptr& (0+255),w,b
  7113  0005DC  6EE1               	movwf	fsr1l,c
  7114  0005DE  50F4               	movf	prodh,w,c
  7115  0005E0  0100               	movlb	0	; () banked
  7116  0005E2  0100               	movlb	0	; () banked
  7117  0005E4  21E1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7118  0005E6  6EE2               	movwf	fsr1h,c
  7119  0005E8  CFDF FFE7          	movff	indf2,indf1
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7123  0005EC  0100               	movlb	0	; () banked
  7124  0005EE  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  7125  0005F0  0E28               	movlw	40
  7126  0005F2  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  7127  0005F4  0100               	movlb	0	; () banked
  7128  0005F6  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  7129  0005F8  0100               	movlb	0	; () banked
  7130  0005FA  C0E1  F045         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7131  0005FE  0100               	movlb	0	; () banked
  7132  000600  C0E0  F044         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7133  000604  0100               	movlb	0	; () banked
  7134  000606  EE20 F00A          	lfsr	2,10
  7135  00060A  0100               	movlb	0	; () banked
  7136  00060C  51E0               	movf	_ic_ptr& (0+255),w,b
  7137  00060E  26D9               	addwf	fsr2l,f,c
  7138  000610  0100               	movlb	0	; () banked
  7139  000612  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7140  000614  22DA               	addwfc	fsr2h,f,c
  7141  000616  50DF               	movf	indf2,w,c
  7142  000618  0100               	movlb	0	; () banked
  7143  00061A  6FBA               	movwf	(??_i2c_int_handler+1)& (0+255),b
  7144  00061C  0100               	movlb	0	; () banked
  7145  00061E  29BA               	incf	(??_i2c_int_handler+1)& (0+255),w,b
  7146  000620  EC31  F00D         	call	_ToMainHigh_sendmsg
  7147                           
  7148                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  7149  000624  0100               	movlb	0	; () banked
  7150  000626  EE20 F00A          	lfsr	2,10
  7151  00062A  D045               	goto	L10
  7152  00062C                     i2l3057:
  7153                           
  7154                           ; BSR set to: 0
  7155  00062C  0100               	movlb	0	; () banked
  7156  00062E  EE20 F00E          	lfsr	2,14
  7157  000632  0100               	movlb	0	; () banked
  7158  000634  51E0               	movf	_ic_ptr& (0+255),w,b
  7159  000636  26D9               	addwf	fsr2l,f,c
  7160  000638  0100               	movlb	0	; () banked
  7161  00063A  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7162  00063C  22DA               	addwfc	fsr2h,f,c
  7163  00063E  50DF               	movf	indf2,w,c
  7164  000640  B4D8               	btfsc	status,2,c
  7165  000642  D041               	goto	i2l3065
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  7169  000644  0100               	movlb	0	; () banked
  7170  000646  EE20 F00E          	lfsr	2,14
  7171  00064A  0100               	movlb	0	; () banked
  7172  00064C  51E0               	movf	_ic_ptr& (0+255),w,b
  7173  00064E  26D9               	addwf	fsr2l,f,c
  7174  000650  0100               	movlb	0	; () banked
  7175  000652  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7176  000654  22DA               	addwfc	fsr2h,f,c
  7177  000656  50DF               	movf	indf2,w,c
  7178  000658  0100               	movlb	0	; () banked
  7179  00065A  0100               	movlb	0	; () banked
  7180  00065C  6FBD               	movwf	i2c_int_handler@error_buf& (0+255),b
  7181                           
  7182                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  7183  00065E  0100               	movlb	0	; () banked
  7184  000660  EE20 F00D          	lfsr	2,13
  7185  000664  0100               	movlb	0	; () banked
  7186  000666  51E0               	movf	_ic_ptr& (0+255),w,b
  7187  000668  26D9               	addwf	fsr2l,f,c
  7188  00066A  0100               	movlb	0	; () banked
  7189  00066C  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7190  00066E  22DA               	addwfc	fsr2h,f,c
  7191  000670  50DF               	movf	indf2,w,c
  7192  000672  0100               	movlb	0	; () banked
  7193  000674  0100               	movlb	0	; () banked
  7194  000676  6FBE               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7195                           
  7196                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  7197  000678  0100               	movlb	0	; () banked
  7198  00067A  EE20 F00B          	lfsr	2,11
  7199  00067E  0100               	movlb	0	; () banked
  7200  000680  51E0               	movf	_ic_ptr& (0+255),w,b
  7201  000682  26D9               	addwf	fsr2l,f,c
  7202  000684  0100               	movlb	0	; () banked
  7203  000686  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7204  000688  22DA               	addwfc	fsr2h,f,c
  7205  00068A  50DF               	movf	indf2,w,c
  7206  00068C  0100               	movlb	0	; () banked
  7207  00068E  0100               	movlb	0	; () banked
  7208  000690  6FBF               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7212  000692  0100               	movlb	0	; () banked
  7213  000694  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  7214  000696  0E29               	movlw	41
  7215  000698  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  7216  00069A  0100               	movlb	0	; () banked
  7217  00069C  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  7218  00069E  0100               	movlb	0	; () banked
  7219  0006A0  0E00               	movlw	high i2c_int_handler@error_buf
  7220  0006A2  6E45               	movwf	ToMainHigh_sendmsg@data+1,c
  7221  0006A4  0100               	movlb	0	; () banked
  7222  0006A6  0EBD               	movlw	low i2c_int_handler@error_buf
  7223  0006A8  6E44               	movwf	ToMainHigh_sendmsg@data,c
  7224  0006AA  0E03               	movlw	3
  7225  0006AC  EC31  F00D         	call	_ToMainHigh_sendmsg
  7226                           
  7227                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  7228  0006B0  0100               	movlb	0	; () banked
  7229  0006B2  EE20 F00E          	lfsr	2,14
  7230  0006B6                     L10:
  7231  0006B6  0100               	movlb	0	; () banked
  7232  0006B8  51E0               	movf	_ic_ptr& (0+255),w,b
  7233  0006BA  26D9               	addwf	fsr2l,f,c
  7234  0006BC  0100               	movlb	0	; () banked
  7235  0006BE  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7236  0006C0  22DA               	addwfc	fsr2h,f,c
  7237  0006C2  0E00               	movlw	0
  7238  0006C4  6EDF               	movwf	indf2,c
  7239  0006C6                     i2l3065:
  7240                           
  7241                           ; BSR set to: 0
  7242                           ;my_i2c.c: 257: }
  7243                           ;my_i2c.c: 258: if (msg_to_send) {
  7244  0006C6  0100               	movlb	0	; () banked
  7245  0006C8  0100               	movlb	0	; () banked
  7246  0006CA  51C3               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7247  0006CC  B4D8               	btfsc	status,2,c
  7248  0006CE  0012               	return	
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;my_i2c.c: 259: int length = 0;
  7252  0006D0  0E00               	movlw	0
  7253  0006D2  0100               	movlb	0	; () banked
  7254  0006D4  0100               	movlb	0	; () banked
  7255  0006D6  6FBC               	movwf	(i2c_int_handler@length+1)& (0+255),b
  7256  0006D8  0E00               	movlw	0
  7257  0006DA  0100               	movlb	0	; () banked
  7258  0006DC  6FBB               	movwf	i2c_int_handler@length& (0+255),b
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;my_i2c.c: 262: if(ic_ptr->buffer[0] == 0xAA){
  7262  0006DE  0EAA               	movlw	170
  7263  0006E0  C0E0  FFD9         	movff	_ic_ptr,fsr2l
  7264  0006E4  C0E1  FFDA         	movff	_ic_ptr+1,fsr2h
  7265  0006E8  62DF               	cpfseq	indf2,c
  7266  0006EA  D007               	goto	i2l3073
  7267                           
  7268                           ; BSR set to: 0
  7269                           ;my_i2c.c: 263: length = 10;
  7270  0006EC  0E00               	movlw	0
  7271  0006EE  0100               	movlb	0	; () banked
  7272  0006F0  0100               	movlb	0	; () banked
  7273  0006F2  6FBC               	movwf	(i2c_int_handler@length+1)& (0+255),b
  7274  0006F4  0E0A               	movlw	10
  7275  0006F6  0100               	movlb	0	; () banked
  7276  0006F8  6FBB               	movwf	i2c_int_handler@length& (0+255),b
  7277  0006FA                     i2l3073:
  7278                           
  7279                           ; BSR set to: 0
  7280                           ;my_i2c.c: 265: }
  7281                           ;my_i2c.c: 266: start_i2c_slave_reply(length, adcbuffer);
  7282  0006FA  0100               	movlb	0	; () banked
  7283  0006FC  C0B8  F02E         	movff	i2c_int_handler@adcbuffer+1,i2start_i2c_slave_reply@msg+1
  7284  000700  0100               	movlb	0	; () banked
  7285  000702  C0B7  F02D         	movff	i2c_int_handler@adcbuffer,i2start_i2c_slave_reply@msg
  7286  000706  0100               	movlb	0	; () banked
  7287  000708  0100               	movlb	0	; () banked
  7288  00070A  51BB               	movf	i2c_int_handler@length& (0+255),w,b
  7289  00070C  ECC9  F006         	call	i2_start_i2c_slave_reply
  7290                           
  7291                           ;my_i2c.c: 267: adcbuffer[0] = 0;
  7292  000710  C0B7  FFD9         	movff	i2c_int_handler@adcbuffer,fsr2l
  7293  000714  C0B8  FFDA         	movff	i2c_int_handler@adcbuffer+1,fsr2h
  7294  000718  0E00               	movlw	0
  7295  00071A  6EDF               	movwf	indf2,c
  7296                           
  7297                           ;my_i2c.c: 268: msg_to_send = 0;
  7298  00071C  0100               	movlb	0	; () banked
  7299  00071E  6FB9               	movwf	??_i2c_int_handler& (0+255),b
  7300  000720  0E00               	movlw	0
  7301  000722  0100               	movlb	0	; () banked
  7302  000724  0100               	movlb	0	; () banked
  7303  000726  6FC3               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7304  000728  0100               	movlb	0	; () banked
  7305  00072A  51B9               	movf	??_i2c_int_handler& (0+255),w,b
  7306  00072C  0012               	return	
  7307  00072E                     __end_of_i2c_int_handler:
  7308                           	opt stack 0
  7309                           pclatu	equ	0xFFB
  7310                           pclath	equ	0xFFA
  7311                           tblptru	equ	0xFF8
  7312                           tblptrh	equ	0xFF7
  7313                           tblptrl	equ	0xFF6
  7314                           tablat	equ	0xFF5
  7315                           prodh	equ	0xFF4
  7316                           prodl	equ	0xFF3
  7317                           intcon	equ	0xFF2
  7318                           postinc0	equ	0xFEE
  7319                           fsr0h	equ	0xFEA
  7320                           fsr0l	equ	0xFE9
  7321                           wreg	equ	0xFE8
  7322                           indf1	equ	0xFE7
  7323                           fsr1h	equ	0xFE2
  7324                           fsr1l	equ	0xFE1
  7325                           bsr	equ	0xFE0
  7326                           indf2	equ	0xFDF
  7327                           postinc2	equ	0xFDE
  7328                           postdec2	equ	0xFDD
  7329                           fsr2h	equ	0xFDA
  7330                           fsr2l	equ	0xFD9
  7331                           status	equ	0xFD8
  7332                           
  7333 ;; *************** function i2_start_i2c_slave_reply *****************
  7334 ;; Defined at:
  7335 ;;		line 53 in file "../src/my_i2c.c"
  7336 ;; Parameters:    Size  Location     Type
  7337 ;;  length          1    wreg     unsigned char 
  7338 ;;  msg             2   44[COMRAM] PTR unsigned char 
  7339 ;;		 -> main@msgbuffer(11), adcbuffer(10), 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  length          1   48[COMRAM] unsigned char 
  7342 ;; Return value:  Size  Location     Type
  7343 ;;		None               void
  7344 ;; Registers used:
  7345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7351 ;;      Params:         2       0       0       0       0
  7352 ;;      Locals:         1       0       0       0       0
  7353 ;;      Temps:          2       0       0       0       0
  7354 ;;      Totals:         5       0       0       0       0
  7355 ;;Total ram usage:        5 bytes
  7356 ;; Hardware stack levels used:    1
  7357 ;; This function calls:
  7358 ;;		Nothing
  7359 ;; This function is called by:
  7360 ;;		_i2c_int_handler
  7361 ;; This function uses a non-reentrant model
  7362 ;;
  7363                           
  7364                           	psect	text46
  7365  000D92                     __ptext46:
  7366                           	opt stack 0
  7367  000D92                     i2_start_i2c_slave_reply:
  7368                           	opt stack 19
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;incstack = 0
  7372                           ;i2start_i2c_slave_reply@length stored from wreg
  7373  000D92  CFE8 F031          	movff	wreg,i2start_i2c_slave_reply@length
  7374                           
  7375                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  7376  000D96  0100               	movlb	0	; () banked
  7377  000D98  EE20 F019          	lfsr	2,25
  7378  000D9C  0100               	movlb	0	; () banked
  7379  000D9E  51E0               	movf	_ic_ptr& (0+255),w,b
  7380  000DA0  26D9               	addwf	fsr2l,f,c
  7381  000DA2  0100               	movlb	0	; () banked
  7382  000DA4  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7383  000DA6  22DA               	addwfc	fsr2h,f,c
  7384  000DA8  0E00               	movlw	0
  7385  000DAA  6EDF               	movwf	indf2,c
  7386  000DAC  D03A               	goto	i2l2827
  7387  000DAE                     i2l2823:
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  7391  000DAE  0100               	movlb	0	; () banked
  7392  000DB0  EE20 F019          	lfsr	2,25
  7393  000DB4  0100               	movlb	0	; () banked
  7394  000DB6  51E0               	movf	_ic_ptr& (0+255),w,b
  7395  000DB8  26D9               	addwf	fsr2l,f,c
  7396  000DBA  0100               	movlb	0	; () banked
  7397  000DBC  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7398  000DBE  22DA               	addwfc	fsr2h,f,c
  7399  000DC0  50DF               	movf	indf2,w,c
  7400  000DC2  6E2F               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7401  000DC4  502F               	movf	??i2_start_i2c_slave_reply,w,c
  7402  000DC6  0D01               	mullw	1
  7403  000DC8  50F3               	movf	prodl,w,c
  7404  000DCA  242D               	addwf	i2start_i2c_slave_reply@msg,w,c
  7405  000DCC  6ED9               	movwf	fsr2l,c
  7406  000DCE  50F4               	movf	prodh,w,c
  7407  000DD0  202E               	addwfc	i2start_i2c_slave_reply@msg+1,w,c
  7408  000DD2  6EDA               	movwf	fsr2h,c
  7409  000DD4  0100               	movlb	0	; () banked
  7410  000DD6  EE10 F019          	lfsr	1,25
  7411  000DDA  0100               	movlb	0	; () banked
  7412  000DDC  51E0               	movf	_ic_ptr& (0+255),w,b
  7413  000DDE  26E1               	addwf	fsr1l,f,c
  7414  000DE0  0100               	movlb	0	; () banked
  7415  000DE2  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7416  000DE4  22E2               	addwfc	fsr1h,f,c
  7417  000DE6  50E7               	movf	indf1,w,c
  7418  000DE8  6E30               	movwf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  7419  000DEA  5030               	movf	??i2_start_i2c_slave_reply+1,w,c
  7420  000DEC  0D01               	mullw	1
  7421  000DEE  0E0F               	movlw	15
  7422  000DF0  26F3               	addwf	prodl,f,c
  7423  000DF2  0E00               	movlw	0
  7424  000DF4  22F4               	addwfc	prodh,f,c
  7425  000DF6  50F3               	movf	prodl,w,c
  7426  000DF8  0100               	movlb	0	; () banked
  7427  000DFA  0100               	movlb	0	; () banked
  7428  000DFC  25E0               	addwf	_ic_ptr& (0+255),w,b
  7429  000DFE  6EE1               	movwf	fsr1l,c
  7430  000E00  50F4               	movf	prodh,w,c
  7431  000E02  0100               	movlb	0	; () banked
  7432  000E04  0100               	movlb	0	; () banked
  7433  000E06  21E1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7434  000E08  6EE2               	movwf	fsr1h,c
  7435  000E0A  CFDF FFE7          	movff	indf2,indf1
  7436                           
  7437                           ; BSR set to: 0
  7438  000E0E  0100               	movlb	0	; () banked
  7439  000E10  EE20 F019          	lfsr	2,25
  7440  000E14  0100               	movlb	0	; () banked
  7441  000E16  51E0               	movf	_ic_ptr& (0+255),w,b
  7442  000E18  26D9               	addwf	fsr2l,f,c
  7443  000E1A  0100               	movlb	0	; () banked
  7444  000E1C  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7445  000E1E  22DA               	addwfc	fsr2h,f,c
  7446  000E20  2ADF               	incf	indf2,f,c
  7447  000E22                     i2l2827:
  7448                           
  7449                           ; BSR set to: 0
  7450  000E22  0100               	movlb	0	; () banked
  7451  000E24  EE20 F019          	lfsr	2,25
  7452  000E28  0100               	movlb	0	; () banked
  7453  000E2A  51E0               	movf	_ic_ptr& (0+255),w,b
  7454  000E2C  26D9               	addwf	fsr2l,f,c
  7455  000E2E  0100               	movlb	0	; () banked
  7456  000E30  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7457  000E32  22DA               	addwfc	fsr2h,f,c
  7458  000E34  50DF               	movf	indf2,w,c
  7459  000E36  6E2F               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7460  000E38  5031               	movf	i2start_i2c_slave_reply@length,w,c
  7461  000E3A  5C2F               	subwf	??i2_start_i2c_slave_reply,w,c
  7462  000E3C  A0D8               	btfss	status,0,c
  7463  000E3E  D7B7               	goto	i2l2823
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;my_i2c.c: 57: }
  7467                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  7468                           
  7469                           ; BSR set to: 0
  7470  000E40  0100               	movlb	0	; () banked
  7471  000E42  EE20 F019          	lfsr	2,25
  7472  000E46  0100               	movlb	0	; () banked
  7473  000E48  51E0               	movf	_ic_ptr& (0+255),w,b
  7474  000E4A  26D9               	addwf	fsr2l,f,c
  7475  000E4C  0100               	movlb	0	; () banked
  7476  000E4E  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7477  000E50  22DA               	addwfc	fsr2h,f,c
  7478  000E52  C031  FFDF         	movff	i2start_i2c_slave_reply@length,indf2
  7479                           
  7480                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  7481  000E56  0100               	movlb	0	; () banked
  7482  000E58  EE20 F01A          	lfsr	2,26
  7483  000E5C  0100               	movlb	0	; () banked
  7484  000E5E  51E0               	movf	_ic_ptr& (0+255),w,b
  7485  000E60  26D9               	addwf	fsr2l,f,c
  7486  000E62  0100               	movlb	0	; () banked
  7487  000E64  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7488  000E66  22DA               	addwfc	fsr2h,f,c
  7489  000E68  0E01               	movlw	1
  7490  000E6A  6EDF               	movwf	indf2,c
  7491                           
  7492                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  7493  000E6C  0100               	movlb	0	; () banked
  7494  000E6E  EE20 F00F          	lfsr	2,15
  7495  000E72  0100               	movlb	0	; () banked
  7496  000E74  51E0               	movf	_ic_ptr& (0+255),w,b
  7497  000E76  26D9               	addwf	fsr2l,f,c
  7498  000E78  0100               	movlb	0	; () banked
  7499  000E7A  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7500  000E7C  22DA               	addwfc	fsr2h,f,c
  7501  000E7E  50DF               	movf	indf2,w,c
  7502  000E80  6EC9               	movwf	4041,c	;volatile
  7503                           
  7504                           ; BSR set to: 0
  7505                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  7506  000E82  88C6               	bsf	4038,4,c	;volatile
  7507                           
  7508                           ; BSR set to: 0
  7509  000E84  0012               	return	
  7510  000E86                     __end_ofi2_start_i2c_slave_reply:
  7511                           	opt stack 0
  7512                           pclatu	equ	0xFFB
  7513                           pclath	equ	0xFFA
  7514                           tblptru	equ	0xFF8
  7515                           tblptrh	equ	0xFF7
  7516                           tblptrl	equ	0xFF6
  7517                           tablat	equ	0xFF5
  7518                           prodh	equ	0xFF4
  7519                           prodl	equ	0xFF3
  7520                           intcon	equ	0xFF2
  7521                           postinc0	equ	0xFEE
  7522                           fsr0h	equ	0xFEA
  7523                           fsr0l	equ	0xFE9
  7524                           wreg	equ	0xFE8
  7525                           indf1	equ	0xFE7
  7526                           fsr1h	equ	0xFE2
  7527                           fsr1l	equ	0xFE1
  7528                           bsr	equ	0xFE0
  7529                           indf2	equ	0xFDF
  7530                           postinc2	equ	0xFDE
  7531                           postdec2	equ	0xFDD
  7532                           fsr2h	equ	0xFDA
  7533                           fsr2l	equ	0xFD9
  7534                           status	equ	0xFD8
  7535                           
  7536 ;; *************** function _handle_start *****************
  7537 ;; Defined at:
  7538 ;;		line 71 in file "../src/my_i2c.c"
  7539 ;; Parameters:    Size  Location     Type
  7540 ;;  data_read       1    wreg     unsigned char 
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;  data_read       1   44[COMRAM] unsigned char 
  7543 ;; Return value:  Size  Location     Type
  7544 ;;		None               void
  7545 ;; Registers used:
  7546 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7552 ;;      Params:         0       0       0       0       0
  7553 ;;      Locals:         1       0       0       0       0
  7554 ;;      Temps:          0       0       0       0       0
  7555 ;;      Totals:         1       0       0       0       0
  7556 ;;Total ram usage:        1 bytes
  7557 ;; Hardware stack levels used:    1
  7558 ;; This function calls:
  7559 ;;		Nothing
  7560 ;; This function is called by:
  7561 ;;		_i2c_int_handler
  7562 ;; This function uses a non-reentrant model
  7563 ;;
  7564                           
  7565                           	psect	text47
  7566  000E86                     __ptext47:
  7567                           	opt stack 0
  7568  000E86                     _handle_start:
  7569                           	opt stack 19
  7570                           
  7571                           ; BSR set to: 0
  7572                           ;incstack = 0
  7573                           ;handle_start@data_read stored from wreg
  7574  000E86  CFE8 F02D          	movff	wreg,handle_start@data_read
  7575                           
  7576                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  7577  000E8A  0100               	movlb	0	; () banked
  7578  000E8C  EE20 F00B          	lfsr	2,11
  7579  000E90  0100               	movlb	0	; () banked
  7580  000E92  51E0               	movf	_ic_ptr& (0+255),w,b
  7581  000E94  26D9               	addwf	fsr2l,f,c
  7582  000E96  0100               	movlb	0	; () banked
  7583  000E98  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7584  000E9A  22DA               	addwfc	fsr2h,f,c
  7585  000E9C  0E01               	movlw	1
  7586  000E9E  6EDF               	movwf	indf2,c
  7587                           
  7588                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  7589  000EA0  0100               	movlb	0	; () banked
  7590  000EA2  EE20 F00A          	lfsr	2,10
  7591  000EA6  0100               	movlb	0	; () banked
  7592  000EA8  51E0               	movf	_ic_ptr& (0+255),w,b
  7593  000EAA  26D9               	addwf	fsr2l,f,c
  7594  000EAC  0100               	movlb	0	; () banked
  7595  000EAE  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7596  000EB0  22DA               	addwfc	fsr2h,f,c
  7597  000EB2  0E00               	movlw	0
  7598  000EB4  6EDF               	movwf	indf2,c
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;my_i2c.c: 75: if (data_read) {
  7602  000EB6  502D               	movf	handle_start@data_read,w,c
  7603  000EB8  B4D8               	btfsc	status,2,c
  7604  000EBA  D03D               	goto	i2l2735
  7605                           
  7606                           ; BSR set to: 0
  7607                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  7608  000EBC  AAC7               	btfss	4039,5,c	;volatile
  7609  000EBE  D021               	goto	i2l272
  7610                           
  7611                           ; BSR set to: 0
  7612                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  7613  000EC0  0100               	movlb	0	; () banked
  7614  000EC2  EE20 F00C          	lfsr	2,12
  7615  000EC6  0100               	movlb	0	; () banked
  7616  000EC8  51E0               	movf	_ic_ptr& (0+255),w,b
  7617  000ECA  26D9               	addwf	fsr2l,f,c
  7618  000ECC  0100               	movlb	0	; () banked
  7619  000ECE  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7620  000ED0  22DA               	addwfc	fsr2h,f,c
  7621  000ED2  0E05               	movlw	5
  7622  000ED4  6EDF               	movwf	indf2,c
  7623                           
  7624                           ;my_i2c.c: 80: ic_ptr->error_count++;
  7625  000ED6  0100               	movlb	0	; () banked
  7626  000ED8  EE20 F00E          	lfsr	2,14
  7627  000EDC  0100               	movlb	0	; () banked
  7628  000EDE  51E0               	movf	_ic_ptr& (0+255),w,b
  7629  000EE0  26D9               	addwf	fsr2l,f,c
  7630  000EE2  0100               	movlb	0	; () banked
  7631  000EE4  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7632  000EE6  22DA               	addwfc	fsr2h,f,c
  7633  000EE8  2ADF               	incf	indf2,f,c
  7634                           
  7635                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  7636  000EEA  0100               	movlb	0	; () banked
  7637  000EEC  EE20 F00D          	lfsr	2,13
  7638  000EF0  0100               	movlb	0	; () banked
  7639  000EF2  51E0               	movf	_ic_ptr& (0+255),w,b
  7640  000EF4  26D9               	addwf	fsr2l,f,c
  7641  000EF6  0100               	movlb	0	; () banked
  7642  000EF8  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7643  000EFA  22DA               	addwfc	fsr2h,f,c
  7644  000EFC  0E05               	movlw	5
  7645  000EFE  6EDF               	movwf	indf2,c
  7646                           
  7647                           ;my_i2c.c: 82: } else {
  7648  000F00  0012               	return	
  7649  000F02                     i2l272:
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  7653  000F02  A4C7               	btfss	4039,2,c	;volatile
  7654  000F04  D00C               	goto	i2l2733
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  7658  000F06  0100               	movlb	0	; () banked
  7659  000F08  EE20 F00C          	lfsr	2,12
  7660  000F0C  0100               	movlb	0	; () banked
  7661  000F0E  51E0               	movf	_ic_ptr& (0+255),w,b
  7662  000F10  26D9               	addwf	fsr2l,f,c
  7663  000F12  0100               	movlb	0	; () banked
  7664  000F14  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7665  000F16  22DA               	addwfc	fsr2h,f,c
  7666  000F18  0E08               	movlw	8
  7667  000F1A  6EDF               	movwf	indf2,c
  7668                           
  7669                           ;my_i2c.c: 85: } else {
  7670  000F1C  0012               	return	
  7671  000F1E                     i2l2733:
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  7675  000F1E  0100               	movlb	0	; () banked
  7676  000F20  EE20 F00C          	lfsr	2,12
  7677  000F24  0100               	movlb	0	; () banked
  7678  000F26  51E0               	movf	_ic_ptr& (0+255),w,b
  7679  000F28  26D9               	addwf	fsr2l,f,c
  7680  000F2A  0100               	movlb	0	; () banked
  7681  000F2C  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7682  000F2E  22DA               	addwfc	fsr2h,f,c
  7683  000F30  0E07               	movlw	7
  7684  000F32  6EDF               	movwf	indf2,c
  7685  000F34  0012               	return	
  7686  000F36                     i2l2735:
  7687                           
  7688                           ; BSR set to: 0
  7689                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  7690  000F36  0100               	movlb	0	; () banked
  7691  000F38  EE20 F00C          	lfsr	2,12
  7692  000F3C  0100               	movlb	0	; () banked
  7693  000F3E  51E0               	movf	_ic_ptr& (0+255),w,b
  7694  000F40  26D9               	addwf	fsr2l,f,c
  7695  000F42  0100               	movlb	0	; () banked
  7696  000F44  51E1               	movf	(_ic_ptr+1)& (0+255),w,b
  7697  000F46  22DA               	addwfc	fsr2h,f,c
  7698  000F48  0E06               	movlw	6
  7699  000F4A  6EDF               	movwf	indf2,c
  7700  000F4C  0012               	return	
  7701  000F4E                     __end_of_handle_start:
  7702                           	opt stack 0
  7703                           pclatu	equ	0xFFB
  7704                           pclath	equ	0xFFA
  7705                           tblptru	equ	0xFF8
  7706                           tblptrh	equ	0xFF7
  7707                           tblptrl	equ	0xFF6
  7708                           tablat	equ	0xFF5
  7709                           prodh	equ	0xFF4
  7710                           prodl	equ	0xFF3
  7711                           intcon	equ	0xFF2
  7712                           postinc0	equ	0xFEE
  7713                           fsr0h	equ	0xFEA
  7714                           fsr0l	equ	0xFE9
  7715                           wreg	equ	0xFE8
  7716                           indf1	equ	0xFE7
  7717                           fsr1h	equ	0xFE2
  7718                           fsr1l	equ	0xFE1
  7719                           bsr	equ	0xFE0
  7720                           indf2	equ	0xFDF
  7721                           postinc2	equ	0xFDE
  7722                           postdec2	equ	0xFDD
  7723                           fsr2h	equ	0xFDA
  7724                           fsr2l	equ	0xFD9
  7725                           status	equ	0xFD8
  7726                           
  7727 ;; *************** function _ToMainHigh_sendmsg *****************
  7728 ;; Defined at:
  7729 ;;		line 126 in file "../src/messages.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  length          1    wreg     unsigned char 
  7732 ;;  msgtype         1   66[COMRAM] unsigned char 
  7733 ;;  data            2   67[COMRAM] PTR void 
  7734 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;  length          1    0[BANK0 ] unsigned char 
  7737 ;; Return value:  Size  Location     Type
  7738 ;;                  1    wreg      char 
  7739 ;; Registers used:
  7740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7741 ;; Tracked objects:
  7742 ;;		On entry : 0/0
  7743 ;;		On exit  : 0/0
  7744 ;;		Unchanged: 0/0
  7745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7746 ;;      Params:         3       0       0       0       0
  7747 ;;      Locals:         0       1       0       0       0
  7748 ;;      Temps:          0       0       0       0       0
  7749 ;;      Totals:         3       1       0       0       0
  7750 ;;Total ram usage:        4 bytes
  7751 ;; Hardware stack levels used:    1
  7752 ;; Hardware stack levels required when called:    2
  7753 ;; This function calls:
  7754 ;;		i2_send_msg
  7755 ;; This function is called by:
  7756 ;;		_i2c_int_handler
  7757 ;; This function uses a non-reentrant model
  7758 ;;
  7759                           
  7760                           	psect	text48
  7761  001A62                     __ptext48:
  7762                           	opt stack 0
  7763  001A62                     _ToMainHigh_sendmsg:
  7764                           	opt stack 17
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;incstack = 0
  7768                           ;ToMainHigh_sendmsg@length stored from wreg
  7769  001A62  CFE8 F0B6          	movff	wreg,ToMainHigh_sendmsg@length
  7770                           
  7771                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7772                           ;	Return value of _ToMainHigh_sendmsg is never used
  7773  001A66  0101               	movlb	1	; () banked
  7774  001A68  0E01               	movlw	high _ToMainHigh_MQ
  7775  001A6A  6E38               	movwf	i2send_msg@qptr+1,c
  7776  001A6C  0101               	movlb	1	; () banked
  7777  001A6E  0E6C               	movlw	low _ToMainHigh_MQ
  7778  001A70  6E37               	movwf	i2send_msg@qptr,c
  7779  001A72  C0B6  F039         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7780  001A76  C043  F03A         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7781  001A7A  C045  F03C         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7782  001A7E  C044  F03B         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7783  001A82  EC56  F008         	call	i2_send_msg	;wreg free
  7784  001A86  0012               	return	
  7785  001A88                     __end_of_ToMainHigh_sendmsg:
  7786                           	opt stack 0
  7787                           pclatu	equ	0xFFB
  7788                           pclath	equ	0xFFA
  7789                           tblptru	equ	0xFF8
  7790                           tblptrh	equ	0xFF7
  7791                           tblptrl	equ	0xFF6
  7792                           tablat	equ	0xFF5
  7793                           prodh	equ	0xFF4
  7794                           prodl	equ	0xFF3
  7795                           intcon	equ	0xFF2
  7796                           postinc0	equ	0xFEE
  7797                           fsr0h	equ	0xFEA
  7798                           fsr0l	equ	0xFE9
  7799                           wreg	equ	0xFE8
  7800                           indf1	equ	0xFE7
  7801                           fsr1h	equ	0xFE2
  7802                           fsr1l	equ	0xFE1
  7803                           bsr	equ	0xFE0
  7804                           indf2	equ	0xFDF
  7805                           postinc2	equ	0xFDE
  7806                           postdec2	equ	0xFDD
  7807                           fsr2h	equ	0xFDA
  7808                           fsr2l	equ	0xFD9
  7809                           status	equ	0xFD8
  7810                           
  7811 ;; *************** function i2_send_msg *****************
  7812 ;; Defined at:
  7813 ;;		line 24 in file "../src/messages.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;  qptr            2   54[COMRAM] PTR struct __msg_queue
  7816 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7817 ;;  length          1   56[COMRAM] unsigned char 
  7818 ;;  msgtype         1   57[COMRAM] unsigned char 
  7819 ;;  data            2   58[COMRAM] PTR void 
  7820 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), main@ic(28), 
  7821 ;;		 -> main@uc(5), 
  7822 ;; Auto vars:     Size  Location     Type
  7823 ;;  send_msg        2   64[COMRAM] PTR struct __msg
  7824 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7825 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7826 ;;  send_msg        2   61[COMRAM] unsigned int 
  7827 ;;  send_msg        1   63[COMRAM] unsigned char 
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  1    wreg      char 
  7830 ;; Registers used:
  7831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7837 ;;      Params:         6       0       0       0       0
  7838 ;;      Locals:         5       0       0       0       0
  7839 ;;      Temps:          1       0       0       0       0
  7840 ;;      Totals:        12       0       0       0       0
  7841 ;;Total ram usage:       12 bytes
  7842 ;; Hardware stack levels used:    1
  7843 ;; Hardware stack levels required when called:    1
  7844 ;; This function calls:
  7845 ;;		i2_memcpy
  7846 ;; This function is called by:
  7847 ;;		_ToMainHigh_sendmsg
  7848 ;; This function uses a non-reentrant model
  7849 ;;
  7850                           
  7851                           	psect	text49
  7852  0010AC                     __ptext49:
  7853                           	opt stack 0
  7854  0010AC                     i2_send_msg:
  7855                           	opt stack 17
  7856                           
  7857                           ;messages.c: 25: unsigned char slot;
  7858                           ;messages.c: 27: msg *qmsg;
  7859                           ;messages.c: 28: size_t tlength = length;
  7860                           
  7861                           ;incstack = 0
  7862  0010AC  C039  F03E         	movff	i2send_msg@length,i2send_msg@tlength
  7863  0010B0  6A3F               	clrf	i2send_msg@tlength+1,c
  7864                           
  7865                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7866  0010B2  EE20 F034          	lfsr	2,52
  7867  0010B6  5037               	movf	i2send_msg@qptr,w,c
  7868  0010B8  26D9               	addwf	fsr2l,f,c
  7869  0010BA  5038               	movf	i2send_msg@qptr+1,w,c
  7870  0010BC  22DA               	addwfc	fsr2h,f,c
  7871  0010BE  50DF               	movf	indf2,w,c
  7872  0010C0  6E40               	movwf	i2send_msg@slot,c
  7873                           
  7874                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7875  0010C2  5040               	movf	i2send_msg@slot,w,c
  7876  0010C4  0D0D               	mullw	13
  7877  0010C6  50F3               	movf	prodl,w,c
  7878  0010C8  2437               	addwf	i2send_msg@qptr,w,c
  7879  0010CA  6E41               	movwf	i2send_msg@qmsg,c
  7880  0010CC  50F4               	movf	prodh,w,c
  7881  0010CE  2038               	addwfc	i2send_msg@qptr+1,w,c
  7882  0010D0  6E42               	movwf	i2send_msg@qmsg+1,c
  7883                           
  7884                           ;messages.c: 41: if (qmsg->full != 0) {
  7885  0010D2  C041  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7886  0010D6  C042  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7887  0010DA  50DF               	movf	indf2,w,c
  7888  0010DC  B4D8               	btfsc	status,2,c
  7889  0010DE  D002               	goto	i2l3299
  7890                           
  7891                           ;messages.c: 42: return (-1);
  7892  0010E0  0EFF               	movlw	255
  7893  0010E2  0012               	return	
  7894  0010E4                     i2l3299:
  7895                           
  7896                           ;messages.c: 43: }
  7897                           ;messages.c: 46: qmsg->length = length;
  7898  0010E4  EE20 F001          	lfsr	2,1
  7899  0010E8  5041               	movf	i2send_msg@qmsg,w,c
  7900  0010EA  26D9               	addwf	fsr2l,f,c
  7901  0010EC  5042               	movf	i2send_msg@qmsg+1,w,c
  7902  0010EE  22DA               	addwfc	fsr2h,f,c
  7903  0010F0  C039  FFDF         	movff	i2send_msg@length,indf2
  7904                           
  7905                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7906  0010F4  EE20 F002          	lfsr	2,2
  7907  0010F8  5041               	movf	i2send_msg@qmsg,w,c
  7908  0010FA  26D9               	addwf	fsr2l,f,c
  7909  0010FC  5042               	movf	i2send_msg@qmsg+1,w,c
  7910  0010FE  22DA               	addwfc	fsr2h,f,c
  7911  001100  C03A  FFDF         	movff	i2send_msg@msgtype,indf2
  7912                           
  7913                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7914  001104  0E03               	movlw	3
  7915  001106  2441               	addwf	i2send_msg@qmsg,w,c
  7916  001108  6E2D               	movwf	i2memcpy@d1,c
  7917  00110A  0E00               	movlw	0
  7918  00110C  2042               	addwfc	i2send_msg@qmsg+1,w,c
  7919  00110E  6E2E               	movwf	i2memcpy@d1+1,c
  7920  001110  C03C  F030         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7921  001114  C03B  F02F         	movff	i2send_msg@data,i2memcpy@s1
  7922  001118  C03E  F031         	movff	i2send_msg@tlength,i2memcpy@n
  7923  00111C  C03F  F032         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7924  001120  EC36  F00C         	call	i2_memcpy	;wreg free
  7925                           
  7926                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7927  001124  EE20 F034          	lfsr	2,52
  7928  001128  5037               	movf	i2send_msg@qptr,w,c
  7929  00112A  26D9               	addwf	fsr2l,f,c
  7930  00112C  5038               	movf	i2send_msg@qptr+1,w,c
  7931  00112E  22DA               	addwfc	fsr2h,f,c
  7932  001130  EE10 F034          	lfsr	1,52
  7933  001134  5037               	movf	i2send_msg@qptr,w,c
  7934  001136  26E1               	addwf	fsr1l,f,c
  7935  001138  5038               	movf	i2send_msg@qptr+1,w,c
  7936  00113A  22E2               	addwfc	fsr1h,f,c
  7937  00113C  50E7               	movf	indf1,w,c
  7938  00113E  6E3D               	movwf	??i2_send_msg& (0+255),c
  7939  001140  283D               	incf	??i2_send_msg,w,c
  7940  001142  0B03               	andlw	3
  7941  001144  6EDF               	movwf	indf2,c
  7942                           
  7943                           ;messages.c: 59: qmsg->full = 1;
  7944  001146  C041  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7945  00114A  C042  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7946  00114E  0E01               	movlw	1
  7947  001150  6EDF               	movwf	indf2,c
  7948                           
  7949                           ;messages.c: 60: return (1);
  7950  001152  0E01               	movlw	1
  7951  001154  0012               	return	
  7952  001156                     __end_ofi2_send_msg:
  7953                           	opt stack 0
  7954                           pclatu	equ	0xFFB
  7955                           pclath	equ	0xFFA
  7956                           tblptru	equ	0xFF8
  7957                           tblptrh	equ	0xFF7
  7958                           tblptrl	equ	0xFF6
  7959                           tablat	equ	0xFF5
  7960                           prodh	equ	0xFF4
  7961                           prodl	equ	0xFF3
  7962                           intcon	equ	0xFF2
  7963                           postinc0	equ	0xFEE
  7964                           fsr0h	equ	0xFEA
  7965                           fsr0l	equ	0xFE9
  7966                           wreg	equ	0xFE8
  7967                           indf1	equ	0xFE7
  7968                           fsr1h	equ	0xFE2
  7969                           fsr1l	equ	0xFE1
  7970                           bsr	equ	0xFE0
  7971                           indf2	equ	0xFDF
  7972                           postinc2	equ	0xFDE
  7973                           postdec2	equ	0xFDD
  7974                           fsr2h	equ	0xFDA
  7975                           fsr2l	equ	0xFD9
  7976                           status	equ	0xFD8
  7977                           
  7978 ;; *************** function i2_memcpy *****************
  7979 ;; Defined at:
  7980 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;  d1              2   44[COMRAM] PTR void 
  7983 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7984 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7985 ;;		 -> main@msgbuffer(11), 
  7986 ;;  s1              2   46[COMRAM] PTR const void 
  7987 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7988 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7989 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7990 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(28), 
  7991 ;;		 -> main@uc(5), 
  7992 ;;  n               2   48[COMRAM] unsigned int 
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;  memcpy          2   52[COMRAM] PTR const unsigned char 
  7995 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7996 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7997 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7998 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(28), 
  7999 ;;		 -> main@uc(5), 
  8000 ;;  memcpy          2   50[COMRAM] PTR unsigned char 
  8001 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8002 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8003 ;;		 -> main@msgbuffer(11), 
  8004 ;; Return value:  Size  Location     Type
  8005 ;;                  2   44[COMRAM] PTR void 
  8006 ;; Registers used:
  8007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8008 ;; Tracked objects:
  8009 ;;		On entry : 0/0
  8010 ;;		On exit  : 0/0
  8011 ;;		Unchanged: 0/0
  8012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8013 ;;      Params:         6       0       0       0       0
  8014 ;;      Locals:         4       0       0       0       0
  8015 ;;      Temps:          0       0       0       0       0
  8016 ;;      Totals:        10       0       0       0       0
  8017 ;;Total ram usage:       10 bytes
  8018 ;; Hardware stack levels used:    1
  8019 ;; This function calls:
  8020 ;;		Nothing
  8021 ;; This function is called by:
  8022 ;;		i2_send_msg
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026                           	psect	text50
  8027  00186C                     __ptext50:
  8028                           	opt stack 0
  8029  00186C                     i2_memcpy:
  8030                           	opt stack 17
  8031                           
  8032                           ;incstack = 0
  8033  00186C  C030  F036         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8034  001870  C02F  F035         	movff	i2memcpy@s1,i2memcpy@s
  8035  001874  C02E  F034         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8036  001878  C02D  F033         	movff	i2memcpy@d1,i2memcpy@d
  8037  00187C  D00E               	goto	i2l3319
  8038  00187E                     i2l3313:
  8039  00187E  C035  FFD9         	movff	i2memcpy@s,fsr2l
  8040  001882  C036  FFDA         	movff	i2memcpy@s+1,fsr2h
  8041  001886  C033  FFE1         	movff	i2memcpy@d,fsr1l
  8042  00188A  C034  FFE2         	movff	i2memcpy@d+1,fsr1h
  8043  00188E  CFDF FFE7          	movff	indf2,indf1
  8044  001892  4A35               	infsnz	i2memcpy@s,f,c
  8045  001894  2A36               	incf	i2memcpy@s+1,f,c
  8046  001896  4A33               	infsnz	i2memcpy@d,f,c
  8047  001898  2A34               	incf	i2memcpy@d+1,f,c
  8048  00189A                     i2l3319:
  8049  00189A  0631               	decf	i2memcpy@n,f,c
  8050  00189C  A0D8               	btfss	status,0,c
  8051  00189E  0632               	decf	i2memcpy@n+1,f,c
  8052  0018A0  2831               	incf	i2memcpy@n& (0+255),w,c
  8053  0018A2  B4D8               	btfsc	status,2,c
  8054  0018A4  2832               	incf	(i2memcpy@n+1)& (0+255),w,c
  8055  0018A6  B4D8               	btfsc	status,2,c
  8056                           
  8057                           ;	Return value of i2_memcpy is never used
  8058  0018A8  0012               	return	
  8059  0018AA  D7E9               	goto	i2l3313
  8060  0018AC                     __end_ofi2_memcpy:
  8061                           	opt stack 0
  8062                           pclatu	equ	0xFFB
  8063                           pclath	equ	0xFFA
  8064                           tblptru	equ	0xFF8
  8065                           tblptrh	equ	0xFF7
  8066                           tblptrl	equ	0xFF6
  8067                           tablat	equ	0xFF5
  8068                           prodh	equ	0xFF4
  8069                           prodl	equ	0xFF3
  8070                           intcon	equ	0xFF2
  8071                           postinc0	equ	0xFEE
  8072                           fsr0h	equ	0xFEA
  8073                           fsr0l	equ	0xFE9
  8074                           wreg	equ	0xFE8
  8075                           indf1	equ	0xFE7
  8076                           fsr1h	equ	0xFE2
  8077                           fsr1l	equ	0xFE1
  8078                           bsr	equ	0xFE0
  8079                           indf2	equ	0xFDF
  8080                           postinc2	equ	0xFDE
  8081                           postdec2	equ	0xFDD
  8082                           fsr2h	equ	0xFDA
  8083                           fsr2l	equ	0xFD9
  8084                           status	equ	0xFD8
  8085                           
  8086 ;; *************** function _SleepIfOkay *****************
  8087 ;; Defined at:
  8088 ;;		line 228 in file "../src/messages.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;		None
  8091 ;; Auto vars:     Size  Location     Type
  8092 ;;		None
  8093 ;; Return value:  Size  Location     Type
  8094 ;;		None               void
  8095 ;; Registers used:
  8096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8102 ;;      Params:         0       0       0       0       0
  8103 ;;      Locals:         0       0       0       0       0
  8104 ;;      Temps:          0       0       0       0       0
  8105 ;;      Totals:         0       0       0       0       0
  8106 ;;Total ram usage:        0 bytes
  8107 ;; Hardware stack levels used:    1
  8108 ;; Hardware stack levels required when called:    2
  8109 ;; This function calls:
  8110 ;;		_enter_sleep_mode
  8111 ;;		i2_check_msg
  8112 ;;		i2_in_high_int
  8113 ;;		i2_in_low_int
  8114 ;; This function is called by:
  8115 ;;		_InterruptHandlerHigh
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           	psect	text51
  8120  0016D0                     __ptext51:
  8121                           	opt stack 0
  8122  0016D0                     _SleepIfOkay:
  8123                           	opt stack 18
  8124                           
  8125                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8126                           
  8127                           ;incstack = 0
  8128  0016D0  6646               	tstfsz	_MQ_Main_Willing_to_block,c
  8129  0016D2  D001               	goto	i2l2303
  8130  0016D4  0012               	return	
  8131  0016D6                     i2l2303:
  8132                           
  8133                           ;messages.c: 232: }
  8134                           ;messages.c: 235: if (in_low_int()) {
  8135  0016D6  ECDE  F00C         	call	i2_in_low_int	;wreg free
  8136  0016DA  5030               	movf	?i2_in_low_int+1,w,c
  8137  0016DC  102F               	iorwf	?i2_in_low_int,w,c
  8138  0016DE  A4D8               	btfss	status,2,c
  8139  0016E0  0012               	return	
  8140                           
  8141                           ;messages.c: 237: }
  8142                           ;messages.c: 240: if (!in_high_int()) {
  8143                           
  8144                           ;messages.c: 236: return;
  8145  0016E2  ECCF  F00D         	call	i2_in_high_int	;wreg free
  8146  0016E6  502E               	movf	?i2_in_high_int+1,w,c
  8147  0016E8  102D               	iorwf	?i2_in_high_int,w,c
  8148  0016EA  B4D8               	btfsc	status,2,c
  8149  0016EC  0012               	return	
  8150                           
  8151                           ;messages.c: 242: }
  8152                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8153                           
  8154                           ;messages.c: 241: return;
  8155  0016EE  0101               	movlb	1	; () banked
  8156  0016F0  0E01               	movlw	high _ToMainHigh_MQ
  8157  0016F2  6E2E               	movwf	i2check_msg@qptr+1,c
  8158  0016F4  0101               	movlb	1	; () banked
  8159  0016F6  0E6C               	movlw	low _ToMainHigh_MQ
  8160  0016F8  6E2D               	movwf	i2check_msg@qptr,c
  8161  0016FA  EC44  F00D         	call	i2_check_msg	;wreg free
  8162  0016FE  0900               	iorlw	0
  8163  001700  A4D8               	btfss	status,2,c
  8164  001702  0012               	return	
  8165                           
  8166                           ;messages.c: 249: }
  8167                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8168                           
  8169                           ;messages.c: 248: return;
  8170  001704  0100               	movlb	0	; () banked
  8171  001706  0E00               	movlw	high _ToMainLow_MQ
  8172  001708  6E2E               	movwf	i2check_msg@qptr+1,c
  8173  00170A  0100               	movlb	0	; () banked
  8174  00170C  0E80               	movlw	low _ToMainLow_MQ
  8175  00170E  6E2D               	movwf	i2check_msg@qptr,c
  8176  001710  EC44  F00D         	call	i2_check_msg	;wreg free
  8177  001714  0900               	iorlw	0
  8178  001716  B4D8               	btfsc	status,2,c
  8179                           
  8180                           ;messages.c: 252: }
  8181                           ;messages.c: 253: enter_sleep_mode();
  8182                           
  8183                           ;messages.c: 251: return;
  8184  001718  ECD9  F00D         	call	_enter_sleep_mode	;wreg free
  8185  00171C  0012               	return	
  8186  00171E                     __end_of_SleepIfOkay:
  8187                           	opt stack 0
  8188                           pclatu	equ	0xFFB
  8189                           pclath	equ	0xFFA
  8190                           tblptru	equ	0xFF8
  8191                           tblptrh	equ	0xFF7
  8192                           tblptrl	equ	0xFF6
  8193                           tablat	equ	0xFF5
  8194                           prodh	equ	0xFF4
  8195                           prodl	equ	0xFF3
  8196                           intcon	equ	0xFF2
  8197                           postinc0	equ	0xFEE
  8198                           fsr0h	equ	0xFEA
  8199                           fsr0l	equ	0xFE9
  8200                           wreg	equ	0xFE8
  8201                           indf1	equ	0xFE7
  8202                           fsr1h	equ	0xFE2
  8203                           fsr1l	equ	0xFE1
  8204                           bsr	equ	0xFE0
  8205                           indf2	equ	0xFDF
  8206                           postinc2	equ	0xFDE
  8207                           postdec2	equ	0xFDD
  8208                           fsr2h	equ	0xFDA
  8209                           fsr2l	equ	0xFD9
  8210                           status	equ	0xFD8
  8211                           
  8212 ;; *************** function i2_in_low_int *****************
  8213 ;; Defined at:
  8214 ;;		line 32 in file "../src/interrupts.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;		None
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;		None
  8219 ;; Return value:  Size  Location     Type
  8220 ;;                  2   46[COMRAM] int 
  8221 ;; Registers used:
  8222 ;;		wreg, status,2, status,0, cstack
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8228 ;;      Params:         2       0       0       0       0
  8229 ;;      Locals:         0       0       0       0       0
  8230 ;;      Temps:          0       0       0       0       0
  8231 ;;      Totals:         2       0       0       0       0
  8232 ;;Total ram usage:        2 bytes
  8233 ;; Hardware stack levels used:    1
  8234 ;; Hardware stack levels required when called:    1
  8235 ;; This function calls:
  8236 ;;		i2_in_high_int
  8237 ;; This function is called by:
  8238 ;;		_SleepIfOkay
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           	psect	text52
  8243  0019BC                     __ptext52:
  8244                           	opt stack 0
  8245  0019BC                     i2_in_low_int:
  8246                           	opt stack 18
  8247                           
  8248                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  8249                           
  8250                           ;incstack = 0
  8251  0019BC  ACF2               	btfss	intcon,6,c	;volatile
  8252  0019BE  D005               	goto	i2l2781
  8253                           
  8254                           ;interrupts.c: 34: return (0);
  8255  0019C0  0E00               	movlw	0
  8256  0019C2  6E30               	movwf	?i2_in_low_int+1,c
  8257  0019C4  0E00               	movlw	0
  8258  0019C6  6E2F               	movwf	?i2_in_low_int,c
  8259  0019C8  0012               	return	
  8260  0019CA                     i2l2781:
  8261  0019CA  ECCF  F00D         	call	i2_in_high_int	;wreg free
  8262  0019CE  502E               	movf	?i2_in_high_int+1,w,c
  8263  0019D0  102D               	iorwf	?i2_in_high_int,w,c
  8264  0019D2  B4D8               	btfsc	status,2,c
  8265  0019D4  D005               	goto	i2l2789
  8266                           
  8267                           ;interrupts.c: 36: return (0);
  8268  0019D6  0E00               	movlw	0
  8269  0019D8  6E30               	movwf	?i2_in_low_int+1,c
  8270  0019DA  0E00               	movlw	0
  8271  0019DC  6E2F               	movwf	?i2_in_low_int,c
  8272  0019DE  0012               	return	
  8273  0019E0                     i2l2789:
  8274                           
  8275                           ;interrupts.c: 38: return (1);
  8276  0019E0  0E00               	movlw	0
  8277  0019E2  6E30               	movwf	?i2_in_low_int+1,c
  8278  0019E4  0E01               	movlw	1
  8279  0019E6  6E2F               	movwf	?i2_in_low_int,c
  8280  0019E8  0012               	return	
  8281  0019EA                     __end_ofi2_in_low_int:
  8282                           	opt stack 0
  8283                           pclatu	equ	0xFFB
  8284                           pclath	equ	0xFFA
  8285                           tblptru	equ	0xFF8
  8286                           tblptrh	equ	0xFF7
  8287                           tblptrl	equ	0xFF6
  8288                           tablat	equ	0xFF5
  8289                           prodh	equ	0xFF4
  8290                           prodl	equ	0xFF3
  8291                           intcon	equ	0xFF2
  8292                           postinc0	equ	0xFEE
  8293                           fsr0h	equ	0xFEA
  8294                           fsr0l	equ	0xFE9
  8295                           wreg	equ	0xFE8
  8296                           indf1	equ	0xFE7
  8297                           fsr1h	equ	0xFE2
  8298                           fsr1l	equ	0xFE1
  8299                           bsr	equ	0xFE0
  8300                           indf2	equ	0xFDF
  8301                           postinc2	equ	0xFDE
  8302                           postdec2	equ	0xFDD
  8303                           fsr2h	equ	0xFDA
  8304                           fsr2l	equ	0xFD9
  8305                           status	equ	0xFD8
  8306                           
  8307 ;; *************** function i2_in_high_int *****************
  8308 ;; Defined at:
  8309 ;;		line 24 in file "../src/interrupts.c"
  8310 ;; Parameters:    Size  Location     Type
  8311 ;;		None
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;		None
  8314 ;; Return value:  Size  Location     Type
  8315 ;;                  2   44[COMRAM] int 
  8316 ;; Registers used:
  8317 ;;		wreg, status,2
  8318 ;; Tracked objects:
  8319 ;;		On entry : 0/0
  8320 ;;		On exit  : 0/0
  8321 ;;		Unchanged: 0/0
  8322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8323 ;;      Params:         2       0       0       0       0
  8324 ;;      Locals:         0       0       0       0       0
  8325 ;;      Temps:          0       0       0       0       0
  8326 ;;      Totals:         2       0       0       0       0
  8327 ;;Total ram usage:        2 bytes
  8328 ;; Hardware stack levels used:    1
  8329 ;; This function calls:
  8330 ;;		Nothing
  8331 ;; This function is called by:
  8332 ;;		_SleepIfOkay
  8333 ;;		i2_in_low_int
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337                           	psect	text53
  8338  001B9E                     __ptext53:
  8339                           	opt stack 0
  8340  001B9E                     i2_in_high_int:
  8341                           	opt stack 18
  8342                           
  8343                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  8344                           
  8345                           ;incstack = 0
  8346  001B9E  0E00               	movlw	0
  8347  001BA0  AEF2               	btfss	intcon,7,c	;volatile
  8348  001BA2  0E01               	movlw	1
  8349  001BA4  6E2D               	movwf	?i2_in_high_int,c
  8350  001BA6  6A2E               	clrf	?i2_in_high_int+1,c
  8351  001BA8  0012               	return	
  8352  001BAA                     __end_ofi2_in_high_int:
  8353                           	opt stack 0
  8354                           pclatu	equ	0xFFB
  8355                           pclath	equ	0xFFA
  8356                           tblptru	equ	0xFF8
  8357                           tblptrh	equ	0xFF7
  8358                           tblptrl	equ	0xFF6
  8359                           tablat	equ	0xFF5
  8360                           prodh	equ	0xFF4
  8361                           prodl	equ	0xFF3
  8362                           intcon	equ	0xFF2
  8363                           postinc0	equ	0xFEE
  8364                           fsr0h	equ	0xFEA
  8365                           fsr0l	equ	0xFE9
  8366                           wreg	equ	0xFE8
  8367                           indf1	equ	0xFE7
  8368                           fsr1h	equ	0xFE2
  8369                           fsr1l	equ	0xFE1
  8370                           bsr	equ	0xFE0
  8371                           indf2	equ	0xFDF
  8372                           postinc2	equ	0xFDE
  8373                           postdec2	equ	0xFDD
  8374                           fsr2h	equ	0xFDA
  8375                           fsr2l	equ	0xFD9
  8376                           status	equ	0xFD8
  8377                           
  8378 ;; *************** function i2_check_msg *****************
  8379 ;; Defined at:
  8380 ;;		line 222 in file "../src/messages.c"
  8381 ;; Parameters:    Size  Location     Type
  8382 ;;  qptr            2   44[COMRAM] PTR struct __msg_queue
  8383 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;		None
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  1    wreg      unsigned char 
  8388 ;; Registers used:
  8389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8395 ;;      Params:         2       0       0       0       0
  8396 ;;      Locals:         0       0       0       0       0
  8397 ;;      Temps:          1       0       0       0       0
  8398 ;;      Totals:         3       0       0       0       0
  8399 ;;Total ram usage:        3 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; This function calls:
  8402 ;;		Nothing
  8403 ;; This function is called by:
  8404 ;;		_SleepIfOkay
  8405 ;; This function uses a non-reentrant model
  8406 ;;
  8407                           
  8408                           	psect	text54
  8409  001A88                     __ptext54:
  8410                           	opt stack 0
  8411  001A88                     i2_check_msg:
  8412                           	opt stack 19
  8413                           
  8414                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8415                           
  8416                           ;incstack = 0
  8417  001A88  EE20 F035          	lfsr	2,53
  8418  001A8C  502D               	movf	i2check_msg@qptr,w,c
  8419  001A8E  26D9               	addwf	fsr2l,f,c
  8420  001A90  502E               	movf	i2check_msg@qptr+1,w,c
  8421  001A92  22DA               	addwfc	fsr2h,f,c
  8422  001A94  50DF               	movf	indf2,w,c
  8423  001A96  6E2F               	movwf	??i2_check_msg& (0+255),c
  8424  001A98  502F               	movf	??i2_check_msg,w,c
  8425  001A9A  0D0D               	mullw	13
  8426  001A9C  50F3               	movf	prodl,w,c
  8427  001A9E  242D               	addwf	i2check_msg@qptr,w,c
  8428  001AA0  6ED9               	movwf	fsr2l,c
  8429  001AA2  50F4               	movf	prodh,w,c
  8430  001AA4  202E               	addwfc	i2check_msg@qptr+1,w,c
  8431  001AA6  6EDA               	movwf	fsr2h,c
  8432  001AA8  50DF               	movf	indf2,w,c
  8433  001AAA  0012               	return	
  8434  001AAC                     __end_ofi2_check_msg:
  8435                           	opt stack 0
  8436                           pclatu	equ	0xFFB
  8437                           pclath	equ	0xFFA
  8438                           tblptru	equ	0xFF8
  8439                           tblptrh	equ	0xFF7
  8440                           tblptrl	equ	0xFF6
  8441                           tablat	equ	0xFF5
  8442                           prodh	equ	0xFF4
  8443                           prodl	equ	0xFF3
  8444                           intcon	equ	0xFF2
  8445                           postinc0	equ	0xFEE
  8446                           fsr0h	equ	0xFEA
  8447                           fsr0l	equ	0xFE9
  8448                           wreg	equ	0xFE8
  8449                           indf1	equ	0xFE7
  8450                           fsr1h	equ	0xFE2
  8451                           fsr1l	equ	0xFE1
  8452                           bsr	equ	0xFE0
  8453                           indf2	equ	0xFDF
  8454                           postinc2	equ	0xFDE
  8455                           postdec2	equ	0xFDD
  8456                           fsr2h	equ	0xFDA
  8457                           fsr2l	equ	0xFD9
  8458                           status	equ	0xFD8
  8459                           
  8460 ;; *************** function _enter_sleep_mode *****************
  8461 ;; Defined at:
  8462 ;;		line 202 in file "../src/messages.c"
  8463 ;; Parameters:    Size  Location     Type
  8464 ;;		None
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;		None
  8467 ;; Return value:  Size  Location     Type
  8468 ;;		None               void
  8469 ;; Registers used:
  8470 ;;		None
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8476 ;;      Params:         0       0       0       0       0
  8477 ;;      Locals:         0       0       0       0       0
  8478 ;;      Temps:          0       0       0       0       0
  8479 ;;      Totals:         0       0       0       0       0
  8480 ;;Total ram usage:        0 bytes
  8481 ;; Hardware stack levels used:    1
  8482 ;; This function calls:
  8483 ;;		Nothing
  8484 ;; This function is called by:
  8485 ;;		_SleepIfOkay
  8486 ;; This function uses a non-reentrant model
  8487 ;;
  8488                           
  8489                           	psect	text55
  8490  001BB2                     __ptext55:
  8491                           	opt stack 0
  8492  001BB2                     _enter_sleep_mode:
  8493                           	opt stack 19
  8494                           
  8495                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8496                           
  8497                           ;incstack = 0
  8498  001BB2  8ED3               	bsf	4051,7,c	;volatile
  8499  001BB4  0003               	sleep		;# 
  8500  001BB6  0012               	return	
  8501  001BB8                     __end_of_enter_sleep_mode:
  8502                           	opt stack 0
  8503  0000                     pclatu	equ	0xFFB
  8504                           pclath	equ	0xFFA
  8505                           tblptru	equ	0xFF8
  8506                           tblptrh	equ	0xFF7
  8507                           tblptrl	equ	0xFF6
  8508                           tablat	equ	0xFF5
  8509                           prodh	equ	0xFF4
  8510                           prodl	equ	0xFF3
  8511                           intcon	equ	0xFF2
  8512                           postinc0	equ	0xFEE
  8513                           fsr0h	equ	0xFEA
  8514                           fsr0l	equ	0xFE9
  8515                           wreg	equ	0xFE8
  8516                           indf1	equ	0xFE7
  8517                           fsr1h	equ	0xFE2
  8518                           fsr1l	equ	0xFE1
  8519                           bsr	equ	0xFE0
  8520                           indf2	equ	0xFDF
  8521                           postinc2	equ	0xFDE
  8522                           postdec2	equ	0xFDD
  8523                           fsr2h	equ	0xFDA
  8524                           fsr2l	equ	0xFD9
  8525                           status	equ	0xFD8
  8526                           pclatu	equ	0xFFB
  8527                           pclath	equ	0xFFA
  8528                           tblptru	equ	0xFF8
  8529                           tblptrh	equ	0xFF7
  8530                           tblptrl	equ	0xFF6
  8531                           tablat	equ	0xFF5
  8532                           prodh	equ	0xFF4
  8533                           prodl	equ	0xFF3
  8534                           intcon	equ	0xFF2
  8535                           postinc0	equ	0xFEE
  8536                           fsr0h	equ	0xFEA
  8537                           fsr0l	equ	0xFE9
  8538                           wreg	equ	0xFE8
  8539                           indf1	equ	0xFE7
  8540                           fsr1h	equ	0xFE2
  8541                           fsr1l	equ	0xFE1
  8542                           bsr	equ	0xFE0
  8543                           indf2	equ	0xFDF
  8544                           postinc2	equ	0xFDE
  8545                           postdec2	equ	0xFDD
  8546                           fsr2h	equ	0xFDA
  8547                           fsr2l	equ	0xFD9
  8548                           status	equ	0xFD8
  8549                           
  8550                           	psect	rparam
  8551  0000                     pclatu	equ	0xFFB
  8552                           pclath	equ	0xFFA
  8553                           tblptru	equ	0xFF8
  8554                           tblptrh	equ	0xFF7
  8555                           tblptrl	equ	0xFF6
  8556                           tablat	equ	0xFF5
  8557                           prodh	equ	0xFF4
  8558                           prodl	equ	0xFF3
  8559                           intcon	equ	0xFF2
  8560                           postinc0	equ	0xFEE
  8561                           fsr0h	equ	0xFEA
  8562                           fsr0l	equ	0xFE9
  8563                           wreg	equ	0xFE8
  8564                           indf1	equ	0xFE7
  8565                           fsr1h	equ	0xFE2
  8566                           fsr1l	equ	0xFE1
  8567                           bsr	equ	0xFE0
  8568                           indf2	equ	0xFDF
  8569                           postinc2	equ	0xFDE
  8570                           postdec2	equ	0xFDD
  8571                           fsr2h	equ	0xFDA
  8572                           fsr2l	equ	0xFD9
  8573                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         228
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     69      83
    BANK0           128     42      98
    BANK1           256     79     241
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    timer1_int_handler@adcbuffer	PTR unsigned char  size(2) Largest target is 10
		 -> adcbuffer(COMRAM[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), 
		 -> main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), 
		 -> main@uc(BANK1[5]), 

    timer0_int_handler@adcbuffer	PTR unsigned char  size(2) Largest target is 10
		 -> adcbuffer(COMRAM[10]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    i2c_int_handler@adcbuffer	PTR unsigned char  size(2) Largest target is 10
		 -> adcbuffer(COMRAM[10]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), adcbuffer(COMRAM[10]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), 
		 -> main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_WriteTimer0
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_ToMainHigh_sendmsg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0   11071
                                             24 BANK1     55    55      0
                            _BusyADC
                         _ConvertADC
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     300
                                             30 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2710
                                             14 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             30 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2021
                                             41 BANK0      1     1      0
                                             11 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1798
                                             40 BANK0      1     1      0
                                              0 BANK1     11     5      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             30 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     146
                                             30 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                             30 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             30 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             34 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             30 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             30 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             30 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             36 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             34 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             32 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             30 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             30 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             30 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2332
                                             12 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2332
                                             12 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2109
                                             40 BANK0      2     2      0
                                              0 BANK1     12     5      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             30 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      22
                                             30 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                             30 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             30 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             30 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     260
                                             30 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    2375
                                             27 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2244
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2221
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1943
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     0      2     131
                                              4 COMRAM     2     0      2
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    4266
                                             16 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     4      2     296
                                             48 COMRAM     6     4      2
                        _WriteTimer0
                          i2_BusyADC
                       i2_ConvertADC
 ---------------------------------------------------------------------------------
 (12) i2_ConvertADC                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_BusyADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      88
                                             44 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    15    13      2    3734
                                              1 BANK0     15    13      2
                 _ToMainHigh_sendmsg
                       _handle_start
            i2_start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (12) i2_start_i2c_slave_reply                             5     3      2     264
                                             44 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      22
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    2700
                                             66 COMRAM     3     0      3
                                              0 BANK0      1     1      0
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2347
                                             54 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     796
                                             44 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             46 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             44 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConvertADC
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
     i2_start_i2c_slave_reply
   _timer0_int_handler
     _WriteTimer0
     i2_BusyADC
     i2_ConvertADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     4F      F1       6       94.1%
BITBANK0            80      0       0       3        0.0%
BANK0               80     2A      62       4       76.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     45      53       1       65.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A6      11        0.0%
DATA                 0      0     1A6      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Feb 10 17:07:00 2014

                main@uthread_data 01C7          _MQ_Main_Willing_to_block 0046  
                     _SSPSTATbits 000FC7         __end_of_ToMainLow_recvmsg 17EA  
                              bsr 000FE0         __end_of_ToMainLow_sendmsg 1A62  
                    __CFG_CP0$OFF 000000                               l122 0886  
                             l420 142C                               l500 12C4  
                             l440 1A10                               l504 12E4  
                             l505 12E6                               l506 12F4  
                             l507 12F6                               l439 1A0E  
                             l463 1904                               l465 191C  
                             l466 191E                               l733 1B0C  
            __size_of_WriteTimer0 0012              __size_of_WriteTimer1 0012  
                  _FromMainLow_MQ 0136                               wreg 000FE8  
                    __CFG_IESO$ON 000000                      ?_in_high_int 00D4  
                ??_init_uart_recv 00D6                              l1045 13A2  
                            l2131 1798                              l2117 1754  
                            l2109 1732                              l3211 1694  
                            l3131 0834                              l3123 07F2  
                            l3141 08BC                              l3133 088C  
                            l2503 12C6                              l3231 0AB6  
                            l3143 08DA                              l3217 16B8  
                            l3161 098C                              l3137 08A0  
                            l3153 0930                              l3163 09DE  
                            l3147 08F8                              l3155 094E  
                            l2621 14F6                              l3149 0910  
                            l2455 1906                              l3247 0B7C  
                            l3167 0A30                              l2561 147A  
                            l2555 144E                              l3283 138E  
                            l3275 1340                              l3197 0CEA  
                            l3277 1352                              l2495 12B0  
                            l2567 14A6                              l2583 0B9C  
                            l3279 135A                              l2587 0C20  
                            _LATA 000F89                              _LATB 000F8A  
                            u1630 1B8E                              u2387 1B0E  
                            i1l51 0078                   _FromMainHigh_MQ 0100  
                   __CFG_FCMEN$ON 000000            ?_block_on_To_msgqueues 0001  
                            _main 072E                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                       main@msgtype 01D3  
                      i1_send_msg 1002                              pclat 000FFA  
             timer0_int_handler@i 0035                       i2_check_msg 1A88  
                            prodh 000FF4                              prodl 000FF3  
           handle_start@data_read 002D                              start 00BE  
                   __CFG_FOSC2$ON 000000                        i2_send_msg 10AC  
       ToMainHigh_recvmsg@msgtype 01AE                   __end_of_BusyADC 1B92  
                  send_msg@length 01A4     i2start_i2c_slave_reply@length 0031  
                 __end_of_OpenADC 1430       __size_of_timer0_int_handler 00B4  
                     _Delay1KTCYx 1B08                             ?_main 0001  
                           _T0CON 000FD5                             _T1CON 000FCD  
                 __end_of___lwmod 13AC                        i1memcpy@d1 0001  
                           i2l310 0496                             i2l302 035E  
                           i1l518 1AF8                             i2l316 0536  
                           i2l272 0F02                             i2l282 0524  
                           i2l284 018A                             i2l288 01CE  
                      i1memcpy@s1 0003                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR1H 000FCF                             _TMR0L 000FD6  
                           _TMR1L 000FCE                             _SPBRG 000FAF  
                           _PORTA 000F80                             _TRISA 000F92  
                           _TRISB 000F93                             _TXSTA 000FAC  
                      i2memcpy@d1 002D                        i2memcpy@s1 002F  
                    ?_init_queues 0001         __size_of_enter_sleep_mode 0006  
                 __end_of_in_main 17A8                __size_ofi2_BusyADC 000C  
      ToMainLow_recvmsg@maxlength 01B2           timer0_lthread@msgbuffer 00DA  
                      _ConvertADC 1BB8           i2c_configure_slave@addr 00D4  
                           tablat 000FF5                             status 000FD8  
                __end_ofi1_memcpy 186C                  __end_ofi2_memcpy 18AC  
                 __initialization 198E                      __end_of_main 0A4A  
     __size_of_timer1_int_handler 000E        __size_of_ToMainLow_recvmsg 0042  
      __size_of_ToMainLow_sendmsg 0026             __size_ofi2_in_low_int 002E  
   __size_of_FromMainHigh_sendmsg 0036                            ??_main 01BA  
                 send_msg@msgtype 01A5                     __activetblptr 000002  
                 send_msg@tlength 01A8                        _SetChanADC 1AAC  
            __end_of_handle_start 0F4E                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
                          _ADRESH 000FC4           ??_uart_recv_int_handler 001B  
                          i1l2841 185A                            i1l2905 006E  
                          i2l3011 0414                            i1l2835 183E  
                          i2l1341 0F5E                            i2l2303 16D6  
                          i2l3015 0426                            i2l3009 03D2  
                          i1l2865 103A                            i2l3043 053A  
                          i2l1347 0F96                            i2l3037 04F8  
                          i1l2893 1270                            i2l1359 0FE0  
                          i2l3313 187E                            i2l3073 06FA  
                          i2l3065 06C6                            i2l3057 062C  
                          i2l3049 059A                        _OpenTimer0 19EA  
                      _OpenTimer1 18EA                    __CFG_WDTEN$OFF 000000  
                          i2l3319 189A                            i2l2733 0F1E  
                          i2l2735 0F36                            i2l2823 0DAE  
                          i2l3299 10E4                            i2l2827 0E22  
                          i2l2781 19CA                            i2l2943 0168  
                          i2l2927 11B6                            i2l2919 11A0  
                          i2l2789 19E0                            i2l2949 0180  
                          i2l2967 0206                            i2l2985 0286  
                          i2l2969 0232                            i2l2987 02C6  
                          i2l2979 026E       __end_of_i2c_configure_slave 1A3C  
                   ??_SleepIfOkay 0031                __size_of_ReadUSART 001E  
                          _OSCCON 000FD3                            _SPBRGH 000FB0  
                          _SSPADD 000FC8                            _SSPBUF 000FC9  
                       ??_BusyADC 00D4    __size_of_start_i2c_slave_reply 010E  
                     ?i1_send_msg 000B     __end_of_start_i2c_slave_reply 0C8E  
              timer0_lthread@tptr 00D4                         ??_OpenADC 00D6  
                    i2_in_low_int 19BC                       ?i2_send_msg 0037  
                  __CFG_XINST$OFF 000000                __size_of_OpenUSART 0092  
                 _i2c_int_handler 00C2                 __end_ofi2_BusyADC 1B9E  
                OpenTimer0@config 00D4                            _ic_ptr 00E0  
                       ??___lwmod 00D8                     main@msgbuffer 01BC  
                __end_of_init_i2c 1672                  OpenTimer1@config 00D4  
                          _memcpy 1672                            clear_0 1994  
                          clear_1 19A0                            clear_2 19AC  
                          _uc_ptr 0052                            main@ic 01D5  
                          main@uc 01CC                  __end_of_recv_msg 0B80  
     start_i2c_slave_reply@length 00D8                         ??_in_main 00DA  
                __end_of_send_msg 0D92           i2c_int_handler@i2c_data 00C2  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                       init_queue@i 00D7  
        ?i2_start_i2c_slave_reply 002D          ToMainLow_recvmsg@msgtype 01AE  
     timer0_int_handler@adcbuffer 0031              __size_of_in_high_int 0012  
                     ?_ConvertADC 0001                   __CFG_FOSC$HSPLL 000000  
                      __accesstop 0080           __end_of__initialization 19B2  
      __end_of_ToMainHigh_recvmsg 182C        __end_of_ToMainHigh_sendmsg 1A88  
     __end_of_init_timer1_lthread 1B42               __end_of_SleepIfOkay 171E  
                  __pcstackCOMRAM 0001            __size_ofi2_in_high_int 000C  
              __size_of_check_msg 0036                 __end_of_ReadUSART 1B08  
                     ?_SetChanADC 0001               __size_ofi1_send_msg 00AA  
                       ?i1_memcpy 0001     __size_of_InterruptHandlerHigh 11EC  
     __end_of_InterruptHandlerLow 00BE                         ?i2_memcpy 002D  
                   _ToMainHigh_MQ 016C                  _enter_sleep_mode 1BB2  
             __size_ofi2_send_msg 00AA              timer1_lthread@length 01B4  
                   ReadUSART@data 0001                 __end_of_OpenUSART 1322  
                   check_msg@qptr 00D4              timer1_lthread@retval 01B9  
         ??_block_on_To_msgqueues 00DA              __size_of_init_queues 006E  
                      __pbssBANK0 0080                        __pbssBANK1 0100  
                     ?_OpenTimer0 0001                       ?_OpenTimer1 0001  
                      __pnvCOMRAM 0052           __end_of_i2c_int_handler 072E  
                    ?i2_check_msg 002D                timer1_lthread@tptr 01B0  
               recv_msg@maxlength 01A4                   recv_msg@msgtype 01A5  
                 recv_msg@tlength 01AA             __size_of_handle_start 00C8  
                    ?_Delay1KTCYx 0001                  WriteTimer0@timer 002F  
                         ?_memcpy 00D4                  WriteTimer1@timer 0003  
                   ??_WriteTimer0 002F                     ??_WriteTimer1 0003  
             __size_of_ConvertADC 0004           __size_of_timer0_lthread 0012  
         __size_of_timer1_lthread 0072   __end_ofi2_start_i2c_slave_reply 0E86  
                      ??i1_memcpy 0007                        ??i2_memcpy 0033  
      i2start_i2c_slave_reply@msg 002D                  i1send_msg@length 000D  
                         i2u93_40 1B9A                     i2_in_high_int 1B9E  
                         _SSPCON1 000FC6                           _SSPCON2 000FC5  
                         _SSPSTAT 000FC7                 __end_of_check_msg 198E  
                       ?_init_i2c 00D4                       _SleepIfOkay 16D0  
                         _BusyADC 1B86                         ?_recv_msg 01A2  
                         _OpenADC 13AC                        _in_low_int 171E  
                    _handle_start 0E86                           __Hparam 0000  
             __size_of_SetChanADC 0020                         ?_send_msg 01A2  
                         __Lparam 0000        __end_of_timer0_int_handler 1002  
                init_uart_recv@uc 00D4                           ___lwmod 1322  
                 __CFG_STVREN$OFF 000000                           __pcinit 198E  
                 __size_of_memcpy 005E                        _init_queue 14AE  
                         __ramtop 0400               __size_of_OpenTimer0 002A  
             __size_of_OpenTimer1 0038                           __ptext0 072E  
                         __ptext1 18AC                           __ptext2 1528  
                         __ptext3 1322                           __ptext4 1922  
                         __ptext5 0C8E                           __ptext6 1B1E  
                         __ptext7 0B80                           __ptext8 1ACC  
                         __ptext9 1B30                         _T0CONbits 000FD5  
                         _in_main 1764                         _T1CONbits 000FCD  
             __end_of_WriteTimer0 1B78               __end_of_WriteTimer1 1B66  
                  ?i2_in_high_int 002D                    OpenADC@config2 00D4  
                  __pintcode_body 1156              end_of_initialization 19B2  
         timer1_lthread@msgbuffer 01B6      __end_of_FromMainHigh_sendmsg 1958  
                   ?i2_ConvertADC 0001    __size_of_uart_recv_int_handler 009C  
      FromMainHigh_sendmsg@length 00DF                           memcpy@d 00DA  
                         memcpy@n 00D8                           memcpy@s 00DC  
   __end_of_uart_recv_int_handler 1290                        ??_init_i2c 00D6  
     i2c_int_handler@data_written 00C0                     __Lmediumconst 0000  
                         int_func 1156                      ??i1_send_msg 0011  
                   ?_uart_lthread 00D4           __size_of_init_uart_recv 001E  
                ?_i2c_int_handler 00B7                        ??_recv_msg 00DE  
                    ??i2_send_msg 003D                        ??_send_msg 00DE  
      __end_of_timer1_int_handler 1B86                         _RCSTAbits 000FAB  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE         ToMainHigh_sendmsg@msgtype 0043  
                       i2_BusyADC 1B92                __end_ofi1_send_msg 10AC  
     FromMainHigh_sendmsg@msgtype 01AD                         _TRISCbits 000F94  
              __end_ofi2_send_msg 1156                    ??i2_ConvertADC 002D  
                    ??_ConvertADC 00D4                    ??_uart_lthread 00DC  
                       _TXSTAbits 000FAC                        main@length 01D4  
                     ?_in_low_int 00D6             timer0_lthread@msgtype 00D6  
__size_ofi2_start_i2c_slave_reply 00F4             _start_i2c_slave_reply 0B80  
    __size_of_i2c_configure_slave 0028              __size_ofi2_check_msg 0024  
        __end_of_enter_sleep_mode 1BB8          i2c_int_handler@adcbuffer 00B7  
              _ToMainHigh_recvmsg 17EA                         i1memcpy@d 0007  
              _ToMainHigh_sendmsg 1A62                         i1memcpy@n 0005  
                       i1memcpy@s 0009                    _timer0_lthread 1B1E  
                     ?_init_queue 00D4                         i2memcpy@d 0033  
                     _WriteTimer0 1B66                       _WriteTimer1 1B54  
                       i2memcpy@n 0031                         i2memcpy@s 0035  
              __end_of_ConvertADC 1BBC                    _timer1_lthread 1528  
                  __end_of_memcpy 16D0                 _enable_interrupts 1BAA  
                      ?i2_BusyADC 0001              __size_of_Delay1KTCYx 0016  
                    ??_SetChanADC 00D4               ?_ToMainHigh_recvmsg 01AE  
                 ??i2_in_high_int 002F          i2c_int_handler@data_read 00C5  
             ?_ToMainHigh_sendmsg 0043                ?_enable_interrupts 0001  
             start_initialization 198E                     ??_in_high_int 00D6  
                       _ReadUSART 1AEA                 __size_ofi1_memcpy 0040  
               __size_ofi2_memcpy 0040             i2c_int_handler@length 00BB  
     timer1_int_handler@adcbuffer 0005               ??_enable_interrupts 00D4  
                    ??_OpenTimer0 00D4                      ??_OpenTimer1 00D4  
  __size_of_block_on_To_msgqueues 007E     __end_of_block_on_To_msgqueues 14AE  
                       _OpenUSART 1290      __end_of_InterruptHandlerHigh 11F4  
                      init_i2c@ic 00D4              ??_ToMainHigh_recvmsg 00E0  
            ??_ToMainHigh_sendmsg 0046                __end_of_SetChanADC 1ACC  
          __end_of_timer0_lthread 1B30          i2c_int_handler@error_buf 00BD  
          __end_of_timer1_lthread 159A         __end_of_enable_interrupts 1BB2  
                        ??_memcpy 00DA             timer1_lthread@msgtype 01B2  
            _FromMainHigh_sendmsg 1922      __size_of_init_timer1_lthread 0012  
              __end_of_OpenTimer0 1A14                __end_of_OpenTimer1 1922  
        i2c_int_handler@msg_ready 00C4                       __pbssCOMRAM 0046  
                      ?_ReadUSART 0001                     ??_init_queues 00D8  
                   __pcstackBANK0 00B6                     __pcstackBANK1 01A2  
             __size_of_in_low_int 0046          start_i2c_slave_reply@msg 00D4  
                       _adcbuffer 0048               __CFG_CCP2MX$DEFAULT 000000  
                 Delay1KTCYx@unit 00D4          ToMainLow_sendmsg@msgtype 0017  
    __size_of_InterruptHandlerLow 00A6               __end_of_in_high_int 1B54  
                      ?_OpenUSART 00D4                      ?_SleepIfOkay 0001  
           ToMainLow_recvmsg@data 01B0                      _ToMainLow_MQ 0080  
             __size_of_init_queue 007A                          ?_BusyADC 0001  
                  _init_uart_recv 1ACC                         _check_msg 1958  
                       __pnvBANK0 00E0            ?_start_i2c_slave_reply 00D4  
               __size_of_init_i2c 006A                 OpenADC@portconfig 00D5  
                        ?_OpenADC 00D4                      recv_msg@data 01A7  
                    recv_msg@qmsg 01AC                      recv_msg@slot 01A9  
                    recv_msg@qptr 01A2                 __size_of_recv_msg 0136  
                       __pintcode 0008                 __size_of_send_msg 0104  
                 ?_timer0_lthread 00D4                          ?___lwmod 00D4  
            __end_ofi2_ConvertADC 1BC0                   ?_timer1_lthread 01B0  
           ?_FromMainHigh_sendmsg 01AD                       __pintcodelo 0018  
          ToMainHigh_recvmsg@data 01B0                       ??i2_BusyADC 002D  
            __end_of_uart_lthread 18EA        i2c_int_handler@msg_to_send 00C3  
                        ?_in_main 00D8                 WriteTimer0@timer0 002D  
              _timer0_int_handler 0F4E                 WriteTimer1@timer1 0001  
             uart_lthread@msgtype 00D6             ToMainLow_sendmsg@data 0018  
             ?_timer0_int_handler 0031                  uart_lthread@uptr 00D4  
          __end_of_init_uart_recv 1AEA               __end_of_init_queues 1608  
                   OpenADC@config 00D8                          _LATBbits 000F8A  
                 i2check_msg@qptr 002D                        ?_check_msg 00D4  
                        _IPR1bits 000F9F                          _PIE1bits 000F9D  
         i2_start_i2c_slave_reply 0D92                     ?i2_in_low_int 002F  
                        _PIR1bits 000F9E            ToMainHigh_sendmsg@data 0044  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
            ??_timer0_int_handler 0033        __size_of_enable_interrupts 0008  
               i1send_msg@msgtype 000E                 i1send_msg@tlength 0012  
                      _ADCON0bits 000FC2              timer0_lthread@length 00D8  
              _timer1_int_handler 1B78                          i1_memcpy 182C  
            _InterruptHandlerHigh 0008                       ??_ReadUSART 0001  
                        i2_memcpy 186C              timer0_lthread@msgval 00DC  
                     _in_high_int 1B42                      send_msg@data 01A6  
             _i2c_configure_slave 1A14                      send_msg@qmsg 01AB  
                    send_msg@slot 01AA                      send_msg@qptr 01A2  
           uart_lthread@msgbuffer 00DA               ?_timer1_int_handler 0005  
                 ?_init_uart_recv 00D4                       ??_OpenUSART 00D6  
                 OpenUSART@config 00D9                    ??i2_in_low_int 0031  
           _uart_recv_int_handler 11F4                      ??_in_low_int 00D8  
                __size_of_BusyADC 000C                          __Hrparam 0000  
                __size_of_OpenADC 0084              ?_i2c_configure_slave 0001  
                        __Lrparam 0000                 ?_enter_sleep_mode 0001  
          ??_FromMainHigh_sendmsg 00DF              ??_timer1_int_handler 0007  
        __size_of_i2c_int_handler 066C                ??_enter_sleep_mode 002D  
                __size_of___lwmod 008A                      ??_init_queue 00D6  
                    ?_WriteTimer0 002D                      ?_WriteTimer1 0001  
        FromMainHigh_sendmsg@data 01AE           ToMainLow_sendmsg@length 001A  
               main@t0thread_data 01C9             ?_InterruptHandlerHigh 0001  
                __size_of_in_main 0044                 i2send_msg@msgtype 003A  
     ToMainHigh_recvmsg@maxlength 01B2                 i2send_msg@tlength 003E  
         init_timer1_lthread@tptr 00D4                       _init_queues 159A  
              __end_of_in_low_int 1764                          __ptext10 159A  
                        __ptext11 14AE                          __ptext20 1B08  
                        __ptext12 1608                          __ptext21 17A8  
                        __ptext13 1A14                          __ptext30 1BB8  
                        __ptext22 17EA                          __ptext14 1BAA  
                        __ptext31 1B86                          __ptext23 0A4A  
                        __ptext15 1430                          __ptext24 1672  
                        __ptext16 1764                          __ptext41 0F4E  
                        __ptext33 11F4                          __ptext25 1AAC  
                        __ptext17 171E                          __ptext50 186C  
                        __ptext42 1BBC                          __ptext34 1A3C  
                        __ptext26 1290                          __ptext18 1B42  
                        __ptext51 16D0                          __ptext43 1B92  
                        __ptext35 1002                          __ptext27 18EA  
                        __ptext19 1958                          __ptext52 19BC  
                        __ptext44 1B66                          __ptext36 182C  
                        __ptext28 19EA                          __ptext53 1B9E  
                        __ptext45 00C2                          __ptext37 1AEA  
                        __ptext29 13AC                          __ptext54 1A88  
                        __ptext46 0D92                          __ptext38 1B78  
                        __ptext55 1BB2                          __ptext47 0E86  
                        __ptext39 1B54                          __ptext48 1A62  
                        __ptext49 10AC                    i1send_msg@data 000F  
                  i1send_msg@qmsg 0015                    i1send_msg@slot 0014  
                  i1send_msg@qptr 000B                uart_lthread@length 00D8  
       ??i2_start_i2c_slave_reply 002F                          _init_i2c 1608  
             _init_timer1_lthread 1B30                     __size_of_main 031C  
                   ??i2_check_msg 002F                 main@t1thread_data 01D1  
                     ??_check_msg 00D6                __end_of_init_queue 1528  
            __size_of_SleepIfOkay 004E                          _recv_msg 0A4A  
           ??_i2c_configure_slave 00D4             __size_ofi2_ConvertADC 0004  
                        _send_msg 0C8E                    init_queue@qptr 00D4  
           __size_of_uart_lthread 003E                     ??_Delay1KTCYx 00D4  
             _InterruptHandlerLow 0018              ?_init_timer1_lthread 00D4  
                     _OSCTUNEbits 000F9B                        _INTCONbits 000FF2  
                  OpenUSART@spbrg 00D4                          memcpy@d1 00D4  
                        memcpy@s1 00D6             __end_ofi2_in_high_int 1BAA  
    i2c_int_handler@overrun_error 00C1                  i2send_msg@length 0039  
                        intlevel1 0000                          intlevel2 0000  
                    i2_ConvertADC 1BBC              ?_InterruptHandlerLow 0001  
         ??_start_i2c_slave_reply 00D6                  ___lwmod@dividend 00D4  
          ?_uart_recv_int_handler 0001                      _uart_lthread 18AC  
               SetChanADC@channel 00D5             _block_on_To_msgqueues 1430  
                   ?_handle_start 0001                  ??_timer0_lthread 00DC  
     __size_of_ToMainHigh_recvmsg 0042       __size_of_ToMainHigh_sendmsg 0026  
                      _OSCCONbits 000FD3                  ??_timer1_lthread 01B8  
        ToMainHigh_sendmsg@length 00B6               __end_ofi2_check_msg 1AAC  
           ??_init_timer1_lthread 00D6            ??_InterruptHandlerHigh 00C6  
               _ToMainLow_recvmsg 17A8                 _ToMainLow_sendmsg 1A3C  
              main@last_reg_recvd 01CB                   ___lwmod@divisor 00D6  
            __end_ofi2_in_low_int 19EA                ?_ToMainLow_recvmsg 01AE  
             __end_of_Delay1KTCYx 1B1E                 ??_i2c_int_handler 00B9  
                 ___lwmod@counter 00D9                ?_ToMainLow_sendmsg 0017  
                     _SSPCON1bits 000FC6                       _SSPCON2bits 000FC5  
                  i2send_msg@data 003B             ??_InterruptHandlerLow 001C  
             ??_ToMainLow_recvmsg 00E0                    i2send_msg@qmsg 0041  
                  i2send_msg@slot 0040                    i2send_msg@qptr 0037  
             ??_ToMainLow_sendmsg 001A                    ??_handle_start 002D  
                    _USART_Status 0047  
